; ModuleID = 'blender/source/blender/render/intern/source/pipeline.c'
source_filename = "blender/source/blender/render/intern/source/pipeline.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.anon.0 = type { %struct.ListBase }
%struct.ListBase = type { i8*, i8* }
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.Render = type { %struct.Render*, %struct.Render*, [74 x i8], i32, i16, i16, i16, i16, i8, %struct.RenderResult*, %struct.RenderResult*, %struct.ListBase, i32, i32, i32, %struct.rcti, %struct.rctf, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, [3 x float], [3 x [3 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float, float, %struct.SampleTables*, [32 x [2 x float]], [32 x [2 x float]], %struct.ListBase*, [1 x i32], %struct.Main*, %struct.Scene*, %struct.RenderData, %struct.World, %struct.Object*, i32, i32, %struct.ListBase, %struct.RenderEngine*, %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, float, i8*, %struct.ListBase, float, float, i32, i32, i32, i32, i32, %struct.HaloRen**, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ObjectInstanceRen*, %struct.ListBase, i32, %struct.Image*, %struct.GHash*, %struct.GHash*, %struct.ListBase*, %struct.Material*, %struct.ListBase, %struct.Object*, %struct.ListBase, %struct.ListBase, %struct.MemArena*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*, %struct.rcti*)*, i8*, void (i8*, %struct.Scene*)*, i8*, void (i8*, %struct.RenderStats*)*, i8*, void (i8*, float)*, i8*, void (i8*, i32)*, i8*, i32 (i8*)*, i8*, %struct.RenderStats, %struct.ReportList*, %struct.ImagePool*, %struct.EvaluationContext* }
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.Group = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.rctf = type { float, float, float, float }
%struct.SampleTables = type { [16 x float], [9 x float*], [9 x float*], [256 x i8], i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type opaque
%struct.SpaceNode = type opaque
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColorSpace = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Ipo = type opaque
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.Text = type opaque
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.GPUTexture = type opaque
%struct.RenderEngine = type { %struct.RenderEngineType*, i8*, i32, %struct.Object*, i32, i32, i32, %struct.Render*, %struct.ListBase, [512 x i8], i32, i32, %struct.ReportList*, i32, i32, %struct.rctf, %struct.rcti, [4 x [4 x float]], i32, i32 }
%struct.RenderEngineType = type { %struct.RenderEngineType*, %struct.RenderEngineType*, [64 x i8], [64 x i8], i32, void (%struct.RenderEngine*, %struct.Main*, %struct.Scene*)*, void (%struct.RenderEngine*, %struct.Scene*)*, void (%struct.RenderEngine*, %struct.Scene*, %struct.Object*, i32, %struct.BakePixel*, i32, i32, i8*)*, void (%struct.RenderEngine*, %struct.bContext*)*, void (%struct.RenderEngine*, %struct.bContext*)*, void (%struct.RenderEngine*, %struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.BakePixel = type { i32, [2 x float], float, float, float, float }
%struct.RayObject = type opaque
%struct.RayFace = type opaque
%struct.VlakPrimitive = type opaque
%struct.HaloRen = type { i16, i16, float, float, float, float, float, float, float, [3 x float], [3 x float], float, float, float, float, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, float, i32, i32, %struct.Material*, %struct.ImagePool* }
%struct.ObjectInstanceRen = type { %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, i32, i32, i32, [4 x [4 x float]], [4 x [4 x float]], [3 x [3 x float]], i16, [3 x float], [2 x float], [4 x float]*, %struct.VolumePrecache*, float*, i32, %struct.RayObject*, i32 }
%struct.ObjectRen = type { %struct.ObjectRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, %struct.Scene*, i32, i32, i32, i32, [2 x [3 x float]], i32, i32, i32, i32, i32, i32, i32, i32, %struct.VertTableNode*, %struct.VlakTableNode*, %struct.StrandTableNode*, %struct.HaloRen**, %struct.StrandBuffer*, [64 x i8]*, [64 x i8]*, i32, i32, i32, [4 x [4 x float]], %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, %struct.ObjectInstanceRen* }
%struct.VertTableNode = type { %struct.VertRen*, float*, float*, float*, float*, float*, i32* }
%struct.VertRen = type { [3 x float], [3 x float], float*, i32, float, i32 }
%struct.VlakTableNode = type { %struct.VlakRen*, %struct.MTFace*, %struct.MCol*, i32*, i32, i32, float*, float*, %struct.RadFace** }
%struct.VlakRen = type { %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, [3 x float], %struct.Material*, i8, i8, i8, i32 }
%struct.MTFace = type opaque
%struct.MCol = type opaque
%struct.RadFace = type { [3 x float], [3 x float], [3 x float], [3 x float], float, i32 }
%struct.StrandTableNode = type { %struct.StrandRen*, float*, float*, float*, i32*, %struct.MCol*, float*, i32, i32 }
%struct.StrandRen = type { %struct.StrandVert*, %struct.StrandBuffer*, i32, i32, i32, i32, [3 x float] }
%struct.StrandVert = type { [3 x float], float }
%struct.StrandBuffer = type { %struct.StrandBuffer*, %struct.StrandBuffer*, %struct.StrandVert*, %struct.StrandBound*, i32, i32, %struct.ObjectRen*, %struct.Material*, %struct.StrandSurface*, i32, i32, i32, i32, float, float, float, float, [4 x [4 x float]], i32, i32 }
%struct.StrandBound = type { i32, i32, [2 x [3 x float]] }
%struct.StrandSurface = type { %struct.StrandSurface*, %struct.StrandSurface*, %struct.ObjectRen, [4 x i32]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, i32, i32 }
%struct.VolumePrecache = type { [3 x i32], float*, float*, float*, float*, float* }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.GHash = type opaque
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type { i32, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, float, float }
%struct.PartDeflect = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.Tex*, %struct.RNG*, float, i32, %struct.Object* }
%struct.RNG = type opaque
%struct.SoftBody = type { i32, i32, %struct.BodyPoint*, %struct.BodySpring*, i8, i8, i16, float, [64 x i8], float, float, float, float, float, float, float, float, float, i16, [64 x i8], i16, float, float, [64 x i8], i32, i32, i32, i16, i16, %struct.SBVertex**, i32, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.SBScratch*, float, float, %struct.PointCache*, %struct.ListBase, %struct.EffectorWeights*, [3 x float], [3 x [3 x float]], [3 x [3 x float]], i32 }
%struct.BodyPoint = type opaque
%struct.BodySpring = type opaque
%struct.SBVertex = type { [4 x float] }
%struct.SBScratch = type opaque
%struct.PointCache = type { %struct.PointCache*, %struct.PointCache*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, [64 x i8], [64 x i8], [64 x i8], [1024 x i8], i8*, %struct.ListBase, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)* }
%struct.PTCacheEdit = type { %struct.ListBase, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.PTCacheID, %struct.ParticleSystem*, %struct.ParticleData*, %struct.KDTree*, float*, i32*, %struct.ParticleCacheKey**, %struct.ListBase, i32, i32, i32, i32, [3 x i8], [3 x i8] }
%struct.PTCacheUndo = type { %struct.PTCacheUndo*, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.ParticleData*, %struct.KDTree*, float*, i32, %struct.ListBase, i32, [64 x i8] }
%struct.PTCacheEditPoint = type { %struct.PTCacheEditKey*, i32, i16 }
%struct.PTCacheEditKey = type { float*, float*, float*, float*, [3 x float], float, float, i16 }
%struct.PTCacheID = type { %struct.PTCacheID*, %struct.PTCacheID*, %struct.Scene*, %struct.Object*, i8*, i32, i32, i32, i32, i32, i32, i32, i32 (i32, i8*, i8**, i32)*, void (i32, i8*, i8**, float, float*)*, void (i32, i8*, i8**, float, float, float, float*)*, i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)*, void (i8*, %struct.PTCacheMem*, i32)*, void (i8*, %struct.PTCacheMem*, float)*, void (i8*, %struct.PTCacheMem*, float, float, float)*, i32 (i8*, i32)*, void (i8*, i8*)*, i32 (i8*, i32)*, i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)*, %struct.PointCache*, %struct.PointCache**, %struct.ListBase* }
%struct.PTCacheFile = type { %struct._IO_FILE*, i32, i32, i32, i32, i32, i32, %struct.PTCacheData, [8 x i8*] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.PTCacheData = type { i32, [3 x float], [3 x float], [4 x float], [3 x float], float, [3 x float], %struct.BoidData }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.PTCacheMem = type { %struct.PTCacheMem*, %struct.PTCacheMem*, i32, i32, i32, i32, [8 x i8*], [8 x i8*], %struct.ListBase }
%struct.ParticleSystem = type opaque
%struct.ParticleData = type opaque
%struct.KDTree = type opaque
%struct.ParticleCacheKey = type opaque
%struct.EffectorWeights = type { %struct.Group*, [14 x float], float, i16, [3 x i16], i32 }
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.MemArena = type opaque
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, i8*, i8*, [64 x i8], float, float }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type opaque
%struct.ImagePool = type opaque
%struct.RenderPass = type { %struct.RenderPass*, %struct.RenderPass*, i32, i32, [64 x i8], [8 x i8], float*, i32, i32, i32 }
%struct.SceneRenderLayer = type { %struct.SceneRenderLayer*, %struct.SceneRenderLayer*, [64 x i8], %struct.Material*, %struct.Group*, i32, i32, i32, i32, i32, i32, i32, float, %struct.FreestyleConfig }
%struct.FreestyleConfig = type { %struct.ListBase, i32, i32, i32, float, float, float, %struct.ListBase }
%struct.RenderThread = type { %struct.ThreadQueue*, %struct.ThreadQueue*, i32, void (i8*, %struct.RenderResult*, %struct.rcti*)*, i8* }
%struct.ThreadQueue = type opaque
%struct.RenderPart = type { %struct.RenderPart*, %struct.RenderPart*, %struct.RenderResult*, %struct.ListBase, i32*, i32*, i32*, i32*, i64*, i32*, i32*, i32*, i64*, %struct.rcti, i32, i32, i32, i16, i16, i16, i16, i8* }
%struct.bMovieHandle = type { i32 (%struct.Scene*, %struct.RenderData*, i32, i32, %struct.ReportList*)*, i32 (%struct.RenderData*, i32, i32, i32*, i32, i32, %struct.ReportList*)*, void ()*, i32 (%struct.RenderData*, %struct.ReportList*)*, void (i8*, %struct.RenderData*)* }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.VirtualModifierData = type { %struct.ArmatureModifierData, %struct.CurveModifierData, %struct.LatticeModifierData, %struct.ShapeKeyModifierData }
%struct.ArmatureModifierData = type { %struct.ModifierData, i16, i16, i32, %struct.Object*, float*, [64 x i8] }
%struct.CurveModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], i16, [6 x i8] }
%struct.LatticeModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], float, [4 x i8] }
%struct.ShapeKeyModifierData = type { %struct.ModifierData }
%struct.BooleanModifierData = type { %struct.ModifierData, %struct.Object*, i32, i32 }
%struct.ArrayModifierData = type { %struct.ModifierData, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, [3 x float], [3 x float], float, float, i32, i32, i32, i32 }
%struct.ShrinkwrapModifierData = type { %struct.ModifierData, %struct.Object*, %struct.Object*, [64 x i8], float, i16, i8, i8, float, i8, i8, [2 x i8] }
%struct.SeqRenderData = type { %struct.EvaluationContext*, %struct.Main*, %struct.Scene*, i32, i32, i32, i32, float, i8, i8 }

@RenderGlobal = internal global %struct.anon.0 zeroinitializer, align 8, !dbg !0
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [11 x i8] c"new render\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"re->eval_ctx\00", align 1
@G = external dso_local global %struct.Global, align 8
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.2 = private unnamed_addr constant [16 x i8] c"Image too small\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"new render result\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"No border area selected\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [56 x i8] c"Cannot save render buffers, check the temp default path\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"Full sample does not support edge enhance\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"No node tree in scene\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"No render output node in scene\00", align 1
@.str.10 = private unnamed_addr constant [50 x i8] c"Full sample AA not supported without 3D rendering\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"No ortho render possible for panorama\00", align 1
@.str.12 = private unnamed_addr constant [31 x i8] c"All render layers are disabled\00", align 1
@MEM_reset_peak_memory = external dso_local global void ()*, align 8
@.str.13 = private unnamed_addr constant [54 x i8] c"Error: cant write single images with a movie format!\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"skipping existing frame \22%s\22\0A\00", align 1
@.str.15 = private unnamed_addr constant [45 x i8] c"No frames rendered, skipped to not overwrite\00", align 1
@.str.16 = private unnamed_addr constant [62 x i8] c"RE_result_rect_from_file: failed to allocate clip buffer '%s'\00", align 1
@.str.17 = private unnamed_addr constant [69 x i8] c"RE_result_rect_from_file: incorrect dimensions for partial copy '%s'\00", align 1
@.str.18 = private unnamed_addr constant [46 x i8] c"RE_result_rect_from_file: failed to load '%s'\00", align 1
@default_envmap_layout = dso_local constant [12 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 2.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 2.000000e+00, float 1.000000e+00], align 16, !dbg !2984
@.str.19 = private unnamed_addr constant [56 x i8] c"There is no generated environment map available to save\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"Invalid environment map type\00", align 1
@.str.21 = private unnamed_addr constant [30 x i8] c"Error writing environment map\00", align 1
@R = common dso_local global %struct.Render zeroinitializer, align 8, !dbg !2990
@MEM_get_memory_in_use = external dso_local global i64 ()*, align 8
@MEM_get_mapped_memory_in_use = external dso_local global i64 ()*, align 8
@MEM_get_peak_memory = external dso_local global i64 ()*, align 8
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.22 = private unnamed_addr constant [38 x i8] c"Fra:%d Mem:%.2fM (%.2fM, Peak %.2fM) \00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"Field %d \00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"Blur %d \00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"| %s\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"Sce: %s Ve:%d Fa:%d Ha:%d La:%d\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"Sce: %s Ve:%d Fa:%d La:%d\00", align 1
@g_break = internal global i32 0, align 4, !dbg !3568
@.str.28 = private unnamed_addr constant [15 x i8] c"%s, Part %d-%d\00", align 1
@MEM_mapallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.29 = private unnamed_addr constant [16 x i8] c"fullsample rgba\00", align 1
@.str.30 = private unnamed_addr constant [38 x i8] c"Setting scene %s alpha mode to Premul\00", align 1
@.str.31 = private unnamed_addr constant [60 x i8] c"2.66 versioning fix: setting scene %s alpha mode to Premul\0A\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"Alpha\00", align 1
@.str.33 = private unnamed_addr constant [30 x i8] c"No camera found in scene \22%s\22\00", align 1
@.str.34 = private unnamed_addr constant [25 x i8] c"No camera found in scene\00", align 1
@do_render_seq.recurs_depth = internal global i32 0, align 4, !dbg !3571
@.str.35 = private unnamed_addr constant [25 x i8] c"Cannot render, no camera\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"temp 32 bits rect\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"Append frame %d\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"Saved: %s\00", align 1
@.str.39 = private unnamed_addr constant [30 x i8] c"Render error: cannot save %s\0A\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c".exr\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"\0ASaved: %s\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c" Time: %s\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c" (Saving: %s)\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_FreeRenderResult(%struct.RenderResult* %res) #0 !dbg !3585 {
entry:
  %res.addr = alloca %struct.RenderResult*, align 8
  store %struct.RenderResult* %res, %struct.RenderResult** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %res.addr, metadata !3588, metadata !DIExpression()), !dbg !3589
  %0 = load %struct.RenderResult*, %struct.RenderResult** %res.addr, align 8, !dbg !3590
  call void @render_result_free(%struct.RenderResult* %0), !dbg !3591
  ret void, !dbg !3592
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @render_result_free(%struct.RenderResult*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local float* @RE_RenderLayerGetPass(%struct.RenderLayer* %rl, i32 %passtype) #0 !dbg !3593 {
entry:
  %retval = alloca float*, align 8
  %rl.addr = alloca %struct.RenderLayer*, align 8
  %passtype.addr = alloca i32, align 4
  %rpass = alloca %struct.RenderPass*, align 8
  store %struct.RenderLayer* %rl, %struct.RenderLayer** %rl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl.addr, metadata !3597, metadata !DIExpression()), !dbg !3598
  store i32 %passtype, i32* %passtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %passtype.addr, metadata !3599, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !3601, metadata !DIExpression()), !dbg !3617
  %0 = load %struct.RenderLayer*, %struct.RenderLayer** %rl.addr, align 8, !dbg !3618
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %0, i32 0, i32 18, !dbg !3620
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes, i32 0, i32 0, !dbg !3621
  %1 = load i8*, i8** %first, align 8, !dbg !3621
  %2 = bitcast i8* %1 to %struct.RenderPass*, !dbg !3618
  store %struct.RenderPass* %2, %struct.RenderPass** %rpass, align 8, !dbg !3622
  br label %for.cond, !dbg !3623

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !3624
  %tobool = icmp ne %struct.RenderPass* %3, null, !dbg !3626
  br i1 %tobool, label %for.body, label %for.end, !dbg !3626

for.body:                                         ; preds = %for.cond
  %4 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !3627
  %passtype1 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %4, i32 0, i32 2, !dbg !3629
  %5 = load i32, i32* %passtype1, align 8, !dbg !3629
  %6 = load i32, i32* %passtype.addr, align 4, !dbg !3630
  %cmp = icmp eq i32 %5, %6, !dbg !3631
  br i1 %cmp, label %if.then, label %if.end, !dbg !3632

if.then:                                          ; preds = %for.body
  %7 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !3633
  %rect = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %7, i32 0, i32 6, !dbg !3634
  %8 = load float*, float** %rect, align 8, !dbg !3634
  store float* %8, float** %retval, align 8, !dbg !3635
  br label %return, !dbg !3635

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3630

for.inc:                                          ; preds = %if.end
  %9 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !3636
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %9, i32 0, i32 0, !dbg !3637
  %10 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !3637
  store %struct.RenderPass* %10, %struct.RenderPass** %rpass, align 8, !dbg !3638
  br label %for.cond, !dbg !3639, !llvm.loop !3640

for.end:                                          ; preds = %for.cond
  store float* null, float** %retval, align 8, !dbg !3642
  br label %return, !dbg !3642

return:                                           ; preds = %for.end, %if.then
  %11 = load float*, float** %retval, align 8, !dbg !3643
  ret float* %11, !dbg !3643
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.RenderLayer* @RE_GetRenderLayer(%struct.RenderResult* %rr, i8* %name) #0 !dbg !3644 {
entry:
  %retval = alloca %struct.RenderLayer*, align 8
  %rr.addr = alloca %struct.RenderResult*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.RenderResult* %rr, %struct.RenderResult** %rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr.addr, metadata !3647, metadata !DIExpression()), !dbg !3648
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3649, metadata !DIExpression()), !dbg !3650
  %0 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3651
  %cmp = icmp eq %struct.RenderResult* %0, null, !dbg !3653
  br i1 %cmp, label %if.then, label %if.else, !dbg !3654

if.then:                                          ; preds = %entry
  store %struct.RenderLayer* null, %struct.RenderLayer** %retval, align 8, !dbg !3655
  br label %return, !dbg !3655

if.else:                                          ; preds = %entry
  %1 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3657
  %layers = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %1, i32 0, i32 12, !dbg !3659
  %2 = load i8*, i8** %name.addr, align 8, !dbg !3660
  %call = call i8* @BLI_findstring(%struct.ListBase* %layers, i8* %2, i32 16), !dbg !3661
  %3 = bitcast i8* %call to %struct.RenderLayer*, !dbg !3661
  store %struct.RenderLayer* %3, %struct.RenderLayer** %retval, align 8, !dbg !3662
  br label %return, !dbg !3662

return:                                           ; preds = %if.else, %if.then
  %4 = load %struct.RenderLayer*, %struct.RenderLayer** %retval, align 8, !dbg !3663
  ret %struct.RenderLayer* %4, !dbg !3663
}

declare dso_local i8* @BLI_findstring(%struct.ListBase*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.RenderResult* @RE_MultilayerConvert(i8* %exrhandle, i8* %colorspace, i8 zeroext %predivide, i32 %rectx, i32 %recty) #0 !dbg !3664 {
entry:
  %exrhandle.addr = alloca i8*, align 8
  %colorspace.addr = alloca i8*, align 8
  %predivide.addr = alloca i8, align 1
  %rectx.addr = alloca i32, align 4
  %recty.addr = alloca i32, align 4
  store i8* %exrhandle, i8** %exrhandle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %exrhandle.addr, metadata !3667, metadata !DIExpression()), !dbg !3668
  store i8* %colorspace, i8** %colorspace.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %colorspace.addr, metadata !3669, metadata !DIExpression()), !dbg !3670
  store i8 %predivide, i8* %predivide.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %predivide.addr, metadata !3671, metadata !DIExpression()), !dbg !3672
  store i32 %rectx, i32* %rectx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rectx.addr, metadata !3673, metadata !DIExpression()), !dbg !3674
  store i32 %recty, i32* %recty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %recty.addr, metadata !3675, metadata !DIExpression()), !dbg !3676
  %0 = load i8*, i8** %exrhandle.addr, align 8, !dbg !3677
  %1 = load i8*, i8** %colorspace.addr, align 8, !dbg !3678
  %2 = load i8, i8* %predivide.addr, align 1, !dbg !3679
  %3 = load i32, i32* %rectx.addr, align 4, !dbg !3680
  %4 = load i32, i32* %recty.addr, align 4, !dbg !3681
  %call = call %struct.RenderResult* @render_result_new_from_exr(i8* %0, i8* %1, i8 zeroext %2, i32 %3, i32 %4), !dbg !3682
  ret %struct.RenderResult* %call, !dbg !3683
}

declare dso_local %struct.RenderResult* @render_result_new_from_exr(i8*, i8*, i8 zeroext, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.RenderLayer* @render_get_active_layer(%struct.Render* %re, %struct.RenderResult* %rr) #0 !dbg !3684 {
entry:
  %retval = alloca %struct.RenderLayer*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %rr.addr = alloca %struct.RenderResult*, align 8
  %rl = alloca %struct.RenderLayer*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3687, metadata !DIExpression()), !dbg !3688
  store %struct.RenderResult* %rr, %struct.RenderResult** %rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr.addr, metadata !3689, metadata !DIExpression()), !dbg !3690
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl, metadata !3691, metadata !DIExpression()), !dbg !3692
  %0 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3693
  %layers = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %0, i32 0, i32 12, !dbg !3694
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3695
  %r = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 45, !dbg !3696
  %actlay = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 61, !dbg !3697
  %2 = load i16, i16* %actlay, align 8, !dbg !3697
  %conv = sext i16 %2 to i32, !dbg !3695
  %call = call i8* @BLI_findlink(%struct.ListBase* %layers, i32 %conv), !dbg !3698
  %3 = bitcast i8* %call to %struct.RenderLayer*, !dbg !3698
  store %struct.RenderLayer* %3, %struct.RenderLayer** %rl, align 8, !dbg !3692
  %4 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !3699
  %tobool = icmp ne %struct.RenderLayer* %4, null, !dbg !3699
  br i1 %tobool, label %if.then, label %if.else, !dbg !3701

if.then:                                          ; preds = %entry
  %5 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !3702
  store %struct.RenderLayer* %5, %struct.RenderLayer** %retval, align 8, !dbg !3703
  br label %return, !dbg !3703

if.else:                                          ; preds = %entry
  %6 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3704
  %layers1 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %6, i32 0, i32 12, !dbg !3705
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers1, i32 0, i32 0, !dbg !3706
  %7 = load i8*, i8** %first, align 8, !dbg !3706
  %8 = bitcast i8* %7 to %struct.RenderLayer*, !dbg !3704
  store %struct.RenderLayer* %8, %struct.RenderLayer** %retval, align 8, !dbg !3707
  br label %return, !dbg !3707

return:                                           ; preds = %if.else, %if.then
  %9 = load %struct.RenderLayer*, %struct.RenderLayer** %retval, align 8, !dbg !3708
  ret %struct.RenderLayer* %9, !dbg !3708
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Render* @RE_GetRender(i8* %name) #0 !dbg !3709 {
entry:
  %name.addr = alloca i8*, align 8
  %re = alloca %struct.Render*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3712, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !3714, metadata !DIExpression()), !dbg !3715
  %0 = load i8*, i8** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @RenderGlobal, i32 0, i32 0, i32 0), align 8, !dbg !3716
  %1 = bitcast i8* %0 to %struct.Render*, !dbg !3718
  store %struct.Render* %1, %struct.Render** %re, align 8, !dbg !3719
  br label %for.cond, !dbg !3720

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3721
  %tobool = icmp ne %struct.Render* %2, null, !dbg !3723
  br i1 %tobool, label %for.body, label %for.end, !dbg !3723

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3724
  %name1 = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 2, !dbg !3726
  %arraydecay = getelementptr inbounds [74 x i8], [74 x i8]* %name1, i64 0, i64 0, !dbg !3724
  %4 = load i8*, i8** %name.addr, align 8, !dbg !3727
  %call = call i32 @strncmp(i8* %arraydecay, i8* %4, i64 74) #6, !dbg !3728
  %cmp = icmp eq i32 %call, 0, !dbg !3729
  br i1 %cmp, label %if.then, label %if.end, !dbg !3730

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !3731

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3732

for.inc:                                          ; preds = %if.end
  %5 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3733
  %next = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 0, !dbg !3734
  %6 = load %struct.Render*, %struct.Render** %next, align 8, !dbg !3734
  store %struct.Render* %6, %struct.Render** %re, align 8, !dbg !3735
  br label %for.cond, !dbg !3736, !llvm.loop !3737

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3739
  ret %struct.Render* %7, !dbg !3740
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.RenderResult* @RE_AcquireResultRead(%struct.Render* %re) #0 !dbg !3741 {
entry:
  %retval = alloca %struct.RenderResult*, align 8
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3744, metadata !DIExpression()), !dbg !3745
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3746
  %tobool = icmp ne %struct.Render* %0, null, !dbg !3746
  br i1 %tobool, label %if.then, label %if.end, !dbg !3748

if.then:                                          ; preds = %entry
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3749
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 12, !dbg !3751
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 1), !dbg !3752
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3753
  %result = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 9, !dbg !3754
  %3 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !3754
  store %struct.RenderResult* %3, %struct.RenderResult** %retval, align 8, !dbg !3755
  br label %return, !dbg !3755

if.end:                                           ; preds = %entry
  store %struct.RenderResult* null, %struct.RenderResult** %retval, align 8, !dbg !3756
  br label %return, !dbg !3756

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.RenderResult*, %struct.RenderResult** %retval, align 8, !dbg !3757
  ret %struct.RenderResult* %4, !dbg !3757
}

declare dso_local void @BLI_rw_mutex_lock(i32*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.RenderResult* @RE_AcquireResultWrite(%struct.Render* %re) #0 !dbg !3758 {
entry:
  %retval = alloca %struct.RenderResult*, align 8
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3759, metadata !DIExpression()), !dbg !3760
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3761
  %tobool = icmp ne %struct.Render* %0, null, !dbg !3761
  br i1 %tobool, label %if.then, label %if.end, !dbg !3763

if.then:                                          ; preds = %entry
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3764
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 12, !dbg !3766
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 2), !dbg !3767
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3768
  %result = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 9, !dbg !3769
  %3 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !3769
  store %struct.RenderResult* %3, %struct.RenderResult** %retval, align 8, !dbg !3770
  br label %return, !dbg !3770

if.end:                                           ; preds = %entry
  store %struct.RenderResult* null, %struct.RenderResult** %retval, align 8, !dbg !3771
  br label %return, !dbg !3771

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.RenderResult*, %struct.RenderResult** %retval, align 8, !dbg !3772
  ret %struct.RenderResult* %4, !dbg !3772
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_SwapResult(%struct.Render* %re, %struct.RenderResult** %rr) #0 !dbg !3773 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %rr.addr = alloca %struct.RenderResult**, align 8
  %sw_ap = alloca %struct.RenderResult*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3777, metadata !DIExpression()), !dbg !3778
  store %struct.RenderResult** %rr, %struct.RenderResult*** %rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult*** %rr.addr, metadata !3779, metadata !DIExpression()), !dbg !3780
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3781
  %tobool = icmp ne %struct.Render* %0, null, !dbg !3781
  br i1 %tobool, label %if.then, label %if.end, !dbg !3783

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %sw_ap, metadata !3784, metadata !DIExpression()), !dbg !3787
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3787
  %result = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 9, !dbg !3787
  %2 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !3787
  store %struct.RenderResult* %2, %struct.RenderResult** %sw_ap, align 8, !dbg !3787
  %3 = load %struct.RenderResult**, %struct.RenderResult*** %rr.addr, align 8, !dbg !3787
  %4 = load %struct.RenderResult*, %struct.RenderResult** %3, align 8, !dbg !3787
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3787
  %result1 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 9, !dbg !3787
  store %struct.RenderResult* %4, %struct.RenderResult** %result1, align 8, !dbg !3787
  %6 = load %struct.RenderResult*, %struct.RenderResult** %sw_ap, align 8, !dbg !3787
  %7 = load %struct.RenderResult**, %struct.RenderResult*** %rr.addr, align 8, !dbg !3787
  store %struct.RenderResult* %6, %struct.RenderResult** %7, align 8, !dbg !3787
  br label %if.end, !dbg !3788

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3789
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_ReleaseResult(%struct.Render* %re) #0 !dbg !3790 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3791, metadata !DIExpression()), !dbg !3792
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3793
  %tobool = icmp ne %struct.Render* %0, null, !dbg !3793
  br i1 %tobool, label %if.then, label %if.end, !dbg !3795

if.then:                                          ; preds = %entry
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3796
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 12, !dbg !3797
  call void @BLI_rw_mutex_unlock(i32* %resultmutex), !dbg !3798
  br label %if.end, !dbg !3798

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3799
}

declare dso_local void @BLI_rw_mutex_unlock(i32*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Scene* @RE_GetScene(%struct.Render* %re) #0 !dbg !3800 {
entry:
  %retval = alloca %struct.Scene*, align 8
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3803, metadata !DIExpression()), !dbg !3804
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3805
  %tobool = icmp ne %struct.Render* %0, null, !dbg !3805
  br i1 %tobool, label %if.then, label %if.end, !dbg !3807

if.then:                                          ; preds = %entry
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3808
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 44, !dbg !3809
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3809
  store %struct.Scene* %2, %struct.Scene** %retval, align 8, !dbg !3810
  br label %return, !dbg !3810

if.end:                                           ; preds = %entry
  store %struct.Scene* null, %struct.Scene** %retval, align 8, !dbg !3811
  br label %return, !dbg !3811

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.Scene*, %struct.Scene** %retval, align 8, !dbg !3812
  ret %struct.Scene* %3, !dbg !3812
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_AcquireResultImage(%struct.Render* %re, %struct.RenderResult* %rr) #0 !dbg !3813 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %rr.addr = alloca %struct.RenderResult*, align 8
  %rl = alloca %struct.RenderLayer*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3816, metadata !DIExpression()), !dbg !3817
  store %struct.RenderResult* %rr, %struct.RenderResult** %rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr.addr, metadata !3818, metadata !DIExpression()), !dbg !3819
  %0 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3820
  %1 = bitcast %struct.RenderResult* %0 to i8*, !dbg !3821
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 144, i1 false), !dbg !3821
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3822
  %tobool = icmp ne %struct.Render* %2, null, !dbg !3822
  br i1 %tobool, label %if.then, label %if.end34, !dbg !3824

if.then:                                          ; preds = %entry
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3825
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 12, !dbg !3827
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 1), !dbg !3828
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3829
  %result = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 9, !dbg !3831
  %5 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !3831
  %tobool1 = icmp ne %struct.RenderResult* %5, null, !dbg !3829
  br i1 %tobool1, label %if.then2, label %if.end33, !dbg !3832

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl, metadata !3833, metadata !DIExpression()), !dbg !3835
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3836
  %result3 = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 9, !dbg !3837
  %7 = load %struct.RenderResult*, %struct.RenderResult** %result3, align 8, !dbg !3837
  %rectx = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %7, i32 0, i32 2, !dbg !3838
  %8 = load i32, i32* %rectx, align 8, !dbg !3838
  %9 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3839
  %rectx4 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %9, i32 0, i32 2, !dbg !3840
  store i32 %8, i32* %rectx4, align 8, !dbg !3841
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3842
  %result5 = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 9, !dbg !3843
  %11 = load %struct.RenderResult*, %struct.RenderResult** %result5, align 8, !dbg !3843
  %recty = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %11, i32 0, i32 3, !dbg !3844
  %12 = load i32, i32* %recty, align 4, !dbg !3844
  %13 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3845
  %recty6 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %13, i32 0, i32 3, !dbg !3846
  store i32 %12, i32* %recty6, align 4, !dbg !3847
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3848
  %result7 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 9, !dbg !3849
  %15 = load %struct.RenderResult*, %struct.RenderResult** %result7, align 8, !dbg !3849
  %rectf = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %15, i32 0, i32 7, !dbg !3850
  %16 = load float*, float** %rectf, align 8, !dbg !3850
  %17 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3851
  %rectf8 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %17, i32 0, i32 7, !dbg !3852
  store float* %16, float** %rectf8, align 8, !dbg !3853
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3854
  %result9 = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 9, !dbg !3855
  %19 = load %struct.RenderResult*, %struct.RenderResult** %result9, align 8, !dbg !3855
  %rectz = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %19, i32 0, i32 8, !dbg !3856
  %20 = load float*, float** %rectz, align 8, !dbg !3856
  %21 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3857
  %rectz10 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %21, i32 0, i32 8, !dbg !3858
  store float* %20, float** %rectz10, align 8, !dbg !3859
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3860
  %result11 = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 9, !dbg !3861
  %23 = load %struct.RenderResult*, %struct.RenderResult** %result11, align 8, !dbg !3861
  %rect32 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %23, i32 0, i32 6, !dbg !3862
  %24 = load i32*, i32** %rect32, align 8, !dbg !3862
  %25 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3863
  %rect3212 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %25, i32 0, i32 6, !dbg !3864
  store i32* %24, i32** %rect3212, align 8, !dbg !3865
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3866
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3867
  %result13 = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 9, !dbg !3868
  %28 = load %struct.RenderResult*, %struct.RenderResult** %result13, align 8, !dbg !3868
  %call = call %struct.RenderLayer* @render_get_active_layer(%struct.Render* %26, %struct.RenderResult* %28), !dbg !3869
  store %struct.RenderLayer* %call, %struct.RenderLayer** %rl, align 8, !dbg !3870
  %29 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !3871
  %tobool14 = icmp ne %struct.RenderLayer* %29, null, !dbg !3871
  br i1 %tobool14, label %if.then15, label %if.end26, !dbg !3873

if.then15:                                        ; preds = %if.then2
  %30 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3874
  %rectf16 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %30, i32 0, i32 7, !dbg !3877
  %31 = load float*, float** %rectf16, align 8, !dbg !3877
  %cmp = icmp eq float* %31, null, !dbg !3878
  br i1 %cmp, label %if.then17, label %if.end, !dbg !3879

if.then17:                                        ; preds = %if.then15
  %32 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !3880
  %rectf18 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %32, i32 0, i32 11, !dbg !3881
  %33 = load float*, float** %rectf18, align 8, !dbg !3881
  %34 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3882
  %rectf19 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %34, i32 0, i32 7, !dbg !3883
  store float* %33, float** %rectf19, align 8, !dbg !3884
  br label %if.end, !dbg !3882

if.end:                                           ; preds = %if.then17, %if.then15
  %35 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3885
  %rectz20 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %35, i32 0, i32 8, !dbg !3887
  %36 = load float*, float** %rectz20, align 8, !dbg !3887
  %cmp21 = icmp eq float* %36, null, !dbg !3888
  br i1 %cmp21, label %if.then22, label %if.end25, !dbg !3889

if.then22:                                        ; preds = %if.end
  %37 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !3890
  %call23 = call float* @RE_RenderLayerGetPass(%struct.RenderLayer* %37, i32 2), !dbg !3891
  %38 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3892
  %rectz24 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %38, i32 0, i32 8, !dbg !3893
  store float* %call23, float** %rectz24, align 8, !dbg !3894
  br label %if.end25, !dbg !3892

if.end25:                                         ; preds = %if.then22, %if.end
  br label %if.end26, !dbg !3895

if.end26:                                         ; preds = %if.end25, %if.then2
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3896
  %result27 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 9, !dbg !3897
  %40 = load %struct.RenderResult*, %struct.RenderResult** %result27, align 8, !dbg !3897
  %rectf28 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %40, i32 0, i32 7, !dbg !3898
  %41 = load float*, float** %rectf28, align 8, !dbg !3898
  %cmp29 = icmp ne float* %41, null, !dbg !3899
  %conv = zext i1 %cmp29 to i32, !dbg !3899
  %42 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3900
  %have_combined = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %42, i32 0, i32 17, !dbg !3901
  store i32 %conv, i32* %have_combined, align 8, !dbg !3902
  %43 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3903
  %layers = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %43, i32 0, i32 12, !dbg !3904
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3905
  %result30 = getelementptr inbounds %struct.Render, %struct.Render* %44, i32 0, i32 9, !dbg !3906
  %45 = load %struct.RenderResult*, %struct.RenderResult** %result30, align 8, !dbg !3906
  %layers31 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %45, i32 0, i32 12, !dbg !3907
  %46 = bitcast %struct.ListBase* %layers to i8*, !dbg !3907
  %47 = bitcast %struct.ListBase* %layers31 to i8*, !dbg !3907
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false), !dbg !3907
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3908
  %disprect = getelementptr inbounds %struct.Render, %struct.Render* %48, i32 0, i32 15, !dbg !3909
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !3910
  %49 = load i32, i32* %xmin, align 4, !dbg !3910
  %50 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3911
  %xof = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %50, i32 0, i32 10, !dbg !3912
  store i32 %49, i32* %xof, align 8, !dbg !3913
  %51 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3914
  %disprect32 = getelementptr inbounds %struct.Render, %struct.Render* %51, i32 0, i32 15, !dbg !3915
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect32, i32 0, i32 2, !dbg !3916
  %52 = load i32, i32* %ymin, align 4, !dbg !3916
  %53 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !3917
  %yof = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %53, i32 0, i32 11, !dbg !3918
  store i32 %52, i32* %yof, align 4, !dbg !3919
  br label %if.end33, !dbg !3920

if.end33:                                         ; preds = %if.end26, %if.then
  br label %if.end34, !dbg !3921

if.end34:                                         ; preds = %if.end33, %entry
  ret void, !dbg !3922
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_ReleaseResultImage(%struct.Render* %re) #0 !dbg !3923 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3924, metadata !DIExpression()), !dbg !3925
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3926
  %tobool = icmp ne %struct.Render* %0, null, !dbg !3926
  br i1 %tobool, label %if.then, label %if.end, !dbg !3928

if.then:                                          ; preds = %entry
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3929
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 12, !dbg !3930
  call void @BLI_rw_mutex_unlock(i32* %resultmutex), !dbg !3931
  br label %if.end, !dbg !3931

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3932
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_ResultGet32(%struct.Render* %re, i32* %rect) #0 !dbg !3933 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %rect.addr = alloca i32*, align 8
  %rres = alloca %struct.RenderResult, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3936, metadata !DIExpression()), !dbg !3937
  store i32* %rect, i32** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rect.addr, metadata !3938, metadata !DIExpression()), !dbg !3939
  call void @llvm.dbg.declare(metadata %struct.RenderResult* %rres, metadata !3940, metadata !DIExpression()), !dbg !3941
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3942
  call void @RE_AcquireResultImage(%struct.Render* %0, %struct.RenderResult* %rres), !dbg !3943
  %1 = load i32*, i32** %rect.addr, align 8, !dbg !3944
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3945
  %rectx = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 20, !dbg !3946
  %3 = load i32, i32* %rectx, align 8, !dbg !3946
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3947
  %recty = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 21, !dbg !3948
  %5 = load i32, i32* %recty, align 4, !dbg !3948
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3949
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 44, !dbg !3950
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3950
  %view_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 44, !dbg !3951
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3952
  %scene1 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 44, !dbg !3953
  %9 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !3953
  %display_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 45, !dbg !3954
  call void @render_result_rect_get_pixels(%struct.RenderResult* %rres, i32* %1, i32 %3, i32 %5, %struct.ColorManagedViewSettings* %view_settings, %struct.ColorManagedDisplaySettings* %display_settings), !dbg !3955
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3956
  call void @RE_ReleaseResultImage(%struct.Render* %10), !dbg !3957
  ret void, !dbg !3958
}

declare dso_local void @render_result_rect_get_pixels(%struct.RenderResult*, i32*, i32, i32, %struct.ColorManagedViewSettings*, %struct.ColorManagedDisplaySettings*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_AcquiredResultGet32(%struct.Render* %re, %struct.RenderResult* %result, i32* %rect) #0 !dbg !3959 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %result.addr = alloca %struct.RenderResult*, align 8
  %rect.addr = alloca i32*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3962, metadata !DIExpression()), !dbg !3963
  store %struct.RenderResult* %result, %struct.RenderResult** %result.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %result.addr, metadata !3964, metadata !DIExpression()), !dbg !3965
  store i32* %rect, i32** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rect.addr, metadata !3966, metadata !DIExpression()), !dbg !3967
  %0 = load %struct.RenderResult*, %struct.RenderResult** %result.addr, align 8, !dbg !3968
  %1 = load i32*, i32** %rect.addr, align 8, !dbg !3969
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3970
  %rectx = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 20, !dbg !3971
  %3 = load i32, i32* %rectx, align 8, !dbg !3971
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3972
  %recty = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 21, !dbg !3973
  %5 = load i32, i32* %recty, align 4, !dbg !3973
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3974
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 44, !dbg !3975
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3975
  %view_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 44, !dbg !3976
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3977
  %scene1 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 44, !dbg !3978
  %9 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !3978
  %display_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 45, !dbg !3979
  call void @render_result_rect_get_pixels(%struct.RenderResult* %0, i32* %1, i32 %3, i32 %5, %struct.ColorManagedViewSettings* %view_settings, %struct.ColorManagedDisplaySettings* %display_settings), !dbg !3980
  ret void, !dbg !3981
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.RenderStats* @RE_GetStats(%struct.Render* %re) #0 !dbg !3982 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3986, metadata !DIExpression()), !dbg !3987
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3988
  %i = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 98, !dbg !3989
  ret %struct.RenderStats* %i, !dbg !3990
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Render* @RE_NewRender(i8* %name) #0 !dbg !3991 {
entry:
  %name.addr = alloca i8*, align 8
  %re = alloca %struct.Render*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3992, metadata !DIExpression()), !dbg !3993
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !3994, metadata !DIExpression()), !dbg !3995
  %0 = load i8*, i8** %name.addr, align 8, !dbg !3996
  %call = call %struct.Render* @RE_GetRender(i8* %0), !dbg !3997
  store %struct.Render* %call, %struct.Render** %re, align 8, !dbg !3998
  %1 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3999
  %cmp = icmp eq %struct.Render* %1, null, !dbg !4001
  br i1 %cmp, label %if.then, label %if.end, !dbg !4002

if.then:                                          ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4003
  %call1 = call i8* %2(i64 6240, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)), !dbg !4003
  %3 = bitcast i8* %call1 to %struct.Render*, !dbg !4003
  store %struct.Render* %3, %struct.Render** %re, align 8, !dbg !4005
  %4 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4006
  %5 = bitcast %struct.Render* %4 to i8*, !dbg !4006
  call void @BLI_addtail(%struct.ListBase* getelementptr inbounds (%struct.anon.0, %struct.anon.0* @RenderGlobal, i32 0, i32 0), i8* %5), !dbg !4007
  %6 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4008
  %name2 = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 2, !dbg !4009
  %arraydecay = getelementptr inbounds [74 x i8], [74 x i8]* %name2, i64 0, i64 0, !dbg !4008
  %7 = load i8*, i8** %name.addr, align 8, !dbg !4010
  %call3 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %7, i64 74), !dbg !4011
  %8 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4012
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 12, !dbg !4013
  call void @BLI_rw_mutex_init(i32* %resultmutex), !dbg !4014
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4015
  %call4 = call i8* %9(i64 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)), !dbg !4015
  %10 = bitcast i8* %call4 to %struct.EvaluationContext*, !dbg !4015
  %11 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4016
  %eval_ctx = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 101, !dbg !4017
  store %struct.EvaluationContext* %10, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !4018
  %12 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4019
  %eval_ctx5 = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 101, !dbg !4020
  %13 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx5, align 8, !dbg !4020
  %mode = getelementptr inbounds %struct.EvaluationContext, %struct.EvaluationContext* %13, i32 0, i32 0, !dbg !4021
  store i32 2, i32* %mode, align 4, !dbg !4022
  br label %if.end, !dbg !4023

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4024
  call void @RE_InitRenderCB(%struct.Render* %14), !dbg !4025
  %15 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4026
  %ycor = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 24, !dbg !4027
  store float 1.000000e+00, float* %ycor, align 8, !dbg !4028
  %16 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4029
  ret %struct.Render* %16, !dbg !4030
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

declare dso_local void @BLI_rw_mutex_init(i32*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_InitRenderCB(%struct.Render* %re) #0 !dbg !4031 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4032, metadata !DIExpression()), !dbg !4033
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4034
  %display_init = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 82, !dbg !4035
  store void (i8*, %struct.RenderResult*)* @result_nothing, void (i8*, %struct.RenderResult*)** %display_init, align 8, !dbg !4036
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4037
  %display_clear = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 84, !dbg !4038
  store void (i8*, %struct.RenderResult*)* @result_nothing, void (i8*, %struct.RenderResult*)** %display_clear, align 8, !dbg !4039
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4040
  %display_update = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 86, !dbg !4041
  store void (i8*, %struct.RenderResult*, %struct.rcti*)* @result_rcti_nothing, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !4042
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4043
  %current_scene_update = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 88, !dbg !4044
  store void (i8*, %struct.Scene*)* @current_scene_nothing, void (i8*, %struct.Scene*)** %current_scene_update, align 8, !dbg !4045
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4046
  %progress = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 92, !dbg !4047
  store void (i8*, float)* @float_nothing, void (i8*, float)** %progress, align 8, !dbg !4048
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4049
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 96, !dbg !4050
  store i32 (i8*)* @default_break, i32 (i8*)** %test_break, align 8, !dbg !4051
  %6 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 8), align 1, !dbg !4052
  %tobool = icmp ne i8 %6, 0, !dbg !4054
  br i1 %tobool, label %if.then, label %if.else, !dbg !4055

if.then:                                          ; preds = %entry
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4056
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 90, !dbg !4057
  store void (i8*, %struct.RenderStats*)* @stats_background, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !4058
  br label %if.end, !dbg !4056

if.else:                                          ; preds = %entry
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4059
  %stats_draw1 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 90, !dbg !4060
  store void (i8*, %struct.RenderStats*)* @stats_nothing, void (i8*, %struct.RenderStats*)** %stats_draw1, align 8, !dbg !4061
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4062
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 97, !dbg !4063
  store i8* null, i8** %tbh, align 8, !dbg !4064
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4065
  %prh = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 93, !dbg !4066
  store i8* null, i8** %prh, align 8, !dbg !4067
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4068
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 91, !dbg !4069
  store i8* null, i8** %sdh, align 8, !dbg !4070
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4071
  %duh = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 87, !dbg !4072
  store i8* null, i8** %duh, align 8, !dbg !4073
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4074
  %dch = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 85, !dbg !4075
  store i8* null, i8** %dch, align 8, !dbg !4076
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4077
  %dih = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 83, !dbg !4078
  store i8* null, i8** %dih, align 8, !dbg !4079
  ret void, !dbg !4080
}

; Function Attrs: noinline nounwind uwtable
define internal void @result_nothing(i8* %UNUSED_arg, %struct.RenderResult* %UNUSED_rr) #0 !dbg !4081 {
entry:
  %UNUSED_arg.addr = alloca i8*, align 8
  %UNUSED_rr.addr = alloca %struct.RenderResult*, align 8
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !4082, metadata !DIExpression()), !dbg !4083
  store %struct.RenderResult* %UNUSED_rr, %struct.RenderResult** %UNUSED_rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %UNUSED_rr.addr, metadata !4084, metadata !DIExpression()), !dbg !4085
  ret void, !dbg !4086
}

; Function Attrs: noinline nounwind uwtable
define internal void @result_rcti_nothing(i8* %UNUSED_arg, %struct.RenderResult* %UNUSED_rr, %struct.rcti* %UNUSED_rect) #0 !dbg !4087 {
entry:
  %UNUSED_arg.addr = alloca i8*, align 8
  %UNUSED_rr.addr = alloca %struct.RenderResult*, align 8
  %UNUSED_rect.addr = alloca %struct.rcti*, align 8
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !4092, metadata !DIExpression()), !dbg !4093
  store %struct.RenderResult* %UNUSED_rr, %struct.RenderResult** %UNUSED_rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %UNUSED_rr.addr, metadata !4094, metadata !DIExpression()), !dbg !4095
  store %struct.rcti* %UNUSED_rect, %struct.rcti** %UNUSED_rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %UNUSED_rect.addr, metadata !4096, metadata !DIExpression()), !dbg !4097
  ret void, !dbg !4098
}

; Function Attrs: noinline nounwind uwtable
define internal void @current_scene_nothing(i8* %UNUSED_arg, %struct.Scene* %UNUSED_scene) #0 !dbg !4099 {
entry:
  %UNUSED_arg.addr = alloca i8*, align 8
  %UNUSED_scene.addr = alloca %struct.Scene*, align 8
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !4102, metadata !DIExpression()), !dbg !4103
  store %struct.Scene* %UNUSED_scene, %struct.Scene** %UNUSED_scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %UNUSED_scene.addr, metadata !4104, metadata !DIExpression()), !dbg !4105
  ret void, !dbg !4106
}

; Function Attrs: noinline nounwind uwtable
define internal void @float_nothing(i8* %UNUSED_arg, float %UNUSED_val) #0 !dbg !4107 {
entry:
  %UNUSED_arg.addr = alloca i8*, align 8
  %UNUSED_val.addr = alloca float, align 4
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !4108, metadata !DIExpression()), !dbg !4109
  store float %UNUSED_val, float* %UNUSED_val.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_val.addr, metadata !4110, metadata !DIExpression()), !dbg !4111
  ret void, !dbg !4112
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @default_break(i8* %UNUSED_arg) #0 !dbg !4113 {
entry:
  %UNUSED_arg.addr = alloca i8*, align 8
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !4114, metadata !DIExpression()), !dbg !4115
  %0 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !4116
  %conv = zext i8 %0 to i32, !dbg !4117
  %cmp = icmp eq i32 %conv, 1, !dbg !4118
  %conv1 = zext i1 %cmp to i32, !dbg !4118
  ret i32 %conv1, !dbg !4119
}

; Function Attrs: noinline nounwind uwtable
define internal void @stats_background(i8* %UNUSED_arg, %struct.RenderStats* %rs) #0 !dbg !4120 {
entry:
  %UNUSED_arg.addr = alloca i8*, align 8
  %rs.addr = alloca %struct.RenderStats*, align 8
  %mem_in_use = alloca i64, align 8
  %mmap_in_use = alloca i64, align 8
  %peak_memory = alloca i64, align 8
  %megs_used_memory = alloca float, align 4
  %mmap_used_memory = alloca float, align 4
  %megs_peak_memory = alloca float, align 4
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !4121, metadata !DIExpression()), !dbg !4122
  store %struct.RenderStats* %rs, %struct.RenderStats** %rs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderStats** %rs.addr, metadata !4123, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.declare(metadata i64* %mem_in_use, metadata !4125, metadata !DIExpression()), !dbg !4128
  call void @llvm.dbg.declare(metadata i64* %mmap_in_use, metadata !4129, metadata !DIExpression()), !dbg !4130
  call void @llvm.dbg.declare(metadata i64* %peak_memory, metadata !4131, metadata !DIExpression()), !dbg !4132
  call void @llvm.dbg.declare(metadata float* %megs_used_memory, metadata !4133, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.declare(metadata float* %mmap_used_memory, metadata !4135, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.declare(metadata float* %megs_peak_memory, metadata !4137, metadata !DIExpression()), !dbg !4138
  %0 = load i64 ()*, i64 ()** @MEM_get_memory_in_use, align 8, !dbg !4139
  %call = call i64 %0(), !dbg !4139
  store i64 %call, i64* %mem_in_use, align 8, !dbg !4140
  %1 = load i64 ()*, i64 ()** @MEM_get_mapped_memory_in_use, align 8, !dbg !4141
  %call1 = call i64 %1(), !dbg !4141
  store i64 %call1, i64* %mmap_in_use, align 8, !dbg !4142
  %2 = load i64 ()*, i64 ()** @MEM_get_peak_memory, align 8, !dbg !4143
  %call2 = call i64 %2(), !dbg !4143
  store i64 %call2, i64* %peak_memory, align 8, !dbg !4144
  %3 = load i64, i64* %mem_in_use, align 8, !dbg !4145
  %4 = load i64, i64* %mmap_in_use, align 8, !dbg !4146
  %sub = sub i64 %3, %4, !dbg !4147
  %conv = uitofp i64 %sub to double, !dbg !4148
  %div = fdiv double %conv, 0x4130000000000000, !dbg !4149
  %conv3 = fptrunc double %div to float, !dbg !4148
  store float %conv3, float* %megs_used_memory, align 4, !dbg !4150
  %5 = load i64, i64* %mmap_in_use, align 8, !dbg !4151
  %conv4 = uitofp i64 %5 to double, !dbg !4152
  %div5 = fdiv double %conv4, 0x4130000000000000, !dbg !4153
  %conv6 = fptrunc double %div5 to float, !dbg !4152
  store float %conv6, float* %mmap_used_memory, align 4, !dbg !4154
  %6 = load i64, i64* %peak_memory, align 8, !dbg !4155
  %conv7 = uitofp i64 %6 to double, !dbg !4156
  %div8 = fdiv double %conv7, 0x4130000000000000, !dbg !4157
  %conv9 = fptrunc double %div8 to float, !dbg !4156
  store float %conv9, float* %megs_peak_memory, align 4, !dbg !4158
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4159
  %8 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4160
  %cfra = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %8, i32 0, i32 0, !dbg !4161
  %9 = load i32, i32* %cfra, align 8, !dbg !4161
  %10 = load float, float* %megs_used_memory, align 4, !dbg !4162
  %conv10 = fpext float %10 to double, !dbg !4162
  %11 = load float, float* %mmap_used_memory, align 4, !dbg !4163
  %conv11 = fpext float %11 to double, !dbg !4163
  %12 = load float, float* %megs_peak_memory, align 4, !dbg !4164
  %conv12 = fpext float %12 to double, !dbg !4164
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i32 %9, double %conv10, double %conv11, double %conv12), !dbg !4165
  %13 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4166
  %curfield = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %13, i32 0, i32 7, !dbg !4168
  %14 = load i16, i16* %curfield, align 4, !dbg !4168
  %tobool = icmp ne i16 %14, 0, !dbg !4166
  br i1 %tobool, label %if.then, label %if.end, !dbg !4169

if.then:                                          ; preds = %entry
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4170
  %16 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4171
  %curfield14 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %16, i32 0, i32 7, !dbg !4172
  %17 = load i16, i16* %curfield14, align 4, !dbg !4172
  %conv15 = sext i16 %17 to i32, !dbg !4171
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), i32 %conv15), !dbg !4173
  br label %if.end, !dbg !4173

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4174
  %curblur = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %18, i32 0, i32 8, !dbg !4176
  %19 = load i16, i16* %curblur, align 2, !dbg !4176
  %tobool17 = icmp ne i16 %19, 0, !dbg !4174
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !4177

if.then18:                                        ; preds = %if.end
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4178
  %21 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4179
  %curblur19 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %21, i32 0, i32 8, !dbg !4180
  %22 = load i16, i16* %curblur19, align 2, !dbg !4180
  %conv20 = sext i16 %22 to i32, !dbg !4179
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i32 %conv20), !dbg !4181
  br label %if.end22, !dbg !4181

if.end22:                                         ; preds = %if.then18, %if.end
  %23 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4182
  %infostr = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %23, i32 0, i32 16, !dbg !4184
  %24 = load i8*, i8** %infostr, align 8, !dbg !4184
  %tobool23 = icmp ne i8* %24, null, !dbg !4182
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !4185

if.then24:                                        ; preds = %if.end22
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4186
  %26 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4188
  %infostr25 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %26, i32 0, i32 16, !dbg !4189
  %27 = load i8*, i8** %infostr25, align 8, !dbg !4189
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i8* %27), !dbg !4190
  br label %if.end39, !dbg !4191

if.else:                                          ; preds = %if.end22
  %28 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4192
  %tothalo = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %28, i32 0, i32 4, !dbg !4195
  %29 = load i32, i32* %tothalo, align 8, !dbg !4195
  %tobool27 = icmp ne i32 %29, 0, !dbg !4192
  br i1 %tobool27, label %if.then28, label %if.else31, !dbg !4196

if.then28:                                        ; preds = %if.else
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4197
  %31 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4198
  %scene_name = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %31, i32 0, i32 18, !dbg !4199
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %scene_name, i64 0, i64 0, !dbg !4198
  %32 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4200
  %totvert = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %32, i32 0, i32 2, !dbg !4201
  %33 = load i32, i32* %totvert, align 8, !dbg !4201
  %34 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4202
  %totface = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %34, i32 0, i32 1, !dbg !4203
  %35 = load i32, i32* %totface, align 4, !dbg !4203
  %36 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4204
  %tothalo29 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %36, i32 0, i32 4, !dbg !4205
  %37 = load i32, i32* %tothalo29, align 8, !dbg !4205
  %38 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4206
  %totlamp = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %38, i32 0, i32 5, !dbg !4207
  %39 = load i32, i32* %totlamp, align 4, !dbg !4207
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i8* %arraydecay, i32 %33, i32 %35, i32 %37, i32 %39), !dbg !4208
  br label %if.end38, !dbg !4208

if.else31:                                        ; preds = %if.else
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4209
  %41 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4210
  %scene_name32 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %41, i32 0, i32 18, !dbg !4211
  %arraydecay33 = getelementptr inbounds [64 x i8], [64 x i8]* %scene_name32, i64 0, i64 0, !dbg !4210
  %42 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4212
  %totvert34 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %42, i32 0, i32 2, !dbg !4213
  %43 = load i32, i32* %totvert34, align 8, !dbg !4213
  %44 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4214
  %totface35 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %44, i32 0, i32 1, !dbg !4215
  %45 = load i32, i32* %totface35, align 4, !dbg !4215
  %46 = load %struct.RenderStats*, %struct.RenderStats** %rs.addr, align 8, !dbg !4216
  %totlamp36 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %46, i32 0, i32 5, !dbg !4217
  %47 = load i32, i32* %totlamp36, align 4, !dbg !4217
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i64 0, i64 0), i8* %arraydecay33, i32 %43, i32 %45, i32 %47), !dbg !4218
  br label %if.end38

if.end38:                                         ; preds = %if.else31, %if.then28
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then24
  %48 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4219
  call void @BLI_callback_exec(%struct.Main* %48, %struct.ID* null, i32 4), !dbg !4220
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4221
  %call40 = call i32 @fputc(i32 10, %struct._IO_FILE* %49), !dbg !4222
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4223
  %call41 = call i32 @fflush(%struct._IO_FILE* %50), !dbg !4224
  ret void, !dbg !4225
}

; Function Attrs: noinline nounwind uwtable
define internal void @stats_nothing(i8* %UNUSED_arg, %struct.RenderStats* %UNUSED_rs) #0 !dbg !4226 {
entry:
  %UNUSED_arg.addr = alloca i8*, align 8
  %UNUSED_rs.addr = alloca %struct.RenderStats*, align 8
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !4227, metadata !DIExpression()), !dbg !4228
  store %struct.RenderStats* %UNUSED_rs, %struct.RenderStats** %UNUSED_rs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderStats** %UNUSED_rs.addr, metadata !4229, metadata !DIExpression()), !dbg !4230
  ret void, !dbg !4231
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_FreeRender(%struct.Render* %re) #0 !dbg !4232 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4233, metadata !DIExpression()), !dbg !4234
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4235
  %engine = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 51, !dbg !4237
  %1 = load %struct.RenderEngine*, %struct.RenderEngine** %engine, align 8, !dbg !4237
  %tobool = icmp ne %struct.RenderEngine* %1, null, !dbg !4235
  br i1 %tobool, label %if.then, label %if.end, !dbg !4238

if.then:                                          ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4239
  %engine1 = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 51, !dbg !4240
  %3 = load %struct.RenderEngine*, %struct.RenderEngine** %engine1, align 8, !dbg !4240
  call void @RE_engine_free(%struct.RenderEngine* %3), !dbg !4241
  br label %if.end, !dbg !4241

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4242
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 12, !dbg !4243
  call void @BLI_rw_mutex_end(i32* %resultmutex), !dbg !4244
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4245
  %r = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 45, !dbg !4246
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 60, !dbg !4247
  call void @BLI_freelistN(%struct.ListBase* %layers), !dbg !4248
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4249
  %main = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 43, !dbg !4250
  store %struct.Main* null, %struct.Main** %main, align 8, !dbg !4251
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4252
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 44, !dbg !4253
  store %struct.Scene* null, %struct.Scene** %scene, align 8, !dbg !4254
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4255
  call void @RE_Database_Free(%struct.Render* %8), !dbg !4256
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4257
  call void @free_sample_tables(%struct.Render* %9), !dbg !4258
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4259
  %result = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 9, !dbg !4260
  %11 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !4260
  call void @render_result_free(%struct.RenderResult* %11), !dbg !4261
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4262
  %pushedresult = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 10, !dbg !4263
  %13 = load %struct.RenderResult*, %struct.RenderResult** %pushedresult, align 8, !dbg !4263
  call void @render_result_free(%struct.RenderResult* %13), !dbg !4264
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4265
  %15 = bitcast %struct.Render* %14 to i8*, !dbg !4265
  call void @BLI_remlink(%struct.ListBase* getelementptr inbounds (%struct.anon.0, %struct.anon.0* @RenderGlobal, i32 0, i32 0), i8* %15), !dbg !4266
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4267
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4268
  %eval_ctx = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 101, !dbg !4269
  %18 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !4269
  %19 = bitcast %struct.EvaluationContext* %18 to i8*, !dbg !4268
  call void %16(i8* %19), !dbg !4267
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4270
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4271
  %22 = bitcast %struct.Render* %21 to i8*, !dbg !4271
  call void %20(i8* %22), !dbg !4270
  ret void, !dbg !4272
}

declare dso_local void @RE_engine_free(%struct.RenderEngine*) #2

declare dso_local void @BLI_rw_mutex_end(i32*) #2

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

declare dso_local void @RE_Database_Free(%struct.Render*) #2

declare dso_local void @free_sample_tables(%struct.Render*) #2

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_FreeAllRender() #0 !dbg !4273 {
entry:
  br label %while.cond, !dbg !4276

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @RenderGlobal, i32 0, i32 0, i32 0), align 8, !dbg !4277
  %tobool = icmp ne i8* %0, null, !dbg !4276
  br i1 %tobool, label %while.body, label %while.end, !dbg !4276

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @RenderGlobal, i32 0, i32 0, i32 0), align 8, !dbg !4278
  %2 = bitcast i8* %1 to %struct.Render*, !dbg !4280
  call void @RE_FreeRender(%struct.Render* %2), !dbg !4281
  br label %while.cond, !dbg !4276, !llvm.loop !4282

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4284
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_FreeAllRenderResults() #0 !dbg !4285 {
entry:
  %re = alloca %struct.Render*, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !4286, metadata !DIExpression()), !dbg !4287
  %0 = load i8*, i8** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @RenderGlobal, i32 0, i32 0, i32 0), align 8, !dbg !4288
  %1 = bitcast i8* %0 to %struct.Render*, !dbg !4290
  store %struct.Render* %1, %struct.Render** %re, align 8, !dbg !4291
  br label %for.cond, !dbg !4292

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4293
  %tobool = icmp ne %struct.Render* %2, null, !dbg !4295
  br i1 %tobool, label %for.body, label %for.end, !dbg !4295

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4296
  %result = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 9, !dbg !4298
  %4 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !4298
  call void @render_result_free(%struct.RenderResult* %4), !dbg !4299
  %5 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4300
  %pushedresult = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 10, !dbg !4301
  %6 = load %struct.RenderResult*, %struct.RenderResult** %pushedresult, align 8, !dbg !4301
  call void @render_result_free(%struct.RenderResult* %6), !dbg !4302
  %7 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4303
  %result1 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 9, !dbg !4304
  store %struct.RenderResult* null, %struct.RenderResult** %result1, align 8, !dbg !4305
  %8 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4306
  %pushedresult2 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 10, !dbg !4307
  store %struct.RenderResult* null, %struct.RenderResult** %pushedresult2, align 8, !dbg !4308
  br label %for.inc, !dbg !4309

for.inc:                                          ; preds = %for.body
  %9 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4310
  %next = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 0, !dbg !4311
  %10 = load %struct.Render*, %struct.Render** %next, align 8, !dbg !4311
  store %struct.Render* %10, %struct.Render** %re, align 8, !dbg !4312
  br label %for.cond, !dbg !4313, !llvm.loop !4314

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4316
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_FreePersistentData() #0 !dbg !4317 {
entry:
  %re = alloca %struct.Render*, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !4318, metadata !DIExpression()), !dbg !4319
  %0 = load i8*, i8** getelementptr inbounds (%struct.anon.0, %struct.anon.0* @RenderGlobal, i32 0, i32 0, i32 0), align 8, !dbg !4320
  %1 = bitcast i8* %0 to %struct.Render*, !dbg !4322
  store %struct.Render* %1, %struct.Render** %re, align 8, !dbg !4323
  br label %for.cond, !dbg !4324

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4325
  %tobool = icmp ne %struct.Render* %2, null, !dbg !4327
  br i1 %tobool, label %for.body, label %for.end, !dbg !4327

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4328
  %engine = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 51, !dbg !4331
  %4 = load %struct.RenderEngine*, %struct.RenderEngine** %engine, align 8, !dbg !4331
  %tobool1 = icmp ne %struct.RenderEngine* %4, null, !dbg !4328
  br i1 %tobool1, label %if.then, label %if.end7, !dbg !4332

if.then:                                          ; preds = %for.body
  %5 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4333
  %engine2 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 51, !dbg !4336
  %6 = load %struct.RenderEngine*, %struct.RenderEngine** %engine2, align 8, !dbg !4336
  %flag = getelementptr inbounds %struct.RenderEngine, %struct.RenderEngine* %6, i32 0, i32 2, !dbg !4337
  %7 = load i32, i32* %flag, align 8, !dbg !4337
  %and = and i32 %7, 16, !dbg !4338
  %tobool3 = icmp ne i32 %and, 0, !dbg !4338
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !4339

if.then4:                                         ; preds = %if.then
  %8 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4340
  %engine5 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 51, !dbg !4341
  %9 = load %struct.RenderEngine*, %struct.RenderEngine** %engine5, align 8, !dbg !4341
  call void @RE_engine_free(%struct.RenderEngine* %9), !dbg !4342
  br label %if.end, !dbg !4342

if.end:                                           ; preds = %if.then4, %if.then
  %10 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4343
  %engine6 = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 51, !dbg !4344
  store %struct.RenderEngine* null, %struct.RenderEngine** %engine6, align 8, !dbg !4345
  br label %if.end7, !dbg !4346

if.end7:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !4347

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !4348
  %next = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 0, !dbg !4349
  %12 = load %struct.Render*, %struct.Render** %next, align 8, !dbg !4349
  store %struct.Render* %12, %struct.Render** %re, align 8, !dbg !4350
  br label %for.cond, !dbg !4351, !llvm.loop !4352

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4354
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_InitState(%struct.Render* %re, %struct.Render* %source, %struct.RenderData* %rd, %struct.SceneRenderLayer* %srl, i32 %winx, i32 %winy, %struct.rcti* %disprect) #0 !dbg !4355 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %source.addr = alloca %struct.Render*, align 8
  %rd.addr = alloca %struct.RenderData*, align 8
  %srl.addr = alloca %struct.SceneRenderLayer*, align 8
  %winx.addr = alloca i32, align 4
  %winy.addr = alloca i32, align 4
  %disprect.addr = alloca %struct.rcti*, align 8
  %had_freestyle = alloca i8, align 1
  %index = alloca i32, align 4
  %actsrl = alloca %struct.SceneRenderLayer*, align 8
  %rl = alloca %struct.RenderLayer*, align 8
  %have_layer = alloca i8, align 1
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4389, metadata !DIExpression()), !dbg !4390
  store %struct.Render* %source, %struct.Render** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %source.addr, metadata !4391, metadata !DIExpression()), !dbg !4392
  store %struct.RenderData* %rd, %struct.RenderData** %rd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderData** %rd.addr, metadata !4393, metadata !DIExpression()), !dbg !4394
  store %struct.SceneRenderLayer* %srl, %struct.SceneRenderLayer** %srl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl.addr, metadata !4395, metadata !DIExpression()), !dbg !4396
  store i32 %winx, i32* %winx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winx.addr, metadata !4397, metadata !DIExpression()), !dbg !4398
  store i32 %winy, i32* %winy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winy.addr, metadata !4399, metadata !DIExpression()), !dbg !4400
  store %struct.rcti* %disprect, %struct.rcti** %disprect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %disprect.addr, metadata !4401, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.declare(metadata i8* %had_freestyle, metadata !4403, metadata !DIExpression()), !dbg !4404
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4405
  %r = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 45, !dbg !4406
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !4407
  %1 = load i32, i32* %mode, align 8, !dbg !4407
  %and = and i32 %1, 33554432, !dbg !4408
  %cmp = icmp ne i32 %and, 0, !dbg !4409
  %conv = zext i1 %cmp to i32, !dbg !4409
  %conv1 = trunc i32 %conv to i8, !dbg !4410
  store i8 %conv1, i8* %had_freestyle, align 1, !dbg !4404
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4411
  %ok = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 6, !dbg !4412
  store i16 1, i16* %ok, align 4, !dbg !4413
  %call = call double @PIL_check_seconds_timer(), !dbg !4414
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4415
  %i = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 98, !dbg !4416
  %starttime = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 14, !dbg !4417
  store double %call, double* %starttime, align 8, !dbg !4418
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4419
  %r2 = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 45, !dbg !4420
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r2, i32 0, i32 60, !dbg !4421
  call void @BLI_freelistN(%struct.ListBase* %layers), !dbg !4422
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4423
  %r3 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 45, !dbg !4424
  %6 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !4425
  %7 = bitcast %struct.RenderData* %r3 to i8*, !dbg !4426
  %8 = bitcast %struct.RenderData* %6 to i8*, !dbg !4426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 3984, i1 false), !dbg !4426
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4427
  %r4 = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 45, !dbg !4428
  %layers5 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r4, i32 0, i32 60, !dbg !4429
  %10 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !4430
  %layers6 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %10, i32 0, i32 60, !dbg !4431
  call void @BLI_duplicatelist(%struct.ListBase* %layers5, %struct.ListBase* %layers6), !dbg !4432
  %11 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4433
  %tobool = icmp ne %struct.Render* %11, null, !dbg !4433
  br i1 %tobool, label %if.then, label %if.end, !dbg !4435

if.then:                                          ; preds = %entry
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4436
  %r7 = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 45, !dbg !4438
  %mode8 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r7, i32 0, i32 47, !dbg !4439
  %13 = load i32, i32* %mode8, align 8, !dbg !4440
  %and9 = and i32 %13, -2561, !dbg !4440
  store i32 %and9, i32* %mode8, align 8, !dbg !4440
  %14 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4441
  %r10 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 45, !dbg !4442
  %mode11 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r10, i32 0, i32 47, !dbg !4443
  %15 = load i32, i32* %mode11, align 8, !dbg !4443
  %and12 = and i32 %15, 2560, !dbg !4444
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4445
  %r13 = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 45, !dbg !4446
  %mode14 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r13, i32 0, i32 47, !dbg !4447
  %17 = load i32, i32* %mode14, align 8, !dbg !4448
  %or = or i32 %17, %and12, !dbg !4448
  store i32 %or, i32* %mode14, align 8, !dbg !4448
  %18 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4449
  %r15 = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 45, !dbg !4450
  %xsch = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r15, i32 0, i32 33, !dbg !4451
  %19 = load i32, i32* %xsch, align 4, !dbg !4451
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4452
  %r16 = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 45, !dbg !4453
  %xsch17 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r16, i32 0, i32 33, !dbg !4454
  store i32 %19, i32* %xsch17, align 4, !dbg !4455
  %21 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4456
  %r18 = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 45, !dbg !4457
  %ysch = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r18, i32 0, i32 34, !dbg !4458
  %22 = load i32, i32* %ysch, align 8, !dbg !4458
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4459
  %r19 = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 45, !dbg !4460
  %ysch20 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r19, i32 0, i32 34, !dbg !4461
  store i32 %22, i32* %ysch20, align 8, !dbg !4462
  %24 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4463
  %r21 = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 45, !dbg !4464
  %size = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r21, i32 0, i32 30, !dbg !4465
  %25 = load i16, i16* %size, align 2, !dbg !4465
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4466
  %r22 = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 45, !dbg !4467
  %size23 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r22, i32 0, i32 30, !dbg !4468
  store i16 %25, i16* %size23, align 2, !dbg !4469
  br label %if.end, !dbg !4470

if.end:                                           ; preds = %if.then, %entry
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4471
  %28 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4472
  %29 = load i32, i32* %winx.addr, align 4, !dbg !4473
  %30 = load i32, i32* %winy.addr, align 4, !dbg !4474
  %31 = load %struct.rcti*, %struct.rcti** %disprect.addr, align 8, !dbg !4475
  call void @re_init_resolution(%struct.Render* %27, %struct.Render* %28, i32 %29, i32 %30, %struct.rcti* %31), !dbg !4476
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4477
  %rectx = getelementptr inbounds %struct.Render, %struct.Render* %32, i32 0, i32 20, !dbg !4479
  %33 = load i32, i32* %rectx, align 8, !dbg !4479
  %cmp24 = icmp slt i32 %33, 1, !dbg !4480
  br i1 %cmp24, label %if.then39, label %lor.lhs.false, !dbg !4481

lor.lhs.false:                                    ; preds = %if.end
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4482
  %recty = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 21, !dbg !4483
  %35 = load i32, i32* %recty, align 4, !dbg !4483
  %cmp26 = icmp slt i32 %35, 1, !dbg !4484
  br i1 %cmp26, label %if.then39, label %lor.lhs.false28, !dbg !4485

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %36 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !4486
  %im_format = getelementptr inbounds %struct.RenderData, %struct.RenderData* %36, i32 0, i32 0, !dbg !4487
  %imtype = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %im_format, i32 0, i32 0, !dbg !4488
  %37 = load i8, i8* %imtype, align 8, !dbg !4488
  %call29 = call zeroext i8 @BKE_imtype_is_movie(i8 zeroext %37), !dbg !4489
  %conv30 = zext i8 %call29 to i32, !dbg !4489
  %tobool31 = icmp ne i32 %conv30, 0, !dbg !4489
  br i1 %tobool31, label %land.lhs.true, label %if.end41, !dbg !4490

land.lhs.true:                                    ; preds = %lor.lhs.false28
  %38 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4491
  %rectx32 = getelementptr inbounds %struct.Render, %struct.Render* %38, i32 0, i32 20, !dbg !4492
  %39 = load i32, i32* %rectx32, align 8, !dbg !4492
  %cmp33 = icmp slt i32 %39, 16, !dbg !4493
  br i1 %cmp33, label %if.then39, label %lor.lhs.false35, !dbg !4494

lor.lhs.false35:                                  ; preds = %land.lhs.true
  %40 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4495
  %recty36 = getelementptr inbounds %struct.Render, %struct.Render* %40, i32 0, i32 21, !dbg !4496
  %41 = load i32, i32* %recty36, align 4, !dbg !4496
  %cmp37 = icmp slt i32 %41, 16, !dbg !4497
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !4498

if.then39:                                        ; preds = %lor.lhs.false35, %land.lhs.true, %lor.lhs.false, %if.end
  %42 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4499
  %reports = getelementptr inbounds %struct.Render, %struct.Render* %42, i32 0, i32 99, !dbg !4501
  %43 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !4501
  call void @BKE_report(%struct.ReportList* %43, i32 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)), !dbg !4502
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4503
  %ok40 = getelementptr inbounds %struct.Render, %struct.Render* %44, i32 0, i32 6, !dbg !4504
  store i16 0, i16* %ok40, align 4, !dbg !4505
  br label %return, !dbg !4506

if.end41:                                         ; preds = %lor.lhs.false35, %lor.lhs.false28
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4507
  %r42 = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 45, !dbg !4508
  %call43 = call i32 @check_mode_full_sample(%struct.RenderData* %r42), !dbg !4509
  %46 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4510
  %r44 = getelementptr inbounds %struct.Render, %struct.Render* %46, i32 0, i32 45, !dbg !4511
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r44, i32 0, i32 46, !dbg !4512
  store i32 %call43, i32* %scemode, align 4, !dbg !4513
  %47 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4514
  %tobool45 = icmp ne %struct.Render* %47, null, !dbg !4514
  br i1 %tobool45, label %land.lhs.true46, label %if.else65, !dbg !4516

land.lhs.true46:                                  ; preds = %if.end41
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4517
  %r47 = getelementptr inbounds %struct.Render, %struct.Render* %48, i32 0, i32 45, !dbg !4518
  %scemode48 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r47, i32 0, i32 46, !dbg !4519
  %49 = load i32, i32* %scemode48, align 4, !dbg !4519
  %and49 = and i32 %49, 32768, !dbg !4520
  %tobool50 = icmp ne i32 %and49, 0, !dbg !4520
  br i1 %tobool50, label %if.then51, label %if.else65, !dbg !4521

if.then51:                                        ; preds = %land.lhs.true46
  %50 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4522
  %r52 = getelementptr inbounds %struct.Render, %struct.Render* %50, i32 0, i32 45, !dbg !4525
  %scemode53 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r52, i32 0, i32 46, !dbg !4526
  %51 = load i32, i32* %scemode53, align 4, !dbg !4526
  %and54 = and i32 %51, 32768, !dbg !4527
  %cmp55 = icmp eq i32 %and54, 0, !dbg !4528
  br i1 %cmp55, label %if.then57, label %if.else, !dbg !4529

if.then57:                                        ; preds = %if.then51
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4530
  %r58 = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 45, !dbg !4531
  %scemode59 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r58, i32 0, i32 46, !dbg !4532
  %53 = load i32, i32* %scemode59, align 4, !dbg !4533
  %and60 = and i32 %53, -32769, !dbg !4533
  store i32 %and60, i32* %scemode59, align 4, !dbg !4533
  br label %if.end64, !dbg !4530

if.else:                                          ; preds = %if.then51
  %54 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4534
  %osa = getelementptr inbounds %struct.Render, %struct.Render* %54, i32 0, i32 5, !dbg !4535
  %55 = load i16, i16* %osa, align 2, !dbg !4535
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4536
  %osa61 = getelementptr inbounds %struct.Render, %struct.Render* %56, i32 0, i32 5, !dbg !4537
  store i16 %55, i16* %osa61, align 2, !dbg !4538
  %57 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4539
  %r62 = getelementptr inbounds %struct.Render, %struct.Render* %57, i32 0, i32 45, !dbg !4540
  %osa63 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r62, i32 0, i32 54, !dbg !4541
  store i16 %55, i16* %osa63, align 2, !dbg !4542
  br label %if.end64

if.end64:                                         ; preds = %if.else, %if.then57
  br label %if.end84, !dbg !4543

if.else65:                                        ; preds = %land.lhs.true46, %if.end41
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4544
  %r66 = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 45, !dbg !4547
  %mode67 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r66, i32 0, i32 47, !dbg !4548
  %59 = load i32, i32* %mode67, align 8, !dbg !4548
  %and68 = and i32 %59, 1, !dbg !4549
  %tobool69 = icmp ne i32 %and68, 0, !dbg !4549
  br i1 %tobool69, label %if.then70, label %if.else81, !dbg !4550

if.then70:                                        ; preds = %if.else65
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4551
  %r71 = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 45, !dbg !4553
  %osa72 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r71, i32 0, i32 54, !dbg !4554
  %61 = load i16, i16* %osa72, align 2, !dbg !4554
  %62 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4555
  %osa73 = getelementptr inbounds %struct.Render, %struct.Render* %62, i32 0, i32 5, !dbg !4556
  store i16 %61, i16* %osa73, align 2, !dbg !4557
  %63 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4558
  %osa74 = getelementptr inbounds %struct.Render, %struct.Render* %63, i32 0, i32 5, !dbg !4560
  %64 = load i16, i16* %osa74, align 2, !dbg !4560
  %conv75 = sext i16 %64 to i32, !dbg !4558
  %cmp76 = icmp sgt i32 %conv75, 16, !dbg !4561
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !4562

if.then78:                                        ; preds = %if.then70
  %65 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4563
  %osa79 = getelementptr inbounds %struct.Render, %struct.Render* %65, i32 0, i32 5, !dbg !4564
  store i16 16, i16* %osa79, align 2, !dbg !4565
  br label %if.end80, !dbg !4563

if.end80:                                         ; preds = %if.then78, %if.then70
  br label %if.end83, !dbg !4566

if.else81:                                        ; preds = %if.else65
  %66 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4567
  %osa82 = getelementptr inbounds %struct.Render, %struct.Render* %66, i32 0, i32 5, !dbg !4568
  store i16 0, i16* %osa82, align 2, !dbg !4569
  br label %if.end83

if.end83:                                         ; preds = %if.else81, %if.end80
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.end64
  %67 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl.addr, align 8, !dbg !4570
  %tobool85 = icmp ne %struct.SceneRenderLayer* %67, null, !dbg !4570
  br i1 %tobool85, label %if.then86, label %if.end98, !dbg !4572

if.then86:                                        ; preds = %if.end84
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4573, metadata !DIExpression()), !dbg !4575
  %68 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !4576
  %layers87 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %68, i32 0, i32 60, !dbg !4577
  %69 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl.addr, align 8, !dbg !4578
  %70 = bitcast %struct.SceneRenderLayer* %69 to i8*, !dbg !4578
  %call88 = call i32 @BLI_findindex(%struct.ListBase* %layers87, i8* %70), !dbg !4579
  store i32 %call88, i32* %index, align 4, !dbg !4575
  %71 = load i32, i32* %index, align 4, !dbg !4580
  %cmp89 = icmp ne i32 %71, -1, !dbg !4582
  br i1 %cmp89, label %if.then91, label %if.end97, !dbg !4583

if.then91:                                        ; preds = %if.then86
  %72 = load i32, i32* %index, align 4, !dbg !4584
  %conv92 = trunc i32 %72 to i16, !dbg !4584
  %73 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4586
  %r93 = getelementptr inbounds %struct.Render, %struct.Render* %73, i32 0, i32 45, !dbg !4587
  %actlay = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r93, i32 0, i32 61, !dbg !4588
  store i16 %conv92, i16* %actlay, align 8, !dbg !4589
  %74 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4590
  %r94 = getelementptr inbounds %struct.Render, %struct.Render* %74, i32 0, i32 45, !dbg !4591
  %scemode95 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r94, i32 0, i32 46, !dbg !4592
  %75 = load i32, i32* %scemode95, align 4, !dbg !4593
  %or96 = or i32 %75, 512, !dbg !4593
  store i32 %or96, i32* %scemode95, align 4, !dbg !4593
  br label %if.end97, !dbg !4594

if.end97:                                         ; preds = %if.then91, %if.then86
  br label %if.end98, !dbg !4595

if.end98:                                         ; preds = %if.end97, %if.end84
  %76 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4596
  call void @make_sample_tables(%struct.Render* %76), !dbg !4597
  %77 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4598
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %77, i32 0, i32 12, !dbg !4599
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 2), !dbg !4600
  %78 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4601
  %r99 = getelementptr inbounds %struct.Render, %struct.Render* %78, i32 0, i32 45, !dbg !4603
  %scemode100 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r99, i32 0, i32 46, !dbg !4604
  %79 = load i32, i32* %scemode100, align 4, !dbg !4604
  %and101 = and i32 %79, 524296, !dbg !4605
  %tobool102 = icmp ne i32 %and101, 0, !dbg !4605
  br i1 %tobool102, label %if.then103, label %if.else154, !dbg !4606

if.then103:                                       ; preds = %if.end98
  %80 = load i8, i8* %had_freestyle, align 1, !dbg !4607
  %conv104 = zext i8 %80 to i32, !dbg !4607
  %tobool105 = icmp ne i32 %conv104, 0, !dbg !4607
  br i1 %tobool105, label %if.then111, label %lor.lhs.false106, !dbg !4610

lor.lhs.false106:                                 ; preds = %if.then103
  %81 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4611
  %r107 = getelementptr inbounds %struct.Render, %struct.Render* %81, i32 0, i32 45, !dbg !4612
  %mode108 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r107, i32 0, i32 47, !dbg !4613
  %82 = load i32, i32* %mode108, align 8, !dbg !4613
  %and109 = and i32 %82, 33554432, !dbg !4614
  %tobool110 = icmp ne i32 %and109, 0, !dbg !4614
  br i1 %tobool110, label %if.then111, label %if.else113, !dbg !4615

if.then111:                                       ; preds = %lor.lhs.false106, %if.then103
  %83 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4616
  %result = getelementptr inbounds %struct.Render, %struct.Render* %83, i32 0, i32 9, !dbg !4618
  %84 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !4618
  call void @render_result_free(%struct.RenderResult* %84), !dbg !4619
  %85 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4620
  %result112 = getelementptr inbounds %struct.Render, %struct.Render* %85, i32 0, i32 9, !dbg !4621
  store %struct.RenderResult* null, %struct.RenderResult** %result112, align 8, !dbg !4622
  br label %if.end153, !dbg !4623

if.else113:                                       ; preds = %lor.lhs.false106
  %86 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4624
  %result114 = getelementptr inbounds %struct.Render, %struct.Render* %86, i32 0, i32 9, !dbg !4626
  %87 = load %struct.RenderResult*, %struct.RenderResult** %result114, align 8, !dbg !4626
  %tobool115 = icmp ne %struct.RenderResult* %87, null, !dbg !4624
  br i1 %tobool115, label %if.then116, label %if.end152, !dbg !4627

if.then116:                                       ; preds = %if.else113
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %actsrl, metadata !4628, metadata !DIExpression()), !dbg !4630
  %88 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4631
  %r117 = getelementptr inbounds %struct.Render, %struct.Render* %88, i32 0, i32 45, !dbg !4632
  %layers118 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r117, i32 0, i32 60, !dbg !4633
  %89 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4634
  %r119 = getelementptr inbounds %struct.Render, %struct.Render* %89, i32 0, i32 45, !dbg !4635
  %actlay120 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r119, i32 0, i32 61, !dbg !4636
  %90 = load i16, i16* %actlay120, align 8, !dbg !4636
  %conv121 = sext i16 %90 to i32, !dbg !4634
  %call122 = call i8* @BLI_findlink(%struct.ListBase* %layers118, i32 %conv121), !dbg !4637
  %91 = bitcast i8* %call122 to %struct.SceneRenderLayer*, !dbg !4637
  store %struct.SceneRenderLayer* %91, %struct.SceneRenderLayer** %actsrl, align 8, !dbg !4630
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl, metadata !4638, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.declare(metadata i8* %have_layer, metadata !4640, metadata !DIExpression()), !dbg !4641
  store i8 0, i8* %have_layer, align 1, !dbg !4641
  %92 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4642
  %result123 = getelementptr inbounds %struct.Render, %struct.Render* %92, i32 0, i32 9, !dbg !4644
  %93 = load %struct.RenderResult*, %struct.RenderResult** %result123, align 8, !dbg !4644
  %layers124 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %93, i32 0, i32 12, !dbg !4645
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers124, i32 0, i32 0, !dbg !4646
  %94 = load i8*, i8** %first, align 8, !dbg !4646
  %95 = bitcast i8* %94 to %struct.RenderLayer*, !dbg !4642
  store %struct.RenderLayer* %95, %struct.RenderLayer** %rl, align 8, !dbg !4647
  br label %for.cond, !dbg !4648

for.cond:                                         ; preds = %for.inc, %if.then116
  %96 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !4649
  %tobool125 = icmp ne %struct.RenderLayer* %96, null, !dbg !4651
  br i1 %tobool125, label %for.body, label %for.end, !dbg !4651

for.body:                                         ; preds = %for.cond
  %97 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !4652
  %name = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %97, i32 0, i32 2, !dbg !4652
  %arraydecay = getelementptr inbounds [74 x i8], [74 x i8]* %name, i64 0, i64 0, !dbg !4652
  %98 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %actsrl, align 8, !dbg !4652
  %name126 = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %98, i32 0, i32 2, !dbg !4652
  %arraydecay127 = getelementptr inbounds [64 x i8], [64 x i8]* %name126, i64 0, i64 0, !dbg !4652
  %call128 = call i32 @strcmp(i8* %arraydecay, i8* %arraydecay127) #6, !dbg !4652
  %cmp129 = icmp eq i32 %call128, 0, !dbg !4652
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !4654

if.then131:                                       ; preds = %for.body
  store i8 1, i8* %have_layer, align 1, !dbg !4655
  br label %if.end132, !dbg !4656

if.end132:                                        ; preds = %if.then131, %for.body
  br label %for.inc, !dbg !4652

for.inc:                                          ; preds = %if.end132
  %99 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !4657
  %next = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %99, i32 0, i32 0, !dbg !4658
  %100 = load %struct.RenderLayer*, %struct.RenderLayer** %next, align 8, !dbg !4658
  store %struct.RenderLayer* %100, %struct.RenderLayer** %rl, align 8, !dbg !4659
  br label %for.cond, !dbg !4660, !llvm.loop !4661

for.end:                                          ; preds = %for.cond
  %101 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4663
  %result133 = getelementptr inbounds %struct.Render, %struct.Render* %101, i32 0, i32 9, !dbg !4665
  %102 = load %struct.RenderResult*, %struct.RenderResult** %result133, align 8, !dbg !4665
  %rectx134 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %102, i32 0, i32 2, !dbg !4666
  %103 = load i32, i32* %rectx134, align 8, !dbg !4666
  %104 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4667
  %rectx135 = getelementptr inbounds %struct.Render, %struct.Render* %104, i32 0, i32 20, !dbg !4668
  %105 = load i32, i32* %rectx135, align 8, !dbg !4668
  %cmp136 = icmp eq i32 %103, %105, !dbg !4669
  br i1 %cmp136, label %land.lhs.true138, label %if.else148, !dbg !4670

land.lhs.true138:                                 ; preds = %for.end
  %106 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4671
  %result139 = getelementptr inbounds %struct.Render, %struct.Render* %106, i32 0, i32 9, !dbg !4672
  %107 = load %struct.RenderResult*, %struct.RenderResult** %result139, align 8, !dbg !4672
  %recty140 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %107, i32 0, i32 3, !dbg !4673
  %108 = load i32, i32* %recty140, align 4, !dbg !4673
  %109 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4674
  %recty141 = getelementptr inbounds %struct.Render, %struct.Render* %109, i32 0, i32 21, !dbg !4675
  %110 = load i32, i32* %recty141, align 4, !dbg !4675
  %cmp142 = icmp eq i32 %108, %110, !dbg !4676
  br i1 %cmp142, label %land.lhs.true144, label %if.else148, !dbg !4677

land.lhs.true144:                                 ; preds = %land.lhs.true138
  %111 = load i8, i8* %have_layer, align 1, !dbg !4678
  %conv145 = zext i8 %111 to i32, !dbg !4678
  %tobool146 = icmp ne i32 %conv145, 0, !dbg !4678
  br i1 %tobool146, label %if.then147, label %if.else148, !dbg !4679

if.then147:                                       ; preds = %land.lhs.true144
  br label %if.end151, !dbg !4680

if.else148:                                       ; preds = %land.lhs.true144, %land.lhs.true138, %for.end
  %112 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4682
  %result149 = getelementptr inbounds %struct.Render, %struct.Render* %112, i32 0, i32 9, !dbg !4684
  %113 = load %struct.RenderResult*, %struct.RenderResult** %result149, align 8, !dbg !4684
  call void @render_result_free(%struct.RenderResult* %113), !dbg !4685
  %114 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4686
  %result150 = getelementptr inbounds %struct.Render, %struct.Render* %114, i32 0, i32 9, !dbg !4687
  store %struct.RenderResult* null, %struct.RenderResult** %result150, align 8, !dbg !4688
  br label %if.end151

if.end151:                                        ; preds = %if.else148, %if.then147
  br label %if.end152, !dbg !4689

if.end152:                                        ; preds = %if.end151, %if.else113
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then111
  br label %if.end164, !dbg !4690

if.else154:                                       ; preds = %if.end98
  %115 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4691
  %result155 = getelementptr inbounds %struct.Render, %struct.Render* %115, i32 0, i32 9, !dbg !4693
  %116 = load %struct.RenderResult*, %struct.RenderResult** %result155, align 8, !dbg !4693
  call void @render_result_free(%struct.RenderResult* %116), !dbg !4694
  %117 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4695
  %call156 = call i8* %117(i64 144, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0)), !dbg !4695
  %118 = bitcast i8* %call156 to %struct.RenderResult*, !dbg !4695
  %119 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4696
  %result157 = getelementptr inbounds %struct.Render, %struct.Render* %119, i32 0, i32 9, !dbg !4697
  store %struct.RenderResult* %118, %struct.RenderResult** %result157, align 8, !dbg !4698
  %120 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4699
  %rectx158 = getelementptr inbounds %struct.Render, %struct.Render* %120, i32 0, i32 20, !dbg !4700
  %121 = load i32, i32* %rectx158, align 8, !dbg !4700
  %122 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4701
  %result159 = getelementptr inbounds %struct.Render, %struct.Render* %122, i32 0, i32 9, !dbg !4702
  %123 = load %struct.RenderResult*, %struct.RenderResult** %result159, align 8, !dbg !4702
  %rectx160 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %123, i32 0, i32 2, !dbg !4703
  store i32 %121, i32* %rectx160, align 8, !dbg !4704
  %124 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4705
  %recty161 = getelementptr inbounds %struct.Render, %struct.Render* %124, i32 0, i32 21, !dbg !4706
  %125 = load i32, i32* %recty161, align 4, !dbg !4706
  %126 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4707
  %result162 = getelementptr inbounds %struct.Render, %struct.Render* %126, i32 0, i32 9, !dbg !4708
  %127 = load %struct.RenderResult*, %struct.RenderResult** %result162, align 8, !dbg !4708
  %recty163 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %127, i32 0, i32 3, !dbg !4709
  store i32 %125, i32* %recty163, align 4, !dbg !4710
  br label %if.end164

if.end164:                                        ; preds = %if.else154, %if.end153
  %128 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4711
  %r165 = getelementptr inbounds %struct.Render, %struct.Render* %128, i32 0, i32 45, !dbg !4713
  %scemode166 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r165, i32 0, i32 46, !dbg !4714
  %129 = load i32, i32* %scemode166, align 4, !dbg !4714
  %and167 = and i32 %129, 524288, !dbg !4715
  %tobool168 = icmp ne i32 %and167, 0, !dbg !4715
  br i1 %tobool168, label %if.then169, label %if.else171, !dbg !4716

if.then169:                                       ; preds = %if.end164
  %130 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4717
  %eval_ctx = getelementptr inbounds %struct.Render, %struct.Render* %130, i32 0, i32 101, !dbg !4718
  %131 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !4718
  %mode170 = getelementptr inbounds %struct.EvaluationContext, %struct.EvaluationContext* %131, i32 0, i32 0, !dbg !4719
  store i32 1, i32* %mode170, align 4, !dbg !4720
  br label %if.end174, !dbg !4717

if.else171:                                       ; preds = %if.end164
  %132 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4721
  %eval_ctx172 = getelementptr inbounds %struct.Render, %struct.Render* %132, i32 0, i32 101, !dbg !4722
  %133 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx172, align 8, !dbg !4722
  %mode173 = getelementptr inbounds %struct.EvaluationContext, %struct.EvaluationContext* %133, i32 0, i32 0, !dbg !4723
  store i32 2, i32* %mode173, align 4, !dbg !4724
  br label %if.end174

if.end174:                                        ; preds = %if.else171, %if.then169
  %134 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4725
  call void @RE_parts_clamp(%struct.Render* %134), !dbg !4726
  %135 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4727
  %resultmutex175 = getelementptr inbounds %struct.Render, %struct.Render* %135, i32 0, i32 12, !dbg !4728
  call void @BLI_rw_mutex_unlock(i32* %resultmutex175), !dbg !4729
  %136 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4730
  %field_offs = getelementptr inbounds %struct.Render, %struct.Render* %136, i32 0, i32 59, !dbg !4731
  store float 0.000000e+00, float* %field_offs, align 4, !dbg !4732
  %137 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4733
  %mblur_offs = getelementptr inbounds %struct.Render, %struct.Render* %137, i32 0, i32 58, !dbg !4734
  store float 0.000000e+00, float* %mblur_offs, align 8, !dbg !4735
  %138 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4736
  call void @RE_init_threadcount(%struct.Render* %138), !dbg !4737
  br label %return, !dbg !4738

return:                                           ; preds = %if.end174, %if.then39
  ret void, !dbg !4738
}

declare dso_local double @PIL_check_seconds_timer() #2

declare dso_local void @BLI_duplicatelist(%struct.ListBase*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @re_init_resolution(%struct.Render* %re, %struct.Render* %source, i32 %winx, i32 %winy, %struct.rcti* %disprect) #0 !dbg !4739 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %source.addr = alloca %struct.Render*, align 8
  %winx.addr = alloca i32, align 4
  %winy.addr = alloca i32, align 4
  %disprect.addr = alloca %struct.rcti*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4742, metadata !DIExpression()), !dbg !4743
  store %struct.Render* %source, %struct.Render** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %source.addr, metadata !4744, metadata !DIExpression()), !dbg !4745
  store i32 %winx, i32* %winx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winx.addr, metadata !4746, metadata !DIExpression()), !dbg !4747
  store i32 %winy, i32* %winy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winy.addr, metadata !4748, metadata !DIExpression()), !dbg !4749
  store %struct.rcti* %disprect, %struct.rcti** %disprect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %disprect.addr, metadata !4750, metadata !DIExpression()), !dbg !4751
  %0 = load i32, i32* %winx.addr, align 4, !dbg !4752
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4753
  %winx1 = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 13, !dbg !4754
  store i32 %0, i32* %winx1, align 4, !dbg !4755
  %2 = load i32, i32* %winy.addr, align 4, !dbg !4756
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4757
  %winy2 = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 14, !dbg !4758
  store i32 %2, i32* %winy2, align 8, !dbg !4759
  %4 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4760
  %tobool = icmp ne %struct.Render* %4, null, !dbg !4760
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4762

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4763
  %r = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 45, !dbg !4764
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !4765
  %6 = load i32, i32* %mode, align 8, !dbg !4765
  %and = and i32 %6, 512, !dbg !4766
  %tobool3 = icmp ne i32 %and, 0, !dbg !4766
  br i1 %tobool3, label %if.then, label %if.else, !dbg !4767

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4768
  %r4 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 45, !dbg !4770
  %border = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r4, i32 0, i32 58, !dbg !4771
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %border, i32 0, i32 0, !dbg !4772
  %8 = load float, float* %xmin, align 8, !dbg !4772
  %9 = load i32, i32* %winx.addr, align 4, !dbg !4773
  %conv = sitofp i32 %9 to float, !dbg !4773
  %mul = fmul float %8, %conv, !dbg !4774
  %conv5 = fptosi float %mul to i32, !dbg !4768
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4775
  %disprect6 = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 15, !dbg !4776
  %xmin7 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect6, i32 0, i32 0, !dbg !4777
  store i32 %conv5, i32* %xmin7, align 4, !dbg !4778
  %11 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4779
  %r8 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 45, !dbg !4780
  %border9 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r8, i32 0, i32 58, !dbg !4781
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %border9, i32 0, i32 1, !dbg !4782
  %12 = load float, float* %xmax, align 4, !dbg !4782
  %13 = load i32, i32* %winx.addr, align 4, !dbg !4783
  %conv10 = sitofp i32 %13 to float, !dbg !4783
  %mul11 = fmul float %12, %conv10, !dbg !4784
  %conv12 = fptosi float %mul11 to i32, !dbg !4779
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4785
  %disprect13 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 15, !dbg !4786
  %xmax14 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect13, i32 0, i32 1, !dbg !4787
  store i32 %conv12, i32* %xmax14, align 4, !dbg !4788
  %15 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4789
  %r15 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 45, !dbg !4790
  %border16 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r15, i32 0, i32 58, !dbg !4791
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %border16, i32 0, i32 2, !dbg !4792
  %16 = load float, float* %ymin, align 8, !dbg !4792
  %17 = load i32, i32* %winy.addr, align 4, !dbg !4793
  %conv17 = sitofp i32 %17 to float, !dbg !4793
  %mul18 = fmul float %16, %conv17, !dbg !4794
  %conv19 = fptosi float %mul18 to i32, !dbg !4789
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4795
  %disprect20 = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 15, !dbg !4796
  %ymin21 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect20, i32 0, i32 2, !dbg !4797
  store i32 %conv19, i32* %ymin21, align 4, !dbg !4798
  %19 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4799
  %r22 = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 45, !dbg !4800
  %border23 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r22, i32 0, i32 58, !dbg !4801
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %border23, i32 0, i32 3, !dbg !4802
  %20 = load float, float* %ymax, align 4, !dbg !4802
  %21 = load i32, i32* %winy.addr, align 4, !dbg !4803
  %conv24 = sitofp i32 %21 to float, !dbg !4803
  %mul25 = fmul float %20, %conv24, !dbg !4804
  %conv26 = fptosi float %mul25 to i32, !dbg !4799
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4805
  %disprect27 = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 15, !dbg !4806
  %ymax28 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect27, i32 0, i32 3, !dbg !4807
  store i32 %conv26, i32* %ymax28, align 4, !dbg !4808
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4809
  %disprect29 = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 15, !dbg !4810
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %disprect29), !dbg !4811
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4812
  %rectx = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 20, !dbg !4813
  store i32 %call, i32* %rectx, align 8, !dbg !4814
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4815
  %disprect30 = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 15, !dbg !4816
  %call31 = call i32 @BLI_rcti_size_y(%struct.rcti* %disprect30), !dbg !4817
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4818
  %recty = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 21, !dbg !4819
  store i32 %call31, i32* %recty, align 4, !dbg !4820
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4821
  %r32 = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 45, !dbg !4822
  %border33 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r32, i32 0, i32 58, !dbg !4823
  %28 = load %struct.Render*, %struct.Render** %source.addr, align 8, !dbg !4824
  %r34 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 45, !dbg !4825
  %border35 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r34, i32 0, i32 58, !dbg !4826
  %29 = bitcast %struct.rctf* %border33 to i8*, !dbg !4826
  %30 = bitcast %struct.rctf* %border35 to i8*, !dbg !4826
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false), !dbg !4826
  br label %if.end56, !dbg !4827

if.else:                                          ; preds = %land.lhs.true, %entry
  %31 = load %struct.rcti*, %struct.rcti** %disprect.addr, align 8, !dbg !4828
  %tobool36 = icmp ne %struct.rcti* %31, null, !dbg !4828
  br i1 %tobool36, label %if.then37, label %if.else45, !dbg !4830

if.then37:                                        ; preds = %if.else
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4831
  %disprect38 = getelementptr inbounds %struct.Render, %struct.Render* %32, i32 0, i32 15, !dbg !4833
  %33 = load %struct.rcti*, %struct.rcti** %disprect.addr, align 8, !dbg !4834
  %34 = bitcast %struct.rcti* %disprect38 to i8*, !dbg !4835
  %35 = bitcast %struct.rcti* %33 to i8*, !dbg !4835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 16, i1 false), !dbg !4835
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4836
  %disprect39 = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 15, !dbg !4837
  %call40 = call i32 @BLI_rcti_size_x(%struct.rcti* %disprect39), !dbg !4838
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4839
  %rectx41 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 20, !dbg !4840
  store i32 %call40, i32* %rectx41, align 8, !dbg !4841
  %38 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4842
  %disprect42 = getelementptr inbounds %struct.Render, %struct.Render* %38, i32 0, i32 15, !dbg !4843
  %call43 = call i32 @BLI_rcti_size_y(%struct.rcti* %disprect42), !dbg !4844
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4845
  %recty44 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 21, !dbg !4846
  store i32 %call43, i32* %recty44, align 4, !dbg !4847
  br label %if.end, !dbg !4848

if.else45:                                        ; preds = %if.else
  %40 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4849
  %disprect46 = getelementptr inbounds %struct.Render, %struct.Render* %40, i32 0, i32 15, !dbg !4851
  %ymin47 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect46, i32 0, i32 2, !dbg !4852
  store i32 0, i32* %ymin47, align 4, !dbg !4853
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4854
  %disprect48 = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 15, !dbg !4855
  %xmin49 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect48, i32 0, i32 0, !dbg !4856
  store i32 0, i32* %xmin49, align 4, !dbg !4857
  %42 = load i32, i32* %winx.addr, align 4, !dbg !4858
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4859
  %disprect50 = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 15, !dbg !4860
  %xmax51 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect50, i32 0, i32 1, !dbg !4861
  store i32 %42, i32* %xmax51, align 4, !dbg !4862
  %44 = load i32, i32* %winy.addr, align 4, !dbg !4863
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4864
  %disprect52 = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 15, !dbg !4865
  %ymax53 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect52, i32 0, i32 3, !dbg !4866
  store i32 %44, i32* %ymax53, align 4, !dbg !4867
  %46 = load i32, i32* %winx.addr, align 4, !dbg !4868
  %47 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4869
  %rectx54 = getelementptr inbounds %struct.Render, %struct.Render* %47, i32 0, i32 20, !dbg !4870
  store i32 %46, i32* %rectx54, align 8, !dbg !4871
  %48 = load i32, i32* %winy.addr, align 4, !dbg !4872
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4873
  %recty55 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 21, !dbg !4874
  store i32 %48, i32* %recty55, align 4, !dbg !4875
  br label %if.end

if.end:                                           ; preds = %if.else45, %if.then37
  br label %if.end56

if.end56:                                         ; preds = %if.end, %if.then
  %50 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4876
  %winx57 = getelementptr inbounds %struct.Render, %struct.Render* %50, i32 0, i32 13, !dbg !4877
  %51 = load i32, i32* %winx57, align 4, !dbg !4877
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4878
  %winy58 = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 14, !dbg !4879
  %53 = load i32, i32* %winy58, align 8, !dbg !4879
  %cmp = icmp sgt i32 %51, %53, !dbg !4880
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4876

cond.true:                                        ; preds = %if.end56
  %54 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4881
  %winy60 = getelementptr inbounds %struct.Render, %struct.Render* %54, i32 0, i32 14, !dbg !4882
  %55 = load i32, i32* %winy60, align 8, !dbg !4882
  br label %cond.end, !dbg !4876

cond.false:                                       ; preds = %if.end56
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4883
  %winx61 = getelementptr inbounds %struct.Render, %struct.Render* %56, i32 0, i32 13, !dbg !4884
  %57 = load i32, i32* %winx61, align 4, !dbg !4884
  br label %cond.end, !dbg !4876

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %55, %cond.true ], [ %57, %cond.false ], !dbg !4876
  %conv62 = sitofp i32 %cond to float, !dbg !4885
  %div = fdiv float 2.000000e+00, %conv62, !dbg !4886
  %add = fadd float 1.000000e+00, %div, !dbg !4887
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4888
  %clipcrop = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 19, !dbg !4889
  store float %add, float* %clipcrop, align 4, !dbg !4890
  ret void, !dbg !4891
}

declare dso_local zeroext i8 @BKE_imtype_is_movie(i8 zeroext) #2

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @check_mode_full_sample(%struct.RenderData* %rd) #0 !dbg !4892 {
entry:
  %rd.addr = alloca %struct.RenderData*, align 8
  %scemode = alloca i32, align 4
  store %struct.RenderData* %rd, %struct.RenderData** %rd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderData** %rd.addr, metadata !4895, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.declare(metadata i32* %scemode, metadata !4897, metadata !DIExpression()), !dbg !4898
  %0 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !4899
  %scemode1 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %0, i32 0, i32 46, !dbg !4900
  %1 = load i32, i32* %scemode1, align 4, !dbg !4900
  store i32 %1, i32* %scemode, align 4, !dbg !4898
  %2 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !4901
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %2, i32 0, i32 47, !dbg !4903
  %3 = load i32, i32* %mode, align 8, !dbg !4903
  %and = and i32 %3, 1, !dbg !4904
  %cmp = icmp eq i32 %and, 0, !dbg !4905
  br i1 %cmp, label %if.then, label %if.end, !dbg !4906

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %scemode, align 4, !dbg !4907
  %and2 = and i32 %4, -32769, !dbg !4907
  store i32 %and2, i32* %scemode, align 4, !dbg !4907
  br label %if.end, !dbg !4908

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %scemode, align 4, !dbg !4909
  %and3 = and i32 %5, -33793, !dbg !4909
  store i32 %and3, i32* %scemode, align 4, !dbg !4909
  %6 = load i32, i32* %scemode, align 4, !dbg !4910
  ret i32 %6, !dbg !4911
}

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

declare dso_local void @make_sample_tables(%struct.Render*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

declare dso_local void @RE_parts_clamp(%struct.Render*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_init_threadcount(%struct.Render* %re) #0 !dbg !4912 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4913, metadata !DIExpression()), !dbg !4914
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4915
  %r = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 45, !dbg !4916
  %call = call i32 @BKE_render_num_threads(%struct.RenderData* %r), !dbg !4917
  %conv = trunc i32 %call to i16, !dbg !4917
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4918
  %r1 = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 45, !dbg !4919
  %threads = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r1, i32 0, i32 14, !dbg !4920
  store i16 %conv, i16* %threads, align 2, !dbg !4921
  ret void, !dbg !4922
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_ChangeResolution(%struct.Render* %re, i32 %winx, i32 %winy, %struct.rcti* %disprect) #0 !dbg !4923 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %winx.addr = alloca i32, align 4
  %winy.addr = alloca i32, align 4
  %disprect.addr = alloca %struct.rcti*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4926, metadata !DIExpression()), !dbg !4927
  store i32 %winx, i32* %winx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winx.addr, metadata !4928, metadata !DIExpression()), !dbg !4929
  store i32 %winy, i32* %winy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winy.addr, metadata !4930, metadata !DIExpression()), !dbg !4931
  store %struct.rcti* %disprect, %struct.rcti** %disprect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %disprect.addr, metadata !4932, metadata !DIExpression()), !dbg !4933
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4934
  %1 = load i32, i32* %winx.addr, align 4, !dbg !4935
  %2 = load i32, i32* %winy.addr, align 4, !dbg !4936
  %3 = load %struct.rcti*, %struct.rcti** %disprect.addr, align 8, !dbg !4937
  call void @re_init_resolution(%struct.Render* %0, %struct.Render* null, i32 %1, i32 %2, %struct.rcti* %3), !dbg !4938
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4939
  call void @RE_parts_clamp(%struct.Render* %4), !dbg !4940
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4941
  %result = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 9, !dbg !4943
  %6 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !4943
  %tobool = icmp ne %struct.RenderResult* %6, null, !dbg !4941
  br i1 %tobool, label %if.then, label %if.end, !dbg !4944

if.then:                                          ; preds = %entry
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4945
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 12, !dbg !4947
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 2), !dbg !4948
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4949
  call void @render_result_rescale(%struct.Render* %8), !dbg !4950
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4951
  %resultmutex1 = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 12, !dbg !4952
  call void @BLI_rw_mutex_unlock(i32* %resultmutex1), !dbg !4953
  br label %if.end, !dbg !4954

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4955
}

; Function Attrs: noinline nounwind uwtable
define internal void @render_result_rescale(%struct.Render* %re) #0 !dbg !4956 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %result = alloca %struct.RenderResult*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %scale_x = alloca float, align 4
  %scale_y = alloca float, align 4
  %src_rectf = alloca float*, align 8
  %rl = alloca %struct.RenderLayer*, align 8
  %dst_rectf = alloca float*, align 8
  %rl18 = alloca %struct.RenderLayer*, align 8
  %src_x = alloca i32, align 4
  %src_y = alloca i32, align 4
  %dst_index = alloca i32, align 4
  %src_index = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4957, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %result, metadata !4959, metadata !DIExpression()), !dbg !4960
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4961
  %result1 = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 9, !dbg !4962
  %1 = load %struct.RenderResult*, %struct.RenderResult** %result1, align 8, !dbg !4962
  store %struct.RenderResult* %1, %struct.RenderResult** %result, align 8, !dbg !4960
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4963, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4965, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.declare(metadata float* %scale_x, metadata !4967, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.declare(metadata float* %scale_y, metadata !4969, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.declare(metadata float** %src_rectf, metadata !4971, metadata !DIExpression()), !dbg !4972
  %2 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !4973
  %rectf = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %2, i32 0, i32 7, !dbg !4974
  %3 = load float*, float** %rectf, align 8, !dbg !4974
  store float* %3, float** %src_rectf, align 8, !dbg !4975
  %4 = load float*, float** %src_rectf, align 8, !dbg !4976
  %cmp = icmp eq float* %4, null, !dbg !4978
  br i1 %cmp, label %if.then, label %if.end6, !dbg !4979

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl, metadata !4980, metadata !DIExpression()), !dbg !4982
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4983
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4984
  %result2 = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 9, !dbg !4985
  %7 = load %struct.RenderResult*, %struct.RenderResult** %result2, align 8, !dbg !4985
  %call = call %struct.RenderLayer* @render_get_active_layer(%struct.Render* %5, %struct.RenderResult* %7), !dbg !4986
  store %struct.RenderLayer* %call, %struct.RenderLayer** %rl, align 8, !dbg !4982
  %8 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !4987
  %cmp3 = icmp ne %struct.RenderLayer* %8, null, !dbg !4989
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !4990

if.then4:                                         ; preds = %if.then
  %9 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !4991
  %rectf5 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %9, i32 0, i32 11, !dbg !4993
  %10 = load float*, float** %rectf5, align 8, !dbg !4993
  store float* %10, float** %src_rectf, align 8, !dbg !4994
  br label %if.end, !dbg !4995

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end6, !dbg !4996

if.end6:                                          ; preds = %if.end, %entry
  %11 = load float*, float** %src_rectf, align 8, !dbg !4997
  %cmp7 = icmp ne float* %11, null, !dbg !4999
  br i1 %cmp7, label %if.then8, label %if.end63, !dbg !5000

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata float** %dst_rectf, metadata !5001, metadata !DIExpression()), !dbg !5003
  store float* null, float** %dst_rectf, align 8, !dbg !5003
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5004
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5005
  %disprect = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 15, !dbg !5006
  %call9 = call %struct.RenderResult* @render_result_new(%struct.Render* %12, %struct.rcti* %disprect, i32 0, i32 0, i8* null), !dbg !5007
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5008
  %result10 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 9, !dbg !5009
  store %struct.RenderResult* %call9, %struct.RenderResult** %result10, align 8, !dbg !5010
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5011
  %result11 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 9, !dbg !5013
  %16 = load %struct.RenderResult*, %struct.RenderResult** %result11, align 8, !dbg !5013
  %cmp12 = icmp ne %struct.RenderResult* %16, null, !dbg !5014
  br i1 %cmp12, label %if.then13, label %if.end62, !dbg !5015

if.then13:                                        ; preds = %if.then8
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5016
  %result14 = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 9, !dbg !5018
  %18 = load %struct.RenderResult*, %struct.RenderResult** %result14, align 8, !dbg !5018
  %rectf15 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %18, i32 0, i32 7, !dbg !5019
  %19 = load float*, float** %rectf15, align 8, !dbg !5019
  store float* %19, float** %dst_rectf, align 8, !dbg !5020
  %20 = load float*, float** %dst_rectf, align 8, !dbg !5021
  %cmp16 = icmp eq float* %20, null, !dbg !5023
  br i1 %cmp16, label %if.then17, label %if.end25, !dbg !5024

if.then17:                                        ; preds = %if.then13
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl18, metadata !5025, metadata !DIExpression()), !dbg !5027
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5028
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5029
  %result19 = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 9, !dbg !5030
  %23 = load %struct.RenderResult*, %struct.RenderResult** %result19, align 8, !dbg !5030
  %call20 = call %struct.RenderLayer* @render_get_active_layer(%struct.Render* %21, %struct.RenderResult* %23), !dbg !5031
  store %struct.RenderLayer* %call20, %struct.RenderLayer** %rl18, align 8, !dbg !5032
  %24 = load %struct.RenderLayer*, %struct.RenderLayer** %rl18, align 8, !dbg !5033
  %cmp21 = icmp ne %struct.RenderLayer* %24, null, !dbg !5035
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !5036

if.then22:                                        ; preds = %if.then17
  %25 = load %struct.RenderLayer*, %struct.RenderLayer** %rl18, align 8, !dbg !5037
  %rectf23 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %25, i32 0, i32 11, !dbg !5039
  %26 = load float*, float** %rectf23, align 8, !dbg !5039
  store float* %26, float** %dst_rectf, align 8, !dbg !5040
  br label %if.end24, !dbg !5041

if.end24:                                         ; preds = %if.then22, %if.then17
  br label %if.end25, !dbg !5042

if.end25:                                         ; preds = %if.end24, %if.then13
  %27 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !5043
  %rectx = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %27, i32 0, i32 2, !dbg !5044
  %28 = load i32, i32* %rectx, align 8, !dbg !5044
  %conv = sitofp i32 %28 to float, !dbg !5045
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5046
  %result26 = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 9, !dbg !5047
  %30 = load %struct.RenderResult*, %struct.RenderResult** %result26, align 8, !dbg !5047
  %rectx27 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %30, i32 0, i32 2, !dbg !5048
  %31 = load i32, i32* %rectx27, align 8, !dbg !5048
  %conv28 = sitofp i32 %31 to float, !dbg !5046
  %div = fdiv float %conv, %conv28, !dbg !5049
  store float %div, float* %scale_x, align 4, !dbg !5050
  %32 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !5051
  %recty = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %32, i32 0, i32 3, !dbg !5052
  %33 = load i32, i32* %recty, align 4, !dbg !5052
  %conv29 = sitofp i32 %33 to float, !dbg !5053
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5054
  %result30 = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 9, !dbg !5055
  %35 = load %struct.RenderResult*, %struct.RenderResult** %result30, align 8, !dbg !5055
  %recty31 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %35, i32 0, i32 3, !dbg !5056
  %36 = load i32, i32* %recty31, align 4, !dbg !5056
  %conv32 = sitofp i32 %36 to float, !dbg !5054
  %div33 = fdiv float %conv29, %conv32, !dbg !5057
  store float %div33, float* %scale_y, align 4, !dbg !5058
  store i32 0, i32* %x, align 4, !dbg !5059
  br label %for.cond, !dbg !5061

for.cond:                                         ; preds = %for.inc59, %if.end25
  %37 = load i32, i32* %x, align 4, !dbg !5062
  %38 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5064
  %result34 = getelementptr inbounds %struct.Render, %struct.Render* %38, i32 0, i32 9, !dbg !5065
  %39 = load %struct.RenderResult*, %struct.RenderResult** %result34, align 8, !dbg !5065
  %rectx35 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %39, i32 0, i32 2, !dbg !5066
  %40 = load i32, i32* %rectx35, align 8, !dbg !5066
  %cmp36 = icmp slt i32 %37, %40, !dbg !5067
  br i1 %cmp36, label %for.body, label %for.end61, !dbg !5068

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %y, align 4, !dbg !5069
  br label %for.cond38, !dbg !5072

for.cond38:                                       ; preds = %for.inc, %for.body
  %41 = load i32, i32* %y, align 4, !dbg !5073
  %42 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5075
  %result39 = getelementptr inbounds %struct.Render, %struct.Render* %42, i32 0, i32 9, !dbg !5076
  %43 = load %struct.RenderResult*, %struct.RenderResult** %result39, align 8, !dbg !5076
  %recty40 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %43, i32 0, i32 3, !dbg !5077
  %44 = load i32, i32* %recty40, align 4, !dbg !5077
  %cmp41 = icmp slt i32 %41, %44, !dbg !5078
  br i1 %cmp41, label %for.body43, label %for.end, !dbg !5079

for.body43:                                       ; preds = %for.cond38
  call void @llvm.dbg.declare(metadata i32* %src_x, metadata !5080, metadata !DIExpression()), !dbg !5082
  %45 = load i32, i32* %x, align 4, !dbg !5083
  %conv44 = sitofp i32 %45 to float, !dbg !5083
  %46 = load float, float* %scale_x, align 4, !dbg !5084
  %mul = fmul float %conv44, %46, !dbg !5085
  %conv45 = fptosi float %mul to i32, !dbg !5083
  store i32 %conv45, i32* %src_x, align 4, !dbg !5082
  call void @llvm.dbg.declare(metadata i32* %src_y, metadata !5086, metadata !DIExpression()), !dbg !5087
  %47 = load i32, i32* %y, align 4, !dbg !5088
  %conv46 = sitofp i32 %47 to float, !dbg !5088
  %48 = load float, float* %scale_y, align 4, !dbg !5089
  %mul47 = fmul float %conv46, %48, !dbg !5090
  %conv48 = fptosi float %mul47 to i32, !dbg !5088
  store i32 %conv48, i32* %src_y, align 4, !dbg !5087
  call void @llvm.dbg.declare(metadata i32* %dst_index, metadata !5091, metadata !DIExpression()), !dbg !5092
  %49 = load i32, i32* %y, align 4, !dbg !5093
  %50 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5094
  %result49 = getelementptr inbounds %struct.Render, %struct.Render* %50, i32 0, i32 9, !dbg !5095
  %51 = load %struct.RenderResult*, %struct.RenderResult** %result49, align 8, !dbg !5095
  %rectx50 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %51, i32 0, i32 2, !dbg !5096
  %52 = load i32, i32* %rectx50, align 8, !dbg !5096
  %mul51 = mul nsw i32 %49, %52, !dbg !5097
  %53 = load i32, i32* %x, align 4, !dbg !5098
  %add = add nsw i32 %mul51, %53, !dbg !5099
  store i32 %add, i32* %dst_index, align 4, !dbg !5092
  call void @llvm.dbg.declare(metadata i32* %src_index, metadata !5100, metadata !DIExpression()), !dbg !5101
  %54 = load i32, i32* %src_y, align 4, !dbg !5102
  %55 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !5103
  %rectx52 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %55, i32 0, i32 2, !dbg !5104
  %56 = load i32, i32* %rectx52, align 8, !dbg !5104
  %mul53 = mul nsw i32 %54, %56, !dbg !5105
  %57 = load i32, i32* %src_x, align 4, !dbg !5106
  %add54 = add nsw i32 %mul53, %57, !dbg !5107
  store i32 %add54, i32* %src_index, align 4, !dbg !5101
  %58 = load float*, float** %dst_rectf, align 8, !dbg !5108
  %59 = load i32, i32* %dst_index, align 4, !dbg !5109
  %mul55 = mul nsw i32 %59, 4, !dbg !5110
  %idx.ext = sext i32 %mul55 to i64, !dbg !5111
  %add.ptr = getelementptr inbounds float, float* %58, i64 %idx.ext, !dbg !5111
  %60 = load float*, float** %src_rectf, align 8, !dbg !5112
  %61 = load i32, i32* %src_index, align 4, !dbg !5113
  %mul56 = mul nsw i32 %61, 4, !dbg !5114
  %idx.ext57 = sext i32 %mul56 to i64, !dbg !5115
  %add.ptr58 = getelementptr inbounds float, float* %60, i64 %idx.ext57, !dbg !5115
  call void @copy_v4_v4(float* %add.ptr, float* %add.ptr58), !dbg !5116
  br label %for.inc, !dbg !5117

for.inc:                                          ; preds = %for.body43
  %62 = load i32, i32* %y, align 4, !dbg !5118
  %inc = add nsw i32 %62, 1, !dbg !5118
  store i32 %inc, i32* %y, align 4, !dbg !5118
  br label %for.cond38, !dbg !5119, !llvm.loop !5120

for.end:                                          ; preds = %for.cond38
  br label %for.inc59, !dbg !5122

for.inc59:                                        ; preds = %for.end
  %63 = load i32, i32* %x, align 4, !dbg !5123
  %inc60 = add nsw i32 %63, 1, !dbg !5123
  store i32 %inc60, i32* %x, align 4, !dbg !5123
  br label %for.cond, !dbg !5124, !llvm.loop !5125

for.end61:                                        ; preds = %for.cond
  br label %if.end62, !dbg !5127

if.end62:                                         ; preds = %for.end61, %if.then8
  br label %if.end63, !dbg !5128

if.end63:                                         ; preds = %if.end62, %if.end6
  %64 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !5129
  call void @render_result_free(%struct.RenderResult* %64), !dbg !5130
  ret void, !dbg !5131
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_ChangeModeFlag(%struct.Render* %re, i32 %flag, i8 zeroext %clear) #0 !dbg !5132 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %flag.addr = alloca i32, align 4
  %clear.addr = alloca i8, align 1
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5135, metadata !DIExpression()), !dbg !5136
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !5137, metadata !DIExpression()), !dbg !5138
  store i8 %clear, i8* %clear.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %clear.addr, metadata !5139, metadata !DIExpression()), !dbg !5140
  %0 = load i8, i8* %clear.addr, align 1, !dbg !5141
  %tobool = icmp ne i8 %0, 0, !dbg !5141
  br i1 %tobool, label %if.then, label %if.else, !dbg !5143

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %flag.addr, align 4, !dbg !5144
  %neg = xor i32 %1, -1, !dbg !5146
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5147
  %r = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 45, !dbg !5148
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !5149
  %3 = load i32, i32* %mode, align 8, !dbg !5150
  %and = and i32 %3, %neg, !dbg !5150
  store i32 %and, i32* %mode, align 8, !dbg !5150
  br label %if.end, !dbg !5151

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %flag.addr, align 4, !dbg !5152
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5154
  %r1 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 45, !dbg !5155
  %mode2 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r1, i32 0, i32 47, !dbg !5156
  %6 = load i32, i32* %mode2, align 8, !dbg !5157
  %or = or i32 %6, %4, !dbg !5157
  store i32 %or, i32* %mode2, align 8, !dbg !5157
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5158
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @render_update_anim_renderdata(%struct.Render* %re, %struct.RenderData* %rd) #0 !dbg !5159 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %rd.addr = alloca %struct.RenderData*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5162, metadata !DIExpression()), !dbg !5163
  store %struct.RenderData* %rd, %struct.RenderData** %rd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderData** %rd.addr, metadata !5164, metadata !DIExpression()), !dbg !5165
  %0 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !5166
  %gauss = getelementptr inbounds %struct.RenderData, %struct.RenderData* %0, i32 0, i32 66, !dbg !5167
  %1 = load float, float* %gauss, align 8, !dbg !5167
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5168
  %r = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 45, !dbg !5169
  %gauss1 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 66, !dbg !5170
  store float %1, float* %gauss1, align 8, !dbg !5171
  %3 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !5172
  %mblur_samples = getelementptr inbounds %struct.RenderData, %struct.RenderData* %3, i32 0, i32 62, !dbg !5173
  %4 = load i16, i16* %mblur_samples, align 2, !dbg !5173
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5174
  %r2 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 45, !dbg !5175
  %mblur_samples3 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r2, i32 0, i32 62, !dbg !5176
  store i16 %4, i16* %mblur_samples3, align 2, !dbg !5177
  %6 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !5178
  %blurfac = getelementptr inbounds %struct.RenderData, %struct.RenderData* %6, i32 0, i32 16, !dbg !5179
  %7 = load float, float* %blurfac, align 8, !dbg !5179
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5180
  %r4 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 45, !dbg !5181
  %blurfac5 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r4, i32 0, i32 16, !dbg !5182
  store float %7, float* %blurfac5, align 8, !dbg !5183
  %9 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !5184
  %line_thickness_mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %9, i32 0, i32 113, !dbg !5185
  %10 = load i32, i32* %line_thickness_mode, align 8, !dbg !5185
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5186
  %r6 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 45, !dbg !5187
  %line_thickness_mode7 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r6, i32 0, i32 113, !dbg !5188
  store i32 %10, i32* %line_thickness_mode7, align 8, !dbg !5189
  %12 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !5190
  %unit_line_thickness = getelementptr inbounds %struct.RenderData, %struct.RenderData* %12, i32 0, i32 114, !dbg !5191
  %13 = load float, float* %unit_line_thickness, align 4, !dbg !5191
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5192
  %r8 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 45, !dbg !5193
  %unit_line_thickness9 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r8, i32 0, i32 114, !dbg !5194
  store float %13, float* %unit_line_thickness9, align 4, !dbg !5195
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5196
  %r10 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 45, !dbg !5197
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r10, i32 0, i32 60, !dbg !5198
  call void @BLI_freelistN(%struct.ListBase* %layers), !dbg !5199
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5200
  %r11 = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 45, !dbg !5201
  %layers12 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r11, i32 0, i32 60, !dbg !5202
  %17 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !5203
  %layers13 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %17, i32 0, i32 60, !dbg !5204
  call void @BLI_duplicatelist(%struct.ListBase* %layers12, %struct.ListBase* %layers13), !dbg !5205
  ret void, !dbg !5206
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_SetWindow(%struct.Render* %re, %struct.rctf* %viewplane, float %clipsta, float %clipend) #0 !dbg !5207 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %viewplane.addr = alloca %struct.rctf*, align 8
  %clipsta.addr = alloca float, align 4
  %clipend.addr = alloca float, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5211, metadata !DIExpression()), !dbg !5212
  store %struct.rctf* %viewplane, %struct.rctf** %viewplane.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %viewplane.addr, metadata !5213, metadata !DIExpression()), !dbg !5214
  store float %clipsta, float* %clipsta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %clipsta.addr, metadata !5215, metadata !DIExpression()), !dbg !5216
  store float %clipend, float* %clipend.addr, align 4
  call void @llvm.dbg.declare(metadata float* %clipend.addr, metadata !5217, metadata !DIExpression()), !dbg !5218
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5219
  %viewplane1 = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 16, !dbg !5220
  %1 = load %struct.rctf*, %struct.rctf** %viewplane.addr, align 8, !dbg !5221
  %2 = bitcast %struct.rctf* %viewplane1 to i8*, !dbg !5222
  %3 = bitcast %struct.rctf* %1 to i8*, !dbg !5222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 16, i1 false), !dbg !5222
  %4 = load float, float* %clipsta.addr, align 4, !dbg !5223
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5224
  %clipsta2 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 36, !dbg !5225
  store float %4, float* %clipsta2, align 8, !dbg !5226
  %6 = load float, float* %clipend.addr, align 4, !dbg !5227
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5228
  %clipend3 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 37, !dbg !5229
  store float %6, float* %clipend3, align 4, !dbg !5230
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5231
  %r = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 45, !dbg !5232
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !5233
  %9 = load i32, i32* %mode, align 8, !dbg !5234
  %and = and i32 %9, -9, !dbg !5234
  store i32 %and, i32* %mode, align 8, !dbg !5234
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5235
  %winmat = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 35, !dbg !5236
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !5235
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5237
  %viewplane4 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 16, !dbg !5238
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %viewplane4, i32 0, i32 0, !dbg !5239
  %12 = load float, float* %xmin, align 4, !dbg !5239
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5240
  %viewplane5 = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 16, !dbg !5241
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %viewplane5, i32 0, i32 1, !dbg !5242
  %14 = load float, float* %xmax, align 4, !dbg !5242
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5243
  %viewplane6 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 16, !dbg !5244
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %viewplane6, i32 0, i32 2, !dbg !5245
  %16 = load float, float* %ymin, align 4, !dbg !5245
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5246
  %viewplane7 = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 16, !dbg !5247
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %viewplane7, i32 0, i32 3, !dbg !5248
  %18 = load float, float* %ymax, align 4, !dbg !5248
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5249
  %clipsta8 = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 36, !dbg !5250
  %20 = load float, float* %clipsta8, align 8, !dbg !5250
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5251
  %clipend9 = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 37, !dbg !5252
  %22 = load float, float* %clipend9, align 4, !dbg !5252
  call void @perspective_m4([4 x float]* %arraydecay, float %12, float %14, float %16, float %18, float %20, float %22), !dbg !5253
  ret void, !dbg !5254
}

declare dso_local void @perspective_m4([4 x float]*, float, float, float, float, float, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_SetOrtho(%struct.Render* %re, %struct.rctf* %viewplane, float %clipsta, float %clipend) #0 !dbg !5255 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %viewplane.addr = alloca %struct.rctf*, align 8
  %clipsta.addr = alloca float, align 4
  %clipend.addr = alloca float, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5256, metadata !DIExpression()), !dbg !5257
  store %struct.rctf* %viewplane, %struct.rctf** %viewplane.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %viewplane.addr, metadata !5258, metadata !DIExpression()), !dbg !5259
  store float %clipsta, float* %clipsta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %clipsta.addr, metadata !5260, metadata !DIExpression()), !dbg !5261
  store float %clipend, float* %clipend.addr, align 4
  call void @llvm.dbg.declare(metadata float* %clipend.addr, metadata !5262, metadata !DIExpression()), !dbg !5263
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5264
  %viewplane1 = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 16, !dbg !5265
  %1 = load %struct.rctf*, %struct.rctf** %viewplane.addr, align 8, !dbg !5266
  %2 = bitcast %struct.rctf* %viewplane1 to i8*, !dbg !5267
  %3 = bitcast %struct.rctf* %1 to i8*, !dbg !5267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 16, i1 false), !dbg !5267
  %4 = load float, float* %clipsta.addr, align 4, !dbg !5268
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5269
  %clipsta2 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 36, !dbg !5270
  store float %4, float* %clipsta2, align 8, !dbg !5271
  %6 = load float, float* %clipend.addr, align 4, !dbg !5272
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5273
  %clipend3 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 37, !dbg !5274
  store float %6, float* %clipend3, align 4, !dbg !5275
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5276
  %r = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 45, !dbg !5277
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !5278
  %9 = load i32, i32* %mode, align 8, !dbg !5279
  %or = or i32 %9, 8, !dbg !5279
  store i32 %or, i32* %mode, align 8, !dbg !5279
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5280
  %winmat = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 35, !dbg !5281
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !5280
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5282
  %viewplane4 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 16, !dbg !5283
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %viewplane4, i32 0, i32 0, !dbg !5284
  %12 = load float, float* %xmin, align 4, !dbg !5284
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5285
  %viewplane5 = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 16, !dbg !5286
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %viewplane5, i32 0, i32 1, !dbg !5287
  %14 = load float, float* %xmax, align 4, !dbg !5287
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5288
  %viewplane6 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 16, !dbg !5289
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %viewplane6, i32 0, i32 2, !dbg !5290
  %16 = load float, float* %ymin, align 4, !dbg !5290
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5291
  %viewplane7 = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 16, !dbg !5292
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %viewplane7, i32 0, i32 3, !dbg !5293
  %18 = load float, float* %ymax, align 4, !dbg !5293
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5294
  %clipsta8 = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 36, !dbg !5295
  %20 = load float, float* %clipsta8, align 8, !dbg !5295
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5296
  %clipend9 = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 37, !dbg !5297
  %22 = load float, float* %clipend9, align 4, !dbg !5297
  call void @orthographic_m4([4 x float]* %arraydecay, float %12, float %14, float %16, float %18, float %20, float %22), !dbg !5298
  ret void, !dbg !5299
}

declare dso_local void @orthographic_m4([4 x float]*, float, float, float, float, float, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_SetView(%struct.Render* %re, [4 x float]* %mat) #0 !dbg !5300 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5303, metadata !DIExpression()), !dbg !5304
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !5305, metadata !DIExpression()), !dbg !5306
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5307
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 32, !dbg !5308
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !5307
  %1 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5309
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %1), !dbg !5310
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5311
  %viewinv = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 33, !dbg !5312
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !5311
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5313
  %viewmat2 = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 32, !dbg !5314
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat2, i64 0, i64 0, !dbg !5313
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay1, [4 x float]* %arraydecay3), !dbg !5315
  ret void, !dbg !5316
}

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_GetViewPlane(%struct.Render* %re, %struct.rctf* %viewplane, %struct.rcti* %disprect) #0 !dbg !5317 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %viewplane.addr = alloca %struct.rctf*, align 8
  %disprect.addr = alloca %struct.rcti*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5320, metadata !DIExpression()), !dbg !5321
  store %struct.rctf* %viewplane, %struct.rctf** %viewplane.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %viewplane.addr, metadata !5322, metadata !DIExpression()), !dbg !5323
  store %struct.rcti* %disprect, %struct.rcti** %disprect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %disprect.addr, metadata !5324, metadata !DIExpression()), !dbg !5325
  %0 = load %struct.rctf*, %struct.rctf** %viewplane.addr, align 8, !dbg !5326
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5327
  %viewplane1 = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 16, !dbg !5328
  %2 = bitcast %struct.rctf* %0 to i8*, !dbg !5328
  %3 = bitcast %struct.rctf* %viewplane1 to i8*, !dbg !5328
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 16, i1 false), !dbg !5328
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5329
  %r = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 45, !dbg !5331
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !5332
  %5 = load i32, i32* %mode, align 8, !dbg !5332
  %and = and i32 %5, 512, !dbg !5333
  %tobool = icmp ne i32 %and, 0, !dbg !5333
  br i1 %tobool, label %if.then, label %if.else, !dbg !5334

if.then:                                          ; preds = %entry
  %6 = load %struct.rcti*, %struct.rcti** %disprect.addr, align 8, !dbg !5335
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5336
  %disprect2 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 15, !dbg !5337
  %8 = bitcast %struct.rcti* %6 to i8*, !dbg !5337
  %9 = bitcast %struct.rcti* %disprect2 to i8*, !dbg !5337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 16, i1 false), !dbg !5337
  br label %if.end, !dbg !5338

if.else:                                          ; preds = %entry
  %10 = load %struct.rcti*, %struct.rcti** %disprect.addr, align 8, !dbg !5339
  call void @BLI_rcti_init(%struct.rcti* %10, i32 0, i32 0, i32 0, i32 0), !dbg !5340
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5341
}

declare dso_local void @BLI_rcti_init(%struct.rcti*, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_GetView(%struct.Render* %re, [4 x float]* %mat) #0 !dbg !5342 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5343, metadata !DIExpression()), !dbg !5344
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !5345, metadata !DIExpression()), !dbg !5346
  %0 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5347
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5348
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 32, !dbg !5349
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !5348
  call void @copy_m4_m4([4 x float]* %0, [4 x float]* %arraydecay), !dbg !5350
  ret void, !dbg !5351
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_display_init_cb(%struct.Render* %re, i8* %handle, void (i8*, %struct.RenderResult*)* %f) #0 !dbg !5352 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %handle.addr = alloca i8*, align 8
  %f.addr = alloca void (i8*, %struct.RenderResult*)*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5355, metadata !DIExpression()), !dbg !5356
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5357, metadata !DIExpression()), !dbg !5358
  store void (i8*, %struct.RenderResult*)* %f, void (i8*, %struct.RenderResult*)** %f.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, %struct.RenderResult*)** %f.addr, metadata !5359, metadata !DIExpression()), !dbg !5360
  %0 = load void (i8*, %struct.RenderResult*)*, void (i8*, %struct.RenderResult*)** %f.addr, align 8, !dbg !5361
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5362
  %display_init = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 82, !dbg !5363
  store void (i8*, %struct.RenderResult*)* %0, void (i8*, %struct.RenderResult*)** %display_init, align 8, !dbg !5364
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !5365
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5366
  %dih = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 83, !dbg !5367
  store i8* %2, i8** %dih, align 8, !dbg !5368
  ret void, !dbg !5369
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_display_clear_cb(%struct.Render* %re, i8* %handle, void (i8*, %struct.RenderResult*)* %f) #0 !dbg !5370 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %handle.addr = alloca i8*, align 8
  %f.addr = alloca void (i8*, %struct.RenderResult*)*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5371, metadata !DIExpression()), !dbg !5372
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5373, metadata !DIExpression()), !dbg !5374
  store void (i8*, %struct.RenderResult*)* %f, void (i8*, %struct.RenderResult*)** %f.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, %struct.RenderResult*)** %f.addr, metadata !5375, metadata !DIExpression()), !dbg !5376
  %0 = load void (i8*, %struct.RenderResult*)*, void (i8*, %struct.RenderResult*)** %f.addr, align 8, !dbg !5377
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5378
  %display_clear = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 84, !dbg !5379
  store void (i8*, %struct.RenderResult*)* %0, void (i8*, %struct.RenderResult*)** %display_clear, align 8, !dbg !5380
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !5381
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5382
  %dch = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 85, !dbg !5383
  store i8* %2, i8** %dch, align 8, !dbg !5384
  ret void, !dbg !5385
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_display_update_cb(%struct.Render* %re, i8* %handle, void (i8*, %struct.RenderResult*, %struct.rcti*)* %f) #0 !dbg !5386 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %handle.addr = alloca i8*, align 8
  %f.addr = alloca void (i8*, %struct.RenderResult*, %struct.rcti*)*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5389, metadata !DIExpression()), !dbg !5390
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5391, metadata !DIExpression()), !dbg !5392
  store void (i8*, %struct.RenderResult*, %struct.rcti*)* %f, void (i8*, %struct.RenderResult*, %struct.rcti*)** %f.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, %struct.RenderResult*, %struct.rcti*)** %f.addr, metadata !5393, metadata !DIExpression()), !dbg !5394
  %0 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %f.addr, align 8, !dbg !5395
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5396
  %display_update = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 86, !dbg !5397
  store void (i8*, %struct.RenderResult*, %struct.rcti*)* %0, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !5398
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !5399
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5400
  %duh = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 87, !dbg !5401
  store i8* %2, i8** %duh, align 8, !dbg !5402
  ret void, !dbg !5403
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_current_scene_update_cb(%struct.Render* %re, i8* %handle, void (i8*, %struct.Scene*)* %f) #0 !dbg !5404 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %handle.addr = alloca i8*, align 8
  %f.addr = alloca void (i8*, %struct.Scene*)*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5408, metadata !DIExpression()), !dbg !5409
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5410, metadata !DIExpression()), !dbg !5411
  store void (i8*, %struct.Scene*)* %f, void (i8*, %struct.Scene*)** %f.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, %struct.Scene*)** %f.addr, metadata !5412, metadata !DIExpression()), !dbg !5413
  %0 = load void (i8*, %struct.Scene*)*, void (i8*, %struct.Scene*)** %f.addr, align 8, !dbg !5414
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5415
  %current_scene_update = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 88, !dbg !5416
  store void (i8*, %struct.Scene*)* %0, void (i8*, %struct.Scene*)** %current_scene_update, align 8, !dbg !5417
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !5418
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5419
  %suh = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 89, !dbg !5420
  store i8* %2, i8** %suh, align 8, !dbg !5421
  ret void, !dbg !5422
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_stats_draw_cb(%struct.Render* %re, i8* %handle, void (i8*, %struct.RenderStats*)* %f) #0 !dbg !5423 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %handle.addr = alloca i8*, align 8
  %f.addr = alloca void (i8*, %struct.RenderStats*)*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5426, metadata !DIExpression()), !dbg !5427
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5428, metadata !DIExpression()), !dbg !5429
  store void (i8*, %struct.RenderStats*)* %f, void (i8*, %struct.RenderStats*)** %f.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, %struct.RenderStats*)** %f.addr, metadata !5430, metadata !DIExpression()), !dbg !5431
  %0 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %f.addr, align 8, !dbg !5432
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5433
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 90, !dbg !5434
  store void (i8*, %struct.RenderStats*)* %0, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !5435
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !5436
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5437
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 91, !dbg !5438
  store i8* %2, i8** %sdh, align 8, !dbg !5439
  ret void, !dbg !5440
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_progress_cb(%struct.Render* %re, i8* %handle, void (i8*, float)* %f) #0 !dbg !5441 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %handle.addr = alloca i8*, align 8
  %f.addr = alloca void (i8*, float)*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5444, metadata !DIExpression()), !dbg !5445
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5446, metadata !DIExpression()), !dbg !5447
  store void (i8*, float)* %f, void (i8*, float)** %f.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, float)** %f.addr, metadata !5448, metadata !DIExpression()), !dbg !5449
  %0 = load void (i8*, float)*, void (i8*, float)** %f.addr, align 8, !dbg !5450
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5451
  %progress = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 92, !dbg !5452
  store void (i8*, float)* %0, void (i8*, float)** %progress, align 8, !dbg !5453
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !5454
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5455
  %prh = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 93, !dbg !5456
  store i8* %2, i8** %prh, align 8, !dbg !5457
  ret void, !dbg !5458
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_draw_lock_cb(%struct.Render* %re, i8* %handle, void (i8*, i32)* %f) #0 !dbg !5459 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %handle.addr = alloca i8*, align 8
  %f.addr = alloca void (i8*, i32)*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5462, metadata !DIExpression()), !dbg !5463
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5464, metadata !DIExpression()), !dbg !5465
  store void (i8*, i32)* %f, void (i8*, i32)** %f.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32)** %f.addr, metadata !5466, metadata !DIExpression()), !dbg !5467
  %0 = load void (i8*, i32)*, void (i8*, i32)** %f.addr, align 8, !dbg !5468
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5469
  %draw_lock = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 94, !dbg !5470
  store void (i8*, i32)* %0, void (i8*, i32)** %draw_lock, align 8, !dbg !5471
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !5472
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5473
  %dlh = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 95, !dbg !5474
  store i8* %2, i8** %dlh, align 8, !dbg !5475
  ret void, !dbg !5476
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_test_break_cb(%struct.Render* %re, i8* %handle, i32 (i8*)* %f) #0 !dbg !5477 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %handle.addr = alloca i8*, align 8
  %f.addr = alloca i32 (i8*)*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5480, metadata !DIExpression()), !dbg !5481
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5482, metadata !DIExpression()), !dbg !5483
  store i32 (i8*)* %f, i32 (i8*)** %f.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*)** %f.addr, metadata !5484, metadata !DIExpression()), !dbg !5485
  %0 = load i32 (i8*)*, i32 (i8*)** %f.addr, align 8, !dbg !5486
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5487
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 96, !dbg !5488
  store i32 (i8*)* %0, i32 (i8*)** %test_break, align 8, !dbg !5489
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !5490
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5491
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 97, !dbg !5492
  store i8* %2, i8** %tbh, align 8, !dbg !5493
  ret void, !dbg !5494
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @panorama_pixel_rot(%struct.Render* %re) #0 !dbg !5495 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %psize = alloca float, align 4
  %phi = alloca float, align 4
  %xfac = alloca float, align 4
  %borderfac = alloca float, align 4
  %xparts = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5498, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.declare(metadata float* %psize, metadata !5500, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.declare(metadata float* %phi, metadata !5502, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.declare(metadata float* %xfac, metadata !5504, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.declare(metadata float* %borderfac, metadata !5506, metadata !DIExpression()), !dbg !5507
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5508
  %disprect = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 15, !dbg !5509
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %disprect), !dbg !5510
  %conv = sitofp i32 %call to float, !dbg !5511
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5512
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 13, !dbg !5513
  %2 = load i32, i32* %winx, align 4, !dbg !5513
  %conv1 = sitofp i32 %2 to float, !dbg !5514
  %div = fdiv float %conv, %conv1, !dbg !5515
  store float %div, float* %borderfac, align 4, !dbg !5507
  call void @llvm.dbg.declare(metadata i32* %xparts, metadata !5516, metadata !DIExpression()), !dbg !5517
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5518
  %rectx = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 20, !dbg !5519
  %4 = load i32, i32* %rectx, align 8, !dbg !5519
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5520
  %partx = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 22, !dbg !5521
  %6 = load i32, i32* %partx, align 8, !dbg !5521
  %add = add nsw i32 %4, %6, !dbg !5522
  %sub = sub nsw i32 %add, 1, !dbg !5523
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5524
  %partx2 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 22, !dbg !5525
  %8 = load i32, i32* %partx2, align 8, !dbg !5525
  %div3 = sdiv i32 %sub, %8, !dbg !5526
  store i32 %div3, i32* %xparts, align 4, !dbg !5517
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5527
  %viewplane = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 16, !dbg !5528
  %call4 = call float @BLI_rctf_size_x(%struct.rctf* %viewplane), !dbg !5529
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5530
  %winx5 = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 13, !dbg !5531
  %11 = load i32, i32* %winx5, align 4, !dbg !5531
  %conv6 = sitofp i32 %11 to float, !dbg !5532
  %div7 = fdiv float %call4, %conv6, !dbg !5533
  store float %div7, float* %psize, align 4, !dbg !5534
  %12 = load float, float* %psize, align 4, !dbg !5535
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5536
  %clipsta = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 36, !dbg !5537
  %14 = load float, float* %clipsta, align 8, !dbg !5537
  %div8 = fdiv float %12, %14, !dbg !5538
  %conv9 = fpext float %div8 to double, !dbg !5535
  %call10 = call double @atan(double %conv9) #7, !dbg !5539
  %conv11 = fptrunc double %call10 to float, !dbg !5539
  store float %conv11, float* %phi, align 4, !dbg !5540
  %15 = load float, float* %borderfac, align 4, !dbg !5541
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5542
  %viewplane12 = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 16, !dbg !5543
  %call13 = call float @BLI_rctf_size_x(%struct.rctf* %viewplane12), !dbg !5544
  %mul = fmul float %15, %call13, !dbg !5545
  %17 = load i32, i32* %xparts, align 4, !dbg !5546
  %conv14 = sitofp i32 %17 to float, !dbg !5547
  %div15 = fdiv float %mul, %conv14, !dbg !5548
  store float %div15, float* %xfac, align 4, !dbg !5549
  %18 = load float, float* %xfac, align 4, !dbg !5550
  %mul16 = fmul float 5.000000e-01, %18, !dbg !5551
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5552
  %clipsta17 = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 36, !dbg !5553
  %20 = load float, float* %clipsta17, align 8, !dbg !5553
  %div18 = fdiv float %mul16, %20, !dbg !5554
  %conv19 = fpext float %div18 to double, !dbg !5555
  %call20 = call double @atan(double %conv19) #7, !dbg !5556
  %conv21 = fptrunc double %call20 to float, !dbg !5556
  store float %conv21, float* %xfac, align 4, !dbg !5557
  %21 = load float, float* %phi, align 4, !dbg !5558
  %mul22 = fmul float 5.000000e-01, %21, !dbg !5559
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5560
  %partx23 = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 22, !dbg !5561
  %23 = load i32, i32* %partx23, align 8, !dbg !5561
  %conv24 = sitofp i32 %23 to float, !dbg !5562
  %mul25 = fmul float %mul22, %conv24, !dbg !5563
  store float %mul25, float* %psize, align 4, !dbg !5564
  %24 = load float, float* %xfac, align 4, !dbg !5565
  %25 = load float, float* %psize, align 4, !dbg !5566
  %div26 = fdiv float %24, %25, !dbg !5567
  %26 = load float, float* %phi, align 4, !dbg !5568
  %mul27 = fmul float %26, %div26, !dbg !5568
  store float %mul27, float* %phi, align 4, !dbg !5568
  %27 = load float, float* %phi, align 4, !dbg !5569
  ret float %27, !dbg !5570
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_x(%struct.rcti* %rct) #0 !dbg !5571 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !5577, metadata !DIExpression()), !dbg !5578
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !5579
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 1, !dbg !5580
  %1 = load i32, i32* %xmax, align 4, !dbg !5580
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !5581
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 0, !dbg !5582
  %3 = load i32, i32* %xmin, align 4, !dbg !5582
  %sub = sub nsw i32 %1, %3, !dbg !5583
  ret i32 %sub, !dbg !5584
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_x(%struct.rctf* %rct) #0 !dbg !5585 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !5590, metadata !DIExpression()), !dbg !5591
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !5592
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 1, !dbg !5593
  %1 = load float, float* %xmax, align 4, !dbg !5593
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !5594
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 0, !dbg !5595
  %3 = load float, float* %xmin, align 4, !dbg !5595
  %sub = fsub float %1, %3, !dbg !5596
  ret float %sub, !dbg !5597
}

; Function Attrs: nounwind
declare dso_local double @atan(double) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_TileProcessor(%struct.Render* %re) #0 !dbg !5598 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5599, metadata !DIExpression()), !dbg !5600
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5601
  call void @threaded_tile_processor(%struct.Render* %0), !dbg !5602
  %call = call double @PIL_check_seconds_timer(), !dbg !5603
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5604
  %i = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 98, !dbg !5605
  %starttime = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 14, !dbg !5606
  %2 = load double, double* %starttime, align 8, !dbg !5606
  %sub = fsub double %call, %2, !dbg !5607
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5608
  %i1 = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 98, !dbg !5609
  %lastframetime = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i1, i32 0, i32 15, !dbg !5610
  store double %sub, double* %lastframetime, align 8, !dbg !5611
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5612
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 90, !dbg !5613
  %5 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !5613
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5614
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 91, !dbg !5615
  %7 = load i8*, i8** %sdh, align 8, !dbg !5615
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5616
  %i2 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 98, !dbg !5617
  call void %5(i8* %7, %struct.RenderStats* %i2), !dbg !5612
  ret void, !dbg !5618
}

; Function Attrs: noinline nounwind uwtable
define internal void @threaded_tile_processor(%struct.Render* %re) #0 !dbg !5619 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %thread = alloca [1 x %struct.RenderThread], align 16
  %workqueue = alloca %struct.ThreadQueue*, align 8
  %donequeue = alloca %struct.ThreadQueue*, align 8
  %threads = alloca %struct.ListBase, align 8
  %pa = alloca %struct.RenderPart*, align 8
  %viewplane = alloca %struct.rctf, align 4
  %lastdraw = alloca double, align 8
  %elapsed = alloca double, align 8
  %redrawtime = alloca double, align 8
  %totpart = alloca i32, align 4
  %minx = alloca i32, align 4
  %slice = alloca i32, align 4
  %a = alloca i32, align 4
  %wait = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5620, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.declare(metadata [1 x %struct.RenderThread]* %thread, metadata !5622, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.declare(metadata %struct.ThreadQueue** %workqueue, metadata !5636, metadata !DIExpression()), !dbg !5637
  call void @llvm.dbg.declare(metadata %struct.ThreadQueue** %donequeue, metadata !5638, metadata !DIExpression()), !dbg !5639
  call void @llvm.dbg.declare(metadata %struct.ListBase* %threads, metadata !5640, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa, metadata !5642, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.declare(metadata %struct.rctf* %viewplane, metadata !5673, metadata !DIExpression()), !dbg !5674
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5675
  %viewplane1 = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 16, !dbg !5676
  %1 = bitcast %struct.rctf* %viewplane to i8*, !dbg !5676
  %2 = bitcast %struct.rctf* %viewplane1 to i8*, !dbg !5676
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 16, i1 false), !dbg !5676
  call void @llvm.dbg.declare(metadata double* %lastdraw, metadata !5677, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.declare(metadata double* %elapsed, metadata !5679, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.declare(metadata double* %redrawtime, metadata !5681, metadata !DIExpression()), !dbg !5682
  store double 1.000000e+00, double* %redrawtime, align 8, !dbg !5682
  call void @llvm.dbg.declare(metadata i32* %totpart, metadata !5683, metadata !DIExpression()), !dbg !5684
  store i32 0, i32* %totpart, align 4, !dbg !5684
  call void @llvm.dbg.declare(metadata i32* %minx, metadata !5685, metadata !DIExpression()), !dbg !5686
  store i32 0, i32* %minx, align 4, !dbg !5686
  call void @llvm.dbg.declare(metadata i32* %slice, metadata !5687, metadata !DIExpression()), !dbg !5688
  store i32 0, i32* %slice, align 4, !dbg !5688
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5689, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.declare(metadata i32* %wait, metadata !5691, metadata !DIExpression()), !dbg !5692
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5693
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 12, !dbg !5694
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 2), !dbg !5695
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5696
  %result = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 9, !dbg !5698
  %5 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !5698
  %cmp = icmp eq %struct.RenderResult* %5, null, !dbg !5699
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5700

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5701
  %r = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 45, !dbg !5702
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !5703
  %7 = load i32, i32* %scemode, align 4, !dbg !5703
  %and = and i32 %7, 524296, !dbg !5704
  %tobool = icmp ne i32 %and, 0, !dbg !5704
  br i1 %tobool, label %if.end25, label %if.then, !dbg !5705

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5706
  %result2 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 9, !dbg !5708
  %9 = load %struct.RenderResult*, %struct.RenderResult** %result2, align 8, !dbg !5708
  call void @render_result_free(%struct.RenderResult* %9), !dbg !5709
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5710
  %sss_points = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 75, !dbg !5712
  %11 = load %struct.ListBase*, %struct.ListBase** %sss_points, align 8, !dbg !5712
  %tobool3 = icmp ne %struct.ListBase* %11, null, !dbg !5710
  br i1 %tobool3, label %land.lhs.true, label %if.else, !dbg !5713

land.lhs.true:                                    ; preds = %if.then
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5714
  %call = call i32 @render_display_update_enabled(%struct.Render* %12), !dbg !5715
  %tobool4 = icmp ne i32 %call, 0, !dbg !5715
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !5716

if.then5:                                         ; preds = %land.lhs.true
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5717
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5718
  %disprect = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 15, !dbg !5719
  %call6 = call %struct.RenderResult* @render_result_new(%struct.Render* %13, %struct.rcti* %disprect, i32 0, i32 0, i8* null), !dbg !5720
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5721
  %result7 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 9, !dbg !5722
  store %struct.RenderResult* %call6, %struct.RenderResult** %result7, align 8, !dbg !5723
  br label %if.end24, !dbg !5721

if.else:                                          ; preds = %land.lhs.true, %if.then
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5724
  %r8 = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 45, !dbg !5726
  %scemode9 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r8, i32 0, i32 46, !dbg !5727
  %17 = load i32, i32* %scemode9, align 4, !dbg !5727
  %and10 = and i32 %17, 32768, !dbg !5728
  %tobool11 = icmp ne i32 %and10, 0, !dbg !5728
  br i1 %tobool11, label %if.then12, label %if.else16, !dbg !5729

if.then12:                                        ; preds = %if.else
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5730
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5731
  %fullresult = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 11, !dbg !5732
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5733
  %disprect13 = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 15, !dbg !5734
  %call14 = call %struct.RenderResult* @render_result_new_full_sample(%struct.Render* %18, %struct.ListBase* %fullresult, %struct.rcti* %disprect13, i32 0, i32 1), !dbg !5735
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5736
  %result15 = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 9, !dbg !5737
  store %struct.RenderResult* %call14, %struct.RenderResult** %result15, align 8, !dbg !5738
  br label %if.end, !dbg !5736

if.else16:                                        ; preds = %if.else
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5739
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5740
  %disprect17 = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 15, !dbg !5741
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5742
  %r18 = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 45, !dbg !5743
  %scemode19 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r18, i32 0, i32 46, !dbg !5744
  %25 = load i32, i32* %scemode19, align 4, !dbg !5744
  %and20 = and i32 %25, 1024, !dbg !5745
  %tobool21 = icmp ne i32 %and20, 0, !dbg !5746
  %26 = zext i1 %tobool21 to i64, !dbg !5746
  %cond = select i1 %tobool21, i32 1, i32 0, !dbg !5746
  %call22 = call %struct.RenderResult* @render_result_new(%struct.Render* %22, %struct.rcti* %disprect17, i32 0, i32 %cond, i8* null), !dbg !5747
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5748
  %result23 = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 9, !dbg !5749
  store %struct.RenderResult* %call22, %struct.RenderResult** %result23, align 8, !dbg !5750
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then12
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then5
  br label %if.end25, !dbg !5751

if.end25:                                         ; preds = %if.end24, %lor.lhs.false
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5752
  %resultmutex26 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 12, !dbg !5753
  call void @BLI_rw_mutex_unlock(i32* %resultmutex26), !dbg !5754
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5755
  %result27 = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 9, !dbg !5757
  %30 = load %struct.RenderResult*, %struct.RenderResult** %result27, align 8, !dbg !5757
  %cmp28 = icmp eq %struct.RenderResult* %30, null, !dbg !5758
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !5759

if.then29:                                        ; preds = %if.end25
  br label %return, !dbg !5760

if.end30:                                         ; preds = %if.end25
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5761
  call void @RE_parts_init(%struct.Render* %31, i8 zeroext 1), !dbg !5762
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5763
  %result31 = getelementptr inbounds %struct.Render, %struct.Render* %32, i32 0, i32 9, !dbg !5765
  %33 = load %struct.RenderResult*, %struct.RenderResult** %result31, align 8, !dbg !5765
  %do_exr_tile = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %33, i32 0, i32 15, !dbg !5766
  %34 = load i32, i32* %do_exr_tile, align 8, !dbg !5766
  %tobool32 = icmp ne i32 %34, 0, !dbg !5763
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !5767

if.then33:                                        ; preds = %if.end30
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5768
  call void @render_result_exr_file_begin(%struct.Render* %35), !dbg !5769
  br label %if.end34, !dbg !5769

if.end34:                                         ; preds = %if.then33, %if.end30
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5770
  %37 = bitcast %struct.Render* %36 to i8*, !dbg !5771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.Render* @R to i8*), i8* align 8 %37, i64 6240, i1 false), !dbg !5771
  store i32 (i8*)* @thread_break, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !5772
  %call35 = call %struct.ThreadQueue* @BLI_thread_queue_init(), !dbg !5773
  store %struct.ThreadQueue* %call35, %struct.ThreadQueue** %workqueue, align 8, !dbg !5774
  %call36 = call %struct.ThreadQueue* @BLI_thread_queue_init(), !dbg !5775
  store %struct.ThreadQueue* %call36, %struct.ThreadQueue** %donequeue, align 8, !dbg !5776
  br label %while.cond, !dbg !5777

while.cond:                                       ; preds = %if.end146, %if.end34
  %38 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5778
  %call37 = call zeroext i8 @find_next_pano_slice(%struct.Render* %38, i32* %slice, i32* %minx, %struct.rctf* %viewplane), !dbg !5779
  %tobool38 = icmp ne i8 %call37, 0, !dbg !5777
  br i1 %tobool38, label %while.body, label %while.end147, !dbg !5777

while.body:                                       ; preds = %while.cond
  br label %while.cond39, !dbg !5780

while.cond39:                                     ; preds = %while.body42, %while.body
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5782
  %40 = load i32, i32* %minx, align 4, !dbg !5783
  %call40 = call %struct.RenderPart* @find_next_part(%struct.Render* %39, i32 %40), !dbg !5784
  store %struct.RenderPart* %call40, %struct.RenderPart** %pa, align 8, !dbg !5785
  %tobool41 = icmp ne %struct.RenderPart* %call40, null, !dbg !5780
  br i1 %tobool41, label %while.body42, label %while.end, !dbg !5780

while.body42:                                     ; preds = %while.cond39
  %41 = load i32, i32* %totpart, align 4, !dbg !5786
  %add = add nsw i32 %41, 1, !dbg !5788
  %42 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5789
  %nr = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %42, i32 0, i32 16, !dbg !5790
  store i32 %add, i32* %nr, align 8, !dbg !5791
  %43 = load i32, i32* %totpart, align 4, !dbg !5792
  %inc = add nsw i32 %43, 1, !dbg !5792
  store i32 %inc, i32* %totpart, align 4, !dbg !5792
  %44 = load %struct.ThreadQueue*, %struct.ThreadQueue** %workqueue, align 8, !dbg !5793
  %45 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5794
  %46 = bitcast %struct.RenderPart* %45 to i8*, !dbg !5794
  call void @BLI_thread_queue_push(%struct.ThreadQueue* %44, i8* %46), !dbg !5795
  br label %while.cond39, !dbg !5780, !llvm.loop !5796

while.end:                                        ; preds = %while.cond39
  %47 = load %struct.ThreadQueue*, %struct.ThreadQueue** %workqueue, align 8, !dbg !5798
  call void @BLI_thread_queue_nowait(%struct.ThreadQueue* %47), !dbg !5799
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5800
  %r43 = getelementptr inbounds %struct.Render, %struct.Render* %48, i32 0, i32 45, !dbg !5801
  %threads44 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r43, i32 0, i32 14, !dbg !5802
  %49 = load i16, i16* %threads44, align 2, !dbg !5802
  %conv = sext i16 %49 to i32, !dbg !5800
  call void @BLI_init_threads(%struct.ListBase* %threads, i8* (i8*)* @do_render_thread, i32 %conv), !dbg !5803
  store i32 0, i32* %a, align 4, !dbg !5804
  br label %for.cond, !dbg !5806

for.cond:                                         ; preds = %for.inc, %while.end
  %50 = load i32, i32* %a, align 4, !dbg !5807
  %51 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5809
  %r45 = getelementptr inbounds %struct.Render, %struct.Render* %51, i32 0, i32 45, !dbg !5810
  %threads46 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r45, i32 0, i32 14, !dbg !5811
  %52 = load i16, i16* %threads46, align 2, !dbg !5811
  %conv47 = sext i16 %52 to i32, !dbg !5809
  %cmp48 = icmp slt i32 %50, %conv47, !dbg !5812
  br i1 %cmp48, label %for.body, label %for.end, !dbg !5813

for.body:                                         ; preds = %for.cond
  %53 = load %struct.ThreadQueue*, %struct.ThreadQueue** %workqueue, align 8, !dbg !5814
  %54 = load i32, i32* %a, align 4, !dbg !5816
  %idxprom = sext i32 %54 to i64, !dbg !5817
  %arrayidx = getelementptr inbounds [1 x %struct.RenderThread], [1 x %struct.RenderThread]* %thread, i64 0, i64 %idxprom, !dbg !5817
  %workqueue50 = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %arrayidx, i32 0, i32 0, !dbg !5818
  store %struct.ThreadQueue* %53, %struct.ThreadQueue** %workqueue50, align 8, !dbg !5819
  %55 = load %struct.ThreadQueue*, %struct.ThreadQueue** %donequeue, align 8, !dbg !5820
  %56 = load i32, i32* %a, align 4, !dbg !5821
  %idxprom51 = sext i32 %56 to i64, !dbg !5822
  %arrayidx52 = getelementptr inbounds [1 x %struct.RenderThread], [1 x %struct.RenderThread]* %thread, i64 0, i64 %idxprom51, !dbg !5822
  %donequeue53 = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %arrayidx52, i32 0, i32 1, !dbg !5823
  store %struct.ThreadQueue* %55, %struct.ThreadQueue** %donequeue53, align 8, !dbg !5824
  %57 = load i32, i32* %a, align 4, !dbg !5825
  %58 = load i32, i32* %a, align 4, !dbg !5826
  %idxprom54 = sext i32 %58 to i64, !dbg !5827
  %arrayidx55 = getelementptr inbounds [1 x %struct.RenderThread], [1 x %struct.RenderThread]* %thread, i64 0, i64 %idxprom54, !dbg !5827
  %number = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %arrayidx55, i32 0, i32 2, !dbg !5828
  store i32 %57, i32* %number, align 8, !dbg !5829
  %59 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5830
  %call56 = call i32 @render_display_update_enabled(%struct.Render* %59), !dbg !5832
  %tobool57 = icmp ne i32 %call56, 0, !dbg !5832
  br i1 %tobool57, label %if.then58, label %if.else65, !dbg !5833

if.then58:                                        ; preds = %for.body
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5834
  %display_update = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 86, !dbg !5836
  %61 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !5836
  %62 = load i32, i32* %a, align 4, !dbg !5837
  %idxprom59 = sext i32 %62 to i64, !dbg !5838
  %arrayidx60 = getelementptr inbounds [1 x %struct.RenderThread], [1 x %struct.RenderThread]* %thread, i64 0, i64 %idxprom59, !dbg !5838
  %display_update61 = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %arrayidx60, i32 0, i32 3, !dbg !5839
  store void (i8*, %struct.RenderResult*, %struct.rcti*)* %61, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update61, align 8, !dbg !5840
  %63 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5841
  %duh = getelementptr inbounds %struct.Render, %struct.Render* %63, i32 0, i32 87, !dbg !5842
  %64 = load i8*, i8** %duh, align 8, !dbg !5842
  %65 = load i32, i32* %a, align 4, !dbg !5843
  %idxprom62 = sext i32 %65 to i64, !dbg !5844
  %arrayidx63 = getelementptr inbounds [1 x %struct.RenderThread], [1 x %struct.RenderThread]* %thread, i64 0, i64 %idxprom62, !dbg !5844
  %duh64 = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %arrayidx63, i32 0, i32 4, !dbg !5845
  store i8* %64, i8** %duh64, align 8, !dbg !5846
  br label %if.end72, !dbg !5847

if.else65:                                        ; preds = %for.body
  %66 = load i32, i32* %a, align 4, !dbg !5848
  %idxprom66 = sext i32 %66 to i64, !dbg !5850
  %arrayidx67 = getelementptr inbounds [1 x %struct.RenderThread], [1 x %struct.RenderThread]* %thread, i64 0, i64 %idxprom66, !dbg !5850
  %display_update68 = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %arrayidx67, i32 0, i32 3, !dbg !5851
  store void (i8*, %struct.RenderResult*, %struct.rcti*)* null, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update68, align 8, !dbg !5852
  %67 = load i32, i32* %a, align 4, !dbg !5853
  %idxprom69 = sext i32 %67 to i64, !dbg !5854
  %arrayidx70 = getelementptr inbounds [1 x %struct.RenderThread], [1 x %struct.RenderThread]* %thread, i64 0, i64 %idxprom69, !dbg !5854
  %duh71 = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %arrayidx70, i32 0, i32 4, !dbg !5855
  store i8* null, i8** %duh71, align 8, !dbg !5856
  br label %if.end72

if.end72:                                         ; preds = %if.else65, %if.then58
  %68 = load i32, i32* %a, align 4, !dbg !5857
  %idxprom73 = sext i32 %68 to i64, !dbg !5858
  %arrayidx74 = getelementptr inbounds [1 x %struct.RenderThread], [1 x %struct.RenderThread]* %thread, i64 0, i64 %idxprom73, !dbg !5858
  %69 = bitcast %struct.RenderThread* %arrayidx74 to i8*, !dbg !5859
  call void @BLI_insert_thread(%struct.ListBase* %threads, i8* %69), !dbg !5860
  br label %for.inc, !dbg !5861

for.inc:                                          ; preds = %if.end72
  %70 = load i32, i32* %a, align 4, !dbg !5862
  %inc75 = add nsw i32 %70, 1, !dbg !5862
  store i32 %inc75, i32* %a, align 4, !dbg !5862
  br label %for.cond, !dbg !5863, !llvm.loop !5864

for.end:                                          ; preds = %for.cond
  %call76 = call double @PIL_check_seconds_timer(), !dbg !5866
  store double %call76, double* %lastdraw, align 8, !dbg !5867
  br label %while.body78, !dbg !5868

while.body78:                                     ; preds = %for.end, %if.end139
  %call79 = call double @PIL_check_seconds_timer(), !dbg !5869
  %71 = load double, double* %lastdraw, align 8, !dbg !5871
  %sub = fsub double %call79, %71, !dbg !5872
  store double %sub, double* %elapsed, align 8, !dbg !5873
  %72 = load double, double* %redrawtime, align 8, !dbg !5874
  %73 = load double, double* %elapsed, align 8, !dbg !5875
  %sub80 = fsub double %72, %73, !dbg !5876
  %mul = fmul double %sub80, 1.000000e+03, !dbg !5877
  %conv81 = fptosi double %mul to i32, !dbg !5878
  store i32 %conv81, i32* %wait, align 4, !dbg !5879
  %74 = load %struct.ThreadQueue*, %struct.ThreadQueue** %donequeue, align 8, !dbg !5880
  %75 = load i32, i32* %wait, align 4, !dbg !5882
  %call82 = call i8* @BLI_thread_queue_pop_timeout(%struct.ThreadQueue* %74, i32 %75), !dbg !5883
  %76 = bitcast i8* %call82 to %struct.RenderPart*, !dbg !5883
  store %struct.RenderPart* %76, %struct.RenderPart** %pa, align 8, !dbg !5884
  %tobool83 = icmp ne %struct.RenderPart* %76, null, !dbg !5884
  br i1 %tobool83, label %if.then84, label %if.end100, !dbg !5885

if.then84:                                        ; preds = %while.body78
  %77 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5886
  %result85 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %77, i32 0, i32 2, !dbg !5889
  %78 = load %struct.RenderResult*, %struct.RenderResult** %result85, align 8, !dbg !5889
  %tobool86 = icmp ne %struct.RenderResult* %78, null, !dbg !5886
  br i1 %tobool86, label %if.then87, label %if.end99, !dbg !5890

if.then87:                                        ; preds = %if.then84
  %79 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5891
  %80 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5893
  call void @print_part_stats(%struct.Render* %79, %struct.RenderPart* %80), !dbg !5894
  %81 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5895
  %fullresult88 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %81, i32 0, i32 3, !dbg !5896
  %82 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5897
  %result89 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %82, i32 0, i32 2, !dbg !5898
  %83 = load %struct.RenderResult*, %struct.RenderResult** %result89, align 8, !dbg !5898
  call void @render_result_free_list(%struct.ListBase* %fullresult88, %struct.RenderResult* %83), !dbg !5899
  %84 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5900
  %result90 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %84, i32 0, i32 2, !dbg !5901
  store %struct.RenderResult* null, %struct.RenderResult** %result90, align 8, !dbg !5902
  %85 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5903
  %i = getelementptr inbounds %struct.Render, %struct.Render* %85, i32 0, i32 98, !dbg !5904
  %partsdone = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 10, !dbg !5905
  %86 = load i16, i16* %partsdone, align 2, !dbg !5906
  %inc91 = add i16 %86, 1, !dbg !5906
  store i16 %inc91, i16* %partsdone, align 2, !dbg !5906
  %87 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5907
  %progress = getelementptr inbounds %struct.Render, %struct.Render* %87, i32 0, i32 92, !dbg !5908
  %88 = load void (i8*, float)*, void (i8*, float)** %progress, align 8, !dbg !5908
  %89 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5909
  %prh = getelementptr inbounds %struct.Render, %struct.Render* %89, i32 0, i32 93, !dbg !5910
  %90 = load i8*, i8** %prh, align 8, !dbg !5910
  %91 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5911
  %i92 = getelementptr inbounds %struct.Render, %struct.Render* %91, i32 0, i32 98, !dbg !5912
  %partsdone93 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i92, i32 0, i32 10, !dbg !5913
  %92 = load i16, i16* %partsdone93, align 2, !dbg !5913
  %conv94 = sext i16 %92 to i32, !dbg !5911
  %conv95 = sitofp i32 %conv94 to float, !dbg !5911
  %93 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5914
  %i96 = getelementptr inbounds %struct.Render, %struct.Render* %93, i32 0, i32 98, !dbg !5915
  %totpart97 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i96, i32 0, i32 6, !dbg !5916
  %94 = load i32, i32* %totpart97, align 8, !dbg !5916
  %conv98 = sitofp i32 %94 to float, !dbg !5917
  %div = fdiv float %conv95, %conv98, !dbg !5918
  call void %88(i8* %90, float %div), !dbg !5907
  br label %if.end99, !dbg !5919

if.end99:                                         ; preds = %if.then87, %if.then84
  %95 = load i32, i32* %totpart, align 4, !dbg !5920
  %dec = add nsw i32 %95, -1, !dbg !5920
  store i32 %dec, i32* %totpart, align 4, !dbg !5920
  br label %if.end100, !dbg !5921

if.end100:                                        ; preds = %if.end99, %while.body78
  %96 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5922
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %96, i32 0, i32 96, !dbg !5924
  %97 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !5924
  %98 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5925
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %98, i32 0, i32 97, !dbg !5926
  %99 = load i8*, i8** %tbh, align 8, !dbg !5926
  %call101 = call i32 %97(i8* %99), !dbg !5922
  store volatile i32 %call101, i32* @g_break, align 4, !dbg !5927
  %tobool102 = icmp ne i32 %call101, 0, !dbg !5927
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !5928

if.then103:                                       ; preds = %if.end100
  br label %while.end140, !dbg !5929

if.end104:                                        ; preds = %if.end100
  %100 = load i32, i32* %totpart, align 4, !dbg !5930
  %cmp105 = icmp eq i32 %100, 0, !dbg !5932
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !5933

if.then107:                                       ; preds = %if.end104
  br label %while.end140, !dbg !5934

if.end108:                                        ; preds = %if.end104
  %call109 = call double @PIL_check_seconds_timer(), !dbg !5935
  %101 = load double, double* %lastdraw, align 8, !dbg !5936
  %sub110 = fsub double %call109, %101, !dbg !5937
  store double %sub110, double* %elapsed, align 8, !dbg !5938
  %102 = load double, double* %elapsed, align 8, !dbg !5939
  %103 = load double, double* %redrawtime, align 8, !dbg !5941
  %cmp111 = fcmp ogt double %102, %103, !dbg !5942
  br i1 %cmp111, label %if.then113, label %if.end139, !dbg !5943

if.then113:                                       ; preds = %if.end108
  %104 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5944
  %call114 = call i32 @render_display_update_enabled(%struct.Render* %104), !dbg !5947
  %tobool115 = icmp ne i32 %call114, 0, !dbg !5947
  br i1 %tobool115, label %if.then116, label %if.end137, !dbg !5948

if.then116:                                       ; preds = %if.then113
  %105 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5949
  %parts = getelementptr inbounds %struct.Render, %struct.Render* %105, i32 0, i32 50, !dbg !5951
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %parts, i32 0, i32 0, !dbg !5952
  %106 = load i8*, i8** %first, align 8, !dbg !5952
  %107 = bitcast i8* %106 to %struct.RenderPart*, !dbg !5949
  store %struct.RenderPart* %107, %struct.RenderPart** %pa, align 8, !dbg !5953
  br label %for.cond117, !dbg !5954

for.cond117:                                      ; preds = %for.inc135, %if.then116
  %108 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5955
  %tobool118 = icmp ne %struct.RenderPart* %108, null, !dbg !5957
  br i1 %tobool118, label %for.body119, label %for.end136, !dbg !5957

for.body119:                                      ; preds = %for.cond117
  %109 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5958
  %status = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %109, i32 0, i32 18, !dbg !5960
  %110 = load i16, i16* %status, align 2, !dbg !5960
  %conv120 = sext i16 %110 to i32, !dbg !5958
  %cmp121 = icmp eq i32 %conv120, 1, !dbg !5961
  br i1 %cmp121, label %land.lhs.true123, label %if.end134, !dbg !5962

land.lhs.true123:                                 ; preds = %for.body119
  %111 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5963
  %nr124 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %111, i32 0, i32 16, !dbg !5964
  %112 = load i32, i32* %nr124, align 8, !dbg !5964
  %tobool125 = icmp ne i32 %112, 0, !dbg !5963
  br i1 %tobool125, label %land.lhs.true126, label %if.end134, !dbg !5965

land.lhs.true126:                                 ; preds = %land.lhs.true123
  %113 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5966
  %result127 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %113, i32 0, i32 2, !dbg !5967
  %114 = load %struct.RenderResult*, %struct.RenderResult** %result127, align 8, !dbg !5967
  %tobool128 = icmp ne %struct.RenderResult* %114, null, !dbg !5966
  br i1 %tobool128, label %if.then129, label %if.end134, !dbg !5968

if.then129:                                       ; preds = %land.lhs.true126
  %115 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5969
  %display_update130 = getelementptr inbounds %struct.Render, %struct.Render* %115, i32 0, i32 86, !dbg !5970
  %116 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update130, align 8, !dbg !5970
  %117 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5971
  %duh131 = getelementptr inbounds %struct.Render, %struct.Render* %117, i32 0, i32 87, !dbg !5972
  %118 = load i8*, i8** %duh131, align 8, !dbg !5972
  %119 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5973
  %result132 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %119, i32 0, i32 2, !dbg !5974
  %120 = load %struct.RenderResult*, %struct.RenderResult** %result132, align 8, !dbg !5974
  %121 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5975
  %result133 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %121, i32 0, i32 2, !dbg !5976
  %122 = load %struct.RenderResult*, %struct.RenderResult** %result133, align 8, !dbg !5976
  %renrect = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %122, i32 0, i32 13, !dbg !5977
  call void %116(i8* %118, %struct.RenderResult* %120, %struct.rcti* %renrect), !dbg !5969
  br label %if.end134, !dbg !5969

if.end134:                                        ; preds = %if.then129, %land.lhs.true126, %land.lhs.true123, %for.body119
  br label %for.inc135, !dbg !5967

for.inc135:                                       ; preds = %if.end134
  %123 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !5978
  %next = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %123, i32 0, i32 0, !dbg !5979
  %124 = load %struct.RenderPart*, %struct.RenderPart** %next, align 8, !dbg !5979
  store %struct.RenderPart* %124, %struct.RenderPart** %pa, align 8, !dbg !5980
  br label %for.cond117, !dbg !5981, !llvm.loop !5982

for.end136:                                       ; preds = %for.cond117
  br label %if.end137, !dbg !5983

if.end137:                                        ; preds = %for.end136, %if.then113
  %call138 = call double @PIL_check_seconds_timer(), !dbg !5984
  store double %call138, double* %lastdraw, align 8, !dbg !5985
  br label %if.end139, !dbg !5986

if.end139:                                        ; preds = %if.end137, %if.end108
  br label %while.body78, !dbg !5868, !llvm.loop !5987

while.end140:                                     ; preds = %if.then107, %if.then103
  call void @BLI_end_threads(%struct.ListBase* %threads), !dbg !5989
  %125 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5990
  %test_break141 = getelementptr inbounds %struct.Render, %struct.Render* %125, i32 0, i32 96, !dbg !5992
  %126 = load i32 (i8*)*, i32 (i8*)** %test_break141, align 8, !dbg !5992
  %127 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5993
  %tbh142 = getelementptr inbounds %struct.Render, %struct.Render* %127, i32 0, i32 97, !dbg !5994
  %128 = load i8*, i8** %tbh142, align 8, !dbg !5994
  %call143 = call i32 %126(i8* %128), !dbg !5990
  store volatile i32 %call143, i32* @g_break, align 4, !dbg !5995
  %tobool144 = icmp ne i32 %call143, 0, !dbg !5995
  br i1 %tobool144, label %if.then145, label %if.end146, !dbg !5996

if.then145:                                       ; preds = %while.end140
  br label %while.end147, !dbg !5997

if.end146:                                        ; preds = %while.end140
  br label %while.cond, !dbg !5777, !llvm.loop !5998

while.end147:                                     ; preds = %if.then145, %while.cond
  %129 = load volatile i32, i32* @g_break, align 4, !dbg !6000
  %tobool148 = icmp ne i32 %129, 0, !dbg !6000
  br i1 %tobool148, label %if.then149, label %if.end162, !dbg !6002

if.then149:                                       ; preds = %while.end147
  %130 = load %struct.ThreadQueue*, %struct.ThreadQueue** %donequeue, align 8, !dbg !6003
  call void @BLI_thread_queue_nowait(%struct.ThreadQueue* %130), !dbg !6005
  br label %while.cond150, !dbg !6006

while.cond150:                                    ; preds = %if.end160, %if.then149
  %131 = load %struct.ThreadQueue*, %struct.ThreadQueue** %donequeue, align 8, !dbg !6007
  %call151 = call i8* @BLI_thread_queue_pop(%struct.ThreadQueue* %131), !dbg !6008
  %132 = bitcast i8* %call151 to %struct.RenderPart*, !dbg !6008
  store %struct.RenderPart* %132, %struct.RenderPart** %pa, align 8, !dbg !6009
  %tobool152 = icmp ne %struct.RenderPart* %132, null, !dbg !6006
  br i1 %tobool152, label %while.body153, label %while.end161, !dbg !6006

while.body153:                                    ; preds = %while.cond150
  %133 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !6010
  %result154 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %133, i32 0, i32 2, !dbg !6013
  %134 = load %struct.RenderResult*, %struct.RenderResult** %result154, align 8, !dbg !6013
  %tobool155 = icmp ne %struct.RenderResult* %134, null, !dbg !6010
  br i1 %tobool155, label %if.then156, label %if.end160, !dbg !6014

if.then156:                                       ; preds = %while.body153
  %135 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !6015
  %fullresult157 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %135, i32 0, i32 3, !dbg !6017
  %136 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !6018
  %result158 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %136, i32 0, i32 2, !dbg !6019
  %137 = load %struct.RenderResult*, %struct.RenderResult** %result158, align 8, !dbg !6019
  call void @render_result_free_list(%struct.ListBase* %fullresult157, %struct.RenderResult* %137), !dbg !6020
  %138 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !6021
  %result159 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %138, i32 0, i32 2, !dbg !6022
  store %struct.RenderResult* null, %struct.RenderResult** %result159, align 8, !dbg !6023
  br label %if.end160, !dbg !6024

if.end160:                                        ; preds = %if.then156, %while.body153
  br label %while.cond150, !dbg !6006, !llvm.loop !6025

while.end161:                                     ; preds = %while.cond150
  br label %if.end162, !dbg !6027

if.end162:                                        ; preds = %while.end161, %while.end147
  %139 = load %struct.ThreadQueue*, %struct.ThreadQueue** %donequeue, align 8, !dbg !6028
  call void @BLI_thread_queue_free(%struct.ThreadQueue* %139), !dbg !6029
  %140 = load %struct.ThreadQueue*, %struct.ThreadQueue** %workqueue, align 8, !dbg !6030
  call void @BLI_thread_queue_free(%struct.ThreadQueue* %140), !dbg !6031
  %141 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6032
  %result163 = getelementptr inbounds %struct.Render, %struct.Render* %141, i32 0, i32 9, !dbg !6034
  %142 = load %struct.RenderResult*, %struct.RenderResult** %result163, align 8, !dbg !6034
  %do_exr_tile164 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %142, i32 0, i32 15, !dbg !6035
  %143 = load i32, i32* %do_exr_tile164, align 8, !dbg !6035
  %tobool165 = icmp ne i32 %143, 0, !dbg !6032
  br i1 %tobool165, label %if.then166, label %if.end169, !dbg !6036

if.then166:                                       ; preds = %if.end162
  %144 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6037
  %resultmutex167 = getelementptr inbounds %struct.Render, %struct.Render* %144, i32 0, i32 12, !dbg !6039
  call void @BLI_rw_mutex_lock(i32* %resultmutex167, i32 2), !dbg !6040
  %145 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6041
  call void @render_result_exr_file_end(%struct.Render* %145), !dbg !6042
  %146 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6043
  %resultmutex168 = getelementptr inbounds %struct.Render, %struct.Render* %146, i32 0, i32 12, !dbg !6044
  call void @BLI_rw_mutex_unlock(i32* %resultmutex168), !dbg !6045
  br label %if.end169, !dbg !6046

if.end169:                                        ; preds = %if.then166, %if.end162
  %147 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6047
  %r170 = getelementptr inbounds %struct.Render, %struct.Render* %147, i32 0, i32 45, !dbg !6049
  %scemode171 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r170, i32 0, i32 46, !dbg !6050
  %148 = load i32, i32* %scemode171, align 4, !dbg !6050
  %and172 = and i32 %148, 1048576, !dbg !6051
  %tobool173 = icmp ne i32 %and172, 0, !dbg !6051
  br i1 %tobool173, label %if.then174, label %if.end177, !dbg !6052

if.then174:                                       ; preds = %if.end169
  %149 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6053
  %resultmutex175 = getelementptr inbounds %struct.Render, %struct.Render* %149, i32 0, i32 12, !dbg !6055
  call void @BLI_rw_mutex_lock(i32* %resultmutex175, i32 2), !dbg !6056
  %150 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6057
  call void @render_result_exr_file_cache_write(%struct.Render* %150), !dbg !6058
  %151 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6059
  %resultmutex176 = getelementptr inbounds %struct.Render, %struct.Render* %151, i32 0, i32 12, !dbg !6060
  call void @BLI_rw_mutex_unlock(i32* %resultmutex176), !dbg !6061
  br label %if.end177, !dbg !6062

if.end177:                                        ; preds = %if.then174, %if.end169
  store volatile i32 0, i32* @g_break, align 4, !dbg !6063
  %152 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6064
  call void @RE_parts_free(%struct.Render* %152), !dbg !6065
  %153 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6066
  %viewplane178 = getelementptr inbounds %struct.Render, %struct.Render* %153, i32 0, i32 16, !dbg !6067
  %154 = bitcast %struct.rctf* %viewplane178 to i8*, !dbg !6068
  %155 = bitcast %struct.rctf* %viewplane to i8*, !dbg !6068
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %155, i64 16, i1 false), !dbg !6068
  br label %return, !dbg !6069

return:                                           ; preds = %if.end177, %if.then29
  ret void, !dbg !6069
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RE_allow_render_generic_object(%struct.Object* %ob) #0 !dbg !6070 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6073, metadata !DIExpression()), !dbg !6074
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6075
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 55, !dbg !6077
  %1 = load i16, i16* %transflag, align 8, !dbg !6077
  %conv = sext i16 %1 to i32, !dbg !6075
  %and = and i32 %conv, 2048, !dbg !6078
  %tobool = icmp ne i32 %and, 0, !dbg !6078
  br i1 %tobool, label %if.then, label %if.else, !dbg !6079

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !6080

if.else:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6082
  %transflag1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 55, !dbg !6084
  %3 = load i16, i16* %transflag1, align 8, !dbg !6084
  %conv2 = sext i16 %3 to i32, !dbg !6082
  %and3 = and i32 %conv2, 2840, !dbg !6085
  %tobool4 = icmp ne i32 %and3, 0, !dbg !6085
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !6086

land.lhs.true:                                    ; preds = %if.else
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6087
  %transflag5 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 55, !dbg !6088
  %5 = load i16, i16* %transflag5, align 8, !dbg !6088
  %conv6 = sext i16 %5 to i32, !dbg !6087
  %and7 = and i32 %conv6, 8, !dbg !6089
  %tobool8 = icmp ne i32 %and7, 0, !dbg !6089
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !6090

if.then9:                                         ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !6091
  br label %return, !dbg !6091

if.end:                                           ; preds = %land.lhs.true, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  store i8 1, i8* %retval, align 1, !dbg !6093
  br label %return, !dbg !6093

return:                                           ; preds = %if.end10, %if.then9
  %6 = load i8, i8* %retval, align 1, !dbg !6094
  ret i8 %6, !dbg !6094
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_MergeFullSample(%struct.Render* %re, %struct.Main* %bmain, %struct.Scene* %sce, %struct.bNodeTree* %ntree) #0 !dbg !6095 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %scene = alloca %struct.Scene*, align 8
  %node = alloca %struct.bNode*, align 8
  %nodescene = alloca %struct.Scene*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6100, metadata !DIExpression()), !dbg !6101
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !6102, metadata !DIExpression()), !dbg !6103
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !6104, metadata !DIExpression()), !dbg !6105
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !6106, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6108, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6110, metadata !DIExpression()), !dbg !6111
  store i8 0, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !6112
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6113
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6114
  %main = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 43, !dbg !6115
  store %struct.Main* %0, %struct.Main** %main, align 8, !dbg !6116
  %2 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !6117
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6118
  %scene1 = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 44, !dbg !6119
  store %struct.Scene* %2, %struct.Scene** %scene1, align 8, !dbg !6120
  %4 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !6121
  %call = call zeroext i8 @BKE_scene_check_color_management_enabled(%struct.Scene* %4), !dbg !6122
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6123
  %scene_color_manage = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 8, !dbg !6124
  store i8 %call, i8* %scene_color_manage, align 8, !dbg !6125
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6126
  %main2 = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 43, !dbg !6128
  %7 = load %struct.Main*, %struct.Main** %main2, align 8, !dbg !6128
  %scene3 = getelementptr inbounds %struct.Main, %struct.Main* %7, i32 0, i32 11, !dbg !6129
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene3, i32 0, i32 0, !dbg !6130
  %8 = load i8*, i8** %first, align 8, !dbg !6130
  %9 = bitcast i8* %8 to %struct.Scene*, !dbg !6126
  store %struct.Scene* %9, %struct.Scene** %scene, align 8, !dbg !6131
  br label %for.cond, !dbg !6132

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6133
  %tobool = icmp ne %struct.Scene* %10, null, !dbg !6135
  br i1 %tobool, label %for.body, label %for.end, !dbg !6135

for.body:                                         ; preds = %for.cond
  %11 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6136
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 0, !dbg !6137
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !6138
  %12 = load i16, i16* %flag, align 2, !dbg !6139
  %conv = sext i16 %12 to i32, !dbg !6139
  %or = or i32 %conv, 1024, !dbg !6139
  %conv4 = trunc i32 %or to i16, !dbg !6139
  store i16 %conv4, i16* %flag, align 2, !dbg !6139
  br label %for.inc, !dbg !6136

for.inc:                                          ; preds = %for.body
  %13 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6140
  %id5 = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 0, !dbg !6141
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id5, i32 0, i32 0, !dbg !6142
  %14 = load i8*, i8** %next, align 8, !dbg !6142
  %15 = bitcast i8* %14 to %struct.Scene*, !dbg !6140
  store %struct.Scene* %15, %struct.Scene** %scene, align 8, !dbg !6143
  br label %for.cond, !dbg !6144, !llvm.loop !6145

for.end:                                          ; preds = %for.cond
  %16 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6147
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %16, i32 0, i32 7, !dbg !6149
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6150
  %17 = load i8*, i8** %first6, align 8, !dbg !6150
  %18 = bitcast i8* %17 to %struct.bNode*, !dbg !6147
  store %struct.bNode* %18, %struct.bNode** %node, align 8, !dbg !6151
  br label %for.cond7, !dbg !6152

for.cond7:                                        ; preds = %for.inc34, %for.end
  %19 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6153
  %tobool8 = icmp ne %struct.bNode* %19, null, !dbg !6155
  br i1 %tobool8, label %for.body9, label %for.end36, !dbg !6155

for.body9:                                        ; preds = %for.cond7
  %20 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6156
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 8, !dbg !6159
  %21 = load i16, i16* %type, align 4, !dbg !6159
  %conv10 = sext i16 %21 to i32, !dbg !6156
  %cmp = icmp eq i32 %conv10, 221, !dbg !6160
  br i1 %cmp, label %land.lhs.true, label %if.end33, !dbg !6161

land.lhs.true:                                    ; preds = %for.body9
  %22 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6162
  %flag12 = getelementptr inbounds %struct.bNode, %struct.bNode* %22, i32 0, i32 7, !dbg !6163
  %23 = load i32, i32* %flag12, align 8, !dbg !6163
  %and = and i32 %23, 512, !dbg !6164
  %cmp13 = icmp eq i32 %and, 0, !dbg !6165
  br i1 %cmp13, label %if.then, label %if.end33, !dbg !6166

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.Scene** %nodescene, metadata !6167, metadata !DIExpression()), !dbg !6169
  %24 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6170
  %id15 = getelementptr inbounds %struct.bNode, %struct.bNode* %24, i32 0, i32 20, !dbg !6171
  %25 = load %struct.ID*, %struct.ID** %id15, align 8, !dbg !6171
  %26 = bitcast %struct.ID* %25 to %struct.Scene*, !dbg !6172
  store %struct.Scene* %26, %struct.Scene** %nodescene, align 8, !dbg !6169
  %27 = load %struct.Scene*, %struct.Scene** %nodescene, align 8, !dbg !6173
  %cmp16 = icmp eq %struct.Scene* %27, null, !dbg !6175
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !6176

if.then18:                                        ; preds = %if.then
  %28 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !6177
  store %struct.Scene* %28, %struct.Scene** %nodescene, align 8, !dbg !6178
  br label %if.end, !dbg !6179

if.end:                                           ; preds = %if.then18, %if.then
  %29 = load %struct.Scene*, %struct.Scene** %nodescene, align 8, !dbg !6180
  %id19 = getelementptr inbounds %struct.Scene, %struct.Scene* %29, i32 0, i32 0, !dbg !6182
  %flag20 = getelementptr inbounds %struct.ID, %struct.ID* %id19, i32 0, i32 5, !dbg !6183
  %30 = load i16, i16* %flag20, align 2, !dbg !6183
  %conv21 = sext i16 %30 to i32, !dbg !6180
  %and22 = and i32 %conv21, 1024, !dbg !6184
  %tobool23 = icmp ne i32 %and22, 0, !dbg !6184
  br i1 %tobool23, label %if.then24, label %if.end32, !dbg !6185

if.then24:                                        ; preds = %if.end
  %31 = load %struct.Scene*, %struct.Scene** %nodescene, align 8, !dbg !6186
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %31, i32 0, i32 22, !dbg !6188
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !6189
  %32 = load i32, i32* %mode, align 8, !dbg !6190
  %or25 = or i32 %32, 1, !dbg !6190
  store i32 %or25, i32* %mode, align 8, !dbg !6190
  %33 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !6191
  %34 = load %struct.Scene*, %struct.Scene** %nodescene, align 8, !dbg !6192
  %call26 = call zeroext i8 @RE_ReadRenderResult(%struct.Scene* %33, %struct.Scene* %34), !dbg !6193
  %35 = load %struct.Scene*, %struct.Scene** %nodescene, align 8, !dbg !6194
  %id27 = getelementptr inbounds %struct.Scene, %struct.Scene* %35, i32 0, i32 0, !dbg !6195
  %flag28 = getelementptr inbounds %struct.ID, %struct.ID* %id27, i32 0, i32 5, !dbg !6196
  %36 = load i16, i16* %flag28, align 2, !dbg !6197
  %conv29 = sext i16 %36 to i32, !dbg !6197
  %and30 = and i32 %conv29, -1025, !dbg !6197
  %conv31 = trunc i32 %and30 to i16, !dbg !6197
  store i16 %conv31, i16* %flag28, align 2, !dbg !6197
  br label %if.end32, !dbg !6198

if.end32:                                         ; preds = %if.then24, %if.end
  br label %if.end33, !dbg !6199

if.end33:                                         ; preds = %if.end32, %land.lhs.true, %for.body9
  br label %for.inc34, !dbg !6200

for.inc34:                                        ; preds = %if.end33
  %37 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6201
  %next35 = getelementptr inbounds %struct.bNode, %struct.bNode* %37, i32 0, i32 0, !dbg !6202
  %38 = load %struct.bNode*, %struct.bNode** %next35, align 8, !dbg !6202
  store %struct.bNode* %38, %struct.bNode** %node, align 8, !dbg !6203
  br label %for.cond7, !dbg !6204, !llvm.loop !6205

for.end36:                                        ; preds = %for.cond7
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6207
  %scene37 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 44, !dbg !6209
  %40 = load %struct.Scene*, %struct.Scene** %scene37, align 8, !dbg !6209
  %id38 = getelementptr inbounds %struct.Scene, %struct.Scene* %40, i32 0, i32 0, !dbg !6210
  %flag39 = getelementptr inbounds %struct.ID, %struct.ID* %id38, i32 0, i32 5, !dbg !6211
  %41 = load i16, i16* %flag39, align 2, !dbg !6211
  %conv40 = sext i16 %41 to i32, !dbg !6207
  %and41 = and i32 %conv40, 1024, !dbg !6212
  %tobool42 = icmp ne i32 %and41, 0, !dbg !6212
  br i1 %tobool42, label %if.then43, label %if.end53, !dbg !6213

if.then43:                                        ; preds = %for.end36
  %42 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6214
  %scene44 = getelementptr inbounds %struct.Render, %struct.Render* %42, i32 0, i32 44, !dbg !6216
  %43 = load %struct.Scene*, %struct.Scene** %scene44, align 8, !dbg !6216
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6217
  %scene45 = getelementptr inbounds %struct.Render, %struct.Render* %44, i32 0, i32 44, !dbg !6218
  %45 = load %struct.Scene*, %struct.Scene** %scene45, align 8, !dbg !6218
  %call46 = call zeroext i8 @RE_ReadRenderResult(%struct.Scene* %43, %struct.Scene* %45), !dbg !6219
  %46 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6220
  %scene47 = getelementptr inbounds %struct.Render, %struct.Render* %46, i32 0, i32 44, !dbg !6221
  %47 = load %struct.Scene*, %struct.Scene** %scene47, align 8, !dbg !6221
  %id48 = getelementptr inbounds %struct.Scene, %struct.Scene* %47, i32 0, i32 0, !dbg !6222
  %flag49 = getelementptr inbounds %struct.ID, %struct.ID* %id48, i32 0, i32 5, !dbg !6223
  %48 = load i16, i16* %flag49, align 2, !dbg !6224
  %conv50 = sext i16 %48 to i32, !dbg !6224
  %and51 = and i32 %conv50, -1025, !dbg !6224
  %conv52 = trunc i32 %and51 to i16, !dbg !6224
  store i16 %conv52, i16* %flag49, align 2, !dbg !6224
  br label %if.end53, !dbg !6225

if.end53:                                         ; preds = %if.then43, %for.end36
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6226
  %display_init = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 82, !dbg !6227
  %50 = load void (i8*, %struct.RenderResult*)*, void (i8*, %struct.RenderResult*)** %display_init, align 8, !dbg !6227
  %51 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6228
  %dih = getelementptr inbounds %struct.Render, %struct.Render* %51, i32 0, i32 83, !dbg !6229
  %52 = load i8*, i8** %dih, align 8, !dbg !6229
  %53 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6230
  %result = getelementptr inbounds %struct.Render, %struct.Render* %53, i32 0, i32 9, !dbg !6231
  %54 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !6231
  call void %50(i8* %52, %struct.RenderResult* %54), !dbg !6226
  %55 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6232
  %display_clear = getelementptr inbounds %struct.Render, %struct.Render* %55, i32 0, i32 84, !dbg !6233
  %56 = load void (i8*, %struct.RenderResult*)*, void (i8*, %struct.RenderResult*)** %display_clear, align 8, !dbg !6233
  %57 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6234
  %dch = getelementptr inbounds %struct.Render, %struct.Render* %57, i32 0, i32 85, !dbg !6235
  %58 = load i8*, i8** %dch, align 8, !dbg !6235
  %59 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6236
  %result54 = getelementptr inbounds %struct.Render, %struct.Render* %59, i32 0, i32 9, !dbg !6237
  %60 = load %struct.RenderResult*, %struct.RenderResult** %result54, align 8, !dbg !6237
  call void %56(i8* %58, %struct.RenderResult* %60), !dbg !6232
  %61 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6238
  %62 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6239
  call void @do_merge_fullsample(%struct.Render* %61, %struct.bNodeTree* %62), !dbg !6240
  ret void, !dbg !6241
}

declare dso_local zeroext i8 @BKE_scene_check_color_management_enabled(%struct.Scene*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RE_ReadRenderResult(%struct.Scene* %scene, %struct.Scene* %scenode) #0 !dbg !6242 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %scenode.addr = alloca %struct.Scene*, align 8
  %re = alloca %struct.Render*, align 8
  %winx = alloca i32, align 4
  %winy = alloca i32, align 4
  %success = alloca i8, align 1
  %disprect = alloca %struct.rcti, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6245, metadata !DIExpression()), !dbg !6246
  store %struct.Scene* %scenode, %struct.Scene** %scenode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scenode.addr, metadata !6247, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !6249, metadata !DIExpression()), !dbg !6250
  call void @llvm.dbg.declare(metadata i32* %winx, metadata !6251, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.declare(metadata i32* %winy, metadata !6253, metadata !DIExpression()), !dbg !6254
  call void @llvm.dbg.declare(metadata i8* %success, metadata !6255, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.declare(metadata %struct.rcti* %disprect, metadata !6257, metadata !DIExpression()), !dbg !6258
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6259
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 22, !dbg !6260
  %size = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 30, !dbg !6261
  %1 = load i16, i16* %size, align 2, !dbg !6261
  %conv = sext i16 %1 to i32, !dbg !6259
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6262
  %r1 = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 22, !dbg !6263
  %xsch = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r1, i32 0, i32 33, !dbg !6264
  %3 = load i32, i32* %xsch, align 4, !dbg !6264
  %mul = mul nsw i32 %conv, %3, !dbg !6265
  %div = sdiv i32 %mul, 100, !dbg !6266
  store i32 %div, i32* %winx, align 4, !dbg !6267
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6268
  %r2 = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 22, !dbg !6269
  %size3 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r2, i32 0, i32 30, !dbg !6270
  %5 = load i16, i16* %size3, align 2, !dbg !6270
  %conv4 = sext i16 %5 to i32, !dbg !6268
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6271
  %r5 = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 22, !dbg !6272
  %ysch = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r5, i32 0, i32 34, !dbg !6273
  %7 = load i32, i32* %ysch, align 8, !dbg !6273
  %mul6 = mul nsw i32 %conv4, %7, !dbg !6274
  %div7 = sdiv i32 %mul6, 100, !dbg !6275
  store i32 %div7, i32* %winy, align 4, !dbg !6276
  %8 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6277
  %r8 = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 22, !dbg !6279
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r8, i32 0, i32 47, !dbg !6280
  %9 = load i32, i32* %mode, align 8, !dbg !6280
  %and = and i32 %9, 512, !dbg !6281
  %tobool = icmp ne i32 %and, 0, !dbg !6281
  br i1 %tobool, label %if.then, label %if.else, !dbg !6282

if.then:                                          ; preds = %entry
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6283
  %r9 = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 22, !dbg !6285
  %border = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r9, i32 0, i32 58, !dbg !6286
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %border, i32 0, i32 0, !dbg !6287
  %11 = load float, float* %xmin, align 8, !dbg !6287
  %12 = load i32, i32* %winx, align 4, !dbg !6288
  %conv10 = sitofp i32 %12 to float, !dbg !6288
  %mul11 = fmul float %11, %conv10, !dbg !6289
  %conv12 = fptosi float %mul11 to i32, !dbg !6283
  %xmin13 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !6290
  store i32 %conv12, i32* %xmin13, align 4, !dbg !6291
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6292
  %r14 = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 22, !dbg !6293
  %border15 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r14, i32 0, i32 58, !dbg !6294
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %border15, i32 0, i32 1, !dbg !6295
  %14 = load float, float* %xmax, align 4, !dbg !6295
  %15 = load i32, i32* %winx, align 4, !dbg !6296
  %conv16 = sitofp i32 %15 to float, !dbg !6296
  %mul17 = fmul float %14, %conv16, !dbg !6297
  %conv18 = fptosi float %mul17 to i32, !dbg !6292
  %xmax19 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 1, !dbg !6298
  store i32 %conv18, i32* %xmax19, align 4, !dbg !6299
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6300
  %r20 = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 22, !dbg !6301
  %border21 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r20, i32 0, i32 58, !dbg !6302
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %border21, i32 0, i32 2, !dbg !6303
  %17 = load float, float* %ymin, align 8, !dbg !6303
  %18 = load i32, i32* %winy, align 4, !dbg !6304
  %conv22 = sitofp i32 %18 to float, !dbg !6304
  %mul23 = fmul float %17, %conv22, !dbg !6305
  %conv24 = fptosi float %mul23 to i32, !dbg !6300
  %ymin25 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !6306
  store i32 %conv24, i32* %ymin25, align 4, !dbg !6307
  %19 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6308
  %r26 = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 22, !dbg !6309
  %border27 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r26, i32 0, i32 58, !dbg !6310
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %border27, i32 0, i32 3, !dbg !6311
  %20 = load float, float* %ymax, align 4, !dbg !6311
  %21 = load i32, i32* %winy, align 4, !dbg !6312
  %conv28 = sitofp i32 %21 to float, !dbg !6312
  %mul29 = fmul float %20, %conv28, !dbg !6313
  %conv30 = fptosi float %mul29 to i32, !dbg !6308
  %ymax31 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 3, !dbg !6314
  store i32 %conv30, i32* %ymax31, align 4, !dbg !6315
  br label %if.end, !dbg !6316

if.else:                                          ; preds = %entry
  %ymin32 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !6317
  store i32 0, i32* %ymin32, align 4, !dbg !6319
  %xmin33 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !6320
  store i32 0, i32* %xmin33, align 4, !dbg !6321
  %22 = load i32, i32* %winx, align 4, !dbg !6322
  %xmax34 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 1, !dbg !6323
  store i32 %22, i32* %xmax34, align 4, !dbg !6324
  %23 = load i32, i32* %winy, align 4, !dbg !6325
  %ymax35 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 3, !dbg !6326
  store i32 %23, i32* %ymax35, align 4, !dbg !6327
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load %struct.Scene*, %struct.Scene** %scenode.addr, align 8, !dbg !6328
  %tobool36 = icmp ne %struct.Scene* %24, null, !dbg !6328
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !6330

if.then37:                                        ; preds = %if.end
  %25 = load %struct.Scene*, %struct.Scene** %scenode.addr, align 8, !dbg !6331
  store %struct.Scene* %25, %struct.Scene** %scene.addr, align 8, !dbg !6332
  br label %if.end38, !dbg !6333

if.end38:                                         ; preds = %if.then37, %if.end
  %26 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6334
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %26, i32 0, i32 0, !dbg !6335
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !6336
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !6334
  %call = call %struct.Render* @RE_GetRender(i8* %arraydecay), !dbg !6337
  store %struct.Render* %call, %struct.Render** %re, align 8, !dbg !6338
  %27 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !6339
  %cmp = icmp eq %struct.Render* %27, null, !dbg !6341
  br i1 %cmp, label %if.then40, label %if.end45, !dbg !6342

if.then40:                                        ; preds = %if.end38
  %28 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6343
  %id41 = getelementptr inbounds %struct.Scene, %struct.Scene* %28, i32 0, i32 0, !dbg !6344
  %name42 = getelementptr inbounds %struct.ID, %struct.ID* %id41, i32 0, i32 4, !dbg !6345
  %arraydecay43 = getelementptr inbounds [66 x i8], [66 x i8]* %name42, i64 0, i64 0, !dbg !6343
  %call44 = call %struct.Render* @RE_NewRender(i8* %arraydecay43), !dbg !6346
  store %struct.Render* %call44, %struct.Render** %re, align 8, !dbg !6347
  br label %if.end45, !dbg !6348

if.end45:                                         ; preds = %if.then40, %if.end38
  %29 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !6349
  %30 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6350
  %r46 = getelementptr inbounds %struct.Scene, %struct.Scene* %30, i32 0, i32 22, !dbg !6351
  %31 = load i32, i32* %winx, align 4, !dbg !6352
  %32 = load i32, i32* %winy, align 4, !dbg !6353
  call void @RE_InitState(%struct.Render* %29, %struct.Render* null, %struct.RenderData* %r46, %struct.SceneRenderLayer* null, i32 %31, i32 %32, %struct.rcti* %disprect), !dbg !6354
  %33 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6355
  %34 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !6356
  %scene47 = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 44, !dbg !6357
  store %struct.Scene* %33, %struct.Scene** %scene47, align 8, !dbg !6358
  %35 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6359
  %call48 = call zeroext i8 @BKE_scene_check_color_management_enabled(%struct.Scene* %35), !dbg !6360
  %36 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !6361
  %scene_color_manage = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 8, !dbg !6362
  store i8 %call48, i8* %scene_color_manage, align 8, !dbg !6363
  %37 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !6364
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 12, !dbg !6365
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 2), !dbg !6366
  %38 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !6367
  %call49 = call zeroext i8 @render_result_exr_file_cache_read(%struct.Render* %38), !dbg !6368
  store i8 %call49, i8* %success, align 1, !dbg !6369
  %39 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !6370
  %resultmutex50 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 12, !dbg !6371
  call void @BLI_rw_mutex_unlock(i32* %resultmutex50), !dbg !6372
  %40 = load i8, i8* %success, align 1, !dbg !6373
  ret i8 %40, !dbg !6374
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_merge_fullsample(%struct.Render* %re, %struct.bNodeTree* %ntree) #0 !dbg !6375 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %rectf = alloca float*, align 8
  %filt = alloca [3 x [3 x float]], align 16
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sample = alloca i32, align 4
  %sce = alloca %struct.Scene*, align 8
  %re1 = alloca %struct.Render*, align 8
  %rres = alloca %struct.RenderResult, align 8
  %mask = alloca i32, align 4
  %rf = alloca float*, align 8
  %col = alloca float*, align 8
  %rf135 = alloca float*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6378, metadata !DIExpression()), !dbg !6379
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !6380, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.declare(metadata float** %rectf, metadata !6382, metadata !DIExpression()), !dbg !6383
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %filt, metadata !6384, metadata !DIExpression()), !dbg !6385
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6386, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6388, metadata !DIExpression()), !dbg !6389
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !6390, metadata !DIExpression()), !dbg !6391
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6392
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !6392
  br i1 %tobool, label %if.then, label %if.end, !dbg !6394

if.then:                                          ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6395
  %stats_draw = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 29, !dbg !6397
  store void (i8*, i8*)* @render_composit_stats, void (i8*, i8*)** %stats_draw, align 8, !dbg !6398
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6399
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 96, !dbg !6400
  %3 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !6400
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6401
  %test_break1 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %4, i32 0, i32 30, !dbg !6402
  store i32 (i8*)* %3, i32 (i8*)** %test_break1, align 8, !dbg !6403
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6404
  %progress = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 92, !dbg !6405
  %6 = load void (i8*, float)*, void (i8*, float)** %progress, align 8, !dbg !6405
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6406
  %progress2 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 28, !dbg !6407
  store void (i8*, float)* %6, void (i8*, float)** %progress2, align 8, !dbg !6408
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6409
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 91, !dbg !6410
  %9 = load i8*, i8** %sdh, align 8, !dbg !6410
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6411
  %sdh3 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %10, i32 0, i32 34, !dbg !6412
  store i8* %9, i8** %sdh3, align 8, !dbg !6413
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6414
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 97, !dbg !6415
  %12 = load i8*, i8** %tbh, align 8, !dbg !6415
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6416
  %tbh4 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %13, i32 0, i32 32, !dbg !6417
  store i8* %12, i8** %tbh4, align 8, !dbg !6418
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6419
  %prh = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 93, !dbg !6420
  %15 = load i8*, i8** %prh, align 8, !dbg !6420
  %16 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6421
  %prh5 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %16, i32 0, i32 33, !dbg !6422
  store i8* %15, i8** %prh5, align 8, !dbg !6423
  br label %if.end, !dbg !6424

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6425
  %18 = bitcast %struct.Render* %17 to i8*, !dbg !6426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.Render* @R to i8*), i8* align 8 %18, i64 6240, i1 false), !dbg !6426
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mapallocN, align 8, !dbg !6427
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6428
  %rectx = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 20, !dbg !6429
  %21 = load i32, i32* %rectx, align 8, !dbg !6429
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6430
  %recty = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 21, !dbg !6431
  %23 = load i32, i32* %recty, align 4, !dbg !6431
  %mul = mul nsw i32 %21, %23, !dbg !6432
  %conv = sext i32 %mul to i64, !dbg !6428
  %mul6 = mul i64 %conv, 4, !dbg !6433
  %mul7 = mul i64 %mul6, 4, !dbg !6434
  %call = call i8* %19(i64 %mul7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i64 0, i64 0)), !dbg !6427
  %24 = bitcast i8* %call to float*, !dbg !6427
  store float* %24, float** %rectf, align 8, !dbg !6435
  store i32 0, i32* %sample, align 4, !dbg !6436
  br label %for.cond, !dbg !6438

for.cond:                                         ; preds = %for.inc127, %if.end
  %25 = load i32, i32* %sample, align 4, !dbg !6439
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6441
  %r = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 45, !dbg !6442
  %osa = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 54, !dbg !6443
  %27 = load i16, i16* %osa, align 2, !dbg !6443
  %conv8 = sext i16 %27 to i32, !dbg !6441
  %cmp = icmp slt i32 %25, %conv8, !dbg !6444
  br i1 %cmp, label %for.body, label %for.end129, !dbg !6445

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce, metadata !6446, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.declare(metadata %struct.Render** %re1, metadata !6449, metadata !DIExpression()), !dbg !6450
  call void @llvm.dbg.declare(metadata %struct.RenderResult* %rres, metadata !6451, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !6453, metadata !DIExpression()), !dbg !6454
  %28 = load i32, i32* %sample, align 4, !dbg !6455
  %add = add nsw i32 %28, 1, !dbg !6456
  %conv10 = trunc i32 %add to i16, !dbg !6455
  store i16 %conv10, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98, i32 12), align 2, !dbg !6457
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6458
  call void @tag_scenes_for_render(%struct.Render* %29), !dbg !6459
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6460
  %main = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 43, !dbg !6462
  %31 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !6462
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %31, i32 0, i32 11, !dbg !6463
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene, i32 0, i32 0, !dbg !6464
  %32 = load i8*, i8** %first, align 8, !dbg !6464
  %33 = bitcast i8* %32 to %struct.Scene*, !dbg !6460
  store %struct.Scene* %33, %struct.Scene** %sce, align 8, !dbg !6465
  br label %for.cond11, !dbg !6466

for.cond11:                                       ; preds = %for.inc, %for.body
  %34 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !6467
  %tobool12 = icmp ne %struct.Scene* %34, null, !dbg !6469
  br i1 %tobool12, label %for.body13, label %for.end, !dbg !6469

for.body13:                                       ; preds = %for.cond11
  %35 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !6470
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %35, i32 0, i32 0, !dbg !6473
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !6474
  %36 = load i16, i16* %flag, align 2, !dbg !6474
  %conv14 = sext i16 %36 to i32, !dbg !6470
  %and = and i32 %conv14, 1024, !dbg !6475
  %tobool15 = icmp ne i32 %and, 0, !dbg !6475
  br i1 %tobool15, label %if.then16, label %if.end31, !dbg !6476

if.then16:                                        ; preds = %for.body13
  %37 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !6477
  %id17 = getelementptr inbounds %struct.Scene, %struct.Scene* %37, i32 0, i32 0, !dbg !6479
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id17, i32 0, i32 4, !dbg !6480
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !6477
  %call18 = call %struct.Render* @RE_GetRender(i8* %arraydecay), !dbg !6481
  store %struct.Render* %call18, %struct.Render** %re1, align 8, !dbg !6482
  %38 = load %struct.Render*, %struct.Render** %re1, align 8, !dbg !6483
  %tobool19 = icmp ne %struct.Render* %38, null, !dbg !6483
  br i1 %tobool19, label %land.lhs.true, label %if.end30, !dbg !6485

land.lhs.true:                                    ; preds = %if.then16
  %39 = load %struct.Render*, %struct.Render** %re1, align 8, !dbg !6486
  %r20 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 45, !dbg !6487
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r20, i32 0, i32 46, !dbg !6488
  %40 = load i32, i32* %scemode, align 4, !dbg !6488
  %and21 = and i32 %40, 32768, !dbg !6489
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6489
  br i1 %tobool22, label %if.then23, label %if.end30, !dbg !6490

if.then23:                                        ; preds = %land.lhs.true
  %41 = load i32, i32* %sample, align 4, !dbg !6491
  %tobool24 = icmp ne i32 %41, 0, !dbg !6491
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !6494

if.then25:                                        ; preds = %if.then23
  %42 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6495
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %42, i32 0, i32 12, !dbg !6497
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 2), !dbg !6498
  %43 = load %struct.Render*, %struct.Render** %re1, align 8, !dbg !6499
  %44 = load i32, i32* %sample, align 4, !dbg !6500
  %call26 = call i32 @render_result_exr_file_read_sample(%struct.Render* %43, i32 %44), !dbg !6501
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6502
  %resultmutex27 = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 12, !dbg !6503
  call void @BLI_rw_mutex_unlock(i32* %resultmutex27), !dbg !6504
  br label %if.end28, !dbg !6505

if.end28:                                         ; preds = %if.then25, %if.then23
  %46 = load %struct.Render*, %struct.Render** %re1, align 8, !dbg !6506
  %scene29 = getelementptr inbounds %struct.Render, %struct.Render* %46, i32 0, i32 44, !dbg !6507
  %47 = load %struct.Scene*, %struct.Scene** %scene29, align 8, !dbg !6507
  call void @ntreeCompositTagRender(%struct.Scene* %47), !dbg !6508
  br label %if.end30, !dbg !6509

if.end30:                                         ; preds = %if.end28, %land.lhs.true, %if.then16
  br label %if.end31, !dbg !6510

if.end31:                                         ; preds = %if.end30, %for.body13
  br label %for.inc, !dbg !6511

for.inc:                                          ; preds = %if.end31
  %48 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !6512
  %id32 = getelementptr inbounds %struct.Scene, %struct.Scene* %48, i32 0, i32 0, !dbg !6513
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id32, i32 0, i32 0, !dbg !6514
  %49 = load i8*, i8** %next, align 8, !dbg !6514
  %50 = bitcast i8* %49 to %struct.Scene*, !dbg !6512
  store %struct.Scene* %50, %struct.Scene** %sce, align 8, !dbg !6515
  br label %for.cond11, !dbg !6516, !llvm.loop !6517

for.end:                                          ; preds = %for.cond11
  %51 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6519
  %tobool33 = icmp ne %struct.bNodeTree* %51, null, !dbg !6519
  br i1 %tobool33, label %if.then34, label %if.end44, !dbg !6521

if.then34:                                        ; preds = %for.end
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6522
  %scene35 = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 44, !dbg !6524
  %53 = load %struct.Scene*, %struct.Scene** %scene35, align 8, !dbg !6524
  call void @ntreeCompositTagRender(%struct.Scene* %53), !dbg !6525
  %54 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6526
  %call36 = call i32 @ntreeCompositTagAnimated(%struct.bNodeTree* %54), !dbg !6527
  %55 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6528
  %scene37 = getelementptr inbounds %struct.Render, %struct.Render* %55, i32 0, i32 44, !dbg !6529
  %56 = load %struct.Scene*, %struct.Scene** %scene37, align 8, !dbg !6529
  %57 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6530
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6531
  %r38 = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 45, !dbg !6532
  %59 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 8), align 1, !dbg !6533
  %conv39 = zext i8 %59 to i32, !dbg !6534
  %cmp40 = icmp eq i32 %conv39, 0, !dbg !6535
  %conv41 = zext i1 %cmp40 to i32, !dbg !6535
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6536
  %scene42 = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 44, !dbg !6537
  %61 = load %struct.Scene*, %struct.Scene** %scene42, align 8, !dbg !6537
  %view_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %61, i32 0, i32 44, !dbg !6538
  %62 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6539
  %scene43 = getelementptr inbounds %struct.Render, %struct.Render* %62, i32 0, i32 44, !dbg !6540
  %63 = load %struct.Scene*, %struct.Scene** %scene43, align 8, !dbg !6540
  %display_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %63, i32 0, i32 45, !dbg !6541
  call void @ntreeCompositExecTree(%struct.Scene* %56, %struct.bNodeTree* %57, %struct.RenderData* %r38, i32 1, i32 %conv41, %struct.ColorManagedViewSettings* %view_settings, %struct.ColorManagedDisplaySettings* %display_settings), !dbg !6542
  br label %if.end44, !dbg !6543

if.end44:                                         ; preds = %if.then34, %for.end
  %64 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6544
  call void @RE_AcquireResultImage(%struct.Render* %64, %struct.RenderResult* %rres), !dbg !6545
  %65 = load i32, i32* %sample, align 4, !dbg !6546
  %shl = shl i32 1, %65, !dbg !6547
  store i32 %shl, i32* %mask, align 4, !dbg !6548
  %66 = load i32, i32* %mask, align 4, !dbg !6549
  %arraydecay45 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %filt, i64 0, i64 0, !dbg !6550
  call void @mask_array(i32 %66, [3 x float]* %arraydecay45), !dbg !6551
  store i32 0, i32* %y, align 4, !dbg !6552
  br label %for.cond46, !dbg !6554

for.cond46:                                       ; preds = %for.inc109, %if.end44
  %67 = load i32, i32* %y, align 4, !dbg !6555
  %68 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6557
  %recty47 = getelementptr inbounds %struct.Render, %struct.Render* %68, i32 0, i32 21, !dbg !6558
  %69 = load i32, i32* %recty47, align 4, !dbg !6558
  %cmp48 = icmp slt i32 %67, %69, !dbg !6559
  br i1 %cmp48, label %for.body50, label %for.end111, !dbg !6560

for.body50:                                       ; preds = %for.cond46
  call void @llvm.dbg.declare(metadata float** %rf, metadata !6561, metadata !DIExpression()), !dbg !6563
  %70 = load float*, float** %rectf, align 8, !dbg !6564
  %71 = load i32, i32* %y, align 4, !dbg !6565
  %mul51 = mul nsw i32 4, %71, !dbg !6566
  %72 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6567
  %rectx52 = getelementptr inbounds %struct.Render, %struct.Render* %72, i32 0, i32 20, !dbg !6568
  %73 = load i32, i32* %rectx52, align 8, !dbg !6568
  %mul53 = mul nsw i32 %mul51, %73, !dbg !6569
  %idx.ext = sext i32 %mul53 to i64, !dbg !6570
  %add.ptr = getelementptr inbounds float, float* %70, i64 %idx.ext, !dbg !6570
  store float* %add.ptr, float** %rf, align 8, !dbg !6563
  call void @llvm.dbg.declare(metadata float** %col, metadata !6571, metadata !DIExpression()), !dbg !6572
  %rectf54 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 7, !dbg !6573
  %74 = load float*, float** %rectf54, align 8, !dbg !6573
  %75 = load i32, i32* %y, align 4, !dbg !6574
  %mul55 = mul nsw i32 4, %75, !dbg !6575
  %76 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6576
  %rectx56 = getelementptr inbounds %struct.Render, %struct.Render* %76, i32 0, i32 20, !dbg !6577
  %77 = load i32, i32* %rectx56, align 8, !dbg !6577
  %mul57 = mul nsw i32 %mul55, %77, !dbg !6578
  %idx.ext58 = sext i32 %mul57 to i64, !dbg !6579
  %add.ptr59 = getelementptr inbounds float, float* %74, i64 %idx.ext58, !dbg !6579
  store float* %add.ptr59, float** %col, align 8, !dbg !6572
  store i32 0, i32* %x, align 4, !dbg !6580
  br label %for.cond60, !dbg !6582

for.cond60:                                       ; preds = %for.inc105, %for.body50
  %78 = load i32, i32* %x, align 4, !dbg !6583
  %79 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6585
  %rectx61 = getelementptr inbounds %struct.Render, %struct.Render* %79, i32 0, i32 20, !dbg !6586
  %80 = load i32, i32* %rectx61, align 8, !dbg !6586
  %cmp62 = icmp slt i32 %78, %80, !dbg !6587
  br i1 %cmp62, label %for.body64, label %for.end108, !dbg !6588

for.body64:                                       ; preds = %for.cond60
  %81 = load float*, float** %col, align 8, !dbg !6589
  %arrayidx = getelementptr inbounds float, float* %81, i64 0, !dbg !6589
  %82 = load float, float* %arrayidx, align 4, !dbg !6589
  %cmp65 = fcmp olt float %82, 0.000000e+00, !dbg !6592
  br i1 %cmp65, label %if.then67, label %if.else, !dbg !6593

if.then67:                                        ; preds = %for.body64
  %83 = load float*, float** %col, align 8, !dbg !6594
  %arrayidx68 = getelementptr inbounds float, float* %83, i64 0, !dbg !6594
  store float 0.000000e+00, float* %arrayidx68, align 4, !dbg !6595
  br label %if.end75, !dbg !6594

if.else:                                          ; preds = %for.body64
  %84 = load float*, float** %col, align 8, !dbg !6596
  %arrayidx69 = getelementptr inbounds float, float* %84, i64 0, !dbg !6596
  %85 = load float, float* %arrayidx69, align 4, !dbg !6596
  %cmp70 = fcmp ogt float %85, 1.000000e+00, !dbg !6598
  br i1 %cmp70, label %if.then72, label %if.end74, !dbg !6599

if.then72:                                        ; preds = %if.else
  %86 = load float*, float** %col, align 8, !dbg !6600
  %arrayidx73 = getelementptr inbounds float, float* %86, i64 0, !dbg !6600
  store float 1.000000e+00, float* %arrayidx73, align 4, !dbg !6601
  br label %if.end74, !dbg !6600

if.end74:                                         ; preds = %if.then72, %if.else
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then67
  %87 = load float*, float** %col, align 8, !dbg !6602
  %arrayidx76 = getelementptr inbounds float, float* %87, i64 1, !dbg !6602
  %88 = load float, float* %arrayidx76, align 4, !dbg !6602
  %cmp77 = fcmp olt float %88, 0.000000e+00, !dbg !6604
  br i1 %cmp77, label %if.then79, label %if.else81, !dbg !6605

if.then79:                                        ; preds = %if.end75
  %89 = load float*, float** %col, align 8, !dbg !6606
  %arrayidx80 = getelementptr inbounds float, float* %89, i64 1, !dbg !6606
  store float 0.000000e+00, float* %arrayidx80, align 4, !dbg !6607
  br label %if.end88, !dbg !6606

if.else81:                                        ; preds = %if.end75
  %90 = load float*, float** %col, align 8, !dbg !6608
  %arrayidx82 = getelementptr inbounds float, float* %90, i64 1, !dbg !6608
  %91 = load float, float* %arrayidx82, align 4, !dbg !6608
  %cmp83 = fcmp ogt float %91, 1.000000e+00, !dbg !6610
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !6611

if.then85:                                        ; preds = %if.else81
  %92 = load float*, float** %col, align 8, !dbg !6612
  %arrayidx86 = getelementptr inbounds float, float* %92, i64 1, !dbg !6612
  store float 1.000000e+00, float* %arrayidx86, align 4, !dbg !6613
  br label %if.end87, !dbg !6612

if.end87:                                         ; preds = %if.then85, %if.else81
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then79
  %93 = load float*, float** %col, align 8, !dbg !6614
  %arrayidx89 = getelementptr inbounds float, float* %93, i64 2, !dbg !6614
  %94 = load float, float* %arrayidx89, align 4, !dbg !6614
  %cmp90 = fcmp olt float %94, 0.000000e+00, !dbg !6616
  br i1 %cmp90, label %if.then92, label %if.else94, !dbg !6617

if.then92:                                        ; preds = %if.end88
  %95 = load float*, float** %col, align 8, !dbg !6618
  %arrayidx93 = getelementptr inbounds float, float* %95, i64 2, !dbg !6618
  store float 0.000000e+00, float* %arrayidx93, align 4, !dbg !6619
  br label %if.end101, !dbg !6618

if.else94:                                        ; preds = %if.end88
  %96 = load float*, float** %col, align 8, !dbg !6620
  %arrayidx95 = getelementptr inbounds float, float* %96, i64 2, !dbg !6620
  %97 = load float, float* %arrayidx95, align 4, !dbg !6620
  %cmp96 = fcmp ogt float %97, 1.000000e+00, !dbg !6622
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !6623

if.then98:                                        ; preds = %if.else94
  %98 = load float*, float** %col, align 8, !dbg !6624
  %arrayidx99 = getelementptr inbounds float, float* %98, i64 2, !dbg !6624
  store float 1.000000e+00, float* %arrayidx99, align 4, !dbg !6625
  br label %if.end100, !dbg !6624

if.end100:                                        ; preds = %if.then98, %if.else94
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then92
  %arraydecay102 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %filt, i64 0, i64 0, !dbg !6626
  %99 = load float*, float** %col, align 8, !dbg !6627
  %100 = load float*, float** %rf, align 8, !dbg !6628
  %101 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6629
  %rectx103 = getelementptr inbounds %struct.Render, %struct.Render* %101, i32 0, i32 20, !dbg !6630
  %102 = load i32, i32* %rectx103, align 8, !dbg !6630
  %103 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6631
  %recty104 = getelementptr inbounds %struct.Render, %struct.Render* %103, i32 0, i32 21, !dbg !6632
  %104 = load i32, i32* %recty104, align 4, !dbg !6632
  %105 = load i32, i32* %x, align 4, !dbg !6633
  %106 = load i32, i32* %y, align 4, !dbg !6634
  call void @add_filt_fmask_coord([3 x float]* %arraydecay102, float* %99, float* %100, i32 %102, i32 %104, i32 %105, i32 %106), !dbg !6635
  br label %for.inc105, !dbg !6636

for.inc105:                                       ; preds = %if.end101
  %107 = load i32, i32* %x, align 4, !dbg !6637
  %inc = add nsw i32 %107, 1, !dbg !6637
  store i32 %inc, i32* %x, align 4, !dbg !6637
  %108 = load float*, float** %rf, align 8, !dbg !6638
  %add.ptr106 = getelementptr inbounds float, float* %108, i64 4, !dbg !6638
  store float* %add.ptr106, float** %rf, align 8, !dbg !6638
  %109 = load float*, float** %col, align 8, !dbg !6639
  %add.ptr107 = getelementptr inbounds float, float* %109, i64 4, !dbg !6639
  store float* %add.ptr107, float** %col, align 8, !dbg !6639
  br label %for.cond60, !dbg !6640, !llvm.loop !6641

for.end108:                                       ; preds = %for.cond60
  br label %for.inc109, !dbg !6643

for.inc109:                                       ; preds = %for.end108
  %110 = load i32, i32* %y, align 4, !dbg !6644
  %inc110 = add nsw i32 %110, 1, !dbg !6644
  store i32 %inc110, i32* %y, align 4, !dbg !6644
  br label %for.cond46, !dbg !6645, !llvm.loop !6646

for.end111:                                       ; preds = %for.cond46
  %111 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6648
  call void @RE_ReleaseResultImage(%struct.Render* %111), !dbg !6649
  %112 = load i32, i32* %sample, align 4, !dbg !6650
  %113 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6652
  %osa112 = getelementptr inbounds %struct.Render, %struct.Render* %113, i32 0, i32 5, !dbg !6653
  %114 = load i16, i16* %osa112, align 2, !dbg !6653
  %conv113 = sext i16 %114 to i32, !dbg !6652
  %sub = sub nsw i32 %conv113, 1, !dbg !6654
  %cmp114 = icmp ne i32 %112, %sub, !dbg !6655
  br i1 %cmp114, label %if.then116, label %if.end120, !dbg !6656

if.then116:                                       ; preds = %for.end111
  %115 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6657
  %116 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6659
  %result = getelementptr inbounds %struct.Render, %struct.Render* %116, i32 0, i32 9, !dbg !6660
  %117 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !6660
  %call117 = call %struct.RenderLayer* @render_get_active_layer(%struct.Render* %115, %struct.RenderResult* %117), !dbg !6661
  %118 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6662
  %result118 = getelementptr inbounds %struct.Render, %struct.Render* %118, i32 0, i32 9, !dbg !6663
  %119 = load %struct.RenderResult*, %struct.RenderResult** %result118, align 8, !dbg !6663
  %renlay = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %119, i32 0, i32 14, !dbg !6664
  store %struct.RenderLayer* %call117, %struct.RenderLayer** %renlay, align 8, !dbg !6665
  %120 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6666
  %display_update = getelementptr inbounds %struct.Render, %struct.Render* %120, i32 0, i32 86, !dbg !6667
  %121 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !6667
  %122 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6668
  %duh = getelementptr inbounds %struct.Render, %struct.Render* %122, i32 0, i32 87, !dbg !6669
  %123 = load i8*, i8** %duh, align 8, !dbg !6669
  %124 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6670
  %result119 = getelementptr inbounds %struct.Render, %struct.Render* %124, i32 0, i32 9, !dbg !6671
  %125 = load %struct.RenderResult*, %struct.RenderResult** %result119, align 8, !dbg !6671
  call void %121(i8* %123, %struct.RenderResult* %125, %struct.rcti* null), !dbg !6666
  br label %if.end120, !dbg !6672

if.end120:                                        ; preds = %if.then116, %for.end111
  %126 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6673
  %test_break121 = getelementptr inbounds %struct.Render, %struct.Render* %126, i32 0, i32 96, !dbg !6675
  %127 = load i32 (i8*)*, i32 (i8*)** %test_break121, align 8, !dbg !6675
  %128 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6676
  %tbh122 = getelementptr inbounds %struct.Render, %struct.Render* %128, i32 0, i32 97, !dbg !6677
  %129 = load i8*, i8** %tbh122, align 8, !dbg !6677
  %call123 = call i32 %127(i8* %129), !dbg !6673
  %tobool124 = icmp ne i32 %call123, 0, !dbg !6673
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !6678

if.then125:                                       ; preds = %if.end120
  br label %for.end129, !dbg !6679

if.end126:                                        ; preds = %if.end120
  br label %for.inc127, !dbg !6680

for.inc127:                                       ; preds = %if.end126
  %130 = load i32, i32* %sample, align 4, !dbg !6681
  %inc128 = add nsw i32 %130, 1, !dbg !6681
  store i32 %inc128, i32* %sample, align 4, !dbg !6681
  br label %for.cond, !dbg !6682, !llvm.loop !6683

for.end129:                                       ; preds = %if.then125, %for.cond
  store i32 0, i32* %y, align 4, !dbg !6685
  br label %for.cond130, !dbg !6687

for.cond130:                                      ; preds = %for.inc186, %for.end129
  %131 = load i32, i32* %y, align 4, !dbg !6688
  %132 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6690
  %recty131 = getelementptr inbounds %struct.Render, %struct.Render* %132, i32 0, i32 21, !dbg !6691
  %133 = load i32, i32* %recty131, align 4, !dbg !6691
  %cmp132 = icmp slt i32 %131, %133, !dbg !6692
  br i1 %cmp132, label %for.body134, label %for.end188, !dbg !6693

for.body134:                                      ; preds = %for.cond130
  call void @llvm.dbg.declare(metadata float** %rf135, metadata !6694, metadata !DIExpression()), !dbg !6696
  %134 = load float*, float** %rectf, align 8, !dbg !6697
  %135 = load i32, i32* %y, align 4, !dbg !6698
  %mul136 = mul nsw i32 4, %135, !dbg !6699
  %136 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6700
  %rectx137 = getelementptr inbounds %struct.Render, %struct.Render* %136, i32 0, i32 20, !dbg !6701
  %137 = load i32, i32* %rectx137, align 8, !dbg !6701
  %mul138 = mul nsw i32 %mul136, %137, !dbg !6702
  %idx.ext139 = sext i32 %mul138 to i64, !dbg !6703
  %add.ptr140 = getelementptr inbounds float, float* %134, i64 %idx.ext139, !dbg !6703
  store float* %add.ptr140, float** %rf135, align 8, !dbg !6696
  store i32 0, i32* %x, align 4, !dbg !6704
  br label %for.cond141, !dbg !6706

for.cond141:                                      ; preds = %for.inc182, %for.body134
  %138 = load i32, i32* %x, align 4, !dbg !6707
  %139 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6709
  %rectx142 = getelementptr inbounds %struct.Render, %struct.Render* %139, i32 0, i32 20, !dbg !6710
  %140 = load i32, i32* %rectx142, align 8, !dbg !6710
  %cmp143 = icmp slt i32 %138, %140, !dbg !6711
  br i1 %cmp143, label %for.body145, label %for.end185, !dbg !6712

for.body145:                                      ; preds = %for.cond141
  %141 = load float*, float** %rf135, align 8, !dbg !6713
  %arrayidx146 = getelementptr inbounds float, float* %141, i64 0, !dbg !6713
  %142 = load float, float* %arrayidx146, align 4, !dbg !6713
  %cmp147 = fcmp ogt float %142, 0.000000e+00, !dbg !6713
  br i1 %cmp147, label %cond.true, label %cond.false, !dbg !6713

cond.true:                                        ; preds = %for.body145
  %143 = load float*, float** %rf135, align 8, !dbg !6713
  %arrayidx149 = getelementptr inbounds float, float* %143, i64 0, !dbg !6713
  %144 = load float, float* %arrayidx149, align 4, !dbg !6713
  br label %cond.end, !dbg !6713

cond.false:                                       ; preds = %for.body145
  br label %cond.end, !dbg !6713

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %144, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !6713
  %145 = load float*, float** %rf135, align 8, !dbg !6715
  %arrayidx150 = getelementptr inbounds float, float* %145, i64 0, !dbg !6715
  store float %cond, float* %arrayidx150, align 4, !dbg !6716
  %146 = load float*, float** %rf135, align 8, !dbg !6717
  %arrayidx151 = getelementptr inbounds float, float* %146, i64 1, !dbg !6717
  %147 = load float, float* %arrayidx151, align 4, !dbg !6717
  %cmp152 = fcmp ogt float %147, 0.000000e+00, !dbg !6717
  br i1 %cmp152, label %cond.true154, label %cond.false156, !dbg !6717

cond.true154:                                     ; preds = %cond.end
  %148 = load float*, float** %rf135, align 8, !dbg !6717
  %arrayidx155 = getelementptr inbounds float, float* %148, i64 1, !dbg !6717
  %149 = load float, float* %arrayidx155, align 4, !dbg !6717
  br label %cond.end157, !dbg !6717

cond.false156:                                    ; preds = %cond.end
  br label %cond.end157, !dbg !6717

cond.end157:                                      ; preds = %cond.false156, %cond.true154
  %cond158 = phi float [ %149, %cond.true154 ], [ 0.000000e+00, %cond.false156 ], !dbg !6717
  %150 = load float*, float** %rf135, align 8, !dbg !6718
  %arrayidx159 = getelementptr inbounds float, float* %150, i64 1, !dbg !6718
  store float %cond158, float* %arrayidx159, align 4, !dbg !6719
  %151 = load float*, float** %rf135, align 8, !dbg !6720
  %arrayidx160 = getelementptr inbounds float, float* %151, i64 2, !dbg !6720
  %152 = load float, float* %arrayidx160, align 4, !dbg !6720
  %cmp161 = fcmp ogt float %152, 0.000000e+00, !dbg !6720
  br i1 %cmp161, label %cond.true163, label %cond.false165, !dbg !6720

cond.true163:                                     ; preds = %cond.end157
  %153 = load float*, float** %rf135, align 8, !dbg !6720
  %arrayidx164 = getelementptr inbounds float, float* %153, i64 2, !dbg !6720
  %154 = load float, float* %arrayidx164, align 4, !dbg !6720
  br label %cond.end166, !dbg !6720

cond.false165:                                    ; preds = %cond.end157
  br label %cond.end166, !dbg !6720

cond.end166:                                      ; preds = %cond.false165, %cond.true163
  %cond167 = phi float [ %154, %cond.true163 ], [ 0.000000e+00, %cond.false165 ], !dbg !6720
  %155 = load float*, float** %rf135, align 8, !dbg !6721
  %arrayidx168 = getelementptr inbounds float, float* %155, i64 2, !dbg !6721
  store float %cond167, float* %arrayidx168, align 4, !dbg !6722
  %156 = load float*, float** %rf135, align 8, !dbg !6723
  %arrayidx169 = getelementptr inbounds float, float* %156, i64 3, !dbg !6723
  %157 = load float, float* %arrayidx169, align 4, !dbg !6723
  %cmp170 = fcmp olt float %157, 0.000000e+00, !dbg !6723
  br i1 %cmp170, label %if.then172, label %if.else174, !dbg !6726

if.then172:                                       ; preds = %cond.end166
  %158 = load float*, float** %rf135, align 8, !dbg !6723
  %arrayidx173 = getelementptr inbounds float, float* %158, i64 3, !dbg !6723
  store float 0.000000e+00, float* %arrayidx173, align 4, !dbg !6723
  br label %if.end181, !dbg !6723

if.else174:                                       ; preds = %cond.end166
  %159 = load float*, float** %rf135, align 8, !dbg !6727
  %arrayidx175 = getelementptr inbounds float, float* %159, i64 3, !dbg !6727
  %160 = load float, float* %arrayidx175, align 4, !dbg !6727
  %cmp176 = fcmp ogt float %160, 1.000000e+00, !dbg !6727
  br i1 %cmp176, label %if.then178, label %if.end180, !dbg !6723

if.then178:                                       ; preds = %if.else174
  %161 = load float*, float** %rf135, align 8, !dbg !6727
  %arrayidx179 = getelementptr inbounds float, float* %161, i64 3, !dbg !6727
  store float 1.000000e+00, float* %arrayidx179, align 4, !dbg !6727
  br label %if.end180, !dbg !6727

if.end180:                                        ; preds = %if.then178, %if.else174
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.then172
  br label %for.inc182, !dbg !6729

for.inc182:                                       ; preds = %if.end181
  %162 = load i32, i32* %x, align 4, !dbg !6730
  %inc183 = add nsw i32 %162, 1, !dbg !6730
  store i32 %inc183, i32* %x, align 4, !dbg !6730
  %163 = load float*, float** %rf135, align 8, !dbg !6731
  %add.ptr184 = getelementptr inbounds float, float* %163, i64 4, !dbg !6731
  store float* %add.ptr184, float** %rf135, align 8, !dbg !6731
  br label %for.cond141, !dbg !6732, !llvm.loop !6733

for.end185:                                       ; preds = %for.cond141
  br label %for.inc186, !dbg !6735

for.inc186:                                       ; preds = %for.end185
  %164 = load i32, i32* %y, align 4, !dbg !6736
  %inc187 = add nsw i32 %164, 1, !dbg !6736
  store i32 %inc187, i32* %y, align 4, !dbg !6736
  br label %for.cond130, !dbg !6737, !llvm.loop !6738

for.end188:                                       ; preds = %for.cond130
  %165 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6740
  %tobool189 = icmp ne %struct.bNodeTree* %165, null, !dbg !6740
  br i1 %tobool189, label %if.then190, label %if.end197, !dbg !6742

if.then190:                                       ; preds = %for.end188
  %166 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6743
  %stats_draw191 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %166, i32 0, i32 29, !dbg !6745
  store void (i8*, i8*)* null, void (i8*, i8*)** %stats_draw191, align 8, !dbg !6746
  %167 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6747
  %test_break192 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %167, i32 0, i32 30, !dbg !6748
  store i32 (i8*)* null, i32 (i8*)** %test_break192, align 8, !dbg !6749
  %168 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6750
  %progress193 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %168, i32 0, i32 28, !dbg !6751
  store void (i8*, float)* null, void (i8*, float)** %progress193, align 8, !dbg !6752
  %169 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6753
  %prh194 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %169, i32 0, i32 33, !dbg !6754
  store i8* null, i8** %prh194, align 8, !dbg !6755
  %170 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6756
  %sdh195 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %170, i32 0, i32 34, !dbg !6757
  store i8* null, i8** %sdh195, align 8, !dbg !6758
  %171 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6759
  %tbh196 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %171, i32 0, i32 32, !dbg !6760
  store i8* null, i8** %tbh196, align 8, !dbg !6761
  br label %if.end197, !dbg !6762

if.end197:                                        ; preds = %if.then190, %for.end188
  store i16 0, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98, i32 12), align 2, !dbg !6763
  %172 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6764
  %resultmutex198 = getelementptr inbounds %struct.Render, %struct.Render* %172, i32 0, i32 12, !dbg !6765
  call void @BLI_rw_mutex_lock(i32* %resultmutex198, i32 2), !dbg !6766
  %173 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6767
  %result199 = getelementptr inbounds %struct.Render, %struct.Render* %173, i32 0, i32 9, !dbg !6769
  %174 = load %struct.RenderResult*, %struct.RenderResult** %result199, align 8, !dbg !6769
  %rectf200 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %174, i32 0, i32 7, !dbg !6770
  %175 = load float*, float** %rectf200, align 8, !dbg !6770
  %tobool201 = icmp ne float* %175, null, !dbg !6767
  br i1 %tobool201, label %if.then202, label %if.end205, !dbg !6771

if.then202:                                       ; preds = %if.end197
  %176 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6772
  %177 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6773
  %result203 = getelementptr inbounds %struct.Render, %struct.Render* %177, i32 0, i32 9, !dbg !6774
  %178 = load %struct.RenderResult*, %struct.RenderResult** %result203, align 8, !dbg !6774
  %rectf204 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %178, i32 0, i32 7, !dbg !6775
  %179 = load float*, float** %rectf204, align 8, !dbg !6775
  %180 = bitcast float* %179 to i8*, !dbg !6773
  call void %176(i8* %180), !dbg !6772
  br label %if.end205, !dbg !6772

if.end205:                                        ; preds = %if.then202, %if.end197
  %181 = load float*, float** %rectf, align 8, !dbg !6776
  %182 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6777
  %result206 = getelementptr inbounds %struct.Render, %struct.Render* %182, i32 0, i32 9, !dbg !6778
  %183 = load %struct.RenderResult*, %struct.RenderResult** %result206, align 8, !dbg !6778
  %rectf207 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %183, i32 0, i32 7, !dbg !6779
  store float* %181, float** %rectf207, align 8, !dbg !6780
  %184 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6781
  %resultmutex208 = getelementptr inbounds %struct.Render, %struct.Render* %184, i32 0, i32 12, !dbg !6782
  call void @BLI_rw_mutex_unlock(i32* %resultmutex208), !dbg !6783
  ret void, !dbg !6784
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RE_seq_render_active(%struct.Scene* %scene, %struct.RenderData* %rd) #0 !dbg !6785 {
entry:
  %retval = alloca i32, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %rd.addr = alloca %struct.RenderData*, align 8
  %ed = alloca %struct.Editing*, align 8
  %seq = alloca %struct.Sequence*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6788, metadata !DIExpression()), !dbg !6789
  store %struct.RenderData* %rd, %struct.RenderData** %rd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderData** %rd.addr, metadata !6790, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.declare(metadata %struct.Editing** %ed, metadata !6792, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq, metadata !6796, metadata !DIExpression()), !dbg !6797
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6798
  %ed1 = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 19, !dbg !6799
  %1 = load %struct.Editing*, %struct.Editing** %ed1, align 8, !dbg !6799
  store %struct.Editing* %1, %struct.Editing** %ed, align 8, !dbg !6800
  %2 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !6801
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %2, i32 0, i32 46, !dbg !6803
  %3 = load i32, i32* %scemode, align 4, !dbg !6803
  %and = and i32 %3, 1, !dbg !6804
  %tobool = icmp ne i32 %and, 0, !dbg !6804
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6805

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !6806
  %tobool2 = icmp ne %struct.Editing* %4, null, !dbg !6806
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !6807

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %5 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !6808
  %seqbase = getelementptr inbounds %struct.Editing, %struct.Editing* %5, i32 0, i32 1, !dbg !6809
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %seqbase, i32 0, i32 0, !dbg !6810
  %6 = load i8*, i8** %first, align 8, !dbg !6810
  %tobool4 = icmp ne i8* %6, null, !dbg !6808
  br i1 %tobool4, label %if.end, label %if.then, !dbg !6811

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !6812
  br label %return, !dbg !6812

if.end:                                           ; preds = %lor.lhs.false3
  %7 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !6813
  %seqbase5 = getelementptr inbounds %struct.Editing, %struct.Editing* %7, i32 0, i32 1, !dbg !6815
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %seqbase5, i32 0, i32 0, !dbg !6816
  %8 = load i8*, i8** %first6, align 8, !dbg !6816
  %9 = bitcast i8* %8 to %struct.Sequence*, !dbg !6813
  store %struct.Sequence* %9, %struct.Sequence** %seq, align 8, !dbg !6817
  br label %for.cond, !dbg !6818

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !6819
  %tobool7 = icmp ne %struct.Sequence* %10, null, !dbg !6821
  br i1 %tobool7, label %for.body, label %for.end, !dbg !6821

for.body:                                         ; preds = %for.cond
  %11 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !6822
  %type = getelementptr inbounds %struct.Sequence, %struct.Sequence* %11, i32 0, i32 6, !dbg !6825
  %12 = load i32, i32* %type, align 4, !dbg !6825
  %cmp = icmp ne i32 %12, 4, !dbg !6826
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !6827

if.then8:                                         ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !6828
  br label %return, !dbg !6828

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !6829

for.inc:                                          ; preds = %if.end9
  %13 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !6830
  %next = getelementptr inbounds %struct.Sequence, %struct.Sequence* %13, i32 0, i32 0, !dbg !6831
  %14 = load %struct.Sequence*, %struct.Sequence** %next, align 8, !dbg !6831
  store %struct.Sequence* %14, %struct.Sequence** %seq, align 8, !dbg !6832
  br label %for.cond, !dbg !6833, !llvm.loop !6834

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6836
  br label %return, !dbg !6836

return:                                           ; preds = %for.end, %if.then8, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !6837
  ret i32 %15, !dbg !6837
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RE_force_single_renderlayer(%struct.Scene* %scene) #0 !dbg !6838 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %scemode = alloca i32, align 4
  %srl = alloca %struct.SceneRenderLayer*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6841, metadata !DIExpression()), !dbg !6842
  call void @llvm.dbg.declare(metadata i32* %scemode, metadata !6843, metadata !DIExpression()), !dbg !6844
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6845
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 22, !dbg !6846
  %call = call i32 @check_mode_full_sample(%struct.RenderData* %r), !dbg !6847
  store i32 %call, i32* %scemode, align 4, !dbg !6844
  %1 = load i32, i32* %scemode, align 4, !dbg !6848
  %and = and i32 %1, 512, !dbg !6850
  %tobool = icmp ne i32 %and, 0, !dbg !6850
  br i1 %tobool, label %if.then, label %if.end9, !dbg !6851

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl, metadata !6852, metadata !DIExpression()), !dbg !6854
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6855
  %r1 = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 22, !dbg !6856
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r1, i32 0, i32 60, !dbg !6857
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6858
  %r2 = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 22, !dbg !6859
  %actlay = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r2, i32 0, i32 61, !dbg !6860
  %4 = load i16, i16* %actlay, align 8, !dbg !6860
  %conv = sext i16 %4 to i32, !dbg !6858
  %call3 = call i8* @BLI_findlink(%struct.ListBase* %layers, i32 %conv), !dbg !6861
  %5 = bitcast i8* %call3 to %struct.SceneRenderLayer*, !dbg !6861
  store %struct.SceneRenderLayer* %5, %struct.SceneRenderLayer** %srl, align 8, !dbg !6854
  %6 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !6862
  %layflag = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %6, i32 0, i32 8, !dbg !6864
  %7 = load i32, i32* %layflag, align 4, !dbg !6864
  %and4 = and i32 %7, 131072, !dbg !6865
  %tobool5 = icmp ne i32 %and4, 0, !dbg !6865
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !6866

if.then6:                                         ; preds = %if.then
  %8 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !6867
  %layflag7 = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %8, i32 0, i32 8, !dbg !6869
  %9 = load i32, i32* %layflag7, align 4, !dbg !6870
  %and8 = and i32 %9, -131073, !dbg !6870
  store i32 %and8, i32* %layflag7, align 4, !dbg !6870
  store i8 1, i8* %retval, align 1, !dbg !6871
  br label %return, !dbg !6871

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !6872

if.end9:                                          ; preds = %if.end, %entry
  store i8 0, i8* %retval, align 1, !dbg !6873
  br label %return, !dbg !6873

return:                                           ; preds = %if.end9, %if.then6
  %10 = load i8, i8* %retval, align 1, !dbg !6874
  ret i8 %10, !dbg !6874
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RE_is_rendering_allowed(%struct.Scene* %scene, %struct.Object* %camera_override, %struct.ReportList* %reports) #0 !dbg !6875 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %camera_override.addr = alloca %struct.Object*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %scemode = alloca i32, align 4
  %str = alloca [1024 x i8], align 16
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6880, metadata !DIExpression()), !dbg !6881
  store %struct.Object* %camera_override, %struct.Object** %camera_override.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %camera_override.addr, metadata !6882, metadata !DIExpression()), !dbg !6883
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !6884, metadata !DIExpression()), !dbg !6885
  call void @llvm.dbg.declare(metadata i32* %scemode, metadata !6886, metadata !DIExpression()), !dbg !6887
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6888
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 22, !dbg !6889
  %call = call i32 @check_mode_full_sample(%struct.RenderData* %r), !dbg !6890
  store i32 %call, i32* %scemode, align 4, !dbg !6887
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6891
  %r1 = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 22, !dbg !6893
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r1, i32 0, i32 47, !dbg !6894
  %2 = load i32, i32* %mode, align 8, !dbg !6894
  %and = and i32 %2, 512, !dbg !6895
  %tobool = icmp ne i32 %and, 0, !dbg !6895
  br i1 %tobool, label %if.then, label %if.end11, !dbg !6896

if.then:                                          ; preds = %entry
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6897
  %r2 = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 22, !dbg !6900
  %border = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r2, i32 0, i32 58, !dbg !6901
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %border, i32 0, i32 1, !dbg !6902
  %4 = load float, float* %xmax, align 4, !dbg !6902
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6903
  %r3 = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 22, !dbg !6904
  %border4 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r3, i32 0, i32 58, !dbg !6905
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %border4, i32 0, i32 0, !dbg !6906
  %6 = load float, float* %xmin, align 8, !dbg !6906
  %cmp = fcmp ole float %4, %6, !dbg !6907
  br i1 %cmp, label %if.then10, label %lor.lhs.false, !dbg !6908

lor.lhs.false:                                    ; preds = %if.then
  %7 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6909
  %r5 = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 22, !dbg !6910
  %border6 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r5, i32 0, i32 58, !dbg !6911
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %border6, i32 0, i32 3, !dbg !6912
  %8 = load float, float* %ymax, align 4, !dbg !6912
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6913
  %r7 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 22, !dbg !6914
  %border8 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r7, i32 0, i32 58, !dbg !6915
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %border8, i32 0, i32 2, !dbg !6916
  %10 = load float, float* %ymin, align 8, !dbg !6916
  %cmp9 = fcmp ole float %8, %10, !dbg !6917
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !6918

if.then10:                                        ; preds = %lor.lhs.false, %if.then
  %11 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6919
  call void @BKE_report(%struct.ReportList* %11, i32 32, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)), !dbg !6921
  store i8 0, i8* %retval, align 1, !dbg !6922
  br label %return, !dbg !6922

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end11, !dbg !6923

if.end11:                                         ; preds = %if.end, %entry
  %12 = load i32, i32* %scemode, align 4, !dbg !6924
  %and12 = and i32 %12, 33792, !dbg !6926
  %tobool13 = icmp ne i32 %and12, 0, !dbg !6926
  br i1 %tobool13, label %if.then14, label %if.end28, !dbg !6927

if.then14:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata [1024 x i8]* %str, metadata !6928, metadata !DIExpression()), !dbg !6930
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6931
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !6932
  call void @render_result_exr_file_path(%struct.Scene* %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i32 0, i8* %arraydecay), !dbg !6933
  %arraydecay15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0, !dbg !6934
  %call16 = call zeroext i8 @BLI_file_is_writable(i8* %arraydecay15), !dbg !6936
  %tobool17 = icmp ne i8 %call16, 0, !dbg !6936
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !6937

if.then18:                                        ; preds = %if.then14
  %14 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6938
  call void @BKE_report(%struct.ReportList* %14, i32 32, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6, i64 0, i64 0)), !dbg !6940
  store i8 0, i8* %retval, align 1, !dbg !6941
  br label %return, !dbg !6941

if.end19:                                         ; preds = %if.then14
  %15 = load i32, i32* %scemode, align 4, !dbg !6942
  %and20 = and i32 %15, 32768, !dbg !6944
  %tobool21 = icmp ne i32 %and20, 0, !dbg !6944
  br i1 %tobool21, label %land.lhs.true, label %if.end27, !dbg !6945

land.lhs.true:                                    ; preds = %if.end19
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6946
  %r22 = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 22, !dbg !6947
  %mode23 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r22, i32 0, i32 47, !dbg !6948
  %17 = load i32, i32* %mode23, align 8, !dbg !6948
  %and24 = and i32 %17, 32, !dbg !6949
  %tobool25 = icmp ne i32 %and24, 0, !dbg !6949
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !6950

if.then26:                                        ; preds = %land.lhs.true
  %18 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6951
  call void @BKE_report(%struct.ReportList* %18, i32 32, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0)), !dbg !6953
  store i8 0, i8* %retval, align 1, !dbg !6954
  br label %return, !dbg !6954

if.end27:                                         ; preds = %land.lhs.true, %if.end19
  br label %if.end28, !dbg !6955

if.end28:                                         ; preds = %if.end27, %if.end11
  %19 = load i32, i32* %scemode, align 4, !dbg !6956
  %and29 = and i32 %19, 64, !dbg !6958
  %tobool30 = icmp ne i32 %and29, 0, !dbg !6958
  br i1 %tobool30, label %if.then31, label %if.end50, !dbg !6959

if.then31:                                        ; preds = %if.end28
  %20 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6960
  %use_nodes = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 16, !dbg !6963
  %21 = load i8, i8* %use_nodes, align 2, !dbg !6963
  %tobool32 = icmp ne i8 %21, 0, !dbg !6960
  br i1 %tobool32, label %if.then33, label %if.end49, !dbg !6964

if.then33:                                        ; preds = %if.then31
  %22 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6965
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %22, i32 0, i32 18, !dbg !6968
  %23 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !6968
  %tobool34 = icmp ne %struct.bNodeTree* %23, null, !dbg !6965
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !6969

if.then35:                                        ; preds = %if.then33
  %24 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6970
  call void @BKE_report(%struct.ReportList* %24, i32 32, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0)), !dbg !6972
  store i8 0, i8* %retval, align 1, !dbg !6973
  br label %return, !dbg !6973

if.end36:                                         ; preds = %if.then33
  %25 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6974
  %call37 = call i32 @check_composite_output(%struct.Scene* %25), !dbg !6976
  %tobool38 = icmp ne i32 %call37, 0, !dbg !6976
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !6977

if.then39:                                        ; preds = %if.end36
  %26 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6978
  call void @BKE_report(%struct.ReportList* %26, i32 32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i64 0, i64 0)), !dbg !6980
  store i8 0, i8* %retval, align 1, !dbg !6981
  br label %return, !dbg !6981

if.end40:                                         ; preds = %if.end36
  %27 = load i32, i32* %scemode, align 4, !dbg !6982
  %and41 = and i32 %27, 32768, !dbg !6984
  %tobool42 = icmp ne i32 %and41, 0, !dbg !6984
  br i1 %tobool42, label %if.then43, label %if.end48, !dbg !6985

if.then43:                                        ; preds = %if.end40
  %28 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6986
  %call44 = call i32 @composite_needs_render(%struct.Scene* %28, i32 0), !dbg !6989
  %cmp45 = icmp eq i32 %call44, 0, !dbg !6990
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !6991

if.then46:                                        ; preds = %if.then43
  %29 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6992
  call void @BKE_report(%struct.ReportList* %29, i32 32, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10, i64 0, i64 0)), !dbg !6994
  store i8 0, i8* %retval, align 1, !dbg !6995
  br label %return, !dbg !6995

if.end47:                                         ; preds = %if.then43
  br label %if.end48, !dbg !6996

if.end48:                                         ; preds = %if.end47, %if.end40
  br label %if.end49, !dbg !6997

if.end49:                                         ; preds = %if.end48, %if.then31
  br label %if.end50, !dbg !6998

if.end50:                                         ; preds = %if.end49, %if.end28
  %30 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6999
  %31 = load %struct.Object*, %struct.Object** %camera_override.addr, align 8, !dbg !7001
  %32 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !7002
  %call51 = call i32 @check_valid_camera(%struct.Scene* %30, %struct.Object* %31, %struct.ReportList* %32), !dbg !7003
  %tobool52 = icmp ne i32 %call51, 0, !dbg !7003
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !7004

if.then53:                                        ; preds = %if.end50
  store i8 0, i8* %retval, align 1, !dbg !7005
  br label %return, !dbg !7005

if.end54:                                         ; preds = %if.end50
  %33 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7007
  %r55 = getelementptr inbounds %struct.Scene, %struct.Scene* %33, i32 0, i32 22, !dbg !7008
  %34 = load %struct.Object*, %struct.Object** %camera_override.addr, align 8, !dbg !7009
  %tobool56 = icmp ne %struct.Object* %34, null, !dbg !7009
  br i1 %tobool56, label %cond.true, label %cond.false, !dbg !7009

cond.true:                                        ; preds = %if.end54
  %35 = load %struct.Object*, %struct.Object** %camera_override.addr, align 8, !dbg !7010
  br label %cond.end, !dbg !7009

cond.false:                                       ; preds = %if.end54
  %36 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7011
  %camera = getelementptr inbounds %struct.Scene, %struct.Scene* %36, i32 0, i32 2, !dbg !7012
  %37 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !7012
  br label %cond.end, !dbg !7009

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Object* [ %35, %cond.true ], [ %37, %cond.false ], !dbg !7009
  call void @BKE_camera_object_mode(%struct.RenderData* %r55, %struct.Object* %cond), !dbg !7013
  %38 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7014
  %r57 = getelementptr inbounds %struct.Scene, %struct.Scene* %38, i32 0, i32 22, !dbg !7016
  %mode58 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r57, i32 0, i32 47, !dbg !7017
  %39 = load i32, i32* %mode58, align 8, !dbg !7017
  %and59 = and i32 %39, 1024, !dbg !7018
  %tobool60 = icmp ne i32 %and59, 0, !dbg !7018
  br i1 %tobool60, label %if.then61, label %if.end68, !dbg !7019

if.then61:                                        ; preds = %cond.end
  %40 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7020
  %r62 = getelementptr inbounds %struct.Scene, %struct.Scene* %40, i32 0, i32 22, !dbg !7023
  %mode63 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r62, i32 0, i32 47, !dbg !7024
  %41 = load i32, i32* %mode63, align 8, !dbg !7024
  %and64 = and i32 %41, 8, !dbg !7025
  %tobool65 = icmp ne i32 %and64, 0, !dbg !7025
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !7026

if.then66:                                        ; preds = %if.then61
  %42 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !7027
  call void @BKE_report(%struct.ReportList* %42, i32 32, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0)), !dbg !7029
  store i8 0, i8* %retval, align 1, !dbg !7030
  br label %return, !dbg !7030

if.end67:                                         ; preds = %if.then61
  br label %if.end68, !dbg !7031

if.end68:                                         ; preds = %if.end67, %cond.end
  %43 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7032
  %call69 = call zeroext i8 @render_scene_has_layers_to_render(%struct.Scene* %43), !dbg !7034
  %tobool70 = icmp ne i8 %call69, 0, !dbg !7034
  br i1 %tobool70, label %if.end72, label %if.then71, !dbg !7035

if.then71:                                        ; preds = %if.end68
  %44 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !7036
  call void @BKE_report(%struct.ReportList* %44, i32 32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0)), !dbg !7038
  store i8 0, i8* %retval, align 1, !dbg !7039
  br label %return, !dbg !7039

if.end72:                                         ; preds = %if.end68
  store i8 1, i8* %retval, align 1, !dbg !7040
  br label %return, !dbg !7040

return:                                           ; preds = %if.end72, %if.then71, %if.then66, %if.then53, %if.then46, %if.then39, %if.then35, %if.then26, %if.then18, %if.then10
  %45 = load i8, i8* %retval, align 1, !dbg !7041
  ret i8 %45, !dbg !7041
}

declare dso_local void @render_result_exr_file_path(%struct.Scene*, i8*, i32, i8*) #2

declare dso_local zeroext i8 @BLI_file_is_writable(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @check_composite_output(%struct.Scene* %scene) #0 !dbg !7042 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7045, metadata !DIExpression()), !dbg !7046
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7047
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 18, !dbg !7048
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !7048
  %call = call zeroext i8 @node_tree_has_composite_output(%struct.bNodeTree* %1), !dbg !7049
  %conv = zext i8 %call to i32, !dbg !7049
  ret i32 %conv, !dbg !7050
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @composite_needs_render(%struct.Scene* %sce, i32 %this_scene) #0 !dbg !7051 {
entry:
  %retval = alloca i32, align 4
  %sce.addr = alloca %struct.Scene*, align 8
  %this_scene.addr = alloca i32, align 4
  %ntree = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !7054, metadata !DIExpression()), !dbg !7055
  store i32 %this_scene, i32* %this_scene.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %this_scene.addr, metadata !7056, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !7058, metadata !DIExpression()), !dbg !7059
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7060
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 18, !dbg !7061
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !7061
  store %struct.bNodeTree* %1, %struct.bNodeTree** %ntree, align 8, !dbg !7059
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !7062, metadata !DIExpression()), !dbg !7063
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7064
  %cmp = icmp eq %struct.bNodeTree* %2, null, !dbg !7066
  br i1 %cmp, label %if.then, label %if.end, !dbg !7067

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !7068
  br label %return, !dbg !7068

if.end:                                           ; preds = %entry
  %3 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7069
  %use_nodes = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 16, !dbg !7071
  %4 = load i8, i8* %use_nodes, align 2, !dbg !7071
  %conv = zext i8 %4 to i32, !dbg !7069
  %cmp1 = icmp eq i32 %conv, 0, !dbg !7072
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !7073

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !7074
  br label %return, !dbg !7074

if.end4:                                          ; preds = %if.end
  %5 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7075
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 22, !dbg !7077
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !7078
  %6 = load i32, i32* %scemode, align 4, !dbg !7078
  %and = and i32 %6, 64, !dbg !7079
  %cmp5 = icmp eq i32 %and, 0, !dbg !7080
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !7081

if.then7:                                         ; preds = %if.end4
  store i32 1, i32* %retval, align 4, !dbg !7082
  br label %return, !dbg !7082

if.end8:                                          ; preds = %if.end4
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !7083
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 7, !dbg !7085
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !7086
  %8 = load i8*, i8** %first, align 8, !dbg !7086
  %9 = bitcast i8* %8 to %struct.bNode*, !dbg !7083
  store %struct.bNode* %9, %struct.bNode** %node, align 8, !dbg !7087
  br label %for.cond, !dbg !7088

for.cond:                                         ; preds = %for.inc, %if.end8
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7089
  %tobool = icmp ne %struct.bNode* %10, null, !dbg !7091
  br i1 %tobool, label %for.body, label %for.end, !dbg !7091

for.body:                                         ; preds = %for.cond
  %11 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7092
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %11, i32 0, i32 8, !dbg !7095
  %12 = load i16, i16* %type, align 4, !dbg !7095
  %conv9 = sext i16 %12 to i32, !dbg !7092
  %cmp10 = icmp eq i32 %conv9, 221, !dbg !7096
  br i1 %cmp10, label %land.lhs.true, label %if.end27, !dbg !7097

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7098
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 7, !dbg !7099
  %14 = load i32, i32* %flag, align 8, !dbg !7099
  %and12 = and i32 %14, 512, !dbg !7100
  %cmp13 = icmp eq i32 %and12, 0, !dbg !7101
  br i1 %cmp13, label %if.then15, label %if.end27, !dbg !7102

if.then15:                                        ; preds = %land.lhs.true
  %15 = load i32, i32* %this_scene.addr, align 4, !dbg !7103
  %cmp16 = icmp eq i32 %15, 0, !dbg !7105
  br i1 %cmp16, label %if.then25, label %lor.lhs.false, !dbg !7106

lor.lhs.false:                                    ; preds = %if.then15
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7107
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 20, !dbg !7108
  %17 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !7108
  %cmp18 = icmp eq %struct.ID* %17, null, !dbg !7109
  br i1 %cmp18, label %if.then25, label %lor.lhs.false20, !dbg !7110

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7111
  %id21 = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 20, !dbg !7112
  %19 = load %struct.ID*, %struct.ID** %id21, align 8, !dbg !7112
  %20 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7113
  %id22 = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 0, !dbg !7114
  %cmp23 = icmp eq %struct.ID* %19, %id22, !dbg !7115
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !7116

if.then25:                                        ; preds = %lor.lhs.false20, %lor.lhs.false, %if.then15
  store i32 1, i32* %retval, align 4, !dbg !7117
  br label %return, !dbg !7117

if.end26:                                         ; preds = %lor.lhs.false20
  br label %if.end27, !dbg !7114

if.end27:                                         ; preds = %if.end26, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7118

for.inc:                                          ; preds = %if.end27
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7119
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 0, !dbg !7120
  %22 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !7120
  store %struct.bNode* %22, %struct.bNode** %node, align 8, !dbg !7121
  br label %for.cond, !dbg !7122, !llvm.loop !7123

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7125
  br label %return, !dbg !7125

return:                                           ; preds = %for.end, %if.then25, %if.then7, %if.then3, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !7126
  ret i32 %23, !dbg !7126
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @check_valid_camera(%struct.Scene* %scene, %struct.Object* %camera_override, %struct.ReportList* %reports) #0 !dbg !7127 {
entry:
  %retval = alloca i32, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %camera_override.addr = alloca %struct.Object*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %seq = alloca %struct.Sequence*, align 8
  %override = alloca %struct.Object*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7130, metadata !DIExpression()), !dbg !7131
  store %struct.Object* %camera_override, %struct.Object** %camera_override.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %camera_override.addr, metadata !7132, metadata !DIExpression()), !dbg !7133
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !7134, metadata !DIExpression()), !dbg !7135
  %0 = load %struct.Object*, %struct.Object** %camera_override.addr, align 8, !dbg !7136
  %cmp = icmp eq %struct.Object* %0, null, !dbg !7138
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7139

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7140
  %camera = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 2, !dbg !7141
  %2 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !7141
  %cmp1 = icmp eq %struct.Object* %2, null, !dbg !7142
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7143

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7144
  %call = call %struct.Object* @BKE_scene_camera_find(%struct.Scene* %3), !dbg !7145
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7146
  %camera2 = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 2, !dbg !7147
  store %struct.Object* %call, %struct.Object** %camera2, align 8, !dbg !7148
  br label %if.end, !dbg !7146

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7149
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7151
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 22, !dbg !7152
  %call3 = call i32 @RE_seq_render_active(%struct.Scene* %5, %struct.RenderData* %r), !dbg !7153
  %tobool = icmp ne i32 %call3, 0, !dbg !7153
  br i1 %tobool, label %if.then4, label %if.else, !dbg !7154

if.then4:                                         ; preds = %if.end
  %7 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7155
  %ed = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 19, !dbg !7158
  %8 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !7158
  %tobool5 = icmp ne %struct.Editing* %8, null, !dbg !7155
  br i1 %tobool5, label %if.then6, label %if.end35, !dbg !7159

if.then6:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq, metadata !7160, metadata !DIExpression()), !dbg !7162
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7163
  %ed7 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 19, !dbg !7164
  %10 = load %struct.Editing*, %struct.Editing** %ed7, align 8, !dbg !7164
  %seqbase = getelementptr inbounds %struct.Editing, %struct.Editing* %10, i32 0, i32 1, !dbg !7165
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %seqbase, i32 0, i32 0, !dbg !7166
  %11 = load i8*, i8** %first, align 8, !dbg !7166
  %12 = bitcast i8* %11 to %struct.Sequence*, !dbg !7163
  store %struct.Sequence* %12, %struct.Sequence** %seq, align 8, !dbg !7162
  br label %while.cond, !dbg !7167

while.cond:                                       ; preds = %if.end34, %if.then6
  %13 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !7168
  %tobool8 = icmp ne %struct.Sequence* %13, null, !dbg !7167
  br i1 %tobool8, label %while.body, label %while.end, !dbg !7167

while.body:                                       ; preds = %while.cond
  %14 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !7169
  %type = getelementptr inbounds %struct.Sequence, %struct.Sequence* %14, i32 0, i32 6, !dbg !7172
  %15 = load i32, i32* %type, align 4, !dbg !7172
  %cmp9 = icmp eq i32 %15, 2, !dbg !7173
  br i1 %cmp9, label %land.lhs.true10, label %if.end34, !dbg !7174

land.lhs.true10:                                  ; preds = %while.body
  %16 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !7175
  %scene11 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %16, i32 0, i32 26, !dbg !7176
  %17 = load %struct.Scene*, %struct.Scene** %scene11, align 8, !dbg !7176
  %tobool12 = icmp ne %struct.Scene* %17, null, !dbg !7175
  br i1 %tobool12, label %if.then13, label %if.end34, !dbg !7177

if.then13:                                        ; preds = %land.lhs.true10
  %18 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !7178
  %scene_camera = getelementptr inbounds %struct.Sequence, %struct.Sequence* %18, i32 0, i32 27, !dbg !7181
  %19 = load %struct.Object*, %struct.Object** %scene_camera, align 8, !dbg !7181
  %tobool14 = icmp ne %struct.Object* %19, null, !dbg !7178
  br i1 %tobool14, label %if.end33, label %if.then15, !dbg !7182

if.then15:                                        ; preds = %if.then13
  %20 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !7183
  %scene16 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %20, i32 0, i32 26, !dbg !7186
  %21 = load %struct.Scene*, %struct.Scene** %scene16, align 8, !dbg !7186
  %camera17 = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 2, !dbg !7187
  %22 = load %struct.Object*, %struct.Object** %camera17, align 8, !dbg !7187
  %tobool18 = icmp ne %struct.Object* %22, null, !dbg !7183
  br i1 %tobool18, label %if.end32, label %land.lhs.true19, !dbg !7188

land.lhs.true19:                                  ; preds = %if.then15
  %23 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !7189
  %scene20 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %23, i32 0, i32 26, !dbg !7190
  %24 = load %struct.Scene*, %struct.Scene** %scene20, align 8, !dbg !7190
  %call21 = call %struct.Object* @BKE_scene_camera_find(%struct.Scene* %24), !dbg !7191
  %tobool22 = icmp ne %struct.Object* %call21, null, !dbg !7191
  br i1 %tobool22, label %if.end32, label %if.then23, !dbg !7192

if.then23:                                        ; preds = %land.lhs.true19
  call void @llvm.dbg.declare(metadata %struct.Object** %override, metadata !7193, metadata !DIExpression()), !dbg !7195
  %25 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !7196
  %scene24 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %25, i32 0, i32 26, !dbg !7197
  %26 = load %struct.Scene*, %struct.Scene** %scene24, align 8, !dbg !7197
  %27 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7198
  %cmp25 = icmp eq %struct.Scene* %26, %27, !dbg !7199
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !7200

cond.true:                                        ; preds = %if.then23
  %28 = load %struct.Object*, %struct.Object** %camera_override.addr, align 8, !dbg !7201
  br label %cond.end, !dbg !7200

cond.false:                                       ; preds = %if.then23
  br label %cond.end, !dbg !7200

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Object* [ %28, %cond.true ], [ null, %cond.false ], !dbg !7200
  store %struct.Object* %cond, %struct.Object** %override, align 8, !dbg !7195
  %29 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !7202
  %scene26 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %29, i32 0, i32 26, !dbg !7204
  %30 = load %struct.Scene*, %struct.Scene** %scene26, align 8, !dbg !7204
  %31 = load %struct.Object*, %struct.Object** %override, align 8, !dbg !7205
  %call27 = call zeroext i8 @check_valid_compositing_camera(%struct.Scene* %30, %struct.Object* %31), !dbg !7206
  %tobool28 = icmp ne i8 %call27, 0, !dbg !7206
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !7207

if.then29:                                        ; preds = %cond.end
  %32 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !7208
  %33 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !7210
  %scene30 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %33, i32 0, i32 26, !dbg !7211
  %34 = load %struct.Scene*, %struct.Scene** %scene30, align 8, !dbg !7211
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %34, i32 0, i32 0, !dbg !7212
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !7213
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !7210
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !7214
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %32, i32 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.33, i64 0, i64 0), i8* %add.ptr), !dbg !7215
  store i32 0, i32* %retval, align 4, !dbg !7216
  br label %return, !dbg !7216

if.end31:                                         ; preds = %cond.end
  br label %if.end32, !dbg !7217

if.end32:                                         ; preds = %if.end31, %land.lhs.true19, %if.then15
  br label %if.end33, !dbg !7218

if.end33:                                         ; preds = %if.end32, %if.then13
  br label %if.end34, !dbg !7219

if.end34:                                         ; preds = %if.end33, %land.lhs.true10, %while.body
  %35 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !7220
  %next = getelementptr inbounds %struct.Sequence, %struct.Sequence* %35, i32 0, i32 0, !dbg !7221
  %36 = load %struct.Sequence*, %struct.Sequence** %next, align 8, !dbg !7221
  store %struct.Sequence* %36, %struct.Sequence** %seq, align 8, !dbg !7222
  br label %while.cond, !dbg !7167, !llvm.loop !7223

while.end:                                        ; preds = %while.cond
  br label %if.end35, !dbg !7225

if.end35:                                         ; preds = %while.end, %if.then4
  br label %if.end40, !dbg !7226

if.else:                                          ; preds = %if.end
  %37 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7227
  %38 = load %struct.Object*, %struct.Object** %camera_override.addr, align 8, !dbg !7229
  %call36 = call zeroext i8 @check_valid_compositing_camera(%struct.Scene* %37, %struct.Object* %38), !dbg !7230
  %tobool37 = icmp ne i8 %call36, 0, !dbg !7230
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !7231

if.then38:                                        ; preds = %if.else
  %39 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !7232
  call void @BKE_report(%struct.ReportList* %39, i32 32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34, i64 0, i64 0)), !dbg !7234
  store i32 0, i32* %retval, align 4, !dbg !7235
  br label %return, !dbg !7235

if.end39:                                         ; preds = %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end35
  store i32 1, i32* %retval, align 4, !dbg !7236
  br label %return, !dbg !7236

return:                                           ; preds = %if.end40, %if.then38, %if.then29
  %40 = load i32, i32* %retval, align 4, !dbg !7237
  ret i32 %40, !dbg !7237
}

declare dso_local void @BKE_camera_object_mode(%struct.RenderData*, %struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @render_scene_has_layers_to_render(%struct.Scene* %scene) #0 !dbg !7238 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %srl = alloca %struct.SceneRenderLayer*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7239, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl, metadata !7241, metadata !DIExpression()), !dbg !7242
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7243
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 22, !dbg !7245
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 60, !dbg !7246
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !7247
  %1 = load i8*, i8** %first, align 8, !dbg !7247
  %2 = bitcast i8* %1 to %struct.SceneRenderLayer*, !dbg !7243
  store %struct.SceneRenderLayer* %2, %struct.SceneRenderLayer** %srl, align 8, !dbg !7248
  br label %for.cond, !dbg !7249

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !7250
  %tobool = icmp ne %struct.SceneRenderLayer* %3, null, !dbg !7252
  br i1 %tobool, label %for.body, label %for.end, !dbg !7252

for.body:                                         ; preds = %for.cond
  %4 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !7253
  %layflag = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %4, i32 0, i32 8, !dbg !7256
  %5 = load i32, i32* %layflag, align 4, !dbg !7256
  %and = and i32 %5, 131072, !dbg !7257
  %tobool1 = icmp ne i32 %and, 0, !dbg !7257
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7258

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !7259
  br label %return, !dbg !7259

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7261

for.inc:                                          ; preds = %if.end
  %6 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !7262
  %next = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %6, i32 0, i32 0, !dbg !7263
  %7 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %next, align 8, !dbg !7263
  store %struct.SceneRenderLayer* %7, %struct.SceneRenderLayer** %srl, align 8, !dbg !7264
  br label %for.cond, !dbg !7265, !llvm.loop !7266

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !7268
  br label %return, !dbg !7268

return:                                           ; preds = %for.end, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !7269
  ret i8 %8, !dbg !7269
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_SetReports(%struct.Render* %re, %struct.ReportList* %reports) #0 !dbg !7270 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !7273, metadata !DIExpression()), !dbg !7274
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !7275, metadata !DIExpression()), !dbg !7276
  %0 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !7277
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7278
  %reports1 = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 99, !dbg !7279
  store %struct.ReportList* %0, %struct.ReportList** %reports1, align 8, !dbg !7280
  ret void, !dbg !7281
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_BlenderFrame(%struct.Render* %re, %struct.Main* %bmain, %struct.Scene* %scene, %struct.SceneRenderLayer* %srl, %struct.Object* %camera_override, i32 %lay_override, i32 %frame, i8 zeroext %write_still) #0 !dbg !7282 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %srl.addr = alloca %struct.SceneRenderLayer*, align 8
  %camera_override.addr = alloca %struct.Object*, align 8
  %lay_override.addr = alloca i32, align 4
  %frame.addr = alloca i32, align 4
  %write_still.addr = alloca i8, align 1
  %name = alloca [1024 x i8], align 16
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !7286, metadata !DIExpression()), !dbg !7287
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !7288, metadata !DIExpression()), !dbg !7289
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7290, metadata !DIExpression()), !dbg !7291
  store %struct.SceneRenderLayer* %srl, %struct.SceneRenderLayer** %srl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl.addr, metadata !7292, metadata !DIExpression()), !dbg !7293
  store %struct.Object* %camera_override, %struct.Object** %camera_override.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %camera_override.addr, metadata !7294, metadata !DIExpression()), !dbg !7295
  store i32 %lay_override, i32* %lay_override.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay_override.addr, metadata !7296, metadata !DIExpression()), !dbg !7297
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !7298, metadata !DIExpression()), !dbg !7299
  store i8 %write_still, i8* %write_still.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %write_still.addr, metadata !7300, metadata !DIExpression()), !dbg !7301
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7302
  %main = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 43, !dbg !7303
  %1 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !7303
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7304
  %3 = bitcast %struct.Scene* %2 to %struct.ID*, !dbg !7305
  call void @BLI_callback_exec(%struct.Main* %1, %struct.ID* %3, i32 5), !dbg !7306
  store i8 1, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 13), align 2, !dbg !7307
  %4 = load i32, i32* %frame.addr, align 4, !dbg !7308
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7309
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 22, !dbg !7310
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !7311
  store i32 %4, i32* %cfra, align 8, !dbg !7312
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7313
  %7 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7315
  %r1 = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 22, !dbg !7316
  %8 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7317
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7318
  %10 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl.addr, align 8, !dbg !7319
  %11 = load %struct.Object*, %struct.Object** %camera_override.addr, align 8, !dbg !7320
  %12 = load i32, i32* %lay_override.addr, align 4, !dbg !7321
  %call = call i32 @render_initialize_from_main(%struct.Render* %6, %struct.RenderData* %r1, %struct.Main* %8, %struct.Scene* %9, %struct.SceneRenderLayer* %10, %struct.Object* %11, i32 %12, i32 0, i32 0), !dbg !7322
  %tobool = icmp ne i32 %call, 0, !dbg !7322
  br i1 %tobool, label %if.then, label %if.end26, !dbg !7323

if.then:                                          ; preds = %entry
  %13 = load void ()*, void ()** @MEM_reset_peak_memory, align 8, !dbg !7324
  call void %13(), !dbg !7324
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7326
  %main2 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 43, !dbg !7327
  %15 = load %struct.Main*, %struct.Main** %main2, align 8, !dbg !7327
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7328
  %17 = bitcast %struct.Scene* %16 to %struct.ID*, !dbg !7329
  call void @BLI_callback_exec(%struct.Main* %15, %struct.ID* %17, i32 2), !dbg !7330
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7331
  call void @do_render_all_options(%struct.Render* %18), !dbg !7332
  %19 = load i8, i8* %write_still.addr, align 1, !dbg !7333
  %conv = zext i8 %19 to i32, !dbg !7333
  %tobool3 = icmp ne i32 %conv, 0, !dbg !7333
  br i1 %tobool3, label %land.lhs.true, label %if.end24, !dbg !7335

land.lhs.true:                                    ; preds = %if.then
  %20 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !7336
  %tobool4 = icmp ne i8 %20, 0, !dbg !7337
  br i1 %tobool4, label %if.end24, label %if.then5, !dbg !7338

if.then5:                                         ; preds = %land.lhs.true
  %21 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7339
  %r6 = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 22, !dbg !7342
  %im_format = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r6, i32 0, i32 0, !dbg !7343
  %imtype = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %im_format, i32 0, i32 0, !dbg !7344
  %22 = load i8, i8* %imtype, align 8, !dbg !7344
  %call7 = call zeroext i8 @BKE_imtype_is_movie(i8 zeroext %22), !dbg !7345
  %tobool8 = icmp ne i8 %call7, 0, !dbg !7345
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !7346

if.then9:                                         ; preds = %if.then5
  %call10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.13, i64 0, i64 0)), !dbg !7347
  br label %if.end, !dbg !7349

if.else:                                          ; preds = %if.then5
  call void @llvm.dbg.declare(metadata [1024 x i8]* %name, metadata !7350, metadata !DIExpression()), !dbg !7352
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7353
  %23 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7354
  %r11 = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 22, !dbg !7355
  %pic = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r11, i32 0, i32 84, !dbg !7356
  %arraydecay12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %pic, i64 0, i64 0, !dbg !7354
  %24 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7357
  %name13 = getelementptr inbounds %struct.Main, %struct.Main* %24, i32 0, i32 2, !dbg !7358
  %arraydecay14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name13, i64 0, i64 0, !dbg !7357
  %25 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7359
  %r15 = getelementptr inbounds %struct.Scene, %struct.Scene* %25, i32 0, i32 22, !dbg !7360
  %cfra16 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r15, i32 0, i32 5, !dbg !7361
  %26 = load i32, i32* %cfra16, align 8, !dbg !7361
  %27 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7362
  %r17 = getelementptr inbounds %struct.Scene, %struct.Scene* %27, i32 0, i32 22, !dbg !7363
  %im_format18 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r17, i32 0, i32 0, !dbg !7364
  %28 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7365
  %r19 = getelementptr inbounds %struct.Scene, %struct.Scene* %28, i32 0, i32 22, !dbg !7366
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r19, i32 0, i32 46, !dbg !7367
  %29 = load i32, i32* %scemode, align 4, !dbg !7367
  %and = and i32 %29, 16, !dbg !7368
  %cmp = icmp ne i32 %and, 0, !dbg !7369
  %conv20 = zext i1 %cmp to i32, !dbg !7369
  %conv21 = trunc i32 %conv20 to i8, !dbg !7370
  call void @BKE_makepicstring(i8* %arraydecay, i8* %arraydecay12, i8* %arraydecay14, i32 %26, %struct.ImageFormatData* %im_format18, i8 zeroext %conv21, i8 zeroext 0), !dbg !7371
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7372
  %31 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7373
  %32 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7374
  %arraydecay22 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7375
  %call23 = call i32 @do_write_image_or_movie(%struct.Render* %30, %struct.Main* %31, %struct.Scene* %32, %struct.bMovieHandle* null, i8* %arraydecay22), !dbg !7376
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  br label %if.end24, !dbg !7377

if.end24:                                         ; preds = %if.end, %land.lhs.true, %if.then
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7378
  %main25 = getelementptr inbounds %struct.Render, %struct.Render* %33, i32 0, i32 43, !dbg !7379
  %34 = load %struct.Main*, %struct.Main** %main25, align 8, !dbg !7379
  %35 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7380
  %36 = bitcast %struct.Scene* %35 to %struct.ID*, !dbg !7381
  call void @BLI_callback_exec(%struct.Main* %34, %struct.ID* %36, i32 3), !dbg !7382
  br label %if.end26, !dbg !7383

if.end26:                                         ; preds = %if.end24, %entry
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7384
  %main27 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 43, !dbg !7385
  %38 = load %struct.Main*, %struct.Main** %main27, align 8, !dbg !7385
  %39 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7386
  %40 = bitcast %struct.Scene* %39 to %struct.ID*, !dbg !7387
  %41 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !7388
  %conv28 = zext i8 %41 to i32, !dbg !7389
  %tobool29 = icmp ne i32 %conv28, 0, !dbg !7389
  %42 = zext i1 %tobool29 to i64, !dbg !7389
  %cond = select i1 %tobool29, i32 7, i32 6, !dbg !7389
  call void @BLI_callback_exec(%struct.Main* %38, %struct.ID* %40, i32 %cond), !dbg !7390
  store i8 0, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 13), align 2, !dbg !7391
  ret void, !dbg !7392
}

declare dso_local void @BLI_callback_exec(%struct.Main*, %struct.ID*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @render_initialize_from_main(%struct.Render* %re, %struct.RenderData* %rd, %struct.Main* %bmain, %struct.Scene* %scene, %struct.SceneRenderLayer* %srl, %struct.Object* %camera_override, i32 %lay_override, i32 %anim, i32 %anim_init) #0 !dbg !7393 {
entry:
  %retval = alloca i32, align 4
  %re.addr = alloca %struct.Render*, align 8
  %rd.addr = alloca %struct.RenderData*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %srl.addr = alloca %struct.SceneRenderLayer*, align 8
  %camera_override.addr = alloca %struct.Object*, align 8
  %lay_override.addr = alloca i32, align 4
  %anim.addr = alloca i32, align 4
  %anim_init.addr = alloca i32, align 4
  %winx = alloca i32, align 4
  %winy = alloca i32, align 4
  %disprect = alloca %struct.rcti, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !7396, metadata !DIExpression()), !dbg !7397
  store %struct.RenderData* %rd, %struct.RenderData** %rd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderData** %rd.addr, metadata !7398, metadata !DIExpression()), !dbg !7399
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !7400, metadata !DIExpression()), !dbg !7401
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7402, metadata !DIExpression()), !dbg !7403
  store %struct.SceneRenderLayer* %srl, %struct.SceneRenderLayer** %srl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl.addr, metadata !7404, metadata !DIExpression()), !dbg !7405
  store %struct.Object* %camera_override, %struct.Object** %camera_override.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %camera_override.addr, metadata !7406, metadata !DIExpression()), !dbg !7407
  store i32 %lay_override, i32* %lay_override.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay_override.addr, metadata !7408, metadata !DIExpression()), !dbg !7409
  store i32 %anim, i32* %anim.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %anim.addr, metadata !7410, metadata !DIExpression()), !dbg !7411
  store i32 %anim_init, i32* %anim_init.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %anim_init.addr, metadata !7412, metadata !DIExpression()), !dbg !7413
  call void @llvm.dbg.declare(metadata i32* %winx, metadata !7414, metadata !DIExpression()), !dbg !7415
  call void @llvm.dbg.declare(metadata i32* %winy, metadata !7416, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.declare(metadata %struct.rcti* %disprect, metadata !7418, metadata !DIExpression()), !dbg !7419
  %0 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !7420
  %size = getelementptr inbounds %struct.RenderData, %struct.RenderData* %0, i32 0, i32 30, !dbg !7421
  %1 = load i16, i16* %size, align 2, !dbg !7421
  %conv = sext i16 %1 to i32, !dbg !7420
  %2 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !7422
  %xsch = getelementptr inbounds %struct.RenderData, %struct.RenderData* %2, i32 0, i32 33, !dbg !7423
  %3 = load i32, i32* %xsch, align 4, !dbg !7423
  %mul = mul nsw i32 %conv, %3, !dbg !7424
  %div = sdiv i32 %mul, 100, !dbg !7425
  store i32 %div, i32* %winx, align 4, !dbg !7426
  %4 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !7427
  %size1 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %4, i32 0, i32 30, !dbg !7428
  %5 = load i16, i16* %size1, align 2, !dbg !7428
  %conv2 = sext i16 %5 to i32, !dbg !7427
  %6 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !7429
  %ysch = getelementptr inbounds %struct.RenderData, %struct.RenderData* %6, i32 0, i32 34, !dbg !7430
  %7 = load i32, i32* %ysch, align 8, !dbg !7430
  %mul3 = mul nsw i32 %conv2, %7, !dbg !7431
  %div4 = sdiv i32 %mul3, 100, !dbg !7432
  store i32 %div4, i32* %winy, align 4, !dbg !7433
  %8 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7434
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 22, !dbg !7436
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !7437
  %9 = load i32, i32* %mode, align 8, !dbg !7437
  %and = and i32 %9, 512, !dbg !7438
  %tobool = icmp ne i32 %and, 0, !dbg !7438
  br i1 %tobool, label %if.then, label %if.else, !dbg !7439

if.then:                                          ; preds = %entry
  %10 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !7440
  %border = getelementptr inbounds %struct.RenderData, %struct.RenderData* %10, i32 0, i32 58, !dbg !7442
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %border, i32 0, i32 0, !dbg !7443
  %11 = load float, float* %xmin, align 8, !dbg !7443
  %12 = load i32, i32* %winx, align 4, !dbg !7444
  %conv5 = sitofp i32 %12 to float, !dbg !7444
  %mul6 = fmul float %11, %conv5, !dbg !7445
  %conv7 = fptosi float %mul6 to i32, !dbg !7440
  %xmin8 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !7446
  store i32 %conv7, i32* %xmin8, align 4, !dbg !7447
  %13 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !7448
  %border9 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %13, i32 0, i32 58, !dbg !7449
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %border9, i32 0, i32 1, !dbg !7450
  %14 = load float, float* %xmax, align 4, !dbg !7450
  %15 = load i32, i32* %winx, align 4, !dbg !7451
  %conv10 = sitofp i32 %15 to float, !dbg !7451
  %mul11 = fmul float %14, %conv10, !dbg !7452
  %conv12 = fptosi float %mul11 to i32, !dbg !7448
  %xmax13 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 1, !dbg !7453
  store i32 %conv12, i32* %xmax13, align 4, !dbg !7454
  %16 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !7455
  %border14 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %16, i32 0, i32 58, !dbg !7456
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %border14, i32 0, i32 2, !dbg !7457
  %17 = load float, float* %ymin, align 8, !dbg !7457
  %18 = load i32, i32* %winy, align 4, !dbg !7458
  %conv15 = sitofp i32 %18 to float, !dbg !7458
  %mul16 = fmul float %17, %conv15, !dbg !7459
  %conv17 = fptosi float %mul16 to i32, !dbg !7455
  %ymin18 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !7460
  store i32 %conv17, i32* %ymin18, align 4, !dbg !7461
  %19 = load %struct.RenderData*, %struct.RenderData** %rd.addr, align 8, !dbg !7462
  %border19 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %19, i32 0, i32 58, !dbg !7463
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %border19, i32 0, i32 3, !dbg !7464
  %20 = load float, float* %ymax, align 4, !dbg !7464
  %21 = load i32, i32* %winy, align 4, !dbg !7465
  %conv20 = sitofp i32 %21 to float, !dbg !7465
  %mul21 = fmul float %20, %conv20, !dbg !7466
  %conv22 = fptosi float %mul21 to i32, !dbg !7462
  %ymax23 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 3, !dbg !7467
  store i32 %conv22, i32* %ymax23, align 4, !dbg !7468
  br label %if.end, !dbg !7469

if.else:                                          ; preds = %entry
  %ymin24 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !7470
  store i32 0, i32* %ymin24, align 4, !dbg !7472
  %xmin25 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !7473
  store i32 0, i32* %xmin25, align 4, !dbg !7474
  %22 = load i32, i32* %winx, align 4, !dbg !7475
  %xmax26 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 1, !dbg !7476
  store i32 %22, i32* %xmax26, align 4, !dbg !7477
  %23 = load i32, i32* %winy, align 4, !dbg !7478
  %ymax27 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 3, !dbg !7479
  store i32 %23, i32* %ymax27, align 4, !dbg !7480
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7481
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7482
  %main = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 43, !dbg !7483
  store %struct.Main* %24, %struct.Main** %main, align 8, !dbg !7484
  %26 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7485
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7486
  %scene28 = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 44, !dbg !7487
  store %struct.Scene* %26, %struct.Scene** %scene28, align 8, !dbg !7488
  %28 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7489
  %call = call zeroext i8 @BKE_scene_check_color_management_enabled(%struct.Scene* %28), !dbg !7490
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7491
  %scene_color_manage = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 8, !dbg !7492
  store i8 %call, i8* %scene_color_manage, align 8, !dbg !7493
  %30 = load %struct.Object*, %struct.Object** %camera_override.addr, align 8, !dbg !7494
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7495
  %camera_override29 = getelementptr inbounds %struct.Render, %struct.Render* %31, i32 0, i32 47, !dbg !7496
  store %struct.Object* %30, %struct.Object** %camera_override29, align 8, !dbg !7497
  %32 = load i32, i32* %lay_override.addr, align 4, !dbg !7498
  %tobool30 = icmp ne i32 %32, 0, !dbg !7498
  br i1 %tobool30, label %cond.true, label %cond.false, !dbg !7498

cond.true:                                        ; preds = %if.end
  %33 = load i32, i32* %lay_override.addr, align 4, !dbg !7499
  br label %cond.end, !dbg !7498

cond.false:                                       ; preds = %if.end
  %34 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7500
  %lay = getelementptr inbounds %struct.Scene, %struct.Scene* %34, i32 0, i32 12, !dbg !7501
  %35 = load i32, i32* %lay, align 8, !dbg !7501
  br label %cond.end, !dbg !7498

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %33, %cond.true ], [ %35, %cond.false ], !dbg !7498
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7502
  %lay31 = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 48, !dbg !7503
  store i32 %cond, i32* %lay31, align 8, !dbg !7504
  %37 = load i32, i32* %lay_override.addr, align 4, !dbg !7505
  %38 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7506
  %layer_override = getelementptr inbounds %struct.Render, %struct.Render* %38, i32 0, i32 49, !dbg !7507
  store i32 %37, i32* %layer_override, align 4, !dbg !7508
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7509
  %lay32 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 48, !dbg !7510
  %40 = load i32, i32* %lay32, align 8, !dbg !7510
  %and33 = and i32 %40, -16777216, !dbg !7511
  %cmp = icmp ne i32 %and33, 0, !dbg !7512
  %conv34 = zext i1 %cmp to i32, !dbg !7512
  %conv35 = trunc i32 %conv34 to i8, !dbg !7513
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7514
  %i = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 98, !dbg !7515
  %localview = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 13, !dbg !7516
  store i8 %conv35, i8* %localview, align 8, !dbg !7517
  %42 = load i32, i32* %anim.addr, align 4, !dbg !7518
  %tobool36 = icmp ne i32 %42, 0, !dbg !7518
  br i1 %tobool36, label %if.then37, label %if.end40, !dbg !7520

if.then37:                                        ; preds = %cond.end
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7521
  %44 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7523
  %r38 = getelementptr inbounds %struct.Scene, %struct.Scene* %44, i32 0, i32 22, !dbg !7524
  call void @render_update_anim_renderdata(%struct.Render* %43, %struct.RenderData* %r38), !dbg !7525
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7526
  %disprect39 = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 15, !dbg !7527
  %46 = bitcast %struct.rcti* %disprect39 to i8*, !dbg !7528
  %47 = bitcast %struct.rcti* %disprect to i8*, !dbg !7528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 16, i1 false), !dbg !7528
  store i32 1, i32* %retval, align 4, !dbg !7529
  br label %return, !dbg !7529

if.end40:                                         ; preds = %cond.end
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7530
  call void @tag_scenes_for_render(%struct.Render* %48), !dbg !7531
  %49 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl.addr, align 8, !dbg !7532
  %tobool41 = icmp ne %struct.SceneRenderLayer* %49, null, !dbg !7532
  br i1 %tobool41, label %if.then45, label %lor.lhs.false, !dbg !7534

lor.lhs.false:                                    ; preds = %if.end40
  %50 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7535
  %r42 = getelementptr inbounds %struct.Scene, %struct.Scene* %50, i32 0, i32 22, !dbg !7536
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r42, i32 0, i32 46, !dbg !7537
  %51 = load i32, i32* %scemode, align 4, !dbg !7537
  %and43 = and i32 %51, 512, !dbg !7538
  %tobool44 = icmp ne i32 %and43, 0, !dbg !7538
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !7539

if.then45:                                        ; preds = %lor.lhs.false, %if.end40
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7540
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 12, !dbg !7542
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 2), !dbg !7543
  %53 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7544
  call void @render_result_single_layer_begin(%struct.Render* %53), !dbg !7545
  %54 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7546
  %resultmutex46 = getelementptr inbounds %struct.Render, %struct.Render* %54, i32 0, i32 12, !dbg !7547
  call void @BLI_rw_mutex_unlock(i32* %resultmutex46), !dbg !7548
  br label %if.end47, !dbg !7549

if.end47:                                         ; preds = %if.then45, %lor.lhs.false
  %55 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7550
  %56 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7551
  %r48 = getelementptr inbounds %struct.Scene, %struct.Scene* %56, i32 0, i32 22, !dbg !7552
  %57 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl.addr, align 8, !dbg !7553
  %58 = load i32, i32* %winx, align 4, !dbg !7554
  %59 = load i32, i32* %winy, align 4, !dbg !7555
  call void @RE_InitState(%struct.Render* %55, %struct.Render* null, %struct.RenderData* %r48, %struct.SceneRenderLayer* %57, i32 %58, i32 %59, %struct.rcti* %disprect), !dbg !7556
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7557
  %ok = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 6, !dbg !7559
  %61 = load i16, i16* %ok, align 4, !dbg !7559
  %tobool49 = icmp ne i16 %61, 0, !dbg !7557
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !7560

if.then50:                                        ; preds = %if.end47
  store i32 0, i32* %retval, align 4, !dbg !7561
  br label %return, !dbg !7561

if.end51:                                         ; preds = %if.end47
  %62 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7562
  %scene52 = getelementptr inbounds %struct.Render, %struct.Render* %62, i32 0, i32 44, !dbg !7563
  %63 = load %struct.Scene*, %struct.Scene** %scene52, align 8, !dbg !7563
  call void @ntreeCompositTagRender(%struct.Scene* %63), !dbg !7564
  %64 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7565
  call void @validate_render_settings(%struct.Render* %64), !dbg !7566
  %65 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7567
  %display_init = getelementptr inbounds %struct.Render, %struct.Render* %65, i32 0, i32 82, !dbg !7568
  %66 = load void (i8*, %struct.RenderResult*)*, void (i8*, %struct.RenderResult*)** %display_init, align 8, !dbg !7568
  %67 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7569
  %dih = getelementptr inbounds %struct.Render, %struct.Render* %67, i32 0, i32 83, !dbg !7570
  %68 = load i8*, i8** %dih, align 8, !dbg !7570
  %69 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7571
  %result = getelementptr inbounds %struct.Render, %struct.Render* %69, i32 0, i32 9, !dbg !7572
  %70 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !7572
  call void %66(i8* %68, %struct.RenderResult* %70), !dbg !7567
  %71 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7573
  %display_clear = getelementptr inbounds %struct.Render, %struct.Render* %71, i32 0, i32 84, !dbg !7574
  %72 = load void (i8*, %struct.RenderResult*)*, void (i8*, %struct.RenderResult*)** %display_clear, align 8, !dbg !7574
  %73 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7575
  %dch = getelementptr inbounds %struct.Render, %struct.Render* %73, i32 0, i32 85, !dbg !7576
  %74 = load i8*, i8** %dch, align 8, !dbg !7576
  %75 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7577
  %result53 = getelementptr inbounds %struct.Render, %struct.Render* %75, i32 0, i32 9, !dbg !7578
  %76 = load %struct.RenderResult*, %struct.RenderResult** %result53, align 8, !dbg !7578
  call void %72(i8* %74, %struct.RenderResult* %76), !dbg !7573
  store i32 1, i32* %retval, align 4, !dbg !7579
  br label %return, !dbg !7579

return:                                           ; preds = %if.end51, %if.then50, %if.then37
  %77 = load i32, i32* %retval, align 4, !dbg !7580
  ret i32 %77, !dbg !7580
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_render_all_options(%struct.Render* %re) #0 !dbg !7581 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !7582, metadata !DIExpression()), !dbg !7583
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7584
  %current_scene_update = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 88, !dbg !7585
  %1 = load void (i8*, %struct.Scene*)*, void (i8*, %struct.Scene*)** %current_scene_update, align 8, !dbg !7585
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7586
  %suh = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 89, !dbg !7587
  %3 = load i8*, i8** %suh, align 8, !dbg !7587
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7588
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 44, !dbg !7589
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !7589
  call void %1(i8* %3, %struct.Scene* %5), !dbg !7584
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7590
  %scene1 = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 44, !dbg !7591
  %7 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !7591
  %call = call i32 @BKE_scene_camera_switch_update(%struct.Scene* %7), !dbg !7592
  %call2 = call double @PIL_check_seconds_timer(), !dbg !7593
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7594
  %i = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 98, !dbg !7595
  %starttime = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 14, !dbg !7596
  store double %call2, double* %starttime, align 8, !dbg !7597
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7598
  %r = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 45, !dbg !7599
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !7600
  %10 = load i32, i32* %cfra, align 8, !dbg !7600
  call void @BKE_image_all_free_anim_ibufs(i32 %10), !dbg !7601
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7602
  %call3 = call i32 @RE_engine_render(%struct.Render* %11, i32 1), !dbg !7604
  %tobool = icmp ne i32 %call3, 0, !dbg !7604
  br i1 %tobool, label %if.then, label %if.else, !dbg !7605

if.then:                                          ; preds = %entry
  br label %if.end18, !dbg !7606

if.else:                                          ; preds = %entry
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7608
  %scene4 = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 44, !dbg !7610
  %13 = load %struct.Scene*, %struct.Scene** %scene4, align 8, !dbg !7610
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7611
  %r5 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 45, !dbg !7612
  %call6 = call i32 @RE_seq_render_active(%struct.Scene* %13, %struct.RenderData* %r5), !dbg !7613
  %tobool7 = icmp ne i32 %call6, 0, !dbg !7613
  br i1 %tobool7, label %if.then8, label %if.else13, !dbg !7614

if.then8:                                         ; preds = %if.else
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7615
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 96, !dbg !7618
  %16 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !7618
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7619
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 97, !dbg !7620
  %18 = load i8*, i8** %tbh, align 8, !dbg !7620
  %call9 = call i32 %16(i8* %18), !dbg !7615
  %tobool10 = icmp ne i32 %call9, 0, !dbg !7615
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !7621

if.then11:                                        ; preds = %if.then8
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7622
  call void @do_render_seq(%struct.Render* %19), !dbg !7623
  br label %if.end, !dbg !7623

if.end:                                           ; preds = %if.then11, %if.then8
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7624
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 90, !dbg !7625
  %21 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !7625
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7626
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 91, !dbg !7627
  %23 = load i8*, i8** %sdh, align 8, !dbg !7627
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7628
  %i12 = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 98, !dbg !7629
  call void %21(i8* %23, %struct.RenderStats* %i12), !dbg !7624
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7630
  %display_update = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 86, !dbg !7631
  %26 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !7631
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7632
  %duh = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 87, !dbg !7633
  %28 = load i8*, i8** %duh, align 8, !dbg !7633
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7634
  %result = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 9, !dbg !7635
  %30 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !7635
  call void %26(i8* %28, %struct.RenderResult* %30, %struct.rcti* null), !dbg !7630
  br label %if.end17, !dbg !7636

if.else13:                                        ; preds = %if.else
  %call14 = call %struct.ImagePool* @BKE_image_pool_new(), !dbg !7637
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7639
  %pool = getelementptr inbounds %struct.Render, %struct.Render* %31, i32 0, i32 100, !dbg !7640
  store %struct.ImagePool* %call14, %struct.ImagePool** %pool, align 8, !dbg !7641
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7642
  call void @do_render_composite_fields_blur_3d(%struct.Render* %32), !dbg !7643
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7644
  %pool15 = getelementptr inbounds %struct.Render, %struct.Render* %33, i32 0, i32 100, !dbg !7645
  %34 = load %struct.ImagePool*, %struct.ImagePool** %pool15, align 8, !dbg !7645
  call void @BKE_image_pool_free(%struct.ImagePool* %34), !dbg !7646
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7647
  %pool16 = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 100, !dbg !7648
  store %struct.ImagePool* null, %struct.ImagePool** %pool16, align 8, !dbg !7649
  br label %if.end17

if.end17:                                         ; preds = %if.else13, %if.end
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  %call19 = call double @PIL_check_seconds_timer(), !dbg !7650
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7651
  %i20 = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 98, !dbg !7652
  %starttime21 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i20, i32 0, i32 14, !dbg !7653
  %37 = load double, double* %starttime21, align 8, !dbg !7653
  %sub = fsub double %call19, %37, !dbg !7654
  %38 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7655
  %i22 = getelementptr inbounds %struct.Render, %struct.Render* %38, i32 0, i32 98, !dbg !7656
  %lastframetime = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i22, i32 0, i32 15, !dbg !7657
  store double %sub, double* %lastframetime, align 8, !dbg !7658
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7659
  %stats_draw23 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 90, !dbg !7660
  %40 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw23, align 8, !dbg !7660
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7661
  %sdh24 = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 91, !dbg !7662
  %42 = load i8*, i8** %sdh24, align 8, !dbg !7662
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7663
  %i25 = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 98, !dbg !7664
  call void %40(i8* %42, %struct.RenderStats* %i25), !dbg !7659
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7665
  %r26 = getelementptr inbounds %struct.Render, %struct.Render* %44, i32 0, i32 45, !dbg !7667
  %stamp = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r26, i32 0, i32 85, !dbg !7668
  %45 = load i32, i32* %stamp, align 8, !dbg !7668
  %and = and i32 %45, 4031, !dbg !7669
  %tobool27 = icmp ne i32 %and, 0, !dbg !7669
  br i1 %tobool27, label %land.lhs.true, label %if.end36, !dbg !7670

land.lhs.true:                                    ; preds = %if.end18
  %46 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7671
  %r28 = getelementptr inbounds %struct.Render, %struct.Render* %46, i32 0, i32 45, !dbg !7672
  %stamp29 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r28, i32 0, i32 85, !dbg !7673
  %47 = load i32, i32* %stamp29, align 8, !dbg !7673
  %and30 = and i32 %47, 64, !dbg !7674
  %tobool31 = icmp ne i32 %and30, 0, !dbg !7674
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !7675

if.then32:                                        ; preds = %land.lhs.true
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7676
  call void @renderresult_stampinfo(%struct.Render* %48), !dbg !7678
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7679
  %display_update33 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 86, !dbg !7680
  %50 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update33, align 8, !dbg !7680
  %51 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7681
  %duh34 = getelementptr inbounds %struct.Render, %struct.Render* %51, i32 0, i32 87, !dbg !7682
  %52 = load i8*, i8** %duh34, align 8, !dbg !7682
  %53 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7683
  %result35 = getelementptr inbounds %struct.Render, %struct.Render* %53, i32 0, i32 9, !dbg !7684
  %54 = load %struct.RenderResult*, %struct.RenderResult** %result35, align 8, !dbg !7684
  call void %50(i8* %52, %struct.RenderResult* %54, %struct.rcti* null), !dbg !7679
  br label %if.end36, !dbg !7685

if.end36:                                         ; preds = %if.then32, %land.lhs.true, %if.end18
  ret void, !dbg !7686
}

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local void @BKE_makepicstring(i8*, i8*, i8*, i32, %struct.ImageFormatData*, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @do_write_image_or_movie(%struct.Render* %re, %struct.Main* %bmain, %struct.Scene* %scene, %struct.bMovieHandle* %mh, i8* %name_override) #0 !dbg !7687 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %mh.addr = alloca %struct.bMovieHandle*, align 8
  %name_override.addr = alloca i8*, align 8
  %name = alloca [1024 x i8], align 16
  %rres = alloca %struct.RenderResult, align 8
  %camera = alloca %struct.Object*, align 8
  %render_time = alloca double, align 8
  %ok = alloca i32, align 4
  %do_free = alloca i8, align 1
  %ibuf = alloca %struct.ImBuf*, align 8
  %ibuf66 = alloca %struct.ImBuf*, align 8
  %imf = alloca %struct.ImageFormatData, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !7714, metadata !DIExpression()), !dbg !7715
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !7716, metadata !DIExpression()), !dbg !7717
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7718, metadata !DIExpression()), !dbg !7719
  store %struct.bMovieHandle* %mh, %struct.bMovieHandle** %mh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bMovieHandle** %mh.addr, metadata !7720, metadata !DIExpression()), !dbg !7721
  store i8* %name_override, i8** %name_override.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name_override.addr, metadata !7722, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.declare(metadata [1024 x i8]* %name, metadata !7724, metadata !DIExpression()), !dbg !7725
  call void @llvm.dbg.declare(metadata %struct.RenderResult* %rres, metadata !7726, metadata !DIExpression()), !dbg !7727
  call void @llvm.dbg.declare(metadata %struct.Object** %camera, metadata !7728, metadata !DIExpression()), !dbg !7729
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7730
  %call = call %struct.Object* @RE_GetCamera(%struct.Render* %0), !dbg !7731
  store %struct.Object* %call, %struct.Object** %camera, align 8, !dbg !7729
  call void @llvm.dbg.declare(metadata double* %render_time, metadata !7732, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !7734, metadata !DIExpression()), !dbg !7735
  store i32 1, i32* %ok, align 4, !dbg !7735
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7736
  call void @RE_AcquireResultImage(%struct.Render* %1, %struct.RenderResult* %rres), !dbg !7737
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7738
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 22, !dbg !7740
  %im_format = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 0, !dbg !7741
  %imtype = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %im_format, i32 0, i32 0, !dbg !7742
  %3 = load i8, i8* %imtype, align 8, !dbg !7742
  %call1 = call zeroext i8 @BKE_imtype_is_movie(i8 zeroext %3), !dbg !7743
  %tobool = icmp ne i8 %call1, 0, !dbg !7743
  br i1 %tobool, label %if.then, label %if.else, !dbg !7744

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %do_free, metadata !7745, metadata !DIExpression()), !dbg !7747
  store i8 0, i8* %do_free, align 1, !dbg !7747
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !7748, metadata !DIExpression()), !dbg !7751
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7752
  %r2 = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 22, !dbg !7753
  %call3 = call %struct.ImBuf* @render_result_rect_to_ibuf(%struct.RenderResult* %rres, %struct.RenderData* %r2), !dbg !7754
  store %struct.ImBuf* %call3, %struct.ImBuf** %ibuf, align 8, !dbg !7751
  %5 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7755
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %5, i32 0, i32 8, !dbg !7757
  %6 = load i32*, i32** %rect, align 8, !dbg !7757
  %cmp = icmp eq i32* %6, null, !dbg !7758
  br i1 %cmp, label %if.then4, label %if.end, !dbg !7759

if.then4:                                         ; preds = %if.then
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mapallocN, align 8, !dbg !7760
  %rectx = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 2, !dbg !7762
  %8 = load i32, i32* %rectx, align 8, !dbg !7762
  %conv = sext i32 %8 to i64, !dbg !7763
  %mul = mul i64 4, %conv, !dbg !7764
  %recty = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 3, !dbg !7765
  %9 = load i32, i32* %recty, align 4, !dbg !7765
  %conv5 = sext i32 %9 to i64, !dbg !7766
  %mul6 = mul i64 %mul, %conv5, !dbg !7767
  %call7 = call i8* %7(i64 %mul6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i64 0, i64 0)), !dbg !7760
  %10 = bitcast i8* %call7 to i32*, !dbg !7760
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7768
  %rect8 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %11, i32 0, i32 8, !dbg !7769
  store i32* %10, i32** %rect8, align 8, !dbg !7770
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7771
  %mall = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 7, !dbg !7772
  %13 = load i32, i32* %mall, align 4, !dbg !7773
  %or = or i32 %13, 1, !dbg !7773
  store i32 %or, i32* %mall, align 4, !dbg !7773
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7774
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7775
  %rect9 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 8, !dbg !7776
  %16 = load i32*, i32** %rect9, align 8, !dbg !7776
  call void @RE_AcquiredResultGet32(%struct.Render* %14, %struct.RenderResult* %rres, i32* %16), !dbg !7777
  store i8 1, i8* %do_free, align 1, !dbg !7778
  br label %if.end, !dbg !7779

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7780
  %18 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7781
  %view_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %18, i32 0, i32 44, !dbg !7782
  %19 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7783
  %display_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 45, !dbg !7784
  %20 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7785
  %r10 = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 22, !dbg !7786
  %im_format11 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r10, i32 0, i32 0, !dbg !7787
  %call12 = call %struct.ImBuf* @IMB_colormanagement_imbuf_for_write(%struct.ImBuf* %17, i8 zeroext 1, i8 zeroext 0, %struct.ColorManagedViewSettings* %view_settings, %struct.ColorManagedDisplaySettings* %display_settings, %struct.ImageFormatData* %im_format11), !dbg !7788
  %21 = load %struct.bMovieHandle*, %struct.bMovieHandle** %mh.addr, align 8, !dbg !7789
  %append_movie = getelementptr inbounds %struct.bMovieHandle, %struct.bMovieHandle* %21, i32 0, i32 1, !dbg !7790
  %22 = load i32 (%struct.RenderData*, i32, i32, i32*, i32, i32, %struct.ReportList*)*, i32 (%struct.RenderData*, i32, i32, i32*, i32, i32, %struct.ReportList*)** %append_movie, align 8, !dbg !7790
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7791
  %r13 = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 45, !dbg !7792
  %24 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7793
  %r14 = getelementptr inbounds %struct.Scene, %struct.Scene* %24, i32 0, i32 22, !dbg !7794
  %sfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r14, i32 0, i32 6, !dbg !7795
  %25 = load i32, i32* %sfra, align 4, !dbg !7795
  %26 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7796
  %r15 = getelementptr inbounds %struct.Scene, %struct.Scene* %26, i32 0, i32 22, !dbg !7797
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r15, i32 0, i32 5, !dbg !7798
  %27 = load i32, i32* %cfra, align 8, !dbg !7798
  %28 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7799
  %rect16 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %28, i32 0, i32 8, !dbg !7800
  %29 = load i32*, i32** %rect16, align 8, !dbg !7800
  %30 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7801
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %30, i32 0, i32 2, !dbg !7802
  %31 = load i32, i32* %x, align 8, !dbg !7802
  %32 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7803
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %32, i32 0, i32 3, !dbg !7804
  %33 = load i32, i32* %y, align 4, !dbg !7804
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7805
  %reports = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 99, !dbg !7806
  %35 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !7806
  %call17 = call i32 %22(%struct.RenderData* %r13, i32 %25, i32 %27, i32* %29, i32 %31, i32 %33, %struct.ReportList* %35), !dbg !7789
  store i32 %call17, i32* %ok, align 4, !dbg !7807
  %36 = load i8, i8* %do_free, align 1, !dbg !7808
  %tobool18 = icmp ne i8 %36, 0, !dbg !7808
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !7810

if.then19:                                        ; preds = %if.end
  %37 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7811
  %38 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7813
  %rect20 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %38, i32 0, i32 8, !dbg !7814
  %39 = load i32*, i32** %rect20, align 8, !dbg !7814
  %40 = bitcast i32* %39 to i8*, !dbg !7813
  call void %37(i8* %40), !dbg !7811
  %41 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7815
  %rect21 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %41, i32 0, i32 8, !dbg !7816
  store i32* null, i32** %rect21, align 8, !dbg !7817
  %42 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7818
  %mall22 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %42, i32 0, i32 7, !dbg !7819
  %43 = load i32, i32* %mall22, align 4, !dbg !7820
  %and = and i32 %43, -2, !dbg !7820
  store i32 %and, i32* %mall22, align 4, !dbg !7820
  br label %if.end23, !dbg !7821

if.end23:                                         ; preds = %if.then19, %if.end
  %44 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !7822
  call void @IMB_freeImBuf(%struct.ImBuf* %44), !dbg !7823
  %45 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7824
  %r24 = getelementptr inbounds %struct.Scene, %struct.Scene* %45, i32 0, i32 22, !dbg !7825
  %cfra25 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r24, i32 0, i32 5, !dbg !7826
  %46 = load i32, i32* %cfra25, align 8, !dbg !7826
  %call26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i64 0, i64 0), i32 %46), !dbg !7827
  br label %if.end122, !dbg !7828

if.else:                                          ; preds = %entry
  %47 = load i8*, i8** %name_override.addr, align 8, !dbg !7829
  %tobool27 = icmp ne i8* %47, null, !dbg !7829
  br i1 %tobool27, label %if.then28, label %if.else30, !dbg !7832

if.then28:                                        ; preds = %if.else
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7833
  %48 = load i8*, i8** %name_override.addr, align 8, !dbg !7834
  %call29 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %48, i64 1024), !dbg !7835
  br label %if.end45, !dbg !7835

if.else30:                                        ; preds = %if.else
  %arraydecay31 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7836
  %49 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7837
  %r32 = getelementptr inbounds %struct.Scene, %struct.Scene* %49, i32 0, i32 22, !dbg !7838
  %pic = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r32, i32 0, i32 84, !dbg !7839
  %arraydecay33 = getelementptr inbounds [1024 x i8], [1024 x i8]* %pic, i64 0, i64 0, !dbg !7837
  %50 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7840
  %name34 = getelementptr inbounds %struct.Main, %struct.Main* %50, i32 0, i32 2, !dbg !7841
  %arraydecay35 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name34, i64 0, i64 0, !dbg !7840
  %51 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7842
  %r36 = getelementptr inbounds %struct.Scene, %struct.Scene* %51, i32 0, i32 22, !dbg !7843
  %cfra37 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r36, i32 0, i32 5, !dbg !7844
  %52 = load i32, i32* %cfra37, align 8, !dbg !7844
  %53 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7845
  %r38 = getelementptr inbounds %struct.Scene, %struct.Scene* %53, i32 0, i32 22, !dbg !7846
  %im_format39 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r38, i32 0, i32 0, !dbg !7847
  %54 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7848
  %r40 = getelementptr inbounds %struct.Scene, %struct.Scene* %54, i32 0, i32 22, !dbg !7849
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r40, i32 0, i32 46, !dbg !7850
  %55 = load i32, i32* %scemode, align 4, !dbg !7850
  %and41 = and i32 %55, 16, !dbg !7851
  %cmp42 = icmp ne i32 %and41, 0, !dbg !7852
  %conv43 = zext i1 %cmp42 to i32, !dbg !7852
  %conv44 = trunc i32 %conv43 to i8, !dbg !7853
  call void @BKE_makepicstring(i8* %arraydecay31, i8* %arraydecay33, i8* %arraydecay35, i32 %52, %struct.ImageFormatData* %im_format39, i8 zeroext %conv44, i8 zeroext 1), !dbg !7854
  br label %if.end45

if.end45:                                         ; preds = %if.else30, %if.then28
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7855
  %r46 = getelementptr inbounds %struct.Render, %struct.Render* %56, i32 0, i32 45, !dbg !7857
  %im_format47 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r46, i32 0, i32 0, !dbg !7858
  %imtype48 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %im_format47, i32 0, i32 0, !dbg !7859
  %57 = load i8, i8* %imtype48, align 8, !dbg !7859
  %conv49 = zext i8 %57 to i32, !dbg !7855
  %cmp50 = icmp eq i32 %conv49, 28, !dbg !7860
  br i1 %cmp50, label %if.then52, label %if.else65, !dbg !7861

if.then52:                                        ; preds = %if.end45
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7862
  %result = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 9, !dbg !7865
  %59 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !7865
  %tobool53 = icmp ne %struct.RenderResult* %59, null, !dbg !7862
  br i1 %tobool53, label %if.then54, label %if.end64, !dbg !7866

if.then54:                                        ; preds = %if.then52
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7867
  %reports55 = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 99, !dbg !7869
  %61 = load %struct.ReportList*, %struct.ReportList** %reports55, align 8, !dbg !7869
  %62 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7870
  %result56 = getelementptr inbounds %struct.Render, %struct.Render* %62, i32 0, i32 9, !dbg !7871
  %63 = load %struct.RenderResult*, %struct.RenderResult** %result56, align 8, !dbg !7871
  %arraydecay57 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7872
  %64 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7873
  %r58 = getelementptr inbounds %struct.Scene, %struct.Scene* %64, i32 0, i32 22, !dbg !7874
  %im_format59 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r58, i32 0, i32 0, !dbg !7875
  %exr_codec = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %im_format59, i32 0, i32 6, !dbg !7876
  %65 = load i8, i8* %exr_codec, align 2, !dbg !7876
  %conv60 = zext i8 %65 to i32, !dbg !7873
  %call61 = call zeroext i8 @RE_WriteRenderResult(%struct.ReportList* %61, %struct.RenderResult* %63, i8* %arraydecay57, i32 %conv60), !dbg !7877
  %arraydecay62 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7878
  %call63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0), i8* %arraydecay62), !dbg !7879
  br label %if.end64, !dbg !7880

if.end64:                                         ; preds = %if.then54, %if.then52
  br label %if.end121, !dbg !7881

if.else65:                                        ; preds = %if.end45
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf66, metadata !7882, metadata !DIExpression()), !dbg !7884
  %66 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7885
  %r67 = getelementptr inbounds %struct.Scene, %struct.Scene* %66, i32 0, i32 22, !dbg !7886
  %call68 = call %struct.ImBuf* @render_result_rect_to_ibuf(%struct.RenderResult* %rres, %struct.RenderData* %r67), !dbg !7887
  store %struct.ImBuf* %call68, %struct.ImBuf** %ibuf66, align 8, !dbg !7884
  %67 = load %struct.ImBuf*, %struct.ImBuf** %ibuf66, align 8, !dbg !7888
  %68 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7889
  %view_settings69 = getelementptr inbounds %struct.Scene, %struct.Scene* %68, i32 0, i32 44, !dbg !7890
  %69 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7891
  %display_settings70 = getelementptr inbounds %struct.Scene, %struct.Scene* %69, i32 0, i32 45, !dbg !7892
  %70 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7893
  %r71 = getelementptr inbounds %struct.Scene, %struct.Scene* %70, i32 0, i32 22, !dbg !7894
  %im_format72 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r71, i32 0, i32 0, !dbg !7895
  %call73 = call %struct.ImBuf* @IMB_colormanagement_imbuf_for_write(%struct.ImBuf* %67, i8 zeroext 1, i8 zeroext 0, %struct.ColorManagedViewSettings* %view_settings69, %struct.ColorManagedDisplaySettings* %display_settings70, %struct.ImageFormatData* %im_format72), !dbg !7896
  %71 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7897
  %72 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !7898
  %73 = load %struct.ImBuf*, %struct.ImBuf** %ibuf66, align 8, !dbg !7899
  %arraydecay74 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7900
  %74 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7901
  %r75 = getelementptr inbounds %struct.Scene, %struct.Scene* %74, i32 0, i32 22, !dbg !7902
  %im_format76 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r75, i32 0, i32 0, !dbg !7903
  %call77 = call i32 @BKE_imbuf_write_stamp(%struct.Scene* %71, %struct.Object* %72, %struct.ImBuf* %73, i8* %arraydecay74, %struct.ImageFormatData* %im_format76), !dbg !7904
  store i32 %call77, i32* %ok, align 4, !dbg !7905
  %75 = load i32, i32* %ok, align 4, !dbg !7906
  %cmp78 = icmp eq i32 %75, 0, !dbg !7908
  br i1 %cmp78, label %if.then80, label %if.else83, !dbg !7909

if.then80:                                        ; preds = %if.else65
  %arraydecay81 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7910
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.39, i64 0, i64 0), i8* %arraydecay81), !dbg !7912
  br label %if.end86, !dbg !7913

if.else83:                                        ; preds = %if.else65
  %arraydecay84 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7914
  %call85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0), i8* %arraydecay84), !dbg !7915
  br label %if.end86

if.end86:                                         ; preds = %if.else83, %if.then80
  %76 = load i32, i32* %ok, align 4, !dbg !7916
  %tobool87 = icmp ne i32 %76, 0, !dbg !7916
  br i1 %tobool87, label %land.lhs.true, label %if.end120, !dbg !7918

land.lhs.true:                                    ; preds = %if.end86
  %77 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7919
  %r88 = getelementptr inbounds %struct.Scene, %struct.Scene* %77, i32 0, i32 22, !dbg !7920
  %im_format89 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r88, i32 0, i32 0, !dbg !7921
  %imtype90 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %im_format89, i32 0, i32 0, !dbg !7922
  %78 = load i8, i8* %imtype90, align 8, !dbg !7922
  %conv91 = zext i8 %78 to i32, !dbg !7919
  %cmp92 = icmp eq i32 %conv91, 23, !dbg !7923
  br i1 %cmp92, label %land.lhs.true94, label %if.end120, !dbg !7924

land.lhs.true94:                                  ; preds = %land.lhs.true
  %79 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7925
  %r95 = getelementptr inbounds %struct.Scene, %struct.Scene* %79, i32 0, i32 22, !dbg !7926
  %im_format96 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r95, i32 0, i32 0, !dbg !7927
  %flag = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %im_format96, i32 0, i32 3, !dbg !7928
  %80 = load i8, i8* %flag, align 1, !dbg !7928
  %conv97 = zext i8 %80 to i32, !dbg !7925
  %and98 = and i32 %conv97, 2, !dbg !7929
  %tobool99 = icmp ne i32 %and98, 0, !dbg !7929
  br i1 %tobool99, label %if.then100, label %if.end120, !dbg !7930

if.then100:                                       ; preds = %land.lhs.true94
  call void @llvm.dbg.declare(metadata %struct.ImageFormatData* %imf, metadata !7931, metadata !DIExpression()), !dbg !7934
  %81 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7935
  %r101 = getelementptr inbounds %struct.Scene, %struct.Scene* %81, i32 0, i32 22, !dbg !7936
  %im_format102 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r101, i32 0, i32 0, !dbg !7937
  %82 = bitcast %struct.ImageFormatData* %imf to i8*, !dbg !7937
  %83 = bitcast %struct.ImageFormatData* %im_format102 to i8*, !dbg !7937
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 248, i1 false), !dbg !7937
  %imtype103 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %imf, i32 0, i32 0, !dbg !7938
  store i8 4, i8* %imtype103, align 8, !dbg !7939
  %arraydecay104 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7940
  %call105 = call zeroext i8 @BLI_testextensie(i8* %arraydecay104, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0)), !dbg !7942
  %tobool106 = icmp ne i8 %call105, 0, !dbg !7942
  br i1 %tobool106, label %if.then107, label %if.end110, !dbg !7943

if.then107:                                       ; preds = %if.then100
  %arraydecay108 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7944
  %call109 = call i64 @strlen(i8* %arraydecay108) #6, !dbg !7945
  %sub = sub i64 %call109, 4, !dbg !7946
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 %sub, !dbg !7947
  store i8 0, i8* %arrayidx, align 1, !dbg !7948
  br label %if.end110, !dbg !7947

if.end110:                                        ; preds = %if.then107, %if.then100
  %arraydecay111 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7949
  %call112 = call i32 @BKE_add_image_extension(i8* %arraydecay111, %struct.ImageFormatData* %imf), !dbg !7950
  %84 = load %struct.ImBuf*, %struct.ImBuf** %ibuf66, align 8, !dbg !7951
  %planes = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %84, i32 0, i32 4, !dbg !7952
  store i8 24, i8* %planes, align 8, !dbg !7953
  %85 = load %struct.ImBuf*, %struct.ImBuf** %ibuf66, align 8, !dbg !7954
  %86 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7955
  %view_settings113 = getelementptr inbounds %struct.Scene, %struct.Scene* %86, i32 0, i32 44, !dbg !7956
  %87 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7957
  %display_settings114 = getelementptr inbounds %struct.Scene, %struct.Scene* %87, i32 0, i32 45, !dbg !7958
  %call115 = call %struct.ImBuf* @IMB_colormanagement_imbuf_for_write(%struct.ImBuf* %85, i8 zeroext 1, i8 zeroext 0, %struct.ColorManagedViewSettings* %view_settings113, %struct.ColorManagedDisplaySettings* %display_settings114, %struct.ImageFormatData* %imf), !dbg !7959
  %88 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7960
  %89 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !7961
  %90 = load %struct.ImBuf*, %struct.ImBuf** %ibuf66, align 8, !dbg !7962
  %arraydecay116 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7963
  %call117 = call i32 @BKE_imbuf_write_stamp(%struct.Scene* %88, %struct.Object* %89, %struct.ImBuf* %90, i8* %arraydecay116, %struct.ImageFormatData* %imf), !dbg !7964
  %arraydecay118 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7965
  %call119 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i8* %arraydecay118), !dbg !7966
  br label %if.end120, !dbg !7967

if.end120:                                        ; preds = %if.end110, %land.lhs.true94, %land.lhs.true, %if.end86
  %91 = load %struct.ImBuf*, %struct.ImBuf** %ibuf66, align 8, !dbg !7968
  call void @IMB_freeImBuf(%struct.ImBuf* %91), !dbg !7969
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.end64
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.end23
  %92 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7970
  call void @RE_ReleaseResultImage(%struct.Render* %92), !dbg !7971
  %93 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7972
  %i = getelementptr inbounds %struct.Render, %struct.Render* %93, i32 0, i32 98, !dbg !7973
  %lastframetime = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 15, !dbg !7974
  %94 = load double, double* %lastframetime, align 8, !dbg !7974
  store double %94, double* %render_time, align 8, !dbg !7975
  %call123 = call double @PIL_check_seconds_timer(), !dbg !7976
  %95 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7977
  %i124 = getelementptr inbounds %struct.Render, %struct.Render* %95, i32 0, i32 98, !dbg !7978
  %starttime = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i124, i32 0, i32 14, !dbg !7979
  %96 = load double, double* %starttime, align 8, !dbg !7979
  %sub125 = fsub double %call123, %96, !dbg !7980
  %97 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7981
  %i126 = getelementptr inbounds %struct.Render, %struct.Render* %97, i32 0, i32 98, !dbg !7982
  %lastframetime127 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i126, i32 0, i32 15, !dbg !7983
  store double %sub125, double* %lastframetime127, align 8, !dbg !7984
  %98 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7985
  %i128 = getelementptr inbounds %struct.Render, %struct.Render* %98, i32 0, i32 98, !dbg !7986
  %lastframetime129 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i128, i32 0, i32 15, !dbg !7987
  %99 = load double, double* %lastframetime129, align 8, !dbg !7987
  %arraydecay130 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7988
  call void @BLI_timestr(double %99, i8* %arraydecay130, i64 1024), !dbg !7989
  %arraydecay131 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7990
  %call132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0), i8* %arraydecay131), !dbg !7991
  %100 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !7992
  call void @BLI_callback_exec(%struct.Main* %100, %struct.ID* null, i32 4), !dbg !7993
  %101 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7994
  %i133 = getelementptr inbounds %struct.Render, %struct.Render* %101, i32 0, i32 98, !dbg !7995
  %lastframetime134 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i133, i32 0, i32 15, !dbg !7996
  %102 = load double, double* %lastframetime134, align 8, !dbg !7996
  %103 = load double, double* %render_time, align 8, !dbg !7997
  %sub135 = fsub double %102, %103, !dbg !7998
  %arraydecay136 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !7999
  call void @BLI_timestr(double %sub135, i8* %arraydecay136, i64 1024), !dbg !8000
  %arraydecay137 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !8001
  %call138 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i64 0, i64 0), i8* %arraydecay137), !dbg !8002
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8003
  %call139 = call i32 @fputc(i32 10, %struct._IO_FILE* %104), !dbg !8004
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !8005
  %call140 = call i32 @fflush(%struct._IO_FILE* %105), !dbg !8006
  %106 = load i32, i32* %ok, align 4, !dbg !8007
  ret i32 %106, !dbg !8008
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_BlenderAnim(%struct.Render* %re, %struct.Main* %bmain, %struct.Scene* %scene, %struct.Object* %camera_override, i32 %lay_override, i32 %sfra, i32 %efra, i32 %tfra) #0 !dbg !8009 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %camera_override.addr = alloca %struct.Object*, align 8
  %lay_override.addr = alloca i32, align 4
  %sfra.addr = alloca i32, align 4
  %efra.addr = alloca i32, align 4
  %tfra.addr = alloca i32, align 4
  %rd = alloca %struct.RenderData, align 8
  %mh = alloca %struct.bMovieHandle*, align 8
  %cfrao = alloca i32, align 4
  %nfra = alloca i32, align 4
  %totrendered = alloca i32, align 4
  %totskipped = alloca i32, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %nf = alloca i32, align 4
  %name = alloca [1024 x i8], align 16
  %updatelay = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8012, metadata !DIExpression()), !dbg !8013
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !8014, metadata !DIExpression()), !dbg !8015
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8016, metadata !DIExpression()), !dbg !8017
  store %struct.Object* %camera_override, %struct.Object** %camera_override.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %camera_override.addr, metadata !8018, metadata !DIExpression()), !dbg !8019
  store i32 %lay_override, i32* %lay_override.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay_override.addr, metadata !8020, metadata !DIExpression()), !dbg !8021
  store i32 %sfra, i32* %sfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sfra.addr, metadata !8022, metadata !DIExpression()), !dbg !8023
  store i32 %efra, i32* %efra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %efra.addr, metadata !8024, metadata !DIExpression()), !dbg !8025
  store i32 %tfra, i32* %tfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tfra.addr, metadata !8026, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.declare(metadata %struct.RenderData* %rd, metadata !8028, metadata !DIExpression()), !dbg !8029
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8030
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 22, !dbg !8031
  %1 = bitcast %struct.RenderData* %rd to i8*, !dbg !8031
  %2 = bitcast %struct.RenderData* %r to i8*, !dbg !8031
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 3984, i1 false), !dbg !8031
  call void @llvm.dbg.declare(metadata %struct.bMovieHandle** %mh, metadata !8032, metadata !DIExpression()), !dbg !8033
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8034
  %r1 = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 22, !dbg !8035
  %im_format = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r1, i32 0, i32 0, !dbg !8036
  %imtype = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %im_format, i32 0, i32 0, !dbg !8037
  %4 = load i8, i8* %imtype, align 8, !dbg !8037
  %call = call %struct.bMovieHandle* @BKE_movie_handle_get(i8 zeroext %4), !dbg !8038
  store %struct.bMovieHandle* %call, %struct.bMovieHandle** %mh, align 8, !dbg !8033
  call void @llvm.dbg.declare(metadata i32* %cfrao, metadata !8039, metadata !DIExpression()), !dbg !8040
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8041
  %r2 = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 22, !dbg !8042
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r2, i32 0, i32 5, !dbg !8043
  %6 = load i32, i32* %cfra, align 8, !dbg !8043
  store i32 %6, i32* %cfrao, align 4, !dbg !8040
  call void @llvm.dbg.declare(metadata i32* %nfra, metadata !8044, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.declare(metadata i32* %totrendered, metadata !8046, metadata !DIExpression()), !dbg !8047
  store i32 0, i32* %totrendered, align 4, !dbg !8047
  call void @llvm.dbg.declare(metadata i32* %totskipped, metadata !8048, metadata !DIExpression()), !dbg !8049
  store i32 0, i32* %totskipped, align 4, !dbg !8049
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8050
  %main = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 43, !dbg !8051
  %8 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !8051
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8052
  %10 = bitcast %struct.Scene* %9 to %struct.ID*, !dbg !8053
  call void @BLI_callback_exec(%struct.Main* %8, %struct.ID* %10, i32 5), !dbg !8054
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8055
  %12 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8057
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8058
  %14 = load %struct.Object*, %struct.Object** %camera_override.addr, align 8, !dbg !8059
  %15 = load i32, i32* %lay_override.addr, align 4, !dbg !8060
  %call3 = call i32 @render_initialize_from_main(%struct.Render* %11, %struct.RenderData* %rd, %struct.Main* %12, %struct.Scene* %13, %struct.SceneRenderLayer* null, %struct.Object* %14, i32 %15, i32 0, i32 1), !dbg !8061
  %tobool = icmp ne i32 %call3, 0, !dbg !8061
  br i1 %tobool, label %if.end, label %if.then, !dbg !8062

if.then:                                          ; preds = %entry
  br label %return, !dbg !8063

if.end:                                           ; preds = %entry
  store i8 1, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 13), align 2, !dbg !8064
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8065
  %flag = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 4, !dbg !8066
  %17 = load i16, i16* %flag, align 8, !dbg !8067
  %conv = sext i16 %17 to i32, !dbg !8067
  %or = or i32 %conv, 128, !dbg !8067
  %conv4 = trunc i32 %or to i16, !dbg !8067
  store i16 %conv4, i16* %flag, align 8, !dbg !8067
  %18 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8068
  %r5 = getelementptr inbounds %struct.Scene, %struct.Scene* %18, i32 0, i32 22, !dbg !8070
  %im_format6 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r5, i32 0, i32 0, !dbg !8071
  %imtype7 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %im_format6, i32 0, i32 0, !dbg !8072
  %19 = load i8, i8* %imtype7, align 8, !dbg !8072
  %call8 = call zeroext i8 @BKE_imtype_is_movie(i8 zeroext %19), !dbg !8073
  %tobool9 = icmp ne i8 %call8, 0, !dbg !8073
  br i1 %tobool9, label %if.then10, label %if.end29, !dbg !8074

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %width, metadata !8075, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.declare(metadata i32* %height, metadata !8078, metadata !DIExpression()), !dbg !8079
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8080
  %r11 = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 45, !dbg !8082
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r11, i32 0, i32 47, !dbg !8083
  %21 = load i32, i32* %mode, align 8, !dbg !8083
  %and = and i32 %21, 512, !dbg !8084
  %tobool12 = icmp ne i32 %and, 0, !dbg !8084
  br i1 %tobool12, label %if.then13, label %if.else20, !dbg !8085

if.then13:                                        ; preds = %if.then10
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8086
  %r14 = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 45, !dbg !8089
  %mode15 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r14, i32 0, i32 47, !dbg !8090
  %23 = load i32, i32* %mode15, align 8, !dbg !8090
  %and16 = and i32 %23, 2048, !dbg !8091
  %cmp = icmp eq i32 %and16, 0, !dbg !8092
  br i1 %cmp, label %if.then18, label %if.else, !dbg !8093

if.then18:                                        ; preds = %if.then13
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8094
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 13, !dbg !8096
  %25 = load i32, i32* %winx, align 4, !dbg !8096
  store i32 %25, i32* %width, align 4, !dbg !8097
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8098
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 14, !dbg !8099
  %27 = load i32, i32* %winy, align 8, !dbg !8099
  store i32 %27, i32* %height, align 4, !dbg !8100
  br label %if.end19, !dbg !8101

if.else:                                          ; preds = %if.then13
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8102
  %rectx = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 20, !dbg !8104
  %29 = load i32, i32* %rectx, align 8, !dbg !8104
  store i32 %29, i32* %width, align 4, !dbg !8105
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8106
  %recty = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 21, !dbg !8107
  %31 = load i32, i32* %recty, align 4, !dbg !8107
  store i32 %31, i32* %height, align 4, !dbg !8108
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then18
  br label %if.end23, !dbg !8109

if.else20:                                        ; preds = %if.then10
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8110
  %rectx21 = getelementptr inbounds %struct.Render, %struct.Render* %32, i32 0, i32 20, !dbg !8112
  %33 = load i32, i32* %rectx21, align 8, !dbg !8112
  store i32 %33, i32* %width, align 4, !dbg !8113
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8114
  %recty22 = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 21, !dbg !8115
  %35 = load i32, i32* %recty22, align 4, !dbg !8115
  store i32 %35, i32* %height, align 4, !dbg !8116
  br label %if.end23

if.end23:                                         ; preds = %if.else20, %if.end19
  %36 = load %struct.bMovieHandle*, %struct.bMovieHandle** %mh, align 8, !dbg !8117
  %start_movie = getelementptr inbounds %struct.bMovieHandle, %struct.bMovieHandle* %36, i32 0, i32 0, !dbg !8119
  %37 = load i32 (%struct.Scene*, %struct.RenderData*, i32, i32, %struct.ReportList*)*, i32 (%struct.Scene*, %struct.RenderData*, i32, i32, %struct.ReportList*)** %start_movie, align 8, !dbg !8119
  %38 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8120
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8121
  %r24 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 45, !dbg !8122
  %40 = load i32, i32* %width, align 4, !dbg !8123
  %41 = load i32, i32* %height, align 4, !dbg !8124
  %42 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8125
  %reports = getelementptr inbounds %struct.Render, %struct.Render* %42, i32 0, i32 99, !dbg !8126
  %43 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8126
  %call25 = call i32 %37(%struct.Scene* %38, %struct.RenderData* %r24, i32 %40, i32 %41, %struct.ReportList* %43), !dbg !8117
  %tobool26 = icmp ne i32 %call25, 0, !dbg !8117
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !8127

if.then27:                                        ; preds = %if.end23
  store i8 1, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !8128
  br label %if.end28, !dbg !8129

if.end28:                                         ; preds = %if.then27, %if.end23
  br label %if.end29, !dbg !8130

if.end29:                                         ; preds = %if.end28, %if.end
  %44 = load %struct.bMovieHandle*, %struct.bMovieHandle** %mh, align 8, !dbg !8131
  %get_next_frame = getelementptr inbounds %struct.bMovieHandle, %struct.bMovieHandle* %44, i32 0, i32 3, !dbg !8133
  %45 = load i32 (%struct.RenderData*, %struct.ReportList*)*, i32 (%struct.RenderData*, %struct.ReportList*)** %get_next_frame, align 8, !dbg !8133
  %tobool30 = icmp ne i32 (%struct.RenderData*, %struct.ReportList*)* %45, null, !dbg !8131
  br i1 %tobool30, label %if.then31, label %if.else79, !dbg !8134

if.then31:                                        ; preds = %if.end29
  br label %while.cond, !dbg !8135

while.cond:                                       ; preds = %if.end78, %if.then31
  %46 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !8137
  %conv32 = zext i8 %46 to i32, !dbg !8138
  %cmp33 = icmp eq i32 %conv32, 1, !dbg !8139
  %lnot = xor i1 %cmp33, true, !dbg !8140
  br i1 %lnot, label %while.body, label %while.end, !dbg !8135

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %nf, metadata !8141, metadata !DIExpression()), !dbg !8143
  %47 = load %struct.bMovieHandle*, %struct.bMovieHandle** %mh, align 8, !dbg !8144
  %get_next_frame35 = getelementptr inbounds %struct.bMovieHandle, %struct.bMovieHandle* %47, i32 0, i32 3, !dbg !8145
  %48 = load i32 (%struct.RenderData*, %struct.ReportList*)*, i32 (%struct.RenderData*, %struct.ReportList*)** %get_next_frame35, align 8, !dbg !8145
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8146
  %r36 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 45, !dbg !8147
  %50 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8148
  %reports37 = getelementptr inbounds %struct.Render, %struct.Render* %50, i32 0, i32 99, !dbg !8149
  %51 = load %struct.ReportList*, %struct.ReportList** %reports37, align 8, !dbg !8149
  %call38 = call i32 %48(%struct.RenderData* %r36, %struct.ReportList* %51), !dbg !8144
  store i32 %call38, i32* %nf, align 4, !dbg !8143
  %52 = load i32, i32* %nf, align 4, !dbg !8150
  %cmp39 = icmp sge i32 %52, 0, !dbg !8152
  br i1 %cmp39, label %land.lhs.true, label %if.else71, !dbg !8153

land.lhs.true:                                    ; preds = %while.body
  %53 = load i32, i32* %nf, align 4, !dbg !8154
  %54 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8155
  %r41 = getelementptr inbounds %struct.Scene, %struct.Scene* %54, i32 0, i32 22, !dbg !8156
  %sfra42 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r41, i32 0, i32 6, !dbg !8157
  %55 = load i32, i32* %sfra42, align 4, !dbg !8157
  %cmp43 = icmp sge i32 %53, %55, !dbg !8158
  br i1 %cmp43, label %land.lhs.true45, label %if.else71, !dbg !8159

land.lhs.true45:                                  ; preds = %land.lhs.true
  %56 = load i32, i32* %nf, align 4, !dbg !8160
  %57 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8161
  %r46 = getelementptr inbounds %struct.Scene, %struct.Scene* %57, i32 0, i32 22, !dbg !8162
  %efra47 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r46, i32 0, i32 7, !dbg !8163
  %58 = load i32, i32* %efra47, align 8, !dbg !8163
  %cmp48 = icmp sle i32 %56, %58, !dbg !8164
  br i1 %cmp48, label %if.then50, label %if.else71, !dbg !8165

if.then50:                                        ; preds = %land.lhs.true45
  %59 = load i32, i32* %nf, align 4, !dbg !8166
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8168
  %r51 = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 45, !dbg !8169
  %cfra52 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r51, i32 0, i32 5, !dbg !8170
  store i32 %59, i32* %cfra52, align 8, !dbg !8171
  %61 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8172
  %r53 = getelementptr inbounds %struct.Scene, %struct.Scene* %61, i32 0, i32 22, !dbg !8173
  %cfra54 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r53, i32 0, i32 5, !dbg !8174
  store i32 %59, i32* %cfra54, align 8, !dbg !8175
  %62 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8176
  %main55 = getelementptr inbounds %struct.Render, %struct.Render* %62, i32 0, i32 43, !dbg !8177
  %63 = load %struct.Main*, %struct.Main** %main55, align 8, !dbg !8177
  %64 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8178
  %65 = bitcast %struct.Scene* %64 to %struct.ID*, !dbg !8179
  call void @BLI_callback_exec(%struct.Main* %63, %struct.ID* %65, i32 2), !dbg !8180
  %66 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8181
  call void @do_render_all_options(%struct.Render* %66), !dbg !8182
  %67 = load i32, i32* %totrendered, align 4, !dbg !8183
  %inc = add nsw i32 %67, 1, !dbg !8183
  store i32 %inc, i32* %totrendered, align 4, !dbg !8183
  %68 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8184
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %68, i32 0, i32 96, !dbg !8186
  %69 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !8186
  %70 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8187
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %70, i32 0, i32 97, !dbg !8188
  %71 = load i8*, i8** %tbh, align 8, !dbg !8188
  %call56 = call i32 %69(i8* %71), !dbg !8184
  %cmp57 = icmp eq i32 %call56, 0, !dbg !8189
  br i1 %cmp57, label %if.then59, label %if.end64, !dbg !8190

if.then59:                                        ; preds = %if.then50
  %72 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8191
  %73 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8194
  %74 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8195
  %75 = load %struct.bMovieHandle*, %struct.bMovieHandle** %mh, align 8, !dbg !8196
  %call60 = call i32 @do_write_image_or_movie(%struct.Render* %72, %struct.Main* %73, %struct.Scene* %74, %struct.bMovieHandle* %75, i8* null), !dbg !8197
  %tobool61 = icmp ne i32 %call60, 0, !dbg !8197
  br i1 %tobool61, label %if.end63, label %if.then62, !dbg !8198

if.then62:                                        ; preds = %if.then59
  store i8 1, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !8199
  br label %if.end63, !dbg !8200

if.end63:                                         ; preds = %if.then62, %if.then59
  br label %if.end64, !dbg !8201

if.end64:                                         ; preds = %if.end63, %if.then50
  %76 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !8202
  %conv65 = zext i8 %76 to i32, !dbg !8204
  %cmp66 = icmp eq i32 %conv65, 0, !dbg !8205
  br i1 %cmp66, label %if.then68, label %if.end70, !dbg !8206

if.then68:                                        ; preds = %if.end64
  %77 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8207
  %main69 = getelementptr inbounds %struct.Render, %struct.Render* %77, i32 0, i32 43, !dbg !8209
  %78 = load %struct.Main*, %struct.Main** %main69, align 8, !dbg !8209
  %79 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8210
  %80 = bitcast %struct.Scene* %79 to %struct.ID*, !dbg !8211
  call void @BLI_callback_exec(%struct.Main* %78, %struct.ID* %80, i32 3), !dbg !8212
  br label %if.end70, !dbg !8213

if.end70:                                         ; preds = %if.then68, %if.end64
  br label %if.end78, !dbg !8214

if.else71:                                        ; preds = %land.lhs.true45, %land.lhs.true, %while.body
  %81 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8215
  %test_break72 = getelementptr inbounds %struct.Render, %struct.Render* %81, i32 0, i32 96, !dbg !8218
  %82 = load i32 (i8*)*, i32 (i8*)** %test_break72, align 8, !dbg !8218
  %83 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8219
  %tbh73 = getelementptr inbounds %struct.Render, %struct.Render* %83, i32 0, i32 97, !dbg !8220
  %84 = load i8*, i8** %tbh73, align 8, !dbg !8220
  %call74 = call i32 %82(i8* %84), !dbg !8215
  %tobool75 = icmp ne i32 %call74, 0, !dbg !8215
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !8221

if.then76:                                        ; preds = %if.else71
  store i8 1, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !8222
  br label %if.end77, !dbg !8224

if.end77:                                         ; preds = %if.then76, %if.else71
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.end70
  br label %while.cond, !dbg !8135, !llvm.loop !8225

while.end:                                        ; preds = %while.cond
  br label %if.end213, !dbg !8227

if.else79:                                        ; preds = %if.end29
  %85 = load i32, i32* %sfra.addr, align 4, !dbg !8228
  store i32 %85, i32* %nfra, align 4, !dbg !8231
  %86 = load i32, i32* %sfra.addr, align 4, !dbg !8232
  %87 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8233
  %r80 = getelementptr inbounds %struct.Scene, %struct.Scene* %87, i32 0, i32 22, !dbg !8234
  %cfra81 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r80, i32 0, i32 5, !dbg !8235
  store i32 %86, i32* %cfra81, align 8, !dbg !8236
  br label %for.cond, !dbg !8237

for.cond:                                         ; preds = %for.inc, %if.else79
  %88 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8238
  %r82 = getelementptr inbounds %struct.Scene, %struct.Scene* %88, i32 0, i32 22, !dbg !8240
  %cfra83 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r82, i32 0, i32 5, !dbg !8241
  %89 = load i32, i32* %cfra83, align 8, !dbg !8241
  %90 = load i32, i32* %efra.addr, align 4, !dbg !8242
  %cmp84 = icmp sle i32 %89, %90, !dbg !8243
  br i1 %cmp84, label %for.body, label %for.end, !dbg !8244

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [1024 x i8]* %name, metadata !8245, metadata !DIExpression()), !dbg !8247
  %91 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8248
  %92 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8249
  %93 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8250
  %94 = load %struct.Object*, %struct.Object** %camera_override.addr, align 8, !dbg !8251
  %95 = load i32, i32* %lay_override.addr, align 4, !dbg !8252
  %call86 = call i32 @render_initialize_from_main(%struct.Render* %91, %struct.RenderData* %rd, %struct.Main* %92, %struct.Scene* %93, %struct.SceneRenderLayer* null, %struct.Object* %94, i32 %95, i32 1, i32 0), !dbg !8253
  %96 = load i32, i32* %nfra, align 4, !dbg !8254
  %97 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8256
  %r87 = getelementptr inbounds %struct.Scene, %struct.Scene* %97, i32 0, i32 22, !dbg !8257
  %cfra88 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r87, i32 0, i32 5, !dbg !8258
  %98 = load i32, i32* %cfra88, align 8, !dbg !8258
  %cmp89 = icmp ne i32 %96, %98, !dbg !8259
  br i1 %cmp89, label %if.then91, label %if.else100, !dbg !8260

if.then91:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %updatelay, metadata !8261, metadata !DIExpression()), !dbg !8263
  %99 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8264
  %lay = getelementptr inbounds %struct.Render, %struct.Render* %99, i32 0, i32 48, !dbg !8266
  %100 = load i32, i32* %lay, align 8, !dbg !8266
  %and92 = and i32 %100, -16777216, !dbg !8267
  %tobool93 = icmp ne i32 %and92, 0, !dbg !8267
  br i1 %tobool93, label %if.then94, label %if.else97, !dbg !8268

if.then94:                                        ; preds = %if.then91
  %101 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8269
  %lay95 = getelementptr inbounds %struct.Render, %struct.Render* %101, i32 0, i32 48, !dbg !8270
  %102 = load i32, i32* %lay95, align 8, !dbg !8270
  %and96 = and i32 %102, -16777216, !dbg !8271
  store i32 %and96, i32* %updatelay, align 4, !dbg !8272
  br label %if.end99, !dbg !8273

if.else97:                                        ; preds = %if.then91
  %103 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8274
  %lay98 = getelementptr inbounds %struct.Render, %struct.Render* %103, i32 0, i32 48, !dbg !8275
  %104 = load i32, i32* %lay98, align 8, !dbg !8275
  store i32 %104, i32* %updatelay, align 4, !dbg !8276
  br label %if.end99

if.end99:                                         ; preds = %if.else97, %if.then94
  %105 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8277
  %eval_ctx = getelementptr inbounds %struct.Render, %struct.Render* %105, i32 0, i32 101, !dbg !8278
  %106 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !8278
  %107 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8279
  %108 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8280
  %109 = load i32, i32* %updatelay, align 4, !dbg !8281
  call void @BKE_scene_update_for_newframe(%struct.EvaluationContext* %106, %struct.Main* %107, %struct.Scene* %108, i32 %109), !dbg !8282
  br label %for.inc, !dbg !8283

if.else100:                                       ; preds = %for.body
  %110 = load i32, i32* %tfra.addr, align 4, !dbg !8284
  %111 = load i32, i32* %nfra, align 4, !dbg !8285
  %add = add nsw i32 %111, %110, !dbg !8285
  store i32 %add, i32* %nfra, align 4, !dbg !8285
  br label %if.end101

if.end101:                                        ; preds = %if.else100
  %112 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8286
  %r102 = getelementptr inbounds %struct.Scene, %struct.Scene* %112, i32 0, i32 22, !dbg !8288
  %im_format103 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r102, i32 0, i32 0, !dbg !8289
  %imtype104 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %im_format103, i32 0, i32 0, !dbg !8290
  %113 = load i8, i8* %imtype104, align 8, !dbg !8290
  %call105 = call zeroext i8 @BKE_imtype_is_movie(i8 zeroext %113), !dbg !8291
  %conv106 = zext i8 %call105 to i32, !dbg !8291
  %cmp107 = icmp eq i32 %conv106, 0, !dbg !8292
  br i1 %cmp107, label %if.then109, label %if.end155, !dbg !8293

if.then109:                                       ; preds = %if.end101
  %114 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8294
  %r110 = getelementptr inbounds %struct.Scene, %struct.Scene* %114, i32 0, i32 22, !dbg !8297
  %mode111 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r110, i32 0, i32 47, !dbg !8298
  %115 = load i32, i32* %mode111, align 8, !dbg !8298
  %and112 = and i32 %115, 12582912, !dbg !8299
  %tobool113 = icmp ne i32 %and112, 0, !dbg !8299
  br i1 %tobool113, label %if.then114, label %if.end128, !dbg !8300

if.then114:                                       ; preds = %if.then109
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !8301
  %116 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8302
  %r115 = getelementptr inbounds %struct.Scene, %struct.Scene* %116, i32 0, i32 22, !dbg !8303
  %pic = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r115, i32 0, i32 84, !dbg !8304
  %arraydecay116 = getelementptr inbounds [1024 x i8], [1024 x i8]* %pic, i64 0, i64 0, !dbg !8302
  %117 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8305
  %name117 = getelementptr inbounds %struct.Main, %struct.Main* %117, i32 0, i32 2, !dbg !8306
  %arraydecay118 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name117, i64 0, i64 0, !dbg !8305
  %118 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8307
  %r119 = getelementptr inbounds %struct.Scene, %struct.Scene* %118, i32 0, i32 22, !dbg !8308
  %cfra120 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r119, i32 0, i32 5, !dbg !8309
  %119 = load i32, i32* %cfra120, align 8, !dbg !8309
  %120 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8310
  %r121 = getelementptr inbounds %struct.Scene, %struct.Scene* %120, i32 0, i32 22, !dbg !8311
  %im_format122 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r121, i32 0, i32 0, !dbg !8312
  %121 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8313
  %r123 = getelementptr inbounds %struct.Scene, %struct.Scene* %121, i32 0, i32 22, !dbg !8314
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r123, i32 0, i32 46, !dbg !8315
  %122 = load i32, i32* %scemode, align 4, !dbg !8315
  %and124 = and i32 %122, 16, !dbg !8316
  %cmp125 = icmp ne i32 %and124, 0, !dbg !8317
  %conv126 = zext i1 %cmp125 to i32, !dbg !8317
  %conv127 = trunc i32 %conv126 to i8, !dbg !8318
  call void @BKE_makepicstring(i8* %arraydecay, i8* %arraydecay116, i8* %arraydecay118, i32 %119, %struct.ImageFormatData* %im_format122, i8 zeroext %conv127, i8 zeroext 1), !dbg !8319
  br label %if.end128, !dbg !8319

if.end128:                                        ; preds = %if.then114, %if.then109
  %123 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8320
  %r129 = getelementptr inbounds %struct.Scene, %struct.Scene* %123, i32 0, i32 22, !dbg !8322
  %mode130 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r129, i32 0, i32 47, !dbg !8323
  %124 = load i32, i32* %mode130, align 8, !dbg !8323
  %and131 = and i32 %124, 4194304, !dbg !8324
  %tobool132 = icmp ne i32 %and131, 0, !dbg !8324
  br i1 %tobool132, label %land.lhs.true133, label %if.end141, !dbg !8325

land.lhs.true133:                                 ; preds = %if.end128
  %arraydecay134 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !8326
  %call135 = call i32 @BLI_exists(i8* %arraydecay134), !dbg !8327
  %tobool136 = icmp ne i32 %call135, 0, !dbg !8327
  br i1 %tobool136, label %if.then137, label %if.end141, !dbg !8328

if.then137:                                       ; preds = %land.lhs.true133
  %arraydecay138 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !8329
  %call139 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i8* %arraydecay138), !dbg !8331
  %125 = load i32, i32* %totskipped, align 4, !dbg !8332
  %inc140 = add nsw i32 %125, 1, !dbg !8332
  store i32 %inc140, i32* %totskipped, align 4, !dbg !8332
  br label %for.inc, !dbg !8333

if.end141:                                        ; preds = %land.lhs.true133, %if.end128
  %126 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8334
  %r142 = getelementptr inbounds %struct.Scene, %struct.Scene* %126, i32 0, i32 22, !dbg !8336
  %mode143 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r142, i32 0, i32 47, !dbg !8337
  %127 = load i32, i32* %mode143, align 8, !dbg !8337
  %and144 = and i32 %127, 8388608, !dbg !8338
  %tobool145 = icmp ne i32 %and144, 0, !dbg !8338
  br i1 %tobool145, label %land.lhs.true146, label %if.end154, !dbg !8339

land.lhs.true146:                                 ; preds = %if.end141
  %arraydecay147 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !8340
  %call148 = call i32 @BLI_exists(i8* %arraydecay147), !dbg !8341
  %tobool149 = icmp ne i32 %call148, 0, !dbg !8341
  br i1 %tobool149, label %if.end154, label %if.then150, !dbg !8342

if.then150:                                       ; preds = %land.lhs.true146
  %arraydecay151 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !8343
  call void @BLI_make_existing_file(i8* %arraydecay151), !dbg !8345
  %arraydecay152 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !8346
  %call153 = call zeroext i8 @BLI_file_touch(i8* %arraydecay152), !dbg !8347
  br label %if.end154, !dbg !8348

if.end154:                                        ; preds = %if.then150, %land.lhs.true146, %if.end141
  br label %if.end155, !dbg !8349

if.end155:                                        ; preds = %if.end154, %if.end101
  %128 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8350
  %r156 = getelementptr inbounds %struct.Scene, %struct.Scene* %128, i32 0, i32 22, !dbg !8351
  %cfra157 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r156, i32 0, i32 5, !dbg !8352
  %129 = load i32, i32* %cfra157, align 8, !dbg !8352
  %130 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8353
  %r158 = getelementptr inbounds %struct.Render, %struct.Render* %130, i32 0, i32 45, !dbg !8354
  %cfra159 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r158, i32 0, i32 5, !dbg !8355
  store i32 %129, i32* %cfra159, align 8, !dbg !8356
  %131 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8357
  %main160 = getelementptr inbounds %struct.Render, %struct.Render* %131, i32 0, i32 43, !dbg !8358
  %132 = load %struct.Main*, %struct.Main** %main160, align 8, !dbg !8358
  %133 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8359
  %134 = bitcast %struct.Scene* %133 to %struct.ID*, !dbg !8360
  call void @BLI_callback_exec(%struct.Main* %132, %struct.ID* %134, i32 2), !dbg !8361
  %135 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8362
  call void @do_render_all_options(%struct.Render* %135), !dbg !8363
  %136 = load i32, i32* %totrendered, align 4, !dbg !8364
  %inc161 = add nsw i32 %136, 1, !dbg !8364
  store i32 %inc161, i32* %totrendered, align 4, !dbg !8364
  %137 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8365
  %test_break162 = getelementptr inbounds %struct.Render, %struct.Render* %137, i32 0, i32 96, !dbg !8367
  %138 = load i32 (i8*)*, i32 (i8*)** %test_break162, align 8, !dbg !8367
  %139 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8368
  %tbh163 = getelementptr inbounds %struct.Render, %struct.Render* %139, i32 0, i32 97, !dbg !8369
  %140 = load i8*, i8** %tbh163, align 8, !dbg !8369
  %call164 = call i32 %138(i8* %140), !dbg !8365
  %cmp165 = icmp eq i32 %call164, 0, !dbg !8370
  br i1 %cmp165, label %if.then167, label %if.else175, !dbg !8371

if.then167:                                       ; preds = %if.end155
  %141 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !8372
  %tobool168 = icmp ne i8 %141, 0, !dbg !8375
  br i1 %tobool168, label %if.end174, label %if.then169, !dbg !8376

if.then169:                                       ; preds = %if.then167
  %142 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8377
  %143 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8379
  %144 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8380
  %145 = load %struct.bMovieHandle*, %struct.bMovieHandle** %mh, align 8, !dbg !8381
  %call170 = call i32 @do_write_image_or_movie(%struct.Render* %142, %struct.Main* %143, %struct.Scene* %144, %struct.bMovieHandle* %145, i8* null), !dbg !8382
  %tobool171 = icmp ne i32 %call170, 0, !dbg !8382
  br i1 %tobool171, label %if.end173, label %if.then172, !dbg !8383

if.then172:                                       ; preds = %if.then169
  store i8 1, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !8384
  br label %if.end173, !dbg !8385

if.end173:                                        ; preds = %if.then172, %if.then169
  br label %if.end174, !dbg !8386

if.end174:                                        ; preds = %if.end173, %if.then167
  br label %if.end176, !dbg !8387

if.else175:                                       ; preds = %if.end155
  store i8 1, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !8388
  br label %if.end176

if.end176:                                        ; preds = %if.else175, %if.end174
  %146 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !8389
  %conv177 = zext i8 %146 to i32, !dbg !8391
  %cmp178 = icmp eq i32 %conv177, 1, !dbg !8392
  br i1 %cmp178, label %if.then180, label %if.end203, !dbg !8393

if.then180:                                       ; preds = %if.end176
  %147 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8394
  %r181 = getelementptr inbounds %struct.Scene, %struct.Scene* %147, i32 0, i32 22, !dbg !8397
  %im_format182 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r181, i32 0, i32 0, !dbg !8398
  %imtype183 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %im_format182, i32 0, i32 0, !dbg !8399
  %148 = load i8, i8* %imtype183, align 8, !dbg !8399
  %call184 = call zeroext i8 @BKE_imtype_is_movie(i8 zeroext %148), !dbg !8400
  %conv185 = zext i8 %call184 to i32, !dbg !8400
  %cmp186 = icmp eq i32 %conv185, 0, !dbg !8401
  br i1 %cmp186, label %if.then188, label %if.end202, !dbg !8402

if.then188:                                       ; preds = %if.then180
  %149 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8403
  %r189 = getelementptr inbounds %struct.Scene, %struct.Scene* %149, i32 0, i32 22, !dbg !8406
  %mode190 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r189, i32 0, i32 47, !dbg !8407
  %150 = load i32, i32* %mode190, align 8, !dbg !8407
  %and191 = and i32 %150, 8388608, !dbg !8408
  %tobool192 = icmp ne i32 %and191, 0, !dbg !8408
  br i1 %tobool192, label %land.lhs.true193, label %if.end201, !dbg !8409

land.lhs.true193:                                 ; preds = %if.then188
  %arraydecay194 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !8410
  %call195 = call i64 @BLI_file_size(i8* %arraydecay194), !dbg !8411
  %cmp196 = icmp eq i64 %call195, 0, !dbg !8412
  br i1 %cmp196, label %if.then198, label %if.end201, !dbg !8413

if.then198:                                       ; preds = %land.lhs.true193
  %arraydecay199 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !8414
  %call200 = call i32 @BLI_delete(i8* %arraydecay199, i8 zeroext 0, i8 zeroext 0), !dbg !8416
  br label %if.end201, !dbg !8417

if.end201:                                        ; preds = %if.then198, %land.lhs.true193, %if.then188
  br label %if.end202, !dbg !8418

if.end202:                                        ; preds = %if.end201, %if.then180
  br label %for.end, !dbg !8419

if.end203:                                        ; preds = %if.end176
  %151 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !8420
  %conv204 = zext i8 %151 to i32, !dbg !8422
  %cmp205 = icmp eq i32 %conv204, 0, !dbg !8423
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !8424

if.then207:                                       ; preds = %if.end203
  %152 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8425
  %main208 = getelementptr inbounds %struct.Render, %struct.Render* %152, i32 0, i32 43, !dbg !8427
  %153 = load %struct.Main*, %struct.Main** %main208, align 8, !dbg !8427
  %154 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8428
  %155 = bitcast %struct.Scene* %154 to %struct.ID*, !dbg !8429
  call void @BLI_callback_exec(%struct.Main* %153, %struct.ID* %155, i32 3), !dbg !8430
  br label %if.end209, !dbg !8431

if.end209:                                        ; preds = %if.then207, %if.end203
  br label %for.inc, !dbg !8432

for.inc:                                          ; preds = %if.end209, %if.then137, %if.end99
  %156 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8433
  %r210 = getelementptr inbounds %struct.Scene, %struct.Scene* %156, i32 0, i32 22, !dbg !8434
  %cfra211 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r210, i32 0, i32 5, !dbg !8435
  %157 = load i32, i32* %cfra211, align 8, !dbg !8436
  %inc212 = add nsw i32 %157, 1, !dbg !8436
  store i32 %inc212, i32* %cfra211, align 8, !dbg !8436
  br label %for.cond, !dbg !8437, !llvm.loop !8438

for.end:                                          ; preds = %if.end202, %for.cond
  br label %if.end213

if.end213:                                        ; preds = %for.end, %while.end
  %158 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8440
  %r214 = getelementptr inbounds %struct.Scene, %struct.Scene* %158, i32 0, i32 22, !dbg !8442
  %im_format215 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r214, i32 0, i32 0, !dbg !8443
  %imtype216 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %im_format215, i32 0, i32 0, !dbg !8444
  %159 = load i8, i8* %imtype216, align 8, !dbg !8444
  %call217 = call zeroext i8 @BKE_imtype_is_movie(i8 zeroext %159), !dbg !8445
  %tobool218 = icmp ne i8 %call217, 0, !dbg !8445
  br i1 %tobool218, label %if.then219, label %if.end220, !dbg !8446

if.then219:                                       ; preds = %if.end213
  %160 = load %struct.bMovieHandle*, %struct.bMovieHandle** %mh, align 8, !dbg !8447
  %end_movie = getelementptr inbounds %struct.bMovieHandle, %struct.bMovieHandle* %160, i32 0, i32 2, !dbg !8448
  %161 = load void ()*, void ()** %end_movie, align 8, !dbg !8448
  call void %161(), !dbg !8447
  br label %if.end220, !dbg !8447

if.end220:                                        ; preds = %if.then219, %if.end213
  %162 = load i32, i32* %totskipped, align 4, !dbg !8449
  %tobool221 = icmp ne i32 %162, 0, !dbg !8449
  br i1 %tobool221, label %land.lhs.true222, label %if.end227, !dbg !8451

land.lhs.true222:                                 ; preds = %if.end220
  %163 = load i32, i32* %totrendered, align 4, !dbg !8452
  %cmp223 = icmp eq i32 %163, 0, !dbg !8453
  br i1 %cmp223, label %if.then225, label %if.end227, !dbg !8454

if.then225:                                       ; preds = %land.lhs.true222
  %164 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8455
  %reports226 = getelementptr inbounds %struct.Render, %struct.Render* %164, i32 0, i32 99, !dbg !8456
  %165 = load %struct.ReportList*, %struct.ReportList** %reports226, align 8, !dbg !8456
  call void @BKE_report(%struct.ReportList* %165, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i64 0, i64 0)), !dbg !8457
  br label %if.end227, !dbg !8457

if.end227:                                        ; preds = %if.then225, %land.lhs.true222, %if.end220
  %166 = load i32, i32* %cfrao, align 4, !dbg !8458
  %167 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8459
  %r228 = getelementptr inbounds %struct.Scene, %struct.Scene* %167, i32 0, i32 22, !dbg !8460
  %cfra229 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r228, i32 0, i32 5, !dbg !8461
  store i32 %166, i32* %cfra229, align 8, !dbg !8462
  %168 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8463
  %flag230 = getelementptr inbounds %struct.Render, %struct.Render* %168, i32 0, i32 4, !dbg !8464
  %169 = load i16, i16* %flag230, align 8, !dbg !8465
  %conv231 = sext i16 %169 to i32, !dbg !8465
  %and232 = and i32 %conv231, -129, !dbg !8465
  %conv233 = trunc i32 %and232 to i16, !dbg !8465
  store i16 %conv233, i16* %flag230, align 8, !dbg !8465
  %170 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8466
  %main234 = getelementptr inbounds %struct.Render, %struct.Render* %170, i32 0, i32 43, !dbg !8467
  %171 = load %struct.Main*, %struct.Main** %main234, align 8, !dbg !8467
  %172 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8468
  %173 = bitcast %struct.Scene* %172 to %struct.ID*, !dbg !8469
  %174 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !8470
  %conv235 = zext i8 %174 to i32, !dbg !8471
  %tobool236 = icmp ne i32 %conv235, 0, !dbg !8471
  %175 = zext i1 %tobool236 to i64, !dbg !8471
  %cond = select i1 %tobool236, i32 7, i32 6, !dbg !8471
  call void @BLI_callback_exec(%struct.Main* %171, %struct.ID* %173, i32 %cond), !dbg !8472
  store i8 0, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 13), align 2, !dbg !8473
  br label %return, !dbg !8474

return:                                           ; preds = %if.end227, %if.then
  ret void, !dbg !8474
}

declare dso_local %struct.bMovieHandle* @BKE_movie_handle_get(i8 zeroext) #2

declare dso_local void @BKE_scene_update_for_newframe(%struct.EvaluationContext*, %struct.Main*, %struct.Scene*, i32) #2

declare dso_local i32 @BLI_exists(i8*) #2

declare dso_local void @BLI_make_existing_file(i8*) #2

declare dso_local zeroext i8 @BLI_file_touch(i8*) #2

declare dso_local i64 @BLI_file_size(i8*) #2

declare dso_local i32 @BLI_delete(i8*, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_PreviewRender(%struct.Render* %re, %struct.Main* %bmain, %struct.Scene* %sce) #0 !dbg !8475 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  %camera = alloca %struct.Object*, align 8
  %winx = alloca i32, align 4
  %winy = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8478, metadata !DIExpression()), !dbg !8479
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !8480, metadata !DIExpression()), !dbg !8481
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !8482, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.declare(metadata %struct.Object** %camera, metadata !8484, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.declare(metadata i32* %winx, metadata !8486, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.declare(metadata i32* %winy, metadata !8488, metadata !DIExpression()), !dbg !8489
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8490
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 22, !dbg !8491
  %size = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 30, !dbg !8492
  %1 = load i16, i16* %size, align 2, !dbg !8492
  %conv = sext i16 %1 to i32, !dbg !8490
  %2 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8493
  %r1 = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 22, !dbg !8494
  %xsch = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r1, i32 0, i32 33, !dbg !8495
  %3 = load i32, i32* %xsch, align 4, !dbg !8495
  %mul = mul nsw i32 %conv, %3, !dbg !8496
  %div = sdiv i32 %mul, 100, !dbg !8497
  store i32 %div, i32* %winx, align 4, !dbg !8498
  %4 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8499
  %r2 = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 22, !dbg !8500
  %size3 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r2, i32 0, i32 30, !dbg !8501
  %5 = load i16, i16* %size3, align 2, !dbg !8501
  %conv4 = sext i16 %5 to i32, !dbg !8499
  %6 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8502
  %r5 = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 22, !dbg !8503
  %ysch = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r5, i32 0, i32 34, !dbg !8504
  %7 = load i32, i32* %ysch, align 8, !dbg !8504
  %mul6 = mul nsw i32 %conv4, %7, !dbg !8505
  %div7 = sdiv i32 %mul6, 100, !dbg !8506
  store i32 %div7, i32* %winy, align 4, !dbg !8507
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8508
  %9 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8509
  %r8 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 22, !dbg !8510
  %10 = load i32, i32* %winx, align 4, !dbg !8511
  %11 = load i32, i32* %winy, align 4, !dbg !8512
  call void @RE_InitState(%struct.Render* %8, %struct.Render* null, %struct.RenderData* %r8, %struct.SceneRenderLayer* null, i32 %10, i32 %11, %struct.rcti* null), !dbg !8513
  %call = call %struct.ImagePool* @BKE_image_pool_new(), !dbg !8514
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8515
  %pool = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 100, !dbg !8516
  store %struct.ImagePool* %call, %struct.ImagePool** %pool, align 8, !dbg !8517
  %13 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8518
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8519
  %main = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 43, !dbg !8520
  store %struct.Main* %13, %struct.Main** %main, align 8, !dbg !8521
  %15 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8522
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8523
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 44, !dbg !8524
  store %struct.Scene* %15, %struct.Scene** %scene, align 8, !dbg !8525
  %17 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8526
  %call9 = call zeroext i8 @BKE_scene_check_color_management_enabled(%struct.Scene* %17), !dbg !8527
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8528
  %scene_color_manage = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 8, !dbg !8529
  store i8 %call9, i8* %scene_color_manage, align 8, !dbg !8530
  %19 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !8531
  %lay = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 12, !dbg !8532
  %20 = load i32, i32* %lay, align 8, !dbg !8532
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8533
  %lay10 = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 48, !dbg !8534
  store i32 %20, i32* %lay10, align 8, !dbg !8535
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8536
  %call11 = call %struct.Object* @RE_GetCamera(%struct.Render* %22), !dbg !8537
  store %struct.Object* %call11, %struct.Object** %camera, align 8, !dbg !8538
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8539
  %24 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !8540
  call void @RE_SetCamera(%struct.Render* %23, %struct.Object* %24), !dbg !8541
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8542
  call void @do_render_3d(%struct.Render* %25), !dbg !8543
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8544
  %pool12 = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 100, !dbg !8545
  %27 = load %struct.ImagePool*, %struct.ImagePool** %pool12, align 8, !dbg !8545
  call void @BKE_image_pool_free(%struct.ImagePool* %27), !dbg !8546
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8547
  %pool13 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 100, !dbg !8548
  store %struct.ImagePool* null, %struct.ImagePool** %pool13, align 8, !dbg !8549
  ret void, !dbg !8550
}

declare dso_local %struct.ImagePool* @BKE_image_pool_new() #2

declare dso_local %struct.Object* @RE_GetCamera(%struct.Render*) #2

declare dso_local void @RE_SetCamera(%struct.Render*, %struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_render_3d(%struct.Render* %re) #0 !dbg !8551 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %cfra_backup = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8552, metadata !DIExpression()), !dbg !8553
  call void @llvm.dbg.declare(metadata i32* %cfra_backup, metadata !8554, metadata !DIExpression()), !dbg !8555
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8556
  %current_scene_update = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 88, !dbg !8557
  %1 = load void (i8*, %struct.Scene*)*, void (i8*, %struct.Scene*)** %current_scene_update, align 8, !dbg !8557
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8558
  %suh = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 89, !dbg !8559
  %3 = load i8*, i8** %suh, align 8, !dbg !8559
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8560
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 44, !dbg !8561
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8561
  call void %1(i8* %3, %struct.Scene* %5), !dbg !8556
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8562
  %call = call i32 @RE_engine_render(%struct.Render* %6, i32 0), !dbg !8564
  %tobool = icmp ne i32 %call, 0, !dbg !8564
  br i1 %tobool, label %if.then, label %if.end, !dbg !8565

if.then:                                          ; preds = %entry
  br label %return, !dbg !8566

if.end:                                           ; preds = %entry
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8567
  call void @RE_parts_clamp(%struct.Render* %7), !dbg !8568
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8569
  %scene1 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 44, !dbg !8570
  %9 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !8570
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 22, !dbg !8571
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !8572
  %10 = load i32, i32* %cfra, align 8, !dbg !8572
  store i32 %10, i32* %cfra_backup, align 4, !dbg !8573
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8574
  %scene2 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 44, !dbg !8575
  %12 = load %struct.Scene*, %struct.Scene** %scene2, align 8, !dbg !8575
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8576
  %scene3 = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 44, !dbg !8577
  %14 = load %struct.Scene*, %struct.Scene** %scene3, align 8, !dbg !8577
  %r4 = getelementptr inbounds %struct.Scene, %struct.Scene* %14, i32 0, i32 22, !dbg !8578
  %cfra5 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r4, i32 0, i32 5, !dbg !8579
  %15 = load i32, i32* %cfra5, align 8, !dbg !8579
  %conv = sitofp i32 %15 to double, !dbg !8580
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8581
  %mblur_offs = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 58, !dbg !8582
  %17 = load float, float* %mblur_offs, align 8, !dbg !8582
  %conv6 = fpext float %17 to double, !dbg !8583
  %add = fadd double %conv, %conv6, !dbg !8584
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8585
  %field_offs = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 59, !dbg !8586
  %19 = load float, float* %field_offs, align 4, !dbg !8586
  %conv7 = fpext float %19 to double, !dbg !8587
  %add8 = fadd double %add, %conv7, !dbg !8588
  call void @BKE_scene_frame_set(%struct.Scene* %12, double %add8), !dbg !8589
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8590
  %draw_lock = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 94, !dbg !8592
  %21 = load void (i8*, i32)*, void (i8*, i32)** %draw_lock, align 8, !dbg !8592
  %tobool9 = icmp ne void (i8*, i32)* %21, null, !dbg !8590
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !8593

if.then10:                                        ; preds = %if.end
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8594
  %draw_lock11 = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 94, !dbg !8595
  %23 = load void (i8*, i32)*, void (i8*, i32)** %draw_lock11, align 8, !dbg !8595
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8596
  %dlh = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 95, !dbg !8597
  %25 = load i8*, i8** %dlh, align 8, !dbg !8597
  call void %23(i8* %25, i32 1), !dbg !8594
  br label %if.end12, !dbg !8594

if.end12:                                         ; preds = %if.then10, %if.end
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8598
  %call13 = call i32 @render_scene_needs_vector(%struct.Render* %26), !dbg !8600
  %tobool14 = icmp ne i32 %call13, 0, !dbg !8600
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !8601

if.then15:                                        ; preds = %if.end12
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8602
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8604
  %main = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 43, !dbg !8605
  %29 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !8605
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8606
  %scene16 = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 44, !dbg !8607
  %31 = load %struct.Scene*, %struct.Scene** %scene16, align 8, !dbg !8607
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8608
  %lay = getelementptr inbounds %struct.Render, %struct.Render* %32, i32 0, i32 48, !dbg !8609
  %33 = load i32, i32* %lay, align 8, !dbg !8609
  call void @RE_Database_FromScene_Vectors(%struct.Render* %27, %struct.Main* %29, %struct.Scene* %31, i32 %33), !dbg !8610
  br label %if.end20, !dbg !8611

if.else:                                          ; preds = %if.end12
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8612
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8614
  %main17 = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 43, !dbg !8615
  %36 = load %struct.Main*, %struct.Main** %main17, align 8, !dbg !8615
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8616
  %scene18 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 44, !dbg !8617
  %38 = load %struct.Scene*, %struct.Scene** %scene18, align 8, !dbg !8617
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8618
  %lay19 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 48, !dbg !8619
  %40 = load i32, i32* %lay19, align 8, !dbg !8619
  call void @RE_Database_FromScene(%struct.Render* %34, %struct.Main* %36, %struct.Scene* %38, i32 %40, i32 1), !dbg !8620
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8621
  call void @RE_Database_Preprocess(%struct.Render* %41), !dbg !8622
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then15
  %42 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8623
  %draw_lock21 = getelementptr inbounds %struct.Render, %struct.Render* %42, i32 0, i32 94, !dbg !8625
  %43 = load void (i8*, i32)*, void (i8*, i32)** %draw_lock21, align 8, !dbg !8625
  %tobool22 = icmp ne void (i8*, i32)* %43, null, !dbg !8623
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !8626

if.then23:                                        ; preds = %if.end20
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8627
  %draw_lock24 = getelementptr inbounds %struct.Render, %struct.Render* %44, i32 0, i32 94, !dbg !8628
  %45 = load void (i8*, i32)*, void (i8*, i32)** %draw_lock24, align 8, !dbg !8628
  %46 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8629
  %dlh25 = getelementptr inbounds %struct.Render, %struct.Render* %46, i32 0, i32 95, !dbg !8630
  %47 = load i8*, i8** %dlh25, align 8, !dbg !8630
  call void %45(i8* %47, i32 0), !dbg !8627
  br label %if.end26, !dbg !8627

if.end26:                                         ; preds = %if.then23, %if.end20
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8631
  call void @threaded_tile_processor(%struct.Render* %48), !dbg !8632
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8633
  %flag = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 4, !dbg !8635
  %50 = load i16, i16* %flag, align 8, !dbg !8635
  %conv27 = sext i16 %50 to i32, !dbg !8633
  %and = and i32 %conv27, 2, !dbg !8636
  %tobool28 = icmp ne i32 %and, 0, !dbg !8636
  br i1 %tobool28, label %if.then29, label %if.end34, !dbg !8637

if.then29:                                        ; preds = %if.end26
  %51 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8638
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %51, i32 0, i32 96, !dbg !8640
  %52 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !8640
  %53 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8641
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %53, i32 0, i32 97, !dbg !8642
  %54 = load i8*, i8** %tbh, align 8, !dbg !8642
  %call30 = call i32 %52(i8* %54), !dbg !8638
  %tobool31 = icmp ne i32 %call30, 0, !dbg !8638
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !8643

if.then32:                                        ; preds = %if.then29
  %55 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8644
  call void @add_halo_flare(%struct.Render* %55), !dbg !8645
  br label %if.end33, !dbg !8645

if.end33:                                         ; preds = %if.then32, %if.then29
  br label %if.end34, !dbg !8646

if.end34:                                         ; preds = %if.end33, %if.end26
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8647
  call void @RE_Database_Free(%struct.Render* %56), !dbg !8648
  %57 = load i32, i32* %cfra_backup, align 4, !dbg !8649
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8650
  %scene35 = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 44, !dbg !8651
  %59 = load %struct.Scene*, %struct.Scene** %scene35, align 8, !dbg !8651
  %r36 = getelementptr inbounds %struct.Scene, %struct.Scene* %59, i32 0, i32 22, !dbg !8652
  %cfra37 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r36, i32 0, i32 5, !dbg !8653
  store i32 %57, i32* %cfra37, align 8, !dbg !8654
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8655
  %scene38 = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 44, !dbg !8656
  %61 = load %struct.Scene*, %struct.Scene** %scene38, align 8, !dbg !8656
  %r39 = getelementptr inbounds %struct.Scene, %struct.Scene* %61, i32 0, i32 22, !dbg !8657
  %subframe = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r39, i32 0, i32 8, !dbg !8658
  store float 0.000000e+00, float* %subframe, align 4, !dbg !8659
  br label %return, !dbg !8660

return:                                           ; preds = %if.end34, %if.then
  ret void, !dbg !8660
}

declare dso_local void @BKE_image_pool_free(%struct.ImagePool*) #2

declare dso_local zeroext i8 @render_result_exr_file_cache_read(%struct.Render*) #2

declare dso_local i32 @BKE_render_num_threads(%struct.RenderData*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_layer_load_from_file(%struct.RenderLayer* %layer, %struct.ReportList* %reports, i8* %filename, i32 %x, i32 %y) #0 !dbg !8661 {
entry:
  %layer.addr = alloca %struct.RenderLayer*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %filename.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %ibuf_clip = alloca %struct.ImBuf*, align 8
  store %struct.RenderLayer* %layer, %struct.RenderLayer** %layer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %layer.addr, metadata !8664, metadata !DIExpression()), !dbg !8665
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !8666, metadata !DIExpression()), !dbg !8667
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !8668, metadata !DIExpression()), !dbg !8669
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8670, metadata !DIExpression()), !dbg !8671
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8672, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !8674, metadata !DIExpression()), !dbg !8675
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !8676
  %call = call %struct.ImBuf* @IMB_loadiffname(i8* %0, i32 1, i8* null), !dbg !8677
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !8675
  %1 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8678
  %tobool = icmp ne %struct.ImBuf* %1, null, !dbg !8678
  br i1 %tobool, label %land.lhs.true, label %if.else52, !dbg !8680

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8681
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %2, i32 0, i32 8, !dbg !8682
  %3 = load i32*, i32** %rect, align 8, !dbg !8682
  %tobool1 = icmp ne i32* %3, null, !dbg !8681
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !8683

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8684
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 9, !dbg !8685
  %5 = load float*, float** %rect_float, align 8, !dbg !8685
  %tobool2 = icmp ne float* %5, null, !dbg !8684
  br i1 %tobool2, label %if.then, label %if.else52, !dbg !8686

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8687
  %x3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %6, i32 0, i32 2, !dbg !8690
  %7 = load i32, i32* %x3, align 8, !dbg !8690
  %8 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8691
  %rectx = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %8, i32 0, i32 15, !dbg !8692
  %9 = load i32, i32* %rectx, align 8, !dbg !8692
  %cmp = icmp eq i32 %7, %9, !dbg !8693
  br i1 %cmp, label %land.lhs.true4, label %if.else, !dbg !8694

land.lhs.true4:                                   ; preds = %if.then
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8695
  %y5 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %10, i32 0, i32 3, !dbg !8696
  %11 = load i32, i32* %y5, align 4, !dbg !8696
  %12 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8697
  %recty = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %12, i32 0, i32 16, !dbg !8698
  %13 = load i32, i32* %recty, align 4, !dbg !8698
  %cmp6 = icmp eq i32 %11, %13, !dbg !8699
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !8700

if.then7:                                         ; preds = %land.lhs.true4
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8701
  %rect_float8 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %14, i32 0, i32 9, !dbg !8704
  %15 = load float*, float** %rect_float8, align 8, !dbg !8704
  %cmp9 = icmp eq float* %15, null, !dbg !8705
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !8706

if.then10:                                        ; preds = %if.then7
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8707
  call void @IMB_float_from_rect(%struct.ImBuf* %16), !dbg !8708
  br label %if.end, !dbg !8708

if.end:                                           ; preds = %if.then10, %if.then7
  %17 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8709
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %17, i32 0, i32 11, !dbg !8710
  %18 = load float*, float** %rectf, align 8, !dbg !8710
  %19 = bitcast float* %18 to i8*, !dbg !8711
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8712
  %rect_float11 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %20, i32 0, i32 9, !dbg !8713
  %21 = load float*, float** %rect_float11, align 8, !dbg !8713
  %22 = bitcast float* %21 to i8*, !dbg !8711
  %23 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8714
  %rectx12 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %23, i32 0, i32 15, !dbg !8715
  %24 = load i32, i32* %rectx12, align 8, !dbg !8715
  %conv = sext i32 %24 to i64, !dbg !8714
  %mul = mul i64 16, %conv, !dbg !8716
  %25 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8717
  %recty13 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %25, i32 0, i32 16, !dbg !8718
  %26 = load i32, i32* %recty13, align 4, !dbg !8718
  %conv14 = sext i32 %26 to i64, !dbg !8717
  %mul15 = mul i64 %mul, %conv14, !dbg !8719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %22, i64 %mul15, i1 false), !dbg !8711
  br label %if.end51, !dbg !8720

if.else:                                          ; preds = %land.lhs.true4, %if.then
  %27 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8721
  %x16 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %27, i32 0, i32 2, !dbg !8724
  %28 = load i32, i32* %x16, align 8, !dbg !8724
  %29 = load i32, i32* %x.addr, align 4, !dbg !8725
  %sub = sub nsw i32 %28, %29, !dbg !8726
  %30 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8727
  %rectx17 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %30, i32 0, i32 15, !dbg !8728
  %31 = load i32, i32* %rectx17, align 8, !dbg !8728
  %cmp18 = icmp sge i32 %sub, %31, !dbg !8729
  br i1 %cmp18, label %land.lhs.true20, label %if.else49, !dbg !8730

land.lhs.true20:                                  ; preds = %if.else
  %32 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8731
  %y21 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %32, i32 0, i32 3, !dbg !8732
  %33 = load i32, i32* %y21, align 4, !dbg !8732
  %34 = load i32, i32* %y.addr, align 4, !dbg !8733
  %sub22 = sub nsw i32 %33, %34, !dbg !8734
  %35 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8735
  %recty23 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %35, i32 0, i32 16, !dbg !8736
  %36 = load i32, i32* %recty23, align 4, !dbg !8736
  %cmp24 = icmp sge i32 %sub22, %36, !dbg !8737
  br i1 %cmp24, label %if.then26, label %if.else49, !dbg !8738

if.then26:                                        ; preds = %land.lhs.true20
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf_clip, metadata !8739, metadata !DIExpression()), !dbg !8741
  %37 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8742
  %rect_float27 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %37, i32 0, i32 9, !dbg !8744
  %38 = load float*, float** %rect_float27, align 8, !dbg !8744
  %cmp28 = icmp eq float* %38, null, !dbg !8745
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !8746

if.then30:                                        ; preds = %if.then26
  %39 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8747
  call void @IMB_float_from_rect(%struct.ImBuf* %39), !dbg !8748
  br label %if.end31, !dbg !8748

if.end31:                                         ; preds = %if.then30, %if.then26
  %40 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8749
  %rectx32 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %40, i32 0, i32 15, !dbg !8750
  %41 = load i32, i32* %rectx32, align 8, !dbg !8750
  %42 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8751
  %recty33 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %42, i32 0, i32 16, !dbg !8752
  %43 = load i32, i32* %recty33, align 4, !dbg !8752
  %call34 = call %struct.ImBuf* @IMB_allocImBuf(i32 %41, i32 %43, i8 zeroext 32, i32 32), !dbg !8753
  store %struct.ImBuf* %call34, %struct.ImBuf** %ibuf_clip, align 8, !dbg !8754
  %44 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_clip, align 8, !dbg !8755
  %tobool35 = icmp ne %struct.ImBuf* %44, null, !dbg !8755
  br i1 %tobool35, label %if.then36, label %if.else47, !dbg !8757

if.then36:                                        ; preds = %if.end31
  %45 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_clip, align 8, !dbg !8758
  %46 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8760
  %47 = load i32, i32* %x.addr, align 4, !dbg !8761
  %48 = load i32, i32* %y.addr, align 4, !dbg !8762
  %49 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8763
  %rectx37 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %49, i32 0, i32 15, !dbg !8764
  %50 = load i32, i32* %rectx37, align 8, !dbg !8764
  %51 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8765
  %recty38 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %51, i32 0, i32 16, !dbg !8766
  %52 = load i32, i32* %recty38, align 4, !dbg !8766
  call void @IMB_rectcpy(%struct.ImBuf* %45, %struct.ImBuf* %46, i32 0, i32 0, i32 %47, i32 %48, i32 %50, i32 %52), !dbg !8767
  %53 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8768
  %rectf39 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %53, i32 0, i32 11, !dbg !8769
  %54 = load float*, float** %rectf39, align 8, !dbg !8769
  %55 = bitcast float* %54 to i8*, !dbg !8770
  %56 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_clip, align 8, !dbg !8771
  %rect_float40 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %56, i32 0, i32 9, !dbg !8772
  %57 = load float*, float** %rect_float40, align 8, !dbg !8772
  %58 = bitcast float* %57 to i8*, !dbg !8770
  %59 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8773
  %rectx41 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %59, i32 0, i32 15, !dbg !8774
  %60 = load i32, i32* %rectx41, align 8, !dbg !8774
  %conv42 = sext i32 %60 to i64, !dbg !8773
  %mul43 = mul i64 16, %conv42, !dbg !8775
  %61 = load %struct.RenderLayer*, %struct.RenderLayer** %layer.addr, align 8, !dbg !8776
  %recty44 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %61, i32 0, i32 16, !dbg !8777
  %62 = load i32, i32* %recty44, align 4, !dbg !8777
  %conv45 = sext i32 %62 to i64, !dbg !8776
  %mul46 = mul i64 %mul43, %conv45, !dbg !8778
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %58, i64 %mul46, i1 false), !dbg !8770
  %63 = load %struct.ImBuf*, %struct.ImBuf** %ibuf_clip, align 8, !dbg !8779
  call void @IMB_freeImBuf(%struct.ImBuf* %63), !dbg !8780
  br label %if.end48, !dbg !8781

if.else47:                                        ; preds = %if.end31
  %64 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !8782
  %65 = load i8*, i8** %filename.addr, align 8, !dbg !8784
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %64, i32 32, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.16, i64 0, i64 0), i8* %65), !dbg !8785
  br label %if.end48

if.end48:                                         ; preds = %if.else47, %if.then36
  br label %if.end50, !dbg !8786

if.else49:                                        ; preds = %land.lhs.true20, %if.else
  %66 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !8787
  %67 = load i8*, i8** %filename.addr, align 8, !dbg !8789
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %66, i32 32, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.17, i64 0, i64 0), i8* %67), !dbg !8790
  br label %if.end50

if.end50:                                         ; preds = %if.else49, %if.end48
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end
  %68 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8791
  call void @IMB_freeImBuf(%struct.ImBuf* %68), !dbg !8792
  br label %if.end53, !dbg !8793

if.else52:                                        ; preds = %lor.lhs.false, %entry
  %69 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !8794
  %70 = load i8*, i8** %filename.addr, align 8, !dbg !8796
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %69, i32 32, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.18, i64 0, i64 0), i8* %70), !dbg !8797
  br label %if.end53

if.end53:                                         ; preds = %if.else52, %if.end51
  ret void, !dbg !8798
}

declare dso_local %struct.ImBuf* @IMB_loadiffname(i8*, i32, i8*) #2

declare dso_local void @IMB_float_from_rect(%struct.ImBuf*) #2

declare dso_local %struct.ImBuf* @IMB_allocImBuf(i32, i32, i8 zeroext, i32) #2

declare dso_local void @IMB_rectcpy(%struct.ImBuf*, %struct.ImBuf*, i32, i32, i32, i32, i32, i32) #2

declare dso_local void @IMB_freeImBuf(%struct.ImBuf*) #2

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_result_load_from_file(%struct.RenderResult* %result, %struct.ReportList* %reports, i8* %filename) #0 !dbg !8799 {
entry:
  %result.addr = alloca %struct.RenderResult*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %filename.addr = alloca i8*, align 8
  store %struct.RenderResult* %result, %struct.RenderResult** %result.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %result.addr, metadata !8802, metadata !DIExpression()), !dbg !8803
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !8804, metadata !DIExpression()), !dbg !8805
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !8806, metadata !DIExpression()), !dbg !8807
  %0 = load %struct.RenderResult*, %struct.RenderResult** %result.addr, align 8, !dbg !8808
  %1 = load i8*, i8** %filename.addr, align 8, !dbg !8810
  %call = call i32 @render_result_exr_file_read_path(%struct.RenderResult* %0, %struct.RenderLayer* null, i8* %1), !dbg !8811
  %tobool = icmp ne i32 %call, 0, !dbg !8811
  br i1 %tobool, label %if.end, label %if.then, !dbg !8812

if.then:                                          ; preds = %entry
  %2 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !8813
  %3 = load i8*, i8** %filename.addr, align 8, !dbg !8815
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %2, i32 32, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.18, i64 0, i64 0), i8* %3), !dbg !8816
  br label %if.end, !dbg !8817

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8818
}

declare dso_local i32 @render_result_exr_file_read_path(%struct.RenderResult*, %struct.RenderLayer*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @RE_WriteEnvmapResult(%struct.ReportList* %reports, %struct.Scene* %scene, %struct.EnvMap* %env, i8* %relpath, i8 zeroext %imtype, float* %layout) #0 !dbg !8819 {
entry:
  %retval = alloca i8, align 1
  %reports.addr = alloca %struct.ReportList*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %env.addr = alloca %struct.EnvMap*, align 8
  %relpath.addr = alloca i8*, align 8
  %imtype.addr = alloca i8, align 1
  %layout.addr = alloca float*, align 8
  %imf = alloca %struct.ImageFormatData, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %ok = alloca i32, align 4
  %dx = alloca i32, align 4
  %maxX = alloca i32, align 4
  %maxY = alloca i32, align 4
  %i = alloca i32, align 4
  %filepath = alloca [1024 x i8], align 16
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !8824, metadata !DIExpression()), !dbg !8825
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8826, metadata !DIExpression()), !dbg !8827
  store %struct.EnvMap* %env, %struct.EnvMap** %env.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnvMap** %env.addr, metadata !8828, metadata !DIExpression()), !dbg !8829
  store i8* %relpath, i8** %relpath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %relpath.addr, metadata !8830, metadata !DIExpression()), !dbg !8831
  store i8 %imtype, i8* %imtype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %imtype.addr, metadata !8832, metadata !DIExpression()), !dbg !8833
  store float* %layout, float** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata float** %layout.addr, metadata !8834, metadata !DIExpression()), !dbg !8835
  call void @llvm.dbg.declare(metadata %struct.ImageFormatData* %imf, metadata !8836, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !8838, metadata !DIExpression()), !dbg !8839
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !8839
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !8840, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.declare(metadata i32* %dx, metadata !8842, metadata !DIExpression()), !dbg !8843
  call void @llvm.dbg.declare(metadata i32* %maxX, metadata !8844, metadata !DIExpression()), !dbg !8845
  store i32 0, i32* %maxX, align 4, !dbg !8845
  call void @llvm.dbg.declare(metadata i32* %maxY, metadata !8846, metadata !DIExpression()), !dbg !8847
  store i32 0, i32* %maxY, align 4, !dbg !8847
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8848, metadata !DIExpression()), !dbg !8849
  store i32 0, i32* %i, align 4, !dbg !8849
  call void @llvm.dbg.declare(metadata [1024 x i8]* %filepath, metadata !8850, metadata !DIExpression()), !dbg !8851
  %0 = load %struct.EnvMap*, %struct.EnvMap** %env.addr, align 8, !dbg !8852
  %cube = getelementptr inbounds %struct.EnvMap, %struct.EnvMap* %0, i32 0, i32 2, !dbg !8854
  %arrayidx = getelementptr inbounds [6 x %struct.ImBuf*], [6 x %struct.ImBuf*]* %cube, i64 0, i64 1, !dbg !8852
  %1 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx, align 8, !dbg !8852
  %cmp = icmp eq %struct.ImBuf* %1, null, !dbg !8855
  br i1 %cmp, label %if.then, label %if.end, !dbg !8856

if.then:                                          ; preds = %entry
  %2 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !8857
  call void @BKE_report(%struct.ReportList* %2, i32 32, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.19, i64 0, i64 0)), !dbg !8859
  store i8 0, i8* %retval, align 1, !dbg !8860
  br label %return, !dbg !8860

if.end:                                           ; preds = %entry
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8861
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 22, !dbg !8862
  %im_format = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 0, !dbg !8863
  %4 = bitcast %struct.ImageFormatData* %imf to i8*, !dbg !8863
  %5 = bitcast %struct.ImageFormatData* %im_format to i8*, !dbg !8863
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 248, i1 false), !dbg !8863
  %6 = load i8, i8* %imtype.addr, align 1, !dbg !8864
  %imtype1 = getelementptr inbounds %struct.ImageFormatData, %struct.ImageFormatData* %imf, i32 0, i32 0, !dbg !8865
  store i8 %6, i8* %imtype1, align 8, !dbg !8866
  %7 = load %struct.EnvMap*, %struct.EnvMap** %env.addr, align 8, !dbg !8867
  %cube2 = getelementptr inbounds %struct.EnvMap, %struct.EnvMap* %7, i32 0, i32 2, !dbg !8868
  %arrayidx3 = getelementptr inbounds [6 x %struct.ImBuf*], [6 x %struct.ImBuf*]* %cube2, i64 0, i64 1, !dbg !8867
  %8 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx3, align 8, !dbg !8867
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 2, !dbg !8869
  %9 = load i32, i32* %x, align 8, !dbg !8869
  store i32 %9, i32* %dx, align 4, !dbg !8870
  %10 = load %struct.EnvMap*, %struct.EnvMap** %env.addr, align 8, !dbg !8871
  %type = getelementptr inbounds %struct.EnvMap, %struct.EnvMap* %10, i32 0, i32 5, !dbg !8873
  %11 = load i16, i16* %type, align 4, !dbg !8873
  %conv = sext i16 %11 to i32, !dbg !8871
  %cmp4 = icmp eq i32 %conv, 0, !dbg !8874
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !8875

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8876
  br label %for.cond, !dbg !8879

for.cond:                                         ; preds = %for.inc, %if.then6
  %12 = load i32, i32* %i, align 4, !dbg !8880
  %cmp7 = icmp slt i32 %12, 12, !dbg !8882
  br i1 %cmp7, label %for.body, label %for.end, !dbg !8883

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %maxX, align 4, !dbg !8884
  %14 = load float*, float** %layout.addr, align 8, !dbg !8886
  %15 = load i32, i32* %i, align 4, !dbg !8887
  %idxprom = sext i32 %15 to i64, !dbg !8886
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 %idxprom, !dbg !8886
  %16 = load float, float* %arrayidx9, align 4, !dbg !8886
  %conv10 = fptosi float %16 to i32, !dbg !8888
  %add = add nsw i32 %conv10, 1, !dbg !8889
  %call = call i32 @max_ii(i32 %13, i32 %add), !dbg !8890
  store i32 %call, i32* %maxX, align 4, !dbg !8891
  %17 = load i32, i32* %maxY, align 4, !dbg !8892
  %18 = load float*, float** %layout.addr, align 8, !dbg !8893
  %19 = load i32, i32* %i, align 4, !dbg !8894
  %add11 = add nsw i32 %19, 1, !dbg !8895
  %idxprom12 = sext i32 %add11 to i64, !dbg !8893
  %arrayidx13 = getelementptr inbounds float, float* %18, i64 %idxprom12, !dbg !8893
  %20 = load float, float* %arrayidx13, align 4, !dbg !8893
  %conv14 = fptosi float %20 to i32, !dbg !8896
  %add15 = add nsw i32 %conv14, 1, !dbg !8897
  %call16 = call i32 @max_ii(i32 %17, i32 %add15), !dbg !8898
  store i32 %call16, i32* %maxY, align 4, !dbg !8899
  br label %for.inc, !dbg !8900

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !8901
  %add17 = add nsw i32 %21, 2, !dbg !8901
  store i32 %add17, i32* %i, align 4, !dbg !8901
  br label %for.cond, !dbg !8902, !llvm.loop !8903

for.end:                                          ; preds = %for.cond
  %22 = load i32, i32* %maxX, align 4, !dbg !8905
  %23 = load i32, i32* %dx, align 4, !dbg !8906
  %mul = mul nsw i32 %22, %23, !dbg !8907
  %24 = load i32, i32* %maxY, align 4, !dbg !8908
  %25 = load i32, i32* %dx, align 4, !dbg !8909
  %mul18 = mul nsw i32 %24, %25, !dbg !8910
  %call19 = call %struct.ImBuf* @IMB_allocImBuf(i32 %mul, i32 %mul18, i8 zeroext 24, i32 32), !dbg !8911
  store %struct.ImBuf* %call19, %struct.ImBuf** %ibuf, align 8, !dbg !8912
  store i32 0, i32* %i, align 4, !dbg !8913
  br label %for.cond20, !dbg !8915

for.cond20:                                       ; preds = %for.inc49, %for.end
  %26 = load i32, i32* %i, align 4, !dbg !8916
  %cmp21 = icmp slt i32 %26, 12, !dbg !8918
  br i1 %cmp21, label %for.body23, label %for.end51, !dbg !8919

for.body23:                                       ; preds = %for.cond20
  %27 = load float*, float** %layout.addr, align 8, !dbg !8920
  %28 = load i32, i32* %i, align 4, !dbg !8922
  %idxprom24 = sext i32 %28 to i64, !dbg !8920
  %arrayidx25 = getelementptr inbounds float, float* %27, i64 %idxprom24, !dbg !8920
  %29 = load float, float* %arrayidx25, align 4, !dbg !8920
  %cmp26 = fcmp ogt float %29, -1.000000e+00, !dbg !8923
  br i1 %cmp26, label %land.lhs.true, label %if.end48, !dbg !8924

land.lhs.true:                                    ; preds = %for.body23
  %30 = load float*, float** %layout.addr, align 8, !dbg !8925
  %31 = load i32, i32* %i, align 4, !dbg !8926
  %add28 = add nsw i32 %31, 1, !dbg !8927
  %idxprom29 = sext i32 %add28 to i64, !dbg !8925
  %arrayidx30 = getelementptr inbounds float, float* %30, i64 %idxprom29, !dbg !8925
  %32 = load float, float* %arrayidx30, align 4, !dbg !8925
  %cmp31 = fcmp ogt float %32, -1.000000e+00, !dbg !8928
  br i1 %cmp31, label %if.then33, label %if.end48, !dbg !8929

if.then33:                                        ; preds = %land.lhs.true
  %33 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8930
  %34 = load %struct.EnvMap*, %struct.EnvMap** %env.addr, align 8, !dbg !8931
  %cube34 = getelementptr inbounds %struct.EnvMap, %struct.EnvMap* %34, i32 0, i32 2, !dbg !8932
  %35 = load i32, i32* %i, align 4, !dbg !8933
  %div = sdiv i32 %35, 2, !dbg !8934
  %idxprom35 = sext i32 %div to i64, !dbg !8931
  %arrayidx36 = getelementptr inbounds [6 x %struct.ImBuf*], [6 x %struct.ImBuf*]* %cube34, i64 0, i64 %idxprom35, !dbg !8931
  %36 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx36, align 8, !dbg !8931
  %37 = load float*, float** %layout.addr, align 8, !dbg !8935
  %38 = load i32, i32* %i, align 4, !dbg !8936
  %idxprom37 = sext i32 %38 to i64, !dbg !8935
  %arrayidx38 = getelementptr inbounds float, float* %37, i64 %idxprom37, !dbg !8935
  %39 = load float, float* %arrayidx38, align 4, !dbg !8935
  %40 = load i32, i32* %dx, align 4, !dbg !8937
  %conv39 = sitofp i32 %40 to float, !dbg !8937
  %mul40 = fmul float %39, %conv39, !dbg !8938
  %conv41 = fptosi float %mul40 to i32, !dbg !8935
  %41 = load float*, float** %layout.addr, align 8, !dbg !8939
  %42 = load i32, i32* %i, align 4, !dbg !8940
  %add42 = add nsw i32 %42, 1, !dbg !8941
  %idxprom43 = sext i32 %add42 to i64, !dbg !8939
  %arrayidx44 = getelementptr inbounds float, float* %41, i64 %idxprom43, !dbg !8939
  %43 = load float, float* %arrayidx44, align 4, !dbg !8939
  %44 = load i32, i32* %dx, align 4, !dbg !8942
  %conv45 = sitofp i32 %44 to float, !dbg !8942
  %mul46 = fmul float %43, %conv45, !dbg !8943
  %conv47 = fptosi float %mul46 to i32, !dbg !8939
  %45 = load i32, i32* %dx, align 4, !dbg !8944
  %46 = load i32, i32* %dx, align 4, !dbg !8945
  call void @IMB_rectcpy(%struct.ImBuf* %33, %struct.ImBuf* %36, i32 %conv41, i32 %conv47, i32 0, i32 0, i32 %45, i32 %46), !dbg !8946
  br label %if.end48, !dbg !8946

if.end48:                                         ; preds = %if.then33, %land.lhs.true, %for.body23
  br label %for.inc49, !dbg !8947

for.inc49:                                        ; preds = %if.end48
  %47 = load i32, i32* %i, align 4, !dbg !8948
  %add50 = add nsw i32 %47, 2, !dbg !8948
  store i32 %add50, i32* %i, align 4, !dbg !8948
  br label %for.cond20, !dbg !8949, !llvm.loop !8950

for.end51:                                        ; preds = %for.cond20
  br label %if.end62, !dbg !8952

if.else:                                          ; preds = %if.end
  %48 = load %struct.EnvMap*, %struct.EnvMap** %env.addr, align 8, !dbg !8953
  %type52 = getelementptr inbounds %struct.EnvMap, %struct.EnvMap* %48, i32 0, i32 5, !dbg !8955
  %49 = load i16, i16* %type52, align 4, !dbg !8955
  %conv53 = sext i16 %49 to i32, !dbg !8953
  %cmp54 = icmp eq i32 %conv53, 1, !dbg !8956
  br i1 %cmp54, label %if.then56, label %if.else60, !dbg !8957

if.then56:                                        ; preds = %if.else
  %50 = load i32, i32* %dx, align 4, !dbg !8958
  %51 = load i32, i32* %dx, align 4, !dbg !8960
  %call57 = call %struct.ImBuf* @IMB_allocImBuf(i32 %50, i32 %51, i8 zeroext 24, i32 32), !dbg !8961
  store %struct.ImBuf* %call57, %struct.ImBuf** %ibuf, align 8, !dbg !8962
  %52 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8963
  %53 = load %struct.EnvMap*, %struct.EnvMap** %env.addr, align 8, !dbg !8964
  %cube58 = getelementptr inbounds %struct.EnvMap, %struct.EnvMap* %53, i32 0, i32 2, !dbg !8965
  %arrayidx59 = getelementptr inbounds [6 x %struct.ImBuf*], [6 x %struct.ImBuf*]* %cube58, i64 0, i64 1, !dbg !8964
  %54 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx59, align 8, !dbg !8964
  %55 = load i32, i32* %dx, align 4, !dbg !8966
  %56 = load i32, i32* %dx, align 4, !dbg !8967
  call void @IMB_rectcpy(%struct.ImBuf* %52, %struct.ImBuf* %54, i32 0, i32 0, i32 0, i32 0, i32 %55, i32 %56), !dbg !8968
  br label %if.end61, !dbg !8969

if.else60:                                        ; preds = %if.else
  %57 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !8970
  call void @BKE_report(%struct.ReportList* %57, i32 32, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0)), !dbg !8972
  store i8 0, i8* %retval, align 1, !dbg !8973
  br label %return, !dbg !8973

if.end61:                                         ; preds = %if.then56
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %for.end51
  %58 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8974
  %59 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8975
  %view_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %59, i32 0, i32 44, !dbg !8976
  %60 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8977
  %display_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %60, i32 0, i32 45, !dbg !8978
  %call63 = call %struct.ImBuf* @IMB_colormanagement_imbuf_for_write(%struct.ImBuf* %58, i8 zeroext 1, i8 zeroext 0, %struct.ColorManagedViewSettings* %view_settings, %struct.ColorManagedDisplaySettings* %display_settings, %struct.ImageFormatData* %imf), !dbg !8979
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !8980
  %61 = load i8*, i8** %relpath.addr, align 8, !dbg !8981
  %call64 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %61, i64 1024), !dbg !8982
  %arraydecay65 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !8983
  %62 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !8984
  %name = getelementptr inbounds %struct.Main, %struct.Main* %62, i32 0, i32 2, !dbg !8985
  %arraydecay66 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !8986
  %call67 = call zeroext i8 @BLI_path_abs(i8* %arraydecay65, i8* %arraydecay66), !dbg !8987
  %63 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8988
  %arraydecay68 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !8989
  %call69 = call i32 @BKE_imbuf_write(%struct.ImBuf* %63, i8* %arraydecay68, %struct.ImageFormatData* %imf), !dbg !8990
  store i32 %call69, i32* %ok, align 4, !dbg !8991
  %64 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !8992
  call void @IMB_freeImBuf(%struct.ImBuf* %64), !dbg !8993
  %65 = load i32, i32* %ok, align 4, !dbg !8994
  %tobool = icmp ne i32 %65, 0, !dbg !8994
  br i1 %tobool, label %if.then70, label %if.else71, !dbg !8996

if.then70:                                        ; preds = %if.end62
  store i8 1, i8* %retval, align 1, !dbg !8997
  br label %return, !dbg !8997

if.else71:                                        ; preds = %if.end62
  %66 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !8999
  call void @BKE_report(%struct.ReportList* %66, i32 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21, i64 0, i64 0)), !dbg !9001
  store i8 0, i8* %retval, align 1, !dbg !9002
  br label %return, !dbg !9002

return:                                           ; preds = %if.else71, %if.then70, %if.else60, %if.then
  %67 = load i8, i8* %retval, align 1, !dbg !9003
  ret i8 %67, !dbg !9003
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !9004 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9008, metadata !DIExpression()), !dbg !9009
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !9010, metadata !DIExpression()), !dbg !9011
  %0 = load i32, i32* %b.addr, align 4, !dbg !9012
  %1 = load i32, i32* %a.addr, align 4, !dbg !9013
  %cmp = icmp slt i32 %0, %1, !dbg !9014
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9015

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !9016
  br label %cond.end, !dbg !9015

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !9017
  br label %cond.end, !dbg !9015

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9015
  ret i32 %cond, !dbg !9018
}

declare dso_local %struct.ImBuf* @IMB_colormanagement_imbuf_for_write(%struct.ImBuf*, i8 zeroext, i8 zeroext, %struct.ColorManagedViewSettings*, %struct.ColorManagedDisplaySettings*, %struct.ImageFormatData*) #2

declare dso_local zeroext i8 @BLI_path_abs(i8*, i8*) #2

declare dso_local i32 @BKE_imbuf_write(%struct.ImBuf*, i8*, %struct.ImageFormatData*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_y(%struct.rcti* %rct) #0 !dbg !9019 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !9020, metadata !DIExpression()), !dbg !9021
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !9022
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 3, !dbg !9023
  %1 = load i32, i32* %ymax, align 4, !dbg !9023
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !9024
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 2, !dbg !9025
  %3 = load i32, i32* %ymin, align 4, !dbg !9025
  %sub = sub nsw i32 %1, %3, !dbg !9026
  ret i32 %sub, !dbg !9027
}

declare dso_local %struct.RenderResult* @render_result_new(%struct.Render*, %struct.rcti*, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !9028 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9033, metadata !DIExpression()), !dbg !9034
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9035, metadata !DIExpression()), !dbg !9036
  %0 = load float*, float** %a.addr, align 8, !dbg !9037
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9037
  %1 = load float, float* %arrayidx, align 4, !dbg !9037
  %2 = load float*, float** %r.addr, align 8, !dbg !9038
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9038
  store float %1, float* %arrayidx1, align 4, !dbg !9039
  %3 = load float*, float** %a.addr, align 8, !dbg !9040
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !9040
  %4 = load float, float* %arrayidx2, align 4, !dbg !9040
  %5 = load float*, float** %r.addr, align 8, !dbg !9041
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9041
  store float %4, float* %arrayidx3, align 4, !dbg !9042
  %6 = load float*, float** %a.addr, align 8, !dbg !9043
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !9043
  %7 = load float, float* %arrayidx4, align 4, !dbg !9043
  %8 = load float*, float** %r.addr, align 8, !dbg !9044
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9044
  store float %7, float* %arrayidx5, align 4, !dbg !9045
  %9 = load float*, float** %a.addr, align 8, !dbg !9046
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !9046
  %10 = load float, float* %arrayidx6, align 4, !dbg !9046
  %11 = load float*, float** %r.addr, align 8, !dbg !9047
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !9047
  store float %10, float* %arrayidx7, align 4, !dbg !9048
  ret void, !dbg !9049
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @render_display_update_enabled(%struct.Render* %re) #0 !dbg !9050 {
entry:
  %retval = alloca i32, align 4
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !9053, metadata !DIExpression()), !dbg !9054
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9055
  %sss_points = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 75, !dbg !9057
  %1 = load %struct.ListBase*, %struct.ListBase** %sss_points, align 8, !dbg !9057
  %tobool = icmp ne %struct.ListBase* %1, null, !dbg !9055
  br i1 %tobool, label %if.then, label %if.else, !dbg !9058

if.then:                                          ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9059
  %r = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 45, !dbg !9060
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !9061
  %3 = load i32, i32* %scemode, align 4, !dbg !9061
  %and = and i32 %3, 524296, !dbg !9062
  %tobool1 = icmp ne i32 %and, 0, !dbg !9063
  %lnot = xor i1 %tobool1, true, !dbg !9063
  %lnot.ext = zext i1 %lnot to i32, !dbg !9063
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !9064
  br label %return, !dbg !9064

if.else:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !9065
  br label %return, !dbg !9065

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !9066
  ret i32 %4, !dbg !9066
}

declare dso_local %struct.RenderResult* @render_result_new_full_sample(%struct.Render*, %struct.ListBase*, %struct.rcti*, i32, i32) #2

declare dso_local void @RE_parts_init(%struct.Render*, i8 zeroext) #2

declare dso_local void @render_result_exr_file_begin(%struct.Render*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @thread_break(i8* %UNUSED_arg) #0 !dbg !9067 {
entry:
  %UNUSED_arg.addr = alloca i8*, align 8
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !9068, metadata !DIExpression()), !dbg !9069
  %0 = load volatile i32, i32* @g_break, align 4, !dbg !9070
  ret i32 %0, !dbg !9071
}

declare dso_local %struct.ThreadQueue* @BLI_thread_queue_init() #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @find_next_pano_slice(%struct.Render* %re, i32* %slice, i32* %minx, %struct.rctf* %viewplane) #0 !dbg !9072 {
entry:
  %retval = alloca i8, align 1
  %re.addr = alloca %struct.Render*, align 8
  %slice.addr = alloca i32*, align 8
  %minx.addr = alloca i32*, align 8
  %viewplane.addr = alloca %struct.rctf*, align 8
  %pa = alloca %struct.RenderPart*, align 8
  %best = alloca %struct.RenderPart*, align 8
  %found = alloca i8, align 1
  %phi = alloca float, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !9075, metadata !DIExpression()), !dbg !9076
  store i32* %slice, i32** %slice.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %slice.addr, metadata !9077, metadata !DIExpression()), !dbg !9078
  store i32* %minx, i32** %minx.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %minx.addr, metadata !9079, metadata !DIExpression()), !dbg !9080
  store %struct.rctf* %viewplane, %struct.rctf** %viewplane.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %viewplane.addr, metadata !9081, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa, metadata !9083, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %best, metadata !9085, metadata !DIExpression()), !dbg !9086
  store %struct.RenderPart* null, %struct.RenderPart** %best, align 8, !dbg !9086
  call void @llvm.dbg.declare(metadata i8* %found, metadata !9087, metadata !DIExpression()), !dbg !9088
  store i8 0, i8* %found, align 1, !dbg !9088
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9089
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 13, !dbg !9090
  %1 = load i32, i32* %winx, align 4, !dbg !9090
  %2 = load i32*, i32** %minx.addr, align 8, !dbg !9091
  store i32 %1, i32* %2, align 4, !dbg !9092
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9093
  %r = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 45, !dbg !9095
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !9096
  %4 = load i32, i32* %mode, align 8, !dbg !9096
  %and = and i32 %4, 1024, !dbg !9097
  %tobool = icmp ne i32 %and, 0, !dbg !9097
  br i1 %tobool, label %if.end, label %if.then, !dbg !9098

if.then:                                          ; preds = %entry
  %5 = load i32*, i32** %slice.addr, align 8, !dbg !9099
  %6 = load i32, i32* %5, align 4, !dbg !9101
  %cmp = icmp eq i32 %6, 0, !dbg !9102
  %conv = zext i1 %cmp to i32, !dbg !9102
  %conv1 = trunc i32 %conv to i8, !dbg !9103
  store i8 %conv1, i8* %found, align 1, !dbg !9104
  %7 = load i32*, i32** %slice.addr, align 8, !dbg !9105
  %8 = load i32, i32* %7, align 4, !dbg !9106
  %inc = add nsw i32 %8, 1, !dbg !9106
  store i32 %inc, i32* %7, align 4, !dbg !9106
  %9 = load i8, i8* %found, align 1, !dbg !9107
  store i8 %9, i8* %retval, align 1, !dbg !9108
  br label %return, !dbg !9108

if.end:                                           ; preds = %entry
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9109
  %parts = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 50, !dbg !9111
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %parts, i32 0, i32 0, !dbg !9112
  %11 = load i8*, i8** %first, align 8, !dbg !9112
  %12 = bitcast i8* %11 to %struct.RenderPart*, !dbg !9109
  store %struct.RenderPart* %12, %struct.RenderPart** %pa, align 8, !dbg !9113
  br label %for.cond, !dbg !9114

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9115
  %tobool2 = icmp ne %struct.RenderPart* %13, null, !dbg !9117
  br i1 %tobool2, label %for.body, label %for.end, !dbg !9117

for.body:                                         ; preds = %for.cond
  %14 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9118
  %status = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %14, i32 0, i32 18, !dbg !9121
  %15 = load i16, i16* %status, align 2, !dbg !9121
  %conv3 = sext i16 %15 to i32, !dbg !9118
  %cmp4 = icmp eq i32 %conv3, 0, !dbg !9122
  br i1 %cmp4, label %land.lhs.true, label %if.end15, !dbg !9123

land.lhs.true:                                    ; preds = %for.body
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9124
  %nr = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 16, !dbg !9125
  %17 = load i32, i32* %nr, align 8, !dbg !9125
  %cmp6 = icmp eq i32 %17, 0, !dbg !9126
  br i1 %cmp6, label %if.then8, label %if.end15, !dbg !9127

if.then8:                                         ; preds = %land.lhs.true
  %18 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9128
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %18, i32 0, i32 13, !dbg !9131
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !9132
  %19 = load i32, i32* %xmin, align 8, !dbg !9132
  %20 = load i32*, i32** %minx.addr, align 8, !dbg !9133
  %21 = load i32, i32* %20, align 4, !dbg !9134
  %cmp9 = icmp slt i32 %19, %21, !dbg !9135
  br i1 %cmp9, label %if.then11, label %if.end14, !dbg !9136

if.then11:                                        ; preds = %if.then8
  store i8 1, i8* %found, align 1, !dbg !9137
  %22 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9139
  store %struct.RenderPart* %22, %struct.RenderPart** %best, align 8, !dbg !9140
  %23 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9141
  %disprect12 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %23, i32 0, i32 13, !dbg !9142
  %xmin13 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect12, i32 0, i32 0, !dbg !9143
  %24 = load i32, i32* %xmin13, align 8, !dbg !9143
  %25 = load i32*, i32** %minx.addr, align 8, !dbg !9144
  store i32 %24, i32* %25, align 4, !dbg !9145
  br label %if.end14, !dbg !9146

if.end14:                                         ; preds = %if.then11, %if.then8
  br label %if.end15, !dbg !9147

if.end15:                                         ; preds = %if.end14, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9148

for.inc:                                          ; preds = %if.end15
  %26 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9149
  %next = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %26, i32 0, i32 0, !dbg !9150
  %27 = load %struct.RenderPart*, %struct.RenderPart** %next, align 8, !dbg !9150
  store %struct.RenderPart* %27, %struct.RenderPart** %pa, align 8, !dbg !9151
  br label %for.cond, !dbg !9152, !llvm.loop !9153

for.end:                                          ; preds = %for.cond
  %28 = load %struct.RenderPart*, %struct.RenderPart** %best, align 8, !dbg !9155
  %tobool16 = icmp ne %struct.RenderPart* %28, null, !dbg !9155
  br i1 %tobool16, label %if.then17, label %if.end36, !dbg !9157

if.then17:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata float* %phi, metadata !9158, metadata !DIExpression()), !dbg !9160
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9161
  %call = call float @panorama_pixel_rot(%struct.Render* %29), !dbg !9162
  store float %call, float* %phi, align 4, !dbg !9160
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9163
  %winx18 = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 13, !dbg !9164
  %31 = load i32, i32* %winx18, align 4, !dbg !9164
  %32 = load %struct.RenderPart*, %struct.RenderPart** %best, align 8, !dbg !9165
  %disprect19 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %32, i32 0, i32 13, !dbg !9166
  %xmin20 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect19, i32 0, i32 0, !dbg !9167
  %33 = load i32, i32* %xmin20, align 8, !dbg !9167
  %34 = load %struct.RenderPart*, %struct.RenderPart** %best, align 8, !dbg !9168
  %disprect21 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %34, i32 0, i32 13, !dbg !9169
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect21, i32 0, i32 1, !dbg !9170
  %35 = load i32, i32* %xmax, align 4, !dbg !9170
  %add = add nsw i32 %33, %35, !dbg !9171
  %sub = sub nsw i32 %31, %add, !dbg !9172
  %div = sdiv i32 %sub, 2, !dbg !9173
  %conv22 = sitofp i32 %div to float, !dbg !9174
  store float %conv22, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 28), align 8, !dbg !9175
  %36 = load %struct.rctf*, %struct.rctf** %viewplane.addr, align 8, !dbg !9176
  %call23 = call float @BLI_rctf_size_x(%struct.rctf* %36), !dbg !9177
  %37 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 28), align 8, !dbg !9178
  %mul = fmul float %call23, %37, !dbg !9179
  %38 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9180
  %winx24 = getelementptr inbounds %struct.Render, %struct.Render* %38, i32 0, i32 13, !dbg !9181
  %39 = load i32, i32* %winx24, align 4, !dbg !9181
  %conv25 = sitofp i32 %39 to float, !dbg !9182
  %div26 = fdiv float %mul, %conv25, !dbg !9183
  store float %div26, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 29), align 4, !dbg !9184
  %40 = load %struct.rctf*, %struct.rctf** %viewplane.addr, align 8, !dbg !9185
  %xmin27 = getelementptr inbounds %struct.rctf, %struct.rctf* %40, i32 0, i32 0, !dbg !9186
  %41 = load float, float* %xmin27, align 4, !dbg !9186
  %42 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 29), align 4, !dbg !9187
  %add28 = fadd float %41, %42, !dbg !9188
  store float %add28, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 16, i32 0), align 4, !dbg !9189
  %43 = load %struct.rctf*, %struct.rctf** %viewplane.addr, align 8, !dbg !9190
  %xmax29 = getelementptr inbounds %struct.rctf, %struct.rctf* %43, i32 0, i32 1, !dbg !9191
  %44 = load float, float* %xmax29, align 4, !dbg !9191
  %45 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 29), align 4, !dbg !9192
  %add30 = fadd float %44, %45, !dbg !9193
  store float %add30, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 16, i32 1), align 4, !dbg !9194
  %46 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9195
  %47 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 36), align 8, !dbg !9196
  %48 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 37), align 4, !dbg !9197
  call void @RE_SetWindow(%struct.Render* %46, %struct.rctf* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 16), float %47, float %48), !dbg !9198
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9199
  %winmat = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 35, !dbg !9200
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !9199
  call void @copy_m4_m4([4 x float]* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 35, i64 0), [4 x float]* %arraydecay), !dbg !9201
  %50 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9202
  %51 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 28), align 8, !dbg !9203
  %fneg = fneg float %51, !dbg !9204
  %52 = load float, float* %phi, align 4, !dbg !9205
  %mul31 = fmul float %fneg, %52, !dbg !9206
  call void @project_renderdata(%struct.Render* %50, void (float*, [4 x float]*, float*)* @projectverto, i8 zeroext 1, float %mul31, i8 zeroext 1), !dbg !9207
  %53 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 28), align 8, !dbg !9208
  %54 = load float, float* %phi, align 4, !dbg !9209
  %mul32 = fmul float %53, %54, !dbg !9210
  %call33 = call float @sinf(float %mul32) #7, !dbg !9211
  store float %call33, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 26), align 8, !dbg !9212
  %55 = load float, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 28), align 8, !dbg !9213
  %56 = load float, float* %phi, align 4, !dbg !9214
  %mul34 = fmul float %55, %56, !dbg !9215
  %call35 = call float @cosf(float %mul34) #7, !dbg !9216
  store float %call35, float* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 27), align 4, !dbg !9217
  br label %if.end36, !dbg !9218

if.end36:                                         ; preds = %if.then17, %for.end
  %57 = load i32*, i32** %slice.addr, align 8, !dbg !9219
  %58 = load i32, i32* %57, align 4, !dbg !9220
  %inc37 = add nsw i32 %58, 1, !dbg !9220
  store i32 %inc37, i32* %57, align 4, !dbg !9220
  %59 = load i8, i8* %found, align 1, !dbg !9221
  store i8 %59, i8* %retval, align 1, !dbg !9222
  br label %return, !dbg !9222

return:                                           ; preds = %if.end36, %if.then
  %60 = load i8, i8* %retval, align 1, !dbg !9223
  ret i8 %60, !dbg !9223
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.RenderPart* @find_next_part(%struct.Render* %re, i32 %minx) #0 !dbg !9224 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %minx.addr = alloca i32, align 4
  %pa = alloca %struct.RenderPart*, align 8
  %best = alloca %struct.RenderPart*, align 8
  %centx = alloca i64, align 8
  %centy = alloca i64, align 8
  %tot = alloca i64, align 8
  %mindist = alloca i64, align 8
  %distx = alloca i64, align 8
  %disty = alloca i64, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !9227, metadata !DIExpression()), !dbg !9228
  store i32 %minx, i32* %minx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minx.addr, metadata !9229, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa, metadata !9231, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %best, metadata !9233, metadata !DIExpression()), !dbg !9234
  store %struct.RenderPart* null, %struct.RenderPart** %best, align 8, !dbg !9234
  call void @llvm.dbg.declare(metadata i64* %centx, metadata !9235, metadata !DIExpression()), !dbg !9236
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9237
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 13, !dbg !9238
  %1 = load i32, i32* %winx, align 4, !dbg !9238
  %div = sdiv i32 %1, 2, !dbg !9239
  %conv = sext i32 %div to i64, !dbg !9237
  store i64 %conv, i64* %centx, align 8, !dbg !9236
  call void @llvm.dbg.declare(metadata i64* %centy, metadata !9240, metadata !DIExpression()), !dbg !9241
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9242
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 14, !dbg !9243
  %3 = load i32, i32* %winy, align 8, !dbg !9243
  %div1 = sdiv i32 %3, 2, !dbg !9244
  %conv2 = sext i32 %div1 to i64, !dbg !9242
  store i64 %conv2, i64* %centy, align 8, !dbg !9241
  call void @llvm.dbg.declare(metadata i64* %tot, metadata !9245, metadata !DIExpression()), !dbg !9246
  store i64 1, i64* %tot, align 8, !dbg !9246
  call void @llvm.dbg.declare(metadata i64* %mindist, metadata !9247, metadata !DIExpression()), !dbg !9248
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9249
  %winx3 = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 13, !dbg !9250
  %5 = load i32, i32* %winx3, align 4, !dbg !9250
  %conv4 = sext i32 %5 to i64, !dbg !9251
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9252
  %winy5 = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 14, !dbg !9253
  %7 = load i32, i32* %winy5, align 8, !dbg !9253
  %conv6 = sext i32 %7 to i64, !dbg !9254
  %mul = mul nsw i64 %conv4, %conv6, !dbg !9255
  store i64 %mul, i64* %mindist, align 8, !dbg !9248
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9256
  %parts = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 50, !dbg !9258
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %parts, i32 0, i32 0, !dbg !9259
  %9 = load i8*, i8** %first, align 8, !dbg !9259
  %10 = bitcast i8* %9 to %struct.RenderPart*, !dbg !9256
  store %struct.RenderPart* %10, %struct.RenderPart** %pa, align 8, !dbg !9260
  br label %for.cond, !dbg !9261

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9262
  %tobool = icmp ne %struct.RenderPart* %11, null, !dbg !9264
  br i1 %tobool, label %for.body, label %for.end, !dbg !9264

for.body:                                         ; preds = %for.cond
  %12 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9265
  %status = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %12, i32 0, i32 18, !dbg !9268
  %13 = load i16, i16* %status, align 2, !dbg !9268
  %conv7 = sext i16 %13 to i32, !dbg !9265
  %cmp = icmp eq i32 %conv7, 2, !dbg !9269
  br i1 %cmp, label %if.then, label %if.end, !dbg !9270

if.then:                                          ; preds = %for.body
  %14 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9271
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %14, i32 0, i32 13, !dbg !9273
  %call = call i32 @BLI_rcti_cent_x(%struct.rcti* %disprect), !dbg !9274
  %conv9 = sext i32 %call to i64, !dbg !9274
  %15 = load i64, i64* %centx, align 8, !dbg !9275
  %add = add nsw i64 %15, %conv9, !dbg !9275
  store i64 %add, i64* %centx, align 8, !dbg !9275
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9276
  %disprect10 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 13, !dbg !9277
  %call11 = call i32 @BLI_rcti_cent_y(%struct.rcti* %disprect10), !dbg !9278
  %conv12 = sext i32 %call11 to i64, !dbg !9278
  %17 = load i64, i64* %centy, align 8, !dbg !9279
  %add13 = add nsw i64 %17, %conv12, !dbg !9279
  store i64 %add13, i64* %centy, align 8, !dbg !9279
  %18 = load i64, i64* %tot, align 8, !dbg !9280
  %inc = add nsw i64 %18, 1, !dbg !9280
  store i64 %inc, i64* %tot, align 8, !dbg !9280
  br label %if.end, !dbg !9281

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !9282

for.inc:                                          ; preds = %if.end
  %19 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9283
  %next = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %19, i32 0, i32 0, !dbg !9284
  %20 = load %struct.RenderPart*, %struct.RenderPart** %next, align 8, !dbg !9284
  store %struct.RenderPart* %20, %struct.RenderPart** %pa, align 8, !dbg !9285
  br label %for.cond, !dbg !9286, !llvm.loop !9287

for.end:                                          ; preds = %for.cond
  %21 = load i64, i64* %tot, align 8, !dbg !9289
  %22 = load i64, i64* %centx, align 8, !dbg !9290
  %div14 = sdiv i64 %22, %21, !dbg !9290
  store i64 %div14, i64* %centx, align 8, !dbg !9290
  %23 = load i64, i64* %tot, align 8, !dbg !9291
  %24 = load i64, i64* %centy, align 8, !dbg !9292
  %div15 = sdiv i64 %24, %23, !dbg !9292
  store i64 %div15, i64* %centy, align 8, !dbg !9292
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9293
  %parts16 = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 50, !dbg !9295
  %first17 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %parts16, i32 0, i32 0, !dbg !9296
  %26 = load i8*, i8** %first17, align 8, !dbg !9296
  %27 = bitcast i8* %26 to %struct.RenderPart*, !dbg !9293
  store %struct.RenderPart* %27, %struct.RenderPart** %pa, align 8, !dbg !9297
  br label %for.cond18, !dbg !9298

for.cond18:                                       ; preds = %for.inc54, %for.end
  %28 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9299
  %tobool19 = icmp ne %struct.RenderPart* %28, null, !dbg !9301
  br i1 %tobool19, label %for.body20, label %for.end56, !dbg !9301

for.body20:                                       ; preds = %for.cond18
  %29 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9302
  %status21 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %29, i32 0, i32 18, !dbg !9305
  %30 = load i16, i16* %status21, align 2, !dbg !9305
  %conv22 = sext i16 %30 to i32, !dbg !9302
  %cmp23 = icmp eq i32 %conv22, 0, !dbg !9306
  br i1 %cmp23, label %land.lhs.true, label %if.end53, !dbg !9307

land.lhs.true:                                    ; preds = %for.body20
  %31 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9308
  %nr = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %31, i32 0, i32 16, !dbg !9309
  %32 = load i32, i32* %nr, align 8, !dbg !9309
  %cmp25 = icmp eq i32 %32, 0, !dbg !9310
  br i1 %cmp25, label %if.then27, label %if.end53, !dbg !9311

if.then27:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %distx, metadata !9312, metadata !DIExpression()), !dbg !9314
  %33 = load i64, i64* %centx, align 8, !dbg !9315
  %34 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9316
  %disprect28 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %34, i32 0, i32 13, !dbg !9317
  %call29 = call i32 @BLI_rcti_cent_x(%struct.rcti* %disprect28), !dbg !9318
  %conv30 = sext i32 %call29 to i64, !dbg !9318
  %sub = sub nsw i64 %33, %conv30, !dbg !9319
  store i64 %sub, i64* %distx, align 8, !dbg !9314
  call void @llvm.dbg.declare(metadata i64* %disty, metadata !9320, metadata !DIExpression()), !dbg !9321
  %35 = load i64, i64* %centy, align 8, !dbg !9322
  %36 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9323
  %disprect31 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %36, i32 0, i32 13, !dbg !9324
  %call32 = call i32 @BLI_rcti_cent_y(%struct.rcti* %disprect31), !dbg !9325
  %conv33 = sext i32 %call32 to i64, !dbg !9325
  %sub34 = sub nsw i64 %35, %conv33, !dbg !9326
  store i64 %sub34, i64* %disty, align 8, !dbg !9321
  %37 = load i64, i64* %distx, align 8, !dbg !9327
  %38 = load i64, i64* %distx, align 8, !dbg !9328
  %mul35 = mul nsw i64 %37, %38, !dbg !9329
  %39 = load i64, i64* %disty, align 8, !dbg !9330
  %40 = load i64, i64* %disty, align 8, !dbg !9331
  %mul36 = mul nsw i64 %39, %40, !dbg !9332
  %add37 = add nsw i64 %mul35, %mul36, !dbg !9333
  %conv38 = sitofp i64 %add37 to double, !dbg !9327
  %call39 = call double @sqrt(double %conv38) #7, !dbg !9334
  %conv40 = fptosi double %call39 to i64, !dbg !9335
  store i64 %conv40, i64* %distx, align 8, !dbg !9336
  %41 = load i64, i64* %distx, align 8, !dbg !9337
  %42 = load i64, i64* %mindist, align 8, !dbg !9339
  %cmp41 = icmp slt i64 %41, %42, !dbg !9340
  br i1 %cmp41, label %if.then43, label %if.end52, !dbg !9341

if.then43:                                        ; preds = %if.then27
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9342
  %r = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 45, !dbg !9345
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !9346
  %44 = load i32, i32* %mode, align 8, !dbg !9346
  %and = and i32 %44, 1024, !dbg !9347
  %tobool44 = icmp ne i32 %and, 0, !dbg !9347
  br i1 %tobool44, label %if.then45, label %if.else, !dbg !9348

if.then45:                                        ; preds = %if.then43
  %45 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9349
  %disprect46 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %45, i32 0, i32 13, !dbg !9352
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect46, i32 0, i32 0, !dbg !9353
  %46 = load i32, i32* %xmin, align 8, !dbg !9353
  %47 = load i32, i32* %minx.addr, align 4, !dbg !9354
  %cmp47 = icmp eq i32 %46, %47, !dbg !9355
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !9356

if.then49:                                        ; preds = %if.then45
  %48 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9357
  store %struct.RenderPart* %48, %struct.RenderPart** %best, align 8, !dbg !9359
  %49 = load i64, i64* %distx, align 8, !dbg !9360
  store i64 %49, i64* %mindist, align 8, !dbg !9361
  br label %if.end50, !dbg !9362

if.end50:                                         ; preds = %if.then49, %if.then45
  br label %if.end51, !dbg !9363

if.else:                                          ; preds = %if.then43
  %50 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9364
  store %struct.RenderPart* %50, %struct.RenderPart** %best, align 8, !dbg !9366
  %51 = load i64, i64* %distx, align 8, !dbg !9367
  store i64 %51, i64* %mindist, align 8, !dbg !9368
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.end50
  br label %if.end52, !dbg !9369

if.end52:                                         ; preds = %if.end51, %if.then27
  br label %if.end53, !dbg !9370

if.end53:                                         ; preds = %if.end52, %land.lhs.true, %for.body20
  br label %for.inc54, !dbg !9371

for.inc54:                                        ; preds = %if.end53
  %52 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9372
  %next55 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %52, i32 0, i32 0, !dbg !9373
  %53 = load %struct.RenderPart*, %struct.RenderPart** %next55, align 8, !dbg !9373
  store %struct.RenderPart* %53, %struct.RenderPart** %pa, align 8, !dbg !9374
  br label %for.cond18, !dbg !9375, !llvm.loop !9376

for.end56:                                        ; preds = %for.cond18
  %54 = load %struct.RenderPart*, %struct.RenderPart** %best, align 8, !dbg !9378
  ret %struct.RenderPart* %54, !dbg !9379
}

declare dso_local void @BLI_thread_queue_push(%struct.ThreadQueue*, i8*) #2

declare dso_local void @BLI_thread_queue_nowait(%struct.ThreadQueue*) #2

declare dso_local void @BLI_init_threads(%struct.ListBase*, i8* (i8*)*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @do_render_thread(i8* %thread_v) #0 !dbg !9380 {
entry:
  %thread_v.addr = alloca i8*, align 8
  %thread = alloca %struct.RenderThread*, align 8
  %pa = alloca %struct.RenderPart*, align 8
  store i8* %thread_v, i8** %thread_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %thread_v.addr, metadata !9383, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.declare(metadata %struct.RenderThread** %thread, metadata !9385, metadata !DIExpression()), !dbg !9387
  %0 = load i8*, i8** %thread_v.addr, align 8, !dbg !9388
  %1 = bitcast i8* %0 to %struct.RenderThread*, !dbg !9388
  store %struct.RenderThread* %1, %struct.RenderThread** %thread, align 8, !dbg !9387
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa, metadata !9389, metadata !DIExpression()), !dbg !9390
  br label %while.cond, !dbg !9391

while.cond:                                       ; preds = %if.end8, %entry
  %2 = load %struct.RenderThread*, %struct.RenderThread** %thread, align 8, !dbg !9392
  %workqueue = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %2, i32 0, i32 0, !dbg !9393
  %3 = load %struct.ThreadQueue*, %struct.ThreadQueue** %workqueue, align 8, !dbg !9393
  %call = call i8* @BLI_thread_queue_pop(%struct.ThreadQueue* %3), !dbg !9394
  %4 = bitcast i8* %call to %struct.RenderPart*, !dbg !9394
  store %struct.RenderPart* %4, %struct.RenderPart** %pa, align 8, !dbg !9395
  %tobool = icmp ne %struct.RenderPart* %4, null, !dbg !9391
  br i1 %tobool, label %while.body, label %while.end, !dbg !9391

while.body:                                       ; preds = %while.cond
  %5 = load %struct.RenderThread*, %struct.RenderThread** %thread, align 8, !dbg !9396
  %number = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %5, i32 0, i32 2, !dbg !9398
  %6 = load i32, i32* %number, align 8, !dbg !9398
  %conv = trunc i32 %6 to i16, !dbg !9396
  %7 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9399
  %thread1 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %7, i32 0, i32 20, !dbg !9400
  store i16 %conv, i16* %thread1, align 2, !dbg !9401
  %8 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9402
  %9 = bitcast %struct.RenderPart* %8 to i8*, !dbg !9402
  %call2 = call i8* @do_part_thread(i8* %9), !dbg !9403
  %10 = load %struct.RenderThread*, %struct.RenderThread** %thread, align 8, !dbg !9404
  %display_update = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %10, i32 0, i32 3, !dbg !9406
  %11 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !9406
  %tobool3 = icmp ne void (i8*, %struct.RenderResult*, %struct.rcti*)* %11, null, !dbg !9404
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9407

if.then:                                          ; preds = %while.body
  %12 = load %struct.RenderThread*, %struct.RenderThread** %thread, align 8, !dbg !9408
  %display_update4 = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %12, i32 0, i32 3, !dbg !9410
  %13 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update4, align 8, !dbg !9410
  %14 = load %struct.RenderThread*, %struct.RenderThread** %thread, align 8, !dbg !9411
  %duh = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %14, i32 0, i32 4, !dbg !9412
  %15 = load i8*, i8** %duh, align 8, !dbg !9412
  %16 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9413
  %result = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %16, i32 0, i32 2, !dbg !9414
  %17 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !9414
  call void %13(i8* %15, %struct.RenderResult* %17, %struct.rcti* null), !dbg !9408
  br label %if.end, !dbg !9415

if.end:                                           ; preds = %if.then, %while.body
  %18 = load %struct.RenderThread*, %struct.RenderThread** %thread, align 8, !dbg !9416
  %donequeue = getelementptr inbounds %struct.RenderThread, %struct.RenderThread* %18, i32 0, i32 1, !dbg !9417
  %19 = load %struct.ThreadQueue*, %struct.ThreadQueue** %donequeue, align 8, !dbg !9417
  %20 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9418
  %21 = bitcast %struct.RenderPart* %20 to i8*, !dbg !9418
  call void @BLI_thread_queue_push(%struct.ThreadQueue* %19, i8* %21), !dbg !9419
  %22 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !9420
  %23 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !9422
  %call5 = call i32 %22(i8* %23), !dbg !9423
  %tobool6 = icmp ne i32 %call5, 0, !dbg !9423
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !9424

if.then7:                                         ; preds = %if.end
  br label %while.end, !dbg !9425

if.end8:                                          ; preds = %if.end
  br label %while.cond, !dbg !9391, !llvm.loop !9426

while.end:                                        ; preds = %if.then7, %while.cond
  ret i8* null, !dbg !9428
}

declare dso_local void @BLI_insert_thread(%struct.ListBase*, i8*) #2

declare dso_local i8* @BLI_thread_queue_pop_timeout(%struct.ThreadQueue*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @print_part_stats(%struct.Render* %re, %struct.RenderPart* %pa) #0 !dbg !9429 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %pa.addr = alloca %struct.RenderPart*, align 8
  %str = alloca [64 x i8], align 16
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !9432, metadata !DIExpression()), !dbg !9433
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !9434, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.declare(metadata [64 x i8]* %str, metadata !9436, metadata !DIExpression()), !dbg !9437
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %str, i64 0, i64 0, !dbg !9438
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9439
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 44, !dbg !9440
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9440
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 0, !dbg !9441
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !9442
  %arraydecay1 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !9439
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay1, i64 2, !dbg !9443
  %2 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !9444
  %nr = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %2, i32 0, i32 16, !dbg !9445
  %3 = load i32, i32* %nr, align 8, !dbg !9445
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9446
  %i = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 98, !dbg !9447
  %totpart = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 6, !dbg !9448
  %5 = load i32, i32* %totpart, align 8, !dbg !9448
  %call = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 64, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), i8* %add.ptr, i32 %3, i32 %5), !dbg !9449
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %str, i64 0, i64 0, !dbg !9450
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9451
  %i3 = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 98, !dbg !9452
  %infostr = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i3, i32 0, i32 16, !dbg !9453
  store i8* %arraydecay2, i8** %infostr, align 8, !dbg !9454
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9455
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 90, !dbg !9456
  %8 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !9456
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9457
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 91, !dbg !9458
  %10 = load i8*, i8** %sdh, align 8, !dbg !9458
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9459
  %i4 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 98, !dbg !9460
  call void %8(i8* %10, %struct.RenderStats* %i4), !dbg !9455
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9461
  %i5 = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 98, !dbg !9462
  %infostr6 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i5, i32 0, i32 16, !dbg !9463
  store i8* null, i8** %infostr6, align 8, !dbg !9464
  ret void, !dbg !9465
}

declare dso_local void @render_result_free_list(%struct.ListBase*, %struct.RenderResult*) #2

declare dso_local void @BLI_end_threads(%struct.ListBase*) #2

declare dso_local i8* @BLI_thread_queue_pop(%struct.ThreadQueue*) #2

declare dso_local void @BLI_thread_queue_free(%struct.ThreadQueue*) #2

declare dso_local void @render_result_exr_file_end(%struct.Render*) #2

declare dso_local void @render_result_exr_file_cache_write(%struct.Render*) #2

declare dso_local void @RE_parts_free(%struct.Render*) #2

declare dso_local void @project_renderdata(%struct.Render*, void (float*, [4 x float]*, float*)*, i8 zeroext, float, i8 zeroext) #2

declare dso_local void @projectverto(float*, [4 x float]*, float*) #2

; Function Attrs: nounwind
declare dso_local float @sinf(float) #5

; Function Attrs: nounwind
declare dso_local float @cosf(float) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_cent_x(%struct.rcti* %rct) #0 !dbg !9466 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !9467, metadata !DIExpression()), !dbg !9468
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !9469
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 0, !dbg !9470
  %1 = load i32, i32* %xmin, align 4, !dbg !9470
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !9471
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 1, !dbg !9472
  %3 = load i32, i32* %xmax, align 4, !dbg !9472
  %add = add nsw i32 %1, %3, !dbg !9473
  %div = sdiv i32 %add, 2, !dbg !9474
  ret i32 %div, !dbg !9475
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_cent_y(%struct.rcti* %rct) #0 !dbg !9476 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !9477, metadata !DIExpression()), !dbg !9478
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !9479
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 2, !dbg !9480
  %1 = load i32, i32* %ymin, align 4, !dbg !9480
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !9481
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 3, !dbg !9482
  %3 = load i32, i32* %ymax, align 4, !dbg !9482
  %add = add nsw i32 %1, %3, !dbg !9483
  %div = sdiv i32 %add, 2, !dbg !9484
  ret i32 %div, !dbg !9485
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #5

; Function Attrs: noinline nounwind uwtable
define internal i8* @do_part_thread(i8* %pa_v) #0 !dbg !9486 {
entry:
  %pa_v.addr = alloca i8*, align 8
  %pa = alloca %struct.RenderPart*, align 8
  store i8* %pa_v, i8** %pa_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pa_v.addr, metadata !9487, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa, metadata !9489, metadata !DIExpression()), !dbg !9490
  %0 = load i8*, i8** %pa_v.addr, align 8, !dbg !9491
  %1 = bitcast i8* %0 to %struct.RenderPart*, !dbg !9491
  store %struct.RenderPart* %1, %struct.RenderPart** %pa, align 8, !dbg !9490
  %2 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9492
  %status = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %2, i32 0, i32 18, !dbg !9493
  store i16 1, i16* %status, align 2, !dbg !9494
  %3 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !9495
  %4 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !9497
  %call = call i32 %3(i8* %4), !dbg !9498
  %cmp = icmp eq i32 %call, 0, !dbg !9499
  br i1 %cmp, label %if.then, label %if.end38, !dbg !9500

if.then:                                          ; preds = %entry
  %5 = load %struct.ListBase*, %struct.ListBase** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 75), align 8, !dbg !9501
  %tobool = icmp ne %struct.ListBase* %5, null, !dbg !9504
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !9505

land.lhs.true:                                    ; preds = %if.then
  %6 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !9506
  %and = and i32 %6, 32768, !dbg !9507
  %tobool1 = icmp ne i32 %and, 0, !dbg !9507
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !9508

if.then2:                                         ; preds = %land.lhs.true
  %7 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9509
  %fullresult = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %7, i32 0, i32 3, !dbg !9510
  %8 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9511
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %8, i32 0, i32 13, !dbg !9512
  %9 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9513
  %crop = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %9, i32 0, i32 17, !dbg !9514
  %10 = load i16, i16* %crop, align 4, !dbg !9514
  %conv = sext i16 %10 to i32, !dbg !9513
  %call3 = call %struct.RenderResult* @render_result_new_full_sample(%struct.Render* @R, %struct.ListBase* %fullresult, %struct.rcti* %disprect, i32 %conv, i32 0), !dbg !9515
  %11 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9516
  %result = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %11, i32 0, i32 2, !dbg !9517
  store %struct.RenderResult* %call3, %struct.RenderResult** %result, align 8, !dbg !9518
  br label %if.end, !dbg !9516

if.else:                                          ; preds = %land.lhs.true, %if.then
  %12 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9519
  %disprect4 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %12, i32 0, i32 13, !dbg !9520
  %13 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9521
  %crop5 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %13, i32 0, i32 17, !dbg !9522
  %14 = load i16, i16* %crop5, align 4, !dbg !9522
  %conv6 = sext i16 %14 to i32, !dbg !9521
  %call7 = call %struct.RenderResult* @render_result_new(%struct.Render* @R, %struct.rcti* %disprect4, i32 %conv6, i32 0, i8* null), !dbg !9523
  %15 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9524
  %result8 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %15, i32 0, i32 2, !dbg !9525
  store %struct.RenderResult* %call7, %struct.RenderResult** %result8, align 8, !dbg !9526
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %16 = load %struct.RenderResult*, %struct.RenderResult** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 9), align 8, !dbg !9527
  %do_exr_tile = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %16, i32 0, i32 15, !dbg !9528
  %17 = load i32, i32* %do_exr_tile, align 8, !dbg !9528
  %18 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9529
  %result9 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %18, i32 0, i32 2, !dbg !9530
  %19 = load %struct.RenderResult*, %struct.RenderResult** %result9, align 8, !dbg !9530
  %do_exr_tile10 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %19, i32 0, i32 15, !dbg !9531
  store i32 %17, i32* %do_exr_tile10, align 8, !dbg !9532
  %20 = load %struct.ListBase*, %struct.ListBase** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 75), align 8, !dbg !9533
  %tobool11 = icmp ne %struct.ListBase* %20, null, !dbg !9535
  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !9536

if.then12:                                        ; preds = %if.end
  %21 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9537
  call void @zbufshade_sss_tile(%struct.RenderPart* %21), !dbg !9538
  br label %if.end18, !dbg !9538

if.else13:                                        ; preds = %if.end
  %22 = load i16, i16* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 5), align 2, !dbg !9539
  %tobool14 = icmp ne i16 %22, 0, !dbg !9541
  br i1 %tobool14, label %if.then15, label %if.else16, !dbg !9542

if.then15:                                        ; preds = %if.else13
  %23 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9543
  call void @zbufshadeDA_tile(%struct.RenderPart* %23), !dbg !9544
  br label %if.end17, !dbg !9544

if.else16:                                        ; preds = %if.else13
  %24 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9545
  call void @zbufshade_tile(%struct.RenderPart* %24), !dbg !9546
  br label %if.end17

if.end17:                                         ; preds = %if.else16, %if.then15
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then12
  call void @BLI_rw_mutex_lock(i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 12), i32 1), !dbg !9547
  %25 = load %struct.RenderResult*, %struct.RenderResult** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 9), align 8, !dbg !9548
  %do_exr_tile19 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %25, i32 0, i32 15, !dbg !9550
  %26 = load i32, i32* %do_exr_tile19, align 8, !dbg !9550
  %tobool20 = icmp ne i32 %26, 0, !dbg !9551
  br i1 %tobool20, label %if.then21, label %if.else23, !dbg !9552

if.then21:                                        ; preds = %if.end18
  %27 = load %struct.RenderResult*, %struct.RenderResult** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 9), align 8, !dbg !9553
  %28 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9555
  %result22 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %28, i32 0, i32 2, !dbg !9556
  %29 = load %struct.RenderResult*, %struct.RenderResult** %result22, align 8, !dbg !9556
  call void @render_result_exr_file_merge(%struct.RenderResult* %27, %struct.RenderResult* %29), !dbg !9557
  br label %if.end37, !dbg !9558

if.else23:                                        ; preds = %if.end18
  %call24 = call i32 @render_display_update_enabled(%struct.Render* @R), !dbg !9559
  %tobool25 = icmp ne i32 %call24, 0, !dbg !9559
  br i1 %tobool25, label %if.then26, label %if.end36, !dbg !9561

if.then26:                                        ; preds = %if.else23
  %30 = load i32 (i8*)*, i32 (i8*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 96), align 8, !dbg !9562
  %31 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 97), align 8, !dbg !9565
  %call27 = call i32 %30(i8* %31), !dbg !9566
  %tobool28 = icmp ne i32 %call27, 0, !dbg !9566
  br i1 %tobool28, label %land.lhs.true29, label %if.else33, !dbg !9567

land.lhs.true29:                                  ; preds = %if.then26
  %32 = load i32, i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 45, i32 46), align 4, !dbg !9568
  %and30 = and i32 %32, 524296, !dbg !9569
  %tobool31 = icmp ne i32 %and30, 0, !dbg !9569
  br i1 %tobool31, label %if.then32, label %if.else33, !dbg !9570

if.then32:                                        ; preds = %land.lhs.true29
  br label %if.end35, !dbg !9571

if.else33:                                        ; preds = %land.lhs.true29, %if.then26
  %33 = load %struct.RenderResult*, %struct.RenderResult** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 9), align 8, !dbg !9573
  %34 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9575
  %result34 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %34, i32 0, i32 2, !dbg !9576
  %35 = load %struct.RenderResult*, %struct.RenderResult** %result34, align 8, !dbg !9576
  call void @render_result_merge(%struct.RenderResult* %33, %struct.RenderResult* %35), !dbg !9577
  br label %if.end35

if.end35:                                         ; preds = %if.else33, %if.then32
  br label %if.end36, !dbg !9578

if.end36:                                         ; preds = %if.end35, %if.else23
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then21
  call void @BLI_rw_mutex_unlock(i32* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 12)), !dbg !9579
  br label %if.end38, !dbg !9580

if.end38:                                         ; preds = %if.end37, %entry
  %36 = load %struct.RenderPart*, %struct.RenderPart** %pa, align 8, !dbg !9581
  %status39 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %36, i32 0, i32 18, !dbg !9582
  store i16 2, i16* %status39, align 2, !dbg !9583
  ret i8* null, !dbg !9584
}

declare dso_local void @zbufshade_sss_tile(%struct.RenderPart*) #2

declare dso_local void @zbufshadeDA_tile(%struct.RenderPart*) #2

declare dso_local void @zbufshade_tile(%struct.RenderPart*) #2

declare dso_local void @render_result_exr_file_merge(%struct.RenderResult*, %struct.RenderResult*) #2

declare dso_local void @render_result_merge(%struct.RenderResult*, %struct.RenderResult*) #2

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @render_composit_stats(i8* %UNUSED_arg, i8* %str) #0 !dbg !9585 {
entry:
  %UNUSED_arg.addr = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !9586, metadata !DIExpression()), !dbg !9587
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !9588, metadata !DIExpression()), !dbg !9589
  %0 = load i8*, i8** %str.addr, align 8, !dbg !9590
  store i8* %0, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98, i32 16), align 8, !dbg !9591
  %1 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 90), align 8, !dbg !9592
  %2 = load i8*, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 91), align 8, !dbg !9593
  call void %1(i8* %2, %struct.RenderStats* getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98)), !dbg !9594
  store i8* null, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 98, i32 16), align 8, !dbg !9595
  ret void, !dbg !9596
}

; Function Attrs: noinline nounwind uwtable
define internal void @tag_scenes_for_render(%struct.Render* %re) #0 !dbg !9597 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %node = alloca %struct.bNode*, align 8
  %sce = alloca %struct.Scene*, align 8
  %renderlay = alloca i32, align 4
  %scene57 = alloca %struct.Scene*, align 8
  %scene86 = alloca %struct.Scene*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !9598, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !9600, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce, metadata !9602, metadata !DIExpression()), !dbg !9603
  call void @llvm.dbg.declare(metadata i32* %renderlay, metadata !9604, metadata !DIExpression()), !dbg !9605
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9606
  %lay = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 48, !dbg !9607
  %1 = load i32, i32* %lay, align 8, !dbg !9607
  store i32 %1, i32* %renderlay, align 4, !dbg !9605
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9608
  %main = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 43, !dbg !9610
  %3 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !9610
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %3, i32 0, i32 11, !dbg !9611
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene, i32 0, i32 0, !dbg !9612
  %4 = load i8*, i8** %first, align 8, !dbg !9612
  %5 = bitcast i8* %4 to %struct.Scene*, !dbg !9608
  store %struct.Scene* %5, %struct.Scene** %sce, align 8, !dbg !9613
  br label %for.cond, !dbg !9614

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9615
  %tobool = icmp ne %struct.Scene* %6, null, !dbg !9617
  br i1 %tobool, label %for.body, label %for.end, !dbg !9617

for.body:                                         ; preds = %for.cond
  %7 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9618
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 0, !dbg !9620
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !9621
  %8 = load i16, i16* %flag, align 2, !dbg !9622
  %conv = sext i16 %8 to i32, !dbg !9622
  %and = and i32 %conv, -1025, !dbg !9622
  %conv1 = trunc i32 %and to i16, !dbg !9622
  store i16 %conv1, i16* %flag, align 2, !dbg !9622
  %9 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9623
  %10 = load i32, i32* %renderlay, align 4, !dbg !9624
  call void @tag_dependend_objects_for_render(%struct.Scene* %9, i32 %10), !dbg !9625
  br label %for.inc, !dbg !9626

for.inc:                                          ; preds = %for.body
  %11 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9627
  %id2 = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 0, !dbg !9628
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 0, !dbg !9629
  %12 = load i8*, i8** %next, align 8, !dbg !9629
  %13 = bitcast i8* %12 to %struct.Scene*, !dbg !9627
  store %struct.Scene* %13, %struct.Scene** %sce, align 8, !dbg !9630
  br label %for.cond, !dbg !9631, !llvm.loop !9632

for.end:                                          ; preds = %for.cond
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9634
  %call = call %struct.Object* @RE_GetCamera(%struct.Render* %14), !dbg !9636
  %tobool3 = icmp ne %struct.Object* %call, null, !dbg !9636
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !9637

land.lhs.true:                                    ; preds = %for.end
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9638
  %scene4 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 44, !dbg !9639
  %16 = load %struct.Scene*, %struct.Scene** %scene4, align 8, !dbg !9639
  %call5 = call i32 @composite_needs_render(%struct.Scene* %16, i32 1), !dbg !9640
  %tobool6 = icmp ne i32 %call5, 0, !dbg !9640
  br i1 %tobool6, label %if.then, label %if.end, !dbg !9641

if.then:                                          ; preds = %land.lhs.true
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9642
  %scene7 = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 44, !dbg !9644
  %18 = load %struct.Scene*, %struct.Scene** %scene7, align 8, !dbg !9644
  %id8 = getelementptr inbounds %struct.Scene, %struct.Scene* %18, i32 0, i32 0, !dbg !9645
  %flag9 = getelementptr inbounds %struct.ID, %struct.ID* %id8, i32 0, i32 5, !dbg !9646
  %19 = load i16, i16* %flag9, align 2, !dbg !9647
  %conv10 = sext i16 %19 to i32, !dbg !9647
  %or = or i32 %conv10, 1024, !dbg !9647
  %conv11 = trunc i32 %or to i16, !dbg !9647
  store i16 %conv11, i16* %flag9, align 2, !dbg !9647
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9648
  %scene12 = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 44, !dbg !9649
  %21 = load %struct.Scene*, %struct.Scene** %scene12, align 8, !dbg !9649
  %22 = load i32, i32* %renderlay, align 4, !dbg !9650
  call void @tag_dependend_objects_for_render(%struct.Scene* %21, i32 %22), !dbg !9651
  br label %if.end, !dbg !9652

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.end
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9653
  %scene13 = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 44, !dbg !9655
  %24 = load %struct.Scene*, %struct.Scene** %scene13, align 8, !dbg !9655
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %24, i32 0, i32 18, !dbg !9656
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !9656
  %cmp = icmp eq %struct.bNodeTree* %25, null, !dbg !9657
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !9658

if.then15:                                        ; preds = %if.end
  br label %for.end105, !dbg !9659

if.end16:                                         ; preds = %if.end
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9660
  %scene17 = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 44, !dbg !9662
  %27 = load %struct.Scene*, %struct.Scene** %scene17, align 8, !dbg !9662
  %nodetree18 = getelementptr inbounds %struct.Scene, %struct.Scene* %27, i32 0, i32 18, !dbg !9663
  %28 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree18, align 8, !dbg !9663
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %28, i32 0, i32 7, !dbg !9664
  %first19 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !9665
  %29 = load i8*, i8** %first19, align 8, !dbg !9665
  %30 = bitcast i8* %29 to %struct.bNode*, !dbg !9660
  store %struct.bNode* %30, %struct.bNode** %node, align 8, !dbg !9666
  br label %for.cond20, !dbg !9667

for.cond20:                                       ; preds = %for.inc103, %if.end16
  %31 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9668
  %tobool21 = icmp ne %struct.bNode* %31, null, !dbg !9670
  br i1 %tobool21, label %for.body22, label %for.end105, !dbg !9670

for.body22:                                       ; preds = %for.cond20
  %32 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9671
  %flag23 = getelementptr inbounds %struct.bNode, %struct.bNode* %32, i32 0, i32 7, !dbg !9673
  %33 = load i32, i32* %flag23, align 8, !dbg !9674
  %and24 = and i32 %33, -257, !dbg !9674
  store i32 %and24, i32* %flag23, align 8, !dbg !9674
  %34 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9675
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %34, i32 0, i32 8, !dbg !9677
  %35 = load i16, i16* %type, align 4, !dbg !9677
  %conv25 = sext i16 %35 to i32, !dbg !9675
  %cmp26 = icmp eq i32 %conv25, 221, !dbg !9678
  br i1 %cmp26, label %land.lhs.true28, label %if.end102, !dbg !9679

land.lhs.true28:                                  ; preds = %for.body22
  %36 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9680
  %flag29 = getelementptr inbounds %struct.bNode, %struct.bNode* %36, i32 0, i32 7, !dbg !9681
  %37 = load i32, i32* %flag29, align 8, !dbg !9681
  %and30 = and i32 %37, 512, !dbg !9682
  %cmp31 = icmp eq i32 %and30, 0, !dbg !9683
  br i1 %cmp31, label %if.then33, label %if.end102, !dbg !9684

if.then33:                                        ; preds = %land.lhs.true28
  %38 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9685
  %id34 = getelementptr inbounds %struct.bNode, %struct.bNode* %38, i32 0, i32 20, !dbg !9688
  %39 = load %struct.ID*, %struct.ID** %id34, align 8, !dbg !9688
  %tobool35 = icmp ne %struct.ID* %39, null, !dbg !9685
  br i1 %tobool35, label %if.then36, label %if.end101, !dbg !9689

if.then36:                                        ; preds = %if.then33
  %40 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9690
  %main37 = getelementptr inbounds %struct.Render, %struct.Render* %40, i32 0, i32 43, !dbg !9690
  %41 = load %struct.Main*, %struct.Main** %main37, align 8, !dbg !9690
  %versionfile = getelementptr inbounds %struct.Main, %struct.Main* %41, i32 0, i32 3, !dbg !9690
  %42 = load i16, i16* %versionfile, align 8, !dbg !9690
  %conv38 = sext i16 %42 to i32, !dbg !9690
  %cmp39 = icmp sgt i32 %conv38, 265, !dbg !9690
  br i1 %cmp39, label %if.end73, label %lor.lhs.false, !dbg !9690

lor.lhs.false:                                    ; preds = %if.then36
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9690
  %main41 = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 43, !dbg !9690
  %44 = load %struct.Main*, %struct.Main** %main41, align 8, !dbg !9690
  %versionfile42 = getelementptr inbounds %struct.Main, %struct.Main* %44, i32 0, i32 3, !dbg !9690
  %45 = load i16, i16* %versionfile42, align 8, !dbg !9690
  %conv43 = sext i16 %45 to i32, !dbg !9690
  %cmp44 = icmp eq i32 %conv43, 265, !dbg !9690
  br i1 %cmp44, label %land.lhs.true46, label %if.then51, !dbg !9690

land.lhs.true46:                                  ; preds = %lor.lhs.false
  %46 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9690
  %main47 = getelementptr inbounds %struct.Render, %struct.Render* %46, i32 0, i32 43, !dbg !9690
  %47 = load %struct.Main*, %struct.Main** %main47, align 8, !dbg !9690
  %subversionfile = getelementptr inbounds %struct.Main, %struct.Main* %47, i32 0, i32 4, !dbg !9690
  %48 = load i16, i16* %subversionfile, align 2, !dbg !9690
  %conv48 = sext i16 %48 to i32, !dbg !9690
  %cmp49 = icmp sge i32 %conv48, 5, !dbg !9690
  br i1 %cmp49, label %if.end73, label %if.then51, !dbg !9693

if.then51:                                        ; preds = %land.lhs.true46, %lor.lhs.false
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9694
  %scene52 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 44, !dbg !9697
  %50 = load %struct.Scene*, %struct.Scene** %scene52, align 8, !dbg !9697
  %nodetree53 = getelementptr inbounds %struct.Scene, %struct.Scene* %50, i32 0, i32 18, !dbg !9698
  %51 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree53, align 8, !dbg !9698
  %52 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9699
  %call54 = call zeroext i8 @rlayer_node_uses_alpha(%struct.bNodeTree* %51, %struct.bNode* %52), !dbg !9700
  %tobool55 = icmp ne i8 %call54, 0, !dbg !9700
  br i1 %tobool55, label %if.then56, label %if.end72, !dbg !9701

if.then56:                                        ; preds = %if.then51
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene57, metadata !9702, metadata !DIExpression()), !dbg !9704
  %53 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9705
  %id58 = getelementptr inbounds %struct.bNode, %struct.bNode* %53, i32 0, i32 20, !dbg !9706
  %54 = load %struct.ID*, %struct.ID** %id58, align 8, !dbg !9706
  %55 = bitcast %struct.ID* %54 to %struct.Scene*, !dbg !9707
  store %struct.Scene* %55, %struct.Scene** %scene57, align 8, !dbg !9704
  %56 = load %struct.Scene*, %struct.Scene** %scene57, align 8, !dbg !9708
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %56, i32 0, i32 22, !dbg !9710
  %alphamode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 53, !dbg !9711
  %57 = load i16, i16* %alphamode, align 8, !dbg !9711
  %conv59 = sext i16 %57 to i32, !dbg !9708
  %cmp60 = icmp ne i32 %conv59, 1, !dbg !9712
  br i1 %cmp60, label %if.then62, label %if.end71, !dbg !9713

if.then62:                                        ; preds = %if.then56
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9714
  %reports = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 99, !dbg !9716
  %59 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !9716
  %60 = load %struct.Scene*, %struct.Scene** %scene57, align 8, !dbg !9717
  %id63 = getelementptr inbounds %struct.Scene, %struct.Scene* %60, i32 0, i32 0, !dbg !9718
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id63, i32 0, i32 4, !dbg !9719
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !9717
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !9720
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %59, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.30, i64 0, i64 0), i8* %add.ptr), !dbg !9721
  %61 = load %struct.Scene*, %struct.Scene** %scene57, align 8, !dbg !9722
  %id64 = getelementptr inbounds %struct.Scene, %struct.Scene* %61, i32 0, i32 0, !dbg !9723
  %name65 = getelementptr inbounds %struct.ID, %struct.ID* %id64, i32 0, i32 4, !dbg !9724
  %arraydecay66 = getelementptr inbounds [66 x i8], [66 x i8]* %name65, i64 0, i64 0, !dbg !9722
  %add.ptr67 = getelementptr inbounds i8, i8* %arraydecay66, i64 2, !dbg !9725
  %call68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.31, i64 0, i64 0), i8* %add.ptr67), !dbg !9726
  %62 = load %struct.Scene*, %struct.Scene** %scene57, align 8, !dbg !9727
  %r69 = getelementptr inbounds %struct.Scene, %struct.Scene* %62, i32 0, i32 22, !dbg !9728
  %alphamode70 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r69, i32 0, i32 53, !dbg !9729
  store i16 1, i16* %alphamode70, align 8, !dbg !9730
  br label %if.end71, !dbg !9731

if.end71:                                         ; preds = %if.then62, %if.then56
  br label %if.end72, !dbg !9732

if.end72:                                         ; preds = %if.end71, %if.then51
  br label %if.end73, !dbg !9733

if.end73:                                         ; preds = %if.end72, %land.lhs.true46, %if.then36
  %63 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9734
  %id74 = getelementptr inbounds %struct.bNode, %struct.bNode* %63, i32 0, i32 20, !dbg !9736
  %64 = load %struct.ID*, %struct.ID** %id74, align 8, !dbg !9736
  %65 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9737
  %scene75 = getelementptr inbounds %struct.Render, %struct.Render* %65, i32 0, i32 44, !dbg !9738
  %66 = load %struct.Scene*, %struct.Scene** %scene75, align 8, !dbg !9738
  %67 = bitcast %struct.Scene* %66 to %struct.ID*, !dbg !9739
  %cmp76 = icmp ne %struct.ID* %64, %67, !dbg !9740
  br i1 %cmp76, label %if.then78, label %if.end100, !dbg !9741

if.then78:                                        ; preds = %if.end73
  %68 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9742
  %id79 = getelementptr inbounds %struct.bNode, %struct.bNode* %68, i32 0, i32 20, !dbg !9745
  %69 = load %struct.ID*, %struct.ID** %id79, align 8, !dbg !9745
  %flag80 = getelementptr inbounds %struct.ID, %struct.ID* %69, i32 0, i32 5, !dbg !9746
  %70 = load i16, i16* %flag80, align 2, !dbg !9746
  %conv81 = sext i16 %70 to i32, !dbg !9742
  %and82 = and i32 %conv81, 1024, !dbg !9747
  %cmp83 = icmp eq i32 %and82, 0, !dbg !9748
  br i1 %cmp83, label %if.then85, label %if.end99, !dbg !9749

if.then85:                                        ; preds = %if.then78
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene86, metadata !9750, metadata !DIExpression()), !dbg !9752
  %71 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9753
  %id87 = getelementptr inbounds %struct.bNode, %struct.bNode* %71, i32 0, i32 20, !dbg !9754
  %72 = load %struct.ID*, %struct.ID** %id87, align 8, !dbg !9754
  %73 = bitcast %struct.ID* %72 to %struct.Scene*, !dbg !9755
  store %struct.Scene* %73, %struct.Scene** %scene86, align 8, !dbg !9752
  %74 = load %struct.Scene*, %struct.Scene** %scene86, align 8, !dbg !9756
  %call88 = call zeroext i8 @render_scene_has_layers_to_render(%struct.Scene* %74), !dbg !9758
  %tobool89 = icmp ne i8 %call88, 0, !dbg !9758
  br i1 %tobool89, label %if.then90, label %if.end98, !dbg !9759

if.then90:                                        ; preds = %if.then85
  %75 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9760
  %flag91 = getelementptr inbounds %struct.bNode, %struct.bNode* %75, i32 0, i32 7, !dbg !9762
  %76 = load i32, i32* %flag91, align 8, !dbg !9763
  %or92 = or i32 %76, 256, !dbg !9763
  store i32 %or92, i32* %flag91, align 8, !dbg !9763
  %77 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9764
  %id93 = getelementptr inbounds %struct.bNode, %struct.bNode* %77, i32 0, i32 20, !dbg !9765
  %78 = load %struct.ID*, %struct.ID** %id93, align 8, !dbg !9765
  %flag94 = getelementptr inbounds %struct.ID, %struct.ID* %78, i32 0, i32 5, !dbg !9766
  %79 = load i16, i16* %flag94, align 2, !dbg !9767
  %conv95 = sext i16 %79 to i32, !dbg !9767
  %or96 = or i32 %conv95, 1024, !dbg !9767
  %conv97 = trunc i32 %or96 to i16, !dbg !9767
  store i16 %conv97, i16* %flag94, align 2, !dbg !9767
  %80 = load %struct.Scene*, %struct.Scene** %scene86, align 8, !dbg !9768
  %81 = load i32, i32* %renderlay, align 4, !dbg !9769
  call void @tag_dependend_objects_for_render(%struct.Scene* %80, i32 %81), !dbg !9770
  br label %if.end98, !dbg !9771

if.end98:                                         ; preds = %if.then90, %if.then85
  br label %if.end99, !dbg !9772

if.end99:                                         ; preds = %if.end98, %if.then78
  br label %if.end100, !dbg !9773

if.end100:                                        ; preds = %if.end99, %if.end73
  br label %if.end101, !dbg !9774

if.end101:                                        ; preds = %if.end100, %if.then33
  br label %if.end102, !dbg !9775

if.end102:                                        ; preds = %if.end101, %land.lhs.true28, %for.body22
  br label %for.inc103, !dbg !9776

for.inc103:                                       ; preds = %if.end102
  %82 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9777
  %next104 = getelementptr inbounds %struct.bNode, %struct.bNode* %82, i32 0, i32 0, !dbg !9778
  %83 = load %struct.bNode*, %struct.bNode** %next104, align 8, !dbg !9778
  store %struct.bNode* %83, %struct.bNode** %node, align 8, !dbg !9779
  br label %for.cond20, !dbg !9780, !llvm.loop !9781

for.end105:                                       ; preds = %if.then15, %for.cond20
  ret void, !dbg !9783
}

declare dso_local i32 @render_result_exr_file_read_sample(%struct.Render*, i32) #2

declare dso_local void @ntreeCompositTagRender(%struct.Scene*) #2

declare dso_local i32 @ntreeCompositTagAnimated(%struct.bNodeTree*) #2

declare dso_local void @ntreeCompositExecTree(%struct.Scene*, %struct.bNodeTree*, %struct.RenderData*, i32, i32, %struct.ColorManagedViewSettings*, %struct.ColorManagedDisplaySettings*) #2

declare dso_local void @mask_array(i32, [3 x float]*) #2

declare dso_local void @add_filt_fmask_coord([3 x float]*, float*, float*, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @tag_dependend_objects_for_render(%struct.Scene* %scene, i32 %renderlay) #0 !dbg !9784 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %renderlay.addr = alloca i32, align 4
  %sce_iter = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %object = alloca %struct.Object*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %virtualModifierData = alloca %struct.VirtualModifierData, align 8
  %bmd = alloca %struct.BooleanModifierData*, align 8
  %amd = alloca %struct.ArrayModifierData*, align 8
  %smd = alloca %struct.ShrinkwrapModifierData*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9787, metadata !DIExpression()), !dbg !9788
  store i32 %renderlay, i32* %renderlay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %renderlay.addr, metadata !9789, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce_iter, metadata !9791, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !9793, metadata !DIExpression()), !dbg !9796
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9797
  store %struct.Scene* %0, %struct.Scene** %sce_iter, align 8, !dbg !9797
  %call = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* null), !dbg !9797
  store %struct.Base* %call, %struct.Base** %base, align 8, !dbg !9797
  br label %for.cond, !dbg !9797

for.cond:                                         ; preds = %for.inc77, %entry
  %1 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9799
  %tobool = icmp ne %struct.Base* %1, null, !dbg !9801
  br i1 %tobool, label %for.body, label %for.end79, !dbg !9801

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Object** %object, metadata !9802, metadata !DIExpression()), !dbg !9804
  %2 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9805
  %object1 = getelementptr inbounds %struct.Base, %struct.Base* %2, i32 0, i32 7, !dbg !9806
  %3 = load %struct.Object*, %struct.Object** %object1, align 8, !dbg !9806
  store %struct.Object* %3, %struct.Object** %object, align 8, !dbg !9804
  %4 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9807
  %lay = getelementptr inbounds %struct.Base, %struct.Base* %4, i32 0, i32 2, !dbg !9809
  %5 = load i32, i32* %lay, align 8, !dbg !9809
  %6 = load i32, i32* %renderlay.addr, align 4, !dbg !9810
  %and = and i32 %5, %6, !dbg !9811
  %cmp = icmp eq i32 %and, 0, !dbg !9812
  br i1 %cmp, label %if.then, label %if.end, !dbg !9813

if.then:                                          ; preds = %for.body
  br label %for.inc77, !dbg !9814

if.end:                                           ; preds = %for.body
  %7 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !9816
  %type = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !9818
  %8 = load i16, i16* %type, align 8, !dbg !9818
  %conv = sext i16 %8 to i32, !dbg !9816
  %cmp2 = icmp eq i32 %conv, 1, !dbg !9819
  br i1 %cmp2, label %if.then4, label %if.end76, !dbg !9820

if.then4:                                         ; preds = %if.end
  %9 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !9821
  %call5 = call zeroext i8 @RE_allow_render_generic_object(%struct.Object* %9), !dbg !9824
  %tobool6 = icmp ne i8 %call5, 0, !dbg !9824
  br i1 %tobool6, label %if.then7, label %if.end75, !dbg !9825

if.then7:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !9826, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.declare(metadata %struct.VirtualModifierData* %virtualModifierData, metadata !9830, metadata !DIExpression()), !dbg !9870
  %10 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !9871
  %call8 = call %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object* %10, %struct.VirtualModifierData* %virtualModifierData), !dbg !9873
  store %struct.ModifierData* %call8, %struct.ModifierData** %md, align 8, !dbg !9874
  br label %for.cond9, !dbg !9875

for.cond9:                                        ; preds = %for.inc, %if.then7
  %11 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9876
  %tobool10 = icmp ne %struct.ModifierData* %11, null, !dbg !9878
  br i1 %tobool10, label %for.body11, label %for.end, !dbg !9878

for.body11:                                       ; preds = %for.cond9
  %12 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9879
  %13 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9882
  %call12 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %12, %struct.ModifierData* %13, i32 2), !dbg !9883
  %tobool13 = icmp ne i8 %call12, 0, !dbg !9883
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !9884

if.then14:                                        ; preds = %for.body11
  br label %for.inc, !dbg !9885

if.end15:                                         ; preds = %for.body11
  %14 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9887
  %type16 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %14, i32 0, i32 2, !dbg !9889
  %15 = load i32, i32* %type16, align 8, !dbg !9889
  %cmp17 = icmp eq i32 %15, 11, !dbg !9890
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !9891

if.then19:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata %struct.BooleanModifierData** %bmd, metadata !9892, metadata !DIExpression()), !dbg !9894
  %16 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9895
  %17 = bitcast %struct.ModifierData* %16 to %struct.BooleanModifierData*, !dbg !9896
  store %struct.BooleanModifierData* %17, %struct.BooleanModifierData** %bmd, align 8, !dbg !9894
  %18 = load %struct.BooleanModifierData*, %struct.BooleanModifierData** %bmd, align 8, !dbg !9897
  %object20 = getelementptr inbounds %struct.BooleanModifierData, %struct.BooleanModifierData* %18, i32 0, i32 1, !dbg !9899
  %19 = load %struct.Object*, %struct.Object** %object20, align 8, !dbg !9899
  %tobool21 = icmp ne %struct.Object* %19, null, !dbg !9897
  br i1 %tobool21, label %land.lhs.true, label %if.end29, !dbg !9900

land.lhs.true:                                    ; preds = %if.then19
  %20 = load %struct.BooleanModifierData*, %struct.BooleanModifierData** %bmd, align 8, !dbg !9901
  %object22 = getelementptr inbounds %struct.BooleanModifierData, %struct.BooleanModifierData* %20, i32 0, i32 1, !dbg !9902
  %21 = load %struct.Object*, %struct.Object** %object22, align 8, !dbg !9902
  %type23 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 3, !dbg !9903
  %22 = load i16, i16* %type23, align 8, !dbg !9903
  %conv24 = sext i16 %22 to i32, !dbg !9901
  %cmp25 = icmp eq i32 %conv24, 1, !dbg !9904
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !9905

if.then27:                                        ; preds = %land.lhs.true
  %23 = load %struct.BooleanModifierData*, %struct.BooleanModifierData** %bmd, align 8, !dbg !9906
  %object28 = getelementptr inbounds %struct.BooleanModifierData, %struct.BooleanModifierData* %23, i32 0, i32 1, !dbg !9908
  %24 = load %struct.Object*, %struct.Object** %object28, align 8, !dbg !9908
  %id = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 0, !dbg !9909
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !9910
  br label %if.end29, !dbg !9911

if.end29:                                         ; preds = %if.then27, %land.lhs.true, %if.then19
  br label %if.end74, !dbg !9912

if.else:                                          ; preds = %if.end15
  %25 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9913
  %type30 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %25, i32 0, i32 2, !dbg !9915
  %26 = load i32, i32* %type30, align 8, !dbg !9915
  %cmp31 = icmp eq i32 %26, 12, !dbg !9916
  br i1 %cmp31, label %if.then33, label %if.else56, !dbg !9917

if.then33:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.ArrayModifierData** %amd, metadata !9918, metadata !DIExpression()), !dbg !9920
  %27 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9921
  %28 = bitcast %struct.ModifierData* %27 to %struct.ArrayModifierData*, !dbg !9922
  store %struct.ArrayModifierData* %28, %struct.ArrayModifierData** %amd, align 8, !dbg !9920
  %29 = load %struct.ArrayModifierData*, %struct.ArrayModifierData** %amd, align 8, !dbg !9923
  %start_cap = getelementptr inbounds %struct.ArrayModifierData, %struct.ArrayModifierData* %29, i32 0, i32 1, !dbg !9925
  %30 = load %struct.Object*, %struct.Object** %start_cap, align 8, !dbg !9925
  %tobool34 = icmp ne %struct.Object* %30, null, !dbg !9923
  br i1 %tobool34, label %land.lhs.true35, label %if.end44, !dbg !9926

land.lhs.true35:                                  ; preds = %if.then33
  %31 = load %struct.ArrayModifierData*, %struct.ArrayModifierData** %amd, align 8, !dbg !9927
  %start_cap36 = getelementptr inbounds %struct.ArrayModifierData, %struct.ArrayModifierData* %31, i32 0, i32 1, !dbg !9928
  %32 = load %struct.Object*, %struct.Object** %start_cap36, align 8, !dbg !9928
  %type37 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 3, !dbg !9929
  %33 = load i16, i16* %type37, align 8, !dbg !9929
  %conv38 = sext i16 %33 to i32, !dbg !9927
  %cmp39 = icmp eq i32 %conv38, 1, !dbg !9930
  br i1 %cmp39, label %if.then41, label %if.end44, !dbg !9931

if.then41:                                        ; preds = %land.lhs.true35
  %34 = load %struct.ArrayModifierData*, %struct.ArrayModifierData** %amd, align 8, !dbg !9932
  %start_cap42 = getelementptr inbounds %struct.ArrayModifierData, %struct.ArrayModifierData* %34, i32 0, i32 1, !dbg !9934
  %35 = load %struct.Object*, %struct.Object** %start_cap42, align 8, !dbg !9934
  %id43 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 0, !dbg !9935
  call void @DAG_id_tag_update(%struct.ID* %id43, i16 signext 2), !dbg !9936
  br label %if.end44, !dbg !9937

if.end44:                                         ; preds = %if.then41, %land.lhs.true35, %if.then33
  %36 = load %struct.ArrayModifierData*, %struct.ArrayModifierData** %amd, align 8, !dbg !9938
  %end_cap = getelementptr inbounds %struct.ArrayModifierData, %struct.ArrayModifierData* %36, i32 0, i32 2, !dbg !9940
  %37 = load %struct.Object*, %struct.Object** %end_cap, align 8, !dbg !9940
  %tobool45 = icmp ne %struct.Object* %37, null, !dbg !9938
  br i1 %tobool45, label %land.lhs.true46, label %if.end55, !dbg !9941

land.lhs.true46:                                  ; preds = %if.end44
  %38 = load %struct.ArrayModifierData*, %struct.ArrayModifierData** %amd, align 8, !dbg !9942
  %end_cap47 = getelementptr inbounds %struct.ArrayModifierData, %struct.ArrayModifierData* %38, i32 0, i32 2, !dbg !9943
  %39 = load %struct.Object*, %struct.Object** %end_cap47, align 8, !dbg !9943
  %type48 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 3, !dbg !9944
  %40 = load i16, i16* %type48, align 8, !dbg !9944
  %conv49 = sext i16 %40 to i32, !dbg !9942
  %cmp50 = icmp eq i32 %conv49, 1, !dbg !9945
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !9946

if.then52:                                        ; preds = %land.lhs.true46
  %41 = load %struct.ArrayModifierData*, %struct.ArrayModifierData** %amd, align 8, !dbg !9947
  %end_cap53 = getelementptr inbounds %struct.ArrayModifierData, %struct.ArrayModifierData* %41, i32 0, i32 2, !dbg !9949
  %42 = load %struct.Object*, %struct.Object** %end_cap53, align 8, !dbg !9949
  %id54 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 0, !dbg !9950
  call void @DAG_id_tag_update(%struct.ID* %id54, i16 signext 2), !dbg !9951
  br label %if.end55, !dbg !9952

if.end55:                                         ; preds = %if.then52, %land.lhs.true46, %if.end44
  br label %if.end73, !dbg !9953

if.else56:                                        ; preds = %if.else
  %43 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9954
  %type57 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %43, i32 0, i32 2, !dbg !9956
  %44 = load i32, i32* %type57, align 8, !dbg !9956
  %cmp58 = icmp eq i32 %44, 25, !dbg !9957
  br i1 %cmp58, label %if.then60, label %if.end72, !dbg !9958

if.then60:                                        ; preds = %if.else56
  call void @llvm.dbg.declare(metadata %struct.ShrinkwrapModifierData** %smd, metadata !9959, metadata !DIExpression()), !dbg !9961
  %45 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9962
  %46 = bitcast %struct.ModifierData* %45 to %struct.ShrinkwrapModifierData*, !dbg !9963
  store %struct.ShrinkwrapModifierData* %46, %struct.ShrinkwrapModifierData** %smd, align 8, !dbg !9961
  %47 = load %struct.ShrinkwrapModifierData*, %struct.ShrinkwrapModifierData** %smd, align 8, !dbg !9964
  %target = getelementptr inbounds %struct.ShrinkwrapModifierData, %struct.ShrinkwrapModifierData* %47, i32 0, i32 1, !dbg !9966
  %48 = load %struct.Object*, %struct.Object** %target, align 8, !dbg !9966
  %tobool61 = icmp ne %struct.Object* %48, null, !dbg !9964
  br i1 %tobool61, label %land.lhs.true62, label %if.end71, !dbg !9967

land.lhs.true62:                                  ; preds = %if.then60
  %49 = load %struct.ShrinkwrapModifierData*, %struct.ShrinkwrapModifierData** %smd, align 8, !dbg !9968
  %target63 = getelementptr inbounds %struct.ShrinkwrapModifierData, %struct.ShrinkwrapModifierData* %49, i32 0, i32 1, !dbg !9969
  %50 = load %struct.Object*, %struct.Object** %target63, align 8, !dbg !9969
  %type64 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 3, !dbg !9970
  %51 = load i16, i16* %type64, align 8, !dbg !9970
  %conv65 = sext i16 %51 to i32, !dbg !9968
  %cmp66 = icmp eq i32 %conv65, 1, !dbg !9971
  br i1 %cmp66, label %if.then68, label %if.end71, !dbg !9972

if.then68:                                        ; preds = %land.lhs.true62
  %52 = load %struct.ShrinkwrapModifierData*, %struct.ShrinkwrapModifierData** %smd, align 8, !dbg !9973
  %target69 = getelementptr inbounds %struct.ShrinkwrapModifierData, %struct.ShrinkwrapModifierData* %52, i32 0, i32 1, !dbg !9975
  %53 = load %struct.Object*, %struct.Object** %target69, align 8, !dbg !9975
  %id70 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 0, !dbg !9976
  call void @DAG_id_tag_update(%struct.ID* %id70, i16 signext 2), !dbg !9977
  br label %if.end71, !dbg !9978

if.end71:                                         ; preds = %if.then68, %land.lhs.true62, %if.then60
  br label %if.end72, !dbg !9979

if.end72:                                         ; preds = %if.end71, %if.else56
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.end55
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.end29
  br label %for.inc, !dbg !9980

for.inc:                                          ; preds = %if.end74, %if.then14
  %54 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9981
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %54, i32 0, i32 0, !dbg !9982
  %55 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !9982
  store %struct.ModifierData* %55, %struct.ModifierData** %md, align 8, !dbg !9983
  br label %for.cond9, !dbg !9984, !llvm.loop !9985

for.end:                                          ; preds = %for.cond9
  br label %if.end75, !dbg !9987

if.end75:                                         ; preds = %for.end, %if.then4
  br label %if.end76, !dbg !9988

if.end76:                                         ; preds = %if.end75, %if.end
  br label %for.inc77, !dbg !9989

for.inc77:                                        ; preds = %if.end76, %if.then
  %56 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9799
  %call78 = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* %56), !dbg !9799
  store %struct.Base* %call78, %struct.Base** %base, align 8, !dbg !9799
  br label %for.cond, !dbg !9990, !llvm.loop !9991

for.end79:                                        ; preds = %for.cond
  ret void, !dbg !9993
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @rlayer_node_uses_alpha(%struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !9994 {
entry:
  %retval = alloca i8, align 1
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !9997, metadata !DIExpression()), !dbg !9998
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !9999, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !10001, metadata !DIExpression()), !dbg !10002
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10003
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 18, !dbg !10005
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !10006
  %1 = load i8*, i8** %first, align 8, !dbg !10006
  %2 = bitcast i8* %1 to %struct.bNodeSocket*, !dbg !10003
  store %struct.bNodeSocket* %2, %struct.bNodeSocket** %sock, align 8, !dbg !10007
  br label %for.cond, !dbg !10008

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !10009
  %tobool = icmp ne %struct.bNodeSocket* %3, null, !dbg !10011
  br i1 %tobool, label %for.body, label %for.end, !dbg !10011

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !10012
  %name = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %4, i32 0, i32 5, !dbg !10012
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10012
  %call = call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !10012
  %cmp = icmp eq i32 %call, 0, !dbg !10012
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10015

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !10016
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !10017
  %call1 = call i32 @nodeCountSocketLinks(%struct.bNodeTree* %5, %struct.bNodeSocket* %6), !dbg !10018
  %cmp2 = icmp sgt i32 %call1, 0, !dbg !10019
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10020

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !10021
  br label %return, !dbg !10021

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !10022

for.inc:                                          ; preds = %if.end
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !10023
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %7, i32 0, i32 0, !dbg !10024
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !10024
  store %struct.bNodeSocket* %8, %struct.bNodeSocket** %sock, align 8, !dbg !10025
  br label %for.cond, !dbg !10026, !llvm.loop !10027

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !10029
  br label %return, !dbg !10029

return:                                           ; preds = %for.end, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !10030
  ret i8 %9, !dbg !10030
}

declare dso_local %struct.Base* @_setlooper_base_step(%struct.Scene**, %struct.Base*) #2

declare dso_local %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object*, %struct.VirtualModifierData*) #2

declare dso_local zeroext i8 @modifier_isEnabled(%struct.Scene*, %struct.ModifierData*, i32) #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

declare dso_local i32 @nodeCountSocketLinks(%struct.bNodeTree*, %struct.bNodeSocket*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @node_tree_has_composite_output(%struct.bNodeTree* %ntree) #0 !dbg !10031 {
entry:
  %retval = alloca i8, align 1
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !10034, metadata !DIExpression()), !dbg !10035
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !10036, metadata !DIExpression()), !dbg !10037
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !10038
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !10040
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !10041
  %1 = load i8*, i8** %first, align 8, !dbg !10041
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !10038
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !10042
  br label %for.cond, !dbg !10043

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10044
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !10046
  br i1 %tobool, label %for.body, label %for.end, !dbg !10046

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10047
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 8, !dbg !10047
  %5 = load i16, i16* %type, align 4, !dbg !10047
  %conv = sext i16 %5 to i32, !dbg !10047
  %cmp = icmp eq i32 %conv, 222, !dbg !10047
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10047

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10047
  %type2 = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 8, !dbg !10047
  %7 = load i16, i16* %type2, align 4, !dbg !10047
  %conv3 = sext i16 %7 to i32, !dbg !10047
  %cmp4 = icmp eq i32 %conv3, 223, !dbg !10047
  br i1 %cmp4, label %if.then, label %if.else, !dbg !10050

if.then:                                          ; preds = %lor.lhs.false, %for.body
  store i8 1, i8* %retval, align 1, !dbg !10051
  br label %return, !dbg !10051

if.else:                                          ; preds = %lor.lhs.false
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10053
  %type6 = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 8, !dbg !10055
  %9 = load i16, i16* %type6, align 4, !dbg !10055
  %conv7 = sext i16 %9 to i32, !dbg !10053
  %cmp8 = icmp eq i32 %conv7, 2, !dbg !10056
  br i1 %cmp8, label %if.then10, label %if.end17, !dbg !10057

if.then10:                                        ; preds = %if.else
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10058
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 20, !dbg !10061
  %11 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !10061
  %tobool11 = icmp ne %struct.ID* %11, null, !dbg !10058
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !10062

if.then12:                                        ; preds = %if.then10
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10063
  %id13 = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 20, !dbg !10066
  %13 = load %struct.ID*, %struct.ID** %id13, align 8, !dbg !10066
  %14 = bitcast %struct.ID* %13 to %struct.bNodeTree*, !dbg !10067
  %call = call zeroext i8 @node_tree_has_composite_output(%struct.bNodeTree* %14), !dbg !10068
  %tobool14 = icmp ne i8 %call, 0, !dbg !10068
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !10069

if.then15:                                        ; preds = %if.then12
  store i8 1, i8* %retval, align 1, !dbg !10070
  br label %return, !dbg !10070

if.end:                                           ; preds = %if.then12
  br label %if.end16, !dbg !10072

if.end16:                                         ; preds = %if.end, %if.then10
  br label %if.end17, !dbg !10073

if.end17:                                         ; preds = %if.end16, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17
  br label %for.inc, !dbg !10074

for.inc:                                          ; preds = %if.end18
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10075
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 0, !dbg !10076
  %16 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !10076
  store %struct.bNode* %16, %struct.bNode** %node, align 8, !dbg !10077
  br label %for.cond, !dbg !10078, !llvm.loop !10079

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !10081
  br label %return, !dbg !10081

return:                                           ; preds = %for.end, %if.then15, %if.then
  %17 = load i8, i8* %retval, align 1, !dbg !10082
  ret i8 %17, !dbg !10082
}

declare dso_local %struct.Object* @BKE_scene_camera_find(%struct.Scene*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @check_valid_compositing_camera(%struct.Scene* %scene, %struct.Object* %camera_override) #0 !dbg !10083 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %camera_override.addr = alloca %struct.Object*, align 8
  %node = alloca %struct.bNode*, align 8
  %sce = alloca %struct.Scene*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !10086, metadata !DIExpression()), !dbg !10087
  store %struct.Object* %camera_override, %struct.Object** %camera_override.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %camera_override.addr, metadata !10088, metadata !DIExpression()), !dbg !10089
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10090
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 22, !dbg !10092
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !10093
  %1 = load i32, i32* %scemode, align 4, !dbg !10093
  %and = and i32 %1, 64, !dbg !10094
  %tobool = icmp ne i32 %and, 0, !dbg !10094
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10095

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10096
  %use_nodes = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 16, !dbg !10097
  %3 = load i8, i8* %use_nodes, align 2, !dbg !10097
  %conv = zext i8 %3 to i32, !dbg !10096
  %tobool1 = icmp ne i32 %conv, 0, !dbg !10096
  br i1 %tobool1, label %if.then, label %if.else, !dbg !10098

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !10099, metadata !DIExpression()), !dbg !10101
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10102
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 18, !dbg !10103
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !10103
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 7, !dbg !10104
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !10105
  %6 = load i8*, i8** %first, align 8, !dbg !10105
  %7 = bitcast i8* %6 to %struct.bNode*, !dbg !10102
  store %struct.bNode* %7, %struct.bNode** %node, align 8, !dbg !10101
  br label %while.cond, !dbg !10106

while.cond:                                       ; preds = %if.end16, %if.then
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10107
  %tobool2 = icmp ne %struct.bNode* %8, null, !dbg !10106
  br i1 %tobool2, label %while.body, label %while.end, !dbg !10106

while.body:                                       ; preds = %while.cond
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10108
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 8, !dbg !10111
  %10 = load i16, i16* %type, align 4, !dbg !10111
  %conv3 = sext i16 %10 to i32, !dbg !10108
  %cmp = icmp eq i32 %conv3, 221, !dbg !10112
  br i1 %cmp, label %land.lhs.true5, label %if.end16, !dbg !10113

land.lhs.true5:                                   ; preds = %while.body
  %11 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10114
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %11, i32 0, i32 7, !dbg !10115
  %12 = load i32, i32* %flag, align 8, !dbg !10115
  %and6 = and i32 %12, 512, !dbg !10116
  %cmp7 = icmp eq i32 %and6, 0, !dbg !10117
  br i1 %cmp7, label %if.then9, label %if.end16, !dbg !10118

if.then9:                                         ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce, metadata !10119, metadata !DIExpression()), !dbg !10121
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10122
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 20, !dbg !10123
  %14 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !10123
  %tobool10 = icmp ne %struct.ID* %14, null, !dbg !10122
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !10122

cond.true:                                        ; preds = %if.then9
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10124
  %id11 = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 20, !dbg !10125
  %16 = load %struct.ID*, %struct.ID** %id11, align 8, !dbg !10125
  %17 = bitcast %struct.ID* %16 to %struct.Scene*, !dbg !10126
  br label %cond.end, !dbg !10122

cond.false:                                       ; preds = %if.then9
  %18 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10127
  br label %cond.end, !dbg !10122

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Scene* [ %17, %cond.true ], [ %18, %cond.false ], !dbg !10122
  store %struct.Scene* %cond, %struct.Scene** %sce, align 8, !dbg !10121
  %19 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !10128
  %camera = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 2, !dbg !10130
  %20 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !10130
  %tobool12 = icmp ne %struct.Object* %20, null, !dbg !10128
  br i1 %tobool12, label %if.end, label %land.lhs.true13, !dbg !10131

land.lhs.true13:                                  ; preds = %cond.end
  %21 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !10132
  %call = call %struct.Object* @BKE_scene_camera_find(%struct.Scene* %21), !dbg !10133
  %tobool14 = icmp ne %struct.Object* %call, null, !dbg !10133
  br i1 %tobool14, label %if.end, label %if.then15, !dbg !10134

if.then15:                                        ; preds = %land.lhs.true13
  store i8 0, i8* %retval, align 1, !dbg !10135
  br label %return, !dbg !10135

if.end:                                           ; preds = %land.lhs.true13, %cond.end
  br label %if.end16, !dbg !10137

if.end16:                                         ; preds = %if.end, %land.lhs.true5, %while.body
  %22 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10138
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %22, i32 0, i32 0, !dbg !10139
  %23 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !10139
  store %struct.bNode* %23, %struct.bNode** %node, align 8, !dbg !10140
  br label %while.cond, !dbg !10106, !llvm.loop !10141

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval, align 1, !dbg !10143
  br label %return, !dbg !10143

if.else:                                          ; preds = %land.lhs.true, %entry
  %24 = load %struct.Object*, %struct.Object** %camera_override.addr, align 8, !dbg !10144
  %cmp17 = icmp ne %struct.Object* %24, null, !dbg !10146
  br i1 %cmp17, label %lor.end, label %lor.rhs, !dbg !10147

lor.rhs:                                          ; preds = %if.else
  %25 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10148
  %camera19 = getelementptr inbounds %struct.Scene, %struct.Scene* %25, i32 0, i32 2, !dbg !10149
  %26 = load %struct.Object*, %struct.Object** %camera19, align 8, !dbg !10149
  %cmp20 = icmp ne %struct.Object* %26, null, !dbg !10150
  br label %lor.end, !dbg !10147

lor.end:                                          ; preds = %lor.rhs, %if.else
  %27 = phi i1 [ true, %if.else ], [ %cmp20, %lor.rhs ]
  %lor.ext = zext i1 %27 to i32, !dbg !10147
  %conv22 = trunc i32 %lor.ext to i8, !dbg !10151
  store i8 %conv22, i8* %retval, align 1, !dbg !10152
  br label %return, !dbg !10152

return:                                           ; preds = %lor.end, %while.end, %if.then15
  %28 = load i8, i8* %retval, align 1, !dbg !10153
  ret i8 %28, !dbg !10153
}

declare dso_local void @render_result_single_layer_begin(%struct.Render*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @validate_render_settings(%struct.Render* %re) #0 !dbg !10154 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10155, metadata !DIExpression()), !dbg !10156
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10157
  %r = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 45, !dbg !10159
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !10160
  %1 = load i32, i32* %scemode, align 4, !dbg !10160
  %and = and i32 %1, 33792, !dbg !10161
  %tobool = icmp ne i32 %and, 0, !dbg !10161
  br i1 %tobool, label %if.then, label %if.end7, !dbg !10162

if.then:                                          ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10163
  %r1 = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 45, !dbg !10166
  %osa = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r1, i32 0, i32 54, !dbg !10167
  %3 = load i16, i16* %osa, align 2, !dbg !10167
  %conv = sext i16 %3 to i32, !dbg !10163
  %cmp = icmp eq i32 %conv, 0, !dbg !10168
  br i1 %cmp, label %if.then3, label %if.end, !dbg !10169

if.then3:                                         ; preds = %if.then
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10170
  %r4 = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 45, !dbg !10171
  %scemode5 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r4, i32 0, i32 46, !dbg !10172
  %5 = load i32, i32* %scemode5, align 4, !dbg !10173
  %and6 = and i32 %5, -32769, !dbg !10173
  store i32 %and6, i32* %scemode5, align 4, !dbg !10173
  br label %if.end, !dbg !10170

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end7, !dbg !10174

if.end7:                                          ; preds = %if.end, %entry
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10175
  %call = call zeroext i8 @RE_engine_is_external(%struct.Render* %6), !dbg !10177
  %tobool8 = icmp ne i8 %call, 0, !dbg !10177
  br i1 %tobool8, label %if.then9, label %if.end15, !dbg !10178

if.then9:                                         ; preds = %if.end7
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10179
  %r10 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 45, !dbg !10181
  %scemode11 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r10, i32 0, i32 46, !dbg !10182
  %8 = load i32, i32* %scemode11, align 4, !dbg !10183
  %and12 = and i32 %8, -32769, !dbg !10183
  store i32 %and12, i32* %scemode11, align 4, !dbg !10183
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10184
  %r13 = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 45, !dbg !10185
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r13, i32 0, i32 47, !dbg !10186
  %10 = load i32, i32* %mode, align 8, !dbg !10187
  %and14 = and i32 %10, -16449, !dbg !10187
  store i32 %and14, i32* %mode, align 8, !dbg !10187
  br label %if.end15, !dbg !10188

if.end15:                                         ; preds = %if.then9, %if.end7
  ret void, !dbg !10189
}

declare dso_local zeroext i8 @RE_engine_is_external(%struct.Render*) #2

declare dso_local i32 @BKE_scene_camera_switch_update(%struct.Scene*) #2

declare dso_local void @BKE_image_all_free_anim_ibufs(i32) #2

declare dso_local i32 @RE_engine_render(%struct.Render*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_render_seq(%struct.Render* %re) #0 !dbg !3573 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %out = alloca %struct.ImBuf*, align 8
  %rr = alloca %struct.RenderResult*, align 8
  %cfra = alloca i32, align 4
  %context = alloca %struct.SeqRenderData, align 8
  %tmp = alloca %struct.SeqRenderData, align 8
  %tmp12 = alloca %struct.SeqRenderData, align 8
  %ed = alloca %struct.Editing*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10190, metadata !DIExpression()), !dbg !10191
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !10192, metadata !DIExpression()), !dbg !10193
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %out, metadata !10194, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr, metadata !10196, metadata !DIExpression()), !dbg !10197
  call void @llvm.dbg.declare(metadata i32* %cfra, metadata !10198, metadata !DIExpression()), !dbg !10199
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10200
  %r = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 45, !dbg !10201
  %cfra1 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !10202
  %1 = load i32, i32* %cfra1, align 8, !dbg !10202
  store i32 %1, i32* %cfra, align 4, !dbg !10199
  call void @llvm.dbg.declare(metadata %struct.SeqRenderData* %context, metadata !10203, metadata !DIExpression()), !dbg !10218
  %2 = load i32, i32* %cfra, align 4, !dbg !10219
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10220
  %i = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 98, !dbg !10221
  %cfra2 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 0, !dbg !10222
  store i32 %2, i32* %cfra2, align 8, !dbg !10223
  %4 = load i32, i32* @do_render_seq.recurs_depth, align 4, !dbg !10224
  %cmp = icmp eq i32 %4, 0, !dbg !10226
  br i1 %cmp, label %if.then, label %if.end, !dbg !10227

if.then:                                          ; preds = %entry
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10228
  %main = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 43, !dbg !10230
  %6 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !10230
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10231
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 44, !dbg !10232
  %8 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10232
  %9 = load i32, i32* %cfra, align 4, !dbg !10233
  %conv = sitofp i32 %9 to float, !dbg !10234
  call void @BKE_animsys_evaluate_all_animation(%struct.Main* %6, %struct.Scene* %8, float %conv), !dbg !10235
  br label %if.end, !dbg !10236

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* @do_render_seq.recurs_depth, align 4, !dbg !10237
  %inc = add nsw i32 %10, 1, !dbg !10237
  store i32 %inc, i32* @do_render_seq.recurs_depth, align 4, !dbg !10237
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10238
  %r3 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 45, !dbg !10240
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r3, i32 0, i32 47, !dbg !10241
  %12 = load i32, i32* %mode, align 8, !dbg !10241
  %and = and i32 %12, 512, !dbg !10242
  %tobool = icmp ne i32 %and, 0, !dbg !10242
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10243

land.lhs.true:                                    ; preds = %if.end
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10244
  %r4 = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 45, !dbg !10245
  %mode5 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r4, i32 0, i32 47, !dbg !10246
  %14 = load i32, i32* %mode5, align 8, !dbg !10246
  %and6 = and i32 %14, 2048, !dbg !10247
  %cmp7 = icmp eq i32 %and6, 0, !dbg !10248
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !10249

if.then9:                                         ; preds = %land.lhs.true
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10250
  %eval_ctx = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 101, !dbg !10252
  %16 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !10252
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10253
  %main10 = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 43, !dbg !10254
  %18 = load %struct.Main*, %struct.Main** %main10, align 8, !dbg !10254
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10255
  %scene11 = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 44, !dbg !10256
  %20 = load %struct.Scene*, %struct.Scene** %scene11, align 8, !dbg !10256
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10257
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 13, !dbg !10258
  %22 = load i32, i32* %winx, align 4, !dbg !10258
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10259
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 14, !dbg !10260
  %24 = load i32, i32* %winy, align 8, !dbg !10260
  call void @BKE_sequencer_new_render_data(%struct.SeqRenderData* sret %tmp, %struct.EvaluationContext* %16, %struct.Main* %18, %struct.Scene* %20, i32 %22, i32 %24, i32 100), !dbg !10261
  %25 = bitcast %struct.SeqRenderData* %context to i8*, !dbg !10261
  %26 = bitcast %struct.SeqRenderData* %tmp to i8*, !dbg !10261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 48, i1 false), !dbg !10261
  br label %if.end17, !dbg !10262

if.else:                                          ; preds = %land.lhs.true, %if.end
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10263
  %eval_ctx13 = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 101, !dbg !10265
  %28 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx13, align 8, !dbg !10265
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10266
  %main14 = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 43, !dbg !10267
  %30 = load %struct.Main*, %struct.Main** %main14, align 8, !dbg !10267
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10268
  %scene15 = getelementptr inbounds %struct.Render, %struct.Render* %31, i32 0, i32 44, !dbg !10269
  %32 = load %struct.Scene*, %struct.Scene** %scene15, align 8, !dbg !10269
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10270
  %result = getelementptr inbounds %struct.Render, %struct.Render* %33, i32 0, i32 9, !dbg !10271
  %34 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !10271
  %rectx = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %34, i32 0, i32 2, !dbg !10272
  %35 = load i32, i32* %rectx, align 8, !dbg !10272
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10273
  %result16 = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 9, !dbg !10274
  %37 = load %struct.RenderResult*, %struct.RenderResult** %result16, align 8, !dbg !10274
  %recty = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %37, i32 0, i32 3, !dbg !10275
  %38 = load i32, i32* %recty, align 4, !dbg !10275
  call void @BKE_sequencer_new_render_data(%struct.SeqRenderData* sret %tmp12, %struct.EvaluationContext* %28, %struct.Main* %30, %struct.Scene* %32, i32 %35, i32 %38, i32 100), !dbg !10276
  %39 = bitcast %struct.SeqRenderData* %context to i8*, !dbg !10276
  %40 = bitcast %struct.SeqRenderData* %tmp12 to i8*, !dbg !10276
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 48, i1 false), !dbg !10276
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then9
  %41 = load i32, i32* %cfra, align 4, !dbg !10277
  %conv18 = sitofp i32 %41 to float, !dbg !10277
  %call = call %struct.ImBuf* @BKE_sequencer_give_ibuf(%struct.SeqRenderData* %context, float %conv18, i32 0), !dbg !10278
  store %struct.ImBuf* %call, %struct.ImBuf** %out, align 8, !dbg !10279
  %42 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !10280
  %tobool19 = icmp ne %struct.ImBuf* %42, null, !dbg !10280
  br i1 %tobool19, label %if.then20, label %if.else23, !dbg !10282

if.then20:                                        ; preds = %if.end17
  %43 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !10283
  %call21 = call %struct.ImBuf* @IMB_dupImBuf(%struct.ImBuf* %43), !dbg !10285
  store %struct.ImBuf* %call21, %struct.ImBuf** %ibuf, align 8, !dbg !10286
  %44 = load %struct.ImBuf*, %struct.ImBuf** %out, align 8, !dbg !10287
  call void @IMB_freeImBuf(%struct.ImBuf* %44), !dbg !10288
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10289
  %scene22 = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 44, !dbg !10290
  %46 = load %struct.Scene*, %struct.Scene** %scene22, align 8, !dbg !10290
  %47 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10291
  call void @BKE_sequencer_imbuf_from_sequencer_space(%struct.Scene* %46, %struct.ImBuf* %47), !dbg !10292
  br label %if.end24, !dbg !10293

if.else23:                                        ; preds = %if.end17
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !10294
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then20
  %48 = load i32, i32* @do_render_seq.recurs_depth, align 4, !dbg !10296
  %dec = add nsw i32 %48, -1, !dbg !10296
  store i32 %dec, i32* @do_render_seq.recurs_depth, align 4, !dbg !10296
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10297
  %result25 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 9, !dbg !10298
  %50 = load %struct.RenderResult*, %struct.RenderResult** %result25, align 8, !dbg !10298
  store %struct.RenderResult* %50, %struct.RenderResult** %rr, align 8, !dbg !10299
  %51 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10300
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %51, i32 0, i32 12, !dbg !10301
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 2), !dbg !10302
  %52 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10303
  %tobool26 = icmp ne %struct.ImBuf* %52, null, !dbg !10303
  br i1 %tobool26, label %if.then27, label %if.else39, !dbg !10305

if.then27:                                        ; preds = %if.end24
  %53 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !10306
  %54 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10308
  %r28 = getelementptr inbounds %struct.Render, %struct.Render* %54, i32 0, i32 45, !dbg !10309
  %55 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10310
  call void @render_result_rect_from_ibuf(%struct.RenderResult* %53, %struct.RenderData* %r28, %struct.ImBuf* %55), !dbg !10311
  %56 = load i32, i32* @do_render_seq.recurs_depth, align 4, !dbg !10312
  %cmp29 = icmp eq i32 %56, 0, !dbg !10314
  br i1 %cmp29, label %if.then31, label %if.end38, !dbg !10315

if.then31:                                        ; preds = %if.then27
  call void @llvm.dbg.declare(metadata %struct.Editing** %ed, metadata !10316, metadata !DIExpression()), !dbg !10318
  %57 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10319
  %scene32 = getelementptr inbounds %struct.Render, %struct.Render* %57, i32 0, i32 44, !dbg !10320
  %58 = load %struct.Scene*, %struct.Scene** %scene32, align 8, !dbg !10320
  %ed33 = getelementptr inbounds %struct.Scene, %struct.Scene* %58, i32 0, i32 19, !dbg !10321
  %59 = load %struct.Editing*, %struct.Editing** %ed33, align 8, !dbg !10321
  store %struct.Editing* %59, %struct.Editing** %ed, align 8, !dbg !10318
  %60 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !10322
  %tobool34 = icmp ne %struct.Editing* %60, null, !dbg !10322
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !10324

if.then35:                                        ; preds = %if.then31
  %61 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10325
  %scene36 = getelementptr inbounds %struct.Render, %struct.Render* %61, i32 0, i32 44, !dbg !10326
  %62 = load %struct.Scene*, %struct.Scene** %scene36, align 8, !dbg !10326
  %63 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !10327
  %seqbase = getelementptr inbounds %struct.Editing, %struct.Editing* %63, i32 0, i32 1, !dbg !10328
  call void @BKE_sequencer_free_imbuf(%struct.Scene* %62, %struct.ListBase* %seqbase, i8 zeroext 1), !dbg !10329
  br label %if.end37, !dbg !10329

if.end37:                                         ; preds = %if.then35, %if.then31
  br label %if.end38, !dbg !10330

if.end38:                                         ; preds = %if.end37, %if.then27
  %64 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !10331
  call void @IMB_freeImBuf(%struct.ImBuf* %64), !dbg !10332
  br label %if.end40, !dbg !10333

if.else39:                                        ; preds = %if.end24
  %65 = load %struct.RenderResult*, %struct.RenderResult** %rr, align 8, !dbg !10334
  call void @render_result_rect_fill_zero(%struct.RenderResult* %65), !dbg !10336
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.end38
  %66 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10337
  %resultmutex41 = getelementptr inbounds %struct.Render, %struct.Render* %66, i32 0, i32 12, !dbg !10338
  call void @BLI_rw_mutex_unlock(i32* %resultmutex41), !dbg !10339
  %67 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10340
  %r42 = getelementptr inbounds %struct.Render, %struct.Render* %67, i32 0, i32 45, !dbg !10341
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r42, i32 0, i32 46, !dbg !10342
  %68 = load i32, i32* %scemode, align 4, !dbg !10343
  %or = or i32 %68, 1, !dbg !10343
  store i32 %or, i32* %scemode, align 4, !dbg !10343
  %69 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10344
  %r43 = getelementptr inbounds %struct.Render, %struct.Render* %69, i32 0, i32 45, !dbg !10346
  %efra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r43, i32 0, i32 7, !dbg !10347
  %70 = load i32, i32* %efra, align 8, !dbg !10347
  %71 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10348
  %r44 = getelementptr inbounds %struct.Render, %struct.Render* %71, i32 0, i32 45, !dbg !10349
  %sfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r44, i32 0, i32 6, !dbg !10350
  %72 = load i32, i32* %sfra, align 4, !dbg !10350
  %cmp45 = icmp ne i32 %70, %72, !dbg !10351
  br i1 %cmp45, label %if.then47, label %if.else57, !dbg !10352

if.then47:                                        ; preds = %if.end40
  %73 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10353
  %progress = getelementptr inbounds %struct.Render, %struct.Render* %73, i32 0, i32 92, !dbg !10354
  %74 = load void (i8*, float)*, void (i8*, float)** %progress, align 8, !dbg !10354
  %75 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10355
  %prh = getelementptr inbounds %struct.Render, %struct.Render* %75, i32 0, i32 93, !dbg !10356
  %76 = load i8*, i8** %prh, align 8, !dbg !10356
  %77 = load i32, i32* %cfra, align 4, !dbg !10357
  %78 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10358
  %r48 = getelementptr inbounds %struct.Render, %struct.Render* %78, i32 0, i32 45, !dbg !10359
  %sfra49 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r48, i32 0, i32 6, !dbg !10360
  %79 = load i32, i32* %sfra49, align 4, !dbg !10360
  %sub = sub nsw i32 %77, %79, !dbg !10361
  %conv50 = sitofp i32 %sub to float, !dbg !10362
  %80 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10363
  %r51 = getelementptr inbounds %struct.Render, %struct.Render* %80, i32 0, i32 45, !dbg !10364
  %efra52 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r51, i32 0, i32 7, !dbg !10365
  %81 = load i32, i32* %efra52, align 8, !dbg !10365
  %82 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10366
  %r53 = getelementptr inbounds %struct.Render, %struct.Render* %82, i32 0, i32 45, !dbg !10367
  %sfra54 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r53, i32 0, i32 6, !dbg !10368
  %83 = load i32, i32* %sfra54, align 4, !dbg !10368
  %sub55 = sub nsw i32 %81, %83, !dbg !10369
  %conv56 = sitofp i32 %sub55 to float, !dbg !10370
  %div = fdiv float %conv50, %conv56, !dbg !10371
  call void %74(i8* %76, float %div), !dbg !10353
  br label %if.end60, !dbg !10353

if.else57:                                        ; preds = %if.end40
  %84 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10372
  %progress58 = getelementptr inbounds %struct.Render, %struct.Render* %84, i32 0, i32 92, !dbg !10373
  %85 = load void (i8*, float)*, void (i8*, float)** %progress58, align 8, !dbg !10373
  %86 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10374
  %prh59 = getelementptr inbounds %struct.Render, %struct.Render* %86, i32 0, i32 93, !dbg !10375
  %87 = load i8*, i8** %prh59, align 8, !dbg !10375
  call void %85(i8* %87, float 1.000000e+00), !dbg !10372
  br label %if.end60

if.end60:                                         ; preds = %if.else57, %if.then47
  %88 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10376
  %display_update = getelementptr inbounds %struct.Render, %struct.Render* %88, i32 0, i32 86, !dbg !10377
  %89 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !10377
  %90 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10378
  %duh = getelementptr inbounds %struct.Render, %struct.Render* %90, i32 0, i32 87, !dbg !10379
  %91 = load i8*, i8** %duh, align 8, !dbg !10379
  %92 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10380
  %result61 = getelementptr inbounds %struct.Render, %struct.Render* %92, i32 0, i32 9, !dbg !10381
  %93 = load %struct.RenderResult*, %struct.RenderResult** %result61, align 8, !dbg !10381
  call void %89(i8* %91, %struct.RenderResult* %93, %struct.rcti* null), !dbg !10376
  ret void, !dbg !10382
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_render_composite_fields_blur_3d(%struct.Render* %re) #0 !dbg !10383 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %update_newframe = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10384, metadata !DIExpression()), !dbg !10385
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !10386, metadata !DIExpression()), !dbg !10387
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10388
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 44, !dbg !10389
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10389
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 18, !dbg !10390
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !10390
  store %struct.bNodeTree* %2, %struct.bNodeTree** %ntree, align 8, !dbg !10387
  call void @llvm.dbg.declare(metadata i32* %update_newframe, metadata !10391, metadata !DIExpression()), !dbg !10392
  store i32 0, i32* %update_newframe, align 4, !dbg !10392
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10393
  %r = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 45, !dbg !10394
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !10395
  %4 = load i32, i32* %cfra, align 8, !dbg !10395
  call void @BLI_srandom(i32 %4), !dbg !10396
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10397
  %scene1 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 44, !dbg !10399
  %6 = load %struct.Scene*, %struct.Scene** %scene1, align 8, !dbg !10399
  %call = call i32 @composite_needs_render(%struct.Scene* %6, i32 1), !dbg !10400
  %tobool = icmp ne i32 %call, 0, !dbg !10400
  br i1 %tobool, label %if.then, label %if.else, !dbg !10401

if.then:                                          ; preds = %entry
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10402
  call void @ntreeFreeCache(%struct.bNodeTree* %7), !dbg !10404
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10405
  call void @do_render_fields_blur_3d(%struct.Render* %8), !dbg !10406
  br label %if.end10, !dbg !10407

if.else:                                          ; preds = %entry
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10408
  %r2 = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 45, !dbg !10410
  %cfra3 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r2, i32 0, i32 5, !dbg !10411
  %10 = load i32, i32* %cfra3, align 8, !dbg !10411
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10412
  %i = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 98, !dbg !10413
  %cfra4 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 0, !dbg !10414
  store i32 %10, i32* %cfra4, align 8, !dbg !10415
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10416
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 12, !dbg !10417
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 2), !dbg !10418
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10419
  %result = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 9, !dbg !10420
  %14 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !10420
  call void @render_result_free(%struct.RenderResult* %14), !dbg !10421
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10422
  %r5 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 45, !dbg !10424
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r5, i32 0, i32 47, !dbg !10425
  %16 = load i32, i32* %mode, align 8, !dbg !10425
  %and = and i32 %16, 2048, !dbg !10426
  %cmp = icmp eq i32 %and, 0, !dbg !10427
  br i1 %cmp, label %if.then6, label %if.end, !dbg !10428

if.then6:                                         ; preds = %if.else
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10429
  call void @render_result_disprect_to_full_resolution(%struct.Render* %17), !dbg !10431
  br label %if.end, !dbg !10432

if.end:                                           ; preds = %if.then6, %if.else
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10433
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10434
  %disprect = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 15, !dbg !10435
  %call7 = call %struct.RenderResult* @render_result_new(%struct.Render* %18, %struct.rcti* %disprect, i32 0, i32 0, i8* null), !dbg !10436
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10437
  %result8 = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 9, !dbg !10438
  store %struct.RenderResult* %call7, %struct.RenderResult** %result8, align 8, !dbg !10439
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10440
  %resultmutex9 = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 12, !dbg !10441
  call void @BLI_rw_mutex_unlock(i32* %resultmutex9), !dbg !10442
  store i32 1, i32* %update_newframe, align 4, !dbg !10443
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10444
  %r11 = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 45, !dbg !10446
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r11, i32 0, i32 46, !dbg !10447
  %23 = load i32, i32* %scemode, align 4, !dbg !10447
  %and12 = and i32 %23, 512, !dbg !10448
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10448
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !10449

if.then14:                                        ; preds = %if.end10
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10450
  %resultmutex15 = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 12, !dbg !10452
  call void @BLI_rw_mutex_lock(i32* %resultmutex15, i32 2), !dbg !10453
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10454
  call void @render_result_single_layer_end(%struct.Render* %25), !dbg !10455
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10456
  %resultmutex16 = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 12, !dbg !10457
  call void @BLI_rw_mutex_unlock(i32* %resultmutex16), !dbg !10458
  br label %if.end17, !dbg !10459

if.end17:                                         ; preds = %if.then14, %if.end10
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10460
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 96, !dbg !10462
  %28 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !10462
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10463
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 97, !dbg !10464
  %30 = load i8*, i8** %tbh, align 8, !dbg !10464
  %call18 = call i32 %28(i8* %30), !dbg !10460
  %tobool19 = icmp ne i32 %call18, 0, !dbg !10460
  br i1 %tobool19, label %if.end89, label %if.then20, !dbg !10465

if.then20:                                        ; preds = %if.end17
  %31 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10466
  %tobool21 = icmp ne %struct.bNodeTree* %31, null, !dbg !10466
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !10469

if.then22:                                        ; preds = %if.then20
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10470
  %scene23 = getelementptr inbounds %struct.Render, %struct.Render* %32, i32 0, i32 44, !dbg !10472
  %33 = load %struct.Scene*, %struct.Scene** %scene23, align 8, !dbg !10472
  call void @ntreeCompositTagRender(%struct.Scene* %33), !dbg !10473
  %34 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10474
  %call24 = call i32 @ntreeCompositTagAnimated(%struct.bNodeTree* %34), !dbg !10475
  br label %if.end25, !dbg !10476

if.end25:                                         ; preds = %if.then22, %if.then20
  %35 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10477
  %tobool26 = icmp ne %struct.bNodeTree* %35, null, !dbg !10477
  br i1 %tobool26, label %land.lhs.true, label %if.else81, !dbg !10479

land.lhs.true:                                    ; preds = %if.end25
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10480
  %scene27 = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 44, !dbg !10481
  %37 = load %struct.Scene*, %struct.Scene** %scene27, align 8, !dbg !10481
  %use_nodes = getelementptr inbounds %struct.Scene, %struct.Scene* %37, i32 0, i32 16, !dbg !10482
  %38 = load i8, i8* %use_nodes, align 2, !dbg !10482
  %conv = zext i8 %38 to i32, !dbg !10480
  %tobool28 = icmp ne i32 %conv, 0, !dbg !10480
  br i1 %tobool28, label %land.lhs.true29, label %if.else81, !dbg !10483

land.lhs.true29:                                  ; preds = %land.lhs.true
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10484
  %r30 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 45, !dbg !10485
  %scemode31 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r30, i32 0, i32 46, !dbg !10486
  %40 = load i32, i32* %scemode31, align 4, !dbg !10486
  %and32 = and i32 %40, 64, !dbg !10487
  %tobool33 = icmp ne i32 %and32, 0, !dbg !10487
  br i1 %tobool33, label %if.then34, label %if.else81, !dbg !10488

if.then34:                                        ; preds = %land.lhs.true29
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10489
  %r35 = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 45, !dbg !10492
  %scemode36 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r35, i32 0, i32 46, !dbg !10493
  %42 = load i32, i32* %scemode36, align 4, !dbg !10493
  %and37 = and i32 %42, 512, !dbg !10494
  %cmp38 = icmp eq i32 %and37, 0, !dbg !10495
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !10496

if.then40:                                        ; preds = %if.then34
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10497
  call void @ntree_render_scenes(%struct.Render* %43), !dbg !10498
  br label %if.end41, !dbg !10498

if.end41:                                         ; preds = %if.then40, %if.then34
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10499
  %test_break42 = getelementptr inbounds %struct.Render, %struct.Render* %44, i32 0, i32 96, !dbg !10501
  %45 = load i32 (i8*)*, i32 (i8*)** %test_break42, align 8, !dbg !10501
  %46 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10502
  %tbh43 = getelementptr inbounds %struct.Render, %struct.Render* %46, i32 0, i32 97, !dbg !10503
  %47 = load i8*, i8** %tbh43, align 8, !dbg !10503
  %call44 = call i32 %45(i8* %47), !dbg !10499
  %tobool45 = icmp ne i32 %call44, 0, !dbg !10499
  br i1 %tobool45, label %if.end80, label %if.then46, !dbg !10504

if.then46:                                        ; preds = %if.end41
  %48 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10505
  %stats_draw = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %48, i32 0, i32 29, !dbg !10507
  store void (i8*, i8*)* @render_composit_stats, void (i8*, i8*)** %stats_draw, align 8, !dbg !10508
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10509
  %test_break47 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 96, !dbg !10510
  %50 = load i32 (i8*)*, i32 (i8*)** %test_break47, align 8, !dbg !10510
  %51 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10511
  %test_break48 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %51, i32 0, i32 30, !dbg !10512
  store i32 (i8*)* %50, i32 (i8*)** %test_break48, align 8, !dbg !10513
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10514
  %progress = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 92, !dbg !10515
  %53 = load void (i8*, float)*, void (i8*, float)** %progress, align 8, !dbg !10515
  %54 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10516
  %progress49 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %54, i32 0, i32 28, !dbg !10517
  store void (i8*, float)* %53, void (i8*, float)** %progress49, align 8, !dbg !10518
  %55 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10519
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %55, i32 0, i32 91, !dbg !10520
  %56 = load i8*, i8** %sdh, align 8, !dbg !10520
  %57 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10521
  %sdh50 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %57, i32 0, i32 34, !dbg !10522
  store i8* %56, i8** %sdh50, align 8, !dbg !10523
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10524
  %tbh51 = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 97, !dbg !10525
  %59 = load i8*, i8** %tbh51, align 8, !dbg !10525
  %60 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10526
  %tbh52 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %60, i32 0, i32 32, !dbg !10527
  store i8* %59, i8** %tbh52, align 8, !dbg !10528
  %61 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10529
  %prh = getelementptr inbounds %struct.Render, %struct.Render* %61, i32 0, i32 93, !dbg !10530
  %62 = load i8*, i8** %prh, align 8, !dbg !10530
  %63 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10531
  %prh53 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %63, i32 0, i32 33, !dbg !10532
  store i8* %62, i8** %prh53, align 8, !dbg !10533
  %64 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10534
  %sdh54 = getelementptr inbounds %struct.Render, %struct.Render* %64, i32 0, i32 91, !dbg !10535
  %65 = load i8*, i8** %sdh54, align 8, !dbg !10535
  store i8* %65, i8** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 91), align 8, !dbg !10536
  %66 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10537
  %stats_draw55 = getelementptr inbounds %struct.Render, %struct.Render* %66, i32 0, i32 90, !dbg !10538
  %67 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw55, align 8, !dbg !10538
  store void (i8*, %struct.RenderStats*)* %67, void (i8*, %struct.RenderStats*)** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 90), align 8, !dbg !10539
  %68 = load i32, i32* %update_newframe, align 4, !dbg !10540
  %tobool56 = icmp ne i32 %68, 0, !dbg !10540
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !10542

if.then57:                                        ; preds = %if.then46
  %69 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10543
  %eval_ctx = getelementptr inbounds %struct.Render, %struct.Render* %69, i32 0, i32 101, !dbg !10544
  %70 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !10544
  %71 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10545
  %main = getelementptr inbounds %struct.Render, %struct.Render* %71, i32 0, i32 43, !dbg !10546
  %72 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !10546
  %73 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10547
  %scene58 = getelementptr inbounds %struct.Render, %struct.Render* %73, i32 0, i32 44, !dbg !10548
  %74 = load %struct.Scene*, %struct.Scene** %scene58, align 8, !dbg !10548
  %75 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10549
  %lay = getelementptr inbounds %struct.Render, %struct.Render* %75, i32 0, i32 48, !dbg !10550
  %76 = load i32, i32* %lay, align 8, !dbg !10550
  call void @BKE_scene_update_for_newframe(%struct.EvaluationContext* %70, %struct.Main* %72, %struct.Scene* %74, i32 %76), !dbg !10551
  br label %if.end59, !dbg !10551

if.end59:                                         ; preds = %if.then57, %if.then46
  %77 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10552
  %r60 = getelementptr inbounds %struct.Render, %struct.Render* %77, i32 0, i32 45, !dbg !10554
  %scemode61 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r60, i32 0, i32 46, !dbg !10555
  %78 = load i32, i32* %scemode61, align 4, !dbg !10555
  %and62 = and i32 %78, 32768, !dbg !10556
  %tobool63 = icmp ne i32 %and62, 0, !dbg !10556
  br i1 %tobool63, label %if.then64, label %if.else65, !dbg !10557

if.then64:                                        ; preds = %if.end59
  %79 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10558
  %80 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10559
  call void @do_merge_fullsample(%struct.Render* %79, %struct.bNodeTree* %80), !dbg !10560
  br label %if.end73, !dbg !10560

if.else65:                                        ; preds = %if.end59
  %81 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10561
  %scene66 = getelementptr inbounds %struct.Render, %struct.Render* %81, i32 0, i32 44, !dbg !10563
  %82 = load %struct.Scene*, %struct.Scene** %scene66, align 8, !dbg !10563
  %83 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10564
  %84 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10565
  %r67 = getelementptr inbounds %struct.Render, %struct.Render* %84, i32 0, i32 45, !dbg !10566
  %85 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 8), align 1, !dbg !10567
  %conv68 = zext i8 %85 to i32, !dbg !10568
  %cmp69 = icmp eq i32 %conv68, 0, !dbg !10569
  %conv70 = zext i1 %cmp69 to i32, !dbg !10569
  %86 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10570
  %scene71 = getelementptr inbounds %struct.Render, %struct.Render* %86, i32 0, i32 44, !dbg !10571
  %87 = load %struct.Scene*, %struct.Scene** %scene71, align 8, !dbg !10571
  %view_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %87, i32 0, i32 44, !dbg !10572
  %88 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10573
  %scene72 = getelementptr inbounds %struct.Render, %struct.Render* %88, i32 0, i32 44, !dbg !10574
  %89 = load %struct.Scene*, %struct.Scene** %scene72, align 8, !dbg !10574
  %display_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %89, i32 0, i32 45, !dbg !10575
  call void @ntreeCompositExecTree(%struct.Scene* %82, %struct.bNodeTree* %83, %struct.RenderData* %r67, i32 1, i32 %conv70, %struct.ColorManagedViewSettings* %view_settings, %struct.ColorManagedDisplaySettings* %display_settings), !dbg !10576
  br label %if.end73

if.end73:                                         ; preds = %if.else65, %if.then64
  %90 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10577
  %stats_draw74 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %90, i32 0, i32 29, !dbg !10578
  store void (i8*, i8*)* null, void (i8*, i8*)** %stats_draw74, align 8, !dbg !10579
  %91 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10580
  %test_break75 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %91, i32 0, i32 30, !dbg !10581
  store i32 (i8*)* null, i32 (i8*)** %test_break75, align 8, !dbg !10582
  %92 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10583
  %progress76 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %92, i32 0, i32 28, !dbg !10584
  store void (i8*, float)* null, void (i8*, float)** %progress76, align 8, !dbg !10585
  %93 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10586
  %prh77 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %93, i32 0, i32 33, !dbg !10587
  store i8* null, i8** %prh77, align 8, !dbg !10588
  %94 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10589
  %sdh78 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %94, i32 0, i32 34, !dbg !10590
  store i8* null, i8** %sdh78, align 8, !dbg !10591
  %95 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !10592
  %tbh79 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %95, i32 0, i32 32, !dbg !10593
  store i8* null, i8** %tbh79, align 8, !dbg !10594
  br label %if.end80, !dbg !10595

if.end80:                                         ; preds = %if.end73, %if.end41
  br label %if.end88, !dbg !10596

if.else81:                                        ; preds = %land.lhs.true29, %land.lhs.true, %if.end25
  %96 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10597
  %r82 = getelementptr inbounds %struct.Render, %struct.Render* %96, i32 0, i32 45, !dbg !10599
  %scemode83 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r82, i32 0, i32 46, !dbg !10600
  %97 = load i32, i32* %scemode83, align 4, !dbg !10600
  %and84 = and i32 %97, 32768, !dbg !10601
  %tobool85 = icmp ne i32 %and84, 0, !dbg !10601
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !10602

if.then86:                                        ; preds = %if.else81
  %98 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10603
  call void @do_merge_fullsample(%struct.Render* %98, %struct.bNodeTree* null), !dbg !10604
  br label %if.end87, !dbg !10604

if.end87:                                         ; preds = %if.then86, %if.else81
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end80
  br label %if.end89, !dbg !10605

if.end89:                                         ; preds = %if.end88, %if.end17
  %99 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10606
  %100 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10607
  %result90 = getelementptr inbounds %struct.Render, %struct.Render* %100, i32 0, i32 9, !dbg !10608
  %101 = load %struct.RenderResult*, %struct.RenderResult** %result90, align 8, !dbg !10608
  %call91 = call %struct.RenderLayer* @render_get_active_layer(%struct.Render* %99, %struct.RenderResult* %101), !dbg !10609
  %102 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10610
  %result92 = getelementptr inbounds %struct.Render, %struct.Render* %102, i32 0, i32 9, !dbg !10611
  %103 = load %struct.RenderResult*, %struct.RenderResult** %result92, align 8, !dbg !10611
  %renlay = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %103, i32 0, i32 14, !dbg !10612
  store %struct.RenderLayer* %call91, %struct.RenderLayer** %renlay, align 8, !dbg !10613
  %104 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10614
  %display_update = getelementptr inbounds %struct.Render, %struct.Render* %104, i32 0, i32 86, !dbg !10615
  %105 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !10615
  %106 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10616
  %duh = getelementptr inbounds %struct.Render, %struct.Render* %106, i32 0, i32 87, !dbg !10617
  %107 = load i8*, i8** %duh, align 8, !dbg !10617
  %108 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10618
  %result93 = getelementptr inbounds %struct.Render, %struct.Render* %108, i32 0, i32 9, !dbg !10619
  %109 = load %struct.RenderResult*, %struct.RenderResult** %result93, align 8, !dbg !10619
  call void %105(i8* %107, %struct.RenderResult* %109, %struct.rcti* null), !dbg !10614
  ret void, !dbg !10620
}

; Function Attrs: noinline nounwind uwtable
define internal void @renderresult_stampinfo(%struct.Render* %re) #0 !dbg !10621 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %rres = alloca %struct.RenderResult, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10622, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.declare(metadata %struct.RenderResult* %rres, metadata !10624, metadata !DIExpression()), !dbg !10625
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10626
  call void @RE_AcquireResultImage(%struct.Render* %0, %struct.RenderResult* %rres), !dbg !10627
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10628
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 44, !dbg !10629
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10629
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10630
  %call = call %struct.Object* @RE_GetCamera(%struct.Render* %3), !dbg !10631
  %rect32 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 6, !dbg !10632
  %4 = load i32*, i32** %rect32, align 8, !dbg !10632
  %5 = bitcast i32* %4 to i8*, !dbg !10633
  %rectf = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 7, !dbg !10634
  %6 = load float*, float** %rectf, align 8, !dbg !10634
  %rectx = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 2, !dbg !10635
  %7 = load i32, i32* %rectx, align 8, !dbg !10635
  %recty = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %rres, i32 0, i32 3, !dbg !10636
  %8 = load i32, i32* %recty, align 4, !dbg !10636
  call void @BKE_stamp_buf(%struct.Scene* %2, %struct.Object* %call, i8* %5, float* %6, i32 %7, i32 %8, i32 4), !dbg !10637
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10638
  call void @RE_ReleaseResultImage(%struct.Render* %9), !dbg !10639
  ret void, !dbg !10640
}

declare dso_local void @BKE_animsys_evaluate_all_animation(%struct.Main*, %struct.Scene*, float) #2

declare dso_local void @BKE_sequencer_new_render_data(%struct.SeqRenderData* sret, %struct.EvaluationContext*, %struct.Main*, %struct.Scene*, i32, i32, i32) #2

declare dso_local %struct.ImBuf* @BKE_sequencer_give_ibuf(%struct.SeqRenderData*, float, i32) #2

declare dso_local %struct.ImBuf* @IMB_dupImBuf(%struct.ImBuf*) #2

declare dso_local void @BKE_sequencer_imbuf_from_sequencer_space(%struct.Scene*, %struct.ImBuf*) #2

declare dso_local void @render_result_rect_from_ibuf(%struct.RenderResult*, %struct.RenderData*, %struct.ImBuf*) #2

declare dso_local void @BKE_sequencer_free_imbuf(%struct.Scene*, %struct.ListBase*, i8 zeroext) #2

declare dso_local void @render_result_rect_fill_zero(%struct.RenderResult*) #2

declare dso_local void @BLI_srandom(i32) #2

declare dso_local void @ntreeFreeCache(%struct.bNodeTree*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_render_fields_blur_3d(%struct.Render* %re) #0 !dbg !10641 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %camera = alloca %struct.Object*, align 8
  %rres = alloca %struct.RenderResult*, align 8
  %orig_disprect = alloca %struct.rcti, align 4
  %orig_rectx = alloca i32, align 4
  %orig_recty = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10642, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.declare(metadata %struct.Object** %camera, metadata !10644, metadata !DIExpression()), !dbg !10645
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10646
  %call = call %struct.Object* @RE_GetCamera(%struct.Render* %0), !dbg !10647
  store %struct.Object* %call, %struct.Object** %camera, align 8, !dbg !10645
  %1 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !10648
  %cmp = icmp eq %struct.Object* %1, null, !dbg !10650
  br i1 %cmp, label %if.then, label %if.end, !dbg !10651

if.then:                                          ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10652
  %reports = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 99, !dbg !10654
  %3 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !10654
  call void @BKE_report(%struct.ReportList* %3, i32 32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0)), !dbg !10655
  store i8 1, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !10656
  br label %if.end46, !dbg !10657

if.end:                                           ; preds = %entry
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10658
  %5 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !10659
  call void @RE_SetCamera(%struct.Render* %4, %struct.Object* %5), !dbg !10660
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10661
  %r = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 45, !dbg !10663
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !10664
  %7 = load i32, i32* %mode, align 8, !dbg !10664
  %and = and i32 %7, 64, !dbg !10665
  %tobool = icmp ne i32 %and, 0, !dbg !10665
  br i1 %tobool, label %if.then1, label %if.else, !dbg !10666

if.then1:                                         ; preds = %if.end
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10667
  call void @do_render_fields_3d(%struct.Render* %8), !dbg !10668
  br label %if.end12, !dbg !10668

if.else:                                          ; preds = %if.end
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10669
  %r2 = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 45, !dbg !10671
  %mode3 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r2, i32 0, i32 47, !dbg !10672
  %10 = load i32, i32* %mode3, align 8, !dbg !10672
  %and4 = and i32 %10, 16384, !dbg !10673
  %tobool5 = icmp ne i32 %and4, 0, !dbg !10673
  br i1 %tobool5, label %land.lhs.true, label %if.else10, !dbg !10674

land.lhs.true:                                    ; preds = %if.else
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10675
  %r6 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 45, !dbg !10676
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r6, i32 0, i32 46, !dbg !10677
  %12 = load i32, i32* %scemode, align 4, !dbg !10677
  %and7 = and i32 %12, 32768, !dbg !10678
  %cmp8 = icmp eq i32 %and7, 0, !dbg !10679
  br i1 %cmp8, label %if.then9, label %if.else10, !dbg !10680

if.then9:                                         ; preds = %land.lhs.true
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10681
  call void @do_render_blur_3d(%struct.Render* %13), !dbg !10682
  br label %if.end11, !dbg !10682

if.else10:                                        ; preds = %land.lhs.true, %if.else
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10683
  call void @do_render_3d(%struct.Render* %14), !dbg !10684
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.then9
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then1
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10685
  %result = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 9, !dbg !10687
  %16 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !10687
  %tobool13 = icmp ne %struct.RenderResult* %16, null, !dbg !10685
  br i1 %tobool13, label %if.then14, label %if.end46, !dbg !10688

if.then14:                                        ; preds = %if.end12
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10689
  %r15 = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 45, !dbg !10692
  %mode16 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r15, i32 0, i32 47, !dbg !10693
  %18 = load i32, i32* %mode16, align 8, !dbg !10693
  %and17 = and i32 %18, 512, !dbg !10694
  %tobool18 = icmp ne i32 %and17, 0, !dbg !10694
  br i1 %tobool18, label %if.then19, label %if.end45, !dbg !10695

if.then19:                                        ; preds = %if.then14
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10696
  %r20 = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 45, !dbg !10699
  %mode21 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r20, i32 0, i32 47, !dbg !10700
  %20 = load i32, i32* %mode21, align 8, !dbg !10700
  %and22 = and i32 %20, 2048, !dbg !10701
  %cmp23 = icmp eq i32 %and22, 0, !dbg !10702
  br i1 %cmp23, label %if.then24, label %if.else41, !dbg !10703

if.then24:                                        ; preds = %if.then19
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rres, metadata !10704, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.declare(metadata %struct.rcti* %orig_disprect, metadata !10707, metadata !DIExpression()), !dbg !10709
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10710
  %disprect = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 15, !dbg !10711
  %22 = bitcast %struct.rcti* %orig_disprect to i8*, !dbg !10711
  %23 = bitcast %struct.rcti* %disprect to i8*, !dbg !10711
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 16, i1 false), !dbg !10711
  call void @llvm.dbg.declare(metadata i32* %orig_rectx, metadata !10712, metadata !DIExpression()), !dbg !10713
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10714
  %rectx = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 20, !dbg !10715
  %25 = load i32, i32* %rectx, align 8, !dbg !10715
  store i32 %25, i32* %orig_rectx, align 4, !dbg !10713
  call void @llvm.dbg.declare(metadata i32* %orig_recty, metadata !10716, metadata !DIExpression()), !dbg !10717
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10718
  %recty = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 21, !dbg !10719
  %27 = load i32, i32* %recty, align 4, !dbg !10719
  store i32 %27, i32* %orig_recty, align 4, !dbg !10717
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10720
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 12, !dbg !10721
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 2), !dbg !10722
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10723
  %result25 = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 9, !dbg !10724
  %30 = load %struct.RenderResult*, %struct.RenderResult** %result25, align 8, !dbg !10724
  %tilerect = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %30, i32 0, i32 9, !dbg !10725
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10726
  %disprect26 = getelementptr inbounds %struct.Render, %struct.Render* %31, i32 0, i32 15, !dbg !10727
  %32 = bitcast %struct.rcti* %tilerect to i8*, !dbg !10727
  %33 = bitcast %struct.rcti* %disprect26 to i8*, !dbg !10727
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 4 %33, i64 16, i1 false), !dbg !10727
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10728
  call void @render_result_disprect_to_full_resolution(%struct.Render* %34), !dbg !10729
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10730
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10731
  %disprect27 = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 15, !dbg !10732
  %call28 = call %struct.RenderResult* @render_result_new(%struct.Render* %35, %struct.rcti* %disprect27, i32 0, i32 0, i8* null), !dbg !10733
  store %struct.RenderResult* %call28, %struct.RenderResult** %rres, align 8, !dbg !10734
  %37 = load %struct.RenderResult*, %struct.RenderResult** %rres, align 8, !dbg !10735
  %38 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10736
  %result29 = getelementptr inbounds %struct.Render, %struct.Render* %38, i32 0, i32 9, !dbg !10737
  %39 = load %struct.RenderResult*, %struct.RenderResult** %result29, align 8, !dbg !10737
  call void @render_result_merge(%struct.RenderResult* %37, %struct.RenderResult* %39), !dbg !10738
  %40 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10739
  %result30 = getelementptr inbounds %struct.Render, %struct.Render* %40, i32 0, i32 9, !dbg !10740
  %41 = load %struct.RenderResult*, %struct.RenderResult** %result30, align 8, !dbg !10740
  call void @render_result_free(%struct.RenderResult* %41), !dbg !10741
  %42 = load %struct.RenderResult*, %struct.RenderResult** %rres, align 8, !dbg !10742
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10743
  %result31 = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 9, !dbg !10744
  store %struct.RenderResult* %42, %struct.RenderResult** %result31, align 8, !dbg !10745
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10746
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10747
  %result32 = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 9, !dbg !10748
  %46 = load %struct.RenderResult*, %struct.RenderResult** %result32, align 8, !dbg !10748
  %call33 = call %struct.RenderLayer* @render_get_active_layer(%struct.Render* %44, %struct.RenderResult* %46), !dbg !10749
  %47 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10750
  %result34 = getelementptr inbounds %struct.Render, %struct.Render* %47, i32 0, i32 9, !dbg !10751
  %48 = load %struct.RenderResult*, %struct.RenderResult** %result34, align 8, !dbg !10751
  %renlay = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %48, i32 0, i32 14, !dbg !10752
  store %struct.RenderLayer* %call33, %struct.RenderLayer** %renlay, align 8, !dbg !10753
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10754
  %resultmutex35 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 12, !dbg !10755
  call void @BLI_rw_mutex_unlock(i32* %resultmutex35), !dbg !10756
  %50 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10757
  %display_init = getelementptr inbounds %struct.Render, %struct.Render* %50, i32 0, i32 82, !dbg !10758
  %51 = load void (i8*, %struct.RenderResult*)*, void (i8*, %struct.RenderResult*)** %display_init, align 8, !dbg !10758
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10759
  %dih = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 83, !dbg !10760
  %53 = load i8*, i8** %dih, align 8, !dbg !10760
  %54 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10761
  %result36 = getelementptr inbounds %struct.Render, %struct.Render* %54, i32 0, i32 9, !dbg !10762
  %55 = load %struct.RenderResult*, %struct.RenderResult** %result36, align 8, !dbg !10762
  call void %51(i8* %53, %struct.RenderResult* %55), !dbg !10757
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10763
  %display_update = getelementptr inbounds %struct.Render, %struct.Render* %56, i32 0, i32 86, !dbg !10764
  %57 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !10764
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10765
  %duh = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 87, !dbg !10766
  %59 = load i8*, i8** %duh, align 8, !dbg !10766
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10767
  %result37 = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 9, !dbg !10768
  %61 = load %struct.RenderResult*, %struct.RenderResult** %result37, align 8, !dbg !10768
  call void %57(i8* %59, %struct.RenderResult* %61, %struct.rcti* null), !dbg !10763
  %62 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10769
  %disprect38 = getelementptr inbounds %struct.Render, %struct.Render* %62, i32 0, i32 15, !dbg !10770
  %63 = bitcast %struct.rcti* %disprect38 to i8*, !dbg !10771
  %64 = bitcast %struct.rcti* %orig_disprect to i8*, !dbg !10771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 16, i1 false), !dbg !10771
  %65 = load i32, i32* %orig_rectx, align 4, !dbg !10772
  %66 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10773
  %rectx39 = getelementptr inbounds %struct.Render, %struct.Render* %66, i32 0, i32 20, !dbg !10774
  store i32 %65, i32* %rectx39, align 8, !dbg !10775
  %67 = load i32, i32* %orig_recty, align 4, !dbg !10776
  %68 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10777
  %recty40 = getelementptr inbounds %struct.Render, %struct.Render* %68, i32 0, i32 21, !dbg !10778
  store i32 %67, i32* %recty40, align 4, !dbg !10779
  br label %if.end44, !dbg !10780

if.else41:                                        ; preds = %if.then19
  %69 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10781
  %result42 = getelementptr inbounds %struct.Render, %struct.Render* %69, i32 0, i32 9, !dbg !10783
  %70 = load %struct.RenderResult*, %struct.RenderResult** %result42, align 8, !dbg !10783
  %xof = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %70, i32 0, i32 10, !dbg !10784
  store i32 0, i32* %xof, align 8, !dbg !10785
  %71 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10786
  %result43 = getelementptr inbounds %struct.Render, %struct.Render* %71, i32 0, i32 9, !dbg !10787
  %72 = load %struct.RenderResult*, %struct.RenderResult** %result43, align 8, !dbg !10787
  %yof = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %72, i32 0, i32 11, !dbg !10788
  store i32 0, i32* %yof, align 4, !dbg !10789
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %if.then24
  br label %if.end45, !dbg !10790

if.end45:                                         ; preds = %if.end44, %if.then14
  br label %if.end46, !dbg !10791

if.end46:                                         ; preds = %if.then, %if.end45, %if.end12
  ret void, !dbg !10792
}

; Function Attrs: noinline nounwind uwtable
define internal void @render_result_disprect_to_full_resolution(%struct.Render* %re) #0 !dbg !10793 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10794, metadata !DIExpression()), !dbg !10795
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10796
  %disprect = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 15, !dbg !10797
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !10798
  store i32 0, i32* %ymin, align 4, !dbg !10799
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10800
  %disprect1 = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 15, !dbg !10801
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect1, i32 0, i32 0, !dbg !10802
  store i32 0, i32* %xmin, align 4, !dbg !10803
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10804
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 13, !dbg !10805
  %3 = load i32, i32* %winx, align 4, !dbg !10805
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10806
  %disprect2 = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 15, !dbg !10807
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect2, i32 0, i32 1, !dbg !10808
  store i32 %3, i32* %xmax, align 4, !dbg !10809
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10810
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 14, !dbg !10811
  %6 = load i32, i32* %winy, align 8, !dbg !10811
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10812
  %disprect3 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 15, !dbg !10813
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect3, i32 0, i32 3, !dbg !10814
  store i32 %6, i32* %ymax, align 4, !dbg !10815
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10816
  %winx4 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 13, !dbg !10817
  %9 = load i32, i32* %winx4, align 4, !dbg !10817
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10818
  %rectx = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 20, !dbg !10819
  store i32 %9, i32* %rectx, align 8, !dbg !10820
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10821
  %winy5 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 14, !dbg !10822
  %12 = load i32, i32* %winy5, align 8, !dbg !10822
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10823
  %recty = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 21, !dbg !10824
  store i32 %12, i32* %recty, align 4, !dbg !10825
  ret void, !dbg !10826
}

declare dso_local void @render_result_single_layer_end(%struct.Render*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ntree_render_scenes(%struct.Render* %re) #0 !dbg !10827 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %node = alloca %struct.bNode*, align 8
  %cfra = alloca i32, align 4
  %restore_scene = alloca %struct.Scene*, align 8
  %scene_changed = alloca i8, align 1
  %scene22 = alloca %struct.Scene*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10828, metadata !DIExpression()), !dbg !10829
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !10830, metadata !DIExpression()), !dbg !10831
  call void @llvm.dbg.declare(metadata i32* %cfra, metadata !10832, metadata !DIExpression()), !dbg !10833
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10834
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 44, !dbg !10835
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10835
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 22, !dbg !10836
  %cfra1 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !10837
  %2 = load i32, i32* %cfra1, align 8, !dbg !10837
  store i32 %2, i32* %cfra, align 4, !dbg !10833
  call void @llvm.dbg.declare(metadata %struct.Scene** %restore_scene, metadata !10838, metadata !DIExpression()), !dbg !10839
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10840
  %scene2 = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 44, !dbg !10841
  %4 = load %struct.Scene*, %struct.Scene** %scene2, align 8, !dbg !10841
  store %struct.Scene* %4, %struct.Scene** %restore_scene, align 8, !dbg !10839
  call void @llvm.dbg.declare(metadata i8* %scene_changed, metadata !10842, metadata !DIExpression()), !dbg !10843
  store i8 0, i8* %scene_changed, align 1, !dbg !10843
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10844
  %scene3 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 44, !dbg !10846
  %6 = load %struct.Scene*, %struct.Scene** %scene3, align 8, !dbg !10846
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 18, !dbg !10847
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !10847
  %cmp = icmp eq %struct.bNodeTree* %7, null, !dbg !10848
  br i1 %cmp, label %if.then, label %if.end, !dbg !10849

if.then:                                          ; preds = %entry
  br label %if.end37, !dbg !10850

if.end:                                           ; preds = %entry
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10851
  call void @tag_scenes_for_render(%struct.Render* %8), !dbg !10852
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10853
  %scene4 = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 44, !dbg !10855
  %10 = load %struct.Scene*, %struct.Scene** %scene4, align 8, !dbg !10855
  %nodetree5 = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 18, !dbg !10856
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree5, align 8, !dbg !10856
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %11, i32 0, i32 7, !dbg !10857
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !10858
  %12 = load i8*, i8** %first, align 8, !dbg !10858
  %13 = bitcast i8* %12 to %struct.bNode*, !dbg !10853
  store %struct.bNode* %13, %struct.bNode** %node, align 8, !dbg !10859
  br label %for.cond, !dbg !10860

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10861
  %tobool = icmp ne %struct.bNode* %14, null, !dbg !10863
  br i1 %tobool, label %for.body, label %for.end, !dbg !10863

for.body:                                         ; preds = %for.cond
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10864
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 8, !dbg !10867
  %16 = load i16, i16* %type, align 4, !dbg !10867
  %conv = sext i16 %16 to i32, !dbg !10864
  %cmp6 = icmp eq i32 %conv, 221, !dbg !10868
  br i1 %cmp6, label %land.lhs.true, label %if.end33, !dbg !10869

land.lhs.true:                                    ; preds = %for.body
  %17 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10870
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %17, i32 0, i32 7, !dbg !10871
  %18 = load i32, i32* %flag, align 8, !dbg !10871
  %and = and i32 %18, 512, !dbg !10872
  %cmp8 = icmp eq i32 %and, 0, !dbg !10873
  br i1 %cmp8, label %if.then10, label %if.end33, !dbg !10874

if.then10:                                        ; preds = %land.lhs.true
  %19 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10875
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %19, i32 0, i32 20, !dbg !10878
  %20 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !10878
  %tobool11 = icmp ne %struct.ID* %20, null, !dbg !10875
  br i1 %tobool11, label %land.lhs.true12, label %if.end32, !dbg !10879

land.lhs.true12:                                  ; preds = %if.then10
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10880
  %id13 = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 20, !dbg !10881
  %22 = load %struct.ID*, %struct.ID** %id13, align 8, !dbg !10881
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10882
  %scene14 = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 44, !dbg !10883
  %24 = load %struct.Scene*, %struct.Scene** %scene14, align 8, !dbg !10883
  %25 = bitcast %struct.Scene* %24 to %struct.ID*, !dbg !10884
  %cmp15 = icmp ne %struct.ID* %22, %25, !dbg !10885
  br i1 %cmp15, label %if.then17, label %if.end32, !dbg !10886

if.then17:                                        ; preds = %land.lhs.true12
  %26 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10887
  %flag18 = getelementptr inbounds %struct.bNode, %struct.bNode* %26, i32 0, i32 7, !dbg !10890
  %27 = load i32, i32* %flag18, align 8, !dbg !10890
  %and19 = and i32 %27, 256, !dbg !10891
  %tobool20 = icmp ne i32 %and19, 0, !dbg !10891
  br i1 %tobool20, label %if.then21, label %if.end31, !dbg !10892

if.then21:                                        ; preds = %if.then17
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene22, metadata !10893, metadata !DIExpression()), !dbg !10895
  %28 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10896
  %id23 = getelementptr inbounds %struct.bNode, %struct.bNode* %28, i32 0, i32 20, !dbg !10897
  %29 = load %struct.ID*, %struct.ID** %id23, align 8, !dbg !10897
  %30 = bitcast %struct.ID* %29 to %struct.Scene*, !dbg !10898
  store %struct.Scene* %30, %struct.Scene** %scene22, align 8, !dbg !10895
  %31 = load %struct.Scene*, %struct.Scene** %scene22, align 8, !dbg !10899
  %32 = load %struct.Scene*, %struct.Scene** %restore_scene, align 8, !dbg !10900
  %cmp24 = icmp ne %struct.Scene* %31, %32, !dbg !10901
  %conv25 = zext i1 %cmp24 to i32, !dbg !10901
  %33 = load i8, i8* %scene_changed, align 1, !dbg !10902
  %conv26 = zext i8 %33 to i32, !dbg !10902
  %or = or i32 %conv26, %conv25, !dbg !10902
  %conv27 = trunc i32 %or to i8, !dbg !10902
  store i8 %conv27, i8* %scene_changed, align 1, !dbg !10902
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10903
  %35 = load %struct.Scene*, %struct.Scene** %scene22, align 8, !dbg !10904
  %36 = load i32, i32* %cfra, align 4, !dbg !10905
  call void @render_scene(%struct.Render* %34, %struct.Scene* %35, i32 %36), !dbg !10906
  %37 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10907
  %flag28 = getelementptr inbounds %struct.bNode, %struct.bNode* %37, i32 0, i32 7, !dbg !10908
  %38 = load i32, i32* %flag28, align 8, !dbg !10909
  %and29 = and i32 %38, -257, !dbg !10909
  store i32 %and29, i32* %flag28, align 8, !dbg !10909
  %39 = load %struct.Scene*, %struct.Scene** %restore_scene, align 8, !dbg !10910
  %nodetree30 = getelementptr inbounds %struct.Scene, %struct.Scene* %39, i32 0, i32 18, !dbg !10911
  %40 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree30, align 8, !dbg !10911
  %41 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10912
  call void @nodeUpdate(%struct.bNodeTree* %40, %struct.bNode* %41), !dbg !10913
  br label %if.end31, !dbg !10914

if.end31:                                         ; preds = %if.then21, %if.then17
  br label %if.end32, !dbg !10915

if.end32:                                         ; preds = %if.end31, %land.lhs.true12, %if.then10
  br label %if.end33, !dbg !10916

if.end33:                                         ; preds = %if.end32, %land.lhs.true, %for.body
  br label %for.inc, !dbg !10917

for.inc:                                          ; preds = %if.end33
  %42 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !10918
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %42, i32 0, i32 0, !dbg !10919
  %43 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !10919
  store %struct.bNode* %43, %struct.bNode** %node, align 8, !dbg !10920
  br label %for.cond, !dbg !10921, !llvm.loop !10922

for.end:                                          ; preds = %for.cond
  %44 = load i8, i8* %scene_changed, align 1, !dbg !10924
  %tobool34 = icmp ne i8 %44, 0, !dbg !10924
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !10926

if.then35:                                        ; preds = %for.end
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10927
  %main = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 43, !dbg !10928
  %46 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !10928
  %47 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10929
  %scene36 = getelementptr inbounds %struct.Render, %struct.Render* %47, i32 0, i32 44, !dbg !10930
  %48 = load %struct.Scene*, %struct.Scene** %scene36, align 8, !dbg !10930
  call void @BKE_scene_set_background(%struct.Main* %46, %struct.Scene* %48), !dbg !10931
  br label %if.end37, !dbg !10931

if.end37:                                         ; preds = %if.then, %if.then35, %for.end
  ret void, !dbg !10932
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_render_fields_3d(%struct.Render* %re) #0 !dbg !10933 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %camera = alloca %struct.Object*, align 8
  %rr1 = alloca %struct.RenderResult*, align 8
  %rr2 = alloca %struct.RenderResult*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10934, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.declare(metadata %struct.Object** %camera, metadata !10936, metadata !DIExpression()), !dbg !10937
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10938
  %call = call %struct.Object* @RE_GetCamera(%struct.Render* %0), !dbg !10939
  store %struct.Object* %call, %struct.Object** %camera, align 8, !dbg !10937
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr1, metadata !10940, metadata !DIExpression()), !dbg !10941
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr2, metadata !10942, metadata !DIExpression()), !dbg !10943
  store %struct.RenderResult* null, %struct.RenderResult** %rr2, align 8, !dbg !10943
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10944
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 14, !dbg !10945
  %2 = load i32, i32* %winy, align 8, !dbg !10946
  %div = sdiv i32 %2, 2, !dbg !10946
  store i32 %div, i32* %winy, align 8, !dbg !10946
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10947
  %recty = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 21, !dbg !10948
  %4 = load i32, i32* %recty, align 4, !dbg !10949
  %div1 = sdiv i32 %4, 2, !dbg !10949
  store i32 %div1, i32* %recty, align 4, !dbg !10949
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10950
  %disprect = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 15, !dbg !10951
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 2, !dbg !10952
  %6 = load i32, i32* %ymin, align 4, !dbg !10953
  %div2 = sdiv i32 %6, 2, !dbg !10953
  store i32 %div2, i32* %ymin, align 4, !dbg !10953
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10954
  %disprect3 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 15, !dbg !10955
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect3, i32 0, i32 3, !dbg !10956
  %8 = load i32, i32* %ymax, align 4, !dbg !10957
  %div4 = sdiv i32 %8, 2, !dbg !10957
  store i32 %div4, i32* %ymax, align 4, !dbg !10957
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10958
  %i = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 98, !dbg !10959
  %curfield = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 7, !dbg !10960
  store i16 1, i16* %curfield, align 4, !dbg !10961
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10962
  %11 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !10963
  call void @RE_SetCamera(%struct.Render* %10, %struct.Object* %11), !dbg !10964
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10965
  %r = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 45, !dbg !10967
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !10968
  %13 = load i32, i32* %mode, align 8, !dbg !10968
  %and = and i32 %13, 16384, !dbg !10969
  %tobool = icmp ne i32 %and, 0, !dbg !10969
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10970

land.lhs.true:                                    ; preds = %entry
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10971
  %r5 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 45, !dbg !10972
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r5, i32 0, i32 46, !dbg !10973
  %15 = load i32, i32* %scemode, align 4, !dbg !10973
  %and6 = and i32 %15, 32768, !dbg !10974
  %cmp = icmp eq i32 %and6, 0, !dbg !10975
  br i1 %cmp, label %if.then, label %if.else, !dbg !10976

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10977
  call void @do_render_blur_3d(%struct.Render* %16), !dbg !10978
  br label %if.end, !dbg !10978

if.else:                                          ; preds = %land.lhs.true, %entry
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10979
  call void @do_render_3d(%struct.Render* %17), !dbg !10980
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10981
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 12, !dbg !10982
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 2), !dbg !10983
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10984
  %result = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 9, !dbg !10985
  %20 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !10985
  store %struct.RenderResult* %20, %struct.RenderResult** %rr1, align 8, !dbg !10986
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10987
  %result7 = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 9, !dbg !10988
  store %struct.RenderResult* null, %struct.RenderResult** %result7, align 8, !dbg !10989
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10990
  %resultmutex8 = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 12, !dbg !10991
  call void @BLI_rw_mutex_unlock(i32* %resultmutex8), !dbg !10992
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10993
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 96, !dbg !10995
  %24 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !10995
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10996
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 97, !dbg !10997
  %26 = load i8*, i8** %tbh, align 8, !dbg !10997
  %call9 = call i32 %24(i8* %26), !dbg !10993
  %tobool10 = icmp ne i32 %call9, 0, !dbg !10993
  br i1 %tobool10, label %if.end41, label %if.then11, !dbg !10998

if.then11:                                        ; preds = %if.end
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10999
  %i12 = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 98, !dbg !11001
  %curfield13 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i12, i32 0, i32 7, !dbg !11002
  store i16 2, i16* %curfield13, align 4, !dbg !11003
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11004
  %flag = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 4, !dbg !11005
  %29 = load i16, i16* %flag, align 8, !dbg !11006
  %conv = sext i16 %29 to i32, !dbg !11006
  %or = or i32 %conv, 4, !dbg !11006
  %conv14 = trunc i32 %or to i16, !dbg !11006
  store i16 %conv14, i16* %flag, align 8, !dbg !11006
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11007
  %r15 = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 45, !dbg !11009
  %mode16 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r15, i32 0, i32 47, !dbg !11010
  %31 = load i32, i32* %mode16, align 8, !dbg !11010
  %and17 = and i32 %31, 128, !dbg !11011
  %cmp18 = icmp eq i32 %and17, 0, !dbg !11012
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !11013

if.then20:                                        ; preds = %if.then11
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11014
  %field_offs = getelementptr inbounds %struct.Render, %struct.Render* %32, i32 0, i32 59, !dbg !11016
  store float 5.000000e-01, float* %field_offs, align 4, !dbg !11017
  br label %if.end21, !dbg !11018

if.end21:                                         ; preds = %if.then20, %if.then11
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11019
  %34 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !11020
  call void @RE_SetCamera(%struct.Render* %33, %struct.Object* %34), !dbg !11021
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11022
  %r22 = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 45, !dbg !11024
  %mode23 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r22, i32 0, i32 47, !dbg !11025
  %36 = load i32, i32* %mode23, align 8, !dbg !11025
  %and24 = and i32 %36, 16384, !dbg !11026
  %tobool25 = icmp ne i32 %and24, 0, !dbg !11026
  br i1 %tobool25, label %land.lhs.true26, label %if.else33, !dbg !11027

land.lhs.true26:                                  ; preds = %if.end21
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11028
  %r27 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 45, !dbg !11029
  %scemode28 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r27, i32 0, i32 46, !dbg !11030
  %38 = load i32, i32* %scemode28, align 4, !dbg !11030
  %and29 = and i32 %38, 32768, !dbg !11031
  %cmp30 = icmp eq i32 %and29, 0, !dbg !11032
  br i1 %cmp30, label %if.then32, label %if.else33, !dbg !11033

if.then32:                                        ; preds = %land.lhs.true26
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11034
  call void @do_render_blur_3d(%struct.Render* %39), !dbg !11035
  br label %if.end34, !dbg !11035

if.else33:                                        ; preds = %land.lhs.true26, %if.end21
  %40 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11036
  call void @do_render_3d(%struct.Render* %40), !dbg !11037
  br label %if.end34

if.end34:                                         ; preds = %if.else33, %if.then32
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11038
  %flag35 = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 4, !dbg !11039
  %42 = load i16, i16* %flag35, align 8, !dbg !11040
  %conv36 = sext i16 %42 to i32, !dbg !11040
  %and37 = and i32 %conv36, -5, !dbg !11040
  %conv38 = trunc i32 %and37 to i16, !dbg !11040
  store i16 %conv38, i16* %flag35, align 8, !dbg !11040
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11041
  %field_offs39 = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 59, !dbg !11042
  store float 0.000000e+00, float* %field_offs39, align 4, !dbg !11043
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11044
  %result40 = getelementptr inbounds %struct.Render, %struct.Render* %44, i32 0, i32 9, !dbg !11045
  %45 = load %struct.RenderResult*, %struct.RenderResult** %result40, align 8, !dbg !11045
  store %struct.RenderResult* %45, %struct.RenderResult** %rr2, align 8, !dbg !11046
  br label %if.end41, !dbg !11047

if.end41:                                         ; preds = %if.end34, %if.end
  %46 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11048
  %winy42 = getelementptr inbounds %struct.Render, %struct.Render* %46, i32 0, i32 14, !dbg !11049
  %47 = load i32, i32* %winy42, align 8, !dbg !11050
  %mul = mul nsw i32 %47, 2, !dbg !11050
  store i32 %mul, i32* %winy42, align 8, !dbg !11050
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11051
  %recty43 = getelementptr inbounds %struct.Render, %struct.Render* %48, i32 0, i32 21, !dbg !11052
  %49 = load i32, i32* %recty43, align 4, !dbg !11053
  %mul44 = mul nsw i32 %49, 2, !dbg !11053
  store i32 %mul44, i32* %recty43, align 4, !dbg !11053
  %50 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11054
  %disprect45 = getelementptr inbounds %struct.Render, %struct.Render* %50, i32 0, i32 15, !dbg !11055
  %ymin46 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect45, i32 0, i32 2, !dbg !11056
  %51 = load i32, i32* %ymin46, align 4, !dbg !11057
  %mul47 = mul nsw i32 %51, 2, !dbg !11057
  store i32 %mul47, i32* %ymin46, align 4, !dbg !11057
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11058
  %disprect48 = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 15, !dbg !11059
  %ymax49 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect48, i32 0, i32 3, !dbg !11060
  %53 = load i32, i32* %ymax49, align 4, !dbg !11061
  %mul50 = mul nsw i32 %53, 2, !dbg !11061
  store i32 %mul50, i32* %ymax49, align 4, !dbg !11061
  %54 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11062
  %resultmutex51 = getelementptr inbounds %struct.Render, %struct.Render* %54, i32 0, i32 12, !dbg !11063
  call void @BLI_rw_mutex_lock(i32* %resultmutex51, i32 2), !dbg !11064
  %55 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11065
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11066
  %disprect52 = getelementptr inbounds %struct.Render, %struct.Render* %56, i32 0, i32 15, !dbg !11067
  %call53 = call %struct.RenderResult* @render_result_new(%struct.Render* %55, %struct.rcti* %disprect52, i32 0, i32 0, i8* null), !dbg !11068
  %57 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11069
  %result54 = getelementptr inbounds %struct.Render, %struct.Render* %57, i32 0, i32 9, !dbg !11070
  store %struct.RenderResult* %call53, %struct.RenderResult** %result54, align 8, !dbg !11071
  %58 = load %struct.RenderResult*, %struct.RenderResult** %rr2, align 8, !dbg !11072
  %tobool55 = icmp ne %struct.RenderResult* %58, null, !dbg !11072
  br i1 %tobool55, label %if.then56, label %if.end66, !dbg !11074

if.then56:                                        ; preds = %if.end41
  %59 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11075
  %r57 = getelementptr inbounds %struct.Render, %struct.Render* %59, i32 0, i32 45, !dbg !11078
  %mode58 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r57, i32 0, i32 47, !dbg !11079
  %60 = load i32, i32* %mode58, align 8, !dbg !11079
  %and59 = and i32 %60, 8192, !dbg !11080
  %tobool60 = icmp ne i32 %and59, 0, !dbg !11080
  br i1 %tobool60, label %if.then61, label %if.else63, !dbg !11081

if.then61:                                        ; preds = %if.then56
  %61 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11082
  %result62 = getelementptr inbounds %struct.Render, %struct.Render* %61, i32 0, i32 9, !dbg !11083
  %62 = load %struct.RenderResult*, %struct.RenderResult** %result62, align 8, !dbg !11083
  %63 = load %struct.RenderResult*, %struct.RenderResult** %rr2, align 8, !dbg !11084
  %64 = load %struct.RenderResult*, %struct.RenderResult** %rr1, align 8, !dbg !11085
  call void @merge_renderresult_fields(%struct.RenderResult* %62, %struct.RenderResult* %63, %struct.RenderResult* %64), !dbg !11086
  br label %if.end65, !dbg !11086

if.else63:                                        ; preds = %if.then56
  %65 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11087
  %result64 = getelementptr inbounds %struct.Render, %struct.Render* %65, i32 0, i32 9, !dbg !11088
  %66 = load %struct.RenderResult*, %struct.RenderResult** %result64, align 8, !dbg !11088
  %67 = load %struct.RenderResult*, %struct.RenderResult** %rr1, align 8, !dbg !11089
  %68 = load %struct.RenderResult*, %struct.RenderResult** %rr2, align 8, !dbg !11090
  call void @merge_renderresult_fields(%struct.RenderResult* %66, %struct.RenderResult* %67, %struct.RenderResult* %68), !dbg !11091
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.then61
  %69 = load %struct.RenderResult*, %struct.RenderResult** %rr2, align 8, !dbg !11092
  call void @render_result_free(%struct.RenderResult* %69), !dbg !11093
  br label %if.end66, !dbg !11094

if.end66:                                         ; preds = %if.end65, %if.end41
  %70 = load %struct.RenderResult*, %struct.RenderResult** %rr1, align 8, !dbg !11095
  call void @render_result_free(%struct.RenderResult* %70), !dbg !11096
  %71 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11097
  %i67 = getelementptr inbounds %struct.Render, %struct.Render* %71, i32 0, i32 98, !dbg !11098
  %curfield68 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i67, i32 0, i32 7, !dbg !11099
  store i16 0, i16* %curfield68, align 4, !dbg !11100
  %72 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11101
  %73 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11102
  %result69 = getelementptr inbounds %struct.Render, %struct.Render* %73, i32 0, i32 9, !dbg !11103
  %74 = load %struct.RenderResult*, %struct.RenderResult** %result69, align 8, !dbg !11103
  %call70 = call %struct.RenderLayer* @render_get_active_layer(%struct.Render* %72, %struct.RenderResult* %74), !dbg !11104
  %75 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11105
  %result71 = getelementptr inbounds %struct.Render, %struct.Render* %75, i32 0, i32 9, !dbg !11106
  %76 = load %struct.RenderResult*, %struct.RenderResult** %result71, align 8, !dbg !11106
  %renlay = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %76, i32 0, i32 14, !dbg !11107
  store %struct.RenderLayer* %call70, %struct.RenderLayer** %renlay, align 8, !dbg !11108
  %77 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11109
  %resultmutex72 = getelementptr inbounds %struct.Render, %struct.Render* %77, i32 0, i32 12, !dbg !11110
  call void @BLI_rw_mutex_unlock(i32* %resultmutex72), !dbg !11111
  %78 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11112
  %display_update = getelementptr inbounds %struct.Render, %struct.Render* %78, i32 0, i32 86, !dbg !11113
  %79 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !11113
  %80 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11114
  %duh = getelementptr inbounds %struct.Render, %struct.Render* %80, i32 0, i32 87, !dbg !11115
  %81 = load i8*, i8** %duh, align 8, !dbg !11115
  %82 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11116
  %result73 = getelementptr inbounds %struct.Render, %struct.Render* %82, i32 0, i32 9, !dbg !11117
  %83 = load %struct.RenderResult*, %struct.RenderResult** %result73, align 8, !dbg !11117
  call void %79(i8* %81, %struct.RenderResult* %83, %struct.rcti* null), !dbg !11112
  ret void, !dbg !11118
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_render_blur_3d(%struct.Render* %re) #0 !dbg !11119 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %rres = alloca %struct.RenderResult*, align 8
  %blurfac = alloca float, align 4
  %blur = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !11120, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rres, metadata !11122, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.declare(metadata float* %blurfac, metadata !11124, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.declare(metadata i32* %blur, metadata !11126, metadata !DIExpression()), !dbg !11127
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11128
  %r = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 45, !dbg !11129
  %mblur_samples = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 62, !dbg !11130
  %1 = load i16, i16* %mblur_samples, align 2, !dbg !11130
  %conv = sext i16 %1 to i32, !dbg !11128
  store i32 %conv, i32* %blur, align 4, !dbg !11127
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11131
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11132
  %disprect = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 15, !dbg !11133
  %call = call %struct.RenderResult* @render_result_new(%struct.Render* %2, %struct.rcti* %disprect, i32 0, i32 0, i8* null), !dbg !11134
  store %struct.RenderResult* %call, %struct.RenderResult** %rres, align 8, !dbg !11135
  br label %while.cond, !dbg !11136

while.cond:                                       ; preds = %if.end, %entry
  %4 = load i32, i32* %blur, align 4, !dbg !11137
  %dec = add nsw i32 %4, -1, !dbg !11137
  store i32 %dec, i32* %blur, align 4, !dbg !11137
  %tobool = icmp ne i32 %4, 0, !dbg !11136
  br i1 %tobool, label %while.body, label %while.end, !dbg !11136

while.body:                                       ; preds = %while.cond
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11138
  %r1 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 45, !dbg !11140
  %blurfac2 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r1, i32 0, i32 16, !dbg !11141
  %6 = load float, float* %blurfac2, align 8, !dbg !11141
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11142
  %r3 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 45, !dbg !11143
  %mblur_samples4 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r3, i32 0, i32 62, !dbg !11144
  %8 = load i16, i16* %mblur_samples4, align 2, !dbg !11144
  %conv5 = sext i16 %8 to i32, !dbg !11142
  %9 = load i32, i32* %blur, align 4, !dbg !11145
  %sub = sub nsw i32 %conv5, %9, !dbg !11146
  %conv6 = sitofp i32 %sub to float, !dbg !11147
  %mul = fmul float %6, %conv6, !dbg !11148
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11149
  %r7 = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 45, !dbg !11150
  %mblur_samples8 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r7, i32 0, i32 62, !dbg !11151
  %11 = load i16, i16* %mblur_samples8, align 2, !dbg !11151
  %conv9 = sitofp i16 %11 to float, !dbg !11152
  %div = fdiv float %mul, %conv9, !dbg !11153
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11154
  %mblur_offs = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 58, !dbg !11155
  store float %div, float* %mblur_offs, align 8, !dbg !11156
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11157
  %r10 = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 45, !dbg !11158
  %mblur_samples11 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r10, i32 0, i32 62, !dbg !11159
  %14 = load i16, i16* %mblur_samples11, align 2, !dbg !11159
  %conv12 = sext i16 %14 to i32, !dbg !11157
  %15 = load i32, i32* %blur, align 4, !dbg !11160
  %sub13 = sub nsw i32 %conv12, %15, !dbg !11161
  %conv14 = trunc i32 %sub13 to i16, !dbg !11157
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11162
  %i = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 98, !dbg !11163
  %curblur = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 8, !dbg !11164
  store i16 %conv14, i16* %curblur, align 2, !dbg !11165
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11166
  call void @do_render_3d(%struct.Render* %17), !dbg !11167
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11168
  %r15 = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 45, !dbg !11169
  %mblur_samples16 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r15, i32 0, i32 62, !dbg !11170
  %19 = load i16, i16* %mblur_samples16, align 2, !dbg !11170
  %conv17 = sext i16 %19 to i32, !dbg !11168
  %20 = load i32, i32* %blur, align 4, !dbg !11171
  %sub18 = sub nsw i32 %conv17, %20, !dbg !11172
  %conv19 = sitofp i32 %sub18 to float, !dbg !11173
  %div20 = fdiv float 1.000000e+00, %conv19, !dbg !11174
  store float %div20, float* %blurfac, align 4, !dbg !11175
  %21 = load %struct.RenderResult*, %struct.RenderResult** %rres, align 8, !dbg !11176
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11177
  %result = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 9, !dbg !11178
  %23 = load %struct.RenderResult*, %struct.RenderResult** %result, align 8, !dbg !11178
  %24 = load float, float* %blurfac, align 4, !dbg !11179
  call void @merge_renderresult_blur(%struct.RenderResult* %21, %struct.RenderResult* %23, float %24, i8 zeroext 0), !dbg !11180
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11181
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 96, !dbg !11183
  %26 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !11183
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11184
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 97, !dbg !11185
  %28 = load i8*, i8** %tbh, align 8, !dbg !11185
  %call21 = call i32 %26(i8* %28), !dbg !11181
  %tobool22 = icmp ne i32 %call21, 0, !dbg !11181
  br i1 %tobool22, label %if.then, label %if.end, !dbg !11186

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !11187

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !11136, !llvm.loop !11188

while.end:                                        ; preds = %if.then, %while.cond
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11190
  %resultmutex = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 12, !dbg !11191
  call void @BLI_rw_mutex_lock(i32* %resultmutex, i32 2), !dbg !11192
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11193
  %result23 = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 9, !dbg !11194
  %31 = load %struct.RenderResult*, %struct.RenderResult** %result23, align 8, !dbg !11194
  call void @render_result_free(%struct.RenderResult* %31), !dbg !11195
  %32 = load %struct.RenderResult*, %struct.RenderResult** %rres, align 8, !dbg !11196
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11197
  %result24 = getelementptr inbounds %struct.Render, %struct.Render* %33, i32 0, i32 9, !dbg !11198
  store %struct.RenderResult* %32, %struct.RenderResult** %result24, align 8, !dbg !11199
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11200
  %resultmutex25 = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 12, !dbg !11201
  call void @BLI_rw_mutex_unlock(i32* %resultmutex25), !dbg !11202
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11203
  %mblur_offs26 = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 58, !dbg !11204
  store float 0.000000e+00, float* %mblur_offs26, align 8, !dbg !11205
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11206
  %i27 = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 98, !dbg !11207
  %curblur28 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i27, i32 0, i32 8, !dbg !11208
  store i16 0, i16* %curblur28, align 2, !dbg !11209
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11210
  %r29 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 45, !dbg !11212
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r29, i32 0, i32 46, !dbg !11213
  %38 = load i32, i32* %scemode, align 4, !dbg !11213
  %and = and i32 %38, 540680, !dbg !11214
  %cmp = icmp eq i32 %and, 0, !dbg !11215
  br i1 %cmp, label %if.then31, label %if.end32, !dbg !11216

if.then31:                                        ; preds = %while.end
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11217
  %eval_ctx = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 101, !dbg !11219
  %40 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !11219
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11220
  %main = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 43, !dbg !11221
  %42 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !11221
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11222
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 44, !dbg !11223
  %44 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11223
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11224
  %lay = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 48, !dbg !11225
  %46 = load i32, i32* %lay, align 8, !dbg !11225
  call void @BKE_scene_update_for_newframe(%struct.EvaluationContext* %40, %struct.Main* %42, %struct.Scene* %44, i32 %46), !dbg !11226
  br label %if.end32, !dbg !11227

if.end32:                                         ; preds = %if.then31, %while.end
  %47 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11228
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11229
  %result33 = getelementptr inbounds %struct.Render, %struct.Render* %48, i32 0, i32 9, !dbg !11230
  %49 = load %struct.RenderResult*, %struct.RenderResult** %result33, align 8, !dbg !11230
  %call34 = call %struct.RenderLayer* @render_get_active_layer(%struct.Render* %47, %struct.RenderResult* %49), !dbg !11231
  %50 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11232
  %result35 = getelementptr inbounds %struct.Render, %struct.Render* %50, i32 0, i32 9, !dbg !11233
  %51 = load %struct.RenderResult*, %struct.RenderResult** %result35, align 8, !dbg !11233
  %renlay = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %51, i32 0, i32 14, !dbg !11234
  store %struct.RenderLayer* %call34, %struct.RenderLayer** %renlay, align 8, !dbg !11235
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11236
  %display_update = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 86, !dbg !11237
  %53 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !11237
  %54 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11238
  %duh = getelementptr inbounds %struct.Render, %struct.Render* %54, i32 0, i32 87, !dbg !11239
  %55 = load i8*, i8** %duh, align 8, !dbg !11239
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11240
  %result36 = getelementptr inbounds %struct.Render, %struct.Render* %56, i32 0, i32 9, !dbg !11241
  %57 = load %struct.RenderResult*, %struct.RenderResult** %result36, align 8, !dbg !11241
  call void %53(i8* %55, %struct.RenderResult* %57, %struct.rcti* null), !dbg !11236
  ret void, !dbg !11242
}

; Function Attrs: noinline nounwind uwtable
define internal void @merge_renderresult_fields(%struct.RenderResult* %rr, %struct.RenderResult* %rr1, %struct.RenderResult* %rr2) #0 !dbg !11243 {
entry:
  %rr.addr = alloca %struct.RenderResult*, align 8
  %rr1.addr = alloca %struct.RenderResult*, align 8
  %rr2.addr = alloca %struct.RenderResult*, align 8
  %rl = alloca %struct.RenderLayer*, align 8
  %rl1 = alloca %struct.RenderLayer*, align 8
  %rl2 = alloca %struct.RenderLayer*, align 8
  %rpass = alloca %struct.RenderPass*, align 8
  %rpass1 = alloca %struct.RenderPass*, align 8
  %rpass2 = alloca %struct.RenderPass*, align 8
  store %struct.RenderResult* %rr, %struct.RenderResult** %rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr.addr, metadata !11246, metadata !DIExpression()), !dbg !11247
  store %struct.RenderResult* %rr1, %struct.RenderResult** %rr1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr1.addr, metadata !11248, metadata !DIExpression()), !dbg !11249
  store %struct.RenderResult* %rr2, %struct.RenderResult** %rr2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr2.addr, metadata !11250, metadata !DIExpression()), !dbg !11251
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl, metadata !11252, metadata !DIExpression()), !dbg !11253
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl1, metadata !11254, metadata !DIExpression()), !dbg !11255
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl2, metadata !11256, metadata !DIExpression()), !dbg !11257
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !11258, metadata !DIExpression()), !dbg !11259
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass1, metadata !11260, metadata !DIExpression()), !dbg !11261
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass2, metadata !11262, metadata !DIExpression()), !dbg !11263
  %0 = load %struct.RenderResult*, %struct.RenderResult** %rr1.addr, align 8, !dbg !11264
  %layers = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %0, i32 0, i32 12, !dbg !11265
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !11266
  %1 = load i8*, i8** %first, align 8, !dbg !11266
  %2 = bitcast i8* %1 to %struct.RenderLayer*, !dbg !11264
  store %struct.RenderLayer* %2, %struct.RenderLayer** %rl1, align 8, !dbg !11267
  %3 = load %struct.RenderResult*, %struct.RenderResult** %rr2.addr, align 8, !dbg !11268
  %layers1 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %3, i32 0, i32 12, !dbg !11269
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers1, i32 0, i32 0, !dbg !11270
  %4 = load i8*, i8** %first2, align 8, !dbg !11270
  %5 = bitcast i8* %4 to %struct.RenderLayer*, !dbg !11268
  store %struct.RenderLayer* %5, %struct.RenderLayer** %rl2, align 8, !dbg !11271
  %6 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11272
  %layers3 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %6, i32 0, i32 12, !dbg !11274
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers3, i32 0, i32 0, !dbg !11275
  %7 = load i8*, i8** %first4, align 8, !dbg !11275
  %8 = bitcast i8* %7 to %struct.RenderLayer*, !dbg !11272
  store %struct.RenderLayer* %8, %struct.RenderLayer** %rl, align 8, !dbg !11276
  br label %for.cond, !dbg !11277

for.cond:                                         ; preds = %for.inc34, %entry
  %9 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !11278
  %tobool = icmp ne %struct.RenderLayer* %9, null, !dbg !11278
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !11280

land.lhs.true:                                    ; preds = %for.cond
  %10 = load %struct.RenderLayer*, %struct.RenderLayer** %rl1, align 8, !dbg !11281
  %tobool5 = icmp ne %struct.RenderLayer* %10, null, !dbg !11281
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !11282

land.rhs:                                         ; preds = %land.lhs.true
  %11 = load %struct.RenderLayer*, %struct.RenderLayer** %rl2, align 8, !dbg !11283
  %tobool6 = icmp ne %struct.RenderLayer* %11, null, !dbg !11282
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %for.cond
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond ], [ %tobool6, %land.rhs ], !dbg !11284
  br i1 %12, label %for.body, label %for.end38, !dbg !11285

for.body:                                         ; preds = %land.end
  %13 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !11286
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %13, i32 0, i32 11, !dbg !11289
  %14 = load float*, float** %rectf, align 8, !dbg !11289
  %tobool7 = icmp ne float* %14, null, !dbg !11286
  br i1 %tobool7, label %land.lhs.true8, label %if.end, !dbg !11290

land.lhs.true8:                                   ; preds = %for.body
  %15 = load %struct.RenderLayer*, %struct.RenderLayer** %rl1, align 8, !dbg !11291
  %rectf9 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %15, i32 0, i32 11, !dbg !11292
  %16 = load float*, float** %rectf9, align 8, !dbg !11292
  %tobool10 = icmp ne float* %16, null, !dbg !11291
  br i1 %tobool10, label %land.lhs.true11, label %if.end, !dbg !11293

land.lhs.true11:                                  ; preds = %land.lhs.true8
  %17 = load %struct.RenderLayer*, %struct.RenderLayer** %rl2, align 8, !dbg !11294
  %rectf12 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %17, i32 0, i32 11, !dbg !11295
  %18 = load float*, float** %rectf12, align 8, !dbg !11295
  %tobool13 = icmp ne float* %18, null, !dbg !11294
  br i1 %tobool13, label %if.then, label %if.end, !dbg !11296

if.then:                                          ; preds = %land.lhs.true11
  %19 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11297
  %20 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !11298
  %rectf14 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %20, i32 0, i32 11, !dbg !11299
  %21 = load float*, float** %rectf14, align 8, !dbg !11299
  %22 = load %struct.RenderLayer*, %struct.RenderLayer** %rl1, align 8, !dbg !11300
  %rectf15 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %22, i32 0, i32 11, !dbg !11301
  %23 = load float*, float** %rectf15, align 8, !dbg !11301
  %24 = load %struct.RenderLayer*, %struct.RenderLayer** %rl2, align 8, !dbg !11302
  %rectf16 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %24, i32 0, i32 11, !dbg !11303
  %25 = load float*, float** %rectf16, align 8, !dbg !11303
  call void @interleave_rect(%struct.RenderResult* %19, float* %21, float* %23, float* %25, i32 4), !dbg !11304
  br label %if.end, !dbg !11304

if.end:                                           ; preds = %if.then, %land.lhs.true11, %land.lhs.true8, %for.body
  %26 = load %struct.RenderLayer*, %struct.RenderLayer** %rl1, align 8, !dbg !11305
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %26, i32 0, i32 18, !dbg !11306
  %first17 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes, i32 0, i32 0, !dbg !11307
  %27 = load i8*, i8** %first17, align 8, !dbg !11307
  %28 = bitcast i8* %27 to %struct.RenderPass*, !dbg !11305
  store %struct.RenderPass* %28, %struct.RenderPass** %rpass1, align 8, !dbg !11308
  %29 = load %struct.RenderLayer*, %struct.RenderLayer** %rl2, align 8, !dbg !11309
  %passes18 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %29, i32 0, i32 18, !dbg !11310
  %first19 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes18, i32 0, i32 0, !dbg !11311
  %30 = load i8*, i8** %first19, align 8, !dbg !11311
  %31 = bitcast i8* %30 to %struct.RenderPass*, !dbg !11309
  store %struct.RenderPass* %31, %struct.RenderPass** %rpass2, align 8, !dbg !11312
  %32 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !11313
  %passes20 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %32, i32 0, i32 18, !dbg !11315
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes20, i32 0, i32 0, !dbg !11316
  %33 = load i8*, i8** %first21, align 8, !dbg !11316
  %34 = bitcast i8* %33 to %struct.RenderPass*, !dbg !11313
  store %struct.RenderPass* %34, %struct.RenderPass** %rpass, align 8, !dbg !11317
  br label %for.cond22, !dbg !11318

for.cond22:                                       ; preds = %for.inc, %if.end
  %35 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !11319
  %tobool23 = icmp ne %struct.RenderPass* %35, null, !dbg !11319
  br i1 %tobool23, label %land.lhs.true24, label %land.end28, !dbg !11321

land.lhs.true24:                                  ; preds = %for.cond22
  %36 = load %struct.RenderPass*, %struct.RenderPass** %rpass1, align 8, !dbg !11322
  %tobool25 = icmp ne %struct.RenderPass* %36, null, !dbg !11322
  br i1 %tobool25, label %land.rhs26, label %land.end28, !dbg !11323

land.rhs26:                                       ; preds = %land.lhs.true24
  %37 = load %struct.RenderPass*, %struct.RenderPass** %rpass2, align 8, !dbg !11324
  %tobool27 = icmp ne %struct.RenderPass* %37, null, !dbg !11323
  br label %land.end28

land.end28:                                       ; preds = %land.rhs26, %land.lhs.true24, %for.cond22
  %38 = phi i1 [ false, %land.lhs.true24 ], [ false, %for.cond22 ], [ %tobool27, %land.rhs26 ], !dbg !11325
  br i1 %38, label %for.body29, label %for.end, !dbg !11326

for.body29:                                       ; preds = %land.end28
  %39 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11327
  %40 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !11329
  %rect = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %40, i32 0, i32 6, !dbg !11330
  %41 = load float*, float** %rect, align 8, !dbg !11330
  %42 = load %struct.RenderPass*, %struct.RenderPass** %rpass1, align 8, !dbg !11331
  %rect30 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %42, i32 0, i32 6, !dbg !11332
  %43 = load float*, float** %rect30, align 8, !dbg !11332
  %44 = load %struct.RenderPass*, %struct.RenderPass** %rpass2, align 8, !dbg !11333
  %rect31 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %44, i32 0, i32 6, !dbg !11334
  %45 = load float*, float** %rect31, align 8, !dbg !11334
  %46 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !11335
  %channels = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %46, i32 0, i32 3, !dbg !11336
  %47 = load i32, i32* %channels, align 4, !dbg !11336
  call void @interleave_rect(%struct.RenderResult* %39, float* %41, float* %43, float* %45, i32 %47), !dbg !11337
  br label %for.inc, !dbg !11338

for.inc:                                          ; preds = %for.body29
  %48 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !11339
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %48, i32 0, i32 0, !dbg !11340
  %49 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !11340
  store %struct.RenderPass* %49, %struct.RenderPass** %rpass, align 8, !dbg !11341
  %50 = load %struct.RenderPass*, %struct.RenderPass** %rpass1, align 8, !dbg !11342
  %next32 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %50, i32 0, i32 0, !dbg !11343
  %51 = load %struct.RenderPass*, %struct.RenderPass** %next32, align 8, !dbg !11343
  store %struct.RenderPass* %51, %struct.RenderPass** %rpass1, align 8, !dbg !11344
  %52 = load %struct.RenderPass*, %struct.RenderPass** %rpass2, align 8, !dbg !11345
  %next33 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %52, i32 0, i32 0, !dbg !11346
  %53 = load %struct.RenderPass*, %struct.RenderPass** %next33, align 8, !dbg !11346
  store %struct.RenderPass* %53, %struct.RenderPass** %rpass2, align 8, !dbg !11347
  br label %for.cond22, !dbg !11348, !llvm.loop !11349

for.end:                                          ; preds = %land.end28
  br label %for.inc34, !dbg !11351

for.inc34:                                        ; preds = %for.end
  %54 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !11352
  %next35 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %54, i32 0, i32 0, !dbg !11353
  %55 = load %struct.RenderLayer*, %struct.RenderLayer** %next35, align 8, !dbg !11353
  store %struct.RenderLayer* %55, %struct.RenderLayer** %rl, align 8, !dbg !11354
  %56 = load %struct.RenderLayer*, %struct.RenderLayer** %rl1, align 8, !dbg !11355
  %next36 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %56, i32 0, i32 0, !dbg !11356
  %57 = load %struct.RenderLayer*, %struct.RenderLayer** %next36, align 8, !dbg !11356
  store %struct.RenderLayer* %57, %struct.RenderLayer** %rl1, align 8, !dbg !11357
  %58 = load %struct.RenderLayer*, %struct.RenderLayer** %rl2, align 8, !dbg !11358
  %next37 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %58, i32 0, i32 0, !dbg !11359
  %59 = load %struct.RenderLayer*, %struct.RenderLayer** %next37, align 8, !dbg !11359
  store %struct.RenderLayer* %59, %struct.RenderLayer** %rl2, align 8, !dbg !11360
  br label %for.cond, !dbg !11361, !llvm.loop !11362

for.end38:                                        ; preds = %land.end
  ret void, !dbg !11364
}

; Function Attrs: noinline nounwind uwtable
define internal void @interleave_rect(%struct.RenderResult* %rr, float* %rectf, float* %rectf1, float* %rectf2, i32 %channels) #0 !dbg !11365 {
entry:
  %rr.addr = alloca %struct.RenderResult*, align 8
  %rectf.addr = alloca float*, align 8
  %rectf1.addr = alloca float*, align 8
  %rectf2.addr = alloca float*, align 8
  %channels.addr = alloca i32, align 4
  %a = alloca i32, align 4
  %stride = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.RenderResult* %rr, %struct.RenderResult** %rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr.addr, metadata !11368, metadata !DIExpression()), !dbg !11369
  store float* %rectf, float** %rectf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf.addr, metadata !11370, metadata !DIExpression()), !dbg !11371
  store float* %rectf1, float** %rectf1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf1.addr, metadata !11372, metadata !DIExpression()), !dbg !11373
  store float* %rectf2, float** %rectf2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf2.addr, metadata !11374, metadata !DIExpression()), !dbg !11375
  store i32 %channels, i32* %channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channels.addr, metadata !11376, metadata !DIExpression()), !dbg !11377
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11378, metadata !DIExpression()), !dbg !11379
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !11380, metadata !DIExpression()), !dbg !11381
  %0 = load i32, i32* %channels.addr, align 4, !dbg !11382
  %1 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11383
  %rectx = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %1, i32 0, i32 2, !dbg !11384
  %2 = load i32, i32* %rectx, align 8, !dbg !11384
  %mul = mul nsw i32 %0, %2, !dbg !11385
  store i32 %mul, i32* %stride, align 4, !dbg !11381
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11386, metadata !DIExpression()), !dbg !11387
  %3 = load i32, i32* %stride, align 4, !dbg !11388
  %conv = sext i32 %3 to i64, !dbg !11388
  %mul1 = mul i64 %conv, 4, !dbg !11389
  %conv2 = trunc i64 %mul1 to i32, !dbg !11388
  store i32 %conv2, i32* %len, align 4, !dbg !11387
  store i32 0, i32* %a, align 4, !dbg !11390
  br label %for.cond, !dbg !11392

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %a, align 4, !dbg !11393
  %5 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11395
  %recty = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %5, i32 0, i32 3, !dbg !11396
  %6 = load i32, i32* %recty, align 4, !dbg !11396
  %cmp = icmp slt i32 %4, %6, !dbg !11397
  br i1 %cmp, label %for.body, label %for.end, !dbg !11398

for.body:                                         ; preds = %for.cond
  %7 = load float*, float** %rectf.addr, align 8, !dbg !11399
  %8 = bitcast float* %7 to i8*, !dbg !11401
  %9 = load float*, float** %rectf1.addr, align 8, !dbg !11402
  %10 = bitcast float* %9 to i8*, !dbg !11401
  %11 = load i32, i32* %len, align 4, !dbg !11403
  %conv4 = sext i32 %11 to i64, !dbg !11403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %10, i64 %conv4, i1 false), !dbg !11401
  %12 = load i32, i32* %stride, align 4, !dbg !11404
  %13 = load float*, float** %rectf.addr, align 8, !dbg !11405
  %idx.ext = sext i32 %12 to i64, !dbg !11405
  %add.ptr = getelementptr inbounds float, float* %13, i64 %idx.ext, !dbg !11405
  store float* %add.ptr, float** %rectf.addr, align 8, !dbg !11405
  %14 = load i32, i32* %stride, align 4, !dbg !11406
  %15 = load float*, float** %rectf1.addr, align 8, !dbg !11407
  %idx.ext5 = sext i32 %14 to i64, !dbg !11407
  %add.ptr6 = getelementptr inbounds float, float* %15, i64 %idx.ext5, !dbg !11407
  store float* %add.ptr6, float** %rectf1.addr, align 8, !dbg !11407
  %16 = load float*, float** %rectf.addr, align 8, !dbg !11408
  %17 = bitcast float* %16 to i8*, !dbg !11409
  %18 = load float*, float** %rectf2.addr, align 8, !dbg !11410
  %19 = bitcast float* %18 to i8*, !dbg !11409
  %20 = load i32, i32* %len, align 4, !dbg !11411
  %conv7 = sext i32 %20 to i64, !dbg !11411
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %19, i64 %conv7, i1 false), !dbg !11409
  %21 = load i32, i32* %stride, align 4, !dbg !11412
  %22 = load float*, float** %rectf.addr, align 8, !dbg !11413
  %idx.ext8 = sext i32 %21 to i64, !dbg !11413
  %add.ptr9 = getelementptr inbounds float, float* %22, i64 %idx.ext8, !dbg !11413
  store float* %add.ptr9, float** %rectf.addr, align 8, !dbg !11413
  %23 = load i32, i32* %stride, align 4, !dbg !11414
  %24 = load float*, float** %rectf2.addr, align 8, !dbg !11415
  %idx.ext10 = sext i32 %23 to i64, !dbg !11415
  %add.ptr11 = getelementptr inbounds float, float* %24, i64 %idx.ext10, !dbg !11415
  store float* %add.ptr11, float** %rectf2.addr, align 8, !dbg !11415
  br label %for.inc, !dbg !11416

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %a, align 4, !dbg !11417
  %add = add nsw i32 %25, 2, !dbg !11417
  store i32 %add, i32* %a, align 4, !dbg !11417
  br label %for.cond, !dbg !11418, !llvm.loop !11419

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11421
}

; Function Attrs: noinline nounwind uwtable
define internal void @merge_renderresult_blur(%struct.RenderResult* %rr, %struct.RenderResult* %brr, float %blurfac, i8 zeroext %key_alpha) #0 !dbg !11422 {
entry:
  %rr.addr = alloca %struct.RenderResult*, align 8
  %brr.addr = alloca %struct.RenderResult*, align 8
  %blurfac.addr = alloca float, align 4
  %key_alpha.addr = alloca i8, align 1
  %rl = alloca %struct.RenderLayer*, align 8
  %rl1 = alloca %struct.RenderLayer*, align 8
  %rpass = alloca %struct.RenderPass*, align 8
  %rpass1 = alloca %struct.RenderPass*, align 8
  store %struct.RenderResult* %rr, %struct.RenderResult** %rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr.addr, metadata !11425, metadata !DIExpression()), !dbg !11426
  store %struct.RenderResult* %brr, %struct.RenderResult** %brr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %brr.addr, metadata !11427, metadata !DIExpression()), !dbg !11428
  store float %blurfac, float* %blurfac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %blurfac.addr, metadata !11429, metadata !DIExpression()), !dbg !11430
  store i8 %key_alpha, i8* %key_alpha.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %key_alpha.addr, metadata !11431, metadata !DIExpression()), !dbg !11432
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl, metadata !11433, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.declare(metadata %struct.RenderLayer** %rl1, metadata !11435, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass, metadata !11437, metadata !DIExpression()), !dbg !11438
  call void @llvm.dbg.declare(metadata %struct.RenderPass** %rpass1, metadata !11439, metadata !DIExpression()), !dbg !11440
  %0 = load %struct.RenderResult*, %struct.RenderResult** %brr.addr, align 8, !dbg !11441
  %layers = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %0, i32 0, i32 12, !dbg !11442
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !11443
  %1 = load i8*, i8** %first, align 8, !dbg !11443
  %2 = bitcast i8* %1 to %struct.RenderLayer*, !dbg !11441
  store %struct.RenderLayer* %2, %struct.RenderLayer** %rl1, align 8, !dbg !11444
  %3 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11445
  %layers1 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %3, i32 0, i32 12, !dbg !11447
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers1, i32 0, i32 0, !dbg !11448
  %4 = load i8*, i8** %first2, align 8, !dbg !11448
  %5 = bitcast i8* %4 to %struct.RenderLayer*, !dbg !11445
  store %struct.RenderLayer* %5, %struct.RenderLayer** %rl, align 8, !dbg !11449
  br label %for.cond, !dbg !11450

for.cond:                                         ; preds = %for.inc25, %entry
  %6 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !11451
  %tobool = icmp ne %struct.RenderLayer* %6, null, !dbg !11451
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11453

land.rhs:                                         ; preds = %for.cond
  %7 = load %struct.RenderLayer*, %struct.RenderLayer** %rl1, align 8, !dbg !11454
  %tobool3 = icmp ne %struct.RenderLayer* %7, null, !dbg !11453
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %8 = phi i1 [ false, %for.cond ], [ %tobool3, %land.rhs ], !dbg !11455
  br i1 %8, label %for.body, label %for.end28, !dbg !11456

for.body:                                         ; preds = %land.end
  %9 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !11457
  %rectf = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %9, i32 0, i32 11, !dbg !11460
  %10 = load float*, float** %rectf, align 8, !dbg !11460
  %tobool4 = icmp ne float* %10, null, !dbg !11457
  br i1 %tobool4, label %land.lhs.true, label %if.end13, !dbg !11461

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.RenderLayer*, %struct.RenderLayer** %rl1, align 8, !dbg !11462
  %rectf5 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %11, i32 0, i32 11, !dbg !11463
  %12 = load float*, float** %rectf5, align 8, !dbg !11463
  %tobool6 = icmp ne float* %12, null, !dbg !11462
  br i1 %tobool6, label %if.then, label %if.end13, !dbg !11464

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8, i8* %key_alpha.addr, align 1, !dbg !11465
  %tobool7 = icmp ne i8 %13, 0, !dbg !11465
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !11468

if.then8:                                         ; preds = %if.then
  %14 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11469
  %15 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !11470
  %rectf9 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %15, i32 0, i32 11, !dbg !11471
  %16 = load float*, float** %rectf9, align 8, !dbg !11471
  %17 = load %struct.RenderLayer*, %struct.RenderLayer** %rl1, align 8, !dbg !11472
  %rectf10 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %17, i32 0, i32 11, !dbg !11473
  %18 = load float*, float** %rectf10, align 8, !dbg !11473
  %19 = load float, float* %blurfac.addr, align 4, !dbg !11474
  call void @addblur_rect_key(%struct.RenderResult* %14, float* %16, float* %18, float %19), !dbg !11475
  br label %if.end, !dbg !11475

if.else:                                          ; preds = %if.then
  %20 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11476
  %21 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !11477
  %rectf11 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %21, i32 0, i32 11, !dbg !11478
  %22 = load float*, float** %rectf11, align 8, !dbg !11478
  %23 = load %struct.RenderLayer*, %struct.RenderLayer** %rl1, align 8, !dbg !11479
  %rectf12 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %23, i32 0, i32 11, !dbg !11480
  %24 = load float*, float** %rectf12, align 8, !dbg !11480
  %25 = load float, float* %blurfac.addr, align 4, !dbg !11481
  call void @addblur_rect(%struct.RenderResult* %20, float* %22, float* %24, float %25, i32 4), !dbg !11482
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end13, !dbg !11483

if.end13:                                         ; preds = %if.end, %land.lhs.true, %for.body
  %26 = load %struct.RenderLayer*, %struct.RenderLayer** %rl1, align 8, !dbg !11484
  %passes = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %26, i32 0, i32 18, !dbg !11485
  %first14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes, i32 0, i32 0, !dbg !11486
  %27 = load i8*, i8** %first14, align 8, !dbg !11486
  %28 = bitcast i8* %27 to %struct.RenderPass*, !dbg !11484
  store %struct.RenderPass* %28, %struct.RenderPass** %rpass1, align 8, !dbg !11487
  %29 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !11488
  %passes15 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %29, i32 0, i32 18, !dbg !11490
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %passes15, i32 0, i32 0, !dbg !11491
  %30 = load i8*, i8** %first16, align 8, !dbg !11491
  %31 = bitcast i8* %30 to %struct.RenderPass*, !dbg !11488
  store %struct.RenderPass* %31, %struct.RenderPass** %rpass, align 8, !dbg !11492
  br label %for.cond17, !dbg !11493

for.cond17:                                       ; preds = %for.inc, %if.end13
  %32 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !11494
  %tobool18 = icmp ne %struct.RenderPass* %32, null, !dbg !11494
  br i1 %tobool18, label %land.rhs19, label %land.end21, !dbg !11496

land.rhs19:                                       ; preds = %for.cond17
  %33 = load %struct.RenderPass*, %struct.RenderPass** %rpass1, align 8, !dbg !11497
  %tobool20 = icmp ne %struct.RenderPass* %33, null, !dbg !11496
  br label %land.end21

land.end21:                                       ; preds = %land.rhs19, %for.cond17
  %34 = phi i1 [ false, %for.cond17 ], [ %tobool20, %land.rhs19 ], !dbg !11498
  br i1 %34, label %for.body22, label %for.end, !dbg !11499

for.body22:                                       ; preds = %land.end21
  %35 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11500
  %36 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !11502
  %rect = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %36, i32 0, i32 6, !dbg !11503
  %37 = load float*, float** %rect, align 8, !dbg !11503
  %38 = load %struct.RenderPass*, %struct.RenderPass** %rpass1, align 8, !dbg !11504
  %rect23 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %38, i32 0, i32 6, !dbg !11505
  %39 = load float*, float** %rect23, align 8, !dbg !11505
  %40 = load float, float* %blurfac.addr, align 4, !dbg !11506
  %41 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !11507
  %channels = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %41, i32 0, i32 3, !dbg !11508
  %42 = load i32, i32* %channels, align 4, !dbg !11508
  call void @addblur_rect(%struct.RenderResult* %35, float* %37, float* %39, float %40, i32 %42), !dbg !11509
  br label %for.inc, !dbg !11510

for.inc:                                          ; preds = %for.body22
  %43 = load %struct.RenderPass*, %struct.RenderPass** %rpass, align 8, !dbg !11511
  %next = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %43, i32 0, i32 0, !dbg !11512
  %44 = load %struct.RenderPass*, %struct.RenderPass** %next, align 8, !dbg !11512
  store %struct.RenderPass* %44, %struct.RenderPass** %rpass, align 8, !dbg !11513
  %45 = load %struct.RenderPass*, %struct.RenderPass** %rpass1, align 8, !dbg !11514
  %next24 = getelementptr inbounds %struct.RenderPass, %struct.RenderPass* %45, i32 0, i32 0, !dbg !11515
  %46 = load %struct.RenderPass*, %struct.RenderPass** %next24, align 8, !dbg !11515
  store %struct.RenderPass* %46, %struct.RenderPass** %rpass1, align 8, !dbg !11516
  br label %for.cond17, !dbg !11517, !llvm.loop !11518

for.end:                                          ; preds = %land.end21
  br label %for.inc25, !dbg !11520

for.inc25:                                        ; preds = %for.end
  %47 = load %struct.RenderLayer*, %struct.RenderLayer** %rl, align 8, !dbg !11521
  %next26 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %47, i32 0, i32 0, !dbg !11522
  %48 = load %struct.RenderLayer*, %struct.RenderLayer** %next26, align 8, !dbg !11522
  store %struct.RenderLayer* %48, %struct.RenderLayer** %rl, align 8, !dbg !11523
  %49 = load %struct.RenderLayer*, %struct.RenderLayer** %rl1, align 8, !dbg !11524
  %next27 = getelementptr inbounds %struct.RenderLayer, %struct.RenderLayer* %49, i32 0, i32 0, !dbg !11525
  %50 = load %struct.RenderLayer*, %struct.RenderLayer** %next27, align 8, !dbg !11525
  store %struct.RenderLayer* %50, %struct.RenderLayer** %rl1, align 8, !dbg !11526
  br label %for.cond, !dbg !11527, !llvm.loop !11528

for.end28:                                        ; preds = %land.end
  ret void, !dbg !11530
}

; Function Attrs: noinline nounwind uwtable
define internal void @addblur_rect_key(%struct.RenderResult* %rr, float* %rectf, float* %rectf1, float %blurfac) #0 !dbg !11531 {
entry:
  %rr.addr = alloca %struct.RenderResult*, align 8
  %rectf.addr = alloca float*, align 8
  %rectf1.addr = alloca float*, align 8
  %blurfac.addr = alloca float, align 4
  %mfac = alloca float, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %stride = alloca i32, align 4
  %len = alloca i32, align 4
  %rf = alloca float*, align 8
  %rf1 = alloca float*, align 8
  store %struct.RenderResult* %rr, %struct.RenderResult** %rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr.addr, metadata !11534, metadata !DIExpression()), !dbg !11535
  store float* %rectf, float** %rectf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf.addr, metadata !11536, metadata !DIExpression()), !dbg !11537
  store float* %rectf1, float** %rectf1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf1.addr, metadata !11538, metadata !DIExpression()), !dbg !11539
  store float %blurfac, float* %blurfac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %blurfac.addr, metadata !11540, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.declare(metadata float* %mfac, metadata !11542, metadata !DIExpression()), !dbg !11543
  %0 = load float, float* %blurfac.addr, align 4, !dbg !11544
  %sub = fsub float 1.000000e+00, %0, !dbg !11545
  store float %sub, float* %mfac, align 4, !dbg !11543
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11546, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.declare(metadata i32* %b, metadata !11548, metadata !DIExpression()), !dbg !11549
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !11550, metadata !DIExpression()), !dbg !11551
  %1 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11552
  %rectx = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %1, i32 0, i32 2, !dbg !11553
  %2 = load i32, i32* %rectx, align 8, !dbg !11553
  %mul = mul nsw i32 4, %2, !dbg !11554
  store i32 %mul, i32* %stride, align 4, !dbg !11551
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11555, metadata !DIExpression()), !dbg !11556
  %3 = load i32, i32* %stride, align 4, !dbg !11557
  %conv = sext i32 %3 to i64, !dbg !11557
  %mul1 = mul i64 %conv, 4, !dbg !11558
  %conv2 = trunc i64 %mul1 to i32, !dbg !11557
  store i32 %conv2, i32* %len, align 4, !dbg !11556
  store i32 0, i32* %a, align 4, !dbg !11559
  br label %for.cond, !dbg !11561

for.cond:                                         ; preds = %for.inc62, %entry
  %4 = load i32, i32* %a, align 4, !dbg !11562
  %5 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11564
  %recty = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %5, i32 0, i32 3, !dbg !11565
  %6 = load i32, i32* %recty, align 4, !dbg !11565
  %cmp = icmp slt i32 %4, %6, !dbg !11566
  br i1 %cmp, label %for.body, label %for.end63, !dbg !11567

for.body:                                         ; preds = %for.cond
  %7 = load float, float* %blurfac.addr, align 4, !dbg !11568
  %cmp4 = fcmp oeq float %7, 1.000000e+00, !dbg !11571
  br i1 %cmp4, label %if.then, label %if.else, !dbg !11572

if.then:                                          ; preds = %for.body
  %8 = load float*, float** %rectf.addr, align 8, !dbg !11573
  %9 = bitcast float* %8 to i8*, !dbg !11575
  %10 = load float*, float** %rectf1.addr, align 8, !dbg !11576
  %11 = bitcast float* %10 to i8*, !dbg !11575
  %12 = load i32, i32* %len, align 4, !dbg !11577
  %conv6 = sext i32 %12 to i64, !dbg !11577
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %11, i64 %conv6, i1 false), !dbg !11575
  br label %if.end58, !dbg !11578

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float** %rf, metadata !11579, metadata !DIExpression()), !dbg !11581
  %13 = load float*, float** %rectf.addr, align 8, !dbg !11582
  store float* %13, float** %rf, align 8, !dbg !11581
  call void @llvm.dbg.declare(metadata float** %rf1, metadata !11583, metadata !DIExpression()), !dbg !11584
  %14 = load float*, float** %rectf1.addr, align 8, !dbg !11585
  store float* %14, float** %rf1, align 8, !dbg !11584
  %15 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11586
  %rectx7 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %15, i32 0, i32 2, !dbg !11588
  %16 = load i32, i32* %rectx7, align 8, !dbg !11588
  store i32 %16, i32* %b, align 4, !dbg !11589
  br label %for.cond8, !dbg !11590

for.cond8:                                        ; preds = %for.inc, %if.else
  %17 = load i32, i32* %b, align 4, !dbg !11591
  %cmp9 = icmp sgt i32 %17, 0, !dbg !11593
  br i1 %cmp9, label %for.body11, label %for.end, !dbg !11594

for.body11:                                       ; preds = %for.cond8
  %18 = load float*, float** %rf1, align 8, !dbg !11595
  %arrayidx = getelementptr inbounds float, float* %18, i64 3, !dbg !11595
  %19 = load float, float* %arrayidx, align 4, !dbg !11595
  %cmp12 = fcmp olt float %19, 0x3F847AE140000000, !dbg !11598
  br i1 %cmp12, label %if.then14, label %if.else18, !dbg !11599

if.then14:                                        ; preds = %for.body11
  %20 = load float, float* %mfac, align 4, !dbg !11600
  %21 = load float*, float** %rf, align 8, !dbg !11601
  %arrayidx15 = getelementptr inbounds float, float* %21, i64 3, !dbg !11601
  %22 = load float, float* %arrayidx15, align 4, !dbg !11601
  %mul16 = fmul float %20, %22, !dbg !11602
  %23 = load float*, float** %rf, align 8, !dbg !11603
  %arrayidx17 = getelementptr inbounds float, float* %23, i64 3, !dbg !11603
  store float %mul16, float* %arrayidx17, align 4, !dbg !11604
  br label %if.end56, !dbg !11603

if.else18:                                        ; preds = %for.body11
  %24 = load float*, float** %rf, align 8, !dbg !11605
  %arrayidx19 = getelementptr inbounds float, float* %24, i64 3, !dbg !11605
  %25 = load float, float* %arrayidx19, align 4, !dbg !11605
  %cmp20 = fcmp olt float %25, 0x3F847AE140000000, !dbg !11607
  br i1 %cmp20, label %if.then22, label %if.else32, !dbg !11608

if.then22:                                        ; preds = %if.else18
  %26 = load float*, float** %rf1, align 8, !dbg !11609
  %arrayidx23 = getelementptr inbounds float, float* %26, i64 0, !dbg !11609
  %27 = load float, float* %arrayidx23, align 4, !dbg !11609
  %28 = load float*, float** %rf, align 8, !dbg !11611
  %arrayidx24 = getelementptr inbounds float, float* %28, i64 0, !dbg !11611
  store float %27, float* %arrayidx24, align 4, !dbg !11612
  %29 = load float*, float** %rf1, align 8, !dbg !11613
  %arrayidx25 = getelementptr inbounds float, float* %29, i64 1, !dbg !11613
  %30 = load float, float* %arrayidx25, align 4, !dbg !11613
  %31 = load float*, float** %rf, align 8, !dbg !11614
  %arrayidx26 = getelementptr inbounds float, float* %31, i64 1, !dbg !11614
  store float %30, float* %arrayidx26, align 4, !dbg !11615
  %32 = load float*, float** %rf1, align 8, !dbg !11616
  %arrayidx27 = getelementptr inbounds float, float* %32, i64 2, !dbg !11616
  %33 = load float, float* %arrayidx27, align 4, !dbg !11616
  %34 = load float*, float** %rf, align 8, !dbg !11617
  %arrayidx28 = getelementptr inbounds float, float* %34, i64 2, !dbg !11617
  store float %33, float* %arrayidx28, align 4, !dbg !11618
  %35 = load float, float* %blurfac.addr, align 4, !dbg !11619
  %36 = load float*, float** %rf1, align 8, !dbg !11620
  %arrayidx29 = getelementptr inbounds float, float* %36, i64 3, !dbg !11620
  %37 = load float, float* %arrayidx29, align 4, !dbg !11620
  %mul30 = fmul float %35, %37, !dbg !11621
  %38 = load float*, float** %rf, align 8, !dbg !11622
  %arrayidx31 = getelementptr inbounds float, float* %38, i64 3, !dbg !11622
  store float %mul30, float* %arrayidx31, align 4, !dbg !11623
  br label %if.end, !dbg !11624

if.else32:                                        ; preds = %if.else18
  %39 = load float, float* %mfac, align 4, !dbg !11625
  %40 = load float*, float** %rf, align 8, !dbg !11627
  %arrayidx33 = getelementptr inbounds float, float* %40, i64 0, !dbg !11627
  %41 = load float, float* %arrayidx33, align 4, !dbg !11627
  %mul34 = fmul float %39, %41, !dbg !11628
  %42 = load float, float* %blurfac.addr, align 4, !dbg !11629
  %43 = load float*, float** %rf1, align 8, !dbg !11630
  %arrayidx35 = getelementptr inbounds float, float* %43, i64 0, !dbg !11630
  %44 = load float, float* %arrayidx35, align 4, !dbg !11630
  %mul36 = fmul float %42, %44, !dbg !11631
  %add = fadd float %mul34, %mul36, !dbg !11632
  %45 = load float*, float** %rf, align 8, !dbg !11633
  %arrayidx37 = getelementptr inbounds float, float* %45, i64 0, !dbg !11633
  store float %add, float* %arrayidx37, align 4, !dbg !11634
  %46 = load float, float* %mfac, align 4, !dbg !11635
  %47 = load float*, float** %rf, align 8, !dbg !11636
  %arrayidx38 = getelementptr inbounds float, float* %47, i64 1, !dbg !11636
  %48 = load float, float* %arrayidx38, align 4, !dbg !11636
  %mul39 = fmul float %46, %48, !dbg !11637
  %49 = load float, float* %blurfac.addr, align 4, !dbg !11638
  %50 = load float*, float** %rf1, align 8, !dbg !11639
  %arrayidx40 = getelementptr inbounds float, float* %50, i64 1, !dbg !11639
  %51 = load float, float* %arrayidx40, align 4, !dbg !11639
  %mul41 = fmul float %49, %51, !dbg !11640
  %add42 = fadd float %mul39, %mul41, !dbg !11641
  %52 = load float*, float** %rf, align 8, !dbg !11642
  %arrayidx43 = getelementptr inbounds float, float* %52, i64 1, !dbg !11642
  store float %add42, float* %arrayidx43, align 4, !dbg !11643
  %53 = load float, float* %mfac, align 4, !dbg !11644
  %54 = load float*, float** %rf, align 8, !dbg !11645
  %arrayidx44 = getelementptr inbounds float, float* %54, i64 2, !dbg !11645
  %55 = load float, float* %arrayidx44, align 4, !dbg !11645
  %mul45 = fmul float %53, %55, !dbg !11646
  %56 = load float, float* %blurfac.addr, align 4, !dbg !11647
  %57 = load float*, float** %rf1, align 8, !dbg !11648
  %arrayidx46 = getelementptr inbounds float, float* %57, i64 2, !dbg !11648
  %58 = load float, float* %arrayidx46, align 4, !dbg !11648
  %mul47 = fmul float %56, %58, !dbg !11649
  %add48 = fadd float %mul45, %mul47, !dbg !11650
  %59 = load float*, float** %rf, align 8, !dbg !11651
  %arrayidx49 = getelementptr inbounds float, float* %59, i64 2, !dbg !11651
  store float %add48, float* %arrayidx49, align 4, !dbg !11652
  %60 = load float, float* %mfac, align 4, !dbg !11653
  %61 = load float*, float** %rf, align 8, !dbg !11654
  %arrayidx50 = getelementptr inbounds float, float* %61, i64 3, !dbg !11654
  %62 = load float, float* %arrayidx50, align 4, !dbg !11654
  %mul51 = fmul float %60, %62, !dbg !11655
  %63 = load float, float* %blurfac.addr, align 4, !dbg !11656
  %64 = load float*, float** %rf1, align 8, !dbg !11657
  %arrayidx52 = getelementptr inbounds float, float* %64, i64 3, !dbg !11657
  %65 = load float, float* %arrayidx52, align 4, !dbg !11657
  %mul53 = fmul float %63, %65, !dbg !11658
  %add54 = fadd float %mul51, %mul53, !dbg !11659
  %66 = load float*, float** %rf, align 8, !dbg !11660
  %arrayidx55 = getelementptr inbounds float, float* %66, i64 3, !dbg !11660
  store float %add54, float* %arrayidx55, align 4, !dbg !11661
  br label %if.end

if.end:                                           ; preds = %if.else32, %if.then22
  br label %if.end56

if.end56:                                         ; preds = %if.end, %if.then14
  br label %for.inc, !dbg !11662

for.inc:                                          ; preds = %if.end56
  %67 = load i32, i32* %b, align 4, !dbg !11663
  %dec = add nsw i32 %67, -1, !dbg !11663
  store i32 %dec, i32* %b, align 4, !dbg !11663
  %68 = load float*, float** %rf, align 8, !dbg !11664
  %add.ptr = getelementptr inbounds float, float* %68, i64 4, !dbg !11664
  store float* %add.ptr, float** %rf, align 8, !dbg !11664
  %69 = load float*, float** %rf1, align 8, !dbg !11665
  %add.ptr57 = getelementptr inbounds float, float* %69, i64 4, !dbg !11665
  store float* %add.ptr57, float** %rf1, align 8, !dbg !11665
  br label %for.cond8, !dbg !11666, !llvm.loop !11667

for.end:                                          ; preds = %for.cond8
  br label %if.end58

if.end58:                                         ; preds = %for.end, %if.then
  %70 = load i32, i32* %stride, align 4, !dbg !11669
  %71 = load float*, float** %rectf.addr, align 8, !dbg !11670
  %idx.ext = sext i32 %70 to i64, !dbg !11670
  %add.ptr59 = getelementptr inbounds float, float* %71, i64 %idx.ext, !dbg !11670
  store float* %add.ptr59, float** %rectf.addr, align 8, !dbg !11670
  %72 = load i32, i32* %stride, align 4, !dbg !11671
  %73 = load float*, float** %rectf1.addr, align 8, !dbg !11672
  %idx.ext60 = sext i32 %72 to i64, !dbg !11672
  %add.ptr61 = getelementptr inbounds float, float* %73, i64 %idx.ext60, !dbg !11672
  store float* %add.ptr61, float** %rectf1.addr, align 8, !dbg !11672
  br label %for.inc62, !dbg !11673

for.inc62:                                        ; preds = %if.end58
  %74 = load i32, i32* %a, align 4, !dbg !11674
  %inc = add nsw i32 %74, 1, !dbg !11674
  store i32 %inc, i32* %a, align 4, !dbg !11674
  br label %for.cond, !dbg !11675, !llvm.loop !11676

for.end63:                                        ; preds = %for.cond
  ret void, !dbg !11678
}

; Function Attrs: noinline nounwind uwtable
define internal void @addblur_rect(%struct.RenderResult* %rr, float* %rectf, float* %rectf1, float %blurfac, i32 %channels) #0 !dbg !11679 {
entry:
  %rr.addr = alloca %struct.RenderResult*, align 8
  %rectf.addr = alloca float*, align 8
  %rectf1.addr = alloca float*, align 8
  %blurfac.addr = alloca float, align 4
  %channels.addr = alloca i32, align 4
  %mfac = alloca float, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %stride = alloca i32, align 4
  %len = alloca i32, align 4
  %rf = alloca float*, align 8
  %rf1 = alloca float*, align 8
  store %struct.RenderResult* %rr, %struct.RenderResult** %rr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderResult** %rr.addr, metadata !11682, metadata !DIExpression()), !dbg !11683
  store float* %rectf, float** %rectf.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf.addr, metadata !11684, metadata !DIExpression()), !dbg !11685
  store float* %rectf1, float** %rectf1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rectf1.addr, metadata !11686, metadata !DIExpression()), !dbg !11687
  store float %blurfac, float* %blurfac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %blurfac.addr, metadata !11688, metadata !DIExpression()), !dbg !11689
  store i32 %channels, i32* %channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channels.addr, metadata !11690, metadata !DIExpression()), !dbg !11691
  call void @llvm.dbg.declare(metadata float* %mfac, metadata !11692, metadata !DIExpression()), !dbg !11693
  %0 = load float, float* %blurfac.addr, align 4, !dbg !11694
  %sub = fsub float 1.000000e+00, %0, !dbg !11695
  store float %sub, float* %mfac, align 4, !dbg !11693
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11696, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.declare(metadata i32* %b, metadata !11698, metadata !DIExpression()), !dbg !11699
  call void @llvm.dbg.declare(metadata i32* %stride, metadata !11700, metadata !DIExpression()), !dbg !11701
  %1 = load i32, i32* %channels.addr, align 4, !dbg !11702
  %2 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11703
  %rectx = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %2, i32 0, i32 2, !dbg !11704
  %3 = load i32, i32* %rectx, align 8, !dbg !11704
  %mul = mul nsw i32 %1, %3, !dbg !11705
  store i32 %mul, i32* %stride, align 4, !dbg !11701
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11706, metadata !DIExpression()), !dbg !11707
  %4 = load i32, i32* %stride, align 4, !dbg !11708
  %conv = sext i32 %4 to i64, !dbg !11708
  %mul1 = mul i64 %conv, 4, !dbg !11709
  %conv2 = trunc i64 %mul1 to i32, !dbg !11708
  store i32 %conv2, i32* %len, align 4, !dbg !11707
  store i32 0, i32* %a, align 4, !dbg !11710
  br label %for.cond, !dbg !11712

for.cond:                                         ; preds = %for.inc20, %entry
  %5 = load i32, i32* %a, align 4, !dbg !11713
  %6 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11715
  %recty = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %6, i32 0, i32 3, !dbg !11716
  %7 = load i32, i32* %recty, align 4, !dbg !11716
  %cmp = icmp slt i32 %5, %7, !dbg !11717
  br i1 %cmp, label %for.body, label %for.end21, !dbg !11718

for.body:                                         ; preds = %for.cond
  %8 = load float, float* %blurfac.addr, align 4, !dbg !11719
  %cmp4 = fcmp oeq float %8, 1.000000e+00, !dbg !11722
  br i1 %cmp4, label %if.then, label %if.else, !dbg !11723

if.then:                                          ; preds = %for.body
  %9 = load float*, float** %rectf.addr, align 8, !dbg !11724
  %10 = bitcast float* %9 to i8*, !dbg !11726
  %11 = load float*, float** %rectf1.addr, align 8, !dbg !11727
  %12 = bitcast float* %11 to i8*, !dbg !11726
  %13 = load i32, i32* %len, align 4, !dbg !11728
  %conv6 = sext i32 %13 to i64, !dbg !11728
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %12, i64 %conv6, i1 false), !dbg !11726
  br label %if.end, !dbg !11729

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float** %rf, metadata !11730, metadata !DIExpression()), !dbg !11732
  %14 = load float*, float** %rectf.addr, align 8, !dbg !11733
  store float* %14, float** %rf, align 8, !dbg !11732
  call void @llvm.dbg.declare(metadata float** %rf1, metadata !11734, metadata !DIExpression()), !dbg !11735
  %15 = load float*, float** %rectf1.addr, align 8, !dbg !11736
  store float* %15, float** %rf1, align 8, !dbg !11735
  %16 = load %struct.RenderResult*, %struct.RenderResult** %rr.addr, align 8, !dbg !11737
  %rectx7 = getelementptr inbounds %struct.RenderResult, %struct.RenderResult* %16, i32 0, i32 2, !dbg !11739
  %17 = load i32, i32* %rectx7, align 8, !dbg !11739
  %18 = load i32, i32* %channels.addr, align 4, !dbg !11740
  %mul8 = mul nsw i32 %17, %18, !dbg !11741
  store i32 %mul8, i32* %b, align 4, !dbg !11742
  br label %for.cond9, !dbg !11743

for.cond9:                                        ; preds = %for.inc, %if.else
  %19 = load i32, i32* %b, align 4, !dbg !11744
  %cmp10 = icmp sgt i32 %19, 0, !dbg !11746
  br i1 %cmp10, label %for.body12, label %for.end, !dbg !11747

for.body12:                                       ; preds = %for.cond9
  %20 = load float, float* %mfac, align 4, !dbg !11748
  %21 = load float*, float** %rf, align 8, !dbg !11750
  %arrayidx = getelementptr inbounds float, float* %21, i64 0, !dbg !11750
  %22 = load float, float* %arrayidx, align 4, !dbg !11750
  %mul13 = fmul float %20, %22, !dbg !11751
  %23 = load float, float* %blurfac.addr, align 4, !dbg !11752
  %24 = load float*, float** %rf1, align 8, !dbg !11753
  %arrayidx14 = getelementptr inbounds float, float* %24, i64 0, !dbg !11753
  %25 = load float, float* %arrayidx14, align 4, !dbg !11753
  %mul15 = fmul float %23, %25, !dbg !11754
  %add = fadd float %mul13, %mul15, !dbg !11755
  %26 = load float*, float** %rf, align 8, !dbg !11756
  %arrayidx16 = getelementptr inbounds float, float* %26, i64 0, !dbg !11756
  store float %add, float* %arrayidx16, align 4, !dbg !11757
  br label %for.inc, !dbg !11758

for.inc:                                          ; preds = %for.body12
  %27 = load i32, i32* %b, align 4, !dbg !11759
  %dec = add nsw i32 %27, -1, !dbg !11759
  store i32 %dec, i32* %b, align 4, !dbg !11759
  %28 = load float*, float** %rf, align 8, !dbg !11760
  %incdec.ptr = getelementptr inbounds float, float* %28, i32 1, !dbg !11760
  store float* %incdec.ptr, float** %rf, align 8, !dbg !11760
  %29 = load float*, float** %rf1, align 8, !dbg !11761
  %incdec.ptr17 = getelementptr inbounds float, float* %29, i32 1, !dbg !11761
  store float* %incdec.ptr17, float** %rf1, align 8, !dbg !11761
  br label %for.cond9, !dbg !11762, !llvm.loop !11763

for.end:                                          ; preds = %for.cond9
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %30 = load i32, i32* %stride, align 4, !dbg !11765
  %31 = load float*, float** %rectf.addr, align 8, !dbg !11766
  %idx.ext = sext i32 %30 to i64, !dbg !11766
  %add.ptr = getelementptr inbounds float, float* %31, i64 %idx.ext, !dbg !11766
  store float* %add.ptr, float** %rectf.addr, align 8, !dbg !11766
  %32 = load i32, i32* %stride, align 4, !dbg !11767
  %33 = load float*, float** %rectf1.addr, align 8, !dbg !11768
  %idx.ext18 = sext i32 %32 to i64, !dbg !11768
  %add.ptr19 = getelementptr inbounds float, float* %33, i64 %idx.ext18, !dbg !11768
  store float* %add.ptr19, float** %rectf1.addr, align 8, !dbg !11768
  br label %for.inc20, !dbg !11769

for.inc20:                                        ; preds = %if.end
  %34 = load i32, i32* %a, align 4, !dbg !11770
  %inc = add nsw i32 %34, 1, !dbg !11770
  store i32 %inc, i32* %a, align 4, !dbg !11770
  br label %for.cond, !dbg !11771, !llvm.loop !11772

for.end21:                                        ; preds = %for.cond
  ret void, !dbg !11774
}

; Function Attrs: noinline nounwind uwtable
define internal void @render_scene(%struct.Render* %re, %struct.Scene* %sce, i32 %cfra) #0 !dbg !11775 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  %cfra.addr = alloca i32, align 4
  %resc = alloca %struct.Render*, align 8
  %winx = alloca i32, align 4
  %winy = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !11778, metadata !DIExpression()), !dbg !11779
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !11780, metadata !DIExpression()), !dbg !11781
  store i32 %cfra, i32* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cfra.addr, metadata !11782, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.declare(metadata %struct.Render** %resc, metadata !11784, metadata !DIExpression()), !dbg !11785
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11786
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 0, !dbg !11787
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !11788
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !11786
  %call = call %struct.Render* @RE_NewRender(i8* %arraydecay), !dbg !11789
  store %struct.Render* %call, %struct.Render** %resc, align 8, !dbg !11785
  call void @llvm.dbg.declare(metadata i32* %winx, metadata !11790, metadata !DIExpression()), !dbg !11791
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11792
  %winx1 = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 13, !dbg !11793
  %2 = load i32, i32* %winx1, align 4, !dbg !11793
  store i32 %2, i32* %winx, align 4, !dbg !11791
  call void @llvm.dbg.declare(metadata i32* %winy, metadata !11794, metadata !DIExpression()), !dbg !11795
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11796
  %winy2 = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 14, !dbg !11797
  %4 = load i32, i32* %winy2, align 8, !dbg !11797
  store i32 %4, i32* %winy, align 4, !dbg !11795
  %5 = load i32, i32* %cfra.addr, align 4, !dbg !11798
  %6 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11799
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 22, !dbg !11800
  %cfra3 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !11801
  store i32 %5, i32* %cfra3, align 8, !dbg !11802
  %7 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11803
  %call4 = call i32 @BKE_scene_camera_switch_update(%struct.Scene* %7), !dbg !11804
  %8 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11805
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11806
  %10 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11807
  %r5 = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 22, !dbg !11808
  %11 = load i32, i32* %winx, align 4, !dbg !11809
  %12 = load i32, i32* %winy, align 4, !dbg !11810
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11811
  %disprect = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 15, !dbg !11812
  call void @RE_InitState(%struct.Render* %8, %struct.Render* %9, %struct.RenderData* %r5, %struct.SceneRenderLayer* null, i32 %11, i32 %12, %struct.rcti* %disprect), !dbg !11813
  %14 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11814
  %r6 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 45, !dbg !11815
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r6, i32 0, i32 46, !dbg !11816
  %15 = load i32, i32* %scemode, align 4, !dbg !11816
  %and = and i32 %15, -1048577, !dbg !11817
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11818
  %r7 = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 45, !dbg !11819
  %scemode8 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r7, i32 0, i32 46, !dbg !11820
  %17 = load i32, i32* %scemode8, align 4, !dbg !11820
  %and9 = and i32 %17, 1048576, !dbg !11821
  %or = or i32 %and, %and9, !dbg !11822
  %18 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11823
  %r10 = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 45, !dbg !11824
  %scemode11 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r10, i32 0, i32 46, !dbg !11825
  store i32 %or, i32* %scemode11, align 4, !dbg !11826
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11827
  %main = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 43, !dbg !11828
  %20 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !11828
  %21 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11829
  %main12 = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 43, !dbg !11830
  store %struct.Main* %20, %struct.Main** %main12, align 8, !dbg !11831
  %22 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11832
  %23 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11833
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 44, !dbg !11834
  store %struct.Scene* %22, %struct.Scene** %scene, align 8, !dbg !11835
  %24 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11836
  %lay = getelementptr inbounds %struct.Scene, %struct.Scene* %24, i32 0, i32 12, !dbg !11837
  %25 = load i32, i32* %lay, align 8, !dbg !11837
  %26 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11838
  %lay13 = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 48, !dbg !11839
  store i32 %25, i32* %lay13, align 8, !dbg !11840
  %27 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11841
  %call14 = call zeroext i8 @BKE_scene_check_color_management_enabled(%struct.Scene* %27), !dbg !11842
  %28 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11843
  %scene_color_manage = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 8, !dbg !11844
  store i8 %call14, i8* %scene_color_manage, align 8, !dbg !11845
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11846
  %main15 = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 43, !dbg !11847
  %30 = load %struct.Main*, %struct.Main** %main15, align 8, !dbg !11847
  %31 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !11848
  call void @BKE_scene_set_background(%struct.Main* %30, %struct.Scene* %31), !dbg !11849
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11850
  %display_update = getelementptr inbounds %struct.Render, %struct.Render* %32, i32 0, i32 86, !dbg !11851
  %33 = load void (i8*, %struct.RenderResult*, %struct.rcti*)*, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update, align 8, !dbg !11851
  %34 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11852
  %display_update16 = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 86, !dbg !11853
  store void (i8*, %struct.RenderResult*, %struct.rcti*)* %33, void (i8*, %struct.RenderResult*, %struct.rcti*)** %display_update16, align 8, !dbg !11854
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11855
  %duh = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 87, !dbg !11856
  %36 = load i8*, i8** %duh, align 8, !dbg !11856
  %37 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11857
  %duh17 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 87, !dbg !11858
  store i8* %36, i8** %duh17, align 8, !dbg !11859
  %38 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11860
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %38, i32 0, i32 96, !dbg !11861
  %39 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !11861
  %40 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11862
  %test_break18 = getelementptr inbounds %struct.Render, %struct.Render* %40, i32 0, i32 96, !dbg !11863
  store i32 (i8*)* %39, i32 (i8*)** %test_break18, align 8, !dbg !11864
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11865
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 97, !dbg !11866
  %42 = load i8*, i8** %tbh, align 8, !dbg !11866
  %43 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11867
  %tbh19 = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 97, !dbg !11868
  store i8* %42, i8** %tbh19, align 8, !dbg !11869
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11870
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %44, i32 0, i32 90, !dbg !11871
  %45 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !11871
  %46 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11872
  %stats_draw20 = getelementptr inbounds %struct.Render, %struct.Render* %46, i32 0, i32 90, !dbg !11873
  store void (i8*, %struct.RenderStats*)* %45, void (i8*, %struct.RenderStats*)** %stats_draw20, align 8, !dbg !11874
  %47 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11875
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %47, i32 0, i32 91, !dbg !11876
  %48 = load i8*, i8** %sdh, align 8, !dbg !11876
  %49 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11877
  %sdh21 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 91, !dbg !11878
  store i8* %48, i8** %sdh21, align 8, !dbg !11879
  %50 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11880
  %current_scene_update = getelementptr inbounds %struct.Render, %struct.Render* %50, i32 0, i32 88, !dbg !11881
  %51 = load void (i8*, %struct.Scene*)*, void (i8*, %struct.Scene*)** %current_scene_update, align 8, !dbg !11881
  %52 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11882
  %current_scene_update22 = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 88, !dbg !11883
  store void (i8*, %struct.Scene*)* %51, void (i8*, %struct.Scene*)** %current_scene_update22, align 8, !dbg !11884
  %53 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11885
  %suh = getelementptr inbounds %struct.Render, %struct.Render* %53, i32 0, i32 89, !dbg !11886
  %54 = load i8*, i8** %suh, align 8, !dbg !11886
  %55 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11887
  %suh23 = getelementptr inbounds %struct.Render, %struct.Render* %55, i32 0, i32 89, !dbg !11888
  store i8* %54, i8** %suh23, align 8, !dbg !11889
  %56 = load %struct.Render*, %struct.Render** %resc, align 8, !dbg !11890
  call void @do_render_fields_blur_3d(%struct.Render* %56), !dbg !11891
  ret void, !dbg !11892
}

declare dso_local void @nodeUpdate(%struct.bNodeTree*, %struct.bNode*) #2

declare dso_local void @BKE_scene_set_background(%struct.Main*, %struct.Scene*) #2

declare dso_local void @BKE_stamp_buf(%struct.Scene*, %struct.Object*, i8*, float*, i32, i32, i32) #2

declare dso_local %struct.ImBuf* @render_result_rect_to_ibuf(%struct.RenderResult*, %struct.RenderData*) #2

declare dso_local zeroext i8 @RE_WriteRenderResult(%struct.ReportList*, %struct.RenderResult*, i8*, i32) #2

declare dso_local i32 @BKE_imbuf_write_stamp(%struct.Scene*, %struct.Object*, %struct.ImBuf*, i8*, %struct.ImageFormatData*) #2

declare dso_local zeroext i8 @BLI_testextensie(i8*, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

declare dso_local i32 @BKE_add_image_extension(i8*, %struct.ImageFormatData*) #2

declare dso_local void @BLI_timestr(double, i8*, i64) #2

declare dso_local void @BKE_scene_frame_set(%struct.Scene*, double) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @render_scene_needs_vector(%struct.Render* %re) #0 !dbg !11893 {
entry:
  %retval = alloca i32, align 4
  %re.addr = alloca %struct.Render*, align 8
  %srl = alloca %struct.SceneRenderLayer*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !11894, metadata !DIExpression()), !dbg !11895
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl, metadata !11896, metadata !DIExpression()), !dbg !11897
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11898
  %r = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 45, !dbg !11900
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 60, !dbg !11901
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !11902
  %1 = load i8*, i8** %first, align 8, !dbg !11902
  %2 = bitcast i8* %1 to %struct.SceneRenderLayer*, !dbg !11898
  store %struct.SceneRenderLayer* %2, %struct.SceneRenderLayer** %srl, align 8, !dbg !11903
  br label %for.cond, !dbg !11904

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !11905
  %tobool = icmp ne %struct.SceneRenderLayer* %3, null, !dbg !11907
  br i1 %tobool, label %for.body, label %for.end, !dbg !11907

for.body:                                         ; preds = %for.cond
  %4 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !11908
  %layflag = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %4, i32 0, i32 8, !dbg !11910
  %5 = load i32, i32* %layflag, align 4, !dbg !11910
  %and = and i32 %5, 131072, !dbg !11911
  %tobool1 = icmp ne i32 %and, 0, !dbg !11911
  br i1 %tobool1, label %if.end5, label %if.then, !dbg !11912

if.then:                                          ; preds = %for.body
  %6 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !11913
  %passflag = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %6, i32 0, i32 9, !dbg !11915
  %7 = load i32, i32* %passflag, align 8, !dbg !11915
  %and2 = and i32 %7, 512, !dbg !11916
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11916
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11917

if.then4:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !11918
  br label %return, !dbg !11918

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !11919

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11920

for.inc:                                          ; preds = %if.end5
  %8 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !11921
  %next = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %8, i32 0, i32 0, !dbg !11922
  %9 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %next, align 8, !dbg !11922
  store %struct.SceneRenderLayer* %9, %struct.SceneRenderLayer** %srl, align 8, !dbg !11923
  br label %for.cond, !dbg !11924, !llvm.loop !11925

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !11927
  br label %return, !dbg !11927

return:                                           ; preds = %for.end, %if.then4
  %10 = load i32, i32* %retval, align 4, !dbg !11928
  ret i32 %10, !dbg !11928
}

declare dso_local void @RE_Database_FromScene_Vectors(%struct.Render*, %struct.Main*, %struct.Scene*, i32) #2

declare dso_local void @RE_Database_FromScene(%struct.Render*, %struct.Main*, %struct.Scene*, i32, i32) #2

declare dso_local void @RE_Database_Preprocess(%struct.Render*) #2

declare dso_local void @add_halo_flare(%struct.Render*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3581, !3582, !3583}
!llvm.ident = !{!3584}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "RenderGlobal", scope: !2, file: !3, line: 128, type: !3578, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !214, globals: !2983, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/render/intern/source/pipeline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !41, !48, !60, !76, !105, !126, !132, !145, !156, !208}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ScenePassType", file: !6, line: 213, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40}
!9 = !DIEnumerator(name: "SCE_PASS_COMBINED", value: 1)
!10 = !DIEnumerator(name: "SCE_PASS_Z", value: 2)
!11 = !DIEnumerator(name: "SCE_PASS_RGBA", value: 4)
!12 = !DIEnumerator(name: "SCE_PASS_DIFFUSE", value: 8)
!13 = !DIEnumerator(name: "SCE_PASS_SPEC", value: 16)
!14 = !DIEnumerator(name: "SCE_PASS_SHADOW", value: 32)
!15 = !DIEnumerator(name: "SCE_PASS_AO", value: 64)
!16 = !DIEnumerator(name: "SCE_PASS_REFLECT", value: 128)
!17 = !DIEnumerator(name: "SCE_PASS_NORMAL", value: 256)
!18 = !DIEnumerator(name: "SCE_PASS_VECTOR", value: 512)
!19 = !DIEnumerator(name: "SCE_PASS_REFRACT", value: 1024)
!20 = !DIEnumerator(name: "SCE_PASS_INDEXOB", value: 2048)
!21 = !DIEnumerator(name: "SCE_PASS_UV", value: 4096)
!22 = !DIEnumerator(name: "SCE_PASS_INDIRECT", value: 8192)
!23 = !DIEnumerator(name: "SCE_PASS_MIST", value: 16384)
!24 = !DIEnumerator(name: "SCE_PASS_RAYHITS", value: 32768)
!25 = !DIEnumerator(name: "SCE_PASS_EMIT", value: 65536)
!26 = !DIEnumerator(name: "SCE_PASS_ENVIRONMENT", value: 131072)
!27 = !DIEnumerator(name: "SCE_PASS_INDEXMA", value: 262144)
!28 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_DIRECT", value: 524288)
!29 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_INDIRECT", value: 1048576)
!30 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_COLOR", value: 2097152)
!31 = !DIEnumerator(name: "SCE_PASS_GLOSSY_DIRECT", value: 4194304)
!32 = !DIEnumerator(name: "SCE_PASS_GLOSSY_INDIRECT", value: 8388608)
!33 = !DIEnumerator(name: "SCE_PASS_GLOSSY_COLOR", value: 16777216)
!34 = !DIEnumerator(name: "SCE_PASS_TRANSM_DIRECT", value: 33554432)
!35 = !DIEnumerator(name: "SCE_PASS_TRANSM_INDIRECT", value: 67108864)
!36 = !DIEnumerator(name: "SCE_PASS_TRANSM_COLOR", value: 134217728)
!37 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_DIRECT", value: 268435456)
!38 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_INDIRECT", value: 536870912)
!39 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_COLOR", value: 1073741824)
!40 = !DIEnumerator(name: "SCE_PASS_DEBUG", value: -2147483648)
!41 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eEvaluationMode", file: !42, line: 62, baseType: !43, size: 32, elements: !44)
!42 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!43 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!44 = !{!45, !46, !47}
!45 = !DIEnumerator(name: "DAG_EVAL_VIEWPORT", value: 0, isUnsigned: true)
!46 = !DIEnumerator(name: "DAG_EVAL_PREVIEW", value: 1, isUnsigned: true)
!47 = !DIEnumerator(name: "DAG_EVAL_RENDER", value: 2, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !49, line: 67, baseType: !43, size: 32, elements: !50)
!49 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!50 = !{!51, !52, !53, !54, !55, !56, !57, !58, !59}
!51 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!54 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!55 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!56 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!57 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!58 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!59 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !61, line: 394, baseType: !43, size: 32, elements: !62)
!61 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!62 = !{!63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75}
!63 = !DIEnumerator(name: "OB_NEG_SCALE", value: 4, isUnsigned: true)
!64 = !DIEnumerator(name: "OB_DUPLIFRAMES", value: 8, isUnsigned: true)
!65 = !DIEnumerator(name: "OB_DUPLIVERTS", value: 16, isUnsigned: true)
!66 = !DIEnumerator(name: "OB_DUPLIROT", value: 32, isUnsigned: true)
!67 = !DIEnumerator(name: "OB_DUPLINOSPEED", value: 64, isUnsigned: true)
!68 = !DIEnumerator(name: "OB_DUPLIGROUP", value: 256, isUnsigned: true)
!69 = !DIEnumerator(name: "OB_DUPLIFACES", value: 512, isUnsigned: true)
!70 = !DIEnumerator(name: "OB_DUPLIFACES_SCALE", value: 1024, isUnsigned: true)
!71 = !DIEnumerator(name: "OB_DUPLIPARTS", value: 2048, isUnsigned: true)
!72 = !DIEnumerator(name: "OB_RENDER_DUPLI", value: 4096, isUnsigned: true)
!73 = !DIEnumerator(name: "OB_NO_CONSTRAINTS", value: 8192, isUnsigned: true)
!74 = !DIEnumerator(name: "OB_NO_PSYS_UPDATE", value: 16384, isUnsigned: true)
!75 = !DIEnumerator(name: "OB_DUPLI", value: 2840, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 404, baseType: !43, size: 32, elements: !78)
!77 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!78 = !{!79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!79 = !DIEnumerator(name: "SEQ_TYPE_IMAGE", value: 0, isUnsigned: true)
!80 = !DIEnumerator(name: "SEQ_TYPE_META", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "SEQ_TYPE_SCENE", value: 2, isUnsigned: true)
!82 = !DIEnumerator(name: "SEQ_TYPE_MOVIE", value: 3, isUnsigned: true)
!83 = !DIEnumerator(name: "SEQ_TYPE_SOUND_RAM", value: 4, isUnsigned: true)
!84 = !DIEnumerator(name: "SEQ_TYPE_SOUND_HD", value: 5, isUnsigned: true)
!85 = !DIEnumerator(name: "SEQ_TYPE_MOVIECLIP", value: 6, isUnsigned: true)
!86 = !DIEnumerator(name: "SEQ_TYPE_MASK", value: 7, isUnsigned: true)
!87 = !DIEnumerator(name: "SEQ_TYPE_EFFECT", value: 8, isUnsigned: true)
!88 = !DIEnumerator(name: "SEQ_TYPE_CROSS", value: 8, isUnsigned: true)
!89 = !DIEnumerator(name: "SEQ_TYPE_ADD", value: 9, isUnsigned: true)
!90 = !DIEnumerator(name: "SEQ_TYPE_SUB", value: 10, isUnsigned: true)
!91 = !DIEnumerator(name: "SEQ_TYPE_ALPHAOVER", value: 11, isUnsigned: true)
!92 = !DIEnumerator(name: "SEQ_TYPE_ALPHAUNDER", value: 12, isUnsigned: true)
!93 = !DIEnumerator(name: "SEQ_TYPE_GAMCROSS", value: 13, isUnsigned: true)
!94 = !DIEnumerator(name: "SEQ_TYPE_MUL", value: 14, isUnsigned: true)
!95 = !DIEnumerator(name: "SEQ_TYPE_OVERDROP", value: 15, isUnsigned: true)
!96 = !DIEnumerator(name: "SEQ_TYPE_WIPE", value: 25, isUnsigned: true)
!97 = !DIEnumerator(name: "SEQ_TYPE_GLOW", value: 26, isUnsigned: true)
!98 = !DIEnumerator(name: "SEQ_TYPE_TRANSFORM", value: 27, isUnsigned: true)
!99 = !DIEnumerator(name: "SEQ_TYPE_COLOR", value: 28, isUnsigned: true)
!100 = !DIEnumerator(name: "SEQ_TYPE_SPEED", value: 29, isUnsigned: true)
!101 = !DIEnumerator(name: "SEQ_TYPE_MULTICAM", value: 30, isUnsigned: true)
!102 = !DIEnumerator(name: "SEQ_TYPE_ADJUSTMENT", value: 31, isUnsigned: true)
!103 = !DIEnumerator(name: "SEQ_TYPE_GAUSSIAN_BLUR", value: 40, isUnsigned: true)
!104 = !DIEnumerator(name: "SEQ_TYPE_EFFECT_MAX", value: 40, isUnsigned: true)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 39, baseType: !43, size: 32, elements: !107)
!106 = !DIFile(filename: "blender/source/blender/blenlib/BLI_callbacks.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!107 = !{!108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125}
!108 = !DIEnumerator(name: "BLI_CB_EVT_FRAME_CHANGE_PRE", value: 0, isUnsigned: true)
!109 = !DIEnumerator(name: "BLI_CB_EVT_FRAME_CHANGE_POST", value: 1, isUnsigned: true)
!110 = !DIEnumerator(name: "BLI_CB_EVT_RENDER_PRE", value: 2, isUnsigned: true)
!111 = !DIEnumerator(name: "BLI_CB_EVT_RENDER_POST", value: 3, isUnsigned: true)
!112 = !DIEnumerator(name: "BLI_CB_EVT_RENDER_STATS", value: 4, isUnsigned: true)
!113 = !DIEnumerator(name: "BLI_CB_EVT_RENDER_INIT", value: 5, isUnsigned: true)
!114 = !DIEnumerator(name: "BLI_CB_EVT_RENDER_COMPLETE", value: 6, isUnsigned: true)
!115 = !DIEnumerator(name: "BLI_CB_EVT_RENDER_CANCEL", value: 7, isUnsigned: true)
!116 = !DIEnumerator(name: "BLI_CB_EVT_LOAD_PRE", value: 8, isUnsigned: true)
!117 = !DIEnumerator(name: "BLI_CB_EVT_LOAD_POST", value: 9, isUnsigned: true)
!118 = !DIEnumerator(name: "BLI_CB_EVT_SAVE_PRE", value: 10, isUnsigned: true)
!119 = !DIEnumerator(name: "BLI_CB_EVT_SAVE_POST", value: 11, isUnsigned: true)
!120 = !DIEnumerator(name: "BLI_CB_EVT_SCENE_UPDATE_PRE", value: 12, isUnsigned: true)
!121 = !DIEnumerator(name: "BLI_CB_EVT_SCENE_UPDATE_POST", value: 13, isUnsigned: true)
!122 = !DIEnumerator(name: "BLI_CB_EVT_GAME_PRE", value: 14, isUnsigned: true)
!123 = !DIEnumerator(name: "BLI_CB_EVT_GAME_POST", value: 15, isUnsigned: true)
!124 = !DIEnumerator(name: "BLI_CB_EVT_VERSION_UPDATE", value: 16, isUnsigned: true)
!125 = !DIEnumerator(name: "BLI_CB_EVT_TOT", value: 17, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !127, line: 119, baseType: !43, size: 32, elements: !128)
!127 = !DIFile(filename: "blender/source/blender/render/intern/include/render_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!128 = !{!129, !130, !131}
!129 = !DIEnumerator(name: "PART_STATUS_NONE", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "PART_STATUS_IN_PROGRESS", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "PART_STATUS_READY", value: 2, isUnsigned: true)
!132 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !61, line: 339, baseType: !43, size: 32, elements: !133)
!133 = !{!134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144}
!134 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!136 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!137 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!138 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!139 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!140 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!141 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!142 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!143 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!144 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierMode", file: !146, line: 88, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!147 = !{!148, !149, !150, !151, !152, !153, !154, !155}
!148 = !DIEnumerator(name: "eModifierMode_Realtime", value: 1)
!149 = !DIEnumerator(name: "eModifierMode_Render", value: 2)
!150 = !DIEnumerator(name: "eModifierMode_Editmode", value: 4)
!151 = !DIEnumerator(name: "eModifierMode_OnCage", value: 8)
!152 = !DIEnumerator(name: "eModifierMode_Expanded", value: 16)
!153 = !DIEnumerator(name: "eModifierMode_Virtual", value: 32)
!154 = !DIEnumerator(name: "eModifierMode_ApplyOnSpline", value: 64)
!155 = !DIEnumerator(name: "eModifierMode_DisableTemporary", value: -2147483648)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !146, line: 35, baseType: !43, size: 32, elements: !157)
!157 = !{!158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207}
!158 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!159 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!160 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!161 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!162 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!163 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!164 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!165 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!166 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!167 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!168 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!169 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!170 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!171 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!172 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!173 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!174 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!175 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!176 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!177 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!178 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!179 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!180 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!181 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!182 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!183 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!184 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!185 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!186 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!187 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!188 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!189 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!190 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!191 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!192 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!193 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!194 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!195 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!196 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!197 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!198 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!199 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!200 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!201 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!202 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!203 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!204 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!205 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!206 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!207 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !61, line: 519, baseType: !43, size: 32, elements: !209)
!209 = !{!210, !211, !212, !213}
!210 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!211 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!212 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!213 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!214 = !{!215, !216, !217, !236, !7, !2926, !2927, !2948, !2965, !2981, !956, !933, !925}
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!216 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !6, line: 1299, baseType: !219)
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !6, line: 1216, size: 39680, elements: !220)
!220 = !{!221, !291, !295, !2101, !2182, !2183, !2184, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2349, !2560, !2563, !2802, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2824, !2825, !2826, !2827, !2828, !2836, !2902, !2909, !2910, !2917, !2918, !2919, !2920, !2921, !2922, !2923}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !219, file: !6, line: 1217, baseType: !222, size: 960)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !223, line: 130, baseType: !224)
!223 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !223, line: 117, size: 960, elements: !225)
!225 = !{!226, !227, !228, !230, !250, !254, !256, !257, !258, !259}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !224, file: !223, line: 118, baseType: !215, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !224, file: !223, line: 118, baseType: !215, size: 64, offset: 64)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !224, file: !223, line: 119, baseType: !229, size: 64, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !224, file: !223, line: 120, baseType: !231, size: 64, offset: 192)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !223, line: 136, size: 17600, elements: !233)
!233 = !{!234, !235, !237, !240, !245, !246, !247}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !232, file: !223, line: 137, baseType: !222, size: 960)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !232, file: !223, line: 138, baseType: !236, size: 64, offset: 960)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !232, file: !223, line: 139, baseType: !238, size: 64, offset: 1024)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !223, line: 43, flags: DIFlagFwdDecl)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !232, file: !223, line: 140, baseType: !241, size: 8192, offset: 1088)
!241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 8192, elements: !243)
!242 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!243 = !{!244}
!244 = !DISubrange(count: 1024)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !232, file: !223, line: 141, baseType: !241, size: 8192, offset: 9280)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !232, file: !223, line: 148, baseType: !231, size: 64, offset: 17472)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !232, file: !223, line: 150, baseType: !248, size: 64, offset: 17536)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !223, line: 45, flags: DIFlagFwdDecl)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !224, file: !223, line: 121, baseType: !251, size: 528, offset: 256)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 528, elements: !252)
!252 = !{!253}
!253 = !DISubrange(count: 66)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !224, file: !223, line: 126, baseType: !255, size: 16, offset: 784)
!255 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !224, file: !223, line: 127, baseType: !7, size: 32, offset: 800)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !224, file: !223, line: 128, baseType: !7, size: 32, offset: 832)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !224, file: !223, line: 128, baseType: !7, size: 32, offset: 864)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !224, file: !223, line: 129, baseType: !260, size: 64, offset: 896)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !223, line: 75, baseType: !262)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !223, line: 62, size: 1024, elements: !263)
!263 = !{!264, !266, !267, !268, !269, !270, !274, !275, !289, !290}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !262, file: !223, line: 63, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !262, file: !223, line: 63, baseType: !265, size: 64, offset: 64)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !262, file: !223, line: 64, baseType: !242, size: 8, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !262, file: !223, line: 64, baseType: !242, size: 8, offset: 136)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !262, file: !223, line: 65, baseType: !255, size: 16, offset: 144)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !262, file: !223, line: 66, baseType: !271, size: 512, offset: 160)
!271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 512, elements: !272)
!272 = !{!273}
!273 = !DISubrange(count: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !262, file: !223, line: 67, baseType: !7, size: 32, offset: 672)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !262, file: !223, line: 69, baseType: !276, size: 256, offset: 704)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !223, line: 60, baseType: !277)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !223, line: 48, size: 256, elements: !278)
!278 = !{!279, !280, !287, !288}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !277, file: !223, line: 49, baseType: !215, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !277, file: !223, line: 58, baseType: !281, size: 128, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !282, line: 71, baseType: !283)
!282 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !282, line: 69, size: 128, elements: !284)
!284 = !{!285, !286}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !283, file: !282, line: 70, baseType: !215, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !283, file: !282, line: 70, baseType: !215, size: 64, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !277, file: !223, line: 59, baseType: !7, size: 32, offset: 192)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !277, file: !223, line: 59, baseType: !7, size: 32, offset: 224)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !262, file: !223, line: 70, baseType: !7, size: 32, offset: 960)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !262, file: !223, line: 74, baseType: !7, size: 32, offset: 992)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !219, file: !6, line: 1218, baseType: !292, size: 64, offset: 960)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !294, line: 45, flags: DIFlagFwdDecl)
!294 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!295 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !219, file: !6, line: 1220, baseType: !296, size: 64, offset: 1024)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !61, line: 115, size: 11392, elements: !298)
!298 = !{!299, !300, !301, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !318, !329, !343, !344, !387, !388, !391, !392, !408, !409, !410, !411, !412, !413, !414, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1719, !2053, !2054, !2055, !2056, !2057, !2058, !2061, !2064, !2067, !2068, !2072, !2073, !2074, !2075, !2076, !2077, !2079, !2082, !2085, !2086, !2089, !2090}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !297, file: !61, line: 116, baseType: !222, size: 960)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !297, file: !61, line: 117, baseType: !292, size: 64, offset: 960)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !297, file: !61, line: 119, baseType: !302, size: 64, offset: 1024)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !61, line: 57, flags: DIFlagFwdDecl)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !297, file: !61, line: 121, baseType: !255, size: 16, offset: 1088)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !297, file: !61, line: 121, baseType: !255, size: 16, offset: 1104)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !297, file: !61, line: 122, baseType: !7, size: 32, offset: 1120)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !297, file: !61, line: 122, baseType: !7, size: 32, offset: 1152)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !297, file: !61, line: 122, baseType: !7, size: 32, offset: 1184)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !297, file: !61, line: 123, baseType: !271, size: 512, offset: 1216)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !297, file: !61, line: 124, baseType: !296, size: 64, offset: 1728)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !297, file: !61, line: 124, baseType: !296, size: 64, offset: 1792)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !297, file: !61, line: 127, baseType: !296, size: 64, offset: 1856)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !297, file: !61, line: 127, baseType: !296, size: 64, offset: 1920)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !297, file: !61, line: 127, baseType: !296, size: 64, offset: 1984)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !297, file: !61, line: 128, baseType: !316, size: 64, offset: 2048)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !294, line: 46, flags: DIFlagFwdDecl)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !297, file: !61, line: 130, baseType: !319, size: 64, offset: 2112)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !61, line: 97, size: 832, elements: !321)
!321 = !{!322, !327, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !320, file: !61, line: 98, baseType: !323, size: 768)
!323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 768, elements: !324)
!324 = !{!325, !326}
!325 = !DISubrange(count: 8)
!326 = !DISubrange(count: 3)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !320, file: !61, line: 99, baseType: !7, size: 32, offset: 768)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !320, file: !61, line: 99, baseType: !7, size: 32, offset: 800)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !297, file: !61, line: 131, baseType: !330, size: 64, offset: 2176)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !332, line: 486, size: 1600, elements: !333)
!332 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!333 = !{!334, !335, !336, !337, !338, !339, !340, !341, !342}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !331, file: !332, line: 487, baseType: !222, size: 960)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !331, file: !332, line: 489, baseType: !281, size: 128, offset: 960)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !331, file: !332, line: 490, baseType: !281, size: 128, offset: 1088)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !331, file: !332, line: 491, baseType: !281, size: 128, offset: 1216)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !331, file: !332, line: 492, baseType: !281, size: 128, offset: 1344)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !331, file: !332, line: 494, baseType: !7, size: 32, offset: 1472)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !331, file: !332, line: 495, baseType: !7, size: 32, offset: 1504)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !331, file: !332, line: 497, baseType: !7, size: 32, offset: 1536)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !331, file: !332, line: 498, baseType: !7, size: 32, offset: 1568)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !297, file: !61, line: 132, baseType: !330, size: 64, offset: 2240)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !297, file: !61, line: 133, baseType: !345, size: 64, offset: 2304)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !332, line: 334, size: 1728, elements: !347)
!347 = !{!348, !349, !352, !353, !354, !355, !356, !357, !360, !361, !362, !363, !364, !365, !366, !386}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !346, file: !332, line: 335, baseType: !281, size: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !346, file: !332, line: 336, baseType: !350, size: 64, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !332, line: 47, flags: DIFlagFwdDecl)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !346, file: !332, line: 338, baseType: !255, size: 16, offset: 192)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !346, file: !332, line: 338, baseType: !255, size: 16, offset: 208)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !346, file: !332, line: 339, baseType: !43, size: 32, offset: 224)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !346, file: !332, line: 340, baseType: !7, size: 32, offset: 256)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !346, file: !332, line: 342, baseType: !216, size: 32, offset: 288)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !346, file: !332, line: 343, baseType: !358, size: 96, offset: 320)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 96, elements: !359)
!359 = !{!326}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !346, file: !332, line: 344, baseType: !358, size: 96, offset: 416)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !346, file: !332, line: 347, baseType: !281, size: 128, offset: 512)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !346, file: !332, line: 349, baseType: !7, size: 32, offset: 640)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !346, file: !332, line: 350, baseType: !7, size: 32, offset: 672)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !346, file: !332, line: 351, baseType: !215, size: 64, offset: 704)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !346, file: !332, line: 352, baseType: !215, size: 64, offset: 768)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !346, file: !332, line: 354, baseType: !367, size: 384, offset: 832)
!367 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !332, line: 116, baseType: !368)
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !332, line: 94, size: 384, elements: !369)
!369 = !{!370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !368, file: !332, line: 96, baseType: !7, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !368, file: !332, line: 96, baseType: !7, size: 32, offset: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !368, file: !332, line: 97, baseType: !7, size: 32, offset: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !368, file: !332, line: 97, baseType: !7, size: 32, offset: 96)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !368, file: !332, line: 99, baseType: !255, size: 16, offset: 128)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !368, file: !332, line: 100, baseType: !255, size: 16, offset: 144)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !368, file: !332, line: 102, baseType: !255, size: 16, offset: 160)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !368, file: !332, line: 105, baseType: !255, size: 16, offset: 176)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !368, file: !332, line: 108, baseType: !255, size: 16, offset: 192)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !368, file: !332, line: 109, baseType: !255, size: 16, offset: 208)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !368, file: !332, line: 111, baseType: !255, size: 16, offset: 224)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !368, file: !332, line: 112, baseType: !255, size: 16, offset: 240)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !368, file: !332, line: 114, baseType: !7, size: 32, offset: 256)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !368, file: !332, line: 114, baseType: !7, size: 32, offset: 288)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !368, file: !332, line: 115, baseType: !7, size: 32, offset: 320)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !368, file: !332, line: 115, baseType: !7, size: 32, offset: 352)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !346, file: !332, line: 355, baseType: !271, size: 512, offset: 1216)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !297, file: !61, line: 134, baseType: !215, size: 64, offset: 2368)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !297, file: !61, line: 136, baseType: !389, size: 64, offset: 2432)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !6, line: 61, flags: DIFlagFwdDecl)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !297, file: !61, line: 138, baseType: !367, size: 384, offset: 2496)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !297, file: !61, line: 139, baseType: !393, size: 64, offset: 2880)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !332, line: 80, baseType: !395)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !332, line: 72, size: 192, elements: !396)
!396 = !{!397, !404, !405, !406, !407}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !395, file: !332, line: 73, baseType: !398, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !332, line: 59, baseType: !400)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !332, line: 56, size: 128, elements: !401)
!401 = !{!402, !403}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !400, file: !332, line: 57, baseType: !358, size: 96)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !400, file: !332, line: 58, baseType: !7, size: 32, offset: 96)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !395, file: !332, line: 74, baseType: !7, size: 32, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !395, file: !332, line: 76, baseType: !7, size: 32, offset: 96)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !395, file: !332, line: 77, baseType: !7, size: 32, offset: 128)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !395, file: !332, line: 79, baseType: !7, size: 32, offset: 160)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !297, file: !61, line: 141, baseType: !281, size: 128, offset: 2944)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !297, file: !61, line: 142, baseType: !281, size: 128, offset: 3072)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !297, file: !61, line: 143, baseType: !281, size: 128, offset: 3200)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !297, file: !61, line: 144, baseType: !281, size: 128, offset: 3328)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !297, file: !61, line: 146, baseType: !7, size: 32, offset: 3456)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !297, file: !61, line: 147, baseType: !7, size: 32, offset: 3488)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !297, file: !61, line: 150, baseType: !415, size: 64, offset: 3520)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !418, line: 93, size: 7552, elements: !419)
!418 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!419 = !{!420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !468, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !537, !538, !539, !540, !541, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1555}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !417, file: !418, line: 94, baseType: !222, size: 960)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !417, file: !418, line: 95, baseType: !292, size: 64, offset: 960)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !417, file: !418, line: 97, baseType: !255, size: 16, offset: 1024)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !417, file: !418, line: 97, baseType: !255, size: 16, offset: 1040)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !417, file: !418, line: 99, baseType: !216, size: 32, offset: 1056)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !417, file: !418, line: 99, baseType: !216, size: 32, offset: 1088)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !417, file: !418, line: 99, baseType: !216, size: 32, offset: 1120)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !417, file: !418, line: 100, baseType: !216, size: 32, offset: 1152)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !417, file: !418, line: 100, baseType: !216, size: 32, offset: 1184)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !417, file: !418, line: 100, baseType: !216, size: 32, offset: 1216)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !417, file: !418, line: 101, baseType: !216, size: 32, offset: 1248)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !417, file: !418, line: 101, baseType: !216, size: 32, offset: 1280)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !417, file: !418, line: 101, baseType: !216, size: 32, offset: 1312)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !417, file: !418, line: 102, baseType: !216, size: 32, offset: 1344)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !417, file: !418, line: 102, baseType: !216, size: 32, offset: 1376)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !417, file: !418, line: 102, baseType: !216, size: 32, offset: 1408)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !417, file: !418, line: 103, baseType: !216, size: 32, offset: 1440)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !417, file: !418, line: 103, baseType: !216, size: 32, offset: 1472)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !417, file: !418, line: 103, baseType: !216, size: 32, offset: 1504)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !417, file: !418, line: 103, baseType: !216, size: 32, offset: 1536)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !417, file: !418, line: 103, baseType: !216, size: 32, offset: 1568)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !417, file: !418, line: 104, baseType: !216, size: 32, offset: 1600)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !417, file: !418, line: 104, baseType: !216, size: 32, offset: 1632)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !417, file: !418, line: 104, baseType: !216, size: 32, offset: 1664)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !417, file: !418, line: 104, baseType: !216, size: 32, offset: 1696)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !417, file: !418, line: 104, baseType: !216, size: 32, offset: 1728)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !417, file: !418, line: 105, baseType: !216, size: 32, offset: 1760)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !417, file: !418, line: 108, baseType: !448, size: 704, offset: 1792)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !418, line: 53, size: 704, elements: !449)
!449 = !{!450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !448, file: !418, line: 54, baseType: !216, size: 32)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !448, file: !418, line: 55, baseType: !216, size: 32, offset: 32)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !448, file: !418, line: 56, baseType: !216, size: 32, offset: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !448, file: !418, line: 57, baseType: !216, size: 32, offset: 96)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !448, file: !418, line: 59, baseType: !358, size: 96, offset: 128)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !448, file: !418, line: 60, baseType: !358, size: 96, offset: 224)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !448, file: !418, line: 61, baseType: !358, size: 96, offset: 320)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !448, file: !418, line: 63, baseType: !216, size: 32, offset: 416)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !448, file: !418, line: 64, baseType: !216, size: 32, offset: 448)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !448, file: !418, line: 65, baseType: !216, size: 32, offset: 480)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !448, file: !418, line: 67, baseType: !255, size: 16, offset: 512)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !448, file: !418, line: 68, baseType: !255, size: 16, offset: 528)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !448, file: !418, line: 69, baseType: !255, size: 16, offset: 544)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !448, file: !418, line: 70, baseType: !255, size: 16, offset: 560)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !448, file: !418, line: 72, baseType: !216, size: 32, offset: 576)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !448, file: !418, line: 73, baseType: !216, size: 32, offset: 608)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !448, file: !418, line: 74, baseType: !216, size: 32, offset: 640)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !448, file: !418, line: 75, baseType: !216, size: 32, offset: 672)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !417, file: !418, line: 109, baseType: !469, size: 128, offset: 2496)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !418, line: 79, size: 128, elements: !470)
!470 = !{!471, !472, !473, !474}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !469, file: !418, line: 80, baseType: !7, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !469, file: !418, line: 81, baseType: !7, size: 32, offset: 32)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !469, file: !418, line: 82, baseType: !7, size: 32, offset: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !469, file: !418, line: 83, baseType: !7, size: 32, offset: 96)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !417, file: !418, line: 111, baseType: !216, size: 32, offset: 2624)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !417, file: !418, line: 111, baseType: !216, size: 32, offset: 2656)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !417, file: !418, line: 112, baseType: !216, size: 32, offset: 2688)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !417, file: !418, line: 112, baseType: !216, size: 32, offset: 2720)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !417, file: !418, line: 113, baseType: !216, size: 32, offset: 2752)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !417, file: !418, line: 114, baseType: !216, size: 32, offset: 2784)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !417, file: !418, line: 114, baseType: !216, size: 32, offset: 2816)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !417, file: !418, line: 115, baseType: !255, size: 16, offset: 2848)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !417, file: !418, line: 115, baseType: !255, size: 16, offset: 2864)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !417, file: !418, line: 116, baseType: !255, size: 16, offset: 2880)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !417, file: !418, line: 117, baseType: !242, size: 8, offset: 2896)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !417, file: !418, line: 117, baseType: !242, size: 8, offset: 2904)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !417, file: !418, line: 119, baseType: !216, size: 32, offset: 2912)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !417, file: !418, line: 119, baseType: !216, size: 32, offset: 2944)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !417, file: !418, line: 120, baseType: !255, size: 16, offset: 2976)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !417, file: !418, line: 120, baseType: !255, size: 16, offset: 2992)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !417, file: !418, line: 121, baseType: !216, size: 32, offset: 3008)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !417, file: !418, line: 121, baseType: !216, size: 32, offset: 3040)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !417, file: !418, line: 122, baseType: !216, size: 32, offset: 3072)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !417, file: !418, line: 123, baseType: !216, size: 32, offset: 3104)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !417, file: !418, line: 124, baseType: !255, size: 16, offset: 3136)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !417, file: !418, line: 125, baseType: !255, size: 16, offset: 3152)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !417, file: !418, line: 127, baseType: !7, size: 32, offset: 3168)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !417, file: !418, line: 127, baseType: !7, size: 32, offset: 3200)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !417, file: !418, line: 128, baseType: !7, size: 32, offset: 3232)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !417, file: !418, line: 128, baseType: !7, size: 32, offset: 3264)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !417, file: !418, line: 129, baseType: !255, size: 16, offset: 3296)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !417, file: !418, line: 129, baseType: !255, size: 16, offset: 3312)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !417, file: !418, line: 129, baseType: !255, size: 16, offset: 3328)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !417, file: !418, line: 129, baseType: !255, size: 16, offset: 3344)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !417, file: !418, line: 130, baseType: !216, size: 32, offset: 3360)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !417, file: !418, line: 130, baseType: !216, size: 32, offset: 3392)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !417, file: !418, line: 130, baseType: !216, size: 32, offset: 3424)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !417, file: !418, line: 130, baseType: !216, size: 32, offset: 3456)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !417, file: !418, line: 131, baseType: !216, size: 32, offset: 3488)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !417, file: !418, line: 131, baseType: !216, size: 32, offset: 3520)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !417, file: !418, line: 131, baseType: !216, size: 32, offset: 3552)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !417, file: !418, line: 131, baseType: !216, size: 32, offset: 3584)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !417, file: !418, line: 132, baseType: !216, size: 32, offset: 3616)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !417, file: !418, line: 132, baseType: !216, size: 32, offset: 3648)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !417, file: !418, line: 133, baseType: !271, size: 512, offset: 3680)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !417, file: !418, line: 135, baseType: !216, size: 32, offset: 4192)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !417, file: !418, line: 136, baseType: !216, size: 32, offset: 4224)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !417, file: !418, line: 137, baseType: !216, size: 32, offset: 4256)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !417, file: !418, line: 138, baseType: !7, size: 32, offset: 4288)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !417, file: !418, line: 141, baseType: !242, size: 8, offset: 4320)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !417, file: !418, line: 141, baseType: !242, size: 8, offset: 4328)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !417, file: !418, line: 141, baseType: !242, size: 8, offset: 4336)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !417, file: !418, line: 141, baseType: !242, size: 8, offset: 4344)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !417, file: !418, line: 142, baseType: !255, size: 16, offset: 4352)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !417, file: !418, line: 142, baseType: !255, size: 16, offset: 4368)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !417, file: !418, line: 142, baseType: !255, size: 16, offset: 4384)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !417, file: !418, line: 145, baseType: !242, size: 8, offset: 4400)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !417, file: !418, line: 145, baseType: !242, size: 8, offset: 4408)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !417, file: !418, line: 148, baseType: !255, size: 16, offset: 4416)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !417, file: !418, line: 148, baseType: !255, size: 16, offset: 4432)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !417, file: !418, line: 149, baseType: !216, size: 32, offset: 4448)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !417, file: !418, line: 149, baseType: !216, size: 32, offset: 4480)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !417, file: !418, line: 152, baseType: !534, size: 128, offset: 4512)
!534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 128, elements: !535)
!535 = !{!536}
!536 = !DISubrange(count: 4)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !417, file: !418, line: 153, baseType: !216, size: 32, offset: 4640)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !417, file: !418, line: 154, baseType: !216, size: 32, offset: 4672)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !417, file: !418, line: 157, baseType: !255, size: 16, offset: 4704)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !417, file: !418, line: 157, baseType: !255, size: 16, offset: 4720)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !417, file: !418, line: 160, baseType: !542, size: 64, offset: 4736)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !294, line: 113, size: 6208, elements: !544)
!544 = !{!545, !546, !547, !548, !549, !550, !554}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !543, file: !294, line: 114, baseType: !255, size: 16)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !543, file: !294, line: 114, baseType: !255, size: 16, offset: 16)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !543, file: !294, line: 115, baseType: !242, size: 8, offset: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !543, file: !294, line: 115, baseType: !242, size: 8, offset: 40)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !543, file: !294, line: 116, baseType: !242, size: 8, offset: 48)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !543, file: !294, line: 117, baseType: !551, size: 8, offset: 56)
!551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 8, elements: !552)
!552 = !{!553}
!553 = !DISubrange(count: 1)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !543, file: !294, line: 119, baseType: !555, size: 6144, offset: 64)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !556, size: 6144, elements: !565)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !294, line: 109, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !294, line: 106, size: 192, elements: !558)
!558 = !{!559, !560, !561, !562, !563, !564}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !557, file: !294, line: 107, baseType: !216, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !557, file: !294, line: 107, baseType: !216, size: 32, offset: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !557, file: !294, line: 107, baseType: !216, size: 32, offset: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !557, file: !294, line: 107, baseType: !216, size: 32, offset: 96)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !557, file: !294, line: 107, baseType: !216, size: 32, offset: 128)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !557, file: !294, line: 108, baseType: !7, size: 32, offset: 160)
!565 = !{!566}
!566 = !DISubrange(count: 32)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !417, file: !418, line: 161, baseType: !542, size: 64, offset: 4800)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !417, file: !418, line: 162, baseType: !242, size: 8, offset: 4864)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !417, file: !418, line: 162, baseType: !242, size: 8, offset: 4872)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !417, file: !418, line: 163, baseType: !242, size: 8, offset: 4880)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !417, file: !418, line: 163, baseType: !242, size: 8, offset: 4888)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !417, file: !418, line: 164, baseType: !255, size: 16, offset: 4896)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !417, file: !418, line: 164, baseType: !255, size: 16, offset: 4912)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !417, file: !418, line: 165, baseType: !216, size: 32, offset: 4928)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !417, file: !418, line: 165, baseType: !216, size: 32, offset: 4960)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !417, file: !418, line: 167, baseType: !577, size: 1152, offset: 4992)
!577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !578, size: 1152, elements: !1513)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !294, line: 57, size: 2496, elements: !580)
!580 = !{!581, !582, !583, !584, !585, !586, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !579, file: !294, line: 59, baseType: !255, size: 16)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !579, file: !294, line: 59, baseType: !255, size: 16, offset: 16)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !579, file: !294, line: 59, baseType: !255, size: 16, offset: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !579, file: !294, line: 59, baseType: !255, size: 16, offset: 48)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !579, file: !294, line: 60, baseType: !296, size: 64, offset: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !579, file: !294, line: 61, baseType: !587, size: 64, offset: 128)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !294, line: 202, size: 3328, elements: !589)
!589 = !{!590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !660, !1192, !1193, !1325, !1326, !1354, !1355, !1423, !1444, !1452, !1453}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !588, file: !294, line: 203, baseType: !222, size: 960)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !588, file: !294, line: 204, baseType: !292, size: 64, offset: 960)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !588, file: !294, line: 206, baseType: !216, size: 32, offset: 1024)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !588, file: !294, line: 206, baseType: !216, size: 32, offset: 1056)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !588, file: !294, line: 207, baseType: !216, size: 32, offset: 1088)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !588, file: !294, line: 207, baseType: !216, size: 32, offset: 1120)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !588, file: !294, line: 207, baseType: !216, size: 32, offset: 1152)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !588, file: !294, line: 207, baseType: !216, size: 32, offset: 1184)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !588, file: !294, line: 207, baseType: !216, size: 32, offset: 1216)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !588, file: !294, line: 207, baseType: !216, size: 32, offset: 1248)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !588, file: !294, line: 208, baseType: !216, size: 32, offset: 1280)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !588, file: !294, line: 208, baseType: !216, size: 32, offset: 1312)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !588, file: !294, line: 211, baseType: !216, size: 32, offset: 1344)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !588, file: !294, line: 211, baseType: !216, size: 32, offset: 1376)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !588, file: !294, line: 211, baseType: !216, size: 32, offset: 1408)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !588, file: !294, line: 211, baseType: !216, size: 32, offset: 1440)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !588, file: !294, line: 211, baseType: !216, size: 32, offset: 1472)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !588, file: !294, line: 214, baseType: !216, size: 32, offset: 1504)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !588, file: !294, line: 214, baseType: !216, size: 32, offset: 1536)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !588, file: !294, line: 217, baseType: !216, size: 32, offset: 1568)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !588, file: !294, line: 218, baseType: !216, size: 32, offset: 1600)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !588, file: !294, line: 219, baseType: !216, size: 32, offset: 1632)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !588, file: !294, line: 220, baseType: !216, size: 32, offset: 1664)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !588, file: !294, line: 221, baseType: !216, size: 32, offset: 1696)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !588, file: !294, line: 222, baseType: !255, size: 16, offset: 1728)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !588, file: !294, line: 222, baseType: !255, size: 16, offset: 1744)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !588, file: !294, line: 224, baseType: !255, size: 16, offset: 1760)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !588, file: !294, line: 224, baseType: !255, size: 16, offset: 1776)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !588, file: !294, line: 227, baseType: !255, size: 16, offset: 1792)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !588, file: !294, line: 227, baseType: !255, size: 16, offset: 1808)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !588, file: !294, line: 229, baseType: !255, size: 16, offset: 1824)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !588, file: !294, line: 229, baseType: !255, size: 16, offset: 1840)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !588, file: !294, line: 230, baseType: !255, size: 16, offset: 1856)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !588, file: !294, line: 230, baseType: !255, size: 16, offset: 1872)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !588, file: !294, line: 232, baseType: !216, size: 32, offset: 1888)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !588, file: !294, line: 232, baseType: !216, size: 32, offset: 1920)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !588, file: !294, line: 232, baseType: !216, size: 32, offset: 1952)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !588, file: !294, line: 232, baseType: !216, size: 32, offset: 1984)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !588, file: !294, line: 233, baseType: !7, size: 32, offset: 2016)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !588, file: !294, line: 234, baseType: !7, size: 32, offset: 2048)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !588, file: !294, line: 235, baseType: !255, size: 16, offset: 2080)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !588, file: !294, line: 235, baseType: !255, size: 16, offset: 2096)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !588, file: !294, line: 236, baseType: !255, size: 16, offset: 2112)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !588, file: !294, line: 239, baseType: !255, size: 16, offset: 2128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !588, file: !294, line: 240, baseType: !7, size: 32, offset: 2144)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !588, file: !294, line: 241, baseType: !7, size: 32, offset: 2176)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !588, file: !294, line: 241, baseType: !7, size: 32, offset: 2208)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !588, file: !294, line: 241, baseType: !7, size: 32, offset: 2240)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !588, file: !294, line: 243, baseType: !216, size: 32, offset: 2272)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !588, file: !294, line: 243, baseType: !216, size: 32, offset: 2304)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !588, file: !294, line: 244, baseType: !216, size: 32, offset: 2336)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !588, file: !294, line: 246, baseType: !642, size: 320, offset: 2368)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !643, line: 50, size: 320, elements: !644)
!643 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!644 = !{!645, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !642, file: !643, line: 51, baseType: !646, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !642, file: !643, line: 53, baseType: !7, size: 32, offset: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !642, file: !643, line: 54, baseType: !7, size: 32, offset: 96)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !642, file: !643, line: 55, baseType: !7, size: 32, offset: 128)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !642, file: !643, line: 55, baseType: !7, size: 32, offset: 160)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !642, file: !643, line: 56, baseType: !242, size: 8, offset: 192)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !642, file: !643, line: 56, baseType: !242, size: 8, offset: 200)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !642, file: !643, line: 57, baseType: !242, size: 8, offset: 208)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !642, file: !643, line: 57, baseType: !242, size: 8, offset: 216)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !642, file: !643, line: 59, baseType: !255, size: 16, offset: 224)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !642, file: !643, line: 59, baseType: !255, size: 16, offset: 240)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !642, file: !643, line: 59, baseType: !255, size: 16, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !642, file: !643, line: 61, baseType: !255, size: 16, offset: 272)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !642, file: !643, line: 63, baseType: !7, size: 32, offset: 288)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !588, file: !294, line: 248, baseType: !661, size: 64, offset: 2688)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !663, line: 328, size: 3456, elements: !664)
!663 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!664 = !{!665, !666, !667, !1140, !1141, !1142, !1143, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1170, !1171, !1172, !1175, !1179, !1183, !1187, !1188, !1189, !1190, !1191}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !662, file: !663, line: 329, baseType: !222, size: 960)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !662, file: !663, line: 330, baseType: !292, size: 64, offset: 960)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !662, file: !663, line: 332, baseType: !668, size: 64, offset: 1024)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !670, line: 283, size: 4096, elements: !671)
!670 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!671 = !{!672, !673, !674, !675, !679, !680, !684, !1109, !1117, !1121, !1127, !1131, !1132, !1133, !1134, !1138, !1139}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !669, file: !670, line: 284, baseType: !7, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !669, file: !670, line: 285, baseType: !271, size: 512, offset: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !669, file: !670, line: 287, baseType: !271, size: 512, offset: 544)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !669, file: !670, line: 288, baseType: !676, size: 2048, offset: 1056)
!676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 2048, elements: !677)
!677 = !{!678}
!678 = !DISubrange(count: 256)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !669, file: !670, line: 289, baseType: !7, size: 32, offset: 3104)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !669, file: !670, line: 292, baseType: !681, size: 64, offset: 3136)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{null, !661}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !669, file: !670, line: 293, baseType: !685, size: 64, offset: 3200)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{null, !661, !688}
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !663, line: 167, size: 3712, elements: !690)
!690 = !{!691, !692, !693, !694, !695, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1101, !1102, !1103, !1104, !1105, !1106}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !689, file: !663, line: 168, baseType: !688, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !689, file: !663, line: 168, baseType: !688, size: 64, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !689, file: !663, line: 168, baseType: !688, size: 64, offset: 128)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !689, file: !663, line: 170, baseType: !260, size: 64, offset: 192)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !689, file: !663, line: 172, baseType: !696, size: 64, offset: 256)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !670, line: 144, size: 6016, elements: !698)
!698 = !{!699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !878, !879, !880, !894, !898, !902, !903, !984, !989, !993, !994, !995, !996, !1000, !1001, !1005, !1009, !1013, !1017, !1021, !1025, !1029, !1030, !1037, !1039, !1048, !1057}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !697, file: !670, line: 145, baseType: !215, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !697, file: !670, line: 145, baseType: !215, size: 64, offset: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !697, file: !670, line: 146, baseType: !255, size: 16, offset: 128)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !697, file: !670, line: 148, baseType: !271, size: 512, offset: 144)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !697, file: !670, line: 149, baseType: !7, size: 32, offset: 672)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !697, file: !670, line: 151, baseType: !271, size: 512, offset: 704)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !697, file: !670, line: 152, baseType: !676, size: 2048, offset: 1216)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !697, file: !670, line: 153, baseType: !7, size: 32, offset: 3264)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !697, file: !670, line: 155, baseType: !216, size: 32, offset: 3296)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !697, file: !670, line: 155, baseType: !216, size: 32, offset: 3328)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !697, file: !670, line: 155, baseType: !216, size: 32, offset: 3360)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !697, file: !670, line: 156, baseType: !216, size: 32, offset: 3392)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !697, file: !670, line: 156, baseType: !216, size: 32, offset: 3424)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !697, file: !670, line: 156, baseType: !216, size: 32, offset: 3456)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !697, file: !670, line: 157, baseType: !255, size: 16, offset: 3488)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !697, file: !670, line: 157, baseType: !255, size: 16, offset: 3504)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !697, file: !670, line: 157, baseType: !255, size: 16, offset: 3520)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !697, file: !670, line: 160, baseType: !717, size: 64, offset: 3584)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !670, line: 109, baseType: !719)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !670, line: 98, size: 1408, elements: !720)
!720 = !{!721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !877}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !719, file: !670, line: 99, baseType: !7, size: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !719, file: !670, line: 99, baseType: !7, size: 32, offset: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !719, file: !670, line: 100, baseType: !271, size: 512, offset: 64)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !719, file: !670, line: 101, baseType: !216, size: 32, offset: 576)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !719, file: !670, line: 101, baseType: !216, size: 32, offset: 608)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !719, file: !670, line: 101, baseType: !216, size: 32, offset: 640)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !719, file: !670, line: 101, baseType: !216, size: 32, offset: 672)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !719, file: !670, line: 102, baseType: !216, size: 32, offset: 704)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !719, file: !670, line: 102, baseType: !216, size: 32, offset: 736)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !719, file: !670, line: 103, baseType: !7, size: 32, offset: 768)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !719, file: !670, line: 104, baseType: !7, size: 32, offset: 800)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !719, file: !670, line: 107, baseType: !733, size: 64, offset: 832)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !663, line: 87, size: 2816, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !859}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !734, file: !663, line: 88, baseType: !733, size: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !734, file: !663, line: 88, baseType: !733, size: 64, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !734, file: !663, line: 88, baseType: !733, size: 64, offset: 128)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !734, file: !663, line: 90, baseType: !260, size: 64, offset: 192)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !734, file: !663, line: 92, baseType: !271, size: 512, offset: 256)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !663, line: 94, baseType: !271, size: 512, offset: 768)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !734, file: !663, line: 99, baseType: !215, size: 64, offset: 1280)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !734, file: !663, line: 101, baseType: !255, size: 16, offset: 1344)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !734, file: !663, line: 101, baseType: !255, size: 16, offset: 1360)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !734, file: !663, line: 102, baseType: !255, size: 16, offset: 1376)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !734, file: !663, line: 103, baseType: !255, size: 16, offset: 1392)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !734, file: !663, line: 104, baseType: !748, size: 64, offset: 1408)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !670, line: 114, size: 1600, elements: !750)
!750 = !{!751, !752, !774, !779, !783, !787, !791, !795, !796, !800, !829, !830, !831}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !749, file: !670, line: 115, baseType: !271, size: 512)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !749, file: !670, line: 117, baseType: !753, size: 64, offset: 512)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DISubroutineType(types: !755)
!755 = !{null, !756, !758, !760, !760, !772}
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !106, line: 28, flags: DIFlagFwdDecl)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !670, line: 73, flags: DIFlagFwdDecl)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !762, line: 55, size: 192, elements: !763)
!762 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!763 = !{!764, !768, !771}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !761, file: !762, line: 58, baseType: !765, size: 64)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !761, file: !762, line: 56, size: 64, elements: !766)
!766 = !{!767}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !765, file: !762, line: 57, baseType: !215, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !761, file: !762, line: 60, baseType: !769, size: 64, offset: 64)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !663, line: 335, flags: DIFlagFwdDecl)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !761, file: !762, line: 61, baseType: !215, size: 64, offset: 128)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !242)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !749, file: !670, line: 118, baseType: !775, size: 64, offset: 576)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DISubroutineType(types: !777)
!777 = !{null, !756, !760, !760, !778}
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !749, file: !670, line: 120, baseType: !780, size: 64, offset: 640)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{null, !756, !758, !760}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !749, file: !670, line: 121, baseType: !784, size: 64, offset: 704)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DISubroutineType(types: !786)
!786 = !{null, !756, !760, !778}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !749, file: !670, line: 122, baseType: !788, size: 64, offset: 768)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{null, !661, !733, !769}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !749, file: !670, line: 123, baseType: !792, size: 64, offset: 832)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DISubroutineType(types: !794)
!794 = !{null, !661, !733, !688, !733, !772}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !749, file: !670, line: 124, baseType: !792, size: 64, offset: 896)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !749, file: !670, line: 125, baseType: !797, size: 64, offset: 960)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DISubroutineType(types: !799)
!799 = !{null, !661, !733, !688, !733}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !749, file: !670, line: 128, baseType: !801, size: 256, offset: 1024)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !762, line: 436, baseType: !802)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !762, line: 430, size: 256, elements: !803)
!803 = !{!804, !805, !808, !824}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !802, file: !762, line: 431, baseType: !215, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !802, file: !762, line: 432, baseType: !806, size: 64, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !762, line: 417, baseType: !770)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !802, file: !762, line: 433, baseType: !809, size: 64, offset: 128)
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !762, line: 408, baseType: !810)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{!7, !756, !760, !813, !815}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !762, line: 38, flags: DIFlagFwdDecl)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !762, line: 348, baseType: !817)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !762, line: 337, size: 256, elements: !818)
!818 = !{!819, !820, !821, !822, !823}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !817, file: !762, line: 339, baseType: !215, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !817, file: !762, line: 342, baseType: !813, size: 64, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !817, file: !762, line: 345, baseType: !7, size: 32, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !817, file: !762, line: 347, baseType: !7, size: 32, offset: 160)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !817, file: !762, line: 347, baseType: !7, size: 32, offset: 192)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !802, file: !762, line: 434, baseType: !825, size: 64, offset: 192)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !762, line: 409, baseType: !826)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DISubroutineType(types: !828)
!828 = !{null, !215}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !749, file: !670, line: 129, baseType: !801, size: 256, offset: 1280)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !749, file: !670, line: 132, baseType: !7, size: 32, offset: 1536)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !749, file: !670, line: 132, baseType: !7, size: 32, offset: 1568)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !734, file: !663, line: 105, baseType: !271, size: 512, offset: 1472)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !734, file: !663, line: 107, baseType: !216, size: 32, offset: 1984)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !734, file: !663, line: 107, baseType: !216, size: 32, offset: 2016)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !734, file: !663, line: 109, baseType: !215, size: 64, offset: 2048)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !734, file: !663, line: 112, baseType: !255, size: 16, offset: 2112)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !734, file: !663, line: 114, baseType: !255, size: 16, offset: 2128)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !734, file: !663, line: 115, baseType: !7, size: 32, offset: 2144)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !734, file: !663, line: 117, baseType: !215, size: 64, offset: 2176)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !734, file: !663, line: 122, baseType: !7, size: 32, offset: 2240)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !734, file: !663, line: 124, baseType: !7, size: 32, offset: 2272)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !734, file: !663, line: 126, baseType: !733, size: 64, offset: 2304)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !734, file: !663, line: 128, baseType: !844, size: 64, offset: 2368)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !663, line: 298, size: 448, elements: !846)
!846 = !{!847, !848, !849, !852, !853, !856, !857, !858}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !845, file: !663, line: 299, baseType: !844, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !845, file: !663, line: 299, baseType: !844, size: 64, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !845, file: !663, line: 301, baseType: !850, size: 64, offset: 128)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !663, line: 218, baseType: !689)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !845, file: !663, line: 301, baseType: !850, size: 64, offset: 192)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !845, file: !663, line: 302, baseType: !854, size: 64, offset: 256)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !663, line: 132, baseType: !734)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !845, file: !663, line: 302, baseType: !854, size: 64, offset: 320)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !845, file: !663, line: 304, baseType: !7, size: 32, offset: 384)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !845, file: !663, line: 305, baseType: !7, size: 32, offset: 416)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !734, file: !663, line: 131, baseType: !860, size: 384, offset: 2432)
!860 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !663, line: 73, baseType: !861)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !663, line: 62, size: 384, elements: !862)
!862 = !{!863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !861, file: !663, line: 63, baseType: !534, size: 128)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !861, file: !663, line: 64, baseType: !216, size: 32, offset: 128)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !861, file: !663, line: 64, baseType: !216, size: 32, offset: 160)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !861, file: !663, line: 65, baseType: !215, size: 64, offset: 192)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !861, file: !663, line: 66, baseType: !255, size: 16, offset: 256)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !861, file: !663, line: 67, baseType: !255, size: 16, offset: 272)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !861, file: !663, line: 68, baseType: !255, size: 16, offset: 288)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !861, file: !663, line: 69, baseType: !255, size: 16, offset: 304)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !861, file: !663, line: 70, baseType: !255, size: 16, offset: 320)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !861, file: !663, line: 71, baseType: !255, size: 16, offset: 336)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !861, file: !663, line: 72, baseType: !874, size: 32, offset: 352)
!874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 32, elements: !875)
!875 = !{!876}
!876 = !DISubrange(count: 2)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !719, file: !670, line: 108, baseType: !271, size: 512, offset: 896)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !697, file: !670, line: 160, baseType: !717, size: 64, offset: 3648)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !697, file: !670, line: 162, baseType: !271, size: 512, offset: 3712)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !697, file: !670, line: 165, baseType: !881, size: 64, offset: 4224)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DISubroutineType(types: !883)
!883 = !{null, !884, !886, !888, !661, !688, !890}
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !757)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !670, line: 81, flags: DIFlagFwdDecl)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !663, line: 43, flags: DIFlagFwdDecl)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !663, line: 274, baseType: !891)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !663, line: 271, size: 32, elements: !892)
!892 = !{!893}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !891, file: !663, line: 273, baseType: !43, size: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !697, file: !670, line: 168, baseType: !895, size: 64, offset: 4288)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{null, !884, !661, !688}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !697, file: !670, line: 171, baseType: !899, size: 64, offset: 4352)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DISubroutineType(types: !901)
!901 = !{null, !758, !756, !760}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !697, file: !670, line: 173, baseType: !899, size: 64, offset: 4416)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !697, file: !670, line: 176, baseType: !904, size: 64, offset: 4480)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{null, !888, !907, !688, !7, !7}
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !909, line: 70, size: 19840, elements: !910)
!909 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!910 = !{!911, !912, !913, !914, !915, !917, !918, !919, !920, !922, !923, !926, !927, !928, !929, !930, !932, !934, !935, !936, !940, !941, !942, !943, !944, !947, !948, !949, !950, !951, !954, !955, !957, !958, !959, !962, !963, !964, !967, !968, !977}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !908, file: !909, line: 71, baseType: !907, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !908, file: !909, line: 71, baseType: !907, size: 64, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !908, file: !909, line: 74, baseType: !7, size: 32, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !908, file: !909, line: 74, baseType: !7, size: 32, offset: 160)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !908, file: !909, line: 79, baseType: !916, size: 8, offset: 192)
!916 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !908, file: !909, line: 80, baseType: !7, size: 32, offset: 224)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !908, file: !909, line: 83, baseType: !7, size: 32, offset: 256)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !908, file: !909, line: 84, baseType: !7, size: 32, offset: 288)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !908, file: !909, line: 87, baseType: !921, size: 64, offset: 320)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !908, file: !909, line: 88, baseType: !778, size: 64, offset: 384)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !908, file: !909, line: 93, baseType: !924, size: 128, offset: 448)
!924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !925, size: 128, elements: !875)
!925 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !908, file: !909, line: 96, baseType: !7, size: 32, offset: 576)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !908, file: !909, line: 96, baseType: !7, size: 32, offset: 608)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !908, file: !909, line: 97, baseType: !7, size: 32, offset: 640)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !908, file: !909, line: 97, baseType: !7, size: 32, offset: 672)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !908, file: !909, line: 98, baseType: !931, size: 64, offset: 704)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !908, file: !909, line: 101, baseType: !933, size: 64, offset: 768)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !908, file: !909, line: 102, baseType: !778, size: 64, offset: 832)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !908, file: !909, line: 105, baseType: !216, size: 32, offset: 896)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !908, file: !909, line: 108, baseType: !937, size: 1280, offset: 960)
!937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 1280, elements: !938)
!938 = !{!939}
!939 = !DISubrange(count: 20)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !908, file: !909, line: 109, baseType: !7, size: 32, offset: 2240)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !908, file: !909, line: 109, baseType: !7, size: 32, offset: 2272)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !908, file: !909, line: 112, baseType: !7, size: 32, offset: 2304)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !908, file: !909, line: 113, baseType: !7, size: 32, offset: 2336)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !908, file: !909, line: 114, baseType: !945, size: 64, offset: 2368)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !909, line: 50, flags: DIFlagFwdDecl)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !908, file: !909, line: 115, baseType: !215, size: 64, offset: 2432)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !908, file: !909, line: 118, baseType: !7, size: 32, offset: 2496)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !908, file: !909, line: 119, baseType: !241, size: 8192, offset: 2528)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !908, file: !909, line: 120, baseType: !241, size: 8192, offset: 10720)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !908, file: !909, line: 123, baseType: !952, size: 64, offset: 18944)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !909, line: 123, flags: DIFlagFwdDecl)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !908, file: !909, line: 124, baseType: !7, size: 32, offset: 19008)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !908, file: !909, line: 127, baseType: !956, size: 64, offset: 19072)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !908, file: !909, line: 128, baseType: !43, size: 32, offset: 19136)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !908, file: !909, line: 129, baseType: !43, size: 32, offset: 19168)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !908, file: !909, line: 132, baseType: !960, size: 64, offset: 19200)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !6, line: 63, flags: DIFlagFwdDecl)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !908, file: !909, line: 133, baseType: !960, size: 64, offset: 19264)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !908, file: !909, line: 134, baseType: !921, size: 64, offset: 19328)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !908, file: !909, line: 135, baseType: !965, size: 64, offset: 19392)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !909, line: 135, flags: DIFlagFwdDecl)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !908, file: !909, line: 136, baseType: !7, size: 32, offset: 19456)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !908, file: !909, line: 137, baseType: !969, size: 128, offset: 19488)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !970, line: 89, baseType: !971)
!970 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !970, line: 86, size: 128, elements: !972)
!972 = !{!973, !974, !975, !976}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !971, file: !970, line: 87, baseType: !7, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !971, file: !970, line: 87, baseType: !7, size: 32, offset: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !971, file: !970, line: 88, baseType: !7, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !971, file: !970, line: 88, baseType: !7, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !908, file: !909, line: 140, baseType: !978, size: 192, offset: 19648)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !909, line: 55, size: 192, elements: !979)
!979 = !{!980, !981, !982, !983}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !978, file: !909, line: 56, baseType: !43, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !978, file: !909, line: 57, baseType: !43, size: 32, offset: 32)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !978, file: !909, line: 58, baseType: !956, size: 64, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !978, file: !909, line: 59, baseType: !43, size: 32, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !697, file: !670, line: 179, baseType: !985, size: 64, offset: 4544)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{null, !661, !688, !988, !7}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !697, file: !670, line: 181, baseType: !990, size: 64, offset: 4608)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DISubroutineType(types: !992)
!992 = !{!7, !688, !7, !7}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !697, file: !670, line: 183, baseType: !990, size: 64, offset: 4672)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !697, file: !670, line: 185, baseType: !990, size: 64, offset: 4736)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !697, file: !670, line: 188, baseType: !685, size: 64, offset: 4800)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !697, file: !670, line: 190, baseType: !997, size: 64, offset: 4864)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DISubroutineType(types: !999)
!999 = !{null, !661, !688, !229}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !697, file: !670, line: 193, baseType: !685, size: 64, offset: 4928)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !697, file: !670, line: 195, baseType: !1002, size: 64, offset: 4992)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{null, !688}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !697, file: !670, line: 197, baseType: !1006, size: 64, offset: 5056)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{null, !661, !688, !688}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !697, file: !670, line: 200, baseType: !1010, size: 64, offset: 5120)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{null, !884, !760}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !697, file: !670, line: 201, baseType: !1014, size: 64, offset: 5184)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{null, !760}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !697, file: !670, line: 202, baseType: !1018, size: 64, offset: 5248)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{null, !760, !688}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !697, file: !670, line: 205, baseType: !1022, size: 64, offset: 5312)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!7, !696, !661}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !697, file: !670, line: 207, baseType: !1026, size: 64, offset: 5376)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!7, !688, !661}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !697, file: !670, line: 210, baseType: !685, size: 64, offset: 5440)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !697, file: !670, line: 213, baseType: !1031, size: 64, offset: 5504)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !670, line: 135, baseType: !1032)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!215, !1035, !688, !890}
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !670, line: 62, flags: DIFlagFwdDecl)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !697, file: !670, line: 214, baseType: !1038, size: 64, offset: 5568)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !670, line: 136, baseType: !826)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !697, file: !670, line: 215, baseType: !1040, size: 64, offset: 5632)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !670, line: 137, baseType: !1041)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{null, !215, !7, !688, !1044, !1046, !1046}
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !670, line: 63, flags: DIFlagFwdDecl)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !697, file: !670, line: 217, baseType: !1049, size: 64, offset: 5696)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !670, line: 138, baseType: !1050)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!7, !1053, !688, !1044, !1055, !1055}
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !670, line: 64, flags: DIFlagFwdDecl)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !670, line: 66, flags: DIFlagFwdDecl)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !697, file: !670, line: 220, baseType: !801, size: 256, offset: 5760)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !689, file: !663, line: 173, baseType: !271, size: 512, offset: 320)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !689, file: !663, line: 175, baseType: !271, size: 512, offset: 832)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !689, file: !663, line: 176, baseType: !7, size: 32, offset: 1344)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !689, file: !663, line: 177, baseType: !255, size: 16, offset: 1376)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !689, file: !663, line: 177, baseType: !255, size: 16, offset: 1392)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !689, file: !663, line: 178, baseType: !255, size: 16, offset: 1408)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !689, file: !663, line: 178, baseType: !255, size: 16, offset: 1424)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !689, file: !663, line: 179, baseType: !255, size: 16, offset: 1440)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !689, file: !663, line: 179, baseType: !255, size: 16, offset: 1456)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !689, file: !663, line: 180, baseType: !255, size: 16, offset: 1472)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !689, file: !663, line: 181, baseType: !255, size: 16, offset: 1488)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !689, file: !663, line: 182, baseType: !358, size: 96, offset: 1504)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !689, file: !663, line: 184, baseType: !281, size: 128, offset: 1600)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !689, file: !663, line: 184, baseType: !281, size: 128, offset: 1728)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !689, file: !663, line: 185, baseType: !688, size: 64, offset: 1856)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !689, file: !663, line: 186, baseType: !229, size: 64, offset: 1920)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !689, file: !663, line: 187, baseType: !215, size: 64, offset: 1984)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !689, file: !663, line: 188, baseType: !688, size: 64, offset: 2048)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !689, file: !663, line: 189, baseType: !281, size: 128, offset: 2112)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !689, file: !663, line: 191, baseType: !216, size: 32, offset: 2240)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !689, file: !663, line: 191, baseType: !216, size: 32, offset: 2272)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !689, file: !663, line: 192, baseType: !216, size: 32, offset: 2304)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !689, file: !663, line: 192, baseType: !216, size: 32, offset: 2336)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !689, file: !663, line: 193, baseType: !216, size: 32, offset: 2368)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !689, file: !663, line: 194, baseType: !216, size: 32, offset: 2400)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !689, file: !663, line: 194, baseType: !216, size: 32, offset: 2432)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !689, file: !663, line: 196, baseType: !7, size: 32, offset: 2464)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !689, file: !663, line: 198, baseType: !271, size: 512, offset: 2496)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !689, file: !663, line: 199, baseType: !255, size: 16, offset: 3008)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !689, file: !663, line: 199, baseType: !255, size: 16, offset: 3024)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !689, file: !663, line: 200, baseType: !216, size: 32, offset: 3040)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !689, file: !663, line: 200, baseType: !216, size: 32, offset: 3072)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !689, file: !663, line: 202, baseType: !255, size: 16, offset: 3104)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !689, file: !663, line: 202, baseType: !255, size: 16, offset: 3120)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !689, file: !663, line: 203, baseType: !215, size: 64, offset: 3136)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !689, file: !663, line: 204, baseType: !1094, size: 128, offset: 3200)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !970, line: 95, baseType: !1095)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !970, line: 92, size: 128, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1100}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1095, file: !970, line: 93, baseType: !216, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1095, file: !970, line: 93, baseType: !216, size: 32, offset: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1095, file: !970, line: 94, baseType: !216, size: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1095, file: !970, line: 94, baseType: !216, size: 32, offset: 96)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !689, file: !663, line: 205, baseType: !1094, size: 128, offset: 3328)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !689, file: !663, line: 206, baseType: !1094, size: 128, offset: 3456)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !689, file: !663, line: 215, baseType: !255, size: 16, offset: 3584)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !689, file: !663, line: 215, baseType: !255, size: 16, offset: 3600)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !689, file: !663, line: 216, baseType: !7, size: 32, offset: 3616)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !689, file: !663, line: 217, baseType: !1107, size: 64, offset: 3648)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !663, line: 51, flags: DIFlagFwdDecl)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !669, file: !670, line: 294, baseType: !1110, size: 64, offset: 3264)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{null, !646, !215, !1113}
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !670, line: 282, baseType: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{null, !215, !7, !772}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !669, file: !670, line: 296, baseType: !1118, size: 64, offset: 3328)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!7, !884, !668}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !669, file: !670, line: 298, baseType: !1122, size: 64, offset: 3392)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{null, !884, !668, !1125, !1126, !1126}
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !669, file: !670, line: 302, baseType: !1128, size: 64, offset: 3456)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{null, !661, !661}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !669, file: !670, line: 303, baseType: !1128, size: 64, offset: 3520)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !669, file: !670, line: 304, baseType: !1128, size: 64, offset: 3584)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !669, file: !670, line: 307, baseType: !681, size: 64, offset: 3648)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !669, file: !670, line: 309, baseType: !1135, size: 64, offset: 3712)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!7, !661, !844}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !669, file: !670, line: 311, baseType: !685, size: 64, offset: 3776)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !669, file: !670, line: 314, baseType: !801, size: 256, offset: 3840)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !662, file: !663, line: 333, baseType: !271, size: 512, offset: 1088)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !662, file: !663, line: 335, baseType: !769, size: 64, offset: 1600)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !662, file: !663, line: 337, baseType: !389, size: 64, offset: 1664)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !662, file: !663, line: 338, baseType: !1144, size: 64, offset: 1728)
!1144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 64, elements: !875)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !662, file: !663, line: 340, baseType: !281, size: 128, offset: 1792)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !662, file: !663, line: 340, baseType: !281, size: 128, offset: 1920)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !662, file: !663, line: 342, baseType: !7, size: 32, offset: 2048)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !662, file: !663, line: 342, baseType: !7, size: 32, offset: 2080)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !662, file: !663, line: 343, baseType: !7, size: 32, offset: 2112)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !662, file: !663, line: 345, baseType: !7, size: 32, offset: 2144)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !662, file: !663, line: 346, baseType: !7, size: 32, offset: 2176)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !662, file: !663, line: 347, baseType: !255, size: 16, offset: 2208)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !662, file: !663, line: 348, baseType: !255, size: 16, offset: 2224)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !662, file: !663, line: 349, baseType: !7, size: 32, offset: 2240)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !662, file: !663, line: 351, baseType: !7, size: 32, offset: 2272)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !662, file: !663, line: 353, baseType: !255, size: 16, offset: 2304)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !662, file: !663, line: 354, baseType: !255, size: 16, offset: 2320)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !662, file: !663, line: 355, baseType: !7, size: 32, offset: 2336)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !662, file: !663, line: 357, baseType: !1094, size: 128, offset: 2368)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !662, file: !663, line: 363, baseType: !281, size: 128, offset: 2496)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !662, file: !663, line: 363, baseType: !281, size: 128, offset: 2624)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !662, file: !663, line: 368, baseType: !1163, size: 64, offset: 2752)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !670, line: 500, size: 64, elements: !1165)
!1165 = !{!1166}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1164, file: !670, line: 502, baseType: !1167, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1169, line: 48, baseType: !351)
!1169 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !662, file: !663, line: 372, baseType: !890, size: 32, offset: 2816)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !662, file: !663, line: 373, baseType: !7, size: 32, offset: 2848)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !662, file: !663, line: 382, baseType: !1173, size: 64, offset: 2880)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !663, line: 46, flags: DIFlagFwdDecl)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !662, file: !663, line: 385, baseType: !1176, size: 64, offset: 2944)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{null, !215, !216}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !662, file: !663, line: 386, baseType: !1180, size: 64, offset: 3008)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{null, !215, !988}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !662, file: !663, line: 387, baseType: !1184, size: 64, offset: 3072)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!7, !215}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !662, file: !663, line: 388, baseType: !826, size: 64, offset: 3136)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !662, file: !663, line: 389, baseType: !215, size: 64, offset: 3200)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !662, file: !663, line: 389, baseType: !215, size: 64, offset: 3264)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !662, file: !663, line: 389, baseType: !215, size: 64, offset: 3328)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !662, file: !663, line: 389, baseType: !215, size: 64, offset: 3392)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !588, file: !294, line: 249, baseType: !316, size: 64, offset: 2752)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !588, file: !294, line: 250, baseType: !1194, size: 64, offset: 2816)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !643, line: 77, size: 15424, elements: !1196)
!1196 = !{!1197, !1198, !1199, !1202, !1205, !1208, !1264, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1314, !1315, !1319}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1195, file: !643, line: 78, baseType: !222, size: 960)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1195, file: !643, line: 80, baseType: !241, size: 8192, offset: 960)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1195, file: !643, line: 82, baseType: !1200, size: 64, offset: 9152)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !643, line: 43, flags: DIFlagFwdDecl)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1195, file: !643, line: 83, baseType: !1203, size: 64, offset: 9216)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !223, line: 46, flags: DIFlagFwdDecl)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1195, file: !643, line: 86, baseType: !1206, size: 64, offset: 9280)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !643, line: 41, flags: DIFlagFwdDecl)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1195, file: !643, line: 87, baseType: !1209, size: 64, offset: 9344)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1211, line: 110, size: 1152, elements: !1212)
!1211 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1212 = !{!1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1228, !1260, !1261, !1262, !1263}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1210, file: !1211, line: 111, baseType: !1209, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1210, file: !1211, line: 111, baseType: !1209, size: 64, offset: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !1210, file: !1211, line: 114, baseType: !7, size: 32, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !1210, file: !1211, line: 114, baseType: !7, size: 32, offset: 160)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1210, file: !1211, line: 115, baseType: !255, size: 16, offset: 192)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !1210, file: !1211, line: 115, baseType: !255, size: 16, offset: 208)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !1210, file: !1211, line: 118, baseType: !933, size: 64, offset: 256)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !1210, file: !1211, line: 120, baseType: !778, size: 64, offset: 320)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !1210, file: !1211, line: 122, baseType: !778, size: 64, offset: 384)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !1210, file: !1211, line: 125, baseType: !969, size: 128, offset: 448)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !1210, file: !1211, line: 127, baseType: !7, size: 32, offset: 576)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !1210, file: !1211, line: 127, baseType: !7, size: 32, offset: 608)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1210, file: !1211, line: 130, baseType: !281, size: 128, offset: 640)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !1210, file: !1211, line: 133, baseType: !1227, size: 128, offset: 768)
!1227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !969)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !1210, file: !1211, line: 134, baseType: !1229, size: 64, offset: 896)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1231)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !1211, line: 108, baseType: !1232)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !1211, line: 85, size: 1600, elements: !1233)
!1233 = !{!1234, !1236, !1237, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1232, file: !1211, line: 86, baseType: !1235, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1232, file: !1211, line: 86, baseType: !1235, size: 64, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1232, file: !1211, line: 89, baseType: !1238, size: 592, offset: 128)
!1238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 592, elements: !1239)
!1239 = !{!1240}
!1240 = !DISubrange(count: 74)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1232, file: !1211, line: 90, baseType: !43, size: 32, offset: 736)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !1232, file: !1211, line: 90, baseType: !43, size: 32, offset: 768)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !1232, file: !1211, line: 90, baseType: !43, size: 32, offset: 800)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !1232, file: !1211, line: 91, baseType: !7, size: 32, offset: 832)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !1232, file: !1211, line: 91, baseType: !7, size: 32, offset: 864)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !1232, file: !1211, line: 91, baseType: !7, size: 32, offset: 896)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !1232, file: !1211, line: 93, baseType: !416, size: 64, offset: 960)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !1232, file: !1211, line: 94, baseType: !1249, size: 64, offset: 1024)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !1251, line: 43, flags: DIFlagFwdDecl)
!1251 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !1232, file: !1211, line: 96, baseType: !778, size: 64, offset: 1088)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !1232, file: !1211, line: 97, baseType: !778, size: 64, offset: 1152)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !1232, file: !1211, line: 98, baseType: !778, size: 64, offset: 1216)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !1232, file: !1211, line: 99, baseType: !933, size: 64, offset: 1280)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !1232, file: !1211, line: 101, baseType: !7, size: 32, offset: 1344)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !1232, file: !1211, line: 101, baseType: !7, size: 32, offset: 1376)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !1232, file: !1211, line: 104, baseType: !215, size: 64, offset: 1408)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !1232, file: !1211, line: 106, baseType: !281, size: 128, offset: 1472)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !1210, file: !1211, line: 137, baseType: !7, size: 32, offset: 960)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1210, file: !1211, line: 140, baseType: !7, size: 32, offset: 992)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !1210, file: !1211, line: 143, baseType: !7, size: 32, offset: 1024)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1210, file: !1211, line: 146, baseType: !988, size: 64, offset: 1088)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1195, file: !643, line: 89, baseType: !1265, size: 512, offset: 9408)
!1265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1209, size: 512, elements: !1266)
!1266 = !{!325}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1195, file: !643, line: 90, baseType: !255, size: 16, offset: 9920)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1195, file: !643, line: 90, baseType: !255, size: 16, offset: 9936)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1195, file: !643, line: 92, baseType: !255, size: 16, offset: 9952)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1195, file: !643, line: 92, baseType: !255, size: 16, offset: 9968)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1195, file: !643, line: 93, baseType: !255, size: 16, offset: 9984)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1195, file: !643, line: 93, baseType: !255, size: 16, offset: 10000)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1195, file: !643, line: 94, baseType: !7, size: 32, offset: 10016)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1195, file: !643, line: 97, baseType: !255, size: 16, offset: 10048)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1195, file: !643, line: 97, baseType: !255, size: 16, offset: 10064)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1195, file: !643, line: 98, baseType: !255, size: 16, offset: 10080)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1195, file: !643, line: 98, baseType: !255, size: 16, offset: 10096)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1195, file: !643, line: 99, baseType: !255, size: 16, offset: 10112)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1195, file: !643, line: 99, baseType: !255, size: 16, offset: 10128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1195, file: !643, line: 100, baseType: !43, size: 32, offset: 10144)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1195, file: !643, line: 101, baseType: !921, size: 64, offset: 10176)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1195, file: !643, line: 103, baseType: !248, size: 64, offset: 10240)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1195, file: !643, line: 104, baseType: !1284, size: 64, offset: 10304)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !223, line: 159, size: 448, elements: !1286)
!1286 = !{!1287, !1289, !1290, !1291, !1292, !1294}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1285, file: !223, line: 161, baseType: !1288, size: 64)
!1288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 64, elements: !875)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1285, file: !223, line: 162, baseType: !1288, size: 64, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1285, file: !223, line: 163, baseType: !874, size: 32, offset: 128)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1285, file: !223, line: 164, baseType: !874, size: 32, offset: 160)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1285, file: !223, line: 165, baseType: !1293, size: 128, offset: 192)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !921, size: 128, elements: !875)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1285, file: !223, line: 166, baseType: !1295, size: 128, offset: 320)
!1295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 128, elements: !875)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1195, file: !643, line: 107, baseType: !216, size: 32, offset: 10368)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1195, file: !643, line: 108, baseType: !7, size: 32, offset: 10400)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1195, file: !643, line: 109, baseType: !255, size: 16, offset: 10432)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1195, file: !643, line: 110, baseType: !255, size: 16, offset: 10448)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1195, file: !643, line: 113, baseType: !7, size: 32, offset: 10464)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1195, file: !643, line: 113, baseType: !7, size: 32, offset: 10496)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1195, file: !643, line: 114, baseType: !242, size: 8, offset: 10528)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1195, file: !643, line: 114, baseType: !242, size: 8, offset: 10536)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1195, file: !643, line: 115, baseType: !255, size: 16, offset: 10544)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1195, file: !643, line: 116, baseType: !534, size: 128, offset: 10560)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1195, file: !643, line: 119, baseType: !216, size: 32, offset: 10688)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1195, file: !643, line: 119, baseType: !216, size: 32, offset: 10720)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1195, file: !643, line: 122, baseType: !1309, size: 512, offset: 10752)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1310, line: 182, baseType: !1311)
!1310 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1310, line: 180, size: 512, elements: !1312)
!1312 = !{!1313}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1311, file: !1310, line: 181, baseType: !271, size: 512)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1195, file: !643, line: 123, baseType: !242, size: 8, offset: 11264)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1195, file: !643, line: 125, baseType: !1316, size: 56, offset: 11272)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 56, elements: !1317)
!1317 = !{!1318}
!1318 = !DISubrange(count: 7)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1195, file: !643, line: 126, baseType: !1320, size: 4096, offset: 11328)
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1321, size: 4096, elements: !1266)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !643, line: 69, baseType: !1322)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !643, line: 67, size: 512, elements: !1323)
!1323 = !{!1324}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1322, file: !643, line: 68, baseType: !271, size: 512)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !588, file: !294, line: 251, baseType: !542, size: 64, offset: 2880)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !588, file: !294, line: 252, baseType: !1327, size: 64, offset: 2944)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !294, line: 122, size: 1600, elements: !1329)
!1329 = !{!1330, !1331, !1332, !1336, !1339, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1328, file: !294, line: 123, baseType: !296, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1328, file: !294, line: 124, baseType: !1194, size: 64, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1328, file: !294, line: 125, baseType: !1333, size: 384, offset: 128)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 384, elements: !1334)
!1334 = !{!1335}
!1335 = !DISubrange(count: 6)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1328, file: !294, line: 126, baseType: !1337, size: 512, offset: 512)
!1337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 512, elements: !1338)
!1338 = !{!536, !536}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1328, file: !294, line: 127, baseType: !1340, size: 288, offset: 1024)
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 288, elements: !1341)
!1341 = !{!326, !326}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1328, file: !294, line: 128, baseType: !255, size: 16, offset: 1312)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1328, file: !294, line: 128, baseType: !255, size: 16, offset: 1328)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1328, file: !294, line: 129, baseType: !216, size: 32, offset: 1344)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1328, file: !294, line: 129, baseType: !216, size: 32, offset: 1376)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1328, file: !294, line: 130, baseType: !216, size: 32, offset: 1408)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1328, file: !294, line: 131, baseType: !43, size: 32, offset: 1440)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1328, file: !294, line: 132, baseType: !255, size: 16, offset: 1472)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1328, file: !294, line: 132, baseType: !255, size: 16, offset: 1488)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1328, file: !294, line: 133, baseType: !7, size: 32, offset: 1504)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1328, file: !294, line: 133, baseType: !7, size: 32, offset: 1536)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1328, file: !294, line: 134, baseType: !255, size: 16, offset: 1568)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1328, file: !294, line: 134, baseType: !255, size: 16, offset: 1584)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !588, file: !294, line: 253, baseType: !1284, size: 64, offset: 3008)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !588, file: !294, line: 254, baseType: !1356, size: 64, offset: 3072)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !294, line: 137, size: 832, elements: !1358)
!1358 = !{!1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1379, !1380, !1381, !1382, !1383, !1384}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1357, file: !294, line: 138, baseType: !255, size: 16)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1357, file: !294, line: 140, baseType: !255, size: 16, offset: 16)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1357, file: !294, line: 141, baseType: !216, size: 32, offset: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1357, file: !294, line: 142, baseType: !216, size: 32, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1357, file: !294, line: 143, baseType: !255, size: 16, offset: 96)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1357, file: !294, line: 144, baseType: !255, size: 16, offset: 112)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1357, file: !294, line: 145, baseType: !7, size: 32, offset: 128)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1357, file: !294, line: 147, baseType: !7, size: 32, offset: 160)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1357, file: !294, line: 149, baseType: !296, size: 64, offset: 192)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1357, file: !294, line: 150, baseType: !7, size: 32, offset: 256)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1357, file: !294, line: 151, baseType: !255, size: 16, offset: 288)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1357, file: !294, line: 152, baseType: !255, size: 16, offset: 304)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1357, file: !294, line: 154, baseType: !215, size: 64, offset: 320)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1357, file: !294, line: 155, baseType: !778, size: 64, offset: 384)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1357, file: !294, line: 157, baseType: !216, size: 32, offset: 448)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1357, file: !294, line: 158, baseType: !255, size: 16, offset: 480)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1357, file: !294, line: 159, baseType: !255, size: 16, offset: 496)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1357, file: !294, line: 160, baseType: !255, size: 16, offset: 512)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1357, file: !294, line: 161, baseType: !1378, size: 48, offset: 528)
!1378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 48, elements: !359)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1357, file: !294, line: 162, baseType: !216, size: 32, offset: 576)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1357, file: !294, line: 164, baseType: !216, size: 32, offset: 608)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1357, file: !294, line: 164, baseType: !216, size: 32, offset: 640)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1357, file: !294, line: 164, baseType: !216, size: 32, offset: 672)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1357, file: !294, line: 165, baseType: !542, size: 64, offset: 704)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1357, file: !294, line: 167, baseType: !1385, size: 64, offset: 768)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1310, line: 72, size: 3072, elements: !1387)
!1387 = !{!1388, !1389, !1390, !1391, !1392, !1393, !1394, !1419, !1420, !1421, !1422}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1386, file: !1310, line: 73, baseType: !7, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1386, file: !1310, line: 73, baseType: !7, size: 32, offset: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1386, file: !1310, line: 74, baseType: !7, size: 32, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1386, file: !1310, line: 75, baseType: !7, size: 32, offset: 96)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1386, file: !1310, line: 77, baseType: !1094, size: 128, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1386, file: !1310, line: 77, baseType: !1094, size: 128, offset: 256)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1386, file: !1310, line: 79, baseType: !1395, size: 2304, offset: 384)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1396, size: 2304, elements: !535)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1310, line: 67, baseType: !1397)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1310, line: 55, size: 576, elements: !1398)
!1398 = !{!1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1415, !1416, !1417, !1418}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1397, file: !1310, line: 56, baseType: !255, size: 16)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1397, file: !1310, line: 56, baseType: !255, size: 16, offset: 16)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1397, file: !1310, line: 58, baseType: !216, size: 32, offset: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1397, file: !1310, line: 59, baseType: !216, size: 32, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1397, file: !1310, line: 59, baseType: !216, size: 32, offset: 96)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1397, file: !1310, line: 60, baseType: !1144, size: 64, offset: 128)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1397, file: !1310, line: 60, baseType: !1144, size: 64, offset: 192)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1397, file: !1310, line: 61, baseType: !1407, size: 64, offset: 256)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1310, line: 47, baseType: !1409)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1310, line: 44, size: 96, elements: !1410)
!1410 = !{!1411, !1412, !1413, !1414}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1409, file: !1310, line: 45, baseType: !216, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1409, file: !1310, line: 45, baseType: !216, size: 32, offset: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1409, file: !1310, line: 46, baseType: !255, size: 16, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1409, file: !1310, line: 46, baseType: !255, size: 16, offset: 80)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1397, file: !1310, line: 62, baseType: !1407, size: 64, offset: 320)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1397, file: !1310, line: 64, baseType: !1407, size: 64, offset: 384)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1397, file: !1310, line: 65, baseType: !1144, size: 64, offset: 448)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1397, file: !1310, line: 66, baseType: !1144, size: 64, offset: 512)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1386, file: !1310, line: 80, baseType: !358, size: 96, offset: 2688)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1386, file: !1310, line: 80, baseType: !358, size: 96, offset: 2784)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1386, file: !1310, line: 81, baseType: !358, size: 96, offset: 2880)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1386, file: !1310, line: 83, baseType: !358, size: 96, offset: 2976)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !588, file: !294, line: 255, baseType: !1424, size: 64, offset: 3136)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !294, line: 170, size: 8704, elements: !1426)
!1426 = !{!1427, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1425, file: !294, line: 171, baseType: !1428, size: 96)
!1428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !359)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1425, file: !294, line: 172, baseType: !7, size: 32, offset: 96)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1425, file: !294, line: 173, baseType: !255, size: 16, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1425, file: !294, line: 174, baseType: !255, size: 16, offset: 144)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1425, file: !294, line: 175, baseType: !255, size: 16, offset: 160)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1425, file: !294, line: 176, baseType: !255, size: 16, offset: 176)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1425, file: !294, line: 177, baseType: !255, size: 16, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1425, file: !294, line: 178, baseType: !255, size: 16, offset: 208)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1425, file: !294, line: 179, baseType: !7, size: 32, offset: 224)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1425, file: !294, line: 181, baseType: !296, size: 64, offset: 256)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1425, file: !294, line: 182, baseType: !216, size: 32, offset: 320)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1425, file: !294, line: 183, baseType: !7, size: 32, offset: 352)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1425, file: !294, line: 184, baseType: !241, size: 8192, offset: 384)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1425, file: !294, line: 187, baseType: !778, size: 64, offset: 8576)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1425, file: !294, line: 188, baseType: !7, size: 32, offset: 8640)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1425, file: !294, line: 189, baseType: !7, size: 32, offset: 8672)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !588, file: !294, line: 256, baseType: !1445, size: 64, offset: 3200)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !294, line: 193, size: 640, elements: !1447)
!1447 = !{!1448, !1449, !1450, !1451}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1446, file: !294, line: 194, baseType: !296, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1446, file: !294, line: 195, baseType: !271, size: 512, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1446, file: !294, line: 197, baseType: !7, size: 32, offset: 576)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1446, file: !294, line: 198, baseType: !7, size: 32, offset: 608)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !588, file: !294, line: 258, baseType: !242, size: 8, offset: 3264)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !588, file: !294, line: 259, baseType: !1316, size: 56, offset: 3272)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !579, file: !294, line: 62, baseType: !271, size: 512, offset: 192)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !579, file: !294, line: 64, baseType: !242, size: 8, offset: 704)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !579, file: !294, line: 64, baseType: !242, size: 8, offset: 712)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !579, file: !294, line: 64, baseType: !242, size: 8, offset: 720)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !579, file: !294, line: 64, baseType: !242, size: 8, offset: 728)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !579, file: !294, line: 65, baseType: !358, size: 96, offset: 736)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !579, file: !294, line: 65, baseType: !358, size: 96, offset: 832)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !579, file: !294, line: 65, baseType: !216, size: 32, offset: 928)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !579, file: !294, line: 67, baseType: !255, size: 16, offset: 960)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !579, file: !294, line: 67, baseType: !255, size: 16, offset: 976)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !579, file: !294, line: 67, baseType: !255, size: 16, offset: 992)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !579, file: !294, line: 67, baseType: !255, size: 16, offset: 1008)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !579, file: !294, line: 68, baseType: !255, size: 16, offset: 1024)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !579, file: !294, line: 68, baseType: !255, size: 16, offset: 1040)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !579, file: !294, line: 69, baseType: !242, size: 8, offset: 1056)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !579, file: !294, line: 69, baseType: !1316, size: 56, offset: 1064)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !579, file: !294, line: 70, baseType: !216, size: 32, offset: 1120)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !579, file: !294, line: 70, baseType: !216, size: 32, offset: 1152)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !579, file: !294, line: 70, baseType: !216, size: 32, offset: 1184)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !579, file: !294, line: 70, baseType: !216, size: 32, offset: 1216)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !579, file: !294, line: 71, baseType: !216, size: 32, offset: 1248)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !579, file: !294, line: 71, baseType: !216, size: 32, offset: 1280)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !579, file: !294, line: 74, baseType: !216, size: 32, offset: 1312)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !579, file: !294, line: 74, baseType: !216, size: 32, offset: 1344)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !579, file: !294, line: 77, baseType: !216, size: 32, offset: 1376)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !579, file: !294, line: 77, baseType: !216, size: 32, offset: 1408)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !579, file: !294, line: 77, baseType: !216, size: 32, offset: 1440)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !579, file: !294, line: 78, baseType: !216, size: 32, offset: 1472)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !579, file: !294, line: 78, baseType: !216, size: 32, offset: 1504)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !579, file: !294, line: 78, baseType: !216, size: 32, offset: 1536)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !579, file: !294, line: 79, baseType: !216, size: 32, offset: 1568)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !579, file: !294, line: 79, baseType: !216, size: 32, offset: 1600)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !579, file: !294, line: 79, baseType: !216, size: 32, offset: 1632)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !579, file: !294, line: 79, baseType: !216, size: 32, offset: 1664)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !579, file: !294, line: 80, baseType: !216, size: 32, offset: 1696)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !579, file: !294, line: 80, baseType: !216, size: 32, offset: 1728)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !579, file: !294, line: 80, baseType: !216, size: 32, offset: 1760)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !579, file: !294, line: 81, baseType: !216, size: 32, offset: 1792)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !579, file: !294, line: 81, baseType: !216, size: 32, offset: 1824)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !579, file: !294, line: 81, baseType: !216, size: 32, offset: 1856)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !579, file: !294, line: 82, baseType: !216, size: 32, offset: 1888)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !579, file: !294, line: 82, baseType: !216, size: 32, offset: 1920)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !579, file: !294, line: 82, baseType: !216, size: 32, offset: 1952)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !579, file: !294, line: 85, baseType: !216, size: 32, offset: 1984)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !579, file: !294, line: 85, baseType: !216, size: 32, offset: 2016)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !579, file: !294, line: 85, baseType: !216, size: 32, offset: 2048)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !579, file: !294, line: 85, baseType: !216, size: 32, offset: 2080)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !579, file: !294, line: 86, baseType: !216, size: 32, offset: 2112)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !579, file: !294, line: 86, baseType: !216, size: 32, offset: 2144)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !579, file: !294, line: 86, baseType: !216, size: 32, offset: 2176)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !579, file: !294, line: 86, baseType: !216, size: 32, offset: 2208)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !579, file: !294, line: 87, baseType: !216, size: 32, offset: 2240)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !579, file: !294, line: 87, baseType: !216, size: 32, offset: 2272)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !579, file: !294, line: 87, baseType: !216, size: 32, offset: 2304)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !579, file: !294, line: 87, baseType: !216, size: 32, offset: 2336)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !579, file: !294, line: 90, baseType: !216, size: 32, offset: 2368)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !579, file: !294, line: 93, baseType: !216, size: 32, offset: 2400)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !579, file: !294, line: 93, baseType: !216, size: 32, offset: 2432)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !579, file: !294, line: 93, baseType: !216, size: 32, offset: 2464)
!1513 = !{!1514}
!1514 = !DISubrange(count: 18)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !417, file: !418, line: 168, baseType: !661, size: 64, offset: 6144)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !417, file: !418, line: 169, baseType: !316, size: 64, offset: 6208)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !417, file: !418, line: 170, baseType: !1249, size: 64, offset: 6272)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !417, file: !418, line: 171, baseType: !1284, size: 64, offset: 6336)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !417, file: !418, line: 174, baseType: !216, size: 32, offset: 6400)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !417, file: !418, line: 174, baseType: !216, size: 32, offset: 6432)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !417, file: !418, line: 174, baseType: !216, size: 32, offset: 6464)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !417, file: !418, line: 175, baseType: !216, size: 32, offset: 6496)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !417, file: !418, line: 175, baseType: !216, size: 32, offset: 6528)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !417, file: !418, line: 176, baseType: !255, size: 16, offset: 6560)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !417, file: !418, line: 176, baseType: !255, size: 16, offset: 6576)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !417, file: !418, line: 179, baseType: !358, size: 96, offset: 6592)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !417, file: !418, line: 179, baseType: !358, size: 96, offset: 6688)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !417, file: !418, line: 180, baseType: !216, size: 32, offset: 6784)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !417, file: !418, line: 180, baseType: !216, size: 32, offset: 6816)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !417, file: !418, line: 180, baseType: !216, size: 32, offset: 6848)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !417, file: !418, line: 181, baseType: !216, size: 32, offset: 6880)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !417, file: !418, line: 181, baseType: !216, size: 32, offset: 6912)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !417, file: !418, line: 182, baseType: !216, size: 32, offset: 6944)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !417, file: !418, line: 182, baseType: !216, size: 32, offset: 6976)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !417, file: !418, line: 183, baseType: !255, size: 16, offset: 7008)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !417, file: !418, line: 183, baseType: !255, size: 16, offset: 7024)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !417, file: !418, line: 185, baseType: !7, size: 32, offset: 7040)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !417, file: !418, line: 186, baseType: !255, size: 16, offset: 7072)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !417, file: !418, line: 187, baseType: !255, size: 16, offset: 7088)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !417, file: !418, line: 190, baseType: !534, size: 128, offset: 7104)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !417, file: !418, line: 191, baseType: !255, size: 16, offset: 7232)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !417, file: !418, line: 192, baseType: !255, size: 16, offset: 7248)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !417, file: !418, line: 195, baseType: !255, size: 16, offset: 7264)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !417, file: !418, line: 196, baseType: !255, size: 16, offset: 7280)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !417, file: !418, line: 197, baseType: !255, size: 16, offset: 7296)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !417, file: !418, line: 198, baseType: !1378, size: 48, offset: 7312)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !417, file: !418, line: 200, baseType: !1548, size: 64, offset: 7360)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !418, line: 86, size: 192, elements: !1550)
!1550 = !{!1551, !1552, !1553, !1554}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1549, file: !418, line: 87, baseType: !1194, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1549, file: !418, line: 88, baseType: !988, size: 64, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1549, file: !418, line: 89, baseType: !7, size: 32, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1549, file: !418, line: 90, baseType: !7, size: 32, offset: 160)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !417, file: !418, line: 202, baseType: !281, size: 128, offset: 7424)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !297, file: !61, line: 151, baseType: !988, size: 64, offset: 3584)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !297, file: !61, line: 152, baseType: !7, size: 32, offset: 3648)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !297, file: !61, line: 153, baseType: !7, size: 32, offset: 3680)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !297, file: !61, line: 156, baseType: !358, size: 96, offset: 3712)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !297, file: !61, line: 156, baseType: !358, size: 96, offset: 3808)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !297, file: !61, line: 156, baseType: !358, size: 96, offset: 3904)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !297, file: !61, line: 157, baseType: !358, size: 96, offset: 4000)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !297, file: !61, line: 158, baseType: !358, size: 96, offset: 4096)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !297, file: !61, line: 159, baseType: !358, size: 96, offset: 4192)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !297, file: !61, line: 160, baseType: !358, size: 96, offset: 4288)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !297, file: !61, line: 160, baseType: !358, size: 96, offset: 4384)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !297, file: !61, line: 161, baseType: !534, size: 128, offset: 4480)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !297, file: !61, line: 161, baseType: !534, size: 128, offset: 4608)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !297, file: !61, line: 162, baseType: !358, size: 96, offset: 4736)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !297, file: !61, line: 162, baseType: !358, size: 96, offset: 4832)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !297, file: !61, line: 163, baseType: !216, size: 32, offset: 4928)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !297, file: !61, line: 163, baseType: !216, size: 32, offset: 4960)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !297, file: !61, line: 164, baseType: !1337, size: 512, offset: 4992)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !297, file: !61, line: 165, baseType: !1337, size: 512, offset: 5504)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !297, file: !61, line: 166, baseType: !1337, size: 512, offset: 6016)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !297, file: !61, line: 167, baseType: !1337, size: 512, offset: 6528)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !297, file: !61, line: 176, baseType: !1337, size: 512, offset: 7040)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !297, file: !61, line: 178, baseType: !43, size: 32, offset: 7552)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !297, file: !61, line: 180, baseType: !255, size: 16, offset: 7584)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !297, file: !61, line: 181, baseType: !255, size: 16, offset: 7600)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !297, file: !61, line: 183, baseType: !255, size: 16, offset: 7616)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !297, file: !61, line: 183, baseType: !255, size: 16, offset: 7632)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !297, file: !61, line: 184, baseType: !255, size: 16, offset: 7648)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !297, file: !61, line: 184, baseType: !255, size: 16, offset: 7664)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !297, file: !61, line: 185, baseType: !255, size: 16, offset: 7680)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !297, file: !61, line: 186, baseType: !255, size: 16, offset: 7696)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !297, file: !61, line: 187, baseType: !255, size: 16, offset: 7712)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !297, file: !61, line: 188, baseType: !242, size: 8, offset: 7728)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !297, file: !61, line: 189, baseType: !242, size: 8, offset: 7736)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !297, file: !61, line: 192, baseType: !7, size: 32, offset: 7744)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !297, file: !61, line: 192, baseType: !7, size: 32, offset: 7776)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !297, file: !61, line: 192, baseType: !7, size: 32, offset: 7808)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !297, file: !61, line: 192, baseType: !7, size: 32, offset: 7840)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !297, file: !61, line: 194, baseType: !7, size: 32, offset: 7872)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !297, file: !61, line: 202, baseType: !216, size: 32, offset: 7904)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !297, file: !61, line: 202, baseType: !216, size: 32, offset: 7936)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !297, file: !61, line: 202, baseType: !216, size: 32, offset: 7968)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !297, file: !61, line: 211, baseType: !216, size: 32, offset: 8000)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !297, file: !61, line: 212, baseType: !216, size: 32, offset: 8032)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !297, file: !61, line: 213, baseType: !216, size: 32, offset: 8064)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !297, file: !61, line: 214, baseType: !216, size: 32, offset: 8096)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !297, file: !61, line: 215, baseType: !216, size: 32, offset: 8128)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !297, file: !61, line: 216, baseType: !216, size: 32, offset: 8160)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !297, file: !61, line: 219, baseType: !216, size: 32, offset: 8192)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !297, file: !61, line: 220, baseType: !216, size: 32, offset: 8224)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !297, file: !61, line: 221, baseType: !216, size: 32, offset: 8256)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !297, file: !61, line: 224, baseType: !1608, size: 16, offset: 8288)
!1608 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !297, file: !61, line: 224, baseType: !1608, size: 16, offset: 8304)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !297, file: !61, line: 226, baseType: !255, size: 16, offset: 8320)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !297, file: !61, line: 228, baseType: !242, size: 8, offset: 8336)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !297, file: !61, line: 229, baseType: !242, size: 8, offset: 8344)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !297, file: !61, line: 231, baseType: !255, size: 16, offset: 8352)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !297, file: !61, line: 232, baseType: !242, size: 8, offset: 8368)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !297, file: !61, line: 233, baseType: !242, size: 8, offset: 8376)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !297, file: !61, line: 234, baseType: !216, size: 32, offset: 8384)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !297, file: !61, line: 235, baseType: !216, size: 32, offset: 8416)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !297, file: !61, line: 237, baseType: !281, size: 128, offset: 8448)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !297, file: !61, line: 238, baseType: !281, size: 128, offset: 8576)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !297, file: !61, line: 239, baseType: !281, size: 128, offset: 8704)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !297, file: !61, line: 240, baseType: !281, size: 128, offset: 8832)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !297, file: !61, line: 242, baseType: !216, size: 32, offset: 8960)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !297, file: !61, line: 244, baseType: !255, size: 16, offset: 8992)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !297, file: !61, line: 245, baseType: !1608, size: 16, offset: 9008)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !297, file: !61, line: 246, baseType: !534, size: 128, offset: 9024)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !297, file: !61, line: 248, baseType: !7, size: 32, offset: 9152)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !297, file: !61, line: 249, baseType: !7, size: 32, offset: 9184)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !297, file: !61, line: 251, baseType: !1629, size: 64, offset: 9216)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !1631, line: 215, size: 960, elements: !1632)
!1631 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_force.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1632 = !{!1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1630, file: !1631, line: 216, baseType: !7, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "linStiff", scope: !1630, file: !1631, line: 217, baseType: !216, size: 32, offset: 32)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "angStiff", scope: !1630, file: !1631, line: 218, baseType: !216, size: 32, offset: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1630, file: !1631, line: 219, baseType: !216, size: 32, offset: 96)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "viterations", scope: !1630, file: !1631, line: 221, baseType: !7, size: 32, offset: 128)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "piterations", scope: !1630, file: !1631, line: 222, baseType: !7, size: 32, offset: 160)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "diterations", scope: !1630, file: !1631, line: 223, baseType: !7, size: 32, offset: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "citerations", scope: !1630, file: !1631, line: 224, baseType: !7, size: 32, offset: 224)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "kSRHR_CL", scope: !1630, file: !1631, line: 226, baseType: !216, size: 32, offset: 256)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "kSKHR_CL", scope: !1630, file: !1631, line: 227, baseType: !216, size: 32, offset: 288)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "kSSHR_CL", scope: !1630, file: !1631, line: 228, baseType: !216, size: 32, offset: 320)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "kSR_SPLT_CL", scope: !1630, file: !1631, line: 229, baseType: !216, size: 32, offset: 352)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "kSK_SPLT_CL", scope: !1630, file: !1631, line: 231, baseType: !216, size: 32, offset: 384)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "kSS_SPLT_CL", scope: !1630, file: !1631, line: 232, baseType: !216, size: 32, offset: 416)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "kVCF", scope: !1630, file: !1631, line: 233, baseType: !216, size: 32, offset: 448)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "kDP", scope: !1630, file: !1631, line: 234, baseType: !216, size: 32, offset: 480)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "kDG", scope: !1630, file: !1631, line: 236, baseType: !216, size: 32, offset: 512)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "kLF", scope: !1630, file: !1631, line: 237, baseType: !216, size: 32, offset: 544)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "kPR", scope: !1630, file: !1631, line: 238, baseType: !216, size: 32, offset: 576)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "kVC", scope: !1630, file: !1631, line: 239, baseType: !216, size: 32, offset: 608)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "kDF", scope: !1630, file: !1631, line: 241, baseType: !216, size: 32, offset: 640)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "kMT", scope: !1630, file: !1631, line: 242, baseType: !216, size: 32, offset: 672)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "kCHR", scope: !1630, file: !1631, line: 243, baseType: !216, size: 32, offset: 704)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "kKHR", scope: !1630, file: !1631, line: 244, baseType: !216, size: 32, offset: 736)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "kSHR", scope: !1630, file: !1631, line: 246, baseType: !216, size: 32, offset: 768)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "kAHR", scope: !1630, file: !1631, line: 247, baseType: !216, size: 32, offset: 800)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "collisionflags", scope: !1630, file: !1631, line: 248, baseType: !7, size: 32, offset: 832)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "numclusteriterations", scope: !1630, file: !1631, line: 249, baseType: !7, size: 32, offset: 864)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "welding", scope: !1630, file: !1631, line: 250, baseType: !216, size: 32, offset: 896)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1630, file: !1631, line: 251, baseType: !216, size: 32, offset: 928)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !297, file: !61, line: 253, baseType: !242, size: 8, offset: 9280)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !297, file: !61, line: 254, baseType: !242, size: 8, offset: 9288)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !297, file: !61, line: 255, baseType: !255, size: 16, offset: 9296)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !297, file: !61, line: 256, baseType: !358, size: 96, offset: 9312)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !297, file: !61, line: 258, baseType: !281, size: 128, offset: 9408)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !297, file: !61, line: 259, baseType: !281, size: 128, offset: 9536)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !297, file: !61, line: 260, baseType: !281, size: 128, offset: 9664)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !297, file: !61, line: 261, baseType: !281, size: 128, offset: 9792)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !297, file: !61, line: 263, baseType: !1672, size: 64, offset: 9920)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !1631, line: 61, size: 1280, elements: !1674)
!1674 = !{!1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1716, !1717, !1718}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1673, file: !1631, line: 62, baseType: !7, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "deflect", scope: !1673, file: !1631, line: 63, baseType: !255, size: 16, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "forcefield", scope: !1673, file: !1631, line: 64, baseType: !255, size: 16, offset: 48)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !1673, file: !1631, line: 65, baseType: !255, size: 16, offset: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !1673, file: !1631, line: 66, baseType: !255, size: 16, offset: 80)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mode", scope: !1673, file: !1631, line: 67, baseType: !255, size: 16, offset: 96)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !1673, file: !1631, line: 68, baseType: !255, size: 16, offset: 112)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !1673, file: !1631, line: 68, baseType: !255, size: 16, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "zdir", scope: !1673, file: !1631, line: 69, baseType: !255, size: 16, offset: 144)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "f_strength", scope: !1673, file: !1631, line: 72, baseType: !216, size: 32, offset: 160)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "f_damp", scope: !1673, file: !1631, line: 73, baseType: !216, size: 32, offset: 192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "f_flow", scope: !1673, file: !1631, line: 74, baseType: !216, size: 32, offset: 224)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "f_size", scope: !1673, file: !1631, line: 77, baseType: !216, size: 32, offset: 256)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "f_power", scope: !1673, file: !1631, line: 80, baseType: !216, size: 32, offset: 288)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !1673, file: !1631, line: 81, baseType: !216, size: 32, offset: 320)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "mindist", scope: !1673, file: !1631, line: 82, baseType: !216, size: 32, offset: 352)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "f_power_r", scope: !1673, file: !1631, line: 83, baseType: !216, size: 32, offset: 384)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "maxrad", scope: !1673, file: !1631, line: 84, baseType: !216, size: 32, offset: 416)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "minrad", scope: !1673, file: !1631, line: 85, baseType: !216, size: 32, offset: 448)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_damp", scope: !1673, file: !1631, line: 88, baseType: !216, size: 32, offset: 480)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rdamp", scope: !1673, file: !1631, line: 89, baseType: !216, size: 32, offset: 512)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_perm", scope: !1673, file: !1631, line: 90, baseType: !216, size: 32, offset: 544)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_frict", scope: !1673, file: !1631, line: 91, baseType: !216, size: 32, offset: 576)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rfrict", scope: !1673, file: !1631, line: 92, baseType: !216, size: 32, offset: 608)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_stickness", scope: !1673, file: !1631, line: 93, baseType: !216, size: 32, offset: 640)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "absorption", scope: !1673, file: !1631, line: 95, baseType: !216, size: 32, offset: 672)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbdamp", scope: !1673, file: !1631, line: 98, baseType: !216, size: 32, offset: 704)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbift", scope: !1673, file: !1631, line: 99, baseType: !216, size: 32, offset: 736)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sboft", scope: !1673, file: !1631, line: 100, baseType: !216, size: 32, offset: 768)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "clump_fac", scope: !1673, file: !1631, line: 103, baseType: !216, size: 32, offset: 800)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "clump_pow", scope: !1673, file: !1631, line: 103, baseType: !216, size: 32, offset: 832)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !1673, file: !1631, line: 104, baseType: !216, size: 32, offset: 864)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !1673, file: !1631, line: 104, baseType: !216, size: 32, offset: 896)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !1673, file: !1631, line: 104, baseType: !216, size: 32, offset: 928)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "free_end", scope: !1673, file: !1631, line: 104, baseType: !216, size: 32, offset: 960)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "tex_nabla", scope: !1673, file: !1631, line: 107, baseType: !216, size: 32, offset: 992)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1673, file: !1631, line: 108, baseType: !587, size: 64, offset: 1024)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !1673, file: !1631, line: 111, baseType: !1713, size: 64, offset: 1088)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64)
!1714 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG", file: !1715, line: 40, flags: DIFlagFwdDecl)
!1715 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "f_noise", scope: !1673, file: !1631, line: 112, baseType: !216, size: 32, offset: 1152)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !1673, file: !1631, line: 113, baseType: !7, size: 32, offset: 1184)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "f_source", scope: !1673, file: !1631, line: 115, baseType: !296, size: 64, offset: 1216)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !297, file: !61, line: 264, baseType: !1720, size: 64, offset: 9984)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !1631, line: 268, size: 3776, elements: !1722)
!1722 = !{!1723, !1724, !1725, !1728, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1780, !1781, !1782, !2035, !2036, !2049, !2050, !2051, !2052}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1721, file: !1631, line: 270, baseType: !7, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "totspring", scope: !1721, file: !1631, line: 270, baseType: !7, size: 32, offset: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "bpoint", scope: !1721, file: !1631, line: 271, baseType: !1726, size: 64, offset: 64)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodyPoint", file: !1631, line: 271, flags: DIFlagFwdDecl)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "bspring", scope: !1721, file: !1631, line: 272, baseType: !1729, size: 64, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodySpring", file: !1631, line: 272, flags: DIFlagFwdDecl)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1721, file: !1631, line: 273, baseType: !242, size: 8, offset: 192)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "msg_lock", scope: !1721, file: !1631, line: 274, baseType: !242, size: 8, offset: 200)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "msg_value", scope: !1721, file: !1631, line: 275, baseType: !255, size: 16, offset: 208)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "nodemass", scope: !1721, file: !1631, line: 280, baseType: !216, size: 32, offset: 224)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Mass", scope: !1721, file: !1631, line: 281, baseType: !271, size: 512, offset: 256)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "grav", scope: !1721, file: !1631, line: 285, baseType: !216, size: 32, offset: 768)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "mediafrict", scope: !1721, file: !1631, line: 286, baseType: !216, size: 32, offset: 800)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "rklimit", scope: !1721, file: !1631, line: 287, baseType: !216, size: 32, offset: 832)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "physics_speed", scope: !1721, file: !1631, line: 288, baseType: !216, size: 32, offset: 864)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !1721, file: !1631, line: 291, baseType: !216, size: 32, offset: 896)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !1721, file: !1631, line: 292, baseType: !216, size: 32, offset: 928)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !1721, file: !1631, line: 293, baseType: !216, size: 32, offset: 960)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !1721, file: !1631, line: 294, baseType: !216, size: 32, offset: 992)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !1721, file: !1631, line: 295, baseType: !216, size: 32, offset: 1024)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "vertgroup", scope: !1721, file: !1631, line: 296, baseType: !255, size: 16, offset: 1056)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Softgoal", scope: !1721, file: !1631, line: 297, baseType: !271, size: 512, offset: 1072)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "fuzzyness", scope: !1721, file: !1631, line: 301, baseType: !255, size: 16, offset: 1584)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "inspring", scope: !1721, file: !1631, line: 304, baseType: !216, size: 32, offset: 1600)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "infrict", scope: !1721, file: !1631, line: 305, baseType: !216, size: 32, offset: 1632)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Spring_K", scope: !1721, file: !1631, line: 306, baseType: !271, size: 512, offset: 1664)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1721, file: !1631, line: 312, baseType: !7, size: 32, offset: 2176)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1721, file: !1631, line: 312, baseType: !7, size: 32, offset: 2208)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1721, file: !1631, line: 313, baseType: !7, size: 32, offset: 2240)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !1721, file: !1631, line: 314, baseType: !255, size: 16, offset: 2272)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "solverflags", scope: !1721, file: !1631, line: 314, baseType: !255, size: 16, offset: 2288)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1721, file: !1631, line: 317, baseType: !1757, size: 64, offset: 2304)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBVertex", file: !1631, line: 213, baseType: !1760)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBVertex", file: !1631, line: 211, size: 128, elements: !1761)
!1761 = !{!1762}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1760, file: !1631, line: 212, baseType: !534, size: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "totpointkey", scope: !1721, file: !1631, line: 318, baseType: !7, size: 32, offset: 2368)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !1721, file: !1631, line: 318, baseType: !7, size: 32, offset: 2400)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "secondspring", scope: !1721, file: !1631, line: 320, baseType: !216, size: 32, offset: 2432)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "colball", scope: !1721, file: !1631, line: 323, baseType: !216, size: 32, offset: 2464)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "balldamp", scope: !1721, file: !1631, line: 324, baseType: !216, size: 32, offset: 2496)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "ballstiff", scope: !1721, file: !1631, line: 325, baseType: !216, size: 32, offset: 2528)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "sbc_mode", scope: !1721, file: !1631, line: 326, baseType: !255, size: 16, offset: 2560)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "aeroedge", scope: !1721, file: !1631, line: 327, baseType: !255, size: 16, offset: 2576)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "minloops", scope: !1721, file: !1631, line: 328, baseType: !255, size: 16, offset: 2592)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "maxloops", scope: !1721, file: !1631, line: 329, baseType: !255, size: 16, offset: 2608)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "choke", scope: !1721, file: !1631, line: 330, baseType: !255, size: 16, offset: 2624)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "solver_ID", scope: !1721, file: !1631, line: 331, baseType: !255, size: 16, offset: 2640)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "plastic", scope: !1721, file: !1631, line: 332, baseType: !255, size: 16, offset: 2656)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "springpreload", scope: !1721, file: !1631, line: 332, baseType: !255, size: 16, offset: 2672)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !1721, file: !1631, line: 335, baseType: !1778, size: 64, offset: 2688)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64)
!1779 = !DICompositeType(tag: DW_TAG_structure_type, name: "SBScratch", file: !1631, line: 335, flags: DIFlagFwdDecl)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "shearstiff", scope: !1721, file: !1631, line: 336, baseType: !216, size: 32, offset: 2752)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "inpush", scope: !1721, file: !1631, line: 337, baseType: !216, size: 32, offset: 2784)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !1721, file: !1631, line: 339, baseType: !1783, size: 64, offset: 2816)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointCache", file: !1631, line: 170, size: 10560, elements: !1785)
!1785 = !{!1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !2031}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1784, file: !1631, line: 171, baseType: !1783, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1784, file: !1631, line: 171, baseType: !1783, size: 64, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1784, file: !1631, line: 172, baseType: !7, size: 32, offset: 128)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1784, file: !1631, line: 174, baseType: !7, size: 32, offset: 160)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "simframe", scope: !1784, file: !1631, line: 186, baseType: !7, size: 32, offset: 192)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "startframe", scope: !1784, file: !1631, line: 187, baseType: !7, size: 32, offset: 224)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "endframe", scope: !1784, file: !1631, line: 188, baseType: !7, size: 32, offset: 256)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "editframe", scope: !1784, file: !1631, line: 189, baseType: !7, size: 32, offset: 288)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "last_exact", scope: !1784, file: !1631, line: 190, baseType: !7, size: 32, offset: 320)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "last_valid", scope: !1784, file: !1631, line: 191, baseType: !7, size: 32, offset: 352)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1784, file: !1631, line: 192, baseType: !7, size: 32, offset: 384)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1784, file: !1631, line: 195, baseType: !7, size: 32, offset: 416)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1784, file: !1631, line: 196, baseType: !7, size: 32, offset: 448)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !1784, file: !1631, line: 197, baseType: !255, size: 16, offset: 480)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1784, file: !1631, line: 197, baseType: !255, size: 16, offset: 496)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1784, file: !1631, line: 199, baseType: !271, size: 512, offset: 512)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "prev_name", scope: !1784, file: !1631, line: 200, baseType: !271, size: 512, offset: 1024)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1784, file: !1631, line: 201, baseType: !271, size: 512, offset: 1536)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1784, file: !1631, line: 202, baseType: !241, size: 8192, offset: 2048)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "cached_frames", scope: !1784, file: !1631, line: 203, baseType: !988, size: 64, offset: 10240)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !1784, file: !1631, line: 205, baseType: !283, size: 128, offset: 10304)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !1784, file: !1631, line: 207, baseType: !1808, size: 64, offset: 10432)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEdit", file: !1810, line: 235, size: 2560, elements: !1811)
!1810 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pointcache.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1811 = !{!1812, !1813, !1848, !1851, !2012, !2015, !2016, !2017, !2018, !2019, !2023, !2024, !2025, !2026, !2027, !2028, !2030}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "undo", scope: !1809, file: !1810, line: 236, baseType: !281, size: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "curundo", scope: !1809, file: !1810, line: 237, baseType: !1814, size: 64, offset: 128)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheUndo", file: !1810, line: 218, size: 1152, elements: !1816)
!1816 = !{!1817, !1818, !1819, !1837, !1840, !1843, !1844, !1845, !1846, !1847}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1815, file: !1810, line: 219, baseType: !1814, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1815, file: !1810, line: 219, baseType: !1814, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1815, file: !1810, line: 220, baseType: !1820, size: 64, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditPoint", file: !1810, line: 212, size: 128, elements: !1822)
!1822 = !{!1823, !1835, !1836}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1821, file: !1810, line: 213, baseType: !1824, size: 64)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditKey", file: !1810, line: 194, size: 448, elements: !1826)
!1826 = !{!1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1825, file: !1810, line: 195, baseType: !778, size: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !1825, file: !1810, line: 196, baseType: !778, size: 64, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1825, file: !1810, line: 197, baseType: !778, size: 64, offset: 128)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1825, file: !1810, line: 198, baseType: !778, size: 64, offset: 192)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "world_co", scope: !1825, file: !1810, line: 200, baseType: !358, size: 96, offset: 256)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ftime", scope: !1825, file: !1810, line: 201, baseType: !216, size: 32, offset: 352)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1825, file: !1810, line: 202, baseType: !216, size: 32, offset: 384)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1825, file: !1810, line: 203, baseType: !255, size: 16, offset: 416)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !1821, file: !1810, line: 214, baseType: !7, size: 32, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1821, file: !1810, line: 215, baseType: !255, size: 16, offset: 96)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !1815, file: !1810, line: 223, baseType: !1838, size: 64, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleData", file: !1810, line: 223, flags: DIFlagFwdDecl)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !1815, file: !1810, line: 224, baseType: !1841, size: 64, offset: 256)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = !DICompositeType(tag: DW_TAG_structure_type, name: "KDTree", file: !1810, line: 224, flags: DIFlagFwdDecl)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !1815, file: !1810, line: 225, baseType: !778, size: 64, offset: 320)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "psys_flag", scope: !1815, file: !1810, line: 226, baseType: !7, size: 32, offset: 384)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !1815, file: !1810, line: 229, baseType: !283, size: 128, offset: 448)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1815, file: !1810, line: 231, baseType: !7, size: 32, offset: 576)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1815, file: !1810, line: 232, baseType: !271, size: 512, offset: 608)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1809, file: !1810, line: 238, baseType: !1849, size: 64, offset: 192)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheEditPoint", file: !1810, line: 216, baseType: !1821)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1809, file: !1810, line: 240, baseType: !1852, size: 1600, offset: 256)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheID", file: !1810, line: 122, size: 1600, elements: !1853)
!1853 = !{!1854, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1872, !1876, !1880, !1968, !1969, !1985, !1989, !1993, !1997, !2001, !2002, !2006, !2007, !2008, !2010}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1852, file: !1810, line: 123, baseType: !1855, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1852, file: !1810, line: 123, baseType: !1855, size: 64, offset: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1852, file: !1810, line: 125, baseType: !646, size: 64, offset: 128)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !1852, file: !1810, line: 126, baseType: !296, size: 64, offset: 192)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "calldata", scope: !1852, file: !1810, line: 127, baseType: !215, size: 64, offset: 256)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1852, file: !1810, line: 128, baseType: !43, size: 32, offset: 320)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !1852, file: !1810, line: 129, baseType: !43, size: 32, offset: 352)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1852, file: !1810, line: 130, baseType: !43, size: 32, offset: 384)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "default_step", scope: !1852, file: !1810, line: 132, baseType: !43, size: 32, offset: 416)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "max_step", scope: !1852, file: !1810, line: 133, baseType: !43, size: 32, offset: 448)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !1852, file: !1810, line: 136, baseType: !43, size: 32, offset: 480)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "info_types", scope: !1852, file: !1810, line: 136, baseType: !43, size: 32, offset: 512)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "write_point", scope: !1852, file: !1810, line: 139, baseType: !1868, size: 64, offset: 576)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!7, !7, !215, !1871, !7}
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "read_point", scope: !1852, file: !1810, line: 141, baseType: !1873, size: 64, offset: 640)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{null, !7, !215, !1871, !216, !778}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_point", scope: !1852, file: !1810, line: 143, baseType: !1877, size: 64, offset: 704)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{null, !7, !215, !1871, !216, !216, !216, !778}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "write_stream", scope: !1852, file: !1810, line: 146, baseType: !1881, size: 64, offset: 768)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = !DISubroutineType(types: !1883)
!1883 = !{!7, !1884, !215}
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheFile", file: !1810, line: 118, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheFile", file: !1810, line: 109, size: 1536, elements: !1887)
!1887 = !{!1888, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1966}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !1886, file: !1810, line: 110, baseType: !1889, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1891, line: 7, baseType: !1892)
!1891 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1893, line: 49, size: 1728, elements: !1894)
!1893 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1894 = !{!1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1910, !1912, !1913, !1914, !1918, !1919, !1921, !1922, !1925, !1927, !1930, !1933, !1934, !1935, !1939, !1940}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1892, file: !1893, line: 51, baseType: !7, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1892, file: !1893, line: 54, baseType: !988, size: 64, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1892, file: !1893, line: 55, baseType: !988, size: 64, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1892, file: !1893, line: 56, baseType: !988, size: 64, offset: 192)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1892, file: !1893, line: 57, baseType: !988, size: 64, offset: 256)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1892, file: !1893, line: 58, baseType: !988, size: 64, offset: 320)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1892, file: !1893, line: 59, baseType: !988, size: 64, offset: 384)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1892, file: !1893, line: 60, baseType: !988, size: 64, offset: 448)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1892, file: !1893, line: 61, baseType: !988, size: 64, offset: 512)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1892, file: !1893, line: 64, baseType: !988, size: 64, offset: 576)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1892, file: !1893, line: 65, baseType: !988, size: 64, offset: 640)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1892, file: !1893, line: 66, baseType: !988, size: 64, offset: 704)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1892, file: !1893, line: 68, baseType: !1908, size: 64, offset: 768)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1893, line: 36, flags: DIFlagFwdDecl)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1892, file: !1893, line: 70, baseType: !1911, size: 64, offset: 832)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1892, file: !1893, line: 72, baseType: !7, size: 32, offset: 896)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1892, file: !1893, line: 73, baseType: !7, size: 32, offset: 928)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1892, file: !1893, line: 74, baseType: !1915, size: 64, offset: 960)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1916, line: 152, baseType: !1917)
!1916 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1917 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1892, file: !1893, line: 77, baseType: !1608, size: 16, offset: 1024)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1892, file: !1893, line: 78, baseType: !1920, size: 8, offset: 1040)
!1920 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1892, file: !1893, line: 79, baseType: !551, size: 8, offset: 1048)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1892, file: !1893, line: 81, baseType: !1923, size: 64, offset: 1088)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1893, line: 43, baseType: null)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1892, file: !1893, line: 89, baseType: !1926, size: 64, offset: 1152)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1916, line: 153, baseType: !1917)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1892, file: !1893, line: 91, baseType: !1928, size: 64, offset: 1216)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1893, line: 37, flags: DIFlagFwdDecl)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1892, file: !1893, line: 92, baseType: !1931, size: 64, offset: 1280)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1893, line: 38, flags: DIFlagFwdDecl)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1892, file: !1893, line: 93, baseType: !1911, size: 64, offset: 1344)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1892, file: !1893, line: 94, baseType: !215, size: 64, offset: 1408)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1892, file: !1893, line: 95, baseType: !1936, size: 64, offset: 1472)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1937, line: 46, baseType: !1938)
!1937 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1938 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1892, file: !1893, line: 96, baseType: !7, size: 32, offset: 1536)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1892, file: !1893, line: 98, baseType: !1941, size: 160, offset: 1568)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 160, elements: !938)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1886, file: !1810, line: 112, baseType: !7, size: 32, offset: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "old_format", scope: !1886, file: !1810, line: 112, baseType: !7, size: 32, offset: 96)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1886, file: !1810, line: 113, baseType: !43, size: 32, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1886, file: !1810, line: 113, baseType: !43, size: 32, offset: 160)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !1886, file: !1810, line: 114, baseType: !43, size: 32, offset: 192)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1886, file: !1810, line: 114, baseType: !43, size: 32, offset: 224)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1886, file: !1810, line: 116, baseType: !1949, size: 736, offset: 256)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheData", file: !1810, line: 98, size: 736, elements: !1950)
!1950 = !{!1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1949, file: !1810, line: 99, baseType: !43, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1949, file: !1810, line: 100, baseType: !358, size: 96, offset: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !1949, file: !1810, line: 101, baseType: !358, size: 96, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1949, file: !1810, line: 102, baseType: !534, size: 128, offset: 224)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !1949, file: !1810, line: 103, baseType: !358, size: 96, offset: 352)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1949, file: !1810, line: 104, baseType: !216, size: 32, offset: 448)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1949, file: !1810, line: 105, baseType: !358, size: 96, offset: 480)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !1949, file: !1810, line: 106, baseType: !1959, size: 160, offset: 576)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidData", file: !1960, line: 109, size: 160, elements: !1961)
!1960 = !DIFile(filename: "blender/source/blender/makesdna/DNA_boid_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1961 = !{!1962, !1963, !1964, !1965}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !1959, file: !1960, line: 110, baseType: !216, size: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !1959, file: !1960, line: 110, baseType: !358, size: 96, offset: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "state_id", scope: !1959, file: !1960, line: 111, baseType: !255, size: 16, offset: 128)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1959, file: !1960, line: 111, baseType: !255, size: 16, offset: 144)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1886, file: !1810, line: 117, baseType: !1967, size: 512, offset: 1024)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 512, elements: !1266)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "read_stream", scope: !1852, file: !1810, line: 148, baseType: !1881, size: 64, offset: 832)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "write_extra_data", scope: !1852, file: !1810, line: 151, baseType: !1970, size: 64, offset: 896)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{null, !215, !1973, !7}
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheMem", file: !1631, line: 159, size: 1408, elements: !1975)
!1975 = !{!1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1974, file: !1631, line: 160, baseType: !1973, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1974, file: !1631, line: 160, baseType: !1973, size: 64, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1974, file: !1631, line: 161, baseType: !43, size: 32, offset: 128)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1974, file: !1631, line: 161, baseType: !43, size: 32, offset: 160)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !1974, file: !1631, line: 162, baseType: !43, size: 32, offset: 192)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1974, file: !1631, line: 162, baseType: !43, size: 32, offset: 224)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1974, file: !1631, line: 164, baseType: !1967, size: 512, offset: 256)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1974, file: !1631, line: 165, baseType: !1967, size: 512, offset: 768)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1974, file: !1631, line: 167, baseType: !283, size: 128, offset: 1280)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "read_extra_data", scope: !1852, file: !1810, line: 153, baseType: !1986, size: 64, offset: 960)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = !DISubroutineType(types: !1988)
!1988 = !{null, !215, !1973, !216}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_extra_data", scope: !1852, file: !1810, line: 155, baseType: !1990, size: 64, offset: 1024)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{null, !215, !1973, !216, !216, !216}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1852, file: !1810, line: 158, baseType: !1994, size: 64, offset: 1088)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{!7, !215, !7}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1852, file: !1810, line: 160, baseType: !1998, size: 64, offset: 1152)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{null, !215, !772}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "totwrite", scope: !1852, file: !1810, line: 162, baseType: !1994, size: 64, offset: 1216)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !1852, file: !1810, line: 164, baseType: !2003, size: 64, offset: 1280)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = !DISubroutineType(types: !2005)
!2005 = !{!7, !1884}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !1852, file: !1810, line: 165, baseType: !2003, size: 64, offset: 1344)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1852, file: !1810, line: 167, baseType: !1783, size: 64, offset: 1408)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ptr", scope: !1852, file: !1810, line: 169, baseType: !2009, size: 64, offset: 1472)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !1852, file: !1810, line: 170, baseType: !2011, size: 64, offset: 1536)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1809, file: !1810, line: 243, baseType: !2013, size: 64, offset: 1856)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystem", file: !61, line: 55, flags: DIFlagFwdDecl)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !1809, file: !1810, line: 244, baseType: !1838, size: 64, offset: 1920)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !1809, file: !1810, line: 245, baseType: !1841, size: 64, offset: 1984)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !1809, file: !1810, line: 246, baseType: !778, size: 64, offset: 2048)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cache", scope: !1809, file: !1810, line: 247, baseType: !933, size: 64, offset: 2112)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !1809, file: !1810, line: 249, baseType: !2020, size: 64, offset: 2176)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCacheKey", file: !1810, line: 249, flags: DIFlagFwdDecl)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !1809, file: !1810, line: 250, baseType: !281, size: 128, offset: 2240)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1809, file: !1810, line: 252, baseType: !7, size: 32, offset: 2368)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "totframes", scope: !1809, file: !1810, line: 252, baseType: !7, size: 32, offset: 2400)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !1809, file: !1810, line: 252, baseType: !7, size: 32, offset: 2432)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "edited", scope: !1809, file: !1810, line: 252, baseType: !7, size: 32, offset: 2464)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "sel_col", scope: !1809, file: !1810, line: 254, baseType: !2029, size: 24, offset: 2496)
!2029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 24, elements: !359)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "nosel_col", scope: !1809, file: !1810, line: 255, baseType: !2029, size: 24, offset: 2520)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !1784, file: !1631, line: 208, baseType: !2032, size: 64, offset: 10496)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{null, !1808}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !1721, file: !1631, line: 340, baseType: !283, size: 128, offset: 2880)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !1721, file: !1631, line: 342, baseType: !2037, size: 64, offset: 3008)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorWeights", file: !1631, line: 118, size: 640, elements: !2039)
!2039 = !{!2040, !2041, !2045, !2046, !2047, !2048}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2038, file: !1631, line: 119, baseType: !1249, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2038, file: !1631, line: 121, baseType: !2042, size: 448, offset: 64)
!2042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 448, elements: !2043)
!2043 = !{!2044}
!2044 = !DISubrange(count: 14)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "global_gravity", scope: !2038, file: !1631, line: 122, baseType: !216, size: 32, offset: 512)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2038, file: !1631, line: 123, baseType: !255, size: 16, offset: 544)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2038, file: !1631, line: 123, baseType: !1378, size: 48, offset: 560)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2038, file: !1631, line: 124, baseType: !7, size: 32, offset: 608)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "lcom", scope: !1721, file: !1631, line: 344, baseType: !358, size: 96, offset: 3072)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "lrot", scope: !1721, file: !1631, line: 345, baseType: !1340, size: 288, offset: 3168)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "lscale", scope: !1721, file: !1631, line: 346, baseType: !1340, size: 288, offset: 3456)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !1721, file: !1631, line: 348, baseType: !7, size: 32, offset: 3744)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !297, file: !61, line: 265, baseType: !1249, size: 64, offset: 10048)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !297, file: !61, line: 267, baseType: !242, size: 8, offset: 10112)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !297, file: !61, line: 268, baseType: !242, size: 8, offset: 10120)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !297, file: !61, line: 269, baseType: !255, size: 16, offset: 10128)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !297, file: !61, line: 270, baseType: !216, size: 32, offset: 10144)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !297, file: !61, line: 272, baseType: !2059, size: 64, offset: 10176)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !61, line: 54, flags: DIFlagFwdDecl)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !297, file: !61, line: 275, baseType: !2062, size: 64, offset: 10240)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !61, line: 275, flags: DIFlagFwdDecl)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !297, file: !61, line: 277, baseType: !2065, size: 64, offset: 10304)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2066 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !61, line: 56, flags: DIFlagFwdDecl)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !297, file: !61, line: 277, baseType: !2065, size: 64, offset: 10368)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !297, file: !61, line: 278, baseType: !2069, size: 64, offset: 10432)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2070, line: 27, baseType: !2071)
!2070 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2071 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1916, line: 45, baseType: !1938)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !297, file: !61, line: 279, baseType: !2069, size: 64, offset: 10496)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !297, file: !61, line: 280, baseType: !43, size: 32, offset: 10560)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !297, file: !61, line: 281, baseType: !43, size: 32, offset: 10592)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !297, file: !61, line: 283, baseType: !281, size: 128, offset: 10624)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !297, file: !61, line: 284, baseType: !281, size: 128, offset: 10752)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !297, file: !61, line: 285, baseType: !2078, size: 64, offset: 10880)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !297, file: !61, line: 287, baseType: !2080, size: 64, offset: 10944)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !61, line: 59, flags: DIFlagFwdDecl)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !297, file: !61, line: 288, baseType: !2083, size: 64, offset: 11008)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !61, line: 288, flags: DIFlagFwdDecl)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !297, file: !61, line: 290, baseType: !1144, size: 64, offset: 11072)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !297, file: !61, line: 291, baseType: !2087, size: 64, offset: 11136)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !643, line: 65, baseType: !642)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !297, file: !61, line: 293, baseType: !281, size: 128, offset: 11200)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !297, file: !61, line: 294, baseType: !2091, size: 64, offset: 11328)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !61, line: 113, baseType: !2093)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !61, line: 108, size: 256, elements: !2094)
!2094 = !{!2095, !2097, !2098, !2099, !2100}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2093, file: !61, line: 109, baseType: !2096, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2093, file: !61, line: 109, baseType: !2096, size: 64, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2093, file: !61, line: 110, baseType: !296, size: 64, offset: 128)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2093, file: !61, line: 111, baseType: !7, size: 32, offset: 192)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2093, file: !61, line: 112, baseType: !216, size: 32, offset: 224)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !219, file: !6, line: 1221, baseType: !2102, size: 64, offset: 1088)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !2104, line: 52, size: 4224, elements: !2105)
!2104 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2105 = !{!2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2103, file: !2104, line: 53, baseType: !222, size: 960)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2103, file: !2104, line: 54, baseType: !292, size: 64, offset: 960)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !2103, file: !2104, line: 56, baseType: !255, size: 16, offset: 1024)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !2103, file: !2104, line: 56, baseType: !255, size: 16, offset: 1040)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !2103, file: !2104, line: 57, baseType: !255, size: 16, offset: 1056)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !2103, file: !2104, line: 57, baseType: !255, size: 16, offset: 1072)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !2103, file: !2104, line: 59, baseType: !216, size: 32, offset: 1088)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !2103, file: !2104, line: 59, baseType: !216, size: 32, offset: 1120)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !2103, file: !2104, line: 59, baseType: !216, size: 32, offset: 1152)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !2103, file: !2104, line: 60, baseType: !216, size: 32, offset: 1184)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !2103, file: !2104, line: 60, baseType: !216, size: 32, offset: 1216)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !2103, file: !2104, line: 60, baseType: !216, size: 32, offset: 1248)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !2103, file: !2104, line: 61, baseType: !216, size: 32, offset: 1280)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !2103, file: !2104, line: 61, baseType: !216, size: 32, offset: 1312)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !2103, file: !2104, line: 61, baseType: !216, size: 32, offset: 1344)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2103, file: !2104, line: 68, baseType: !216, size: 32, offset: 1376)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2103, file: !2104, line: 68, baseType: !216, size: 32, offset: 1408)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2103, file: !2104, line: 68, baseType: !216, size: 32, offset: 1440)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !2103, file: !2104, line: 69, baseType: !216, size: 32, offset: 1472)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !2103, file: !2104, line: 69, baseType: !216, size: 32, offset: 1504)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2103, file: !2104, line: 74, baseType: !216, size: 32, offset: 1536)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2103, file: !2104, line: 79, baseType: !216, size: 32, offset: 1568)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !2103, file: !2104, line: 81, baseType: !255, size: 16, offset: 1600)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2103, file: !2104, line: 91, baseType: !255, size: 16, offset: 1616)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2103, file: !2104, line: 92, baseType: !255, size: 16, offset: 1632)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2103, file: !2104, line: 93, baseType: !255, size: 16, offset: 1648)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2103, file: !2104, line: 94, baseType: !255, size: 16, offset: 1664)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2103, file: !2104, line: 94, baseType: !255, size: 16, offset: 1680)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2103, file: !2104, line: 94, baseType: !255, size: 16, offset: 1696)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2103, file: !2104, line: 94, baseType: !255, size: 16, offset: 1712)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !2103, file: !2104, line: 96, baseType: !216, size: 32, offset: 1728)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !2103, file: !2104, line: 96, baseType: !216, size: 32, offset: 1760)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !2103, file: !2104, line: 96, baseType: !216, size: 32, offset: 1792)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !2103, file: !2104, line: 96, baseType: !216, size: 32, offset: 1824)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !2103, file: !2104, line: 98, baseType: !216, size: 32, offset: 1856)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !2103, file: !2104, line: 98, baseType: !216, size: 32, offset: 1888)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !2103, file: !2104, line: 98, baseType: !216, size: 32, offset: 1920)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !2103, file: !2104, line: 98, baseType: !216, size: 32, offset: 1952)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !2103, file: !2104, line: 99, baseType: !216, size: 32, offset: 1984)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !2103, file: !2104, line: 99, baseType: !216, size: 32, offset: 2016)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !2103, file: !2104, line: 100, baseType: !216, size: 32, offset: 2048)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !2103, file: !2104, line: 100, baseType: !216, size: 32, offset: 2080)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !2103, file: !2104, line: 103, baseType: !255, size: 16, offset: 2112)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !2103, file: !2104, line: 103, baseType: !255, size: 16, offset: 2128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !2103, file: !2104, line: 103, baseType: !255, size: 16, offset: 2144)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !2103, file: !2104, line: 103, baseType: !255, size: 16, offset: 2160)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !2103, file: !2104, line: 106, baseType: !216, size: 32, offset: 2176)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !2103, file: !2104, line: 106, baseType: !216, size: 32, offset: 2208)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !2103, file: !2104, line: 106, baseType: !216, size: 32, offset: 2240)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !2103, file: !2104, line: 106, baseType: !216, size: 32, offset: 2272)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !2103, file: !2104, line: 107, baseType: !255, size: 16, offset: 2304)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !2103, file: !2104, line: 107, baseType: !255, size: 16, offset: 2320)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !2103, file: !2104, line: 107, baseType: !255, size: 16, offset: 2336)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !2103, file: !2104, line: 107, baseType: !255, size: 16, offset: 2352)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !2103, file: !2104, line: 108, baseType: !216, size: 32, offset: 2368)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !2103, file: !2104, line: 108, baseType: !216, size: 32, offset: 2400)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !2103, file: !2104, line: 109, baseType: !216, size: 32, offset: 2432)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !2103, file: !2104, line: 109, baseType: !216, size: 32, offset: 2464)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !2103, file: !2104, line: 110, baseType: !216, size: 32, offset: 2496)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !2103, file: !2104, line: 110, baseType: !216, size: 32, offset: 2528)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !2103, file: !2104, line: 110, baseType: !216, size: 32, offset: 2560)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !2103, file: !2104, line: 111, baseType: !255, size: 16, offset: 2592)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !2103, file: !2104, line: 111, baseType: !255, size: 16, offset: 2608)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !2103, file: !2104, line: 112, baseType: !255, size: 16, offset: 2624)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !2103, file: !2104, line: 112, baseType: !255, size: 16, offset: 2640)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !2103, file: !2104, line: 112, baseType: !255, size: 16, offset: 2656)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2103, file: !2104, line: 115, baseType: !255, size: 16, offset: 2672)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !2103, file: !2104, line: 118, baseType: !778, size: 64, offset: 2688)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !2103, file: !2104, line: 118, baseType: !778, size: 64, offset: 2752)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2103, file: !2104, line: 121, baseType: !316, size: 64, offset: 2816)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2103, file: !2104, line: 122, baseType: !577, size: 1152, offset: 2880)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !2103, file: !2104, line: 123, baseType: !255, size: 16, offset: 4032)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2103, file: !2104, line: 123, baseType: !255, size: 16, offset: 4048)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2103, file: !2104, line: 123, baseType: !874, size: 32, offset: 4064)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2103, file: !2104, line: 126, baseType: !1284, size: 64, offset: 4096)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2103, file: !2104, line: 129, baseType: !661, size: 64, offset: 4160)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !219, file: !6, line: 1223, baseType: !646, size: 64, offset: 1152)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !219, file: !6, line: 1225, baseType: !281, size: 128, offset: 1216)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !219, file: !6, line: 1226, baseType: !2185, size: 64, offset: 1344)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !6, line: 69, size: 320, elements: !2187)
!2187 = !{!2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2186, file: !6, line: 70, baseType: !2185, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2186, file: !6, line: 70, baseType: !2185, size: 64, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2186, file: !6, line: 71, baseType: !43, size: 32, offset: 128)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !2186, file: !6, line: 71, baseType: !43, size: 32, offset: 160)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2186, file: !6, line: 72, baseType: !7, size: 32, offset: 192)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !2186, file: !6, line: 73, baseType: !255, size: 16, offset: 224)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !2186, file: !6, line: 73, baseType: !255, size: 16, offset: 240)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2186, file: !6, line: 74, baseType: !296, size: 64, offset: 256)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !219, file: !6, line: 1227, baseType: !296, size: 64, offset: 1408)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !219, file: !6, line: 1229, baseType: !358, size: 96, offset: 1472)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !219, file: !6, line: 1230, baseType: !358, size: 96, offset: 1568)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !219, file: !6, line: 1231, baseType: !358, size: 96, offset: 1664)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !219, file: !6, line: 1231, baseType: !358, size: 96, offset: 1760)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !219, file: !6, line: 1233, baseType: !43, size: 32, offset: 1856)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !219, file: !6, line: 1234, baseType: !7, size: 32, offset: 1888)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !219, file: !6, line: 1235, baseType: !43, size: 32, offset: 1920)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !219, file: !6, line: 1237, baseType: !255, size: 16, offset: 1952)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !219, file: !6, line: 1239, baseType: !242, size: 8, offset: 1968)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !219, file: !6, line: 1240, baseType: !551, size: 8, offset: 1976)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !219, file: !6, line: 1242, baseType: !661, size: 64, offset: 1984)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !219, file: !6, line: 1244, baseType: !2209, size: 64, offset: 2048)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !77, line: 200, size: 17024, elements: !2211)
!2211 = !{!2212, !2213, !2214, !2215, !2342, !2343, !2344, !2345, !2346, !2347, !2348}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !2210, file: !77, line: 201, baseType: !2078, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !2210, file: !77, line: 202, baseType: !281, size: 128, offset: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !2210, file: !77, line: 203, baseType: !281, size: 128, offset: 192)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !2210, file: !77, line: 206, baseType: !2216, size: 64, offset: 320)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !77, line: 190, baseType: !2218)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !77, line: 126, size: 2816, elements: !2219)
!2219 = !{!2220, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2308, !2309, !2310, !2311, !2314, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2341}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2218, file: !77, line: 127, baseType: !2221, size: 64)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2218, file: !77, line: 127, baseType: !2221, size: 64, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !2218, file: !77, line: 128, baseType: !215, size: 64, offset: 128)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !2218, file: !77, line: 129, baseType: !215, size: 64, offset: 192)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2218, file: !77, line: 130, baseType: !271, size: 512, offset: 256)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2218, file: !77, line: 132, baseType: !7, size: 32, offset: 768)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2218, file: !77, line: 132, baseType: !7, size: 32, offset: 800)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2218, file: !77, line: 133, baseType: !7, size: 32, offset: 832)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2218, file: !77, line: 134, baseType: !7, size: 32, offset: 864)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !2218, file: !77, line: 134, baseType: !7, size: 32, offset: 896)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !2218, file: !77, line: 134, baseType: !7, size: 32, offset: 928)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !2218, file: !77, line: 135, baseType: !7, size: 32, offset: 960)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !2218, file: !77, line: 135, baseType: !7, size: 32, offset: 992)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2218, file: !77, line: 136, baseType: !7, size: 32, offset: 1024)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2218, file: !77, line: 136, baseType: !7, size: 32, offset: 1056)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !2218, file: !77, line: 137, baseType: !7, size: 32, offset: 1088)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !2218, file: !77, line: 137, baseType: !7, size: 32, offset: 1120)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !2218, file: !77, line: 138, baseType: !216, size: 32, offset: 1152)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !2218, file: !77, line: 139, baseType: !216, size: 32, offset: 1184)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !2218, file: !77, line: 139, baseType: !216, size: 32, offset: 1216)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !2218, file: !77, line: 141, baseType: !255, size: 16, offset: 1248)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !2218, file: !77, line: 142, baseType: !255, size: 16, offset: 1264)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !2218, file: !77, line: 143, baseType: !7, size: 32, offset: 1280)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !2218, file: !77, line: 144, baseType: !7, size: 32, offset: 1312)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !2218, file: !77, line: 146, baseType: !2246, size: 64, offset: 1344)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !77, line: 114, baseType: !2248)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !77, line: 99, size: 7232, elements: !2249)
!2249 = !{!2250, !2252, !2253, !2254, !2255, !2256, !2257, !2265, !2269, !2281, !2290, !2297, !2307}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2248, file: !77, line: 100, baseType: !2251, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2248, file: !77, line: 100, baseType: !2251, size: 64, offset: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !2248, file: !77, line: 101, baseType: !7, size: 32, offset: 128)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2248, file: !77, line: 101, baseType: !7, size: 32, offset: 160)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !2248, file: !77, line: 102, baseType: !7, size: 32, offset: 192)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !2248, file: !77, line: 102, baseType: !7, size: 32, offset: 224)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !2248, file: !77, line: 103, baseType: !2258, size: 64, offset: 256)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !77, line: 59, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !77, line: 56, size: 2112, elements: !2261)
!2261 = !{!2262, !2263, !2264}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2260, file: !77, line: 57, baseType: !676, size: 2048)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !2260, file: !77, line: 58, baseType: !7, size: 32, offset: 2048)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !2260, file: !77, line: 58, baseType: !7, size: 32, offset: 2080)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2248, file: !77, line: 106, baseType: !2266, size: 6144, offset: 320)
!2266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 6144, elements: !2267)
!2267 = !{!2268}
!2268 = !DISubrange(count: 768)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2248, file: !77, line: 107, baseType: !2270, size: 64, offset: 6464)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !77, line: 97, baseType: !2272)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !77, line: 83, size: 8320, elements: !2273)
!2273 = !{!2274, !2275, !2276, !2277, !2278, !2279, !2280}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2272, file: !77, line: 84, baseType: !2266, size: 6144)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2272, file: !77, line: 87, baseType: !676, size: 2048, offset: 6144)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2272, file: !77, line: 88, baseType: !1206, size: 64, offset: 8192)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2272, file: !77, line: 90, baseType: !255, size: 16, offset: 8256)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2272, file: !77, line: 92, baseType: !255, size: 16, offset: 8272)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !2272, file: !77, line: 93, baseType: !255, size: 16, offset: 8288)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !2272, file: !77, line: 95, baseType: !255, size: 16, offset: 8304)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !2248, file: !77, line: 108, baseType: !2282, size: 64, offset: 6528)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !77, line: 66, baseType: !2284)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !77, line: 61, size: 128, elements: !2285)
!2285 = !{!2286, !2287, !2288, !2289}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !2284, file: !77, line: 62, baseType: !7, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !2284, file: !77, line: 63, baseType: !7, size: 32, offset: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2284, file: !77, line: 64, baseType: !7, size: 32, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2284, file: !77, line: 65, baseType: !7, size: 32, offset: 96)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !2248, file: !77, line: 109, baseType: !2291, size: 64, offset: 6592)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !77, line: 71, baseType: !2293)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !77, line: 68, size: 64, elements: !2294)
!2294 = !{!2295, !2296}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !2293, file: !77, line: 69, baseType: !7, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !2293, file: !77, line: 70, baseType: !7, size: 32, offset: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !2248, file: !77, line: 110, baseType: !2298, size: 64, offset: 6656)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !77, line: 81, baseType: !2300)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !77, line: 73, size: 352, elements: !2301)
!2301 = !{!2302, !2303, !2304, !2305, !2306}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !2300, file: !77, line: 74, baseType: !358, size: 96)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2300, file: !77, line: 75, baseType: !358, size: 96, offset: 96)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2300, file: !77, line: 76, baseType: !358, size: 96, offset: 192)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2300, file: !77, line: 77, baseType: !7, size: 32, offset: 288)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2300, file: !77, line: 78, baseType: !7, size: 32, offset: 320)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2248, file: !77, line: 113, baseType: !1309, size: 512, offset: 6720)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2218, file: !77, line: 148, baseType: !316, size: 64, offset: 1408)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2218, file: !77, line: 151, baseType: !646, size: 64, offset: 1472)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !2218, file: !77, line: 152, baseType: !296, size: 64, offset: 1536)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2218, file: !77, line: 153, baseType: !2312, size: 64, offset: 1600)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !6, line: 62, flags: DIFlagFwdDecl)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2218, file: !77, line: 154, baseType: !2315, size: 64, offset: 1664)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !77, line: 154, flags: DIFlagFwdDecl)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2218, file: !77, line: 156, baseType: !1206, size: 64, offset: 1728)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !2218, file: !77, line: 158, baseType: !216, size: 32, offset: 1792)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !2218, file: !77, line: 159, baseType: !216, size: 32, offset: 1824)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !2218, file: !77, line: 162, baseType: !2221, size: 64, offset: 1856)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !2218, file: !77, line: 162, baseType: !2221, size: 64, offset: 1920)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !2218, file: !77, line: 162, baseType: !2221, size: 64, offset: 1984)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !2218, file: !77, line: 164, baseType: !281, size: 128, offset: 2048)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2218, file: !77, line: 166, baseType: !2325, size: 64, offset: 2176)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !77, line: 51, flags: DIFlagFwdDecl)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !2218, file: !77, line: 167, baseType: !215, size: 64, offset: 2240)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2218, file: !77, line: 168, baseType: !216, size: 32, offset: 2304)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !2218, file: !77, line: 170, baseType: !216, size: 32, offset: 2336)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !2218, file: !77, line: 170, baseType: !216, size: 32, offset: 2368)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !2218, file: !77, line: 171, baseType: !216, size: 32, offset: 2400)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !2218, file: !77, line: 173, baseType: !215, size: 64, offset: 2432)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !2218, file: !77, line: 175, baseType: !7, size: 32, offset: 2496)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !2218, file: !77, line: 176, baseType: !7, size: 32, offset: 2528)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !2218, file: !77, line: 179, baseType: !7, size: 32, offset: 2560)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !2218, file: !77, line: 180, baseType: !216, size: 32, offset: 2592)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2218, file: !77, line: 183, baseType: !7, size: 32, offset: 2624)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !2218, file: !77, line: 185, baseType: !242, size: 8, offset: 2656)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2218, file: !77, line: 186, baseType: !2340, size: 24, offset: 2664)
!2340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 24, elements: !359)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !2218, file: !77, line: 189, baseType: !281, size: 128, offset: 2688)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !2210, file: !77, line: 207, baseType: !241, size: 8192, offset: 384)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !2210, file: !77, line: 208, baseType: !241, size: 8192, offset: 8576)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !2210, file: !77, line: 210, baseType: !7, size: 32, offset: 16768)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !2210, file: !77, line: 210, baseType: !7, size: 32, offset: 16800)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !2210, file: !77, line: 211, baseType: !7, size: 32, offset: 16832)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2210, file: !77, line: 211, baseType: !7, size: 32, offset: 16864)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !2210, file: !77, line: 212, baseType: !1094, size: 128, offset: 16896)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !219, file: !6, line: 1246, baseType: !2350, size: 64, offset: 2112)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !6, line: 1067, size: 5184, elements: !2352)
!2352 = !{!2353, !2382, !2383, !2397, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2419, !2435, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2543}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2351, file: !6, line: 1068, baseType: !2354, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !6, line: 934, baseType: !2356)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !6, line: 925, size: 576, elements: !2357)
!2357 = !{!2358, !2374, !2375, !2376, !2377, !2378, !2381}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2356, file: !6, line: 926, baseType: !2359, size: 320)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !6, line: 830, baseType: !2360)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !6, line: 813, size: 320, elements: !2361)
!2361 = !{!2362, !2365, !2368, !2369, !2371, !2372, !2373}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2360, file: !6, line: 814, baseType: !2363, size: 64)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !6, line: 51, flags: DIFlagFwdDecl)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2360, file: !6, line: 815, baseType: !2366, size: 64, offset: 64)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !6, line: 815, flags: DIFlagFwdDecl)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2360, file: !6, line: 818, baseType: !215, size: 64, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2360, file: !6, line: 819, baseType: !2370, size: 32, offset: 192)
!2370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 32, elements: !535)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2360, file: !6, line: 822, baseType: !7, size: 32, offset: 224)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2360, file: !6, line: 826, baseType: !7, size: 32, offset: 256)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2360, file: !6, line: 829, baseType: !7, size: 32, offset: 288)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2356, file: !6, line: 928, baseType: !255, size: 16, offset: 320)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2356, file: !6, line: 928, baseType: !255, size: 16, offset: 336)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2356, file: !6, line: 929, baseType: !7, size: 32, offset: 352)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2356, file: !6, line: 930, baseType: !921, size: 64, offset: 384)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2356, file: !6, line: 931, baseType: !2379, size: 64, offset: 448)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !6, line: 931, flags: DIFlagFwdDecl)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2356, file: !6, line: 933, baseType: !215, size: 64, offset: 512)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2351, file: !6, line: 1069, baseType: !2354, size: 64, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2351, file: !6, line: 1070, baseType: !2384, size: 64, offset: 128)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !6, line: 916, baseType: !2386)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !6, line: 891, size: 704, elements: !2387)
!2387 = !{!2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2386, file: !6, line: 892, baseType: !2359, size: 320)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2386, file: !6, line: 896, baseType: !7, size: 32, offset: 320)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2386, file: !6, line: 900, baseType: !1428, size: 96, offset: 352)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2386, file: !6, line: 903, baseType: !216, size: 32, offset: 448)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2386, file: !6, line: 906, baseType: !7, size: 32, offset: 480)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2386, file: !6, line: 909, baseType: !216, size: 32, offset: 512)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2386, file: !6, line: 912, baseType: !216, size: 32, offset: 544)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2386, file: !6, line: 914, baseType: !296, size: 64, offset: 576)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2386, file: !6, line: 915, baseType: !215, size: 64, offset: 640)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2351, file: !6, line: 1071, baseType: !2398, size: 64, offset: 192)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !6, line: 920, baseType: !2400)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !6, line: 918, size: 320, elements: !2401)
!2401 = !{!2402}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2400, file: !6, line: 919, baseType: !2359, size: 320)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2351, file: !6, line: 1075, baseType: !216, size: 32, offset: 256)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2351, file: !6, line: 1077, baseType: !216, size: 32, offset: 288)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2351, file: !6, line: 1078, baseType: !216, size: 32, offset: 320)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2351, file: !6, line: 1079, baseType: !255, size: 16, offset: 352)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2351, file: !6, line: 1082, baseType: !255, size: 16, offset: 368)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2351, file: !6, line: 1085, baseType: !242, size: 8, offset: 384)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2351, file: !6, line: 1086, baseType: !242, size: 8, offset: 392)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2351, file: !6, line: 1087, baseType: !242, size: 8, offset: 400)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2351, file: !6, line: 1088, baseType: !242, size: 8, offset: 408)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2351, file: !6, line: 1090, baseType: !216, size: 32, offset: 416)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2351, file: !6, line: 1093, baseType: !255, size: 16, offset: 448)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2351, file: !6, line: 1096, baseType: !242, size: 8, offset: 464)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2351, file: !6, line: 1098, baseType: !2416, size: 40, offset: 472)
!2416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 40, elements: !2417)
!2417 = !{!2418}
!2418 = !DISubrange(count: 5)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2351, file: !6, line: 1101, baseType: !2420, size: 832, offset: 512)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !6, line: 836, size: 832, elements: !2421)
!2421 = !{!2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2420, file: !6, line: 837, baseType: !2359, size: 320)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2420, file: !6, line: 839, baseType: !255, size: 16, offset: 320)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2420, file: !6, line: 839, baseType: !255, size: 16, offset: 336)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2420, file: !6, line: 842, baseType: !255, size: 16, offset: 352)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2420, file: !6, line: 842, baseType: !255, size: 16, offset: 368)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2420, file: !6, line: 843, baseType: !874, size: 32, offset: 384)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2420, file: !6, line: 845, baseType: !7, size: 32, offset: 416)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2420, file: !6, line: 847, baseType: !215, size: 64, offset: 448)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2420, file: !6, line: 848, baseType: !1194, size: 64, offset: 512)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2420, file: !6, line: 849, baseType: !1194, size: 64, offset: 576)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2420, file: !6, line: 850, baseType: !1194, size: 64, offset: 640)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2420, file: !6, line: 851, baseType: !358, size: 96, offset: 704)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2420, file: !6, line: 852, baseType: !216, size: 32, offset: 800)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2351, file: !6, line: 1104, baseType: !2436, size: 1344, offset: 1344)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !6, line: 867, size: 1344, elements: !2437)
!2437 = !{!2438, !2439, !2440, !2441, !2442, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2436, file: !6, line: 868, baseType: !255, size: 16)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2436, file: !6, line: 869, baseType: !255, size: 16, offset: 16)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2436, file: !6, line: 870, baseType: !255, size: 16, offset: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2436, file: !6, line: 871, baseType: !255, size: 16, offset: 48)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2436, file: !6, line: 873, baseType: !2443, size: 896, offset: 64)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2444, size: 896, elements: !1317)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !6, line: 864, baseType: !2445)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !6, line: 859, size: 128, elements: !2446)
!2446 = !{!2447, !2448, !2449, !2450, !2451, !2452}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2445, file: !6, line: 860, baseType: !255, size: 16)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2445, file: !6, line: 861, baseType: !255, size: 16, offset: 16)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2445, file: !6, line: 861, baseType: !255, size: 16, offset: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2445, file: !6, line: 861, baseType: !255, size: 16, offset: 48)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2445, file: !6, line: 862, baseType: !7, size: 32, offset: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2445, file: !6, line: 863, baseType: !216, size: 32, offset: 96)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2436, file: !6, line: 874, baseType: !215, size: 64, offset: 960)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2436, file: !6, line: 876, baseType: !216, size: 32, offset: 1024)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2436, file: !6, line: 876, baseType: !216, size: 32, offset: 1056)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2436, file: !6, line: 878, baseType: !7, size: 32, offset: 1088)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2436, file: !6, line: 879, baseType: !7, size: 32, offset: 1120)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2436, file: !6, line: 881, baseType: !7, size: 32, offset: 1152)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2436, file: !6, line: 881, baseType: !7, size: 32, offset: 1184)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2436, file: !6, line: 883, baseType: !646, size: 64, offset: 1216)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2436, file: !6, line: 884, baseType: !296, size: 64, offset: 1280)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2351, file: !6, line: 1107, baseType: !216, size: 32, offset: 2688)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2351, file: !6, line: 1110, baseType: !216, size: 32, offset: 2720)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2351, file: !6, line: 1113, baseType: !255, size: 16, offset: 2752)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2351, file: !6, line: 1113, baseType: !255, size: 16, offset: 2768)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2351, file: !6, line: 1116, baseType: !242, size: 8, offset: 2784)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2351, file: !6, line: 1117, baseType: !551, size: 8, offset: 2792)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2351, file: !6, line: 1120, baseType: !255, size: 16, offset: 2800)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2351, file: !6, line: 1121, baseType: !216, size: 32, offset: 2816)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2351, file: !6, line: 1122, baseType: !216, size: 32, offset: 2848)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2351, file: !6, line: 1123, baseType: !216, size: 32, offset: 2880)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2351, file: !6, line: 1124, baseType: !216, size: 32, offset: 2912)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2351, file: !6, line: 1125, baseType: !216, size: 32, offset: 2944)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2351, file: !6, line: 1126, baseType: !216, size: 32, offset: 2976)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2351, file: !6, line: 1127, baseType: !216, size: 32, offset: 3008)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2351, file: !6, line: 1128, baseType: !216, size: 32, offset: 3040)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2351, file: !6, line: 1129, baseType: !216, size: 32, offset: 3072)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2351, file: !6, line: 1130, baseType: !216, size: 32, offset: 3104)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2351, file: !6, line: 1131, baseType: !255, size: 16, offset: 3136)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2351, file: !6, line: 1132, baseType: !242, size: 8, offset: 3152)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2351, file: !6, line: 1133, baseType: !242, size: 8, offset: 3160)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2351, file: !6, line: 1134, baseType: !2340, size: 24, offset: 3168)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2351, file: !6, line: 1135, baseType: !242, size: 8, offset: 3192)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2351, file: !6, line: 1138, baseType: !296, size: 64, offset: 3200)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2351, file: !6, line: 1139, baseType: !242, size: 8, offset: 3264)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2351, file: !6, line: 1140, baseType: !242, size: 8, offset: 3272)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2351, file: !6, line: 1141, baseType: !242, size: 8, offset: 3280)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2351, file: !6, line: 1142, baseType: !242, size: 8, offset: 3288)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2351, file: !6, line: 1143, baseType: !242, size: 8, offset: 3296)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2351, file: !6, line: 1144, baseType: !2491, size: 64, offset: 3304)
!2491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 64, elements: !1266)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2351, file: !6, line: 1145, baseType: !2491, size: 64, offset: 3368)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2351, file: !6, line: 1148, baseType: !242, size: 8, offset: 3432)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2351, file: !6, line: 1149, baseType: !242, size: 8, offset: 3440)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2351, file: !6, line: 1152, baseType: !242, size: 8, offset: 3448)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2351, file: !6, line: 1152, baseType: !242, size: 8, offset: 3456)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2351, file: !6, line: 1153, baseType: !242, size: 8, offset: 3464)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2351, file: !6, line: 1154, baseType: !255, size: 16, offset: 3472)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2351, file: !6, line: 1154, baseType: !255, size: 16, offset: 3488)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2351, file: !6, line: 1155, baseType: !255, size: 16, offset: 3504)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2351, file: !6, line: 1155, baseType: !255, size: 16, offset: 3520)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2351, file: !6, line: 1156, baseType: !242, size: 8, offset: 3536)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2351, file: !6, line: 1157, baseType: !242, size: 8, offset: 3544)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2351, file: !6, line: 1159, baseType: !242, size: 8, offset: 3552)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2351, file: !6, line: 1160, baseType: !242, size: 8, offset: 3560)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2351, file: !6, line: 1161, baseType: !242, size: 8, offset: 3568)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2351, file: !6, line: 1162, baseType: !242, size: 8, offset: 3576)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2351, file: !6, line: 1165, baseType: !7, size: 32, offset: 3584)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2351, file: !6, line: 1166, baseType: !7, size: 32, offset: 3616)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2351, file: !6, line: 1167, baseType: !7, size: 32, offset: 3648)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2351, file: !6, line: 1168, baseType: !7, size: 32, offset: 3680)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2351, file: !6, line: 1171, baseType: !255, size: 16, offset: 3712)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2351, file: !6, line: 1171, baseType: !255, size: 16, offset: 3728)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2351, file: !6, line: 1172, baseType: !7, size: 32, offset: 3744)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2351, file: !6, line: 1173, baseType: !216, size: 32, offset: 3776)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2351, file: !6, line: 1174, baseType: !216, size: 32, offset: 3808)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2351, file: !6, line: 1177, baseType: !2518, size: 1024, offset: 3840)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !6, line: 963, size: 1024, elements: !2519)
!2519 = !{!2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2518, file: !6, line: 965, baseType: !7, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2518, file: !6, line: 968, baseType: !216, size: 32, offset: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2518, file: !6, line: 971, baseType: !216, size: 32, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2518, file: !6, line: 974, baseType: !216, size: 32, offset: 96)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2518, file: !6, line: 977, baseType: !358, size: 96, offset: 128)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2518, file: !6, line: 979, baseType: !358, size: 96, offset: 224)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2518, file: !6, line: 982, baseType: !7, size: 32, offset: 320)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2518, file: !6, line: 987, baseType: !1144, size: 64, offset: 352)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2518, file: !6, line: 989, baseType: !216, size: 32, offset: 416)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2518, file: !6, line: 994, baseType: !7, size: 32, offset: 448)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2518, file: !6, line: 995, baseType: !7, size: 32, offset: 480)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2518, file: !6, line: 997, baseType: !242, size: 8, offset: 512)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2518, file: !6, line: 998, baseType: !1316, size: 56, offset: 520)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2518, file: !6, line: 1000, baseType: !216, size: 32, offset: 576)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2518, file: !6, line: 1003, baseType: !1144, size: 64, offset: 608)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2518, file: !6, line: 1006, baseType: !7, size: 32, offset: 672)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2518, file: !6, line: 1009, baseType: !216, size: 32, offset: 704)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2518, file: !6, line: 1012, baseType: !1144, size: 64, offset: 736)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2518, file: !6, line: 1015, baseType: !1144, size: 64, offset: 800)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2518, file: !6, line: 1018, baseType: !7, size: 32, offset: 864)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2518, file: !6, line: 1019, baseType: !960, size: 64, offset: 896)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2518, file: !6, line: 1023, baseType: !216, size: 32, offset: 960)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2518, file: !6, line: 1024, baseType: !7, size: 32, offset: 992)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2351, file: !6, line: 1179, baseType: !2544, size: 320, offset: 4864)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !6, line: 1043, size: 320, elements: !2545)
!2545 = !{!2546, !2547, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2544, file: !6, line: 1044, baseType: !242, size: 8)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2544, file: !6, line: 1045, baseType: !2548, size: 16, offset: 8)
!2548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 16, elements: !875)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2544, file: !6, line: 1048, baseType: !242, size: 8, offset: 24)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2544, file: !6, line: 1049, baseType: !216, size: 32, offset: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2544, file: !6, line: 1049, baseType: !216, size: 32, offset: 64)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2544, file: !6, line: 1052, baseType: !216, size: 32, offset: 96)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2544, file: !6, line: 1052, baseType: !216, size: 32, offset: 128)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2544, file: !6, line: 1053, baseType: !242, size: 8, offset: 160)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2544, file: !6, line: 1054, baseType: !2340, size: 24, offset: 168)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2544, file: !6, line: 1057, baseType: !216, size: 32, offset: 192)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2544, file: !6, line: 1057, baseType: !216, size: 32, offset: 224)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2544, file: !6, line: 1060, baseType: !216, size: 32, offset: 256)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2544, file: !6, line: 1060, baseType: !216, size: 32, offset: 288)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !219, file: !6, line: 1247, baseType: !2561, size: 64, offset: 2176)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2562 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !6, line: 60, flags: DIFlagFwdDecl)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !219, file: !6, line: 1251, baseType: !2564, size: 31872, offset: 2240)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !6, line: 403, size: 31872, elements: !2565)
!2565 = !{!2566, !2601, !2621, !2630, !2650, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2780, !2781, !2782, !2784, !2800, !2801}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2564, file: !6, line: 404, baseType: !2567, size: 1984)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !6, line: 259, size: 1984, elements: !2568)
!2568 = !{!2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2584, !2596}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2567, file: !6, line: 260, baseType: !242, size: 8)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2567, file: !6, line: 263, baseType: !242, size: 8, offset: 8)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2567, file: !6, line: 266, baseType: !242, size: 8, offset: 16)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2567, file: !6, line: 267, baseType: !242, size: 8, offset: 24)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2567, file: !6, line: 269, baseType: !242, size: 8, offset: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2567, file: !6, line: 270, baseType: !242, size: 8, offset: 40)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2567, file: !6, line: 276, baseType: !242, size: 8, offset: 48)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2567, file: !6, line: 279, baseType: !242, size: 8, offset: 56)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2567, file: !6, line: 280, baseType: !255, size: 16, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2567, file: !6, line: 280, baseType: !255, size: 16, offset: 80)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2567, file: !6, line: 281, baseType: !216, size: 32, offset: 96)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2567, file: !6, line: 284, baseType: !242, size: 8, offset: 128)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2567, file: !6, line: 285, baseType: !242, size: 8, offset: 136)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2567, file: !6, line: 287, baseType: !2583, size: 48, offset: 144)
!2583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 48, elements: !1334)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2567, file: !6, line: 290, baseType: !2585, size: 1280, offset: 192)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1310, line: 174, baseType: !2586)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1310, line: 166, size: 1280, elements: !2587)
!2587 = !{!2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2586, file: !1310, line: 167, baseType: !7, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2586, file: !1310, line: 167, baseType: !7, size: 32, offset: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2586, file: !1310, line: 168, baseType: !271, size: 512, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2586, file: !1310, line: 169, baseType: !271, size: 512, offset: 576)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2586, file: !1310, line: 170, baseType: !216, size: 32, offset: 1088)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2586, file: !1310, line: 171, baseType: !216, size: 32, offset: 1120)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2586, file: !1310, line: 172, baseType: !1385, size: 64, offset: 1152)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2586, file: !1310, line: 173, baseType: !215, size: 64, offset: 1216)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2567, file: !6, line: 291, baseType: !2597, size: 512, offset: 1472)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1310, line: 178, baseType: !2598)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1310, line: 176, size: 512, elements: !2599)
!2599 = !{!2600}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2598, file: !1310, line: 177, baseType: !271, size: 512)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2564, file: !6, line: 406, baseType: !2602, size: 64, offset: 1984)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !6, line: 80, size: 1472, elements: !2604)
!2604 = !{!2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2603, file: !6, line: 81, baseType: !215, size: 64)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2603, file: !6, line: 82, baseType: !215, size: 64, offset: 64)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2603, file: !6, line: 83, baseType: !43, size: 32, offset: 128)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2603, file: !6, line: 84, baseType: !43, size: 32, offset: 160)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2603, file: !6, line: 86, baseType: !43, size: 32, offset: 192)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2603, file: !6, line: 87, baseType: !43, size: 32, offset: 224)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2603, file: !6, line: 88, baseType: !43, size: 32, offset: 256)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2603, file: !6, line: 89, baseType: !43, size: 32, offset: 288)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2603, file: !6, line: 90, baseType: !43, size: 32, offset: 320)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2603, file: !6, line: 91, baseType: !43, size: 32, offset: 352)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2603, file: !6, line: 92, baseType: !43, size: 32, offset: 384)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2603, file: !6, line: 93, baseType: !43, size: 32, offset: 416)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2603, file: !6, line: 95, baseType: !2618, size: 1024, offset: 448)
!2618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 1024, elements: !2619)
!2619 = !{!2620}
!2620 = !DISubrange(count: 128)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2564, file: !6, line: 407, baseType: !2622, size: 64, offset: 2048)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !6, line: 98, size: 1216, elements: !2624)
!2624 = !{!2625, !2626, !2627, !2628, !2629}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2623, file: !6, line: 100, baseType: !215, size: 64)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2623, file: !6, line: 101, baseType: !215, size: 64, offset: 64)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2623, file: !6, line: 103, baseType: !43, size: 32, offset: 128)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2623, file: !6, line: 104, baseType: !43, size: 32, offset: 160)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2623, file: !6, line: 106, baseType: !2618, size: 1024, offset: 192)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2564, file: !6, line: 408, baseType: !2631, size: 512, offset: 2112)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !6, line: 109, size: 512, elements: !2632)
!2632 = !{!2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2631, file: !6, line: 111, baseType: !7, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2631, file: !6, line: 112, baseType: !7, size: 32, offset: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2631, file: !6, line: 115, baseType: !7, size: 32, offset: 64)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2631, file: !6, line: 116, baseType: !7, size: 32, offset: 96)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2631, file: !6, line: 117, baseType: !7, size: 32, offset: 128)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2631, file: !6, line: 118, baseType: !7, size: 32, offset: 160)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2631, file: !6, line: 119, baseType: !7, size: 32, offset: 192)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2631, file: !6, line: 120, baseType: !7, size: 32, offset: 224)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2631, file: !6, line: 121, baseType: !7, size: 32, offset: 256)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2631, file: !6, line: 122, baseType: !7, size: 32, offset: 288)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2631, file: !6, line: 125, baseType: !7, size: 32, offset: 320)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2631, file: !6, line: 126, baseType: !7, size: 32, offset: 352)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2631, file: !6, line: 127, baseType: !255, size: 16, offset: 384)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2631, file: !6, line: 128, baseType: !255, size: 16, offset: 400)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2631, file: !6, line: 129, baseType: !7, size: 32, offset: 416)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2631, file: !6, line: 130, baseType: !7, size: 32, offset: 448)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2631, file: !6, line: 131, baseType: !7, size: 32, offset: 480)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2564, file: !6, line: 409, baseType: !2651, size: 576, offset: 2624)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !6, line: 134, size: 576, elements: !2652)
!2652 = !{!2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2651, file: !6, line: 135, baseType: !7, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2651, file: !6, line: 136, baseType: !7, size: 32, offset: 32)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2651, file: !6, line: 137, baseType: !7, size: 32, offset: 64)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2651, file: !6, line: 138, baseType: !7, size: 32, offset: 96)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2651, file: !6, line: 139, baseType: !7, size: 32, offset: 128)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2651, file: !6, line: 140, baseType: !7, size: 32, offset: 160)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2651, file: !6, line: 141, baseType: !7, size: 32, offset: 192)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2651, file: !6, line: 142, baseType: !7, size: 32, offset: 224)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2651, file: !6, line: 143, baseType: !216, size: 32, offset: 256)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2651, file: !6, line: 144, baseType: !7, size: 32, offset: 288)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2651, file: !6, line: 145, baseType: !7, size: 32, offset: 320)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2651, file: !6, line: 147, baseType: !7, size: 32, offset: 352)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2651, file: !6, line: 148, baseType: !7, size: 32, offset: 384)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2651, file: !6, line: 149, baseType: !7, size: 32, offset: 416)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2651, file: !6, line: 150, baseType: !7, size: 32, offset: 448)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2651, file: !6, line: 151, baseType: !7, size: 32, offset: 480)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2651, file: !6, line: 152, baseType: !260, size: 64, offset: 512)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2564, file: !6, line: 411, baseType: !7, size: 32, offset: 3200)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2564, file: !6, line: 411, baseType: !7, size: 32, offset: 3232)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2564, file: !6, line: 411, baseType: !7, size: 32, offset: 3264)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2564, file: !6, line: 412, baseType: !216, size: 32, offset: 3296)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2564, file: !6, line: 413, baseType: !7, size: 32, offset: 3328)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2564, file: !6, line: 413, baseType: !7, size: 32, offset: 3360)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2564, file: !6, line: 415, baseType: !7, size: 32, offset: 3392)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2564, file: !6, line: 415, baseType: !7, size: 32, offset: 3424)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2564, file: !6, line: 416, baseType: !255, size: 16, offset: 3456)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2564, file: !6, line: 416, baseType: !255, size: 16, offset: 3472)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2564, file: !6, line: 418, baseType: !216, size: 32, offset: 3488)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2564, file: !6, line: 418, baseType: !216, size: 32, offset: 3520)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2564, file: !6, line: 421, baseType: !216, size: 32, offset: 3552)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2564, file: !6, line: 421, baseType: !216, size: 32, offset: 3584)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2564, file: !6, line: 421, baseType: !216, size: 32, offset: 3616)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2564, file: !6, line: 425, baseType: !255, size: 16, offset: 3648)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2564, file: !6, line: 425, baseType: !255, size: 16, offset: 3664)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2564, file: !6, line: 425, baseType: !255, size: 16, offset: 3680)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2564, file: !6, line: 426, baseType: !255, size: 16, offset: 3696)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2564, file: !6, line: 428, baseType: !255, size: 16, offset: 3712)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2564, file: !6, line: 428, baseType: !255, size: 16, offset: 3728)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2564, file: !6, line: 431, baseType: !7, size: 32, offset: 3744)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2564, file: !6, line: 433, baseType: !255, size: 16, offset: 3776)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2564, file: !6, line: 435, baseType: !255, size: 16, offset: 3792)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2564, file: !6, line: 437, baseType: !255, size: 16, offset: 3808)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2564, file: !6, line: 439, baseType: !255, size: 16, offset: 3824)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2564, file: !6, line: 441, baseType: !255, size: 16, offset: 3840)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2564, file: !6, line: 443, baseType: !255, size: 16, offset: 3856)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2564, file: !6, line: 449, baseType: !7, size: 32, offset: 3872)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2564, file: !6, line: 453, baseType: !7, size: 32, offset: 3904)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2564, file: !6, line: 458, baseType: !255, size: 16, offset: 3936)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2564, file: !6, line: 462, baseType: !255, size: 16, offset: 3952)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2564, file: !6, line: 467, baseType: !7, size: 32, offset: 3968)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2564, file: !6, line: 467, baseType: !7, size: 32, offset: 4000)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2564, file: !6, line: 469, baseType: !255, size: 16, offset: 4032)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2564, file: !6, line: 469, baseType: !255, size: 16, offset: 4048)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2564, file: !6, line: 469, baseType: !255, size: 16, offset: 4064)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2564, file: !6, line: 469, baseType: !255, size: 16, offset: 4080)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2564, file: !6, line: 474, baseType: !255, size: 16, offset: 4096)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2564, file: !6, line: 475, baseType: !242, size: 8, offset: 4112)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2564, file: !6, line: 476, baseType: !242, size: 8, offset: 4120)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2564, file: !6, line: 481, baseType: !7, size: 32, offset: 4128)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2564, file: !6, line: 486, baseType: !7, size: 32, offset: 4160)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2564, file: !6, line: 491, baseType: !7, size: 32, offset: 4192)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2564, file: !6, line: 496, baseType: !255, size: 16, offset: 4224)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2564, file: !6, line: 498, baseType: !255, size: 16, offset: 4240)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2564, file: !6, line: 501, baseType: !255, size: 16, offset: 4256)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2564, file: !6, line: 502, baseType: !255, size: 16, offset: 4272)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2564, file: !6, line: 508, baseType: !255, size: 16, offset: 4288)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2564, file: !6, line: 513, baseType: !255, size: 16, offset: 4304)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2564, file: !6, line: 515, baseType: !255, size: 16, offset: 4320)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2564, file: !6, line: 515, baseType: !255, size: 16, offset: 4336)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2564, file: !6, line: 519, baseType: !1094, size: 128, offset: 4352)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2564, file: !6, line: 519, baseType: !1094, size: 128, offset: 4480)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2564, file: !6, line: 520, baseType: !969, size: 128, offset: 4608)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2564, file: !6, line: 523, baseType: !281, size: 128, offset: 4736)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2564, file: !6, line: 524, baseType: !255, size: 16, offset: 4864)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2564, file: !6, line: 527, baseType: !255, size: 16, offset: 4880)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2564, file: !6, line: 532, baseType: !216, size: 32, offset: 4896)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2564, file: !6, line: 532, baseType: !216, size: 32, offset: 4928)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2564, file: !6, line: 534, baseType: !216, size: 32, offset: 4960)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2564, file: !6, line: 538, baseType: !216, size: 32, offset: 4992)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2564, file: !6, line: 542, baseType: !7, size: 32, offset: 5024)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2564, file: !6, line: 545, baseType: !216, size: 32, offset: 5056)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2564, file: !6, line: 545, baseType: !216, size: 32, offset: 5088)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2564, file: !6, line: 545, baseType: !216, size: 32, offset: 5120)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2564, file: !6, line: 548, baseType: !216, size: 32, offset: 5152)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2564, file: !6, line: 551, baseType: !255, size: 16, offset: 5184)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2564, file: !6, line: 551, baseType: !255, size: 16, offset: 5200)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2564, file: !6, line: 551, baseType: !255, size: 16, offset: 5216)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2564, file: !6, line: 551, baseType: !255, size: 16, offset: 5232)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2564, file: !6, line: 552, baseType: !255, size: 16, offset: 5248)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2564, file: !6, line: 552, baseType: !255, size: 16, offset: 5264)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2564, file: !6, line: 553, baseType: !216, size: 32, offset: 5280)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2564, file: !6, line: 553, baseType: !216, size: 32, offset: 5312)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2564, file: !6, line: 554, baseType: !255, size: 16, offset: 5344)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2564, file: !6, line: 554, baseType: !255, size: 16, offset: 5360)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2564, file: !6, line: 555, baseType: !216, size: 32, offset: 5376)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2564, file: !6, line: 555, baseType: !216, size: 32, offset: 5408)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2564, file: !6, line: 558, baseType: !241, size: 8192, offset: 5440)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2564, file: !6, line: 561, baseType: !7, size: 32, offset: 13632)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2564, file: !6, line: 562, baseType: !255, size: 16, offset: 13664)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2564, file: !6, line: 562, baseType: !255, size: 16, offset: 13680)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2564, file: !6, line: 565, baseType: !2266, size: 6144, offset: 13696)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2564, file: !6, line: 568, baseType: !534, size: 128, offset: 19840)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2564, file: !6, line: 569, baseType: !534, size: 128, offset: 19968)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2564, file: !6, line: 572, baseType: !242, size: 8, offset: 20096)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2564, file: !6, line: 573, baseType: !242, size: 8, offset: 20104)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2564, file: !6, line: 574, baseType: !242, size: 8, offset: 20112)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2564, file: !6, line: 575, baseType: !2416, size: 40, offset: 20120)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2564, file: !6, line: 578, baseType: !7, size: 32, offset: 20160)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2564, file: !6, line: 579, baseType: !255, size: 16, offset: 20192)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2564, file: !6, line: 580, baseType: !255, size: 16, offset: 20208)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2564, file: !6, line: 581, baseType: !216, size: 32, offset: 20224)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2564, file: !6, line: 582, baseType: !216, size: 32, offset: 20256)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2564, file: !6, line: 585, baseType: !255, size: 16, offset: 20288)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2564, file: !6, line: 585, baseType: !255, size: 16, offset: 20304)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2564, file: !6, line: 586, baseType: !216, size: 32, offset: 20320)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2564, file: !6, line: 589, baseType: !255, size: 16, offset: 20352)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2564, file: !6, line: 589, baseType: !255, size: 16, offset: 20368)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2564, file: !6, line: 590, baseType: !7, size: 32, offset: 20384)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2564, file: !6, line: 593, baseType: !255, size: 16, offset: 20416)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2564, file: !6, line: 593, baseType: !255, size: 16, offset: 20432)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2564, file: !6, line: 594, baseType: !255, size: 16, offset: 20448)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2564, file: !6, line: 594, baseType: !255, size: 16, offset: 20464)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2564, file: !6, line: 595, baseType: !216, size: 32, offset: 20480)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2564, file: !6, line: 596, baseType: !216, size: 32, offset: 20512)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2564, file: !6, line: 597, baseType: !2778, size: 64, offset: 20544)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64)
!2779 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1251, line: 44, flags: DIFlagFwdDecl)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2564, file: !6, line: 600, baseType: !7, size: 32, offset: 20608)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2564, file: !6, line: 601, baseType: !216, size: 32, offset: 20640)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2564, file: !6, line: 604, baseType: !2783, size: 256, offset: 20672)
!2783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 256, elements: !565)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2564, file: !6, line: 607, baseType: !2785, size: 10880, offset: 20928)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !6, line: 364, size: 10880, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2785, file: !6, line: 365, baseType: !2567, size: 1984)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2785, file: !6, line: 367, baseType: !241, size: 8192, offset: 1984)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2785, file: !6, line: 369, baseType: !255, size: 16, offset: 10176)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2785, file: !6, line: 369, baseType: !255, size: 16, offset: 10192)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2785, file: !6, line: 370, baseType: !255, size: 16, offset: 10208)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2785, file: !6, line: 370, baseType: !255, size: 16, offset: 10224)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2785, file: !6, line: 372, baseType: !216, size: 32, offset: 10240)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2785, file: !6, line: 373, baseType: !216, size: 32, offset: 10272)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2785, file: !6, line: 375, baseType: !2340, size: 24, offset: 10304)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2785, file: !6, line: 376, baseType: !242, size: 8, offset: 10328)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2785, file: !6, line: 378, baseType: !242, size: 8, offset: 10336)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2785, file: !6, line: 379, baseType: !2340, size: 24, offset: 10344)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2785, file: !6, line: 381, baseType: !271, size: 512, offset: 10368)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2564, file: !6, line: 609, baseType: !7, size: 32, offset: 31808)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2564, file: !6, line: 610, baseType: !7, size: 32, offset: 31840)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !219, file: !6, line: 1252, baseType: !2803, size: 256, offset: 34112)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !6, line: 158, size: 256, elements: !2804)
!2804 = !{!2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2803, file: !6, line: 159, baseType: !7, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2803, file: !6, line: 160, baseType: !216, size: 32, offset: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2803, file: !6, line: 161, baseType: !216, size: 32, offset: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2803, file: !6, line: 162, baseType: !216, size: 32, offset: 96)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2803, file: !6, line: 163, baseType: !7, size: 32, offset: 128)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2803, file: !6, line: 164, baseType: !255, size: 16, offset: 160)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2803, file: !6, line: 165, baseType: !255, size: 16, offset: 176)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2803, file: !6, line: 166, baseType: !216, size: 32, offset: 192)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2803, file: !6, line: 167, baseType: !216, size: 32, offset: 224)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !219, file: !6, line: 1254, baseType: !281, size: 128, offset: 34368)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !219, file: !6, line: 1255, baseType: !281, size: 128, offset: 34496)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !219, file: !6, line: 1257, baseType: !215, size: 64, offset: 34624)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !219, file: !6, line: 1258, baseType: !215, size: 64, offset: 34688)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !219, file: !6, line: 1259, baseType: !215, size: 64, offset: 34752)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !219, file: !6, line: 1260, baseType: !215, size: 64, offset: 34816)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !219, file: !6, line: 1262, baseType: !215, size: 64, offset: 34880)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !219, file: !6, line: 1265, baseType: !2822, size: 64, offset: 34944)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2823 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !6, line: 1265, flags: DIFlagFwdDecl)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !219, file: !6, line: 1266, baseType: !255, size: 16, offset: 35008)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !219, file: !6, line: 1267, baseType: !255, size: 16, offset: 35024)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !219, file: !6, line: 1270, baseType: !7, size: 32, offset: 35040)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !219, file: !6, line: 1271, baseType: !281, size: 128, offset: 35072)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !219, file: !6, line: 1274, baseType: !2829, size: 128, offset: 35200)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !6, line: 650, size: 128, elements: !2830)
!2830 = !{!2831, !2832, !2833, !2834, !2835}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2829, file: !6, line: 651, baseType: !358, size: 96)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2829, file: !6, line: 652, baseType: !242, size: 8, offset: 96)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2829, file: !6, line: 652, baseType: !242, size: 8, offset: 104)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2829, file: !6, line: 652, baseType: !242, size: 8, offset: 112)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2829, file: !6, line: 652, baseType: !242, size: 8, offset: 120)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !219, file: !6, line: 1275, baseType: !2837, size: 1472, offset: 35328)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !6, line: 676, size: 1472, elements: !2838)
!2838 = !{!2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2860, !2861, !2862, !2863, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2837, file: !6, line: 679, baseType: !2829, size: 128)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2837, file: !6, line: 680, baseType: !255, size: 16, offset: 128)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2837, file: !6, line: 680, baseType: !255, size: 16, offset: 144)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2837, file: !6, line: 680, baseType: !255, size: 16, offset: 160)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2837, file: !6, line: 680, baseType: !255, size: 16, offset: 176)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2837, file: !6, line: 681, baseType: !255, size: 16, offset: 192)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2837, file: !6, line: 681, baseType: !255, size: 16, offset: 208)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2837, file: !6, line: 681, baseType: !255, size: 16, offset: 224)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2837, file: !6, line: 681, baseType: !255, size: 16, offset: 240)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2837, file: !6, line: 682, baseType: !255, size: 16, offset: 256)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2837, file: !6, line: 682, baseType: !1378, size: 48, offset: 272)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2837, file: !6, line: 685, baseType: !2851, size: 192, offset: 320)
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !6, line: 633, size: 192, elements: !2852)
!2852 = !{!2853, !2854, !2855, !2856, !2857, !2858, !2859}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2851, file: !6, line: 634, baseType: !255, size: 16)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2851, file: !6, line: 634, baseType: !255, size: 16, offset: 16)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2851, file: !6, line: 635, baseType: !255, size: 16, offset: 32)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2851, file: !6, line: 635, baseType: !255, size: 16, offset: 48)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2851, file: !6, line: 636, baseType: !216, size: 32, offset: 64)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2851, file: !6, line: 636, baseType: !216, size: 32, offset: 96)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2851, file: !6, line: 637, baseType: !2778, size: 64, offset: 128)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2837, file: !6, line: 686, baseType: !255, size: 16, offset: 512)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2837, file: !6, line: 686, baseType: !255, size: 16, offset: 528)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2837, file: !6, line: 687, baseType: !216, size: 32, offset: 544)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2837, file: !6, line: 688, baseType: !2864, size: 448, offset: 576)
!2864 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !6, line: 674, baseType: !2865)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !6, line: 659, size: 448, elements: !2866)
!2866 = !{!2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2865, file: !6, line: 660, baseType: !216, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2865, file: !6, line: 661, baseType: !216, size: 32, offset: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2865, file: !6, line: 662, baseType: !216, size: 32, offset: 64)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2865, file: !6, line: 663, baseType: !216, size: 32, offset: 96)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2865, file: !6, line: 664, baseType: !216, size: 32, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2865, file: !6, line: 665, baseType: !216, size: 32, offset: 160)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2865, file: !6, line: 666, baseType: !216, size: 32, offset: 192)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2865, file: !6, line: 667, baseType: !216, size: 32, offset: 224)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2865, file: !6, line: 668, baseType: !216, size: 32, offset: 256)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2865, file: !6, line: 669, baseType: !216, size: 32, offset: 288)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2865, file: !6, line: 670, baseType: !7, size: 32, offset: 320)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2865, file: !6, line: 671, baseType: !216, size: 32, offset: 352)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2865, file: !6, line: 672, baseType: !216, size: 32, offset: 384)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2865, file: !6, line: 673, baseType: !255, size: 16, offset: 416)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2865, file: !6, line: 673, baseType: !255, size: 16, offset: 432)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2837, file: !6, line: 692, baseType: !216, size: 32, offset: 1024)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2837, file: !6, line: 697, baseType: !216, size: 32, offset: 1056)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2837, file: !6, line: 703, baseType: !7, size: 32, offset: 1088)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2837, file: !6, line: 704, baseType: !255, size: 16, offset: 1120)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2837, file: !6, line: 704, baseType: !255, size: 16, offset: 1136)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2837, file: !6, line: 705, baseType: !255, size: 16, offset: 1152)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2837, file: !6, line: 706, baseType: !255, size: 16, offset: 1168)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2837, file: !6, line: 707, baseType: !255, size: 16, offset: 1184)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2837, file: !6, line: 708, baseType: !255, size: 16, offset: 1200)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2837, file: !6, line: 709, baseType: !255, size: 16, offset: 1216)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2837, file: !6, line: 709, baseType: !255, size: 16, offset: 1232)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2837, file: !6, line: 709, baseType: !255, size: 16, offset: 1248)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2837, file: !6, line: 709, baseType: !255, size: 16, offset: 1264)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2837, file: !6, line: 710, baseType: !255, size: 16, offset: 1280)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2837, file: !6, line: 711, baseType: !255, size: 16, offset: 1296)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2837, file: !6, line: 712, baseType: !216, size: 32, offset: 1312)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2837, file: !6, line: 713, baseType: !216, size: 32, offset: 1344)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2837, file: !6, line: 713, baseType: !216, size: 32, offset: 1376)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2837, file: !6, line: 713, baseType: !216, size: 32, offset: 1408)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2837, file: !6, line: 713, baseType: !216, size: 32, offset: 1440)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !219, file: !6, line: 1278, baseType: !2903, size: 64, offset: 36800)
!2903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !6, line: 1197, size: 64, elements: !2904)
!2904 = !{!2905, !2906, !2907, !2908}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2903, file: !6, line: 1199, baseType: !216, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2903, file: !6, line: 1200, baseType: !242, size: 8, offset: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2903, file: !6, line: 1201, baseType: !242, size: 8, offset: 40)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2903, file: !6, line: 1202, baseType: !255, size: 16, offset: 48)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !219, file: !6, line: 1281, baseType: !389, size: 64, offset: 36864)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !219, file: !6, line: 1284, baseType: !2911, size: 192, offset: 36928)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !6, line: 1208, size: 192, elements: !2912)
!2912 = !{!2913, !2914, !2915, !2916}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2911, file: !6, line: 1209, baseType: !358, size: 96)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2911, file: !6, line: 1210, baseType: !7, size: 32, offset: 96)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2911, file: !6, line: 1210, baseType: !7, size: 32, offset: 128)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2911, file: !6, line: 1210, baseType: !7, size: 32, offset: 160)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !219, file: !6, line: 1287, baseType: !2312, size: 64, offset: 37120)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !219, file: !6, line: 1289, baseType: !2069, size: 64, offset: 37184)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !219, file: !6, line: 1290, baseType: !2069, size: 64, offset: 37248)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !219, file: !6, line: 1293, baseType: !2585, size: 1280, offset: 37312)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !219, file: !6, line: 1294, baseType: !2597, size: 512, offset: 38592)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !219, file: !6, line: 1295, baseType: !1309, size: 512, offset: 39104)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !219, file: !6, line: 1298, baseType: !2924, size: 64, offset: 39616)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !6, line: 1298, flags: DIFlagFwdDecl)
!2926 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DIDerivedType(tag: DW_TAG_typedef, name: "BooleanModifierData", file: !146, line: 604, baseType: !2929)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BooleanModifierData", file: !146, line: 599, size: 1024, elements: !2930)
!2930 = !{!2931, !2945, !2946, !2947}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !2929, file: !146, line: 600, baseType: !2932, size: 896)
!2932 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !146, line: 110, baseType: !2933)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !146, line: 99, size: 896, elements: !2934)
!2934 = !{!2935, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2933, file: !146, line: 100, baseType: !2936, size: 64)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2933, file: !146, line: 100, baseType: !2936, size: 64, offset: 64)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2933, file: !146, line: 102, baseType: !7, size: 32, offset: 128)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2933, file: !146, line: 102, baseType: !7, size: 32, offset: 160)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !2933, file: !146, line: 103, baseType: !7, size: 32, offset: 192)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2933, file: !146, line: 103, baseType: !7, size: 32, offset: 224)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2933, file: !146, line: 104, baseType: !271, size: 512, offset: 256)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2933, file: !146, line: 107, baseType: !646, size: 64, offset: 768)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2933, file: !146, line: 109, baseType: !988, size: 64, offset: 832)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2929, file: !146, line: 602, baseType: !296, size: 64, offset: 896)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "operation", scope: !2929, file: !146, line: 603, baseType: !7, size: 32, offset: 960)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2929, file: !146, line: 603, baseType: !7, size: 32, offset: 992)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArrayModifierData", file: !146, line: 246, baseType: !2950)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArrayModifierData", file: !146, line: 204, size: 1536, elements: !2951)
!2951 = !{!2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !2950, file: !146, line: 205, baseType: !2932, size: 896)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "start_cap", scope: !2950, file: !146, line: 208, baseType: !296, size: 64, offset: 896)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "end_cap", scope: !2950, file: !146, line: 210, baseType: !296, size: 64, offset: 960)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "curve_ob", scope: !2950, file: !146, line: 212, baseType: !296, size: 64, offset: 1024)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "offset_ob", scope: !2950, file: !146, line: 214, baseType: !296, size: 64, offset: 1088)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2950, file: !146, line: 218, baseType: !358, size: 96, offset: 1152)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2950, file: !146, line: 222, baseType: !358, size: 96, offset: 1248)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2950, file: !146, line: 224, baseType: !216, size: 32, offset: 1344)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "merge_dist", scope: !2950, file: !146, line: 226, baseType: !216, size: 32, offset: 1376)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "fit_type", scope: !2950, file: !146, line: 232, baseType: !7, size: 32, offset: 1408)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "offset_type", scope: !2950, file: !146, line: 239, baseType: !7, size: 32, offset: 1440)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2950, file: !146, line: 243, baseType: !7, size: 32, offset: 1472)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2950, file: !146, line: 245, baseType: !7, size: 32, offset: 1504)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShrinkwrapModifierData", file: !146, line: 755, baseType: !2967)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShrinkwrapModifierData", file: !146, line: 736, size: 1664, elements: !2968)
!2968 = !{!2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !2967, file: !146, line: 737, baseType: !2932, size: 896)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !2967, file: !146, line: 739, baseType: !296, size: 64, offset: 896)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "auxTarget", scope: !2967, file: !146, line: 740, baseType: !296, size: 64, offset: 960)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_name", scope: !2967, file: !146, line: 741, baseType: !271, size: 512, offset: 1024)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "keepDist", scope: !2967, file: !146, line: 742, baseType: !216, size: 32, offset: 1536)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "shrinkType", scope: !2967, file: !146, line: 743, baseType: !255, size: 16, offset: 1568)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "shrinkOpts", scope: !2967, file: !146, line: 744, baseType: !242, size: 8, offset: 1584)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2967, file: !146, line: 745, baseType: !242, size: 8, offset: 1592)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "projLimit", scope: !2967, file: !146, line: 746, baseType: !216, size: 32, offset: 1600)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "projAxis", scope: !2967, file: !146, line: 747, baseType: !242, size: 8, offset: 1632)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "subsurfLevels", scope: !2967, file: !146, line: 752, baseType: !242, size: 8, offset: 1640)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2967, file: !146, line: 754, baseType: !2548, size: 16, offset: 1648)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTree", file: !663, line: 391, baseType: !662)
!2983 = !{!2984, !2990, !0, !3568, !3571}
!2984 = !DIGlobalVariableExpression(var: !2985, expr: !DIExpression())
!2985 = distinct !DIGlobalVariable(name: "default_envmap_layout", scope: !2, file: !3, line: 3262, type: !2986, isLocal: false, isDefinition: true)
!2986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2987, size: 384, elements: !2988)
!2987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !216)
!2988 = !{!2989}
!2989 = !DISubrange(count: 12)
!2990 = !DIGlobalVariableExpression(var: !2991, expr: !DIExpression())
!2991 = distinct !DIGlobalVariable(name: "R", scope: !2, file: !3, line: 131, type: !2992, isLocal: false, isDefinition: true)
!2992 = !DIDerivedType(tag: DW_TAG_typedef, name: "Render", file: !1211, line: 58, baseType: !2993)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Render", file: !127, line: 126, size: 49920, elements: !2994)
!2994 = !{!2995, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3008, !3009, !3010, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3058, !3061, !3062, !3063, !3065, !3125, !3126, !3128, !3130, !3131, !3132, !3133, !3134, !3218, !3221, !3224, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3276, !3277, !3278, !3279, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3507, !3511, !3512, !3513, !3514, !3519, !3520, !3524, !3525, !3554, !3555, !3556, !3557, !3561, !3562, !3563, !3564, !3565, !3566, !3567}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2993, file: !127, line: 128, baseType: !2996, size: 64)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2993, file: !127, line: 128, baseType: !2996, size: 64, offset: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2993, file: !127, line: 129, baseType: !1238, size: 592, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !2993, file: !127, line: 130, baseType: !7, size: 32, offset: 736)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2993, file: !127, line: 133, baseType: !255, size: 16, offset: 768)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2993, file: !127, line: 133, baseType: !255, size: 16, offset: 784)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2993, file: !127, line: 133, baseType: !255, size: 16, offset: 800)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "result_ok", scope: !2993, file: !127, line: 133, baseType: !255, size: 16, offset: 816)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "scene_color_manage", scope: !2993, file: !127, line: 136, baseType: !916, size: 8, offset: 832)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2993, file: !127, line: 139, baseType: !3006, size: 64, offset: 896)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderResult", file: !1211, line: 148, baseType: !1210)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "pushedresult", scope: !2993, file: !127, line: 141, baseType: !3006, size: 64, offset: 960)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !2993, file: !127, line: 143, baseType: !281, size: 128, offset: 1024)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "resultmutex", scope: !2993, file: !127, line: 147, baseType: !3011, size: 32, offset: 1152)
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadRWMutex", file: !3012, line: 148, baseType: !3013)
!3012 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_rwlock_t", file: !3014, line: 10, baseType: !3015)
!3014 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3015 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !2070, line: 26, baseType: !3016)
!3016 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !1916, line: 42, baseType: !43)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2993, file: !127, line: 150, baseType: !7, size: 32, offset: 1184)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2993, file: !127, line: 150, baseType: !7, size: 32, offset: 1216)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2993, file: !127, line: 152, baseType: !969, size: 128, offset: 1248)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "viewplane", scope: !2993, file: !127, line: 153, baseType: !1094, size: 128, offset: 1376)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "viewdx", scope: !2993, file: !127, line: 154, baseType: !216, size: 32, offset: 1504)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "viewdy", scope: !2993, file: !127, line: 154, baseType: !216, size: 32, offset: 1536)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "clipcrop", scope: !2993, file: !127, line: 155, baseType: !216, size: 32, offset: 1568)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !2993, file: !127, line: 158, baseType: !7, size: 32, offset: 1600)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !2993, file: !127, line: 158, baseType: !7, size: 32, offset: 1632)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "partx", scope: !2993, file: !127, line: 162, baseType: !7, size: 32, offset: 1664)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "party", scope: !2993, file: !127, line: 162, baseType: !7, size: 32, offset: 1696)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "ycor", scope: !2993, file: !127, line: 165, baseType: !216, size: 32, offset: 1728)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "panophi", scope: !2993, file: !127, line: 167, baseType: !216, size: 32, offset: 1760)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "panosi", scope: !2993, file: !127, line: 167, baseType: !216, size: 32, offset: 1792)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "panoco", scope: !2993, file: !127, line: 167, baseType: !216, size: 32, offset: 1824)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "panodxp", scope: !2993, file: !127, line: 167, baseType: !216, size: 32, offset: 1856)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "panodxv", scope: !2993, file: !127, line: 167, baseType: !216, size: 32, offset: 1888)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "grvec", scope: !2993, file: !127, line: 170, baseType: !358, size: 96, offset: 1920)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2993, file: !127, line: 171, baseType: !1340, size: 288, offset: 2016)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !2993, file: !127, line: 172, baseType: !1337, size: 512, offset: 2304)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !2993, file: !127, line: 172, baseType: !1337, size: 512, offset: 2816)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat_orig", scope: !2993, file: !127, line: 173, baseType: !1337, size: 512, offset: 3328)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2993, file: !127, line: 174, baseType: !1337, size: 512, offset: 3840)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2993, file: !127, line: 177, baseType: !216, size: 32, offset: 4352)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2993, file: !127, line: 178, baseType: !216, size: 32, offset: 4384)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !2993, file: !127, line: 181, baseType: !3043, size: 64, offset: 4416)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DIDerivedType(tag: DW_TAG_typedef, name: "SampleTables", file: !127, line: 77, baseType: !3045)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SampleTables", file: !127, line: 72, size: 3776, elements: !3046)
!3046 = !{!3047, !3051, !3055, !3056, !3057}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "centLut", scope: !3045, file: !127, line: 73, baseType: !3048, size: 512)
!3048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 512, elements: !3049)
!3049 = !{!3050}
!3050 = !DISubrange(count: 16)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "fmask1", scope: !3045, file: !127, line: 74, baseType: !3052, size: 576, offset: 512)
!3052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, size: 576, elements: !3053)
!3053 = !{!3054}
!3054 = !DISubrange(count: 9)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "fmask2", scope: !3045, file: !127, line: 74, baseType: !3052, size: 576, offset: 1088)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "cmask", scope: !3045, file: !127, line: 75, baseType: !676, size: 2048, offset: 1664)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "centmask", scope: !3045, file: !127, line: 75, baseType: !988, size: 64, offset: 3712)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !2993, file: !127, line: 182, baseType: !3059, size: 2048, offset: 4480)
!3059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 2048, elements: !3060)
!3060 = !{!566, !876}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_jit", scope: !2993, file: !127, line: 183, baseType: !3059, size: 2048, offset: 6528)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "qmcsamplers", scope: !2993, file: !127, line: 184, baseType: !2078, size: 64, offset: 8576)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "shadowsamplenr", scope: !2993, file: !127, line: 187, baseType: !3064, size: 32, offset: 8640)
!3064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !552)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2993, file: !127, line: 190, baseType: !3066, size: 64, offset: 8704)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !3068, line: 53, size: 15232, elements: !3069)
!3068 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3069 = !{!3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3122}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3067, file: !3068, line: 54, baseType: !3066, size: 64)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3067, file: !3068, line: 54, baseType: !3066, size: 64, offset: 64)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3067, file: !3068, line: 55, baseType: !241, size: 8192, offset: 128)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !3067, file: !3068, line: 56, baseType: !255, size: 16, offset: 8320)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !3067, file: !3068, line: 56, baseType: !255, size: 16, offset: 8336)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !3067, file: !3068, line: 57, baseType: !255, size: 16, offset: 8352)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !3067, file: !3068, line: 57, baseType: !255, size: 16, offset: 8368)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !3067, file: !3068, line: 58, baseType: !2069, size: 64, offset: 8384)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !3067, file: !3068, line: 59, baseType: !3079, size: 128, offset: 8448)
!3079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 128, elements: !3049)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !3067, file: !3068, line: 60, baseType: !255, size: 16, offset: 8576)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !3067, file: !3068, line: 62, baseType: !231, size: 64, offset: 8640)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3067, file: !3068, line: 63, baseType: !281, size: 128, offset: 8704)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !3067, file: !3068, line: 64, baseType: !281, size: 128, offset: 8832)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3067, file: !3068, line: 65, baseType: !281, size: 128, offset: 8960)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !3067, file: !3068, line: 66, baseType: !281, size: 128, offset: 9088)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !3067, file: !3068, line: 67, baseType: !281, size: 128, offset: 9216)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !3067, file: !3068, line: 68, baseType: !281, size: 128, offset: 9344)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3067, file: !3068, line: 69, baseType: !281, size: 128, offset: 9472)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3067, file: !3068, line: 70, baseType: !281, size: 128, offset: 9600)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3067, file: !3068, line: 71, baseType: !281, size: 128, offset: 9728)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !3067, file: !3068, line: 72, baseType: !281, size: 128, offset: 9856)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !3067, file: !3068, line: 73, baseType: !281, size: 128, offset: 9984)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !3067, file: !3068, line: 74, baseType: !281, size: 128, offset: 10112)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3067, file: !3068, line: 75, baseType: !281, size: 128, offset: 10240)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3067, file: !3068, line: 76, baseType: !281, size: 128, offset: 10368)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !3067, file: !3068, line: 77, baseType: !281, size: 128, offset: 10496)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3067, file: !3068, line: 78, baseType: !281, size: 128, offset: 10624)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !3067, file: !3068, line: 79, baseType: !281, size: 128, offset: 10752)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !3067, file: !3068, line: 80, baseType: !281, size: 128, offset: 10880)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3067, file: !3068, line: 81, baseType: !281, size: 128, offset: 11008)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !3067, file: !3068, line: 82, baseType: !281, size: 128, offset: 11136)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !3067, file: !3068, line: 83, baseType: !281, size: 128, offset: 11264)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3067, file: !3068, line: 84, baseType: !281, size: 128, offset: 11392)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !3067, file: !3068, line: 85, baseType: !281, size: 128, offset: 11520)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3067, file: !3068, line: 86, baseType: !281, size: 128, offset: 11648)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3067, file: !3068, line: 87, baseType: !281, size: 128, offset: 11776)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !3067, file: !3068, line: 88, baseType: !281, size: 128, offset: 11904)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !3067, file: !3068, line: 89, baseType: !281, size: 128, offset: 12032)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !3067, file: !3068, line: 90, baseType: !281, size: 128, offset: 12160)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !3067, file: !3068, line: 91, baseType: !281, size: 128, offset: 12288)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3067, file: !3068, line: 92, baseType: !281, size: 128, offset: 12416)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !3067, file: !3068, line: 93, baseType: !281, size: 128, offset: 12544)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !3067, file: !3068, line: 94, baseType: !281, size: 128, offset: 12672)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3067, file: !3068, line: 95, baseType: !281, size: 128, offset: 12800)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !3067, file: !3068, line: 96, baseType: !281, size: 128, offset: 12928)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !3067, file: !3068, line: 98, baseType: !676, size: 2048, offset: 13056)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !3067, file: !3068, line: 101, baseType: !3118, size: 64, offset: 15104)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !42, line: 58, size: 32, elements: !3120)
!3120 = !{!3121}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3119, file: !42, line: 59, baseType: !7, size: 32)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3067, file: !3068, line: 103, baseType: !3123, size: 64, offset: 15168)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 64)
!3124 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !3068, line: 51, flags: DIFlagFwdDecl)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2993, file: !127, line: 191, baseType: !217, size: 64, offset: 8768)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2993, file: !127, line: 192, baseType: !3127, size: 31872, offset: 8832)
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderData", file: !6, line: 611, baseType: !2564)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "wrld", scope: !2993, file: !127, line: 193, baseType: !3129, size: 4224, offset: 40704)
!3129 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !2104, line: 131, baseType: !2103)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "camera_override", scope: !2993, file: !127, line: 194, baseType: !296, size: 64, offset: 44928)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2993, file: !127, line: 195, baseType: !43, size: 32, offset: 44992)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "layer_override", scope: !2993, file: !127, line: 195, baseType: !43, size: 32, offset: 45024)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !2993, file: !127, line: 197, baseType: !281, size: 128, offset: 45056)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2993, file: !127, line: 200, baseType: !3135, size: 64, offset: 45184)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !3137, line: 102, size: 5696, elements: !3138)
!3137 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_engine.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3138 = !{!3139, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3196, !3197, !3198, !3211, !3212, !3213, !3214, !3215, !3216, !3217}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3136, file: !3137, line: 103, baseType: !3140, size: 64)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderEngineType", file: !3137, line: 100, baseType: !3142)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngineType", file: !3137, line: 81, size: 1856, elements: !3143)
!3143 = !{!3144, !3146, !3147, !3148, !3149, !3150, !3154, !3158, !3174, !3178, !3179, !3183}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3142, file: !3137, line: 82, baseType: !3145, size: 64)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3142, file: !3137, line: 82, baseType: !3145, size: 64, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3142, file: !3137, line: 85, baseType: !271, size: 512, offset: 128)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3142, file: !3137, line: 86, baseType: !271, size: 512, offset: 640)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3142, file: !3137, line: 87, baseType: !7, size: 32, offset: 1152)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !3142, file: !3137, line: 89, baseType: !3151, size: 64, offset: 1216)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{null, !3135, !3066, !646}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "render", scope: !3142, file: !3137, line: 90, baseType: !3155, size: 64, offset: 1280)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{null, !3135, !646}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !3142, file: !3137, line: 91, baseType: !3159, size: 64, offset: 1344)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = !DISubroutineType(types: !3161)
!3161 = !{null, !3135, !646, !296, !3162, !3163, !3162, !3162, !215}
!3162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3165)
!3165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakePixel", file: !3166, line: 51, size: 224, elements: !3167)
!3166 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_bake.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3167 = !{!3168, !3169, !3170, !3171, !3172, !3173}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "primitive_id", scope: !3165, file: !3166, line: 52, baseType: !7, size: 32)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3165, file: !3166, line: 53, baseType: !1144, size: 64, offset: 32)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "du_dx", scope: !3165, file: !3166, line: 54, baseType: !216, size: 32, offset: 96)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "du_dy", scope: !3165, file: !3166, line: 54, baseType: !216, size: 32, offset: 128)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "dv_dx", scope: !3165, file: !3166, line: 55, baseType: !216, size: 32, offset: 160)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "dv_dy", scope: !3165, file: !3166, line: 55, baseType: !216, size: 32, offset: 192)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "view_update", scope: !3142, file: !3137, line: 93, baseType: !3175, size: 64, offset: 1408)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3176 = !DISubroutineType(types: !3177)
!3177 = !{null, !3135, !884}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "view_draw", scope: !3142, file: !3137, line: 94, baseType: !3175, size: 64, offset: 1472)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "update_script_node", scope: !3142, file: !3137, line: 96, baseType: !3180, size: 64, offset: 1536)
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 64)
!3181 = !DISubroutineType(types: !3182)
!3182 = !{null, !3135, !661, !688}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3142, file: !3137, line: 99, baseType: !801, size: 256, offset: 1600)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !3136, file: !3137, line: 104, baseType: !215, size: 64, offset: 64)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3136, file: !3137, line: 106, baseType: !7, size: 32, offset: 128)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "camera_override", scope: !3136, file: !3137, line: 107, baseType: !296, size: 64, offset: 192)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "layer_override", scope: !3136, file: !3137, line: 108, baseType: !43, size: 32, offset: 256)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "tile_x", scope: !3136, file: !3137, line: 110, baseType: !7, size: 32, offset: 288)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "tile_y", scope: !3136, file: !3137, line: 111, baseType: !7, size: 32, offset: 320)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !3136, file: !3137, line: 113, baseType: !2996, size: 64, offset: 384)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !3136, file: !3137, line: 114, baseType: !281, size: 128, offset: 448)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !3136, file: !3137, line: 115, baseType: !3193, size: 4096, offset: 576)
!3193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 4096, elements: !3194)
!3194 = !{!3195}
!3195 = !DISubrange(count: 512)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "resolution_x", scope: !3136, file: !3137, line: 117, baseType: !7, size: 32, offset: 4672)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "resolution_y", scope: !3136, file: !3137, line: 117, baseType: !7, size: 32, offset: 4704)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3136, file: !3137, line: 119, baseType: !3199, size: 64, offset: 4736)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !49, line: 106, size: 320, elements: !3201)
!3201 = !{!3202, !3203, !3204, !3205, !3206, !3207}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3200, file: !49, line: 107, baseType: !281, size: 128)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !3200, file: !49, line: 108, baseType: !7, size: 32, offset: 128)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !3200, file: !49, line: 109, baseType: !7, size: 32, offset: 160)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3200, file: !49, line: 110, baseType: !7, size: 32, offset: 192)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3200, file: !49, line: 110, baseType: !7, size: 32, offset: 224)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !3200, file: !49, line: 111, baseType: !3208, size: 64, offset: 256)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 64)
!3209 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !3210, line: 69, flags: DIFlagFwdDecl)
!3210 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "update_flag", scope: !3136, file: !3137, line: 122, baseType: !7, size: 32, offset: 4800)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "job_update_flag", scope: !3136, file: !3137, line: 123, baseType: !7, size: 32, offset: 4832)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "last_viewplane", scope: !3136, file: !3137, line: 125, baseType: !1094, size: 128, offset: 4864)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "last_disprect", scope: !3136, file: !3137, line: 126, baseType: !969, size: 128, offset: 4992)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "last_viewmat", scope: !3136, file: !3137, line: 127, baseType: !1337, size: 512, offset: 5120)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "last_winx", scope: !3136, file: !3137, line: 128, baseType: !7, size: 32, offset: 5632)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "last_winy", scope: !3136, file: !3137, line: 128, baseType: !7, size: 32, offset: 5664)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !2993, file: !127, line: 203, baseType: !3219, size: 64, offset: 45248)
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!3220 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayObject", file: !127, line: 63, flags: DIFlagFwdDecl)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !2993, file: !127, line: 204, baseType: !3222, size: 64, offset: 45312)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayFace", file: !127, line: 64, flags: DIFlagFwdDecl)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !2993, file: !127, line: 205, baseType: !3225, size: 64, offset: 45376)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = !DICompositeType(tag: DW_TAG_structure_type, name: "VlakPrimitive", file: !127, line: 205, flags: DIFlagFwdDecl)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !2993, file: !127, line: 206, baseType: !216, size: 32, offset: 45440)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "occlusiontree", scope: !2993, file: !127, line: 209, baseType: !215, size: 64, offset: 45504)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "strandsurface", scope: !2993, file: !127, line: 210, baseType: !281, size: 128, offset: 45568)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_offs", scope: !2993, file: !127, line: 213, baseType: !216, size: 32, offset: 45696)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "field_offs", scope: !2993, file: !127, line: 213, baseType: !216, size: 32, offset: 45728)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !2993, file: !127, line: 216, baseType: !7, size: 32, offset: 45760)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2993, file: !127, line: 216, baseType: !7, size: 32, offset: 45792)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !2993, file: !127, line: 216, baseType: !7, size: 32, offset: 45824)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !2993, file: !127, line: 216, baseType: !7, size: 32, offset: 45856)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !2993, file: !127, line: 216, baseType: !7, size: 32, offset: 45888)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "sortedhalos", scope: !2993, file: !127, line: 217, baseType: !3238, size: 64, offset: 45952)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HaloRen", file: !127, line: 413, size: 1024, elements: !3241)
!3241 = !{!3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !3240, file: !127, line: 414, baseType: !255, size: 16)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !3240, file: !127, line: 414, baseType: !255, size: 16, offset: 16)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !3240, file: !127, line: 415, baseType: !216, size: 32, offset: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !3240, file: !127, line: 415, baseType: !216, size: 32, offset: 64)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !3240, file: !127, line: 415, baseType: !216, size: 32, offset: 96)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !3240, file: !127, line: 415, baseType: !216, size: 32, offset: 128)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "radsq", scope: !3240, file: !127, line: 415, baseType: !216, size: 32, offset: 160)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !3240, file: !127, line: 415, baseType: !216, size: 32, offset: 192)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "cos", scope: !3240, file: !127, line: 415, baseType: !216, size: 32, offset: 224)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3240, file: !127, line: 415, baseType: !358, size: 96, offset: 256)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3240, file: !127, line: 415, baseType: !358, size: 96, offset: 352)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "hard", scope: !3240, file: !127, line: 416, baseType: !216, size: 32, offset: 448)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3240, file: !127, line: 416, baseType: !216, size: 32, offset: 480)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3240, file: !127, line: 416, baseType: !216, size: 32, offset: 512)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3240, file: !127, line: 416, baseType: !216, size: 32, offset: 544)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "zs", scope: !3240, file: !127, line: 417, baseType: !7, size: 32, offset: 576)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "zd", scope: !3240, file: !127, line: 417, baseType: !7, size: 32, offset: 608)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "zBufDist", scope: !3240, file: !127, line: 418, baseType: !7, size: 32, offset: 640)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "starpoints", scope: !3240, file: !127, line: 419, baseType: !242, size: 8, offset: 672)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3240, file: !127, line: 419, baseType: !242, size: 8, offset: 680)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !3240, file: !127, line: 419, baseType: !242, size: 8, offset: 688)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3240, file: !127, line: 419, baseType: !242, size: 8, offset: 696)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !3240, file: !127, line: 420, baseType: !242, size: 8, offset: 704)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !3240, file: !127, line: 420, baseType: !242, size: 8, offset: 712)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3240, file: !127, line: 420, baseType: !242, size: 8, offset: 720)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !3240, file: !127, line: 421, baseType: !255, size: 16, offset: 736)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !3240, file: !127, line: 422, baseType: !216, size: 32, offset: 768)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !3240, file: !127, line: 423, baseType: !7, size: 32, offset: 800)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3240, file: !127, line: 424, baseType: !43, size: 32, offset: 832)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3240, file: !127, line: 425, baseType: !416, size: 64, offset: 896)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3240, file: !127, line: 426, baseType: !3273, size: 64, offset: 960)
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 64)
!3274 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !3275, line: 47, flags: DIFlagFwdDecl)
!3275 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "lights", scope: !2993, file: !127, line: 219, baseType: !281, size: 128, offset: 46016)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !2993, file: !127, line: 220, baseType: !281, size: 128, offset: 46144)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "objecttable", scope: !2993, file: !127, line: 222, baseType: !281, size: 128, offset: 46272)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "objectinstance", scope: !2993, file: !127, line: 224, baseType: !3280, size: 64, offset: 46400)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectInstanceRen", file: !127, line: 345, size: 2304, elements: !3282)
!3282 = !{!3283, !3284, !3285, !3464, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3479, !3489, !3490, !3491, !3492}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3281, file: !127, line: 346, baseType: !3280, size: 64)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3281, file: !127, line: 346, baseType: !3280, size: 64, offset: 64)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !3281, file: !127, line: 348, baseType: !3286, size: 64, offset: 128)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectRen", file: !127, line: 343, baseType: !3288)
!3288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectRen", file: !127, line: 315, size: 2240, elements: !3289)
!3289 = !{!3290, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3332, !3372, !3451, !3452, !3453, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3288, file: !127, line: 316, baseType: !3291, size: 64)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3288, size: 64)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3288, file: !127, line: 316, baseType: !3291, size: 64, offset: 64)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3288, file: !127, line: 317, baseType: !296, size: 64, offset: 128)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !3288, file: !127, line: 317, baseType: !296, size: 64, offset: 192)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "sce", scope: !3288, file: !127, line: 318, baseType: !646, size: 64, offset: 256)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3288, file: !127, line: 319, baseType: !7, size: 32, offset: 320)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !3288, file: !127, line: 319, baseType: !7, size: 32, offset: 352)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3288, file: !127, line: 319, baseType: !7, size: 32, offset: 384)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3288, file: !127, line: 319, baseType: !7, size: 32, offset: 416)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !3288, file: !127, line: 321, baseType: !3301, size: 192, offset: 448)
!3301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 192, elements: !3302)
!3302 = !{!876, !326}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3288, file: !127, line: 323, baseType: !7, size: 32, offset: 640)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !3288, file: !127, line: 323, baseType: !7, size: 32, offset: 672)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !3288, file: !127, line: 323, baseType: !7, size: 32, offset: 704)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !3288, file: !127, line: 323, baseType: !7, size: 32, offset: 736)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodeslen", scope: !3288, file: !127, line: 324, baseType: !7, size: 32, offset: 768)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodeslen", scope: !3288, file: !127, line: 324, baseType: !7, size: 32, offset: 800)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodeslen", scope: !3288, file: !127, line: 324, baseType: !7, size: 32, offset: 832)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "blohalen", scope: !3288, file: !127, line: 324, baseType: !7, size: 32, offset: 864)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodes", scope: !3288, file: !127, line: 325, baseType: !3312, size: 64, offset: 896)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertTableNode", file: !3314, line: 60, size: 448, elements: !3315)
!3314 = !DIFile(filename: "blender/source/blender/render/intern/include/renderdatabase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3315 = !{!3316, !3326, !3327, !3328, !3329, !3330, !3331}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3313, file: !3314, line: 61, baseType: !3317, size: 64)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertRen", file: !127, line: 372, size: 384, elements: !3319)
!3319 = !{!3320, !3321, !3322, !3323, !3324, !3325}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3318, file: !127, line: 373, baseType: !358, size: 96)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !3318, file: !127, line: 374, baseType: !358, size: 96, offset: 96)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !3318, file: !127, line: 375, baseType: !778, size: 64, offset: 192)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3318, file: !127, line: 376, baseType: !43, size: 32, offset: 256)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "accum", scope: !3318, file: !127, line: 378, baseType: !216, size: 32, offset: 288)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3318, file: !127, line: 379, baseType: !7, size: 32, offset: 320)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !3313, file: !3314, line: 62, baseType: !778, size: 64, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !3313, file: !3314, line: 63, baseType: !778, size: 64, offset: 128)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !3313, file: !3314, line: 64, baseType: !778, size: 64, offset: 192)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !3313, file: !3314, line: 65, baseType: !778, size: 64, offset: 256)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !3313, file: !3314, line: 66, baseType: !778, size: 64, offset: 320)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !3313, file: !3314, line: 68, baseType: !933, size: 64, offset: 384)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodes", scope: !3288, file: !127, line: 326, baseType: !3333, size: 64, offset: 960)
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3334, size: 64)
!3334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakTableNode", file: !3314, line: 71, size: 512, elements: !3335)
!3335 = !{!3336, !3350, !3353, !3356, !3357, !3358, !3359, !3360, !3361}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "vlak", scope: !3334, file: !3314, line: 72, baseType: !3337, size: 64)
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 64)
!3338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakRen", file: !127, line: 400, size: 512, elements: !3339)
!3339 = !{!3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3338, file: !127, line: 401, baseType: !3317, size: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3338, file: !127, line: 401, baseType: !3317, size: 64, offset: 64)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3338, file: !127, line: 401, baseType: !3317, size: 64, offset: 128)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3338, file: !127, line: 401, baseType: !3317, size: 64, offset: 192)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !3338, file: !127, line: 402, baseType: !358, size: 96, offset: 256)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3338, file: !127, line: 403, baseType: !416, size: 64, offset: 384)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !3338, file: !127, line: 404, baseType: !242, size: 8, offset: 448)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3338, file: !127, line: 405, baseType: !242, size: 8, offset: 456)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !3338, file: !127, line: 405, baseType: !242, size: 8, offset: 464)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3338, file: !127, line: 410, baseType: !7, size: 32, offset: 480)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !3334, file: !3314, line: 73, baseType: !3351, size: 64, offset: 64)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !127, line: 391, flags: DIFlagFwdDecl)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !3334, file: !3314, line: 74, baseType: !3354, size: 64, offset: 128)
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3355, size: 64)
!3355 = !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !3314, line: 47, flags: DIFlagFwdDecl)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !3334, file: !3314, line: 76, baseType: !933, size: 64, offset: 192)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "totmtface", scope: !3334, file: !3314, line: 77, baseType: !7, size: 32, offset: 256)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !3334, file: !3314, line: 77, baseType: !7, size: 32, offset: 288)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !3334, file: !3314, line: 78, baseType: !778, size: 64, offset: 320)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !3334, file: !3314, line: 79, baseType: !778, size: 64, offset: 384)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "radface", scope: !3334, file: !3314, line: 80, baseType: !3362, size: 64, offset: 448)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3364, size: 64)
!3364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RadFace", file: !127, line: 394, size: 448, elements: !3365)
!3365 = !{!3366, !3367, !3368, !3369, !3370, !3371}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "unshot", scope: !3364, file: !127, line: 395, baseType: !358, size: 96)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "totrad", scope: !3364, file: !127, line: 395, baseType: !358, size: 96, offset: 96)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "norm", scope: !3364, file: !127, line: 396, baseType: !358, size: 96, offset: 192)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "cent", scope: !3364, file: !127, line: 396, baseType: !358, size: 96, offset: 288)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !3364, file: !127, line: 396, baseType: !216, size: 32, offset: 384)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3364, file: !127, line: 397, baseType: !7, size: 32, offset: 416)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodes", scope: !3288, file: !127, line: 327, baseType: !3373, size: 64, offset: 1024)
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 64)
!3374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandTableNode", file: !3314, line: 83, size: 512, elements: !3375)
!3375 = !{!3376, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !3374, file: !3314, line: 84, baseType: !3377, size: 64)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 64)
!3378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandRen", file: !127, line: 475, size: 384, elements: !3379)
!3379 = !{!3380, !3387, !3438, !3439, !3440, !3441, !3442}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3378, file: !127, line: 476, baseType: !3381, size: 64)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandVert", file: !127, line: 434, baseType: !3383)
!3383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandVert", file: !127, line: 431, size: 128, elements: !3384)
!3384 = !{!3385, !3386}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3383, file: !127, line: 432, baseType: !358, size: 96)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !3383, file: !127, line: 433, baseType: !216, size: 32, offset: 96)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !3378, file: !127, line: 477, baseType: !3388, size: 64, offset: 64)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandBuffer", file: !127, line: 473, baseType: !3390)
!3390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBuffer", file: !127, line: 455, size: 1344, elements: !3391)
!3391 = !{!3392, !3394, !3395, !3397, !3404, !3405, !3406, !3407, !3408, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3390, file: !127, line: 456, baseType: !3393, size: 64)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3390, size: 64)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3390, file: !127, line: 456, baseType: !3393, size: 64, offset: 64)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3390, file: !127, line: 457, baseType: !3396, size: 64, offset: 128)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !3390, file: !127, line: 458, baseType: !3398, size: 64, offset: 192)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBound", file: !127, line: 450, size: 256, elements: !3400)
!3400 = !{!3401, !3402, !3403}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3399, file: !127, line: 451, baseType: !7, size: 32)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3399, file: !127, line: 451, baseType: !7, size: 32, offset: 32)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !3399, file: !127, line: 452, baseType: !3301, size: 192, offset: 64)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3390, file: !127, line: 459, baseType: !7, size: 32, offset: 256)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "totbound", scope: !3390, file: !127, line: 459, baseType: !7, size: 32, offset: 288)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !3390, file: !127, line: 461, baseType: !3291, size: 64, offset: 320)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !3390, file: !127, line: 462, baseType: !416, size: 64, offset: 384)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "surface", scope: !3390, file: !127, line: 463, baseType: !3409, size: 64, offset: 448)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandSurface", file: !127, line: 436, size: 2880, elements: !3411)
!3411 = !{!3412, !3413, !3414, !3415, !3418, !3420, !3421, !3422, !3423, !3424, !3425, !3426}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3410, file: !127, line: 437, baseType: !3409, size: 64)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3410, file: !127, line: 437, baseType: !3409, size: 64, offset: 64)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !3410, file: !127, line: 438, baseType: !3287, size: 2240, offset: 128)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !3410, file: !127, line: 439, baseType: !3416, size: 64, offset: 2368)
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !535)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3410, file: !127, line: 440, baseType: !3419, size: 64, offset: 2432)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !3410, file: !127, line: 442, baseType: !3419, size: 64, offset: 2496)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !3410, file: !127, line: 443, baseType: !3419, size: 64, offset: 2560)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !3410, file: !127, line: 444, baseType: !3419, size: 64, offset: 2624)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "prevco", scope: !3410, file: !127, line: 446, baseType: !3419, size: 64, offset: 2688)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "nextco", scope: !3410, file: !127, line: 446, baseType: !3419, size: 64, offset: 2752)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3410, file: !127, line: 447, baseType: !7, size: 32, offset: 2816)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3410, file: !127, line: 447, baseType: !7, size: 32, offset: 2848)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3390, file: !127, line: 464, baseType: !43, size: 32, offset: 512)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "overrideuv", scope: !3390, file: !127, line: 465, baseType: !7, size: 32, offset: 544)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3390, file: !127, line: 466, baseType: !7, size: 32, offset: 576)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "maxdepth", scope: !3390, file: !127, line: 466, baseType: !7, size: 32, offset: 608)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "adaptcos", scope: !3390, file: !127, line: 467, baseType: !216, size: 32, offset: 640)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !3390, file: !127, line: 467, baseType: !216, size: 32, offset: 672)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "widthfade", scope: !3390, file: !127, line: 467, baseType: !216, size: 32, offset: 704)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !3390, file: !127, line: 469, baseType: !216, size: 32, offset: 736)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !3390, file: !127, line: 471, baseType: !1337, size: 512, offset: 768)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3390, file: !127, line: 472, baseType: !7, size: 32, offset: 1280)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3390, file: !127, line: 472, baseType: !7, size: 32, offset: 1312)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3378, file: !127, line: 478, baseType: !7, size: 32, offset: 128)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3378, file: !127, line: 478, baseType: !7, size: 32, offset: 160)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !3378, file: !127, line: 479, baseType: !7, size: 32, offset: 192)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3378, file: !127, line: 479, baseType: !7, size: 32, offset: 224)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !3378, file: !127, line: 480, baseType: !358, size: 96, offset: 256)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !3374, file: !3314, line: 85, baseType: !778, size: 64, offset: 64)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !3374, file: !3314, line: 86, baseType: !778, size: 64, offset: 128)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "simplify", scope: !3374, file: !3314, line: 87, baseType: !778, size: 64, offset: 192)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !3374, file: !3314, line: 88, baseType: !933, size: 64, offset: 256)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !3374, file: !3314, line: 89, baseType: !3354, size: 64, offset: 320)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3374, file: !3314, line: 90, baseType: !778, size: 64, offset: 384)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !3374, file: !3314, line: 91, baseType: !7, size: 32, offset: 448)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !3374, file: !3314, line: 91, baseType: !7, size: 32, offset: 480)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "bloha", scope: !3288, file: !127, line: 328, baseType: !3238, size: 64, offset: 1088)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "strandbuf", scope: !3288, file: !127, line: 329, baseType: !3393, size: 64, offset: 1152)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !3288, file: !127, line: 331, baseType: !3454, size: 64, offset: 1216)
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !3288, file: !127, line: 332, baseType: !3454, size: 64, offset: 1280)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "actmtface", scope: !3288, file: !127, line: 333, baseType: !7, size: 32, offset: 1344)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "actmcol", scope: !3288, file: !127, line: 333, baseType: !7, size: 32, offset: 1376)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "bakemtface", scope: !3288, file: !127, line: 333, baseType: !7, size: 32, offset: 1408)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !3288, file: !127, line: 335, baseType: !1337, size: 512, offset: 1440)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !3288, file: !127, line: 338, baseType: !3219, size: 64, offset: 1984)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !3288, file: !127, line: 339, baseType: !3222, size: 64, offset: 2048)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !3288, file: !127, line: 340, baseType: !3225, size: 64, offset: 2112)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "rayobi", scope: !3288, file: !127, line: 341, baseType: !3280, size: 64, offset: 2176)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3281, file: !127, line: 349, baseType: !3465, size: 64, offset: 192)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !61, line: 295, baseType: !297)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !3281, file: !127, line: 349, baseType: !3465, size: 64, offset: 256)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3281, file: !127, line: 350, baseType: !7, size: 32, offset: 320)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !3281, file: !127, line: 350, baseType: !7, size: 32, offset: 352)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3281, file: !127, line: 350, baseType: !7, size: 32, offset: 384)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3281, file: !127, line: 352, baseType: !1337, size: 512, offset: 416)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3281, file: !127, line: 352, baseType: !1337, size: 512, offset: 928)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "nmat", scope: !3281, file: !127, line: 353, baseType: !1340, size: 288, offset: 1440)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3281, file: !127, line: 354, baseType: !255, size: 16, offset: 1728)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "dupliorco", scope: !3281, file: !127, line: 356, baseType: !358, size: 96, offset: 1760)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !3281, file: !127, line: 356, baseType: !1144, size: 64, offset: 1856)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "duplitexmat", scope: !3281, file: !127, line: 357, baseType: !3478, size: 64, offset: 1920)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "volume_precache", scope: !3281, file: !127, line: 359, baseType: !3480, size: 64, offset: 1984)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumePrecache", file: !127, line: 513, size: 448, elements: !3482)
!3482 = !{!3483, !3484, !3485, !3486, !3487, !3488}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !3481, file: !127, line: 514, baseType: !1428, size: 96)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "bbmin", scope: !3481, file: !127, line: 515, baseType: !778, size: 64, offset: 128)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "bbmax", scope: !3481, file: !127, line: 515, baseType: !778, size: 64, offset: 192)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !3481, file: !127, line: 516, baseType: !778, size: 64, offset: 256)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !3481, file: !127, line: 517, baseType: !778, size: 64, offset: 320)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !3481, file: !127, line: 518, baseType: !778, size: 64, offset: 384)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "vectors", scope: !3281, file: !127, line: 361, baseType: !778, size: 64, offset: 2048)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "totvector", scope: !3281, file: !127, line: 362, baseType: !7, size: 32, offset: 2112)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !3281, file: !127, line: 365, baseType: !3219, size: 64, offset: 2176)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "transform_primitives", scope: !3281, file: !127, line: 366, baseType: !7, size: 32, offset: 2240)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "instancetable", scope: !2993, file: !127, line: 225, baseType: !281, size: 128, offset: 46464)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "totinstance", scope: !2993, file: !127, line: 226, baseType: !7, size: 32, offset: 46592)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "bakebuf", scope: !2993, file: !127, line: 228, baseType: !1194, size: 64, offset: 46656)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "orco_hash", scope: !2993, file: !127, line: 230, baseType: !350, size: 64, offset: 46720)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "sss_hash", scope: !2993, file: !127, line: 232, baseType: !350, size: 64, offset: 46784)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "sss_points", scope: !2993, file: !127, line: 233, baseType: !2078, size: 64, offset: 46848)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "sss_mat", scope: !2993, file: !127, line: 234, baseType: !416, size: 64, offset: 46912)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_names", scope: !2993, file: !127, line: 236, baseType: !281, size: 128, offset: 46976)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "excludeob", scope: !2993, file: !127, line: 238, baseType: !296, size: 64, offset: 47104)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "render_volumes_inside", scope: !2993, file: !127, line: 239, baseType: !281, size: 128, offset: 47168)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "volumes", scope: !2993, file: !127, line: 240, baseType: !281, size: 128, offset: 47296)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "memArena", scope: !2993, file: !127, line: 250, baseType: !3505, size: 64, offset: 47424)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !127, line: 57, flags: DIFlagFwdDecl)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "display_init", scope: !2993, file: !127, line: 253, baseType: !3508, size: 64, offset: 47488)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DISubroutineType(types: !3510)
!3510 = !{null, !215, !3006}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "dih", scope: !2993, file: !127, line: 254, baseType: !215, size: 64, offset: 47552)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "display_clear", scope: !2993, file: !127, line: 255, baseType: !3508, size: 64, offset: 47616)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "dch", scope: !2993, file: !127, line: 256, baseType: !215, size: 64, offset: 47680)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "display_update", scope: !2993, file: !127, line: 257, baseType: !3515, size: 64, offset: 47744)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{null, !215, !3006, !3518}
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "duh", scope: !2993, file: !127, line: 258, baseType: !215, size: 64, offset: 47808)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "current_scene_update", scope: !2993, file: !127, line: 259, baseType: !3521, size: 64, offset: 47872)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{null, !215, !646}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "suh", scope: !2993, file: !127, line: 260, baseType: !215, size: 64, offset: 47936)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !2993, file: !127, line: 262, baseType: !3526, size: 64, offset: 48000)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{null, !215, !3529}
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 64)
!3530 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderStats", file: !1211, line: 160, baseType: !3531)
!3531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderStats", file: !1211, line: 151, size: 1216, elements: !3532)
!3532 = !{!3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553}
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !3531, file: !1211, line: 152, baseType: !7, size: 32)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3531, file: !1211, line: 153, baseType: !7, size: 32, offset: 32)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3531, file: !1211, line: 153, baseType: !7, size: 32, offset: 64)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !3531, file: !1211, line: 153, baseType: !7, size: 32, offset: 96)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !3531, file: !1211, line: 153, baseType: !7, size: 32, offset: 128)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !3531, file: !1211, line: 153, baseType: !7, size: 32, offset: 160)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !3531, file: !1211, line: 153, baseType: !7, size: 32, offset: 192)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "curfield", scope: !3531, file: !1211, line: 154, baseType: !255, size: 16, offset: 224)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "curblur", scope: !3531, file: !1211, line: 154, baseType: !255, size: 16, offset: 240)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "curpart", scope: !3531, file: !1211, line: 154, baseType: !255, size: 16, offset: 256)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "partsdone", scope: !3531, file: !1211, line: 154, baseType: !255, size: 16, offset: 272)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "convertdone", scope: !3531, file: !1211, line: 154, baseType: !255, size: 16, offset: 288)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "curfsa", scope: !3531, file: !1211, line: 154, baseType: !255, size: 16, offset: 304)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "localview", scope: !3531, file: !1211, line: 155, baseType: !916, size: 8, offset: 320)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "starttime", scope: !3531, file: !1211, line: 156, baseType: !925, size: 64, offset: 384)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "lastframetime", scope: !3531, file: !1211, line: 156, baseType: !925, size: 64, offset: 448)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "infostr", scope: !3531, file: !1211, line: 157, baseType: !772, size: 64, offset: 512)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "statstr", scope: !3531, file: !1211, line: 157, baseType: !772, size: 64, offset: 576)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "scene_name", scope: !3531, file: !1211, line: 158, baseType: !271, size: 512, offset: 640)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !3531, file: !1211, line: 159, baseType: !216, size: 32, offset: 1152)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "mem_peak", scope: !3531, file: !1211, line: 159, baseType: !216, size: 32, offset: 1184)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !2993, file: !127, line: 263, baseType: !215, size: 64, offset: 48064)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !2993, file: !127, line: 264, baseType: !1176, size: 64, offset: 48128)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !2993, file: !127, line: 265, baseType: !215, size: 64, offset: 48192)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "draw_lock", scope: !2993, file: !127, line: 267, baseType: !3558, size: 64, offset: 48256)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{null, !215, !7}
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "dlh", scope: !2993, file: !127, line: 268, baseType: !215, size: 64, offset: 48320)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !2993, file: !127, line: 269, baseType: !1184, size: 64, offset: 48384)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !2993, file: !127, line: 270, baseType: !215, size: 64, offset: 48448)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2993, file: !127, line: 272, baseType: !3530, size: 1216, offset: 48512)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !2993, file: !127, line: 274, baseType: !3199, size: 64, offset: 49728)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2993, file: !127, line: 276, baseType: !3273, size: 64, offset: 49792)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !2993, file: !127, line: 277, baseType: !3118, size: 64, offset: 49856)
!3568 = !DIGlobalVariableExpression(var: !3569, expr: !DIExpression())
!3569 = distinct !DIGlobalVariable(name: "g_break", scope: !2, file: !3, line: 137, type: !3570, isLocal: true, isDefinition: true)
!3570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!3571 = !DIGlobalVariableExpression(var: !3572, expr: !DIExpression())
!3572 = distinct !DIGlobalVariable(name: "recurs_depth", scope: !3573, file: !3, line: 2372, type: !7, isLocal: true, isDefinition: true)
!3573 = distinct !DISubprogram(name: "do_render_seq", scope: !3, file: !3, line: 2370, type: !3574, scopeLine: 2371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{null, !3576}
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!3577 = !{}
!3578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 126, size: 128, elements: !3579)
!3579 = !{!3580}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "renderlist", scope: !3578, file: !3, line: 127, baseType: !281, size: 128)
!3581 = !{i32 7, !"Dwarf Version", i32 4}
!3582 = !{i32 2, !"Debug Info Version", i32 3}
!3583 = !{i32 1, !"wchar_size", i32 4}
!3584 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3585 = distinct !DISubprogram(name: "RE_FreeRenderResult", scope: !3, file: !3, line: 189, type: !3586, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{null, !3006}
!3588 = !DILocalVariable(name: "res", arg: 1, scope: !3585, file: !3, line: 189, type: !3006)
!3589 = !DILocation(line: 189, column: 40, scope: !3585)
!3590 = !DILocation(line: 191, column: 21, scope: !3585)
!3591 = !DILocation(line: 191, column: 2, scope: !3585)
!3592 = !DILocation(line: 192, column: 1, scope: !3585)
!3593 = distinct !DISubprogram(name: "RE_RenderLayerGetPass", scope: !3, file: !3, line: 194, type: !3594, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!778, !3596, !7}
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!3597 = !DILocalVariable(name: "rl", arg: 1, scope: !3593, file: !3, line: 194, type: !3596)
!3598 = !DILocation(line: 194, column: 43, scope: !3593)
!3599 = !DILocalVariable(name: "passtype", arg: 2, scope: !3593, file: !3, line: 194, type: !7)
!3600 = !DILocation(line: 194, column: 51, scope: !3593)
!3601 = !DILocalVariable(name: "rpass", scope: !3593, file: !3, line: 196, type: !3602)
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3603, size: 64)
!3603 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderPass", file: !1211, line: 76, baseType: !3604)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderPass", file: !1211, line: 68, size: 960, elements: !3605)
!3605 = !{!3606, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3604, file: !1211, line: 69, baseType: !3607, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3604, file: !1211, line: 69, baseType: !3607, size: 64, offset: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "passtype", scope: !3604, file: !1211, line: 70, baseType: !7, size: 32, offset: 128)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !3604, file: !1211, line: 70, baseType: !7, size: 32, offset: 160)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3604, file: !1211, line: 71, baseType: !271, size: 512, offset: 192)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "chan_id", scope: !3604, file: !1211, line: 72, baseType: !2491, size: 64, offset: 704)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !3604, file: !1211, line: 73, baseType: !778, size: 64, offset: 768)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !3604, file: !1211, line: 74, baseType: !7, size: 32, offset: 832)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !3604, file: !1211, line: 74, baseType: !7, size: 32, offset: 864)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "debug_type", scope: !3604, file: !1211, line: 75, baseType: !7, size: 32, offset: 896)
!3617 = !DILocation(line: 196, column: 14, scope: !3593)
!3618 = !DILocation(line: 198, column: 15, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 198, column: 2)
!3620 = !DILocation(line: 198, column: 19, scope: !3619)
!3621 = !DILocation(line: 198, column: 26, scope: !3619)
!3622 = !DILocation(line: 198, column: 13, scope: !3619)
!3623 = !DILocation(line: 198, column: 7, scope: !3619)
!3624 = !DILocation(line: 198, column: 33, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 198, column: 2)
!3626 = !DILocation(line: 198, column: 2, scope: !3619)
!3627 = !DILocation(line: 199, column: 7, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 199, column: 7)
!3629 = !DILocation(line: 199, column: 14, scope: !3628)
!3630 = !DILocation(line: 199, column: 26, scope: !3628)
!3631 = !DILocation(line: 199, column: 23, scope: !3628)
!3632 = !DILocation(line: 199, column: 7, scope: !3625)
!3633 = !DILocation(line: 200, column: 11, scope: !3628)
!3634 = !DILocation(line: 200, column: 18, scope: !3628)
!3635 = !DILocation(line: 200, column: 4, scope: !3628)
!3636 = !DILocation(line: 198, column: 48, scope: !3625)
!3637 = !DILocation(line: 198, column: 55, scope: !3625)
!3638 = !DILocation(line: 198, column: 46, scope: !3625)
!3639 = !DILocation(line: 198, column: 2, scope: !3625)
!3640 = distinct !{!3640, !3626, !3641}
!3641 = !DILocation(line: 200, column: 18, scope: !3619)
!3642 = !DILocation(line: 201, column: 2, scope: !3593)
!3643 = !DILocation(line: 202, column: 1, scope: !3593)
!3644 = distinct !DISubprogram(name: "RE_GetRenderLayer", scope: !3, file: !3, line: 204, type: !3645, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{!1235, !3006, !772}
!3647 = !DILocalVariable(name: "rr", arg: 1, scope: !3644, file: !3, line: 204, type: !3006)
!3648 = !DILocation(line: 204, column: 46, scope: !3644)
!3649 = !DILocalVariable(name: "name", arg: 2, scope: !3644, file: !3, line: 204, type: !772)
!3650 = !DILocation(line: 204, column: 62, scope: !3644)
!3651 = !DILocation(line: 206, column: 6, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3644, file: !3, line: 206, column: 6)
!3653 = !DILocation(line: 206, column: 9, scope: !3652)
!3654 = !DILocation(line: 206, column: 6, scope: !3644)
!3655 = !DILocation(line: 207, column: 3, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3652, file: !3, line: 206, column: 18)
!3657 = !DILocation(line: 210, column: 26, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3652, file: !3, line: 209, column: 7)
!3659 = !DILocation(line: 210, column: 30, scope: !3658)
!3660 = !DILocation(line: 210, column: 38, scope: !3658)
!3661 = !DILocation(line: 210, column: 10, scope: !3658)
!3662 = !DILocation(line: 210, column: 3, scope: !3658)
!3663 = !DILocation(line: 212, column: 1, scope: !3644)
!3664 = distinct !DISubprogram(name: "RE_MultilayerConvert", scope: !3, file: !3, line: 214, type: !3665, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{!1209, !215, !772, !916, !7, !7}
!3667 = !DILocalVariable(name: "exrhandle", arg: 1, scope: !3664, file: !3, line: 214, type: !215)
!3668 = !DILocation(line: 214, column: 42, scope: !3664)
!3669 = !DILocalVariable(name: "colorspace", arg: 2, scope: !3664, file: !3, line: 214, type: !772)
!3670 = !DILocation(line: 214, column: 65, scope: !3664)
!3671 = !DILocalVariable(name: "predivide", arg: 3, scope: !3664, file: !3, line: 214, type: !916)
!3672 = !DILocation(line: 214, column: 82, scope: !3664)
!3673 = !DILocalVariable(name: "rectx", arg: 4, scope: !3664, file: !3, line: 214, type: !7)
!3674 = !DILocation(line: 214, column: 97, scope: !3664)
!3675 = !DILocalVariable(name: "recty", arg: 5, scope: !3664, file: !3, line: 214, type: !7)
!3676 = !DILocation(line: 214, column: 108, scope: !3664)
!3677 = !DILocation(line: 216, column: 36, scope: !3664)
!3678 = !DILocation(line: 216, column: 47, scope: !3664)
!3679 = !DILocation(line: 216, column: 59, scope: !3664)
!3680 = !DILocation(line: 216, column: 70, scope: !3664)
!3681 = !DILocation(line: 216, column: 77, scope: !3664)
!3682 = !DILocation(line: 216, column: 9, scope: !3664)
!3683 = !DILocation(line: 216, column: 2, scope: !3664)
!3684 = distinct !DISubprogram(name: "render_get_active_layer", scope: !3, file: !3, line: 219, type: !3685, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3685 = !DISubroutineType(types: !3686)
!3686 = !{!1235, !3576, !3006}
!3687 = !DILocalVariable(name: "re", arg: 1, scope: !3684, file: !3, line: 219, type: !3576)
!3688 = !DILocation(line: 219, column: 46, scope: !3684)
!3689 = !DILocalVariable(name: "rr", arg: 2, scope: !3684, file: !3, line: 219, type: !3006)
!3690 = !DILocation(line: 219, column: 64, scope: !3684)
!3691 = !DILocalVariable(name: "rl", scope: !3684, file: !3, line: 221, type: !3596)
!3692 = !DILocation(line: 221, column: 15, scope: !3684)
!3693 = !DILocation(line: 221, column: 34, scope: !3684)
!3694 = !DILocation(line: 221, column: 38, scope: !3684)
!3695 = !DILocation(line: 221, column: 46, scope: !3684)
!3696 = !DILocation(line: 221, column: 50, scope: !3684)
!3697 = !DILocation(line: 221, column: 52, scope: !3684)
!3698 = !DILocation(line: 221, column: 20, scope: !3684)
!3699 = !DILocation(line: 223, column: 6, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3684, file: !3, line: 223, column: 6)
!3701 = !DILocation(line: 223, column: 6, scope: !3684)
!3702 = !DILocation(line: 224, column: 10, scope: !3700)
!3703 = !DILocation(line: 224, column: 3, scope: !3700)
!3704 = !DILocation(line: 226, column: 10, scope: !3700)
!3705 = !DILocation(line: 226, column: 14, scope: !3700)
!3706 = !DILocation(line: 226, column: 21, scope: !3700)
!3707 = !DILocation(line: 226, column: 3, scope: !3700)
!3708 = !DILocation(line: 227, column: 1, scope: !3684)
!3709 = distinct !DISubprogram(name: "RE_GetRender", scope: !3, file: !3, line: 254, type: !3710, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3710 = !DISubroutineType(types: !3711)
!3711 = !{!2996, !772}
!3712 = !DILocalVariable(name: "name", arg: 1, scope: !3709, file: !3, line: 254, type: !772)
!3713 = !DILocation(line: 254, column: 34, scope: !3709)
!3714 = !DILocalVariable(name: "re", scope: !3709, file: !3, line: 256, type: !3576)
!3715 = !DILocation(line: 256, column: 10, scope: !3709)
!3716 = !DILocation(line: 259, column: 36, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 259, column: 2)
!3718 = !DILocation(line: 259, column: 12, scope: !3717)
!3719 = !DILocation(line: 259, column: 10, scope: !3717)
!3720 = !DILocation(line: 259, column: 7, scope: !3717)
!3721 = !DILocation(line: 259, column: 43, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 259, column: 2)
!3723 = !DILocation(line: 259, column: 2, scope: !3717)
!3724 = !DILocation(line: 260, column: 15, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 260, column: 7)
!3726 = !DILocation(line: 260, column: 19, scope: !3725)
!3727 = !DILocation(line: 260, column: 25, scope: !3725)
!3728 = !DILocation(line: 260, column: 7, scope: !3725)
!3729 = !DILocation(line: 260, column: 43, scope: !3725)
!3730 = !DILocation(line: 260, column: 7, scope: !3722)
!3731 = !DILocation(line: 261, column: 4, scope: !3725)
!3732 = !DILocation(line: 260, column: 46, scope: !3725)
!3733 = !DILocation(line: 259, column: 52, scope: !3722)
!3734 = !DILocation(line: 259, column: 56, scope: !3722)
!3735 = !DILocation(line: 259, column: 50, scope: !3722)
!3736 = !DILocation(line: 259, column: 2, scope: !3722)
!3737 = distinct !{!3737, !3723, !3738}
!3738 = !DILocation(line: 261, column: 4, scope: !3717)
!3739 = !DILocation(line: 263, column: 9, scope: !3709)
!3740 = !DILocation(line: 263, column: 2, scope: !3709)
!3741 = distinct !DISubprogram(name: "RE_AcquireResultRead", scope: !3, file: !3, line: 268, type: !3742, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3742 = !DISubroutineType(types: !3743)
!3743 = !{!1209, !3576}
!3744 = !DILocalVariable(name: "re", arg: 1, scope: !3741, file: !3, line: 268, type: !3576)
!3745 = !DILocation(line: 268, column: 44, scope: !3741)
!3746 = !DILocation(line: 270, column: 6, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3741, file: !3, line: 270, column: 6)
!3748 = !DILocation(line: 270, column: 6, scope: !3741)
!3749 = !DILocation(line: 271, column: 22, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3747, file: !3, line: 270, column: 10)
!3751 = !DILocation(line: 271, column: 26, scope: !3750)
!3752 = !DILocation(line: 271, column: 3, scope: !3750)
!3753 = !DILocation(line: 272, column: 10, scope: !3750)
!3754 = !DILocation(line: 272, column: 14, scope: !3750)
!3755 = !DILocation(line: 272, column: 3, scope: !3750)
!3756 = !DILocation(line: 275, column: 2, scope: !3741)
!3757 = !DILocation(line: 276, column: 1, scope: !3741)
!3758 = distinct !DISubprogram(name: "RE_AcquireResultWrite", scope: !3, file: !3, line: 278, type: !3742, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3759 = !DILocalVariable(name: "re", arg: 1, scope: !3758, file: !3, line: 278, type: !3576)
!3760 = !DILocation(line: 278, column: 45, scope: !3758)
!3761 = !DILocation(line: 280, column: 6, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 280, column: 6)
!3763 = !DILocation(line: 280, column: 6, scope: !3758)
!3764 = !DILocation(line: 281, column: 22, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 280, column: 10)
!3766 = !DILocation(line: 281, column: 26, scope: !3765)
!3767 = !DILocation(line: 281, column: 3, scope: !3765)
!3768 = !DILocation(line: 282, column: 10, scope: !3765)
!3769 = !DILocation(line: 282, column: 14, scope: !3765)
!3770 = !DILocation(line: 282, column: 3, scope: !3765)
!3771 = !DILocation(line: 285, column: 2, scope: !3758)
!3772 = !DILocation(line: 286, column: 1, scope: !3758)
!3773 = distinct !DISubprogram(name: "RE_SwapResult", scope: !3, file: !3, line: 288, type: !3774, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{null, !3576, !3776}
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3777 = !DILocalVariable(name: "re", arg: 1, scope: !3773, file: !3, line: 288, type: !3576)
!3778 = !DILocation(line: 288, column: 28, scope: !3773)
!3779 = !DILocalVariable(name: "rr", arg: 2, scope: !3773, file: !3, line: 288, type: !3776)
!3780 = !DILocation(line: 288, column: 47, scope: !3773)
!3781 = !DILocation(line: 291, column: 6, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 291, column: 6)
!3783 = !DILocation(line: 291, column: 6, scope: !3773)
!3784 = !DILocalVariable(name: "sw_ap", scope: !3785, file: !3, line: 292, type: !3006)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !3, line: 292, column: 3)
!3786 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 291, column: 10)
!3787 = !DILocation(line: 292, column: 3, scope: !3785)
!3788 = !DILocation(line: 293, column: 2, scope: !3786)
!3789 = !DILocation(line: 294, column: 1, scope: !3773)
!3790 = distinct !DISubprogram(name: "RE_ReleaseResult", scope: !3, file: !3, line: 297, type: !3574, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3791 = !DILocalVariable(name: "re", arg: 1, scope: !3790, file: !3, line: 297, type: !3576)
!3792 = !DILocation(line: 297, column: 31, scope: !3790)
!3793 = !DILocation(line: 299, column: 6, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 299, column: 6)
!3795 = !DILocation(line: 299, column: 6, scope: !3790)
!3796 = !DILocation(line: 300, column: 24, scope: !3794)
!3797 = !DILocation(line: 300, column: 28, scope: !3794)
!3798 = !DILocation(line: 300, column: 3, scope: !3794)
!3799 = !DILocation(line: 301, column: 1, scope: !3790)
!3800 = distinct !DISubprogram(name: "RE_GetScene", scope: !3, file: !3, line: 304, type: !3801, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{!646, !3576}
!3803 = !DILocalVariable(name: "re", arg: 1, scope: !3800, file: !3, line: 304, type: !3576)
!3804 = !DILocation(line: 304, column: 28, scope: !3800)
!3805 = !DILocation(line: 306, column: 6, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 306, column: 6)
!3807 = !DILocation(line: 306, column: 6, scope: !3800)
!3808 = !DILocation(line: 307, column: 10, scope: !3806)
!3809 = !DILocation(line: 307, column: 14, scope: !3806)
!3810 = !DILocation(line: 307, column: 3, scope: !3806)
!3811 = !DILocation(line: 308, column: 2, scope: !3800)
!3812 = !DILocation(line: 309, column: 1, scope: !3800)
!3813 = distinct !DISubprogram(name: "RE_AcquireResultImage", scope: !3, file: !3, line: 312, type: !3814, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{null, !3576, !3006}
!3816 = !DILocalVariable(name: "re", arg: 1, scope: !3813, file: !3, line: 312, type: !3576)
!3817 = !DILocation(line: 312, column: 36, scope: !3813)
!3818 = !DILocalVariable(name: "rr", arg: 2, scope: !3813, file: !3, line: 312, type: !3006)
!3819 = !DILocation(line: 312, column: 54, scope: !3813)
!3820 = !DILocation(line: 314, column: 9, scope: !3813)
!3821 = !DILocation(line: 314, column: 2, scope: !3813)
!3822 = !DILocation(line: 316, column: 6, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 316, column: 6)
!3824 = !DILocation(line: 316, column: 6, scope: !3813)
!3825 = !DILocation(line: 317, column: 22, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 316, column: 10)
!3827 = !DILocation(line: 317, column: 26, scope: !3826)
!3828 = !DILocation(line: 317, column: 3, scope: !3826)
!3829 = !DILocation(line: 319, column: 7, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 319, column: 7)
!3831 = !DILocation(line: 319, column: 11, scope: !3830)
!3832 = !DILocation(line: 319, column: 7, scope: !3826)
!3833 = !DILocalVariable(name: "rl", scope: !3834, file: !3, line: 320, type: !3596)
!3834 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 319, column: 19)
!3835 = !DILocation(line: 320, column: 17, scope: !3834)
!3836 = !DILocation(line: 322, column: 16, scope: !3834)
!3837 = !DILocation(line: 322, column: 20, scope: !3834)
!3838 = !DILocation(line: 322, column: 28, scope: !3834)
!3839 = !DILocation(line: 322, column: 4, scope: !3834)
!3840 = !DILocation(line: 322, column: 8, scope: !3834)
!3841 = !DILocation(line: 322, column: 14, scope: !3834)
!3842 = !DILocation(line: 323, column: 16, scope: !3834)
!3843 = !DILocation(line: 323, column: 20, scope: !3834)
!3844 = !DILocation(line: 323, column: 28, scope: !3834)
!3845 = !DILocation(line: 323, column: 4, scope: !3834)
!3846 = !DILocation(line: 323, column: 8, scope: !3834)
!3847 = !DILocation(line: 323, column: 14, scope: !3834)
!3848 = !DILocation(line: 325, column: 16, scope: !3834)
!3849 = !DILocation(line: 325, column: 20, scope: !3834)
!3850 = !DILocation(line: 325, column: 28, scope: !3834)
!3851 = !DILocation(line: 325, column: 4, scope: !3834)
!3852 = !DILocation(line: 325, column: 8, scope: !3834)
!3853 = !DILocation(line: 325, column: 14, scope: !3834)
!3854 = !DILocation(line: 326, column: 16, scope: !3834)
!3855 = !DILocation(line: 326, column: 20, scope: !3834)
!3856 = !DILocation(line: 326, column: 28, scope: !3834)
!3857 = !DILocation(line: 326, column: 4, scope: !3834)
!3858 = !DILocation(line: 326, column: 8, scope: !3834)
!3859 = !DILocation(line: 326, column: 14, scope: !3834)
!3860 = !DILocation(line: 327, column: 17, scope: !3834)
!3861 = !DILocation(line: 327, column: 21, scope: !3834)
!3862 = !DILocation(line: 327, column: 29, scope: !3834)
!3863 = !DILocation(line: 327, column: 4, scope: !3834)
!3864 = !DILocation(line: 327, column: 8, scope: !3834)
!3865 = !DILocation(line: 327, column: 15, scope: !3834)
!3866 = !DILocation(line: 330, column: 33, scope: !3834)
!3867 = !DILocation(line: 330, column: 37, scope: !3834)
!3868 = !DILocation(line: 330, column: 41, scope: !3834)
!3869 = !DILocation(line: 330, column: 9, scope: !3834)
!3870 = !DILocation(line: 330, column: 7, scope: !3834)
!3871 = !DILocation(line: 332, column: 8, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 332, column: 8)
!3873 = !DILocation(line: 332, column: 8, scope: !3834)
!3874 = !DILocation(line: 333, column: 9, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 333, column: 9)
!3876 = distinct !DILexicalBlock(scope: !3872, file: !3, line: 332, column: 12)
!3877 = !DILocation(line: 333, column: 13, scope: !3875)
!3878 = !DILocation(line: 333, column: 19, scope: !3875)
!3879 = !DILocation(line: 333, column: 9, scope: !3876)
!3880 = !DILocation(line: 334, column: 18, scope: !3875)
!3881 = !DILocation(line: 334, column: 22, scope: !3875)
!3882 = !DILocation(line: 334, column: 6, scope: !3875)
!3883 = !DILocation(line: 334, column: 10, scope: !3875)
!3884 = !DILocation(line: 334, column: 16, scope: !3875)
!3885 = !DILocation(line: 335, column: 9, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 335, column: 9)
!3887 = !DILocation(line: 335, column: 13, scope: !3886)
!3888 = !DILocation(line: 335, column: 19, scope: !3886)
!3889 = !DILocation(line: 335, column: 9, scope: !3876)
!3890 = !DILocation(line: 336, column: 40, scope: !3886)
!3891 = !DILocation(line: 336, column: 18, scope: !3886)
!3892 = !DILocation(line: 336, column: 6, scope: !3886)
!3893 = !DILocation(line: 336, column: 10, scope: !3886)
!3894 = !DILocation(line: 336, column: 16, scope: !3886)
!3895 = !DILocation(line: 337, column: 4, scope: !3876)
!3896 = !DILocation(line: 339, column: 25, scope: !3834)
!3897 = !DILocation(line: 339, column: 29, scope: !3834)
!3898 = !DILocation(line: 339, column: 37, scope: !3834)
!3899 = !DILocation(line: 339, column: 43, scope: !3834)
!3900 = !DILocation(line: 339, column: 4, scope: !3834)
!3901 = !DILocation(line: 339, column: 8, scope: !3834)
!3902 = !DILocation(line: 339, column: 22, scope: !3834)
!3903 = !DILocation(line: 340, column: 4, scope: !3834)
!3904 = !DILocation(line: 340, column: 8, scope: !3834)
!3905 = !DILocation(line: 340, column: 17, scope: !3834)
!3906 = !DILocation(line: 340, column: 21, scope: !3834)
!3907 = !DILocation(line: 340, column: 29, scope: !3834)
!3908 = !DILocation(line: 342, column: 14, scope: !3834)
!3909 = !DILocation(line: 342, column: 18, scope: !3834)
!3910 = !DILocation(line: 342, column: 27, scope: !3834)
!3911 = !DILocation(line: 342, column: 4, scope: !3834)
!3912 = !DILocation(line: 342, column: 8, scope: !3834)
!3913 = !DILocation(line: 342, column: 12, scope: !3834)
!3914 = !DILocation(line: 343, column: 14, scope: !3834)
!3915 = !DILocation(line: 343, column: 18, scope: !3834)
!3916 = !DILocation(line: 343, column: 27, scope: !3834)
!3917 = !DILocation(line: 343, column: 4, scope: !3834)
!3918 = !DILocation(line: 343, column: 8, scope: !3834)
!3919 = !DILocation(line: 343, column: 12, scope: !3834)
!3920 = !DILocation(line: 344, column: 3, scope: !3834)
!3921 = !DILocation(line: 345, column: 2, scope: !3826)
!3922 = !DILocation(line: 346, column: 1, scope: !3813)
!3923 = distinct !DISubprogram(name: "RE_ReleaseResultImage", scope: !3, file: !3, line: 348, type: !3574, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3924 = !DILocalVariable(name: "re", arg: 1, scope: !3923, file: !3, line: 348, type: !3576)
!3925 = !DILocation(line: 348, column: 36, scope: !3923)
!3926 = !DILocation(line: 350, column: 6, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 350, column: 6)
!3928 = !DILocation(line: 350, column: 6, scope: !3923)
!3929 = !DILocation(line: 351, column: 24, scope: !3927)
!3930 = !DILocation(line: 351, column: 28, scope: !3927)
!3931 = !DILocation(line: 351, column: 3, scope: !3927)
!3932 = !DILocation(line: 352, column: 1, scope: !3923)
!3933 = distinct !DISubprogram(name: "RE_ResultGet32", scope: !3, file: !3, line: 355, type: !3934, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3934 = !DISubroutineType(types: !3935)
!3935 = !{null, !3576, !921}
!3936 = !DILocalVariable(name: "re", arg: 1, scope: !3933, file: !3, line: 355, type: !3576)
!3937 = !DILocation(line: 355, column: 29, scope: !3933)
!3938 = !DILocalVariable(name: "rect", arg: 2, scope: !3933, file: !3, line: 355, type: !921)
!3939 = !DILocation(line: 355, column: 47, scope: !3933)
!3940 = !DILocalVariable(name: "rres", scope: !3933, file: !3, line: 357, type: !3007)
!3941 = !DILocation(line: 357, column: 15, scope: !3933)
!3942 = !DILocation(line: 359, column: 24, scope: !3933)
!3943 = !DILocation(line: 359, column: 2, scope: !3933)
!3944 = !DILocation(line: 360, column: 39, scope: !3933)
!3945 = !DILocation(line: 360, column: 45, scope: !3933)
!3946 = !DILocation(line: 360, column: 49, scope: !3933)
!3947 = !DILocation(line: 360, column: 56, scope: !3933)
!3948 = !DILocation(line: 360, column: 60, scope: !3933)
!3949 = !DILocation(line: 360, column: 68, scope: !3933)
!3950 = !DILocation(line: 360, column: 72, scope: !3933)
!3951 = !DILocation(line: 360, column: 79, scope: !3933)
!3952 = !DILocation(line: 360, column: 95, scope: !3933)
!3953 = !DILocation(line: 360, column: 99, scope: !3933)
!3954 = !DILocation(line: 360, column: 106, scope: !3933)
!3955 = !DILocation(line: 360, column: 2, scope: !3933)
!3956 = !DILocation(line: 361, column: 24, scope: !3933)
!3957 = !DILocation(line: 361, column: 2, scope: !3933)
!3958 = !DILocation(line: 362, column: 1, scope: !3933)
!3959 = distinct !DISubprogram(name: "RE_AcquiredResultGet32", scope: !3, file: !3, line: 366, type: !3960, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{null, !3576, !3006, !921}
!3962 = !DILocalVariable(name: "re", arg: 1, scope: !3959, file: !3, line: 366, type: !3576)
!3963 = !DILocation(line: 366, column: 37, scope: !3959)
!3964 = !DILocalVariable(name: "result", arg: 2, scope: !3959, file: !3, line: 366, type: !3006)
!3965 = !DILocation(line: 366, column: 55, scope: !3959)
!3966 = !DILocalVariable(name: "rect", arg: 3, scope: !3959, file: !3, line: 366, type: !921)
!3967 = !DILocation(line: 366, column: 77, scope: !3959)
!3968 = !DILocation(line: 368, column: 32, scope: !3959)
!3969 = !DILocation(line: 368, column: 40, scope: !3959)
!3970 = !DILocation(line: 368, column: 46, scope: !3959)
!3971 = !DILocation(line: 368, column: 50, scope: !3959)
!3972 = !DILocation(line: 368, column: 57, scope: !3959)
!3973 = !DILocation(line: 368, column: 61, scope: !3959)
!3974 = !DILocation(line: 368, column: 69, scope: !3959)
!3975 = !DILocation(line: 368, column: 73, scope: !3959)
!3976 = !DILocation(line: 368, column: 80, scope: !3959)
!3977 = !DILocation(line: 368, column: 96, scope: !3959)
!3978 = !DILocation(line: 368, column: 100, scope: !3959)
!3979 = !DILocation(line: 368, column: 107, scope: !3959)
!3980 = !DILocation(line: 368, column: 2, scope: !3959)
!3981 = !DILocation(line: 369, column: 1, scope: !3959)
!3982 = distinct !DISubprogram(name: "RE_GetStats", scope: !3, file: !3, line: 371, type: !3983, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!3985, !3576}
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3986 = !DILocalVariable(name: "re", arg: 1, scope: !3982, file: !3, line: 371, type: !3576)
!3987 = !DILocation(line: 371, column: 34, scope: !3982)
!3988 = !DILocation(line: 373, column: 10, scope: !3982)
!3989 = !DILocation(line: 373, column: 14, scope: !3982)
!3990 = !DILocation(line: 373, column: 2, scope: !3982)
!3991 = distinct !DISubprogram(name: "RE_NewRender", scope: !3, file: !3, line: 376, type: !3710, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!3992 = !DILocalVariable(name: "name", arg: 1, scope: !3991, file: !3, line: 376, type: !772)
!3993 = !DILocation(line: 376, column: 34, scope: !3991)
!3994 = !DILocalVariable(name: "re", scope: !3991, file: !3, line: 378, type: !3576)
!3995 = !DILocation(line: 378, column: 10, scope: !3991)
!3996 = !DILocation(line: 381, column: 20, scope: !3991)
!3997 = !DILocation(line: 381, column: 7, scope: !3991)
!3998 = !DILocation(line: 381, column: 5, scope: !3991)
!3999 = !DILocation(line: 382, column: 6, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 382, column: 6)
!4001 = !DILocation(line: 382, column: 9, scope: !4000)
!4002 = !DILocation(line: 382, column: 6, scope: !3991)
!4003 = !DILocation(line: 385, column: 8, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 382, column: 18)
!4005 = !DILocation(line: 385, column: 6, scope: !4004)
!4006 = !DILocation(line: 386, column: 41, scope: !4004)
!4007 = !DILocation(line: 386, column: 3, scope: !4004)
!4008 = !DILocation(line: 387, column: 15, scope: !4004)
!4009 = !DILocation(line: 387, column: 19, scope: !4004)
!4010 = !DILocation(line: 387, column: 25, scope: !4004)
!4011 = !DILocation(line: 387, column: 3, scope: !4004)
!4012 = !DILocation(line: 388, column: 22, scope: !4004)
!4013 = !DILocation(line: 388, column: 26, scope: !4004)
!4014 = !DILocation(line: 388, column: 3, scope: !4004)
!4015 = !DILocation(line: 389, column: 18, scope: !4004)
!4016 = !DILocation(line: 389, column: 3, scope: !4004)
!4017 = !DILocation(line: 389, column: 7, scope: !4004)
!4018 = !DILocation(line: 389, column: 16, scope: !4004)
!4019 = !DILocation(line: 390, column: 3, scope: !4004)
!4020 = !DILocation(line: 390, column: 7, scope: !4004)
!4021 = !DILocation(line: 390, column: 17, scope: !4004)
!4022 = !DILocation(line: 390, column: 22, scope: !4004)
!4023 = !DILocation(line: 391, column: 2, scope: !4004)
!4024 = !DILocation(line: 393, column: 18, scope: !3991)
!4025 = !DILocation(line: 393, column: 2, scope: !3991)
!4026 = !DILocation(line: 396, column: 2, scope: !3991)
!4027 = !DILocation(line: 396, column: 6, scope: !3991)
!4028 = !DILocation(line: 396, column: 11, scope: !3991)
!4029 = !DILocation(line: 398, column: 9, scope: !3991)
!4030 = !DILocation(line: 398, column: 2, scope: !3991)
!4031 = distinct !DISubprogram(name: "RE_InitRenderCB", scope: !3, file: !3, line: 403, type: !3574, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4032 = !DILocalVariable(name: "re", arg: 1, scope: !4031, file: !3, line: 403, type: !3576)
!4033 = !DILocation(line: 403, column: 30, scope: !4031)
!4034 = !DILocation(line: 406, column: 2, scope: !4031)
!4035 = !DILocation(line: 406, column: 6, scope: !4031)
!4036 = !DILocation(line: 406, column: 19, scope: !4031)
!4037 = !DILocation(line: 407, column: 2, scope: !4031)
!4038 = !DILocation(line: 407, column: 6, scope: !4031)
!4039 = !DILocation(line: 407, column: 20, scope: !4031)
!4040 = !DILocation(line: 408, column: 2, scope: !4031)
!4041 = !DILocation(line: 408, column: 6, scope: !4031)
!4042 = !DILocation(line: 408, column: 21, scope: !4031)
!4043 = !DILocation(line: 409, column: 2, scope: !4031)
!4044 = !DILocation(line: 409, column: 6, scope: !4031)
!4045 = !DILocation(line: 409, column: 27, scope: !4031)
!4046 = !DILocation(line: 410, column: 2, scope: !4031)
!4047 = !DILocation(line: 410, column: 6, scope: !4031)
!4048 = !DILocation(line: 410, column: 15, scope: !4031)
!4049 = !DILocation(line: 411, column: 2, scope: !4031)
!4050 = !DILocation(line: 411, column: 6, scope: !4031)
!4051 = !DILocation(line: 411, column: 17, scope: !4031)
!4052 = !DILocation(line: 412, column: 8, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 412, column: 6)
!4054 = !DILocation(line: 412, column: 6, scope: !4053)
!4055 = !DILocation(line: 412, column: 6, scope: !4031)
!4056 = !DILocation(line: 413, column: 3, scope: !4053)
!4057 = !DILocation(line: 413, column: 7, scope: !4053)
!4058 = !DILocation(line: 413, column: 18, scope: !4053)
!4059 = !DILocation(line: 415, column: 3, scope: !4053)
!4060 = !DILocation(line: 415, column: 7, scope: !4053)
!4061 = !DILocation(line: 415, column: 18, scope: !4053)
!4062 = !DILocation(line: 417, column: 52, scope: !4031)
!4063 = !DILocation(line: 417, column: 56, scope: !4031)
!4064 = !DILocation(line: 417, column: 60, scope: !4031)
!4065 = !DILocation(line: 417, column: 42, scope: !4031)
!4066 = !DILocation(line: 417, column: 46, scope: !4031)
!4067 = !DILocation(line: 417, column: 50, scope: !4031)
!4068 = !DILocation(line: 417, column: 32, scope: !4031)
!4069 = !DILocation(line: 417, column: 36, scope: !4031)
!4070 = !DILocation(line: 417, column: 40, scope: !4031)
!4071 = !DILocation(line: 417, column: 22, scope: !4031)
!4072 = !DILocation(line: 417, column: 26, scope: !4031)
!4073 = !DILocation(line: 417, column: 30, scope: !4031)
!4074 = !DILocation(line: 417, column: 12, scope: !4031)
!4075 = !DILocation(line: 417, column: 16, scope: !4031)
!4076 = !DILocation(line: 417, column: 20, scope: !4031)
!4077 = !DILocation(line: 417, column: 2, scope: !4031)
!4078 = !DILocation(line: 417, column: 6, scope: !4031)
!4079 = !DILocation(line: 417, column: 10, scope: !4031)
!4080 = !DILocation(line: 418, column: 1, scope: !4031)
!4081 = distinct !DISubprogram(name: "result_nothing", scope: !3, file: !3, line: 144, type: !3509, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4082 = !DILocalVariable(name: "UNUSED_arg", arg: 1, scope: !4081, file: !3, line: 144, type: !215)
!4083 = !DILocation(line: 144, column: 34, scope: !4081)
!4084 = !DILocalVariable(name: "UNUSED_rr", arg: 2, scope: !4081, file: !3, line: 144, type: !3006)
!4085 = !DILocation(line: 144, column: 61, scope: !4081)
!4086 = !DILocation(line: 144, column: 74, scope: !4081)
!4087 = distinct !DISubprogram(name: "result_rcti_nothing", scope: !3, file: !3, line: 145, type: !4088, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{null, !215, !3006, !4090}
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !971)
!4092 = !DILocalVariable(name: "UNUSED_arg", arg: 1, scope: !4087, file: !3, line: 145, type: !215)
!4093 = !DILocation(line: 145, column: 39, scope: !4087)
!4094 = !DILocalVariable(name: "UNUSED_rr", arg: 2, scope: !4087, file: !3, line: 145, type: !3006)
!4095 = !DILocation(line: 145, column: 66, scope: !4087)
!4096 = !DILocalVariable(name: "UNUSED_rect", arg: 3, scope: !4087, file: !3, line: 145, type: !4090)
!4097 = !DILocation(line: 145, column: 100, scope: !4087)
!4098 = !DILocation(line: 145, column: 115, scope: !4087)
!4099 = distinct !DISubprogram(name: "current_scene_nothing", scope: !3, file: !3, line: 146, type: !4100, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{null, !215, !217}
!4102 = !DILocalVariable(name: "UNUSED_arg", arg: 1, scope: !4099, file: !3, line: 146, type: !215)
!4103 = !DILocation(line: 146, column: 41, scope: !4099)
!4104 = !DILocalVariable(name: "UNUSED_scene", arg: 2, scope: !4099, file: !3, line: 146, type: !217)
!4105 = !DILocation(line: 146, column: 61, scope: !4099)
!4106 = !DILocation(line: 146, column: 77, scope: !4099)
!4107 = distinct !DISubprogram(name: "float_nothing", scope: !3, file: !3, line: 148, type: !1177, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4108 = !DILocalVariable(name: "UNUSED_arg", arg: 1, scope: !4107, file: !3, line: 148, type: !215)
!4109 = !DILocation(line: 148, column: 33, scope: !4107)
!4110 = !DILocalVariable(name: "UNUSED_val", arg: 2, scope: !4107, file: !3, line: 148, type: !216)
!4111 = !DILocation(line: 148, column: 52, scope: !4107)
!4112 = !DILocation(line: 148, column: 66, scope: !4107)
!4113 = distinct !DISubprogram(name: "default_break", scope: !3, file: !3, line: 149, type: !1185, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4114 = !DILocalVariable(name: "UNUSED_arg", arg: 1, scope: !4113, file: !3, line: 149, type: !215)
!4115 = !DILocation(line: 149, column: 32, scope: !4113)
!4116 = !DILocation(line: 149, column: 56, scope: !4113)
!4117 = !DILocation(line: 149, column: 54, scope: !4113)
!4118 = !DILocation(line: 149, column: 65, scope: !4113)
!4119 = !DILocation(line: 149, column: 47, scope: !4113)
!4120 = distinct !DISubprogram(name: "stats_background", scope: !3, file: !3, line: 151, type: !3527, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4121 = !DILocalVariable(name: "UNUSED_arg", arg: 1, scope: !4120, file: !3, line: 151, type: !215)
!4122 = !DILocation(line: 151, column: 36, scope: !4120)
!4123 = !DILocalVariable(name: "rs", arg: 2, scope: !4120, file: !3, line: 151, type: !3529)
!4124 = !DILocation(line: 151, column: 62, scope: !4120)
!4125 = !DILocalVariable(name: "mem_in_use", scope: !4120, file: !3, line: 153, type: !4126)
!4126 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !4127, line: 90, baseType: !1938)
!4127 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!4128 = !DILocation(line: 153, column: 12, scope: !4120)
!4129 = !DILocalVariable(name: "mmap_in_use", scope: !4120, file: !3, line: 153, type: !4126)
!4130 = !DILocation(line: 153, column: 24, scope: !4120)
!4131 = !DILocalVariable(name: "peak_memory", scope: !4120, file: !3, line: 153, type: !4126)
!4132 = !DILocation(line: 153, column: 37, scope: !4120)
!4133 = !DILocalVariable(name: "megs_used_memory", scope: !4120, file: !3, line: 154, type: !216)
!4134 = !DILocation(line: 154, column: 8, scope: !4120)
!4135 = !DILocalVariable(name: "mmap_used_memory", scope: !4120, file: !3, line: 154, type: !216)
!4136 = !DILocation(line: 154, column: 26, scope: !4120)
!4137 = !DILocalVariable(name: "megs_peak_memory", scope: !4120, file: !3, line: 154, type: !216)
!4138 = !DILocation(line: 154, column: 44, scope: !4120)
!4139 = !DILocation(line: 156, column: 15, scope: !4120)
!4140 = !DILocation(line: 156, column: 13, scope: !4120)
!4141 = !DILocation(line: 157, column: 16, scope: !4120)
!4142 = !DILocation(line: 157, column: 14, scope: !4120)
!4143 = !DILocation(line: 158, column: 16, scope: !4120)
!4144 = !DILocation(line: 158, column: 14, scope: !4120)
!4145 = !DILocation(line: 160, column: 22, scope: !4120)
!4146 = !DILocation(line: 160, column: 35, scope: !4120)
!4147 = !DILocation(line: 160, column: 33, scope: !4120)
!4148 = !DILocation(line: 160, column: 21, scope: !4120)
!4149 = !DILocation(line: 160, column: 48, scope: !4120)
!4150 = !DILocation(line: 160, column: 19, scope: !4120)
!4151 = !DILocation(line: 161, column: 22, scope: !4120)
!4152 = !DILocation(line: 161, column: 21, scope: !4120)
!4153 = !DILocation(line: 161, column: 35, scope: !4120)
!4154 = !DILocation(line: 161, column: 19, scope: !4120)
!4155 = !DILocation(line: 162, column: 22, scope: !4120)
!4156 = !DILocation(line: 162, column: 21, scope: !4120)
!4157 = !DILocation(line: 162, column: 35, scope: !4120)
!4158 = !DILocation(line: 162, column: 19, scope: !4120)
!4159 = !DILocation(line: 164, column: 10, scope: !4120)
!4160 = !DILocation(line: 164, column: 67, scope: !4120)
!4161 = !DILocation(line: 164, column: 71, scope: !4120)
!4162 = !DILocation(line: 165, column: 10, scope: !4120)
!4163 = !DILocation(line: 165, column: 28, scope: !4120)
!4164 = !DILocation(line: 165, column: 46, scope: !4120)
!4165 = !DILocation(line: 164, column: 2, scope: !4120)
!4166 = !DILocation(line: 167, column: 6, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 167, column: 6)
!4168 = !DILocation(line: 167, column: 10, scope: !4167)
!4169 = !DILocation(line: 167, column: 6, scope: !4120)
!4170 = !DILocation(line: 168, column: 11, scope: !4167)
!4171 = !DILocation(line: 168, column: 40, scope: !4167)
!4172 = !DILocation(line: 168, column: 44, scope: !4167)
!4173 = !DILocation(line: 168, column: 3, scope: !4167)
!4174 = !DILocation(line: 169, column: 6, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 169, column: 6)
!4176 = !DILocation(line: 169, column: 10, scope: !4175)
!4177 = !DILocation(line: 169, column: 6, scope: !4120)
!4178 = !DILocation(line: 170, column: 11, scope: !4175)
!4179 = !DILocation(line: 170, column: 39, scope: !4175)
!4180 = !DILocation(line: 170, column: 43, scope: !4175)
!4181 = !DILocation(line: 170, column: 3, scope: !4175)
!4182 = !DILocation(line: 172, column: 6, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 172, column: 6)
!4184 = !DILocation(line: 172, column: 10, scope: !4183)
!4185 = !DILocation(line: 172, column: 6, scope: !4120)
!4186 = !DILocation(line: 173, column: 11, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 172, column: 19)
!4188 = !DILocation(line: 173, column: 27, scope: !4187)
!4189 = !DILocation(line: 173, column: 31, scope: !4187)
!4190 = !DILocation(line: 173, column: 3, scope: !4187)
!4191 = !DILocation(line: 174, column: 2, scope: !4187)
!4192 = !DILocation(line: 176, column: 7, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 176, column: 7)
!4194 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 175, column: 7)
!4195 = !DILocation(line: 176, column: 11, scope: !4193)
!4196 = !DILocation(line: 176, column: 7, scope: !4194)
!4197 = !DILocation(line: 177, column: 12, scope: !4193)
!4198 = !DILocation(line: 178, column: 12, scope: !4193)
!4199 = !DILocation(line: 178, column: 16, scope: !4193)
!4200 = !DILocation(line: 178, column: 28, scope: !4193)
!4201 = !DILocation(line: 178, column: 32, scope: !4193)
!4202 = !DILocation(line: 178, column: 41, scope: !4193)
!4203 = !DILocation(line: 178, column: 45, scope: !4193)
!4204 = !DILocation(line: 178, column: 54, scope: !4193)
!4205 = !DILocation(line: 178, column: 58, scope: !4193)
!4206 = !DILocation(line: 178, column: 67, scope: !4193)
!4207 = !DILocation(line: 178, column: 71, scope: !4193)
!4208 = !DILocation(line: 177, column: 4, scope: !4193)
!4209 = !DILocation(line: 180, column: 12, scope: !4193)
!4210 = !DILocation(line: 180, column: 57, scope: !4193)
!4211 = !DILocation(line: 180, column: 61, scope: !4193)
!4212 = !DILocation(line: 180, column: 73, scope: !4193)
!4213 = !DILocation(line: 180, column: 77, scope: !4193)
!4214 = !DILocation(line: 180, column: 86, scope: !4193)
!4215 = !DILocation(line: 180, column: 90, scope: !4193)
!4216 = !DILocation(line: 180, column: 99, scope: !4193)
!4217 = !DILocation(line: 180, column: 103, scope: !4193)
!4218 = !DILocation(line: 180, column: 4, scope: !4193)
!4219 = !DILocation(line: 183, column: 22, scope: !4120)
!4220 = !DILocation(line: 183, column: 2, scope: !4120)
!4221 = !DILocation(line: 185, column: 14, scope: !4120)
!4222 = !DILocation(line: 185, column: 2, scope: !4120)
!4223 = !DILocation(line: 186, column: 9, scope: !4120)
!4224 = !DILocation(line: 186, column: 2, scope: !4120)
!4225 = !DILocation(line: 187, column: 1, scope: !4120)
!4226 = distinct !DISubprogram(name: "stats_nothing", scope: !3, file: !3, line: 147, type: !3527, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4227 = !DILocalVariable(name: "UNUSED_arg", arg: 1, scope: !4226, file: !3, line: 147, type: !215)
!4228 = !DILocation(line: 147, column: 33, scope: !4226)
!4229 = !DILocalVariable(name: "UNUSED_rs", arg: 2, scope: !4226, file: !3, line: 147, type: !3529)
!4230 = !DILocation(line: 147, column: 59, scope: !4226)
!4231 = !DILocation(line: 147, column: 72, scope: !4226)
!4232 = distinct !DISubprogram(name: "RE_FreeRender", scope: !3, file: !3, line: 421, type: !3574, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4233 = !DILocalVariable(name: "re", arg: 1, scope: !4232, file: !3, line: 421, type: !3576)
!4234 = !DILocation(line: 421, column: 28, scope: !4232)
!4235 = !DILocation(line: 423, column: 6, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 423, column: 6)
!4237 = !DILocation(line: 423, column: 10, scope: !4236)
!4238 = !DILocation(line: 423, column: 6, scope: !4232)
!4239 = !DILocation(line: 424, column: 18, scope: !4236)
!4240 = !DILocation(line: 424, column: 22, scope: !4236)
!4241 = !DILocation(line: 424, column: 3, scope: !4236)
!4242 = !DILocation(line: 426, column: 20, scope: !4232)
!4243 = !DILocation(line: 426, column: 24, scope: !4232)
!4244 = !DILocation(line: 426, column: 2, scope: !4232)
!4245 = !DILocation(line: 428, column: 17, scope: !4232)
!4246 = !DILocation(line: 428, column: 21, scope: !4232)
!4247 = !DILocation(line: 428, column: 23, scope: !4232)
!4248 = !DILocation(line: 428, column: 2, scope: !4232)
!4249 = !DILocation(line: 431, column: 2, scope: !4232)
!4250 = !DILocation(line: 431, column: 6, scope: !4232)
!4251 = !DILocation(line: 431, column: 11, scope: !4232)
!4252 = !DILocation(line: 432, column: 2, scope: !4232)
!4253 = !DILocation(line: 432, column: 6, scope: !4232)
!4254 = !DILocation(line: 432, column: 12, scope: !4232)
!4255 = !DILocation(line: 434, column: 19, scope: !4232)
!4256 = !DILocation(line: 434, column: 2, scope: !4232)
!4257 = !DILocation(line: 435, column: 21, scope: !4232)
!4258 = !DILocation(line: 435, column: 2, scope: !4232)
!4259 = !DILocation(line: 437, column: 21, scope: !4232)
!4260 = !DILocation(line: 437, column: 25, scope: !4232)
!4261 = !DILocation(line: 437, column: 2, scope: !4232)
!4262 = !DILocation(line: 438, column: 21, scope: !4232)
!4263 = !DILocation(line: 438, column: 25, scope: !4232)
!4264 = !DILocation(line: 438, column: 2, scope: !4232)
!4265 = !DILocation(line: 440, column: 40, scope: !4232)
!4266 = !DILocation(line: 440, column: 2, scope: !4232)
!4267 = !DILocation(line: 441, column: 2, scope: !4232)
!4268 = !DILocation(line: 441, column: 12, scope: !4232)
!4269 = !DILocation(line: 441, column: 16, scope: !4232)
!4270 = !DILocation(line: 442, column: 2, scope: !4232)
!4271 = !DILocation(line: 442, column: 12, scope: !4232)
!4272 = !DILocation(line: 443, column: 1, scope: !4232)
!4273 = distinct !DISubprogram(name: "RE_FreeAllRender", scope: !3, file: !3, line: 446, type: !4274, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{null}
!4276 = !DILocation(line: 448, column: 2, scope: !4273)
!4277 = !DILocation(line: 448, column: 33, scope: !4273)
!4278 = !DILocation(line: 449, column: 41, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4273, file: !3, line: 448, column: 40)
!4280 = !DILocation(line: 449, column: 17, scope: !4279)
!4281 = !DILocation(line: 449, column: 3, scope: !4279)
!4282 = distinct !{!4282, !4276, !4283}
!4283 = !DILocation(line: 450, column: 2, scope: !4273)
!4284 = !DILocation(line: 456, column: 1, scope: !4273)
!4285 = distinct !DISubprogram(name: "RE_FreeAllRenderResults", scope: !3, file: !3, line: 459, type: !4274, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4286 = !DILocalVariable(name: "re", scope: !4285, file: !3, line: 461, type: !3576)
!4287 = !DILocation(line: 461, column: 10, scope: !4285)
!4288 = !DILocation(line: 463, column: 36, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 463, column: 2)
!4290 = !DILocation(line: 463, column: 12, scope: !4289)
!4291 = !DILocation(line: 463, column: 10, scope: !4289)
!4292 = !DILocation(line: 463, column: 7, scope: !4289)
!4293 = !DILocation(line: 463, column: 43, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 463, column: 2)
!4295 = !DILocation(line: 463, column: 2, scope: !4289)
!4296 = !DILocation(line: 464, column: 22, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 463, column: 62)
!4298 = !DILocation(line: 464, column: 26, scope: !4297)
!4299 = !DILocation(line: 464, column: 3, scope: !4297)
!4300 = !DILocation(line: 465, column: 22, scope: !4297)
!4301 = !DILocation(line: 465, column: 26, scope: !4297)
!4302 = !DILocation(line: 465, column: 3, scope: !4297)
!4303 = !DILocation(line: 467, column: 3, scope: !4297)
!4304 = !DILocation(line: 467, column: 7, scope: !4297)
!4305 = !DILocation(line: 467, column: 14, scope: !4297)
!4306 = !DILocation(line: 468, column: 3, scope: !4297)
!4307 = !DILocation(line: 468, column: 7, scope: !4297)
!4308 = !DILocation(line: 468, column: 20, scope: !4297)
!4309 = !DILocation(line: 469, column: 2, scope: !4297)
!4310 = !DILocation(line: 463, column: 52, scope: !4294)
!4311 = !DILocation(line: 463, column: 56, scope: !4294)
!4312 = !DILocation(line: 463, column: 50, scope: !4294)
!4313 = !DILocation(line: 463, column: 2, scope: !4294)
!4314 = distinct !{!4314, !4295, !4315}
!4315 = !DILocation(line: 469, column: 2, scope: !4289)
!4316 = !DILocation(line: 470, column: 1, scope: !4285)
!4317 = distinct !DISubprogram(name: "RE_FreePersistentData", scope: !3, file: !3, line: 472, type: !4274, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4318 = !DILocalVariable(name: "re", scope: !4317, file: !3, line: 474, type: !3576)
!4319 = !DILocation(line: 474, column: 10, scope: !4317)
!4320 = !DILocation(line: 477, column: 36, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 477, column: 2)
!4322 = !DILocation(line: 477, column: 12, scope: !4321)
!4323 = !DILocation(line: 477, column: 10, scope: !4321)
!4324 = !DILocation(line: 477, column: 7, scope: !4321)
!4325 = !DILocation(line: 477, column: 43, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 477, column: 2)
!4327 = !DILocation(line: 477, column: 2, scope: !4321)
!4328 = !DILocation(line: 478, column: 7, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 478, column: 7)
!4330 = distinct !DILexicalBlock(scope: !4326, file: !3, line: 477, column: 62)
!4331 = !DILocation(line: 478, column: 11, scope: !4329)
!4332 = !DILocation(line: 478, column: 7, scope: !4330)
!4333 = !DILocation(line: 480, column: 10, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !3, line: 480, column: 8)
!4335 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 478, column: 19)
!4336 = !DILocation(line: 480, column: 14, scope: !4334)
!4337 = !DILocation(line: 480, column: 22, scope: !4334)
!4338 = !DILocation(line: 480, column: 27, scope: !4334)
!4339 = !DILocation(line: 480, column: 8, scope: !4335)
!4340 = !DILocation(line: 481, column: 20, scope: !4334)
!4341 = !DILocation(line: 481, column: 24, scope: !4334)
!4342 = !DILocation(line: 481, column: 5, scope: !4334)
!4343 = !DILocation(line: 483, column: 4, scope: !4335)
!4344 = !DILocation(line: 483, column: 8, scope: !4335)
!4345 = !DILocation(line: 483, column: 15, scope: !4335)
!4346 = !DILocation(line: 484, column: 3, scope: !4335)
!4347 = !DILocation(line: 485, column: 2, scope: !4330)
!4348 = !DILocation(line: 477, column: 52, scope: !4326)
!4349 = !DILocation(line: 477, column: 56, scope: !4326)
!4350 = !DILocation(line: 477, column: 50, scope: !4326)
!4351 = !DILocation(line: 477, column: 2, scope: !4326)
!4352 = distinct !{!4352, !4327, !4353}
!4353 = !DILocation(line: 485, column: 2, scope: !4321)
!4354 = !DILocation(line: 486, column: 1, scope: !4317)
!4355 = distinct !DISubprogram(name: "RE_InitState", scope: !3, file: !3, line: 558, type: !4356, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{null, !3576, !3576, !4358, !4359, !7, !7, !4388}
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!4359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4360, size: 64)
!4360 = !DIDerivedType(tag: DW_TAG_typedef, name: "SceneRenderLayer", file: !6, line: 194, baseType: !4361)
!4361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SceneRenderLayer", file: !6, line: 174, size: 1472, elements: !4362)
!4362 = !{!4363, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377}
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4361, file: !6, line: 175, baseType: !4364, size: 64)
!4364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4361, size: 64)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4361, file: !6, line: 175, baseType: !4364, size: 64, offset: 64)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4361, file: !6, line: 177, baseType: !271, size: 512, offset: 128)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !4361, file: !6, line: 179, baseType: !416, size: 64, offset: 640)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !4361, file: !6, line: 180, baseType: !1249, size: 64, offset: 704)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !4361, file: !6, line: 182, baseType: !43, size: 32, offset: 768)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !4361, file: !6, line: 183, baseType: !43, size: 32, offset: 800)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !4361, file: !6, line: 184, baseType: !43, size: 32, offset: 832)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !4361, file: !6, line: 185, baseType: !7, size: 32, offset: 864)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !4361, file: !6, line: 187, baseType: !7, size: 32, offset: 896)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !4361, file: !6, line: 188, baseType: !7, size: 32, offset: 928)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !4361, file: !6, line: 190, baseType: !7, size: 32, offset: 960)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "pass_alpha_threshold", scope: !4361, file: !6, line: 191, baseType: !216, size: 32, offset: 992)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "freestyleConfig", scope: !4361, file: !6, line: 193, baseType: !4378, size: 448, offset: 1024)
!4378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleConfig", file: !1251, line: 127, size: 448, elements: !4379)
!4379 = !{!4380, !4381, !4382, !4383, !4384, !4385, !4386, !4387}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !4378, file: !1251, line: 128, baseType: !281, size: 128)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4378, file: !1251, line: 130, baseType: !7, size: 32, offset: 128)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "raycasting_algorithm", scope: !4378, file: !1251, line: 131, baseType: !7, size: 32, offset: 160)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4378, file: !1251, line: 132, baseType: !7, size: 32, offset: 192)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "sphere_radius", scope: !4378, file: !1251, line: 133, baseType: !216, size: 32, offset: 224)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "dkr_epsilon", scope: !4378, file: !1251, line: 134, baseType: !216, size: 32, offset: 256)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "crease_angle", scope: !4378, file: !1251, line: 135, baseType: !216, size: 32, offset: 288)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "linesets", scope: !4378, file: !1251, line: 137, baseType: !281, size: 128, offset: 320)
!4388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!4389 = !DILocalVariable(name: "re", arg: 1, scope: !4355, file: !3, line: 558, type: !3576)
!4390 = !DILocation(line: 558, column: 27, scope: !4355)
!4391 = !DILocalVariable(name: "source", arg: 2, scope: !4355, file: !3, line: 558, type: !3576)
!4392 = !DILocation(line: 558, column: 39, scope: !4355)
!4393 = !DILocalVariable(name: "rd", arg: 3, scope: !4355, file: !3, line: 558, type: !4358)
!4394 = !DILocation(line: 558, column: 59, scope: !4355)
!4395 = !DILocalVariable(name: "srl", arg: 4, scope: !4355, file: !3, line: 559, type: !4359)
!4396 = !DILocation(line: 559, column: 37, scope: !4355)
!4397 = !DILocalVariable(name: "winx", arg: 5, scope: !4355, file: !3, line: 560, type: !7)
!4398 = !DILocation(line: 560, column: 23, scope: !4355)
!4399 = !DILocalVariable(name: "winy", arg: 6, scope: !4355, file: !3, line: 560, type: !7)
!4400 = !DILocation(line: 560, column: 33, scope: !4355)
!4401 = !DILocalVariable(name: "disprect", arg: 7, scope: !4355, file: !3, line: 560, type: !4388)
!4402 = !DILocation(line: 560, column: 45, scope: !4355)
!4403 = !DILocalVariable(name: "had_freestyle", scope: !4355, file: !3, line: 562, type: !916)
!4404 = !DILocation(line: 562, column: 7, scope: !4355)
!4405 = !DILocation(line: 562, column: 24, scope: !4355)
!4406 = !DILocation(line: 562, column: 28, scope: !4355)
!4407 = !DILocation(line: 562, column: 30, scope: !4355)
!4408 = !DILocation(line: 562, column: 35, scope: !4355)
!4409 = !DILocation(line: 562, column: 49, scope: !4355)
!4410 = !DILocation(line: 562, column: 23, scope: !4355)
!4411 = !DILocation(line: 564, column: 2, scope: !4355)
!4412 = !DILocation(line: 564, column: 6, scope: !4355)
!4413 = !DILocation(line: 564, column: 9, scope: !4355)
!4414 = !DILocation(line: 566, column: 20, scope: !4355)
!4415 = !DILocation(line: 566, column: 2, scope: !4355)
!4416 = !DILocation(line: 566, column: 6, scope: !4355)
!4417 = !DILocation(line: 566, column: 8, scope: !4355)
!4418 = !DILocation(line: 566, column: 18, scope: !4355)
!4419 = !DILocation(line: 569, column: 17, scope: !4355)
!4420 = !DILocation(line: 569, column: 21, scope: !4355)
!4421 = !DILocation(line: 569, column: 23, scope: !4355)
!4422 = !DILocation(line: 569, column: 2, scope: !4355)
!4423 = !DILocation(line: 570, column: 2, scope: !4355)
!4424 = !DILocation(line: 570, column: 6, scope: !4355)
!4425 = !DILocation(line: 570, column: 11, scope: !4355)
!4426 = !DILocation(line: 570, column: 10, scope: !4355)
!4427 = !DILocation(line: 571, column: 21, scope: !4355)
!4428 = !DILocation(line: 571, column: 25, scope: !4355)
!4429 = !DILocation(line: 571, column: 27, scope: !4355)
!4430 = !DILocation(line: 571, column: 36, scope: !4355)
!4431 = !DILocation(line: 571, column: 40, scope: !4355)
!4432 = !DILocation(line: 571, column: 2, scope: !4355)
!4433 = !DILocation(line: 573, column: 6, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4355, file: !3, line: 573, column: 6)
!4435 = !DILocation(line: 573, column: 6, scope: !4355)
!4436 = !DILocation(line: 575, column: 3, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 573, column: 14)
!4438 = !DILocation(line: 575, column: 7, scope: !4437)
!4439 = !DILocation(line: 575, column: 9, scope: !4437)
!4440 = !DILocation(line: 575, column: 14, scope: !4437)
!4441 = !DILocation(line: 576, column: 17, scope: !4437)
!4442 = !DILocation(line: 576, column: 25, scope: !4437)
!4443 = !DILocation(line: 576, column: 27, scope: !4437)
!4444 = !DILocation(line: 576, column: 32, scope: !4437)
!4445 = !DILocation(line: 576, column: 3, scope: !4437)
!4446 = !DILocation(line: 576, column: 7, scope: !4437)
!4447 = !DILocation(line: 576, column: 9, scope: !4437)
!4448 = !DILocation(line: 576, column: 14, scope: !4437)
!4449 = !DILocation(line: 579, column: 16, scope: !4437)
!4450 = !DILocation(line: 579, column: 24, scope: !4437)
!4451 = !DILocation(line: 579, column: 26, scope: !4437)
!4452 = !DILocation(line: 579, column: 3, scope: !4437)
!4453 = !DILocation(line: 579, column: 7, scope: !4437)
!4454 = !DILocation(line: 579, column: 9, scope: !4437)
!4455 = !DILocation(line: 579, column: 14, scope: !4437)
!4456 = !DILocation(line: 580, column: 16, scope: !4437)
!4457 = !DILocation(line: 580, column: 24, scope: !4437)
!4458 = !DILocation(line: 580, column: 26, scope: !4437)
!4459 = !DILocation(line: 580, column: 3, scope: !4437)
!4460 = !DILocation(line: 580, column: 7, scope: !4437)
!4461 = !DILocation(line: 580, column: 9, scope: !4437)
!4462 = !DILocation(line: 580, column: 14, scope: !4437)
!4463 = !DILocation(line: 581, column: 16, scope: !4437)
!4464 = !DILocation(line: 581, column: 24, scope: !4437)
!4465 = !DILocation(line: 581, column: 26, scope: !4437)
!4466 = !DILocation(line: 581, column: 3, scope: !4437)
!4467 = !DILocation(line: 581, column: 7, scope: !4437)
!4468 = !DILocation(line: 581, column: 9, scope: !4437)
!4469 = !DILocation(line: 581, column: 14, scope: !4437)
!4470 = !DILocation(line: 582, column: 2, scope: !4437)
!4471 = !DILocation(line: 584, column: 21, scope: !4355)
!4472 = !DILocation(line: 584, column: 25, scope: !4355)
!4473 = !DILocation(line: 584, column: 33, scope: !4355)
!4474 = !DILocation(line: 584, column: 39, scope: !4355)
!4475 = !DILocation(line: 584, column: 45, scope: !4355)
!4476 = !DILocation(line: 584, column: 2, scope: !4355)
!4477 = !DILocation(line: 586, column: 6, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4355, file: !3, line: 586, column: 6)
!4479 = !DILocation(line: 586, column: 10, scope: !4478)
!4480 = !DILocation(line: 586, column: 16, scope: !4478)
!4481 = !DILocation(line: 586, column: 20, scope: !4478)
!4482 = !DILocation(line: 586, column: 23, scope: !4478)
!4483 = !DILocation(line: 586, column: 27, scope: !4478)
!4484 = !DILocation(line: 586, column: 33, scope: !4478)
!4485 = !DILocation(line: 586, column: 37, scope: !4478)
!4486 = !DILocation(line: 586, column: 61, scope: !4478)
!4487 = !DILocation(line: 586, column: 65, scope: !4478)
!4488 = !DILocation(line: 586, column: 75, scope: !4478)
!4489 = !DILocation(line: 586, column: 41, scope: !4478)
!4490 = !DILocation(line: 586, column: 83, scope: !4478)
!4491 = !DILocation(line: 587, column: 42, scope: !4478)
!4492 = !DILocation(line: 587, column: 46, scope: !4478)
!4493 = !DILocation(line: 587, column: 52, scope: !4478)
!4494 = !DILocation(line: 587, column: 57, scope: !4478)
!4495 = !DILocation(line: 587, column: 60, scope: !4478)
!4496 = !DILocation(line: 587, column: 64, scope: !4478)
!4497 = !DILocation(line: 587, column: 70, scope: !4478)
!4498 = !DILocation(line: 586, column: 6, scope: !4355)
!4499 = !DILocation(line: 589, column: 14, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 588, column: 2)
!4501 = !DILocation(line: 589, column: 18, scope: !4500)
!4502 = !DILocation(line: 589, column: 3, scope: !4500)
!4503 = !DILocation(line: 590, column: 3, scope: !4500)
!4504 = !DILocation(line: 590, column: 7, scope: !4500)
!4505 = !DILocation(line: 590, column: 10, scope: !4500)
!4506 = !DILocation(line: 591, column: 3, scope: !4500)
!4507 = !DILocation(line: 594, column: 42, scope: !4355)
!4508 = !DILocation(line: 594, column: 46, scope: !4355)
!4509 = !DILocation(line: 594, column: 18, scope: !4355)
!4510 = !DILocation(line: 594, column: 2, scope: !4355)
!4511 = !DILocation(line: 594, column: 6, scope: !4355)
!4512 = !DILocation(line: 594, column: 8, scope: !4355)
!4513 = !DILocation(line: 594, column: 16, scope: !4355)
!4514 = !DILocation(line: 597, column: 6, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4355, file: !3, line: 597, column: 6)
!4516 = !DILocation(line: 597, column: 13, scope: !4515)
!4517 = !DILocation(line: 597, column: 17, scope: !4515)
!4518 = !DILocation(line: 597, column: 21, scope: !4515)
!4519 = !DILocation(line: 597, column: 23, scope: !4515)
!4520 = !DILocation(line: 597, column: 31, scope: !4515)
!4521 = !DILocation(line: 597, column: 6, scope: !4355)
!4522 = !DILocation(line: 599, column: 8, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 599, column: 7)
!4524 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 597, column: 49)
!4525 = !DILocation(line: 599, column: 16, scope: !4523)
!4526 = !DILocation(line: 599, column: 18, scope: !4523)
!4527 = !DILocation(line: 599, column: 26, scope: !4523)
!4528 = !DILocation(line: 599, column: 43, scope: !4523)
!4529 = !DILocation(line: 599, column: 7, scope: !4524)
!4530 = !DILocation(line: 600, column: 4, scope: !4523)
!4531 = !DILocation(line: 600, column: 8, scope: !4523)
!4532 = !DILocation(line: 600, column: 10, scope: !4523)
!4533 = !DILocation(line: 600, column: 18, scope: !4523)
!4534 = !DILocation(line: 602, column: 26, scope: !4523)
!4535 = !DILocation(line: 602, column: 34, scope: !4523)
!4536 = !DILocation(line: 602, column: 16, scope: !4523)
!4537 = !DILocation(line: 602, column: 20, scope: !4523)
!4538 = !DILocation(line: 602, column: 24, scope: !4523)
!4539 = !DILocation(line: 602, column: 4, scope: !4523)
!4540 = !DILocation(line: 602, column: 8, scope: !4523)
!4541 = !DILocation(line: 602, column: 10, scope: !4523)
!4542 = !DILocation(line: 602, column: 14, scope: !4523)
!4543 = !DILocation(line: 603, column: 2, scope: !4524)
!4544 = !DILocation(line: 606, column: 7, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 606, column: 7)
!4546 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 604, column: 7)
!4547 = !DILocation(line: 606, column: 11, scope: !4545)
!4548 = !DILocation(line: 606, column: 13, scope: !4545)
!4549 = !DILocation(line: 606, column: 18, scope: !4545)
!4550 = !DILocation(line: 606, column: 7, scope: !4546)
!4551 = !DILocation(line: 607, column: 14, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 606, column: 29)
!4553 = !DILocation(line: 607, column: 18, scope: !4552)
!4554 = !DILocation(line: 607, column: 20, scope: !4552)
!4555 = !DILocation(line: 607, column: 4, scope: !4552)
!4556 = !DILocation(line: 607, column: 8, scope: !4552)
!4557 = !DILocation(line: 607, column: 12, scope: !4552)
!4558 = !DILocation(line: 608, column: 8, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 608, column: 8)
!4560 = !DILocation(line: 608, column: 12, scope: !4559)
!4561 = !DILocation(line: 608, column: 16, scope: !4559)
!4562 = !DILocation(line: 608, column: 8, scope: !4552)
!4563 = !DILocation(line: 608, column: 22, scope: !4559)
!4564 = !DILocation(line: 608, column: 26, scope: !4559)
!4565 = !DILocation(line: 608, column: 30, scope: !4559)
!4566 = !DILocation(line: 609, column: 3, scope: !4552)
!4567 = !DILocation(line: 610, column: 8, scope: !4545)
!4568 = !DILocation(line: 610, column: 12, scope: !4545)
!4569 = !DILocation(line: 610, column: 16, scope: !4545)
!4570 = !DILocation(line: 613, column: 6, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4355, file: !3, line: 613, column: 6)
!4572 = !DILocation(line: 613, column: 6, scope: !4355)
!4573 = !DILocalVariable(name: "index", scope: !4574, file: !3, line: 614, type: !7)
!4574 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 613, column: 11)
!4575 = !DILocation(line: 614, column: 7, scope: !4574)
!4576 = !DILocation(line: 614, column: 30, scope: !4574)
!4577 = !DILocation(line: 614, column: 34, scope: !4574)
!4578 = !DILocation(line: 614, column: 42, scope: !4574)
!4579 = !DILocation(line: 614, column: 15, scope: !4574)
!4580 = !DILocation(line: 615, column: 7, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 615, column: 7)
!4582 = !DILocation(line: 615, column: 13, scope: !4581)
!4583 = !DILocation(line: 615, column: 7, scope: !4574)
!4584 = !DILocation(line: 616, column: 19, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 615, column: 20)
!4586 = !DILocation(line: 616, column: 4, scope: !4585)
!4587 = !DILocation(line: 616, column: 8, scope: !4585)
!4588 = !DILocation(line: 616, column: 10, scope: !4585)
!4589 = !DILocation(line: 616, column: 17, scope: !4585)
!4590 = !DILocation(line: 617, column: 4, scope: !4585)
!4591 = !DILocation(line: 617, column: 8, scope: !4585)
!4592 = !DILocation(line: 617, column: 10, scope: !4585)
!4593 = !DILocation(line: 617, column: 18, scope: !4585)
!4594 = !DILocation(line: 618, column: 3, scope: !4585)
!4595 = !DILocation(line: 619, column: 2, scope: !4574)
!4596 = !DILocation(line: 622, column: 21, scope: !4355)
!4597 = !DILocation(line: 622, column: 2, scope: !4355)
!4598 = !DILocation(line: 625, column: 21, scope: !4355)
!4599 = !DILocation(line: 625, column: 25, scope: !4355)
!4600 = !DILocation(line: 625, column: 2, scope: !4355)
!4601 = !DILocation(line: 627, column: 6, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4355, file: !3, line: 627, column: 6)
!4603 = !DILocation(line: 627, column: 10, scope: !4602)
!4604 = !DILocation(line: 627, column: 12, scope: !4602)
!4605 = !DILocation(line: 627, column: 20, scope: !4602)
!4606 = !DILocation(line: 627, column: 6, scope: !4355)
!4607 = !DILocation(line: 628, column: 7, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 628, column: 7)
!4609 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 627, column: 59)
!4610 = !DILocation(line: 628, column: 21, scope: !4608)
!4611 = !DILocation(line: 628, column: 25, scope: !4608)
!4612 = !DILocation(line: 628, column: 29, scope: !4608)
!4613 = !DILocation(line: 628, column: 31, scope: !4608)
!4614 = !DILocation(line: 628, column: 36, scope: !4608)
!4615 = !DILocation(line: 628, column: 7, scope: !4609)
!4616 = !DILocation(line: 630, column: 23, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 628, column: 51)
!4618 = !DILocation(line: 630, column: 27, scope: !4617)
!4619 = !DILocation(line: 630, column: 4, scope: !4617)
!4620 = !DILocation(line: 631, column: 4, scope: !4617)
!4621 = !DILocation(line: 631, column: 8, scope: !4617)
!4622 = !DILocation(line: 631, column: 15, scope: !4617)
!4623 = !DILocation(line: 632, column: 3, scope: !4617)
!4624 = !DILocation(line: 633, column: 12, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 633, column: 12)
!4626 = !DILocation(line: 633, column: 16, scope: !4625)
!4627 = !DILocation(line: 633, column: 12, scope: !4608)
!4628 = !DILocalVariable(name: "actsrl", scope: !4629, file: !3, line: 634, type: !4359)
!4629 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 633, column: 24)
!4630 = !DILocation(line: 634, column: 22, scope: !4629)
!4631 = !DILocation(line: 634, column: 45, scope: !4629)
!4632 = !DILocation(line: 634, column: 49, scope: !4629)
!4633 = !DILocation(line: 634, column: 51, scope: !4629)
!4634 = !DILocation(line: 634, column: 59, scope: !4629)
!4635 = !DILocation(line: 634, column: 63, scope: !4629)
!4636 = !DILocation(line: 634, column: 65, scope: !4629)
!4637 = !DILocation(line: 634, column: 31, scope: !4629)
!4638 = !DILocalVariable(name: "rl", scope: !4629, file: !3, line: 635, type: !3596)
!4639 = !DILocation(line: 635, column: 17, scope: !4629)
!4640 = !DILocalVariable(name: "have_layer", scope: !4629, file: !3, line: 636, type: !916)
!4641 = !DILocation(line: 636, column: 9, scope: !4629)
!4642 = !DILocation(line: 638, column: 14, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4629, file: !3, line: 638, column: 4)
!4644 = !DILocation(line: 638, column: 18, scope: !4643)
!4645 = !DILocation(line: 638, column: 26, scope: !4643)
!4646 = !DILocation(line: 638, column: 33, scope: !4643)
!4647 = !DILocation(line: 638, column: 12, scope: !4643)
!4648 = !DILocation(line: 638, column: 9, scope: !4643)
!4649 = !DILocation(line: 638, column: 40, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4643, file: !3, line: 638, column: 4)
!4651 = !DILocation(line: 638, column: 4, scope: !4643)
!4652 = !DILocation(line: 639, column: 9, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 639, column: 9)
!4654 = !DILocation(line: 639, column: 9, scope: !4650)
!4655 = !DILocation(line: 640, column: 17, scope: !4653)
!4656 = !DILocation(line: 640, column: 6, scope: !4653)
!4657 = !DILocation(line: 638, column: 49, scope: !4650)
!4658 = !DILocation(line: 638, column: 53, scope: !4650)
!4659 = !DILocation(line: 638, column: 47, scope: !4650)
!4660 = !DILocation(line: 638, column: 4, scope: !4650)
!4661 = distinct !{!4661, !4651, !4662}
!4662 = !DILocation(line: 640, column: 19, scope: !4643)
!4663 = !DILocation(line: 642, column: 8, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4629, file: !3, line: 642, column: 8)
!4665 = !DILocation(line: 642, column: 12, scope: !4664)
!4666 = !DILocation(line: 642, column: 20, scope: !4664)
!4667 = !DILocation(line: 642, column: 29, scope: !4664)
!4668 = !DILocation(line: 642, column: 33, scope: !4664)
!4669 = !DILocation(line: 642, column: 26, scope: !4664)
!4670 = !DILocation(line: 642, column: 39, scope: !4664)
!4671 = !DILocation(line: 642, column: 42, scope: !4664)
!4672 = !DILocation(line: 642, column: 46, scope: !4664)
!4673 = !DILocation(line: 642, column: 54, scope: !4664)
!4674 = !DILocation(line: 642, column: 63, scope: !4664)
!4675 = !DILocation(line: 642, column: 67, scope: !4664)
!4676 = !DILocation(line: 642, column: 60, scope: !4664)
!4677 = !DILocation(line: 642, column: 73, scope: !4664)
!4678 = !DILocation(line: 643, column: 8, scope: !4664)
!4679 = !DILocation(line: 642, column: 8, scope: !4629)
!4680 = !DILocation(line: 647, column: 4, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 644, column: 4)
!4682 = !DILocation(line: 650, column: 24, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 648, column: 9)
!4684 = !DILocation(line: 650, column: 28, scope: !4683)
!4685 = !DILocation(line: 650, column: 5, scope: !4683)
!4686 = !DILocation(line: 651, column: 5, scope: !4683)
!4687 = !DILocation(line: 651, column: 9, scope: !4683)
!4688 = !DILocation(line: 651, column: 16, scope: !4683)
!4689 = !DILocation(line: 653, column: 3, scope: !4629)
!4690 = !DILocation(line: 654, column: 2, scope: !4609)
!4691 = !DILocation(line: 658, column: 22, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 655, column: 7)
!4693 = !DILocation(line: 658, column: 26, scope: !4692)
!4694 = !DILocation(line: 658, column: 3, scope: !4692)
!4695 = !DILocation(line: 659, column: 16, scope: !4692)
!4696 = !DILocation(line: 659, column: 3, scope: !4692)
!4697 = !DILocation(line: 659, column: 7, scope: !4692)
!4698 = !DILocation(line: 659, column: 14, scope: !4692)
!4699 = !DILocation(line: 660, column: 23, scope: !4692)
!4700 = !DILocation(line: 660, column: 27, scope: !4692)
!4701 = !DILocation(line: 660, column: 3, scope: !4692)
!4702 = !DILocation(line: 660, column: 7, scope: !4692)
!4703 = !DILocation(line: 660, column: 15, scope: !4692)
!4704 = !DILocation(line: 660, column: 21, scope: !4692)
!4705 = !DILocation(line: 661, column: 23, scope: !4692)
!4706 = !DILocation(line: 661, column: 27, scope: !4692)
!4707 = !DILocation(line: 661, column: 3, scope: !4692)
!4708 = !DILocation(line: 661, column: 7, scope: !4692)
!4709 = !DILocation(line: 661, column: 15, scope: !4692)
!4710 = !DILocation(line: 661, column: 21, scope: !4692)
!4711 = !DILocation(line: 664, column: 6, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4355, file: !3, line: 664, column: 6)
!4713 = !DILocation(line: 664, column: 10, scope: !4712)
!4714 = !DILocation(line: 664, column: 12, scope: !4712)
!4715 = !DILocation(line: 664, column: 20, scope: !4712)
!4716 = !DILocation(line: 664, column: 6, scope: !4355)
!4717 = !DILocation(line: 665, column: 3, scope: !4712)
!4718 = !DILocation(line: 665, column: 7, scope: !4712)
!4719 = !DILocation(line: 665, column: 17, scope: !4712)
!4720 = !DILocation(line: 665, column: 22, scope: !4712)
!4721 = !DILocation(line: 667, column: 3, scope: !4712)
!4722 = !DILocation(line: 667, column: 7, scope: !4712)
!4723 = !DILocation(line: 667, column: 17, scope: !4712)
!4724 = !DILocation(line: 667, column: 22, scope: !4712)
!4725 = !DILocation(line: 670, column: 17, scope: !4355)
!4726 = !DILocation(line: 670, column: 2, scope: !4355)
!4727 = !DILocation(line: 672, column: 23, scope: !4355)
!4728 = !DILocation(line: 672, column: 27, scope: !4355)
!4729 = !DILocation(line: 672, column: 2, scope: !4355)
!4730 = !DILocation(line: 674, column: 19, scope: !4355)
!4731 = !DILocation(line: 674, column: 23, scope: !4355)
!4732 = !DILocation(line: 674, column: 34, scope: !4355)
!4733 = !DILocation(line: 674, column: 2, scope: !4355)
!4734 = !DILocation(line: 674, column: 6, scope: !4355)
!4735 = !DILocation(line: 674, column: 17, scope: !4355)
!4736 = !DILocation(line: 676, column: 22, scope: !4355)
!4737 = !DILocation(line: 676, column: 2, scope: !4355)
!4738 = !DILocation(line: 677, column: 1, scope: !4355)
!4739 = distinct !DISubprogram(name: "re_init_resolution", scope: !3, file: !3, line: 515, type: !4740, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4740 = !DISubroutineType(types: !4741)
!4741 = !{null, !3576, !3576, !7, !7, !4388}
!4742 = !DILocalVariable(name: "re", arg: 1, scope: !4739, file: !3, line: 515, type: !3576)
!4743 = !DILocation(line: 515, column: 40, scope: !4739)
!4744 = !DILocalVariable(name: "source", arg: 2, scope: !4739, file: !3, line: 515, type: !3576)
!4745 = !DILocation(line: 515, column: 52, scope: !4739)
!4746 = !DILocalVariable(name: "winx", arg: 3, scope: !4739, file: !3, line: 516, type: !7)
!4747 = !DILocation(line: 516, column: 36, scope: !4739)
!4748 = !DILocalVariable(name: "winy", arg: 4, scope: !4739, file: !3, line: 516, type: !7)
!4749 = !DILocation(line: 516, column: 46, scope: !4739)
!4750 = !DILocalVariable(name: "disprect", arg: 5, scope: !4739, file: !3, line: 516, type: !4388)
!4751 = !DILocation(line: 516, column: 58, scope: !4739)
!4752 = !DILocation(line: 518, column: 13, scope: !4739)
!4753 = !DILocation(line: 518, column: 2, scope: !4739)
!4754 = !DILocation(line: 518, column: 6, scope: !4739)
!4755 = !DILocation(line: 518, column: 11, scope: !4739)
!4756 = !DILocation(line: 519, column: 13, scope: !4739)
!4757 = !DILocation(line: 519, column: 2, scope: !4739)
!4758 = !DILocation(line: 519, column: 6, scope: !4739)
!4759 = !DILocation(line: 519, column: 11, scope: !4739)
!4760 = !DILocation(line: 520, column: 6, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 520, column: 6)
!4762 = !DILocation(line: 520, column: 13, scope: !4761)
!4763 = !DILocation(line: 520, column: 17, scope: !4761)
!4764 = !DILocation(line: 520, column: 25, scope: !4761)
!4765 = !DILocation(line: 520, column: 27, scope: !4761)
!4766 = !DILocation(line: 520, column: 32, scope: !4761)
!4767 = !DILocation(line: 520, column: 6, scope: !4739)
!4768 = !DILocation(line: 527, column: 23, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 520, column: 45)
!4770 = !DILocation(line: 527, column: 31, scope: !4769)
!4771 = !DILocation(line: 527, column: 33, scope: !4769)
!4772 = !DILocation(line: 527, column: 40, scope: !4769)
!4773 = !DILocation(line: 527, column: 47, scope: !4769)
!4774 = !DILocation(line: 527, column: 45, scope: !4769)
!4775 = !DILocation(line: 527, column: 3, scope: !4769)
!4776 = !DILocation(line: 527, column: 7, scope: !4769)
!4777 = !DILocation(line: 527, column: 16, scope: !4769)
!4778 = !DILocation(line: 527, column: 21, scope: !4769)
!4779 = !DILocation(line: 528, column: 23, scope: !4769)
!4780 = !DILocation(line: 528, column: 31, scope: !4769)
!4781 = !DILocation(line: 528, column: 33, scope: !4769)
!4782 = !DILocation(line: 528, column: 40, scope: !4769)
!4783 = !DILocation(line: 528, column: 47, scope: !4769)
!4784 = !DILocation(line: 528, column: 45, scope: !4769)
!4785 = !DILocation(line: 528, column: 3, scope: !4769)
!4786 = !DILocation(line: 528, column: 7, scope: !4769)
!4787 = !DILocation(line: 528, column: 16, scope: !4769)
!4788 = !DILocation(line: 528, column: 21, scope: !4769)
!4789 = !DILocation(line: 530, column: 23, scope: !4769)
!4790 = !DILocation(line: 530, column: 31, scope: !4769)
!4791 = !DILocation(line: 530, column: 33, scope: !4769)
!4792 = !DILocation(line: 530, column: 40, scope: !4769)
!4793 = !DILocation(line: 530, column: 47, scope: !4769)
!4794 = !DILocation(line: 530, column: 45, scope: !4769)
!4795 = !DILocation(line: 530, column: 3, scope: !4769)
!4796 = !DILocation(line: 530, column: 7, scope: !4769)
!4797 = !DILocation(line: 530, column: 16, scope: !4769)
!4798 = !DILocation(line: 530, column: 21, scope: !4769)
!4799 = !DILocation(line: 531, column: 23, scope: !4769)
!4800 = !DILocation(line: 531, column: 31, scope: !4769)
!4801 = !DILocation(line: 531, column: 33, scope: !4769)
!4802 = !DILocation(line: 531, column: 40, scope: !4769)
!4803 = !DILocation(line: 531, column: 47, scope: !4769)
!4804 = !DILocation(line: 531, column: 45, scope: !4769)
!4805 = !DILocation(line: 531, column: 3, scope: !4769)
!4806 = !DILocation(line: 531, column: 7, scope: !4769)
!4807 = !DILocation(line: 531, column: 16, scope: !4769)
!4808 = !DILocation(line: 531, column: 21, scope: !4769)
!4809 = !DILocation(line: 533, column: 32, scope: !4769)
!4810 = !DILocation(line: 533, column: 36, scope: !4769)
!4811 = !DILocation(line: 533, column: 15, scope: !4769)
!4812 = !DILocation(line: 533, column: 3, scope: !4769)
!4813 = !DILocation(line: 533, column: 7, scope: !4769)
!4814 = !DILocation(line: 533, column: 13, scope: !4769)
!4815 = !DILocation(line: 534, column: 32, scope: !4769)
!4816 = !DILocation(line: 534, column: 36, scope: !4769)
!4817 = !DILocation(line: 534, column: 15, scope: !4769)
!4818 = !DILocation(line: 534, column: 3, scope: !4769)
!4819 = !DILocation(line: 534, column: 7, scope: !4769)
!4820 = !DILocation(line: 534, column: 13, scope: !4769)
!4821 = !DILocation(line: 537, column: 3, scope: !4769)
!4822 = !DILocation(line: 537, column: 7, scope: !4769)
!4823 = !DILocation(line: 537, column: 9, scope: !4769)
!4824 = !DILocation(line: 537, column: 18, scope: !4769)
!4825 = !DILocation(line: 537, column: 26, scope: !4769)
!4826 = !DILocation(line: 537, column: 28, scope: !4769)
!4827 = !DILocation(line: 538, column: 2, scope: !4769)
!4828 = !DILocation(line: 539, column: 11, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 539, column: 11)
!4830 = !DILocation(line: 539, column: 11, scope: !4761)
!4831 = !DILocation(line: 540, column: 3, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 539, column: 21)
!4833 = !DILocation(line: 540, column: 7, scope: !4832)
!4834 = !DILocation(line: 540, column: 19, scope: !4832)
!4835 = !DILocation(line: 540, column: 18, scope: !4832)
!4836 = !DILocation(line: 541, column: 32, scope: !4832)
!4837 = !DILocation(line: 541, column: 36, scope: !4832)
!4838 = !DILocation(line: 541, column: 15, scope: !4832)
!4839 = !DILocation(line: 541, column: 3, scope: !4832)
!4840 = !DILocation(line: 541, column: 7, scope: !4832)
!4841 = !DILocation(line: 541, column: 13, scope: !4832)
!4842 = !DILocation(line: 542, column: 32, scope: !4832)
!4843 = !DILocation(line: 542, column: 36, scope: !4832)
!4844 = !DILocation(line: 542, column: 15, scope: !4832)
!4845 = !DILocation(line: 542, column: 3, scope: !4832)
!4846 = !DILocation(line: 542, column: 7, scope: !4832)
!4847 = !DILocation(line: 542, column: 13, scope: !4832)
!4848 = !DILocation(line: 543, column: 2, scope: !4832)
!4849 = !DILocation(line: 545, column: 23, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 544, column: 7)
!4851 = !DILocation(line: 545, column: 27, scope: !4850)
!4852 = !DILocation(line: 545, column: 36, scope: !4850)
!4853 = !DILocation(line: 545, column: 41, scope: !4850)
!4854 = !DILocation(line: 545, column: 3, scope: !4850)
!4855 = !DILocation(line: 545, column: 7, scope: !4850)
!4856 = !DILocation(line: 545, column: 16, scope: !4850)
!4857 = !DILocation(line: 545, column: 21, scope: !4850)
!4858 = !DILocation(line: 546, column: 23, scope: !4850)
!4859 = !DILocation(line: 546, column: 3, scope: !4850)
!4860 = !DILocation(line: 546, column: 7, scope: !4850)
!4861 = !DILocation(line: 546, column: 16, scope: !4850)
!4862 = !DILocation(line: 546, column: 21, scope: !4850)
!4863 = !DILocation(line: 547, column: 23, scope: !4850)
!4864 = !DILocation(line: 547, column: 3, scope: !4850)
!4865 = !DILocation(line: 547, column: 7, scope: !4850)
!4866 = !DILocation(line: 547, column: 16, scope: !4850)
!4867 = !DILocation(line: 547, column: 21, scope: !4850)
!4868 = !DILocation(line: 548, column: 15, scope: !4850)
!4869 = !DILocation(line: 548, column: 3, scope: !4850)
!4870 = !DILocation(line: 548, column: 7, scope: !4850)
!4871 = !DILocation(line: 548, column: 13, scope: !4850)
!4872 = !DILocation(line: 549, column: 15, scope: !4850)
!4873 = !DILocation(line: 549, column: 3, scope: !4850)
!4874 = !DILocation(line: 549, column: 7, scope: !4850)
!4875 = !DILocation(line: 549, column: 13, scope: !4850)
!4876 = !DILocation(line: 553, column: 39, scope: !4739)
!4877 = !DILocation(line: 553, column: 43, scope: !4739)
!4878 = !DILocation(line: 553, column: 50, scope: !4739)
!4879 = !DILocation(line: 553, column: 54, scope: !4739)
!4880 = !DILocation(line: 553, column: 48, scope: !4739)
!4881 = !DILocation(line: 553, column: 61, scope: !4739)
!4882 = !DILocation(line: 553, column: 65, scope: !4739)
!4883 = !DILocation(line: 553, column: 72, scope: !4739)
!4884 = !DILocation(line: 553, column: 76, scope: !4739)
!4885 = !DILocation(line: 553, column: 31, scope: !4739)
!4886 = !DILocation(line: 553, column: 29, scope: !4739)
!4887 = !DILocation(line: 553, column: 22, scope: !4739)
!4888 = !DILocation(line: 553, column: 2, scope: !4739)
!4889 = !DILocation(line: 553, column: 6, scope: !4739)
!4890 = !DILocation(line: 553, column: 15, scope: !4739)
!4891 = !DILocation(line: 554, column: 1, scope: !4739)
!4892 = distinct !DISubprogram(name: "check_mode_full_sample", scope: !3, file: !3, line: 491, type: !4893, scopeLine: 492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4893 = !DISubroutineType(types: !4894)
!4894 = !{!7, !4358}
!4895 = !DILocalVariable(name: "rd", arg: 1, scope: !4892, file: !3, line: 491, type: !4358)
!4896 = !DILocation(line: 491, column: 47, scope: !4892)
!4897 = !DILocalVariable(name: "scemode", scope: !4892, file: !3, line: 493, type: !7)
!4898 = !DILocation(line: 493, column: 6, scope: !4892)
!4899 = !DILocation(line: 493, column: 16, scope: !4892)
!4900 = !DILocation(line: 493, column: 20, scope: !4892)
!4901 = !DILocation(line: 495, column: 7, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 495, column: 6)
!4903 = !DILocation(line: 495, column: 11, scope: !4902)
!4904 = !DILocation(line: 495, column: 16, scope: !4902)
!4905 = !DILocation(line: 495, column: 25, scope: !4902)
!4906 = !DILocation(line: 495, column: 6, scope: !4892)
!4907 = !DILocation(line: 496, column: 11, scope: !4902)
!4908 = !DILocation(line: 496, column: 3, scope: !4902)
!4909 = !DILocation(line: 509, column: 10, scope: !4892)
!4910 = !DILocation(line: 512, column: 9, scope: !4892)
!4911 = !DILocation(line: 512, column: 2, scope: !4892)
!4912 = distinct !DISubprogram(name: "RE_init_threadcount", scope: !3, file: !3, line: 3205, type: !3574, scopeLine: 3206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4913 = !DILocalVariable(name: "re", arg: 1, scope: !4912, file: !3, line: 3205, type: !3576)
!4914 = !DILocation(line: 3205, column: 34, scope: !4912)
!4915 = !DILocation(line: 3207, column: 42, scope: !4912)
!4916 = !DILocation(line: 3207, column: 46, scope: !4912)
!4917 = !DILocation(line: 3207, column: 18, scope: !4912)
!4918 = !DILocation(line: 3207, column: 2, scope: !4912)
!4919 = !DILocation(line: 3207, column: 6, scope: !4912)
!4920 = !DILocation(line: 3207, column: 8, scope: !4912)
!4921 = !DILocation(line: 3207, column: 16, scope: !4912)
!4922 = !DILocation(line: 3208, column: 1, scope: !4912)
!4923 = distinct !DISubprogram(name: "RE_ChangeResolution", scope: !3, file: !3, line: 730, type: !4924, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{null, !3576, !7, !7, !4388}
!4926 = !DILocalVariable(name: "re", arg: 1, scope: !4923, file: !3, line: 730, type: !3576)
!4927 = !DILocation(line: 730, column: 34, scope: !4923)
!4928 = !DILocalVariable(name: "winx", arg: 2, scope: !4923, file: !3, line: 730, type: !7)
!4929 = !DILocation(line: 730, column: 42, scope: !4923)
!4930 = !DILocalVariable(name: "winy", arg: 3, scope: !4923, file: !3, line: 730, type: !7)
!4931 = !DILocation(line: 730, column: 52, scope: !4923)
!4932 = !DILocalVariable(name: "disprect", arg: 4, scope: !4923, file: !3, line: 730, type: !4388)
!4933 = !DILocation(line: 730, column: 64, scope: !4923)
!4934 = !DILocation(line: 732, column: 21, scope: !4923)
!4935 = !DILocation(line: 732, column: 31, scope: !4923)
!4936 = !DILocation(line: 732, column: 37, scope: !4923)
!4937 = !DILocation(line: 732, column: 43, scope: !4923)
!4938 = !DILocation(line: 732, column: 2, scope: !4923)
!4939 = !DILocation(line: 733, column: 17, scope: !4923)
!4940 = !DILocation(line: 733, column: 2, scope: !4923)
!4941 = !DILocation(line: 735, column: 6, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4923, file: !3, line: 735, column: 6)
!4943 = !DILocation(line: 735, column: 10, scope: !4942)
!4944 = !DILocation(line: 735, column: 6, scope: !4923)
!4945 = !DILocation(line: 736, column: 22, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 735, column: 18)
!4947 = !DILocation(line: 736, column: 26, scope: !4946)
!4948 = !DILocation(line: 736, column: 3, scope: !4946)
!4949 = !DILocation(line: 737, column: 25, scope: !4946)
!4950 = !DILocation(line: 737, column: 3, scope: !4946)
!4951 = !DILocation(line: 738, column: 24, scope: !4946)
!4952 = !DILocation(line: 738, column: 28, scope: !4946)
!4953 = !DILocation(line: 738, column: 3, scope: !4946)
!4954 = !DILocation(line: 739, column: 2, scope: !4946)
!4955 = !DILocation(line: 740, column: 1, scope: !4923)
!4956 = distinct !DISubprogram(name: "render_result_rescale", scope: !3, file: !3, line: 679, type: !3574, scopeLine: 680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!4957 = !DILocalVariable(name: "re", arg: 1, scope: !4956, file: !3, line: 679, type: !3576)
!4958 = !DILocation(line: 679, column: 43, scope: !4956)
!4959 = !DILocalVariable(name: "result", scope: !4956, file: !3, line: 681, type: !3006)
!4960 = !DILocation(line: 681, column: 16, scope: !4956)
!4961 = !DILocation(line: 681, column: 25, scope: !4956)
!4962 = !DILocation(line: 681, column: 29, scope: !4956)
!4963 = !DILocalVariable(name: "x", scope: !4956, file: !3, line: 682, type: !7)
!4964 = !DILocation(line: 682, column: 6, scope: !4956)
!4965 = !DILocalVariable(name: "y", scope: !4956, file: !3, line: 682, type: !7)
!4966 = !DILocation(line: 682, column: 9, scope: !4956)
!4967 = !DILocalVariable(name: "scale_x", scope: !4956, file: !3, line: 683, type: !216)
!4968 = !DILocation(line: 683, column: 8, scope: !4956)
!4969 = !DILocalVariable(name: "scale_y", scope: !4956, file: !3, line: 683, type: !216)
!4970 = !DILocation(line: 683, column: 17, scope: !4956)
!4971 = !DILocalVariable(name: "src_rectf", scope: !4956, file: !3, line: 684, type: !778)
!4972 = !DILocation(line: 684, column: 9, scope: !4956)
!4973 = !DILocation(line: 686, column: 14, scope: !4956)
!4974 = !DILocation(line: 686, column: 22, scope: !4956)
!4975 = !DILocation(line: 686, column: 12, scope: !4956)
!4976 = !DILocation(line: 687, column: 6, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 687, column: 6)
!4978 = !DILocation(line: 687, column: 16, scope: !4977)
!4979 = !DILocation(line: 687, column: 6, scope: !4956)
!4980 = !DILocalVariable(name: "rl", scope: !4981, file: !3, line: 688, type: !3596)
!4981 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 687, column: 25)
!4982 = !DILocation(line: 688, column: 16, scope: !4981)
!4983 = !DILocation(line: 688, column: 45, scope: !4981)
!4984 = !DILocation(line: 688, column: 49, scope: !4981)
!4985 = !DILocation(line: 688, column: 53, scope: !4981)
!4986 = !DILocation(line: 688, column: 21, scope: !4981)
!4987 = !DILocation(line: 689, column: 7, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 689, column: 7)
!4989 = !DILocation(line: 689, column: 10, scope: !4988)
!4990 = !DILocation(line: 689, column: 7, scope: !4981)
!4991 = !DILocation(line: 690, column: 16, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 689, column: 19)
!4993 = !DILocation(line: 690, column: 20, scope: !4992)
!4994 = !DILocation(line: 690, column: 14, scope: !4992)
!4995 = !DILocation(line: 691, column: 3, scope: !4992)
!4996 = !DILocation(line: 692, column: 2, scope: !4981)
!4997 = !DILocation(line: 694, column: 6, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 694, column: 6)
!4999 = !DILocation(line: 694, column: 16, scope: !4998)
!5000 = !DILocation(line: 694, column: 6, scope: !4956)
!5001 = !DILocalVariable(name: "dst_rectf", scope: !5002, file: !3, line: 695, type: !778)
!5002 = distinct !DILexicalBlock(scope: !4998, file: !3, line: 694, column: 25)
!5003 = !DILocation(line: 695, column: 10, scope: !5002)
!5004 = !DILocation(line: 696, column: 34, scope: !5002)
!5005 = !DILocation(line: 697, column: 35, scope: !5002)
!5006 = !DILocation(line: 697, column: 39, scope: !5002)
!5007 = !DILocation(line: 696, column: 16, scope: !5002)
!5008 = !DILocation(line: 696, column: 3, scope: !5002)
!5009 = !DILocation(line: 696, column: 7, scope: !5002)
!5010 = !DILocation(line: 696, column: 14, scope: !5002)
!5011 = !DILocation(line: 702, column: 7, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 702, column: 7)
!5013 = !DILocation(line: 702, column: 11, scope: !5012)
!5014 = !DILocation(line: 702, column: 18, scope: !5012)
!5015 = !DILocation(line: 702, column: 7, scope: !5002)
!5016 = !DILocation(line: 703, column: 16, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 702, column: 27)
!5018 = !DILocation(line: 703, column: 20, scope: !5017)
!5019 = !DILocation(line: 703, column: 28, scope: !5017)
!5020 = !DILocation(line: 703, column: 14, scope: !5017)
!5021 = !DILocation(line: 704, column: 8, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 704, column: 8)
!5023 = !DILocation(line: 704, column: 18, scope: !5022)
!5024 = !DILocation(line: 704, column: 8, scope: !5017)
!5025 = !DILocalVariable(name: "rl", scope: !5026, file: !3, line: 705, type: !3596)
!5026 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 704, column: 27)
!5027 = !DILocation(line: 705, column: 18, scope: !5026)
!5028 = !DILocation(line: 706, column: 34, scope: !5026)
!5029 = !DILocation(line: 706, column: 38, scope: !5026)
!5030 = !DILocation(line: 706, column: 42, scope: !5026)
!5031 = !DILocation(line: 706, column: 10, scope: !5026)
!5032 = !DILocation(line: 706, column: 8, scope: !5026)
!5033 = !DILocation(line: 707, column: 9, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5026, file: !3, line: 707, column: 9)
!5035 = !DILocation(line: 707, column: 12, scope: !5034)
!5036 = !DILocation(line: 707, column: 9, scope: !5026)
!5037 = !DILocation(line: 708, column: 18, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 707, column: 21)
!5039 = !DILocation(line: 708, column: 22, scope: !5038)
!5040 = !DILocation(line: 708, column: 16, scope: !5038)
!5041 = !DILocation(line: 709, column: 5, scope: !5038)
!5042 = !DILocation(line: 710, column: 4, scope: !5026)
!5043 = !DILocation(line: 712, column: 22, scope: !5017)
!5044 = !DILocation(line: 712, column: 30, scope: !5017)
!5045 = !DILocation(line: 712, column: 14, scope: !5017)
!5046 = !DILocation(line: 712, column: 38, scope: !5017)
!5047 = !DILocation(line: 712, column: 42, scope: !5017)
!5048 = !DILocation(line: 712, column: 50, scope: !5017)
!5049 = !DILocation(line: 712, column: 36, scope: !5017)
!5050 = !DILocation(line: 712, column: 12, scope: !5017)
!5051 = !DILocation(line: 713, column: 22, scope: !5017)
!5052 = !DILocation(line: 713, column: 30, scope: !5017)
!5053 = !DILocation(line: 713, column: 14, scope: !5017)
!5054 = !DILocation(line: 713, column: 38, scope: !5017)
!5055 = !DILocation(line: 713, column: 42, scope: !5017)
!5056 = !DILocation(line: 713, column: 50, scope: !5017)
!5057 = !DILocation(line: 713, column: 36, scope: !5017)
!5058 = !DILocation(line: 713, column: 12, scope: !5017)
!5059 = !DILocation(line: 714, column: 11, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 714, column: 4)
!5061 = !DILocation(line: 714, column: 9, scope: !5060)
!5062 = !DILocation(line: 714, column: 16, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5060, file: !3, line: 714, column: 4)
!5064 = !DILocation(line: 714, column: 20, scope: !5063)
!5065 = !DILocation(line: 714, column: 24, scope: !5063)
!5066 = !DILocation(line: 714, column: 32, scope: !5063)
!5067 = !DILocation(line: 714, column: 18, scope: !5063)
!5068 = !DILocation(line: 714, column: 4, scope: !5060)
!5069 = !DILocation(line: 715, column: 12, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 715, column: 5)
!5071 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 714, column: 44)
!5072 = !DILocation(line: 715, column: 10, scope: !5070)
!5073 = !DILocation(line: 715, column: 17, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 715, column: 5)
!5075 = !DILocation(line: 715, column: 21, scope: !5074)
!5076 = !DILocation(line: 715, column: 25, scope: !5074)
!5077 = !DILocation(line: 715, column: 33, scope: !5074)
!5078 = !DILocation(line: 715, column: 19, scope: !5074)
!5079 = !DILocation(line: 715, column: 5, scope: !5070)
!5080 = !DILocalVariable(name: "src_x", scope: !5081, file: !3, line: 716, type: !7)
!5081 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 715, column: 45)
!5082 = !DILocation(line: 716, column: 10, scope: !5081)
!5083 = !DILocation(line: 716, column: 18, scope: !5081)
!5084 = !DILocation(line: 716, column: 22, scope: !5081)
!5085 = !DILocation(line: 716, column: 20, scope: !5081)
!5086 = !DILocalVariable(name: "src_y", scope: !5081, file: !3, line: 717, type: !7)
!5087 = !DILocation(line: 717, column: 10, scope: !5081)
!5088 = !DILocation(line: 717, column: 18, scope: !5081)
!5089 = !DILocation(line: 717, column: 22, scope: !5081)
!5090 = !DILocation(line: 717, column: 20, scope: !5081)
!5091 = !DILocalVariable(name: "dst_index", scope: !5081, file: !3, line: 718, type: !7)
!5092 = !DILocation(line: 718, column: 10, scope: !5081)
!5093 = !DILocation(line: 718, column: 22, scope: !5081)
!5094 = !DILocation(line: 718, column: 26, scope: !5081)
!5095 = !DILocation(line: 718, column: 30, scope: !5081)
!5096 = !DILocation(line: 718, column: 38, scope: !5081)
!5097 = !DILocation(line: 718, column: 24, scope: !5081)
!5098 = !DILocation(line: 718, column: 46, scope: !5081)
!5099 = !DILocation(line: 718, column: 44, scope: !5081)
!5100 = !DILocalVariable(name: "src_index", scope: !5081, file: !3, line: 719, type: !7)
!5101 = !DILocation(line: 719, column: 10, scope: !5081)
!5102 = !DILocation(line: 719, column: 22, scope: !5081)
!5103 = !DILocation(line: 719, column: 30, scope: !5081)
!5104 = !DILocation(line: 719, column: 38, scope: !5081)
!5105 = !DILocation(line: 719, column: 28, scope: !5081)
!5106 = !DILocation(line: 719, column: 46, scope: !5081)
!5107 = !DILocation(line: 719, column: 44, scope: !5081)
!5108 = !DILocation(line: 720, column: 17, scope: !5081)
!5109 = !DILocation(line: 720, column: 29, scope: !5081)
!5110 = !DILocation(line: 720, column: 39, scope: !5081)
!5111 = !DILocation(line: 720, column: 27, scope: !5081)
!5112 = !DILocation(line: 721, column: 17, scope: !5081)
!5113 = !DILocation(line: 721, column: 29, scope: !5081)
!5114 = !DILocation(line: 721, column: 39, scope: !5081)
!5115 = !DILocation(line: 721, column: 27, scope: !5081)
!5116 = !DILocation(line: 720, column: 6, scope: !5081)
!5117 = !DILocation(line: 722, column: 5, scope: !5081)
!5118 = !DILocation(line: 715, column: 40, scope: !5074)
!5119 = !DILocation(line: 715, column: 5, scope: !5074)
!5120 = distinct !{!5120, !5079, !5121}
!5121 = !DILocation(line: 722, column: 5, scope: !5070)
!5122 = !DILocation(line: 723, column: 4, scope: !5071)
!5123 = !DILocation(line: 714, column: 39, scope: !5063)
!5124 = !DILocation(line: 714, column: 4, scope: !5063)
!5125 = distinct !{!5125, !5068, !5126}
!5126 = !DILocation(line: 723, column: 4, scope: !5060)
!5127 = !DILocation(line: 724, column: 3, scope: !5017)
!5128 = !DILocation(line: 725, column: 2, scope: !5002)
!5129 = !DILocation(line: 727, column: 21, scope: !4956)
!5130 = !DILocation(line: 727, column: 2, scope: !4956)
!5131 = !DILocation(line: 728, column: 1, scope: !4956)
!5132 = distinct !DISubprogram(name: "RE_ChangeModeFlag", scope: !3, file: !3, line: 746, type: !5133, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5133 = !DISubroutineType(types: !5134)
!5134 = !{null, !3576, !7, !916}
!5135 = !DILocalVariable(name: "re", arg: 1, scope: !5132, file: !3, line: 746, type: !3576)
!5136 = !DILocation(line: 746, column: 32, scope: !5132)
!5137 = !DILocalVariable(name: "flag", arg: 2, scope: !5132, file: !3, line: 746, type: !7)
!5138 = !DILocation(line: 746, column: 40, scope: !5132)
!5139 = !DILocalVariable(name: "clear", arg: 3, scope: !5132, file: !3, line: 746, type: !916)
!5140 = !DILocation(line: 746, column: 51, scope: !5132)
!5141 = !DILocation(line: 748, column: 6, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 748, column: 6)
!5143 = !DILocation(line: 748, column: 6, scope: !5132)
!5144 = !DILocation(line: 749, column: 18, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 748, column: 13)
!5146 = !DILocation(line: 749, column: 17, scope: !5145)
!5147 = !DILocation(line: 749, column: 3, scope: !5145)
!5148 = !DILocation(line: 749, column: 7, scope: !5145)
!5149 = !DILocation(line: 749, column: 9, scope: !5145)
!5150 = !DILocation(line: 749, column: 14, scope: !5145)
!5151 = !DILocation(line: 750, column: 2, scope: !5145)
!5152 = !DILocation(line: 752, column: 17, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 751, column: 7)
!5154 = !DILocation(line: 752, column: 3, scope: !5153)
!5155 = !DILocation(line: 752, column: 7, scope: !5153)
!5156 = !DILocation(line: 752, column: 9, scope: !5153)
!5157 = !DILocation(line: 752, column: 14, scope: !5153)
!5158 = !DILocation(line: 754, column: 1, scope: !5132)
!5159 = distinct !DISubprogram(name: "render_update_anim_renderdata", scope: !3, file: !3, line: 758, type: !5160, scopeLine: 759, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5160 = !DISubroutineType(types: !5161)
!5161 = !{null, !3576, !4358}
!5162 = !DILocalVariable(name: "re", arg: 1, scope: !5159, file: !3, line: 758, type: !3576)
!5163 = !DILocation(line: 758, column: 44, scope: !5159)
!5164 = !DILocalVariable(name: "rd", arg: 2, scope: !5159, file: !3, line: 758, type: !4358)
!5165 = !DILocation(line: 758, column: 60, scope: !5159)
!5166 = !DILocation(line: 761, column: 16, scope: !5159)
!5167 = !DILocation(line: 761, column: 20, scope: !5159)
!5168 = !DILocation(line: 761, column: 2, scope: !5159)
!5169 = !DILocation(line: 761, column: 6, scope: !5159)
!5170 = !DILocation(line: 761, column: 8, scope: !5159)
!5171 = !DILocation(line: 761, column: 14, scope: !5159)
!5172 = !DILocation(line: 764, column: 24, scope: !5159)
!5173 = !DILocation(line: 764, column: 28, scope: !5159)
!5174 = !DILocation(line: 764, column: 2, scope: !5159)
!5175 = !DILocation(line: 764, column: 6, scope: !5159)
!5176 = !DILocation(line: 764, column: 8, scope: !5159)
!5177 = !DILocation(line: 764, column: 22, scope: !5159)
!5178 = !DILocation(line: 765, column: 18, scope: !5159)
!5179 = !DILocation(line: 765, column: 22, scope: !5159)
!5180 = !DILocation(line: 765, column: 2, scope: !5159)
!5181 = !DILocation(line: 765, column: 6, scope: !5159)
!5182 = !DILocation(line: 765, column: 8, scope: !5159)
!5183 = !DILocation(line: 765, column: 16, scope: !5159)
!5184 = !DILocation(line: 768, column: 30, scope: !5159)
!5185 = !DILocation(line: 768, column: 34, scope: !5159)
!5186 = !DILocation(line: 768, column: 2, scope: !5159)
!5187 = !DILocation(line: 768, column: 6, scope: !5159)
!5188 = !DILocation(line: 768, column: 8, scope: !5159)
!5189 = !DILocation(line: 768, column: 28, scope: !5159)
!5190 = !DILocation(line: 769, column: 30, scope: !5159)
!5191 = !DILocation(line: 769, column: 34, scope: !5159)
!5192 = !DILocation(line: 769, column: 2, scope: !5159)
!5193 = !DILocation(line: 769, column: 6, scope: !5159)
!5194 = !DILocation(line: 769, column: 8, scope: !5159)
!5195 = !DILocation(line: 769, column: 28, scope: !5159)
!5196 = !DILocation(line: 772, column: 17, scope: !5159)
!5197 = !DILocation(line: 772, column: 21, scope: !5159)
!5198 = !DILocation(line: 772, column: 23, scope: !5159)
!5199 = !DILocation(line: 772, column: 2, scope: !5159)
!5200 = !DILocation(line: 773, column: 21, scope: !5159)
!5201 = !DILocation(line: 773, column: 25, scope: !5159)
!5202 = !DILocation(line: 773, column: 27, scope: !5159)
!5203 = !DILocation(line: 773, column: 36, scope: !5159)
!5204 = !DILocation(line: 773, column: 40, scope: !5159)
!5205 = !DILocation(line: 773, column: 2, scope: !5159)
!5206 = !DILocation(line: 774, column: 1, scope: !5159)
!5207 = distinct !DISubprogram(name: "RE_SetWindow", scope: !3, file: !3, line: 776, type: !5208, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{null, !3576, !5210, !216, !216}
!5210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!5211 = !DILocalVariable(name: "re", arg: 1, scope: !5207, file: !3, line: 776, type: !3576)
!5212 = !DILocation(line: 776, column: 27, scope: !5207)
!5213 = !DILocalVariable(name: "viewplane", arg: 2, scope: !5207, file: !3, line: 776, type: !5210)
!5214 = !DILocation(line: 776, column: 37, scope: !5207)
!5215 = !DILocalVariable(name: "clipsta", arg: 3, scope: !5207, file: !3, line: 776, type: !216)
!5216 = !DILocation(line: 776, column: 54, scope: !5207)
!5217 = !DILocalVariable(name: "clipend", arg: 4, scope: !5207, file: !3, line: 776, type: !216)
!5218 = !DILocation(line: 776, column: 69, scope: !5207)
!5219 = !DILocation(line: 780, column: 2, scope: !5207)
!5220 = !DILocation(line: 780, column: 6, scope: !5207)
!5221 = !DILocation(line: 780, column: 19, scope: !5207)
!5222 = !DILocation(line: 780, column: 18, scope: !5207)
!5223 = !DILocation(line: 781, column: 16, scope: !5207)
!5224 = !DILocation(line: 781, column: 2, scope: !5207)
!5225 = !DILocation(line: 781, column: 6, scope: !5207)
!5226 = !DILocation(line: 781, column: 14, scope: !5207)
!5227 = !DILocation(line: 782, column: 16, scope: !5207)
!5228 = !DILocation(line: 782, column: 2, scope: !5207)
!5229 = !DILocation(line: 782, column: 6, scope: !5207)
!5230 = !DILocation(line: 782, column: 14, scope: !5207)
!5231 = !DILocation(line: 783, column: 2, scope: !5207)
!5232 = !DILocation(line: 783, column: 6, scope: !5207)
!5233 = !DILocation(line: 783, column: 8, scope: !5207)
!5234 = !DILocation(line: 783, column: 13, scope: !5207)
!5235 = !DILocation(line: 785, column: 17, scope: !5207)
!5236 = !DILocation(line: 785, column: 21, scope: !5207)
!5237 = !DILocation(line: 786, column: 17, scope: !5207)
!5238 = !DILocation(line: 786, column: 21, scope: !5207)
!5239 = !DILocation(line: 786, column: 31, scope: !5207)
!5240 = !DILocation(line: 786, column: 37, scope: !5207)
!5241 = !DILocation(line: 786, column: 41, scope: !5207)
!5242 = !DILocation(line: 786, column: 51, scope: !5207)
!5243 = !DILocation(line: 787, column: 17, scope: !5207)
!5244 = !DILocation(line: 787, column: 21, scope: !5207)
!5245 = !DILocation(line: 787, column: 31, scope: !5207)
!5246 = !DILocation(line: 787, column: 37, scope: !5207)
!5247 = !DILocation(line: 787, column: 41, scope: !5207)
!5248 = !DILocation(line: 787, column: 51, scope: !5207)
!5249 = !DILocation(line: 787, column: 57, scope: !5207)
!5250 = !DILocation(line: 787, column: 61, scope: !5207)
!5251 = !DILocation(line: 787, column: 70, scope: !5207)
!5252 = !DILocation(line: 787, column: 74, scope: !5207)
!5253 = !DILocation(line: 785, column: 2, scope: !5207)
!5254 = !DILocation(line: 789, column: 1, scope: !5207)
!5255 = distinct !DISubprogram(name: "RE_SetOrtho", scope: !3, file: !3, line: 791, type: !5208, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5256 = !DILocalVariable(name: "re", arg: 1, scope: !5255, file: !3, line: 791, type: !3576)
!5257 = !DILocation(line: 791, column: 26, scope: !5255)
!5258 = !DILocalVariable(name: "viewplane", arg: 2, scope: !5255, file: !3, line: 791, type: !5210)
!5259 = !DILocation(line: 791, column: 36, scope: !5255)
!5260 = !DILocalVariable(name: "clipsta", arg: 3, scope: !5255, file: !3, line: 791, type: !216)
!5261 = !DILocation(line: 791, column: 53, scope: !5255)
!5262 = !DILocalVariable(name: "clipend", arg: 4, scope: !5255, file: !3, line: 791, type: !216)
!5263 = !DILocation(line: 791, column: 68, scope: !5255)
!5264 = !DILocation(line: 795, column: 2, scope: !5255)
!5265 = !DILocation(line: 795, column: 6, scope: !5255)
!5266 = !DILocation(line: 795, column: 19, scope: !5255)
!5267 = !DILocation(line: 795, column: 18, scope: !5255)
!5268 = !DILocation(line: 796, column: 16, scope: !5255)
!5269 = !DILocation(line: 796, column: 2, scope: !5255)
!5270 = !DILocation(line: 796, column: 6, scope: !5255)
!5271 = !DILocation(line: 796, column: 14, scope: !5255)
!5272 = !DILocation(line: 797, column: 16, scope: !5255)
!5273 = !DILocation(line: 797, column: 2, scope: !5255)
!5274 = !DILocation(line: 797, column: 6, scope: !5255)
!5275 = !DILocation(line: 797, column: 14, scope: !5255)
!5276 = !DILocation(line: 798, column: 2, scope: !5255)
!5277 = !DILocation(line: 798, column: 6, scope: !5255)
!5278 = !DILocation(line: 798, column: 8, scope: !5255)
!5279 = !DILocation(line: 798, column: 13, scope: !5255)
!5280 = !DILocation(line: 800, column: 18, scope: !5255)
!5281 = !DILocation(line: 800, column: 22, scope: !5255)
!5282 = !DILocation(line: 801, column: 18, scope: !5255)
!5283 = !DILocation(line: 801, column: 22, scope: !5255)
!5284 = !DILocation(line: 801, column: 32, scope: !5255)
!5285 = !DILocation(line: 801, column: 38, scope: !5255)
!5286 = !DILocation(line: 801, column: 42, scope: !5255)
!5287 = !DILocation(line: 801, column: 52, scope: !5255)
!5288 = !DILocation(line: 802, column: 18, scope: !5255)
!5289 = !DILocation(line: 802, column: 22, scope: !5255)
!5290 = !DILocation(line: 802, column: 32, scope: !5255)
!5291 = !DILocation(line: 802, column: 38, scope: !5255)
!5292 = !DILocation(line: 802, column: 42, scope: !5255)
!5293 = !DILocation(line: 802, column: 52, scope: !5255)
!5294 = !DILocation(line: 802, column: 58, scope: !5255)
!5295 = !DILocation(line: 802, column: 62, scope: !5255)
!5296 = !DILocation(line: 802, column: 71, scope: !5255)
!5297 = !DILocation(line: 802, column: 75, scope: !5255)
!5298 = !DILocation(line: 800, column: 2, scope: !5255)
!5299 = !DILocation(line: 803, column: 1, scope: !5255)
!5300 = distinct !DISubprogram(name: "RE_SetView", scope: !3, file: !3, line: 805, type: !5301, scopeLine: 806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5301 = !DISubroutineType(types: !5302)
!5302 = !{null, !3576, !3478}
!5303 = !DILocalVariable(name: "re", arg: 1, scope: !5300, file: !3, line: 805, type: !3576)
!5304 = !DILocation(line: 805, column: 25, scope: !5300)
!5305 = !DILocalVariable(name: "mat", arg: 2, scope: !5300, file: !3, line: 805, type: !3478)
!5306 = !DILocation(line: 805, column: 35, scope: !5300)
!5307 = !DILocation(line: 808, column: 13, scope: !5300)
!5308 = !DILocation(line: 808, column: 17, scope: !5300)
!5309 = !DILocation(line: 808, column: 26, scope: !5300)
!5310 = !DILocation(line: 808, column: 2, scope: !5300)
!5311 = !DILocation(line: 809, column: 15, scope: !5300)
!5312 = !DILocation(line: 809, column: 19, scope: !5300)
!5313 = !DILocation(line: 809, column: 28, scope: !5300)
!5314 = !DILocation(line: 809, column: 32, scope: !5300)
!5315 = !DILocation(line: 809, column: 2, scope: !5300)
!5316 = !DILocation(line: 810, column: 1, scope: !5300)
!5317 = distinct !DISubprogram(name: "RE_GetViewPlane", scope: !3, file: !3, line: 812, type: !5318, scopeLine: 813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5318 = !DISubroutineType(types: !5319)
!5319 = !{null, !3576, !5210, !4388}
!5320 = !DILocalVariable(name: "re", arg: 1, scope: !5317, file: !3, line: 812, type: !3576)
!5321 = !DILocation(line: 812, column: 30, scope: !5317)
!5322 = !DILocalVariable(name: "viewplane", arg: 2, scope: !5317, file: !3, line: 812, type: !5210)
!5323 = !DILocation(line: 812, column: 40, scope: !5317)
!5324 = !DILocalVariable(name: "disprect", arg: 3, scope: !5317, file: !3, line: 812, type: !4388)
!5325 = !DILocation(line: 812, column: 57, scope: !5317)
!5326 = !DILocation(line: 814, column: 3, scope: !5317)
!5327 = !DILocation(line: 814, column: 15, scope: !5317)
!5328 = !DILocation(line: 814, column: 19, scope: !5317)
!5329 = !DILocation(line: 817, column: 6, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 817, column: 6)
!5331 = !DILocation(line: 817, column: 10, scope: !5330)
!5332 = !DILocation(line: 817, column: 12, scope: !5330)
!5333 = !DILocation(line: 817, column: 17, scope: !5330)
!5334 = !DILocation(line: 817, column: 6, scope: !5317)
!5335 = !DILocation(line: 818, column: 4, scope: !5330)
!5336 = !DILocation(line: 818, column: 15, scope: !5330)
!5337 = !DILocation(line: 818, column: 19, scope: !5330)
!5338 = !DILocation(line: 818, column: 3, scope: !5330)
!5339 = !DILocation(line: 820, column: 17, scope: !5330)
!5340 = !DILocation(line: 820, column: 3, scope: !5330)
!5341 = !DILocation(line: 821, column: 1, scope: !5317)
!5342 = distinct !DISubprogram(name: "RE_GetView", scope: !3, file: !3, line: 823, type: !5301, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5343 = !DILocalVariable(name: "re", arg: 1, scope: !5342, file: !3, line: 823, type: !3576)
!5344 = !DILocation(line: 823, column: 25, scope: !5342)
!5345 = !DILocalVariable(name: "mat", arg: 2, scope: !5342, file: !3, line: 823, type: !3478)
!5346 = !DILocation(line: 823, column: 35, scope: !5342)
!5347 = !DILocation(line: 825, column: 13, scope: !5342)
!5348 = !DILocation(line: 825, column: 18, scope: !5342)
!5349 = !DILocation(line: 825, column: 22, scope: !5342)
!5350 = !DILocation(line: 825, column: 2, scope: !5342)
!5351 = !DILocation(line: 826, column: 1, scope: !5342)
!5352 = distinct !DISubprogram(name: "RE_display_init_cb", scope: !3, file: !3, line: 829, type: !5353, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5353 = !DISubroutineType(types: !5354)
!5354 = !{null, !3576, !215, !3508}
!5355 = !DILocalVariable(name: "re", arg: 1, scope: !5352, file: !3, line: 829, type: !3576)
!5356 = !DILocation(line: 829, column: 33, scope: !5352)
!5357 = !DILocalVariable(name: "handle", arg: 2, scope: !5352, file: !3, line: 829, type: !215)
!5358 = !DILocation(line: 829, column: 43, scope: !5352)
!5359 = !DILocalVariable(name: "f", arg: 3, scope: !5352, file: !3, line: 829, type: !3508)
!5360 = !DILocation(line: 829, column: 58, scope: !5352)
!5361 = !DILocation(line: 831, column: 21, scope: !5352)
!5362 = !DILocation(line: 831, column: 2, scope: !5352)
!5363 = !DILocation(line: 831, column: 6, scope: !5352)
!5364 = !DILocation(line: 831, column: 19, scope: !5352)
!5365 = !DILocation(line: 832, column: 12, scope: !5352)
!5366 = !DILocation(line: 832, column: 2, scope: !5352)
!5367 = !DILocation(line: 832, column: 6, scope: !5352)
!5368 = !DILocation(line: 832, column: 10, scope: !5352)
!5369 = !DILocation(line: 833, column: 1, scope: !5352)
!5370 = distinct !DISubprogram(name: "RE_display_clear_cb", scope: !3, file: !3, line: 834, type: !5353, scopeLine: 835, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5371 = !DILocalVariable(name: "re", arg: 1, scope: !5370, file: !3, line: 834, type: !3576)
!5372 = !DILocation(line: 834, column: 34, scope: !5370)
!5373 = !DILocalVariable(name: "handle", arg: 2, scope: !5370, file: !3, line: 834, type: !215)
!5374 = !DILocation(line: 834, column: 44, scope: !5370)
!5375 = !DILocalVariable(name: "f", arg: 3, scope: !5370, file: !3, line: 834, type: !3508)
!5376 = !DILocation(line: 834, column: 59, scope: !5370)
!5377 = !DILocation(line: 836, column: 22, scope: !5370)
!5378 = !DILocation(line: 836, column: 2, scope: !5370)
!5379 = !DILocation(line: 836, column: 6, scope: !5370)
!5380 = !DILocation(line: 836, column: 20, scope: !5370)
!5381 = !DILocation(line: 837, column: 12, scope: !5370)
!5382 = !DILocation(line: 837, column: 2, scope: !5370)
!5383 = !DILocation(line: 837, column: 6, scope: !5370)
!5384 = !DILocation(line: 837, column: 10, scope: !5370)
!5385 = !DILocation(line: 838, column: 1, scope: !5370)
!5386 = distinct !DISubprogram(name: "RE_display_update_cb", scope: !3, file: !3, line: 839, type: !5387, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5387 = !DISubroutineType(types: !5388)
!5388 = !{null, !3576, !215, !3515}
!5389 = !DILocalVariable(name: "re", arg: 1, scope: !5386, file: !3, line: 839, type: !3576)
!5390 = !DILocation(line: 839, column: 35, scope: !5386)
!5391 = !DILocalVariable(name: "handle", arg: 2, scope: !5386, file: !3, line: 839, type: !215)
!5392 = !DILocation(line: 839, column: 45, scope: !5386)
!5393 = !DILocalVariable(name: "f", arg: 3, scope: !5386, file: !3, line: 839, type: !3515)
!5394 = !DILocation(line: 839, column: 60, scope: !5386)
!5395 = !DILocation(line: 841, column: 23, scope: !5386)
!5396 = !DILocation(line: 841, column: 2, scope: !5386)
!5397 = !DILocation(line: 841, column: 6, scope: !5386)
!5398 = !DILocation(line: 841, column: 21, scope: !5386)
!5399 = !DILocation(line: 842, column: 12, scope: !5386)
!5400 = !DILocation(line: 842, column: 2, scope: !5386)
!5401 = !DILocation(line: 842, column: 6, scope: !5386)
!5402 = !DILocation(line: 842, column: 10, scope: !5386)
!5403 = !DILocation(line: 843, column: 1, scope: !5386)
!5404 = distinct !DISubprogram(name: "RE_current_scene_update_cb", scope: !3, file: !3, line: 844, type: !5405, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5405 = !DISubroutineType(types: !5406)
!5406 = !{null, !3576, !215, !5407}
!5407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!5408 = !DILocalVariable(name: "re", arg: 1, scope: !5404, file: !3, line: 844, type: !3576)
!5409 = !DILocation(line: 844, column: 41, scope: !5404)
!5410 = !DILocalVariable(name: "handle", arg: 2, scope: !5404, file: !3, line: 844, type: !215)
!5411 = !DILocation(line: 844, column: 51, scope: !5404)
!5412 = !DILocalVariable(name: "f", arg: 3, scope: !5404, file: !3, line: 844, type: !5407)
!5413 = !DILocation(line: 844, column: 66, scope: !5404)
!5414 = !DILocation(line: 846, column: 29, scope: !5404)
!5415 = !DILocation(line: 846, column: 2, scope: !5404)
!5416 = !DILocation(line: 846, column: 6, scope: !5404)
!5417 = !DILocation(line: 846, column: 27, scope: !5404)
!5418 = !DILocation(line: 847, column: 12, scope: !5404)
!5419 = !DILocation(line: 847, column: 2, scope: !5404)
!5420 = !DILocation(line: 847, column: 6, scope: !5404)
!5421 = !DILocation(line: 847, column: 10, scope: !5404)
!5422 = !DILocation(line: 848, column: 1, scope: !5404)
!5423 = distinct !DISubprogram(name: "RE_stats_draw_cb", scope: !3, file: !3, line: 849, type: !5424, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5424 = !DISubroutineType(types: !5425)
!5425 = !{null, !3576, !215, !3526}
!5426 = !DILocalVariable(name: "re", arg: 1, scope: !5423, file: !3, line: 849, type: !3576)
!5427 = !DILocation(line: 849, column: 31, scope: !5423)
!5428 = !DILocalVariable(name: "handle", arg: 2, scope: !5423, file: !3, line: 849, type: !215)
!5429 = !DILocation(line: 849, column: 41, scope: !5423)
!5430 = !DILocalVariable(name: "f", arg: 3, scope: !5423, file: !3, line: 849, type: !3526)
!5431 = !DILocation(line: 849, column: 56, scope: !5423)
!5432 = !DILocation(line: 851, column: 19, scope: !5423)
!5433 = !DILocation(line: 851, column: 2, scope: !5423)
!5434 = !DILocation(line: 851, column: 6, scope: !5423)
!5435 = !DILocation(line: 851, column: 17, scope: !5423)
!5436 = !DILocation(line: 852, column: 12, scope: !5423)
!5437 = !DILocation(line: 852, column: 2, scope: !5423)
!5438 = !DILocation(line: 852, column: 6, scope: !5423)
!5439 = !DILocation(line: 852, column: 10, scope: !5423)
!5440 = !DILocation(line: 853, column: 1, scope: !5423)
!5441 = distinct !DISubprogram(name: "RE_progress_cb", scope: !3, file: !3, line: 854, type: !5442, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5442 = !DISubroutineType(types: !5443)
!5443 = !{null, !3576, !215, !1176}
!5444 = !DILocalVariable(name: "re", arg: 1, scope: !5441, file: !3, line: 854, type: !3576)
!5445 = !DILocation(line: 854, column: 29, scope: !5441)
!5446 = !DILocalVariable(name: "handle", arg: 2, scope: !5441, file: !3, line: 854, type: !215)
!5447 = !DILocation(line: 854, column: 39, scope: !5441)
!5448 = !DILocalVariable(name: "f", arg: 3, scope: !5441, file: !3, line: 854, type: !1176)
!5449 = !DILocation(line: 854, column: 54, scope: !5441)
!5450 = !DILocation(line: 856, column: 17, scope: !5441)
!5451 = !DILocation(line: 856, column: 2, scope: !5441)
!5452 = !DILocation(line: 856, column: 6, scope: !5441)
!5453 = !DILocation(line: 856, column: 15, scope: !5441)
!5454 = !DILocation(line: 857, column: 12, scope: !5441)
!5455 = !DILocation(line: 857, column: 2, scope: !5441)
!5456 = !DILocation(line: 857, column: 6, scope: !5441)
!5457 = !DILocation(line: 857, column: 10, scope: !5441)
!5458 = !DILocation(line: 858, column: 1, scope: !5441)
!5459 = distinct !DISubprogram(name: "RE_draw_lock_cb", scope: !3, file: !3, line: 860, type: !5460, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5460 = !DISubroutineType(types: !5461)
!5461 = !{null, !3576, !215, !3558}
!5462 = !DILocalVariable(name: "re", arg: 1, scope: !5459, file: !3, line: 860, type: !3576)
!5463 = !DILocation(line: 860, column: 30, scope: !5459)
!5464 = !DILocalVariable(name: "handle", arg: 2, scope: !5459, file: !3, line: 860, type: !215)
!5465 = !DILocation(line: 860, column: 40, scope: !5459)
!5466 = !DILocalVariable(name: "f", arg: 3, scope: !5459, file: !3, line: 860, type: !3558)
!5467 = !DILocation(line: 860, column: 55, scope: !5459)
!5468 = !DILocation(line: 862, column: 18, scope: !5459)
!5469 = !DILocation(line: 862, column: 2, scope: !5459)
!5470 = !DILocation(line: 862, column: 6, scope: !5459)
!5471 = !DILocation(line: 862, column: 16, scope: !5459)
!5472 = !DILocation(line: 863, column: 12, scope: !5459)
!5473 = !DILocation(line: 863, column: 2, scope: !5459)
!5474 = !DILocation(line: 863, column: 6, scope: !5459)
!5475 = !DILocation(line: 863, column: 10, scope: !5459)
!5476 = !DILocation(line: 864, column: 1, scope: !5459)
!5477 = distinct !DISubprogram(name: "RE_test_break_cb", scope: !3, file: !3, line: 866, type: !5478, scopeLine: 867, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5478 = !DISubroutineType(types: !5479)
!5479 = !{null, !3576, !215, !1184}
!5480 = !DILocalVariable(name: "re", arg: 1, scope: !5477, file: !3, line: 866, type: !3576)
!5481 = !DILocation(line: 866, column: 31, scope: !5477)
!5482 = !DILocalVariable(name: "handle", arg: 2, scope: !5477, file: !3, line: 866, type: !215)
!5483 = !DILocation(line: 866, column: 41, scope: !5477)
!5484 = !DILocalVariable(name: "f", arg: 3, scope: !5477, file: !3, line: 866, type: !1184)
!5485 = !DILocation(line: 866, column: 55, scope: !5477)
!5486 = !DILocation(line: 868, column: 19, scope: !5477)
!5487 = !DILocation(line: 868, column: 2, scope: !5477)
!5488 = !DILocation(line: 868, column: 6, scope: !5477)
!5489 = !DILocation(line: 868, column: 17, scope: !5477)
!5490 = !DILocation(line: 869, column: 12, scope: !5477)
!5491 = !DILocation(line: 869, column: 2, scope: !5477)
!5492 = !DILocation(line: 869, column: 6, scope: !5477)
!5493 = !DILocation(line: 869, column: 10, scope: !5477)
!5494 = !DILocation(line: 870, column: 1, scope: !5477)
!5495 = distinct !DISubprogram(name: "panorama_pixel_rot", scope: !3, file: !3, line: 954, type: !5496, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5496 = !DISubroutineType(types: !5497)
!5497 = !{!216, !3576}
!5498 = !DILocalVariable(name: "re", arg: 1, scope: !5495, file: !3, line: 954, type: !3576)
!5499 = !DILocation(line: 954, column: 34, scope: !5495)
!5500 = !DILocalVariable(name: "psize", scope: !5495, file: !3, line: 956, type: !216)
!5501 = !DILocation(line: 956, column: 8, scope: !5495)
!5502 = !DILocalVariable(name: "phi", scope: !5495, file: !3, line: 956, type: !216)
!5503 = !DILocation(line: 956, column: 15, scope: !5495)
!5504 = !DILocalVariable(name: "xfac", scope: !5495, file: !3, line: 956, type: !216)
!5505 = !DILocation(line: 956, column: 20, scope: !5495)
!5506 = !DILocalVariable(name: "borderfac", scope: !5495, file: !3, line: 957, type: !216)
!5507 = !DILocation(line: 957, column: 8, scope: !5495)
!5508 = !DILocation(line: 957, column: 44, scope: !5495)
!5509 = !DILocation(line: 957, column: 48, scope: !5495)
!5510 = !DILocation(line: 957, column: 27, scope: !5495)
!5511 = !DILocation(line: 957, column: 20, scope: !5495)
!5512 = !DILocation(line: 957, column: 67, scope: !5495)
!5513 = !DILocation(line: 957, column: 71, scope: !5495)
!5514 = !DILocation(line: 957, column: 60, scope: !5495)
!5515 = !DILocation(line: 957, column: 58, scope: !5495)
!5516 = !DILocalVariable(name: "xparts", scope: !5495, file: !3, line: 958, type: !7)
!5517 = !DILocation(line: 958, column: 6, scope: !5495)
!5518 = !DILocation(line: 958, column: 16, scope: !5495)
!5519 = !DILocation(line: 958, column: 20, scope: !5495)
!5520 = !DILocation(line: 958, column: 28, scope: !5495)
!5521 = !DILocation(line: 958, column: 32, scope: !5495)
!5522 = !DILocation(line: 958, column: 26, scope: !5495)
!5523 = !DILocation(line: 958, column: 38, scope: !5495)
!5524 = !DILocation(line: 958, column: 45, scope: !5495)
!5525 = !DILocation(line: 958, column: 49, scope: !5495)
!5526 = !DILocation(line: 958, column: 43, scope: !5495)
!5527 = !DILocation(line: 961, column: 27, scope: !5495)
!5528 = !DILocation(line: 961, column: 31, scope: !5495)
!5529 = !DILocation(line: 961, column: 10, scope: !5495)
!5530 = !DILocation(line: 961, column: 51, scope: !5495)
!5531 = !DILocation(line: 961, column: 55, scope: !5495)
!5532 = !DILocation(line: 961, column: 44, scope: !5495)
!5533 = !DILocation(line: 961, column: 42, scope: !5495)
!5534 = !DILocation(line: 961, column: 8, scope: !5495)
!5535 = !DILocation(line: 963, column: 13, scope: !5495)
!5536 = !DILocation(line: 963, column: 21, scope: !5495)
!5537 = !DILocation(line: 963, column: 25, scope: !5495)
!5538 = !DILocation(line: 963, column: 19, scope: !5495)
!5539 = !DILocation(line: 963, column: 8, scope: !5495)
!5540 = !DILocation(line: 963, column: 6, scope: !5495)
!5541 = !DILocation(line: 966, column: 9, scope: !5495)
!5542 = !DILocation(line: 966, column: 38, scope: !5495)
!5543 = !DILocation(line: 966, column: 42, scope: !5495)
!5544 = !DILocation(line: 966, column: 21, scope: !5495)
!5545 = !DILocation(line: 966, column: 19, scope: !5495)
!5546 = !DILocation(line: 966, column: 62, scope: !5495)
!5547 = !DILocation(line: 966, column: 55, scope: !5495)
!5548 = !DILocation(line: 966, column: 53, scope: !5495)
!5549 = !DILocation(line: 966, column: 7, scope: !5495)
!5550 = !DILocation(line: 967, column: 21, scope: !5495)
!5551 = !DILocation(line: 967, column: 19, scope: !5495)
!5552 = !DILocation(line: 967, column: 28, scope: !5495)
!5553 = !DILocation(line: 967, column: 32, scope: !5495)
!5554 = !DILocation(line: 967, column: 26, scope: !5495)
!5555 = !DILocation(line: 967, column: 14, scope: !5495)
!5556 = !DILocation(line: 967, column: 9, scope: !5495)
!5557 = !DILocation(line: 967, column: 7, scope: !5495)
!5558 = !DILocation(line: 969, column: 17, scope: !5495)
!5559 = !DILocation(line: 969, column: 15, scope: !5495)
!5560 = !DILocation(line: 969, column: 31, scope: !5495)
!5561 = !DILocation(line: 969, column: 35, scope: !5495)
!5562 = !DILocation(line: 969, column: 24, scope: !5495)
!5563 = !DILocation(line: 969, column: 21, scope: !5495)
!5564 = !DILocation(line: 969, column: 8, scope: !5495)
!5565 = !DILocation(line: 972, column: 9, scope: !5495)
!5566 = !DILocation(line: 972, column: 16, scope: !5495)
!5567 = !DILocation(line: 972, column: 14, scope: !5495)
!5568 = !DILocation(line: 972, column: 6, scope: !5495)
!5569 = !DILocation(line: 974, column: 9, scope: !5495)
!5570 = !DILocation(line: 974, column: 2, scope: !5495)
!5571 = distinct !DISubprogram(name: "BLI_rcti_size_x", scope: !5572, file: !5572, line: 105, type: !5573, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5572 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5573 = !DISubroutineType(types: !5574)
!5574 = !{!7, !5575}
!5575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5576, size: 64)
!5576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !971)
!5577 = !DILocalVariable(name: "rct", arg: 1, scope: !5571, file: !5572, line: 105, type: !5575)
!5578 = !DILocation(line: 105, column: 53, scope: !5571)
!5579 = !DILocation(line: 105, column: 68, scope: !5571)
!5580 = !DILocation(line: 105, column: 73, scope: !5571)
!5581 = !DILocation(line: 105, column: 80, scope: !5571)
!5582 = !DILocation(line: 105, column: 85, scope: !5571)
!5583 = !DILocation(line: 105, column: 78, scope: !5571)
!5584 = !DILocation(line: 105, column: 60, scope: !5571)
!5585 = distinct !DISubprogram(name: "BLI_rctf_size_x", scope: !5572, file: !5572, line: 107, type: !5586, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5586 = !DISubroutineType(types: !5587)
!5587 = !{!216, !5588}
!5588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5589, size: 64)
!5589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1095)
!5590 = !DILocalVariable(name: "rct", arg: 1, scope: !5585, file: !5572, line: 107, type: !5588)
!5591 = !DILocation(line: 107, column: 53, scope: !5585)
!5592 = !DILocation(line: 107, column: 68, scope: !5585)
!5593 = !DILocation(line: 107, column: 73, scope: !5585)
!5594 = !DILocation(line: 107, column: 80, scope: !5585)
!5595 = !DILocation(line: 107, column: 85, scope: !5585)
!5596 = !DILocation(line: 107, column: 78, scope: !5585)
!5597 = !DILocation(line: 107, column: 60, scope: !5585)
!5598 = distinct !DISubprogram(name: "RE_TileProcessor", scope: !3, file: !3, line: 1277, type: !3574, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5599 = !DILocalVariable(name: "re", arg: 1, scope: !5598, file: !3, line: 1277, type: !3576)
!5600 = !DILocation(line: 1277, column: 31, scope: !5598)
!5601 = !DILocation(line: 1279, column: 26, scope: !5598)
!5602 = !DILocation(line: 1279, column: 2, scope: !5598)
!5603 = !DILocation(line: 1281, column: 24, scope: !5598)
!5604 = !DILocation(line: 1281, column: 52, scope: !5598)
!5605 = !DILocation(line: 1281, column: 56, scope: !5598)
!5606 = !DILocation(line: 1281, column: 58, scope: !5598)
!5607 = !DILocation(line: 1281, column: 50, scope: !5598)
!5608 = !DILocation(line: 1281, column: 2, scope: !5598)
!5609 = !DILocation(line: 1281, column: 6, scope: !5598)
!5610 = !DILocation(line: 1281, column: 8, scope: !5598)
!5611 = !DILocation(line: 1281, column: 22, scope: !5598)
!5612 = !DILocation(line: 1282, column: 2, scope: !5598)
!5613 = !DILocation(line: 1282, column: 6, scope: !5598)
!5614 = !DILocation(line: 1282, column: 17, scope: !5598)
!5615 = !DILocation(line: 1282, column: 21, scope: !5598)
!5616 = !DILocation(line: 1282, column: 27, scope: !5598)
!5617 = !DILocation(line: 1282, column: 31, scope: !5598)
!5618 = !DILocation(line: 1298, column: 1, scope: !5598)
!5619 = distinct !DISubprogram(name: "threaded_tile_processor", scope: !3, file: !3, line: 1111, type: !3574, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!5620 = !DILocalVariable(name: "re", arg: 1, scope: !5619, file: !3, line: 1111, type: !3576)
!5621 = !DILocation(line: 1111, column: 45, scope: !5619)
!5622 = !DILocalVariable(name: "thread", scope: !5619, file: !3, line: 1113, type: !5623)
!5623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5624, size: 320, elements: !552)
!5624 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderThread", file: !3, line: 1087, baseType: !5625)
!5625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderThread", file: !3, line: 1079, size: 320, elements: !5626)
!5626 = !{!5627, !5631, !5632, !5633, !5634}
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "workqueue", scope: !5625, file: !3, line: 1080, baseType: !5628, size: 64)
!5628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5629, size: 64)
!5629 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadQueue", file: !3012, line: 192, baseType: !5630)
!5630 = !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadQueue", file: !3012, line: 192, flags: DIFlagFwdDecl)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "donequeue", scope: !5625, file: !3, line: 1081, baseType: !5628, size: 64, offset: 64)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !5625, file: !3, line: 1083, baseType: !7, size: 32, offset: 128)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "display_update", scope: !5625, file: !3, line: 1085, baseType: !3515, size: 64, offset: 192)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "duh", scope: !5625, file: !3, line: 1086, baseType: !215, size: 64, offset: 256)
!5635 = !DILocation(line: 1113, column: 15, scope: !5619)
!5636 = !DILocalVariable(name: "workqueue", scope: !5619, file: !3, line: 1114, type: !5628)
!5637 = !DILocation(line: 1114, column: 15, scope: !5619)
!5638 = !DILocalVariable(name: "donequeue", scope: !5619, file: !3, line: 1114, type: !5628)
!5639 = !DILocation(line: 1114, column: 27, scope: !5619)
!5640 = !DILocalVariable(name: "threads", scope: !5619, file: !3, line: 1115, type: !281)
!5641 = !DILocation(line: 1115, column: 11, scope: !5619)
!5642 = !DILocalVariable(name: "pa", scope: !5619, file: !3, line: 1116, type: !5643)
!5643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5644, size: 64)
!5644 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderPart", file: !127, line: 117, baseType: !5645)
!5645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderPart", file: !127, line: 93, size: 1280, elements: !5646)
!5646 = !{!5647, !5649, !5650, !5651, !5652, !5653, !5654, !5655, !5656, !5659, !5660, !5661, !5662, !5663, !5664, !5665, !5666, !5667, !5668, !5669, !5670, !5671}
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5645, file: !127, line: 94, baseType: !5648, size: 64)
!5648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5645, size: 64)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5645, file: !127, line: 94, baseType: !5648, size: 64, offset: 64)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5645, file: !127, line: 96, baseType: !3006, size: 64, offset: 128)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !5645, file: !127, line: 97, baseType: !281, size: 128, offset: 192)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "recto", scope: !5645, file: !127, line: 99, baseType: !933, size: 64, offset: 320)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "rectp", scope: !5645, file: !127, line: 100, baseType: !933, size: 64, offset: 384)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !5645, file: !127, line: 101, baseType: !933, size: 64, offset: 448)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "rectmask", scope: !5645, file: !127, line: 102, baseType: !933, size: 64, offset: 512)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "rectdaps", scope: !5645, file: !127, line: 103, baseType: !5657, size: 64, offset: 576)
!5657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5658, size: 64)
!5658 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !4127, line: 87, baseType: !1917)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "rectbacko", scope: !5645, file: !127, line: 104, baseType: !933, size: 64, offset: 640)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "rectbackp", scope: !5645, file: !127, line: 105, baseType: !933, size: 64, offset: 704)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "rectbackz", scope: !5645, file: !127, line: 106, baseType: !933, size: 64, offset: 768)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "rectall", scope: !5645, file: !127, line: 107, baseType: !5657, size: 64, offset: 832)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !5645, file: !127, line: 109, baseType: !969, size: 128, offset: 896)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !5645, file: !127, line: 110, baseType: !7, size: 32, offset: 1024)
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !5645, file: !127, line: 110, baseType: !7, size: 32, offset: 1056)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !5645, file: !127, line: 111, baseType: !7, size: 32, offset: 1088)
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !5645, file: !127, line: 112, baseType: !255, size: 16, offset: 1120)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5645, file: !127, line: 112, baseType: !255, size: 16, offset: 1136)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !5645, file: !127, line: 113, baseType: !255, size: 16, offset: 1152)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !5645, file: !127, line: 114, baseType: !255, size: 16, offset: 1168)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "clipflag", scope: !5645, file: !127, line: 116, baseType: !988, size: 64, offset: 1216)
!5672 = !DILocation(line: 1116, column: 14, scope: !5619)
!5673 = !DILocalVariable(name: "viewplane", scope: !5619, file: !3, line: 1117, type: !1094)
!5674 = !DILocation(line: 1117, column: 7, scope: !5619)
!5675 = !DILocation(line: 1117, column: 19, scope: !5619)
!5676 = !DILocation(line: 1117, column: 23, scope: !5619)
!5677 = !DILocalVariable(name: "lastdraw", scope: !5619, file: !3, line: 1118, type: !925)
!5678 = !DILocation(line: 1118, column: 9, scope: !5619)
!5679 = !DILocalVariable(name: "elapsed", scope: !5619, file: !3, line: 1118, type: !925)
!5680 = !DILocation(line: 1118, column: 19, scope: !5619)
!5681 = !DILocalVariable(name: "redrawtime", scope: !5619, file: !3, line: 1118, type: !925)
!5682 = !DILocation(line: 1118, column: 28, scope: !5619)
!5683 = !DILocalVariable(name: "totpart", scope: !5619, file: !3, line: 1119, type: !7)
!5684 = !DILocation(line: 1119, column: 6, scope: !5619)
!5685 = !DILocalVariable(name: "minx", scope: !5619, file: !3, line: 1119, type: !7)
!5686 = !DILocation(line: 1119, column: 19, scope: !5619)
!5687 = !DILocalVariable(name: "slice", scope: !5619, file: !3, line: 1119, type: !7)
!5688 = !DILocation(line: 1119, column: 29, scope: !5619)
!5689 = !DILocalVariable(name: "a", scope: !5619, file: !3, line: 1119, type: !7)
!5690 = !DILocation(line: 1119, column: 40, scope: !5619)
!5691 = !DILocalVariable(name: "wait", scope: !5619, file: !3, line: 1119, type: !7)
!5692 = !DILocation(line: 1119, column: 43, scope: !5619)
!5693 = !DILocation(line: 1121, column: 21, scope: !5619)
!5694 = !DILocation(line: 1121, column: 25, scope: !5619)
!5695 = !DILocation(line: 1121, column: 2, scope: !5619)
!5696 = !DILocation(line: 1124, column: 6, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 1124, column: 6)
!5698 = !DILocation(line: 1124, column: 10, scope: !5697)
!5699 = !DILocation(line: 1124, column: 17, scope: !5697)
!5700 = !DILocation(line: 1124, column: 25, scope: !5697)
!5701 = !DILocation(line: 1124, column: 30, scope: !5697)
!5702 = !DILocation(line: 1124, column: 34, scope: !5697)
!5703 = !DILocation(line: 1124, column: 36, scope: !5697)
!5704 = !DILocation(line: 1124, column: 44, scope: !5697)
!5705 = !DILocation(line: 1124, column: 6, scope: !5619)
!5706 = !DILocation(line: 1125, column: 22, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 1124, column: 84)
!5708 = !DILocation(line: 1125, column: 26, scope: !5707)
!5709 = !DILocation(line: 1125, column: 3, scope: !5707)
!5710 = !DILocation(line: 1127, column: 7, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 1127, column: 7)
!5712 = !DILocation(line: 1127, column: 11, scope: !5711)
!5713 = !DILocation(line: 1127, column: 22, scope: !5711)
!5714 = !DILocation(line: 1127, column: 55, scope: !5711)
!5715 = !DILocation(line: 1127, column: 25, scope: !5711)
!5716 = !DILocation(line: 1127, column: 7, scope: !5707)
!5717 = !DILocation(line: 1128, column: 35, scope: !5711)
!5718 = !DILocation(line: 1128, column: 40, scope: !5711)
!5719 = !DILocation(line: 1128, column: 44, scope: !5711)
!5720 = !DILocation(line: 1128, column: 17, scope: !5711)
!5721 = !DILocation(line: 1128, column: 4, scope: !5711)
!5722 = !DILocation(line: 1128, column: 8, scope: !5711)
!5723 = !DILocation(line: 1128, column: 15, scope: !5711)
!5724 = !DILocation(line: 1129, column: 12, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5711, file: !3, line: 1129, column: 12)
!5726 = !DILocation(line: 1129, column: 16, scope: !5725)
!5727 = !DILocation(line: 1129, column: 18, scope: !5725)
!5728 = !DILocation(line: 1129, column: 26, scope: !5725)
!5729 = !DILocation(line: 1129, column: 12, scope: !5711)
!5730 = !DILocation(line: 1130, column: 47, scope: !5725)
!5731 = !DILocation(line: 1130, column: 52, scope: !5725)
!5732 = !DILocation(line: 1130, column: 56, scope: !5725)
!5733 = !DILocation(line: 1130, column: 69, scope: !5725)
!5734 = !DILocation(line: 1130, column: 73, scope: !5725)
!5735 = !DILocation(line: 1130, column: 17, scope: !5725)
!5736 = !DILocation(line: 1130, column: 4, scope: !5725)
!5737 = !DILocation(line: 1130, column: 8, scope: !5725)
!5738 = !DILocation(line: 1130, column: 15, scope: !5725)
!5739 = !DILocation(line: 1132, column: 35, scope: !5725)
!5740 = !DILocation(line: 1132, column: 40, scope: !5725)
!5741 = !DILocation(line: 1132, column: 44, scope: !5725)
!5742 = !DILocation(line: 1133, column: 6, scope: !5725)
!5743 = !DILocation(line: 1133, column: 10, scope: !5725)
!5744 = !DILocation(line: 1133, column: 12, scope: !5725)
!5745 = !DILocation(line: 1133, column: 20, scope: !5725)
!5746 = !DILocation(line: 1133, column: 5, scope: !5725)
!5747 = !DILocation(line: 1132, column: 17, scope: !5725)
!5748 = !DILocation(line: 1132, column: 4, scope: !5725)
!5749 = !DILocation(line: 1132, column: 8, scope: !5725)
!5750 = !DILocation(line: 1132, column: 15, scope: !5725)
!5751 = !DILocation(line: 1134, column: 2, scope: !5707)
!5752 = !DILocation(line: 1136, column: 23, scope: !5619)
!5753 = !DILocation(line: 1136, column: 27, scope: !5619)
!5754 = !DILocation(line: 1136, column: 2, scope: !5619)
!5755 = !DILocation(line: 1138, column: 6, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 1138, column: 6)
!5757 = !DILocation(line: 1138, column: 10, scope: !5756)
!5758 = !DILocation(line: 1138, column: 17, scope: !5756)
!5759 = !DILocation(line: 1138, column: 6, scope: !5619)
!5760 = !DILocation(line: 1139, column: 3, scope: !5756)
!5761 = !DILocation(line: 1143, column: 16, scope: !5619)
!5762 = !DILocation(line: 1143, column: 2, scope: !5619)
!5763 = !DILocation(line: 1145, column: 6, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 1145, column: 6)
!5765 = !DILocation(line: 1145, column: 10, scope: !5764)
!5766 = !DILocation(line: 1145, column: 18, scope: !5764)
!5767 = !DILocation(line: 1145, column: 6, scope: !5619)
!5768 = !DILocation(line: 1146, column: 32, scope: !5764)
!5769 = !DILocation(line: 1146, column: 3, scope: !5764)
!5770 = !DILocation(line: 1149, column: 7, scope: !5619)
!5771 = !DILocation(line: 1149, column: 6, scope: !5619)
!5772 = !DILocation(line: 1152, column: 15, scope: !5619)
!5773 = !DILocation(line: 1155, column: 14, scope: !5619)
!5774 = !DILocation(line: 1155, column: 12, scope: !5619)
!5775 = !DILocation(line: 1156, column: 14, scope: !5619)
!5776 = !DILocation(line: 1156, column: 12, scope: !5619)
!5777 = !DILocation(line: 1159, column: 2, scope: !5619)
!5778 = !DILocation(line: 1159, column: 30, scope: !5619)
!5779 = !DILocation(line: 1159, column: 9, scope: !5619)
!5780 = !DILocation(line: 1161, column: 3, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 1159, column: 62)
!5782 = !DILocation(line: 1161, column: 31, scope: !5781)
!5783 = !DILocation(line: 1161, column: 35, scope: !5781)
!5784 = !DILocation(line: 1161, column: 16, scope: !5781)
!5785 = !DILocation(line: 1161, column: 14, scope: !5781)
!5786 = !DILocation(line: 1162, column: 13, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 1161, column: 43)
!5788 = !DILocation(line: 1162, column: 21, scope: !5787)
!5789 = !DILocation(line: 1162, column: 4, scope: !5787)
!5790 = !DILocation(line: 1162, column: 8, scope: !5787)
!5791 = !DILocation(line: 1162, column: 11, scope: !5787)
!5792 = !DILocation(line: 1163, column: 11, scope: !5787)
!5793 = !DILocation(line: 1164, column: 26, scope: !5787)
!5794 = !DILocation(line: 1164, column: 37, scope: !5787)
!5795 = !DILocation(line: 1164, column: 4, scope: !5787)
!5796 = distinct !{!5796, !5780, !5797}
!5797 = !DILocation(line: 1165, column: 3, scope: !5781)
!5798 = !DILocation(line: 1167, column: 27, scope: !5781)
!5799 = !DILocation(line: 1167, column: 3, scope: !5781)
!5800 = !DILocation(line: 1170, column: 48, scope: !5781)
!5801 = !DILocation(line: 1170, column: 52, scope: !5781)
!5802 = !DILocation(line: 1170, column: 54, scope: !5781)
!5803 = !DILocation(line: 1170, column: 3, scope: !5781)
!5804 = !DILocation(line: 1172, column: 10, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 1172, column: 3)
!5806 = !DILocation(line: 1172, column: 8, scope: !5805)
!5807 = !DILocation(line: 1172, column: 15, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 1172, column: 3)
!5809 = !DILocation(line: 1172, column: 19, scope: !5808)
!5810 = !DILocation(line: 1172, column: 23, scope: !5808)
!5811 = !DILocation(line: 1172, column: 25, scope: !5808)
!5812 = !DILocation(line: 1172, column: 17, scope: !5808)
!5813 = !DILocation(line: 1172, column: 3, scope: !5805)
!5814 = !DILocation(line: 1173, column: 26, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 1172, column: 39)
!5816 = !DILocation(line: 1173, column: 11, scope: !5815)
!5817 = !DILocation(line: 1173, column: 4, scope: !5815)
!5818 = !DILocation(line: 1173, column: 14, scope: !5815)
!5819 = !DILocation(line: 1173, column: 24, scope: !5815)
!5820 = !DILocation(line: 1174, column: 26, scope: !5815)
!5821 = !DILocation(line: 1174, column: 11, scope: !5815)
!5822 = !DILocation(line: 1174, column: 4, scope: !5815)
!5823 = !DILocation(line: 1174, column: 14, scope: !5815)
!5824 = !DILocation(line: 1174, column: 24, scope: !5815)
!5825 = !DILocation(line: 1175, column: 23, scope: !5815)
!5826 = !DILocation(line: 1175, column: 11, scope: !5815)
!5827 = !DILocation(line: 1175, column: 4, scope: !5815)
!5828 = !DILocation(line: 1175, column: 14, scope: !5815)
!5829 = !DILocation(line: 1175, column: 21, scope: !5815)
!5830 = !DILocation(line: 1177, column: 38, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 1177, column: 8)
!5832 = !DILocation(line: 1177, column: 8, scope: !5831)
!5833 = !DILocation(line: 1177, column: 8, scope: !5815)
!5834 = !DILocation(line: 1178, column: 32, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 1177, column: 43)
!5836 = !DILocation(line: 1178, column: 36, scope: !5835)
!5837 = !DILocation(line: 1178, column: 12, scope: !5835)
!5838 = !DILocation(line: 1178, column: 5, scope: !5835)
!5839 = !DILocation(line: 1178, column: 15, scope: !5835)
!5840 = !DILocation(line: 1178, column: 30, scope: !5835)
!5841 = !DILocation(line: 1179, column: 21, scope: !5835)
!5842 = !DILocation(line: 1179, column: 25, scope: !5835)
!5843 = !DILocation(line: 1179, column: 12, scope: !5835)
!5844 = !DILocation(line: 1179, column: 5, scope: !5835)
!5845 = !DILocation(line: 1179, column: 15, scope: !5835)
!5846 = !DILocation(line: 1179, column: 19, scope: !5835)
!5847 = !DILocation(line: 1180, column: 4, scope: !5835)
!5848 = !DILocation(line: 1182, column: 12, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 1181, column: 9)
!5850 = !DILocation(line: 1182, column: 5, scope: !5849)
!5851 = !DILocation(line: 1182, column: 15, scope: !5849)
!5852 = !DILocation(line: 1182, column: 30, scope: !5849)
!5853 = !DILocation(line: 1183, column: 12, scope: !5849)
!5854 = !DILocation(line: 1183, column: 5, scope: !5849)
!5855 = !DILocation(line: 1183, column: 15, scope: !5849)
!5856 = !DILocation(line: 1183, column: 19, scope: !5849)
!5857 = !DILocation(line: 1186, column: 40, scope: !5815)
!5858 = !DILocation(line: 1186, column: 33, scope: !5815)
!5859 = !DILocation(line: 1186, column: 32, scope: !5815)
!5860 = !DILocation(line: 1186, column: 4, scope: !5815)
!5861 = !DILocation(line: 1187, column: 3, scope: !5815)
!5862 = !DILocation(line: 1172, column: 35, scope: !5808)
!5863 = !DILocation(line: 1172, column: 3, scope: !5808)
!5864 = distinct !{!5864, !5813, !5865}
!5865 = !DILocation(line: 1187, column: 3, scope: !5805)
!5866 = !DILocation(line: 1190, column: 14, scope: !5781)
!5867 = !DILocation(line: 1190, column: 12, scope: !5781)
!5868 = !DILocation(line: 1192, column: 3, scope: !5781)
!5869 = !DILocation(line: 1193, column: 14, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 1192, column: 13)
!5871 = !DILocation(line: 1193, column: 42, scope: !5870)
!5872 = !DILocation(line: 1193, column: 40, scope: !5870)
!5873 = !DILocation(line: 1193, column: 12, scope: !5870)
!5874 = !DILocation(line: 1194, column: 12, scope: !5870)
!5875 = !DILocation(line: 1194, column: 25, scope: !5870)
!5876 = !DILocation(line: 1194, column: 23, scope: !5870)
!5877 = !DILocation(line: 1194, column: 33, scope: !5870)
!5878 = !DILocation(line: 1194, column: 11, scope: !5870)
!5879 = !DILocation(line: 1194, column: 9, scope: !5870)
!5880 = !DILocation(line: 1197, column: 41, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 1197, column: 8)
!5882 = !DILocation(line: 1197, column: 52, scope: !5881)
!5883 = !DILocation(line: 1197, column: 12, scope: !5881)
!5884 = !DILocation(line: 1197, column: 11, scope: !5881)
!5885 = !DILocation(line: 1197, column: 8, scope: !5870)
!5886 = !DILocation(line: 1198, column: 9, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 1198, column: 9)
!5888 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 1197, column: 60)
!5889 = !DILocation(line: 1198, column: 13, scope: !5887)
!5890 = !DILocation(line: 1198, column: 9, scope: !5888)
!5891 = !DILocation(line: 1199, column: 23, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 1198, column: 21)
!5893 = !DILocation(line: 1199, column: 27, scope: !5892)
!5894 = !DILocation(line: 1199, column: 6, scope: !5892)
!5895 = !DILocation(line: 1201, column: 31, scope: !5892)
!5896 = !DILocation(line: 1201, column: 35, scope: !5892)
!5897 = !DILocation(line: 1201, column: 47, scope: !5892)
!5898 = !DILocation(line: 1201, column: 51, scope: !5892)
!5899 = !DILocation(line: 1201, column: 6, scope: !5892)
!5900 = !DILocation(line: 1202, column: 6, scope: !5892)
!5901 = !DILocation(line: 1202, column: 10, scope: !5892)
!5902 = !DILocation(line: 1202, column: 17, scope: !5892)
!5903 = !DILocation(line: 1203, column: 6, scope: !5892)
!5904 = !DILocation(line: 1203, column: 10, scope: !5892)
!5905 = !DILocation(line: 1203, column: 12, scope: !5892)
!5906 = !DILocation(line: 1203, column: 21, scope: !5892)
!5907 = !DILocation(line: 1204, column: 6, scope: !5892)
!5908 = !DILocation(line: 1204, column: 10, scope: !5892)
!5909 = !DILocation(line: 1204, column: 19, scope: !5892)
!5910 = !DILocation(line: 1204, column: 23, scope: !5892)
!5911 = !DILocation(line: 1204, column: 28, scope: !5892)
!5912 = !DILocation(line: 1204, column: 32, scope: !5892)
!5913 = !DILocation(line: 1204, column: 34, scope: !5892)
!5914 = !DILocation(line: 1204, column: 53, scope: !5892)
!5915 = !DILocation(line: 1204, column: 57, scope: !5892)
!5916 = !DILocation(line: 1204, column: 59, scope: !5892)
!5917 = !DILocation(line: 1204, column: 46, scope: !5892)
!5918 = !DILocation(line: 1204, column: 44, scope: !5892)
!5919 = !DILocation(line: 1205, column: 5, scope: !5892)
!5920 = !DILocation(line: 1207, column: 12, scope: !5888)
!5921 = !DILocation(line: 1208, column: 4, scope: !5888)
!5922 = !DILocation(line: 1211, column: 17, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 1211, column: 8)
!5924 = !DILocation(line: 1211, column: 21, scope: !5923)
!5925 = !DILocation(line: 1211, column: 32, scope: !5923)
!5926 = !DILocation(line: 1211, column: 36, scope: !5923)
!5927 = !DILocation(line: 1211, column: 16, scope: !5923)
!5928 = !DILocation(line: 1211, column: 8, scope: !5870)
!5929 = !DILocation(line: 1212, column: 5, scope: !5923)
!5930 = !DILocation(line: 1215, column: 8, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 1215, column: 8)
!5932 = !DILocation(line: 1215, column: 16, scope: !5931)
!5933 = !DILocation(line: 1215, column: 8, scope: !5870)
!5934 = !DILocation(line: 1216, column: 5, scope: !5931)
!5935 = !DILocation(line: 1219, column: 14, scope: !5870)
!5936 = !DILocation(line: 1219, column: 42, scope: !5870)
!5937 = !DILocation(line: 1219, column: 40, scope: !5870)
!5938 = !DILocation(line: 1219, column: 12, scope: !5870)
!5939 = !DILocation(line: 1220, column: 8, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 1220, column: 8)
!5941 = !DILocation(line: 1220, column: 18, scope: !5940)
!5942 = !DILocation(line: 1220, column: 16, scope: !5940)
!5943 = !DILocation(line: 1220, column: 8, scope: !5870)
!5944 = !DILocation(line: 1221, column: 39, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 1221, column: 9)
!5946 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 1220, column: 30)
!5947 = !DILocation(line: 1221, column: 9, scope: !5945)
!5948 = !DILocation(line: 1221, column: 9, scope: !5946)
!5949 = !DILocation(line: 1222, column: 16, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 1222, column: 6)
!5951 = !DILocation(line: 1222, column: 20, scope: !5950)
!5952 = !DILocation(line: 1222, column: 26, scope: !5950)
!5953 = !DILocation(line: 1222, column: 14, scope: !5950)
!5954 = !DILocation(line: 1222, column: 11, scope: !5950)
!5955 = !DILocation(line: 1222, column: 33, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 1222, column: 6)
!5957 = !DILocation(line: 1222, column: 6, scope: !5950)
!5958 = !DILocation(line: 1223, column: 12, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5956, file: !3, line: 1223, column: 11)
!5960 = !DILocation(line: 1223, column: 16, scope: !5959)
!5961 = !DILocation(line: 1223, column: 23, scope: !5959)
!5962 = !DILocation(line: 1223, column: 51, scope: !5959)
!5963 = !DILocation(line: 1223, column: 54, scope: !5959)
!5964 = !DILocation(line: 1223, column: 58, scope: !5959)
!5965 = !DILocation(line: 1223, column: 61, scope: !5959)
!5966 = !DILocation(line: 1223, column: 64, scope: !5959)
!5967 = !DILocation(line: 1223, column: 68, scope: !5959)
!5968 = !DILocation(line: 1223, column: 11, scope: !5956)
!5969 = !DILocation(line: 1224, column: 8, scope: !5959)
!5970 = !DILocation(line: 1224, column: 12, scope: !5959)
!5971 = !DILocation(line: 1224, column: 27, scope: !5959)
!5972 = !DILocation(line: 1224, column: 31, scope: !5959)
!5973 = !DILocation(line: 1224, column: 36, scope: !5959)
!5974 = !DILocation(line: 1224, column: 40, scope: !5959)
!5975 = !DILocation(line: 1224, column: 49, scope: !5959)
!5976 = !DILocation(line: 1224, column: 53, scope: !5959)
!5977 = !DILocation(line: 1224, column: 61, scope: !5959)
!5978 = !DILocation(line: 1222, column: 42, scope: !5956)
!5979 = !DILocation(line: 1222, column: 46, scope: !5956)
!5980 = !DILocation(line: 1222, column: 40, scope: !5956)
!5981 = !DILocation(line: 1222, column: 6, scope: !5956)
!5982 = distinct !{!5982, !5957, !5983}
!5983 = !DILocation(line: 1224, column: 68, scope: !5950)
!5984 = !DILocation(line: 1226, column: 16, scope: !5946)
!5985 = !DILocation(line: 1226, column: 14, scope: !5946)
!5986 = !DILocation(line: 1227, column: 4, scope: !5946)
!5987 = distinct !{!5987, !5868, !5988}
!5988 = !DILocation(line: 1228, column: 3, scope: !5781)
!5989 = !DILocation(line: 1230, column: 3, scope: !5781)
!5990 = !DILocation(line: 1232, column: 16, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 1232, column: 7)
!5992 = !DILocation(line: 1232, column: 20, scope: !5991)
!5993 = !DILocation(line: 1232, column: 31, scope: !5991)
!5994 = !DILocation(line: 1232, column: 35, scope: !5991)
!5995 = !DILocation(line: 1232, column: 15, scope: !5991)
!5996 = !DILocation(line: 1232, column: 7, scope: !5781)
!5997 = !DILocation(line: 1233, column: 4, scope: !5991)
!5998 = distinct !{!5998, !5777, !5999}
!5999 = !DILocation(line: 1234, column: 2, scope: !5619)
!6000 = !DILocation(line: 1236, column: 6, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 1236, column: 6)
!6002 = !DILocation(line: 1236, column: 6, scope: !5619)
!6003 = !DILocation(line: 1240, column: 27, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1236, column: 15)
!6005 = !DILocation(line: 1240, column: 3, scope: !6004)
!6006 = !DILocation(line: 1241, column: 3, scope: !6004)
!6007 = !DILocation(line: 1241, column: 37, scope: !6004)
!6008 = !DILocation(line: 1241, column: 16, scope: !6004)
!6009 = !DILocation(line: 1241, column: 14, scope: !6004)
!6010 = !DILocation(line: 1242, column: 8, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 1242, column: 8)
!6012 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 1241, column: 50)
!6013 = !DILocation(line: 1242, column: 12, scope: !6011)
!6014 = !DILocation(line: 1242, column: 8, scope: !6012)
!6015 = !DILocation(line: 1243, column: 30, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 1242, column: 20)
!6017 = !DILocation(line: 1243, column: 34, scope: !6016)
!6018 = !DILocation(line: 1243, column: 46, scope: !6016)
!6019 = !DILocation(line: 1243, column: 50, scope: !6016)
!6020 = !DILocation(line: 1243, column: 5, scope: !6016)
!6021 = !DILocation(line: 1244, column: 5, scope: !6016)
!6022 = !DILocation(line: 1244, column: 9, scope: !6016)
!6023 = !DILocation(line: 1244, column: 16, scope: !6016)
!6024 = !DILocation(line: 1245, column: 4, scope: !6016)
!6025 = distinct !{!6025, !6006, !6026}
!6026 = !DILocation(line: 1246, column: 3, scope: !6004)
!6027 = !DILocation(line: 1247, column: 2, scope: !6004)
!6028 = !DILocation(line: 1249, column: 24, scope: !5619)
!6029 = !DILocation(line: 1249, column: 2, scope: !5619)
!6030 = !DILocation(line: 1250, column: 24, scope: !5619)
!6031 = !DILocation(line: 1250, column: 2, scope: !5619)
!6032 = !DILocation(line: 1252, column: 6, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 1252, column: 6)
!6034 = !DILocation(line: 1252, column: 10, scope: !6033)
!6035 = !DILocation(line: 1252, column: 18, scope: !6033)
!6036 = !DILocation(line: 1252, column: 6, scope: !5619)
!6037 = !DILocation(line: 1253, column: 22, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 1252, column: 31)
!6039 = !DILocation(line: 1253, column: 26, scope: !6038)
!6040 = !DILocation(line: 1253, column: 3, scope: !6038)
!6041 = !DILocation(line: 1254, column: 30, scope: !6038)
!6042 = !DILocation(line: 1254, column: 3, scope: !6038)
!6043 = !DILocation(line: 1255, column: 24, scope: !6038)
!6044 = !DILocation(line: 1255, column: 28, scope: !6038)
!6045 = !DILocation(line: 1255, column: 3, scope: !6038)
!6046 = !DILocation(line: 1256, column: 2, scope: !6038)
!6047 = !DILocation(line: 1258, column: 6, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 1258, column: 6)
!6049 = !DILocation(line: 1258, column: 10, scope: !6048)
!6050 = !DILocation(line: 1258, column: 12, scope: !6048)
!6051 = !DILocation(line: 1258, column: 20, scope: !6048)
!6052 = !DILocation(line: 1258, column: 6, scope: !5619)
!6053 = !DILocation(line: 1259, column: 22, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 1258, column: 40)
!6055 = !DILocation(line: 1259, column: 26, scope: !6054)
!6056 = !DILocation(line: 1259, column: 3, scope: !6054)
!6057 = !DILocation(line: 1260, column: 38, scope: !6054)
!6058 = !DILocation(line: 1260, column: 3, scope: !6054)
!6059 = !DILocation(line: 1261, column: 24, scope: !6054)
!6060 = !DILocation(line: 1261, column: 28, scope: !6054)
!6061 = !DILocation(line: 1261, column: 3, scope: !6054)
!6062 = !DILocation(line: 1262, column: 2, scope: !6054)
!6063 = !DILocation(line: 1265, column: 10, scope: !5619)
!6064 = !DILocation(line: 1267, column: 16, scope: !5619)
!6065 = !DILocation(line: 1267, column: 2, scope: !5619)
!6066 = !DILocation(line: 1268, column: 2, scope: !5619)
!6067 = !DILocation(line: 1268, column: 6, scope: !5619)
!6068 = !DILocation(line: 1268, column: 18, scope: !5619)
!6069 = !DILocation(line: 1269, column: 1, scope: !5619)
!6070 = distinct !DISubprogram(name: "RE_allow_render_generic_object", scope: !3, file: !3, line: 1762, type: !6071, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{!916, !3465}
!6073 = !DILocalVariable(name: "ob", arg: 1, scope: !6070, file: !3, line: 1762, type: !3465)
!6074 = !DILocation(line: 1762, column: 45, scope: !6070)
!6075 = !DILocation(line: 1765, column: 6, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1765, column: 6)
!6077 = !DILocation(line: 1765, column: 10, scope: !6076)
!6078 = !DILocation(line: 1765, column: 20, scope: !6076)
!6079 = !DILocation(line: 1765, column: 6, scope: !6070)
!6080 = !DILocation(line: 1767, column: 2, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 1765, column: 37)
!6082 = !DILocation(line: 1768, column: 12, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 1768, column: 11)
!6084 = !DILocation(line: 1768, column: 16, scope: !6083)
!6085 = !DILocation(line: 1768, column: 26, scope: !6083)
!6086 = !DILocation(line: 1768, column: 38, scope: !6083)
!6087 = !DILocation(line: 1768, column: 43, scope: !6083)
!6088 = !DILocation(line: 1768, column: 47, scope: !6083)
!6089 = !DILocation(line: 1768, column: 57, scope: !6083)
!6090 = !DILocation(line: 1768, column: 11, scope: !6076)
!6091 = !DILocation(line: 1769, column: 3, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 1768, column: 76)
!6093 = !DILocation(line: 1771, column: 2, scope: !6070)
!6094 = !DILocation(line: 1772, column: 1, scope: !6070)
!6095 = distinct !DISubprogram(name: "RE_MergeFullSample", scope: !3, file: !3, line: 2190, type: !6096, scopeLine: 2191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!6096 = !DISubroutineType(types: !6097)
!6097 = !{null, !3576, !6098, !217, !2981}
!6098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6099, size: 64)
!6099 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !3068, line: 104, baseType: !3067)
!6100 = !DILocalVariable(name: "re", arg: 1, scope: !6095, file: !3, line: 2190, type: !3576)
!6101 = !DILocation(line: 2190, column: 33, scope: !6095)
!6102 = !DILocalVariable(name: "bmain", arg: 2, scope: !6095, file: !3, line: 2190, type: !6098)
!6103 = !DILocation(line: 2190, column: 43, scope: !6095)
!6104 = !DILocalVariable(name: "sce", arg: 3, scope: !6095, file: !3, line: 2190, type: !217)
!6105 = !DILocation(line: 2190, column: 57, scope: !6095)
!6106 = !DILocalVariable(name: "ntree", arg: 4, scope: !6095, file: !3, line: 2190, type: !2981)
!6107 = !DILocation(line: 2190, column: 73, scope: !6095)
!6108 = !DILocalVariable(name: "scene", scope: !6095, file: !3, line: 2192, type: !217)
!6109 = !DILocation(line: 2192, column: 9, scope: !6095)
!6110 = !DILocalVariable(name: "node", scope: !6095, file: !3, line: 2193, type: !850)
!6111 = !DILocation(line: 2193, column: 9, scope: !6095)
!6112 = !DILocation(line: 2196, column: 13, scope: !6095)
!6113 = !DILocation(line: 2198, column: 13, scope: !6095)
!6114 = !DILocation(line: 2198, column: 2, scope: !6095)
!6115 = !DILocation(line: 2198, column: 6, scope: !6095)
!6116 = !DILocation(line: 2198, column: 11, scope: !6095)
!6117 = !DILocation(line: 2199, column: 14, scope: !6095)
!6118 = !DILocation(line: 2199, column: 2, scope: !6095)
!6119 = !DILocation(line: 2199, column: 6, scope: !6095)
!6120 = !DILocation(line: 2199, column: 12, scope: !6095)
!6121 = !DILocation(line: 2200, column: 68, scope: !6095)
!6122 = !DILocation(line: 2200, column: 27, scope: !6095)
!6123 = !DILocation(line: 2200, column: 2, scope: !6095)
!6124 = !DILocation(line: 2200, column: 6, scope: !6095)
!6125 = !DILocation(line: 2200, column: 25, scope: !6095)
!6126 = !DILocation(line: 2205, column: 15, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 2205, column: 2)
!6128 = !DILocation(line: 2205, column: 19, scope: !6127)
!6129 = !DILocation(line: 2205, column: 25, scope: !6127)
!6130 = !DILocation(line: 2205, column: 31, scope: !6127)
!6131 = !DILocation(line: 2205, column: 13, scope: !6127)
!6132 = !DILocation(line: 2205, column: 7, scope: !6127)
!6133 = !DILocation(line: 2205, column: 38, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 2205, column: 2)
!6135 = !DILocation(line: 2205, column: 2, scope: !6127)
!6136 = !DILocation(line: 2206, column: 3, scope: !6134)
!6137 = !DILocation(line: 2206, column: 10, scope: !6134)
!6138 = !DILocation(line: 2206, column: 13, scope: !6134)
!6139 = !DILocation(line: 2206, column: 18, scope: !6134)
!6140 = !DILocation(line: 2205, column: 53, scope: !6134)
!6141 = !DILocation(line: 2205, column: 60, scope: !6134)
!6142 = !DILocation(line: 2205, column: 63, scope: !6134)
!6143 = !DILocation(line: 2205, column: 51, scope: !6134)
!6144 = !DILocation(line: 2205, column: 2, scope: !6134)
!6145 = distinct !{!6145, !6135, !6146}
!6146 = !DILocation(line: 2206, column: 21, scope: !6127)
!6147 = !DILocation(line: 2215, column: 14, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 2215, column: 2)
!6149 = !DILocation(line: 2215, column: 21, scope: !6148)
!6150 = !DILocation(line: 2215, column: 27, scope: !6148)
!6151 = !DILocation(line: 2215, column: 12, scope: !6148)
!6152 = !DILocation(line: 2215, column: 7, scope: !6148)
!6153 = !DILocation(line: 2215, column: 34, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 2215, column: 2)
!6155 = !DILocation(line: 2215, column: 2, scope: !6148)
!6156 = !DILocation(line: 2216, column: 7, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 2216, column: 7)
!6158 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 2215, column: 59)
!6159 = !DILocation(line: 2216, column: 13, scope: !6157)
!6160 = !DILocation(line: 2216, column: 18, scope: !6157)
!6161 = !DILocation(line: 2216, column: 39, scope: !6157)
!6162 = !DILocation(line: 2216, column: 43, scope: !6157)
!6163 = !DILocation(line: 2216, column: 49, scope: !6157)
!6164 = !DILocation(line: 2216, column: 54, scope: !6157)
!6165 = !DILocation(line: 2216, column: 68, scope: !6157)
!6166 = !DILocation(line: 2216, column: 7, scope: !6158)
!6167 = !DILocalVariable(name: "nodescene", scope: !6168, file: !3, line: 2217, type: !217)
!6168 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 2216, column: 74)
!6169 = !DILocation(line: 2217, column: 11, scope: !6168)
!6170 = !DILocation(line: 2217, column: 32, scope: !6168)
!6171 = !DILocation(line: 2217, column: 38, scope: !6168)
!6172 = !DILocation(line: 2217, column: 23, scope: !6168)
!6173 = !DILocation(line: 2219, column: 8, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 2219, column: 8)
!6175 = !DILocation(line: 2219, column: 18, scope: !6174)
!6176 = !DILocation(line: 2219, column: 8, scope: !6168)
!6177 = !DILocation(line: 2219, column: 39, scope: !6174)
!6178 = !DILocation(line: 2219, column: 37, scope: !6174)
!6179 = !DILocation(line: 2219, column: 27, scope: !6174)
!6180 = !DILocation(line: 2220, column: 8, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 2220, column: 8)
!6182 = !DILocation(line: 2220, column: 19, scope: !6181)
!6183 = !DILocation(line: 2220, column: 22, scope: !6181)
!6184 = !DILocation(line: 2220, column: 27, scope: !6181)
!6185 = !DILocation(line: 2220, column: 8, scope: !6168)
!6186 = !DILocation(line: 2221, column: 5, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6181, file: !3, line: 2220, column: 39)
!6188 = !DILocation(line: 2221, column: 16, scope: !6187)
!6189 = !DILocation(line: 2221, column: 18, scope: !6187)
!6190 = !DILocation(line: 2221, column: 23, scope: !6187)
!6191 = !DILocation(line: 2222, column: 25, scope: !6187)
!6192 = !DILocation(line: 2222, column: 30, scope: !6187)
!6193 = !DILocation(line: 2222, column: 5, scope: !6187)
!6194 = !DILocation(line: 2223, column: 5, scope: !6187)
!6195 = !DILocation(line: 2223, column: 16, scope: !6187)
!6196 = !DILocation(line: 2223, column: 19, scope: !6187)
!6197 = !DILocation(line: 2223, column: 24, scope: !6187)
!6198 = !DILocation(line: 2224, column: 4, scope: !6187)
!6199 = !DILocation(line: 2225, column: 3, scope: !6168)
!6200 = !DILocation(line: 2226, column: 2, scope: !6158)
!6201 = !DILocation(line: 2215, column: 47, scope: !6154)
!6202 = !DILocation(line: 2215, column: 53, scope: !6154)
!6203 = !DILocation(line: 2215, column: 45, scope: !6154)
!6204 = !DILocation(line: 2215, column: 2, scope: !6154)
!6205 = distinct !{!6205, !6155, !6206}
!6206 = !DILocation(line: 2226, column: 2, scope: !6148)
!6207 = !DILocation(line: 2229, column: 6, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 2229, column: 6)
!6209 = !DILocation(line: 2229, column: 10, scope: !6208)
!6210 = !DILocation(line: 2229, column: 17, scope: !6208)
!6211 = !DILocation(line: 2229, column: 20, scope: !6208)
!6212 = !DILocation(line: 2229, column: 25, scope: !6208)
!6213 = !DILocation(line: 2229, column: 6, scope: !6095)
!6214 = !DILocation(line: 2230, column: 23, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 2229, column: 37)
!6216 = !DILocation(line: 2230, column: 27, scope: !6215)
!6217 = !DILocation(line: 2230, column: 34, scope: !6215)
!6218 = !DILocation(line: 2230, column: 38, scope: !6215)
!6219 = !DILocation(line: 2230, column: 3, scope: !6215)
!6220 = !DILocation(line: 2231, column: 3, scope: !6215)
!6221 = !DILocation(line: 2231, column: 7, scope: !6215)
!6222 = !DILocation(line: 2231, column: 14, scope: !6215)
!6223 = !DILocation(line: 2231, column: 17, scope: !6215)
!6224 = !DILocation(line: 2231, column: 22, scope: !6215)
!6225 = !DILocation(line: 2232, column: 2, scope: !6215)
!6226 = !DILocation(line: 2235, column: 2, scope: !6095)
!6227 = !DILocation(line: 2235, column: 6, scope: !6095)
!6228 = !DILocation(line: 2235, column: 19, scope: !6095)
!6229 = !DILocation(line: 2235, column: 23, scope: !6095)
!6230 = !DILocation(line: 2235, column: 28, scope: !6095)
!6231 = !DILocation(line: 2235, column: 32, scope: !6095)
!6232 = !DILocation(line: 2236, column: 2, scope: !6095)
!6233 = !DILocation(line: 2236, column: 6, scope: !6095)
!6234 = !DILocation(line: 2236, column: 20, scope: !6095)
!6235 = !DILocation(line: 2236, column: 24, scope: !6095)
!6236 = !DILocation(line: 2236, column: 29, scope: !6095)
!6237 = !DILocation(line: 2236, column: 33, scope: !6095)
!6238 = !DILocation(line: 2243, column: 22, scope: !6095)
!6239 = !DILocation(line: 2243, column: 26, scope: !6095)
!6240 = !DILocation(line: 2243, column: 2, scope: !6095)
!6241 = !DILocation(line: 2248, column: 1, scope: !6095)
!6242 = distinct !DISubprogram(name: "RE_ReadRenderResult", scope: !3, file: !3, line: 3162, type: !6243, scopeLine: 3163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!6243 = !DISubroutineType(types: !6244)
!6244 = !{!916, !217, !217}
!6245 = !DILocalVariable(name: "scene", arg: 1, scope: !6242, file: !3, line: 3162, type: !217)
!6246 = !DILocation(line: 3162, column: 33, scope: !6242)
!6247 = !DILocalVariable(name: "scenode", arg: 2, scope: !6242, file: !3, line: 3162, type: !217)
!6248 = !DILocation(line: 3162, column: 47, scope: !6242)
!6249 = !DILocalVariable(name: "re", scope: !6242, file: !3, line: 3164, type: !3576)
!6250 = !DILocation(line: 3164, column: 10, scope: !6242)
!6251 = !DILocalVariable(name: "winx", scope: !6242, file: !3, line: 3165, type: !7)
!6252 = !DILocation(line: 3165, column: 6, scope: !6242)
!6253 = !DILocalVariable(name: "winy", scope: !6242, file: !3, line: 3165, type: !7)
!6254 = !DILocation(line: 3165, column: 12, scope: !6242)
!6255 = !DILocalVariable(name: "success", scope: !6242, file: !3, line: 3166, type: !916)
!6256 = !DILocation(line: 3166, column: 7, scope: !6242)
!6257 = !DILocalVariable(name: "disprect", scope: !6242, file: !3, line: 3167, type: !969)
!6258 = !DILocation(line: 3167, column: 7, scope: !6242)
!6259 = !DILocation(line: 3170, column: 10, scope: !6242)
!6260 = !DILocation(line: 3170, column: 17, scope: !6242)
!6261 = !DILocation(line: 3170, column: 19, scope: !6242)
!6262 = !DILocation(line: 3170, column: 26, scope: !6242)
!6263 = !DILocation(line: 3170, column: 33, scope: !6242)
!6264 = !DILocation(line: 3170, column: 35, scope: !6242)
!6265 = !DILocation(line: 3170, column: 24, scope: !6242)
!6266 = !DILocation(line: 3170, column: 41, scope: !6242)
!6267 = !DILocation(line: 3170, column: 7, scope: !6242)
!6268 = !DILocation(line: 3171, column: 10, scope: !6242)
!6269 = !DILocation(line: 3171, column: 17, scope: !6242)
!6270 = !DILocation(line: 3171, column: 19, scope: !6242)
!6271 = !DILocation(line: 3171, column: 26, scope: !6242)
!6272 = !DILocation(line: 3171, column: 33, scope: !6242)
!6273 = !DILocation(line: 3171, column: 35, scope: !6242)
!6274 = !DILocation(line: 3171, column: 24, scope: !6242)
!6275 = !DILocation(line: 3171, column: 41, scope: !6242)
!6276 = !DILocation(line: 3171, column: 7, scope: !6242)
!6277 = !DILocation(line: 3174, column: 6, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 3174, column: 6)
!6279 = !DILocation(line: 3174, column: 13, scope: !6278)
!6280 = !DILocation(line: 3174, column: 15, scope: !6278)
!6281 = !DILocation(line: 3174, column: 20, scope: !6278)
!6282 = !DILocation(line: 3174, column: 6, scope: !6242)
!6283 = !DILocation(line: 3175, column: 19, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 3174, column: 32)
!6285 = !DILocation(line: 3175, column: 26, scope: !6284)
!6286 = !DILocation(line: 3175, column: 28, scope: !6284)
!6287 = !DILocation(line: 3175, column: 35, scope: !6284)
!6288 = !DILocation(line: 3175, column: 42, scope: !6284)
!6289 = !DILocation(line: 3175, column: 40, scope: !6284)
!6290 = !DILocation(line: 3175, column: 12, scope: !6284)
!6291 = !DILocation(line: 3175, column: 17, scope: !6284)
!6292 = !DILocation(line: 3176, column: 19, scope: !6284)
!6293 = !DILocation(line: 3176, column: 26, scope: !6284)
!6294 = !DILocation(line: 3176, column: 28, scope: !6284)
!6295 = !DILocation(line: 3176, column: 35, scope: !6284)
!6296 = !DILocation(line: 3176, column: 42, scope: !6284)
!6297 = !DILocation(line: 3176, column: 40, scope: !6284)
!6298 = !DILocation(line: 3176, column: 12, scope: !6284)
!6299 = !DILocation(line: 3176, column: 17, scope: !6284)
!6300 = !DILocation(line: 3178, column: 19, scope: !6284)
!6301 = !DILocation(line: 3178, column: 26, scope: !6284)
!6302 = !DILocation(line: 3178, column: 28, scope: !6284)
!6303 = !DILocation(line: 3178, column: 35, scope: !6284)
!6304 = !DILocation(line: 3178, column: 42, scope: !6284)
!6305 = !DILocation(line: 3178, column: 40, scope: !6284)
!6306 = !DILocation(line: 3178, column: 12, scope: !6284)
!6307 = !DILocation(line: 3178, column: 17, scope: !6284)
!6308 = !DILocation(line: 3179, column: 19, scope: !6284)
!6309 = !DILocation(line: 3179, column: 26, scope: !6284)
!6310 = !DILocation(line: 3179, column: 28, scope: !6284)
!6311 = !DILocation(line: 3179, column: 35, scope: !6284)
!6312 = !DILocation(line: 3179, column: 42, scope: !6284)
!6313 = !DILocation(line: 3179, column: 40, scope: !6284)
!6314 = !DILocation(line: 3179, column: 12, scope: !6284)
!6315 = !DILocation(line: 3179, column: 17, scope: !6284)
!6316 = !DILocation(line: 3180, column: 2, scope: !6284)
!6317 = !DILocation(line: 3182, column: 28, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 3181, column: 7)
!6319 = !DILocation(line: 3182, column: 33, scope: !6318)
!6320 = !DILocation(line: 3182, column: 12, scope: !6318)
!6321 = !DILocation(line: 3182, column: 17, scope: !6318)
!6322 = !DILocation(line: 3183, column: 19, scope: !6318)
!6323 = !DILocation(line: 3183, column: 12, scope: !6318)
!6324 = !DILocation(line: 3183, column: 17, scope: !6318)
!6325 = !DILocation(line: 3184, column: 19, scope: !6318)
!6326 = !DILocation(line: 3184, column: 12, scope: !6318)
!6327 = !DILocation(line: 3184, column: 17, scope: !6318)
!6328 = !DILocation(line: 3187, column: 6, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 3187, column: 6)
!6330 = !DILocation(line: 3187, column: 6, scope: !6242)
!6331 = !DILocation(line: 3188, column: 11, scope: !6329)
!6332 = !DILocation(line: 3188, column: 9, scope: !6329)
!6333 = !DILocation(line: 3188, column: 3, scope: !6329)
!6334 = !DILocation(line: 3191, column: 20, scope: !6242)
!6335 = !DILocation(line: 3191, column: 27, scope: !6242)
!6336 = !DILocation(line: 3191, column: 30, scope: !6242)
!6337 = !DILocation(line: 3191, column: 7, scope: !6242)
!6338 = !DILocation(line: 3191, column: 5, scope: !6242)
!6339 = !DILocation(line: 3192, column: 6, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 3192, column: 6)
!6341 = !DILocation(line: 3192, column: 9, scope: !6340)
!6342 = !DILocation(line: 3192, column: 6, scope: !6242)
!6343 = !DILocation(line: 3193, column: 21, scope: !6340)
!6344 = !DILocation(line: 3193, column: 28, scope: !6340)
!6345 = !DILocation(line: 3193, column: 31, scope: !6340)
!6346 = !DILocation(line: 3193, column: 8, scope: !6340)
!6347 = !DILocation(line: 3193, column: 6, scope: !6340)
!6348 = !DILocation(line: 3193, column: 3, scope: !6340)
!6349 = !DILocation(line: 3194, column: 15, scope: !6242)
!6350 = !DILocation(line: 3194, column: 26, scope: !6242)
!6351 = !DILocation(line: 3194, column: 33, scope: !6242)
!6352 = !DILocation(line: 3194, column: 42, scope: !6242)
!6353 = !DILocation(line: 3194, column: 48, scope: !6242)
!6354 = !DILocation(line: 3194, column: 2, scope: !6242)
!6355 = !DILocation(line: 3195, column: 14, scope: !6242)
!6356 = !DILocation(line: 3195, column: 2, scope: !6242)
!6357 = !DILocation(line: 3195, column: 6, scope: !6242)
!6358 = !DILocation(line: 3195, column: 12, scope: !6242)
!6359 = !DILocation(line: 3196, column: 68, scope: !6242)
!6360 = !DILocation(line: 3196, column: 27, scope: !6242)
!6361 = !DILocation(line: 3196, column: 2, scope: !6242)
!6362 = !DILocation(line: 3196, column: 6, scope: !6242)
!6363 = !DILocation(line: 3196, column: 25, scope: !6242)
!6364 = !DILocation(line: 3198, column: 21, scope: !6242)
!6365 = !DILocation(line: 3198, column: 25, scope: !6242)
!6366 = !DILocation(line: 3198, column: 2, scope: !6242)
!6367 = !DILocation(line: 3199, column: 46, scope: !6242)
!6368 = !DILocation(line: 3199, column: 12, scope: !6242)
!6369 = !DILocation(line: 3199, column: 10, scope: !6242)
!6370 = !DILocation(line: 3200, column: 23, scope: !6242)
!6371 = !DILocation(line: 3200, column: 27, scope: !6242)
!6372 = !DILocation(line: 3200, column: 2, scope: !6242)
!6373 = !DILocation(line: 3202, column: 9, scope: !6242)
!6374 = !DILocation(line: 3202, column: 2, scope: !6242)
!6375 = distinct !DISubprogram(name: "do_merge_fullsample", scope: !3, file: !3, line: 2064, type: !6376, scopeLine: 2065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!6376 = !DISubroutineType(types: !6377)
!6377 = !{null, !3576, !2981}
!6378 = !DILocalVariable(name: "re", arg: 1, scope: !6375, file: !3, line: 2064, type: !3576)
!6379 = !DILocation(line: 2064, column: 41, scope: !6375)
!6380 = !DILocalVariable(name: "ntree", arg: 2, scope: !6375, file: !3, line: 2064, type: !2981)
!6381 = !DILocation(line: 2064, column: 56, scope: !6375)
!6382 = !DILocalVariable(name: "rectf", scope: !6375, file: !3, line: 2066, type: !778)
!6383 = !DILocation(line: 2066, column: 9, scope: !6375)
!6384 = !DILocalVariable(name: "filt", scope: !6375, file: !3, line: 2066, type: !1340)
!6385 = !DILocation(line: 2066, column: 16, scope: !6375)
!6386 = !DILocalVariable(name: "x", scope: !6375, file: !3, line: 2067, type: !7)
!6387 = !DILocation(line: 2067, column: 6, scope: !6375)
!6388 = !DILocalVariable(name: "y", scope: !6375, file: !3, line: 2067, type: !7)
!6389 = !DILocation(line: 2067, column: 9, scope: !6375)
!6390 = !DILocalVariable(name: "sample", scope: !6375, file: !3, line: 2067, type: !7)
!6391 = !DILocation(line: 2067, column: 12, scope: !6375)
!6392 = !DILocation(line: 2070, column: 6, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2070, column: 6)
!6394 = !DILocation(line: 2070, column: 6, scope: !6375)
!6395 = !DILocation(line: 2071, column: 3, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 2070, column: 13)
!6397 = !DILocation(line: 2071, column: 10, scope: !6396)
!6398 = !DILocation(line: 2071, column: 21, scope: !6396)
!6399 = !DILocation(line: 2072, column: 23, scope: !6396)
!6400 = !DILocation(line: 2072, column: 27, scope: !6396)
!6401 = !DILocation(line: 2072, column: 3, scope: !6396)
!6402 = !DILocation(line: 2072, column: 10, scope: !6396)
!6403 = !DILocation(line: 2072, column: 21, scope: !6396)
!6404 = !DILocation(line: 2073, column: 21, scope: !6396)
!6405 = !DILocation(line: 2073, column: 25, scope: !6396)
!6406 = !DILocation(line: 2073, column: 3, scope: !6396)
!6407 = !DILocation(line: 2073, column: 10, scope: !6396)
!6408 = !DILocation(line: 2073, column: 19, scope: !6396)
!6409 = !DILocation(line: 2074, column: 16, scope: !6396)
!6410 = !DILocation(line: 2074, column: 20, scope: !6396)
!6411 = !DILocation(line: 2074, column: 3, scope: !6396)
!6412 = !DILocation(line: 2074, column: 10, scope: !6396)
!6413 = !DILocation(line: 2074, column: 14, scope: !6396)
!6414 = !DILocation(line: 2075, column: 16, scope: !6396)
!6415 = !DILocation(line: 2075, column: 20, scope: !6396)
!6416 = !DILocation(line: 2075, column: 3, scope: !6396)
!6417 = !DILocation(line: 2075, column: 10, scope: !6396)
!6418 = !DILocation(line: 2075, column: 14, scope: !6396)
!6419 = !DILocation(line: 2076, column: 16, scope: !6396)
!6420 = !DILocation(line: 2076, column: 20, scope: !6396)
!6421 = !DILocation(line: 2076, column: 3, scope: !6396)
!6422 = !DILocation(line: 2076, column: 10, scope: !6396)
!6423 = !DILocation(line: 2076, column: 14, scope: !6396)
!6424 = !DILocation(line: 2077, column: 2, scope: !6396)
!6425 = !DILocation(line: 2080, column: 7, scope: !6375)
!6426 = !DILocation(line: 2080, column: 6, scope: !6375)
!6427 = !DILocation(line: 2083, column: 10, scope: !6375)
!6428 = !DILocation(line: 2083, column: 24, scope: !6375)
!6429 = !DILocation(line: 2083, column: 28, scope: !6375)
!6430 = !DILocation(line: 2083, column: 36, scope: !6375)
!6431 = !DILocation(line: 2083, column: 40, scope: !6375)
!6432 = !DILocation(line: 2083, column: 34, scope: !6375)
!6433 = !DILocation(line: 2083, column: 46, scope: !6375)
!6434 = !DILocation(line: 2083, column: 62, scope: !6375)
!6435 = !DILocation(line: 2083, column: 8, scope: !6375)
!6436 = !DILocation(line: 2085, column: 14, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2085, column: 2)
!6438 = !DILocation(line: 2085, column: 7, scope: !6437)
!6439 = !DILocation(line: 2085, column: 19, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 2085, column: 2)
!6441 = !DILocation(line: 2085, column: 28, scope: !6440)
!6442 = !DILocation(line: 2085, column: 32, scope: !6440)
!6443 = !DILocation(line: 2085, column: 34, scope: !6440)
!6444 = !DILocation(line: 2085, column: 26, scope: !6440)
!6445 = !DILocation(line: 2085, column: 2, scope: !6437)
!6446 = !DILocalVariable(name: "sce", scope: !6447, file: !3, line: 2086, type: !217)
!6447 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2085, column: 49)
!6448 = !DILocation(line: 2086, column: 10, scope: !6447)
!6449 = !DILocalVariable(name: "re1", scope: !6447, file: !3, line: 2087, type: !3576)
!6450 = !DILocation(line: 2087, column: 11, scope: !6447)
!6451 = !DILocalVariable(name: "rres", scope: !6447, file: !3, line: 2088, type: !3007)
!6452 = !DILocation(line: 2088, column: 16, scope: !6447)
!6453 = !DILocalVariable(name: "mask", scope: !6447, file: !3, line: 2089, type: !7)
!6454 = !DILocation(line: 2089, column: 7, scope: !6447)
!6455 = !DILocation(line: 2092, column: 16, scope: !6447)
!6456 = !DILocation(line: 2092, column: 23, scope: !6447)
!6457 = !DILocation(line: 2092, column: 14, scope: !6447)
!6458 = !DILocation(line: 2097, column: 25, scope: !6447)
!6459 = !DILocation(line: 2097, column: 3, scope: !6447)
!6460 = !DILocation(line: 2098, column: 14, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2098, column: 3)
!6462 = !DILocation(line: 2098, column: 18, scope: !6461)
!6463 = !DILocation(line: 2098, column: 24, scope: !6461)
!6464 = !DILocation(line: 2098, column: 30, scope: !6461)
!6465 = !DILocation(line: 2098, column: 12, scope: !6461)
!6466 = !DILocation(line: 2098, column: 8, scope: !6461)
!6467 = !DILocation(line: 2098, column: 37, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 2098, column: 3)
!6469 = !DILocation(line: 2098, column: 3, scope: !6461)
!6470 = !DILocation(line: 2099, column: 8, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 2099, column: 8)
!6472 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2098, column: 62)
!6473 = !DILocation(line: 2099, column: 13, scope: !6471)
!6474 = !DILocation(line: 2099, column: 16, scope: !6471)
!6475 = !DILocation(line: 2099, column: 21, scope: !6471)
!6476 = !DILocation(line: 2099, column: 8, scope: !6472)
!6477 = !DILocation(line: 2100, column: 24, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 2099, column: 33)
!6479 = !DILocation(line: 2100, column: 29, scope: !6478)
!6480 = !DILocation(line: 2100, column: 32, scope: !6478)
!6481 = !DILocation(line: 2100, column: 11, scope: !6478)
!6482 = !DILocation(line: 2100, column: 9, scope: !6478)
!6483 = !DILocation(line: 2102, column: 9, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 2102, column: 9)
!6485 = !DILocation(line: 2102, column: 13, scope: !6484)
!6486 = !DILocation(line: 2102, column: 17, scope: !6484)
!6487 = !DILocation(line: 2102, column: 22, scope: !6484)
!6488 = !DILocation(line: 2102, column: 24, scope: !6484)
!6489 = !DILocation(line: 2102, column: 32, scope: !6484)
!6490 = !DILocation(line: 2102, column: 9, scope: !6478)
!6491 = !DILocation(line: 2103, column: 10, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 2103, column: 10)
!6493 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 2102, column: 50)
!6494 = !DILocation(line: 2103, column: 10, scope: !6493)
!6495 = !DILocation(line: 2104, column: 26, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 2103, column: 18)
!6497 = !DILocation(line: 2104, column: 30, scope: !6496)
!6498 = !DILocation(line: 2104, column: 7, scope: !6496)
!6499 = !DILocation(line: 2105, column: 42, scope: !6496)
!6500 = !DILocation(line: 2105, column: 47, scope: !6496)
!6501 = !DILocation(line: 2105, column: 7, scope: !6496)
!6502 = !DILocation(line: 2110, column: 28, scope: !6496)
!6503 = !DILocation(line: 2110, column: 32, scope: !6496)
!6504 = !DILocation(line: 2110, column: 7, scope: !6496)
!6505 = !DILocation(line: 2111, column: 6, scope: !6496)
!6506 = !DILocation(line: 2112, column: 29, scope: !6493)
!6507 = !DILocation(line: 2112, column: 34, scope: !6493)
!6508 = !DILocation(line: 2112, column: 6, scope: !6493)
!6509 = !DILocation(line: 2113, column: 5, scope: !6493)
!6510 = !DILocation(line: 2114, column: 4, scope: !6478)
!6511 = !DILocation(line: 2115, column: 3, scope: !6472)
!6512 = !DILocation(line: 2098, column: 48, scope: !6468)
!6513 = !DILocation(line: 2098, column: 53, scope: !6468)
!6514 = !DILocation(line: 2098, column: 56, scope: !6468)
!6515 = !DILocation(line: 2098, column: 46, scope: !6468)
!6516 = !DILocation(line: 2098, column: 3, scope: !6468)
!6517 = distinct !{!6517, !6469, !6518}
!6518 = !DILocation(line: 2115, column: 3, scope: !6461)
!6519 = !DILocation(line: 2118, column: 7, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2118, column: 7)
!6521 = !DILocation(line: 2118, column: 7, scope: !6447)
!6522 = !DILocation(line: 2119, column: 27, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 2118, column: 14)
!6524 = !DILocation(line: 2119, column: 31, scope: !6523)
!6525 = !DILocation(line: 2119, column: 4, scope: !6523)
!6526 = !DILocation(line: 2120, column: 29, scope: !6523)
!6527 = !DILocation(line: 2120, column: 4, scope: !6523)
!6528 = !DILocation(line: 2122, column: 26, scope: !6523)
!6529 = !DILocation(line: 2122, column: 30, scope: !6523)
!6530 = !DILocation(line: 2122, column: 37, scope: !6523)
!6531 = !DILocation(line: 2122, column: 45, scope: !6523)
!6532 = !DILocation(line: 2122, column: 49, scope: !6523)
!6533 = !DILocation(line: 2122, column: 60, scope: !6523)
!6534 = !DILocation(line: 2122, column: 58, scope: !6523)
!6535 = !DILocation(line: 2122, column: 71, scope: !6523)
!6536 = !DILocation(line: 2122, column: 78, scope: !6523)
!6537 = !DILocation(line: 2122, column: 82, scope: !6523)
!6538 = !DILocation(line: 2122, column: 89, scope: !6523)
!6539 = !DILocation(line: 2122, column: 105, scope: !6523)
!6540 = !DILocation(line: 2122, column: 109, scope: !6523)
!6541 = !DILocation(line: 2122, column: 116, scope: !6523)
!6542 = !DILocation(line: 2122, column: 4, scope: !6523)
!6543 = !DILocation(line: 2123, column: 3, scope: !6523)
!6544 = !DILocation(line: 2126, column: 25, scope: !6447)
!6545 = !DILocation(line: 2126, column: 3, scope: !6447)
!6546 = !DILocation(line: 2129, column: 16, scope: !6447)
!6547 = !DILocation(line: 2129, column: 13, scope: !6447)
!6548 = !DILocation(line: 2129, column: 8, scope: !6447)
!6549 = !DILocation(line: 2130, column: 14, scope: !6447)
!6550 = !DILocation(line: 2130, column: 20, scope: !6447)
!6551 = !DILocation(line: 2130, column: 3, scope: !6447)
!6552 = !DILocation(line: 2132, column: 10, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2132, column: 3)
!6554 = !DILocation(line: 2132, column: 8, scope: !6553)
!6555 = !DILocation(line: 2132, column: 15, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 2132, column: 3)
!6557 = !DILocation(line: 2132, column: 19, scope: !6556)
!6558 = !DILocation(line: 2132, column: 23, scope: !6556)
!6559 = !DILocation(line: 2132, column: 17, scope: !6556)
!6560 = !DILocation(line: 2132, column: 3, scope: !6553)
!6561 = !DILocalVariable(name: "rf", scope: !6562, file: !3, line: 2133, type: !778)
!6562 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 2132, column: 35)
!6563 = !DILocation(line: 2133, column: 11, scope: !6562)
!6564 = !DILocation(line: 2133, column: 16, scope: !6562)
!6565 = !DILocation(line: 2133, column: 28, scope: !6562)
!6566 = !DILocation(line: 2133, column: 26, scope: !6562)
!6567 = !DILocation(line: 2133, column: 32, scope: !6562)
!6568 = !DILocation(line: 2133, column: 36, scope: !6562)
!6569 = !DILocation(line: 2133, column: 30, scope: !6562)
!6570 = !DILocation(line: 2133, column: 22, scope: !6562)
!6571 = !DILocalVariable(name: "col", scope: !6562, file: !3, line: 2134, type: !778)
!6572 = !DILocation(line: 2134, column: 11, scope: !6562)
!6573 = !DILocation(line: 2134, column: 22, scope: !6562)
!6574 = !DILocation(line: 2134, column: 34, scope: !6562)
!6575 = !DILocation(line: 2134, column: 32, scope: !6562)
!6576 = !DILocation(line: 2134, column: 38, scope: !6562)
!6577 = !DILocation(line: 2134, column: 42, scope: !6562)
!6578 = !DILocation(line: 2134, column: 36, scope: !6562)
!6579 = !DILocation(line: 2134, column: 28, scope: !6562)
!6580 = !DILocation(line: 2136, column: 11, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 2136, column: 4)
!6582 = !DILocation(line: 2136, column: 9, scope: !6581)
!6583 = !DILocation(line: 2136, column: 16, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 2136, column: 4)
!6585 = !DILocation(line: 2136, column: 20, scope: !6584)
!6586 = !DILocation(line: 2136, column: 24, scope: !6584)
!6587 = !DILocation(line: 2136, column: 18, scope: !6584)
!6588 = !DILocation(line: 2136, column: 4, scope: !6581)
!6589 = !DILocation(line: 2138, column: 9, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 2138, column: 9)
!6591 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 2136, column: 55)
!6592 = !DILocation(line: 2138, column: 16, scope: !6590)
!6593 = !DILocation(line: 2138, column: 9, scope: !6591)
!6594 = !DILocation(line: 2138, column: 24, scope: !6590)
!6595 = !DILocation(line: 2138, column: 31, scope: !6590)
!6596 = !DILocation(line: 2138, column: 48, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 2138, column: 48)
!6598 = !DILocation(line: 2138, column: 55, scope: !6597)
!6599 = !DILocation(line: 2138, column: 48, scope: !6590)
!6600 = !DILocation(line: 2138, column: 63, scope: !6597)
!6601 = !DILocation(line: 2138, column: 70, scope: !6597)
!6602 = !DILocation(line: 2139, column: 9, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 2139, column: 9)
!6604 = !DILocation(line: 2139, column: 16, scope: !6603)
!6605 = !DILocation(line: 2139, column: 9, scope: !6591)
!6606 = !DILocation(line: 2139, column: 24, scope: !6603)
!6607 = !DILocation(line: 2139, column: 31, scope: !6603)
!6608 = !DILocation(line: 2139, column: 48, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 2139, column: 48)
!6610 = !DILocation(line: 2139, column: 55, scope: !6609)
!6611 = !DILocation(line: 2139, column: 48, scope: !6603)
!6612 = !DILocation(line: 2139, column: 63, scope: !6609)
!6613 = !DILocation(line: 2139, column: 70, scope: !6609)
!6614 = !DILocation(line: 2140, column: 9, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 2140, column: 9)
!6616 = !DILocation(line: 2140, column: 16, scope: !6615)
!6617 = !DILocation(line: 2140, column: 9, scope: !6591)
!6618 = !DILocation(line: 2140, column: 24, scope: !6615)
!6619 = !DILocation(line: 2140, column: 31, scope: !6615)
!6620 = !DILocation(line: 2140, column: 48, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 2140, column: 48)
!6622 = !DILocation(line: 2140, column: 55, scope: !6621)
!6623 = !DILocation(line: 2140, column: 48, scope: !6615)
!6624 = !DILocation(line: 2140, column: 63, scope: !6621)
!6625 = !DILocation(line: 2140, column: 70, scope: !6621)
!6626 = !DILocation(line: 2142, column: 26, scope: !6591)
!6627 = !DILocation(line: 2142, column: 32, scope: !6591)
!6628 = !DILocation(line: 2142, column: 37, scope: !6591)
!6629 = !DILocation(line: 2142, column: 41, scope: !6591)
!6630 = !DILocation(line: 2142, column: 45, scope: !6591)
!6631 = !DILocation(line: 2142, column: 52, scope: !6591)
!6632 = !DILocation(line: 2142, column: 56, scope: !6591)
!6633 = !DILocation(line: 2142, column: 63, scope: !6591)
!6634 = !DILocation(line: 2142, column: 66, scope: !6591)
!6635 = !DILocation(line: 2142, column: 5, scope: !6591)
!6636 = !DILocation(line: 2143, column: 4, scope: !6591)
!6637 = !DILocation(line: 2136, column: 32, scope: !6584)
!6638 = !DILocation(line: 2136, column: 39, scope: !6584)
!6639 = !DILocation(line: 2136, column: 49, scope: !6584)
!6640 = !DILocation(line: 2136, column: 4, scope: !6584)
!6641 = distinct !{!6641, !6588, !6642}
!6642 = !DILocation(line: 2143, column: 4, scope: !6581)
!6643 = !DILocation(line: 2144, column: 3, scope: !6562)
!6644 = !DILocation(line: 2132, column: 31, scope: !6556)
!6645 = !DILocation(line: 2132, column: 3, scope: !6556)
!6646 = distinct !{!6646, !6560, !6647}
!6647 = !DILocation(line: 2144, column: 3, scope: !6553)
!6648 = !DILocation(line: 2146, column: 25, scope: !6447)
!6649 = !DILocation(line: 2146, column: 3, scope: !6447)
!6650 = !DILocation(line: 2149, column: 7, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2149, column: 7)
!6652 = !DILocation(line: 2149, column: 17, scope: !6651)
!6653 = !DILocation(line: 2149, column: 21, scope: !6651)
!6654 = !DILocation(line: 2149, column: 25, scope: !6651)
!6655 = !DILocation(line: 2149, column: 14, scope: !6651)
!6656 = !DILocation(line: 2149, column: 7, scope: !6447)
!6657 = !DILocation(line: 2151, column: 49, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 2149, column: 30)
!6659 = !DILocation(line: 2151, column: 53, scope: !6658)
!6660 = !DILocation(line: 2151, column: 57, scope: !6658)
!6661 = !DILocation(line: 2151, column: 25, scope: !6658)
!6662 = !DILocation(line: 2151, column: 4, scope: !6658)
!6663 = !DILocation(line: 2151, column: 8, scope: !6658)
!6664 = !DILocation(line: 2151, column: 16, scope: !6658)
!6665 = !DILocation(line: 2151, column: 23, scope: !6658)
!6666 = !DILocation(line: 2152, column: 4, scope: !6658)
!6667 = !DILocation(line: 2152, column: 8, scope: !6658)
!6668 = !DILocation(line: 2152, column: 23, scope: !6658)
!6669 = !DILocation(line: 2152, column: 27, scope: !6658)
!6670 = !DILocation(line: 2152, column: 32, scope: !6658)
!6671 = !DILocation(line: 2152, column: 36, scope: !6658)
!6672 = !DILocation(line: 2153, column: 3, scope: !6658)
!6673 = !DILocation(line: 2155, column: 7, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2155, column: 7)
!6675 = !DILocation(line: 2155, column: 11, scope: !6674)
!6676 = !DILocation(line: 2155, column: 22, scope: !6674)
!6677 = !DILocation(line: 2155, column: 26, scope: !6674)
!6678 = !DILocation(line: 2155, column: 7, scope: !6447)
!6679 = !DILocation(line: 2156, column: 4, scope: !6674)
!6680 = !DILocation(line: 2157, column: 2, scope: !6447)
!6681 = !DILocation(line: 2085, column: 45, scope: !6440)
!6682 = !DILocation(line: 2085, column: 2, scope: !6440)
!6683 = distinct !{!6683, !6445, !6684}
!6684 = !DILocation(line: 2157, column: 2, scope: !6437)
!6685 = !DILocation(line: 2160, column: 9, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2160, column: 2)
!6687 = !DILocation(line: 2160, column: 7, scope: !6686)
!6688 = !DILocation(line: 2160, column: 14, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 2160, column: 2)
!6690 = !DILocation(line: 2160, column: 18, scope: !6689)
!6691 = !DILocation(line: 2160, column: 22, scope: !6689)
!6692 = !DILocation(line: 2160, column: 16, scope: !6689)
!6693 = !DILocation(line: 2160, column: 2, scope: !6686)
!6694 = !DILocalVariable(name: "rf", scope: !6695, file: !3, line: 2161, type: !778)
!6695 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 2160, column: 34)
!6696 = !DILocation(line: 2161, column: 10, scope: !6695)
!6697 = !DILocation(line: 2161, column: 15, scope: !6695)
!6698 = !DILocation(line: 2161, column: 27, scope: !6695)
!6699 = !DILocation(line: 2161, column: 25, scope: !6695)
!6700 = !DILocation(line: 2161, column: 31, scope: !6695)
!6701 = !DILocation(line: 2161, column: 35, scope: !6695)
!6702 = !DILocation(line: 2161, column: 29, scope: !6695)
!6703 = !DILocation(line: 2161, column: 21, scope: !6695)
!6704 = !DILocation(line: 2163, column: 10, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 2163, column: 3)
!6706 = !DILocation(line: 2163, column: 8, scope: !6705)
!6707 = !DILocation(line: 2163, column: 15, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 2163, column: 3)
!6709 = !DILocation(line: 2163, column: 19, scope: !6708)
!6710 = !DILocation(line: 2163, column: 23, scope: !6708)
!6711 = !DILocation(line: 2163, column: 17, scope: !6708)
!6712 = !DILocation(line: 2163, column: 3, scope: !6705)
!6713 = !DILocation(line: 2164, column: 12, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 2163, column: 44)
!6715 = !DILocation(line: 2164, column: 4, scope: !6714)
!6716 = !DILocation(line: 2164, column: 10, scope: !6714)
!6717 = !DILocation(line: 2165, column: 12, scope: !6714)
!6718 = !DILocation(line: 2165, column: 4, scope: !6714)
!6719 = !DILocation(line: 2165, column: 10, scope: !6714)
!6720 = !DILocation(line: 2166, column: 12, scope: !6714)
!6721 = !DILocation(line: 2166, column: 4, scope: !6714)
!6722 = !DILocation(line: 2166, column: 10, scope: !6714)
!6723 = !DILocation(line: 2167, column: 4, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 2167, column: 4)
!6725 = distinct !DILexicalBlock(scope: !6714, file: !3, line: 2167, column: 4)
!6726 = !DILocation(line: 2167, column: 4, scope: !6725)
!6727 = !DILocation(line: 2167, column: 4, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 2167, column: 4)
!6729 = !DILocation(line: 2168, column: 3, scope: !6714)
!6730 = !DILocation(line: 2163, column: 31, scope: !6708)
!6731 = !DILocation(line: 2163, column: 38, scope: !6708)
!6732 = !DILocation(line: 2163, column: 3, scope: !6708)
!6733 = distinct !{!6733, !6712, !6734}
!6734 = !DILocation(line: 2168, column: 3, scope: !6705)
!6735 = !DILocation(line: 2169, column: 2, scope: !6695)
!6736 = !DILocation(line: 2160, column: 30, scope: !6689)
!6737 = !DILocation(line: 2160, column: 2, scope: !6689)
!6738 = distinct !{!6738, !6693, !6739}
!6739 = !DILocation(line: 2169, column: 2, scope: !6686)
!6740 = !DILocation(line: 2172, column: 6, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2172, column: 6)
!6742 = !DILocation(line: 2172, column: 6, scope: !6375)
!6743 = !DILocation(line: 2173, column: 3, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 2172, column: 13)
!6745 = !DILocation(line: 2173, column: 10, scope: !6744)
!6746 = !DILocation(line: 2173, column: 21, scope: !6744)
!6747 = !DILocation(line: 2174, column: 3, scope: !6744)
!6748 = !DILocation(line: 2174, column: 10, scope: !6744)
!6749 = !DILocation(line: 2174, column: 21, scope: !6744)
!6750 = !DILocation(line: 2175, column: 3, scope: !6744)
!6751 = !DILocation(line: 2175, column: 10, scope: !6744)
!6752 = !DILocation(line: 2175, column: 19, scope: !6744)
!6753 = !DILocation(line: 2176, column: 29, scope: !6744)
!6754 = !DILocation(line: 2176, column: 36, scope: !6744)
!6755 = !DILocation(line: 2176, column: 40, scope: !6744)
!6756 = !DILocation(line: 2176, column: 16, scope: !6744)
!6757 = !DILocation(line: 2176, column: 23, scope: !6744)
!6758 = !DILocation(line: 2176, column: 27, scope: !6744)
!6759 = !DILocation(line: 2176, column: 3, scope: !6744)
!6760 = !DILocation(line: 2176, column: 10, scope: !6744)
!6761 = !DILocation(line: 2176, column: 14, scope: !6744)
!6762 = !DILocation(line: 2177, column: 2, scope: !6744)
!6763 = !DILocation(line: 2180, column: 13, scope: !6375)
!6764 = !DILocation(line: 2182, column: 21, scope: !6375)
!6765 = !DILocation(line: 2182, column: 25, scope: !6375)
!6766 = !DILocation(line: 2182, column: 2, scope: !6375)
!6767 = !DILocation(line: 2183, column: 6, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 2183, column: 6)
!6769 = !DILocation(line: 2183, column: 10, scope: !6768)
!6770 = !DILocation(line: 2183, column: 18, scope: !6768)
!6771 = !DILocation(line: 2183, column: 6, scope: !6375)
!6772 = !DILocation(line: 2184, column: 3, scope: !6768)
!6773 = !DILocation(line: 2184, column: 13, scope: !6768)
!6774 = !DILocation(line: 2184, column: 17, scope: !6768)
!6775 = !DILocation(line: 2184, column: 25, scope: !6768)
!6776 = !DILocation(line: 2185, column: 22, scope: !6375)
!6777 = !DILocation(line: 2185, column: 2, scope: !6375)
!6778 = !DILocation(line: 2185, column: 6, scope: !6375)
!6779 = !DILocation(line: 2185, column: 14, scope: !6375)
!6780 = !DILocation(line: 2185, column: 20, scope: !6375)
!6781 = !DILocation(line: 2186, column: 23, scope: !6375)
!6782 = !DILocation(line: 2186, column: 27, scope: !6375)
!6783 = !DILocation(line: 2186, column: 2, scope: !6375)
!6784 = !DILocation(line: 2187, column: 1, scope: !6375)
!6785 = distinct !DISubprogram(name: "RE_seq_render_active", scope: !3, file: !3, line: 2352, type: !6786, scopeLine: 2353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!6786 = !DISubroutineType(types: !6787)
!6787 = !{!7, !217, !4358}
!6788 = !DILocalVariable(name: "scene", arg: 1, scope: !6785, file: !3, line: 2352, type: !217)
!6789 = !DILocation(line: 2352, column: 33, scope: !6785)
!6790 = !DILocalVariable(name: "rd", arg: 2, scope: !6785, file: !3, line: 2352, type: !4358)
!6791 = !DILocation(line: 2352, column: 52, scope: !6785)
!6792 = !DILocalVariable(name: "ed", scope: !6785, file: !3, line: 2354, type: !6793)
!6793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6794, size: 64)
!6794 = !DIDerivedType(tag: DW_TAG_typedef, name: "Editing", file: !77, line: 213, baseType: !2210)
!6795 = !DILocation(line: 2354, column: 11, scope: !6785)
!6796 = !DILocalVariable(name: "seq", scope: !6785, file: !3, line: 2355, type: !2216)
!6797 = !DILocation(line: 2355, column: 12, scope: !6785)
!6798 = !DILocation(line: 2357, column: 7, scope: !6785)
!6799 = !DILocation(line: 2357, column: 14, scope: !6785)
!6800 = !DILocation(line: 2357, column: 5, scope: !6785)
!6801 = !DILocation(line: 2359, column: 8, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 2359, column: 6)
!6803 = !DILocation(line: 2359, column: 12, scope: !6802)
!6804 = !DILocation(line: 2359, column: 20, scope: !6802)
!6805 = !DILocation(line: 2359, column: 31, scope: !6802)
!6806 = !DILocation(line: 2359, column: 35, scope: !6802)
!6807 = !DILocation(line: 2359, column: 38, scope: !6802)
!6808 = !DILocation(line: 2359, column: 42, scope: !6802)
!6809 = !DILocation(line: 2359, column: 46, scope: !6802)
!6810 = !DILocation(line: 2359, column: 54, scope: !6802)
!6811 = !DILocation(line: 2359, column: 6, scope: !6785)
!6812 = !DILocation(line: 2360, column: 3, scope: !6802)
!6813 = !DILocation(line: 2362, column: 13, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 2362, column: 2)
!6815 = !DILocation(line: 2362, column: 17, scope: !6814)
!6816 = !DILocation(line: 2362, column: 25, scope: !6814)
!6817 = !DILocation(line: 2362, column: 11, scope: !6814)
!6818 = !DILocation(line: 2362, column: 7, scope: !6814)
!6819 = !DILocation(line: 2362, column: 32, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 2362, column: 2)
!6821 = !DILocation(line: 2362, column: 2, scope: !6814)
!6822 = !DILocation(line: 2363, column: 7, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 2363, column: 7)
!6824 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 2362, column: 54)
!6825 = !DILocation(line: 2363, column: 12, scope: !6823)
!6826 = !DILocation(line: 2363, column: 17, scope: !6823)
!6827 = !DILocation(line: 2363, column: 7, scope: !6824)
!6828 = !DILocation(line: 2364, column: 4, scope: !6823)
!6829 = !DILocation(line: 2365, column: 2, scope: !6824)
!6830 = !DILocation(line: 2362, column: 43, scope: !6820)
!6831 = !DILocation(line: 2362, column: 48, scope: !6820)
!6832 = !DILocation(line: 2362, column: 41, scope: !6820)
!6833 = !DILocation(line: 2362, column: 2, scope: !6820)
!6834 = distinct !{!6834, !6821, !6835}
!6835 = !DILocation(line: 2365, column: 2, scope: !6814)
!6836 = !DILocation(line: 2367, column: 2, scope: !6785)
!6837 = !DILocation(line: 2368, column: 1, scope: !6785)
!6838 = distinct !DISubprogram(name: "RE_force_single_renderlayer", scope: !3, file: !3, line: 2491, type: !6839, scopeLine: 2492, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!6839 = !DISubroutineType(types: !6840)
!6840 = !{!916, !217}
!6841 = !DILocalVariable(name: "scene", arg: 1, scope: !6838, file: !3, line: 2491, type: !217)
!6842 = !DILocation(line: 2491, column: 41, scope: !6838)
!6843 = !DILocalVariable(name: "scemode", scope: !6838, file: !3, line: 2493, type: !7)
!6844 = !DILocation(line: 2493, column: 6, scope: !6838)
!6845 = !DILocation(line: 2493, column: 40, scope: !6838)
!6846 = !DILocation(line: 2493, column: 47, scope: !6838)
!6847 = !DILocation(line: 2493, column: 16, scope: !6838)
!6848 = !DILocation(line: 2494, column: 6, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 2494, column: 6)
!6850 = !DILocation(line: 2494, column: 14, scope: !6849)
!6851 = !DILocation(line: 2494, column: 6, scope: !6838)
!6852 = !DILocalVariable(name: "srl", scope: !6853, file: !3, line: 2495, type: !4359)
!6853 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 2494, column: 32)
!6854 = !DILocation(line: 2495, column: 21, scope: !6853)
!6855 = !DILocation(line: 2495, column: 41, scope: !6853)
!6856 = !DILocation(line: 2495, column: 48, scope: !6853)
!6857 = !DILocation(line: 2495, column: 50, scope: !6853)
!6858 = !DILocation(line: 2495, column: 58, scope: !6853)
!6859 = !DILocation(line: 2495, column: 65, scope: !6853)
!6860 = !DILocation(line: 2495, column: 67, scope: !6853)
!6861 = !DILocation(line: 2495, column: 27, scope: !6853)
!6862 = !DILocation(line: 2497, column: 7, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 2497, column: 7)
!6864 = !DILocation(line: 2497, column: 12, scope: !6863)
!6865 = !DILocation(line: 2497, column: 20, scope: !6863)
!6866 = !DILocation(line: 2497, column: 7, scope: !6853)
!6867 = !DILocation(line: 2498, column: 4, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6863, file: !3, line: 2497, column: 39)
!6869 = !DILocation(line: 2498, column: 9, scope: !6868)
!6870 = !DILocation(line: 2498, column: 17, scope: !6868)
!6871 = !DILocation(line: 2499, column: 4, scope: !6868)
!6872 = !DILocation(line: 2501, column: 2, scope: !6853)
!6873 = !DILocation(line: 2502, column: 2, scope: !6838)
!6874 = !DILocation(line: 2503, column: 1, scope: !6838)
!6875 = distinct !DISubprogram(name: "RE_is_rendering_allowed", scope: !3, file: !3, line: 2591, type: !6876, scopeLine: 2592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!6876 = !DISubroutineType(types: !6877)
!6877 = !{!916, !217, !3465, !6878}
!6878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6879, size: 64)
!6879 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReportList", file: !49, line: 112, baseType: !3200)
!6880 = !DILocalVariable(name: "scene", arg: 1, scope: !6875, file: !3, line: 2591, type: !217)
!6881 = !DILocation(line: 2591, column: 37, scope: !6875)
!6882 = !DILocalVariable(name: "camera_override", arg: 2, scope: !6875, file: !3, line: 2591, type: !3465)
!6883 = !DILocation(line: 2591, column: 52, scope: !6875)
!6884 = !DILocalVariable(name: "reports", arg: 3, scope: !6875, file: !3, line: 2591, type: !6878)
!6885 = !DILocation(line: 2591, column: 81, scope: !6875)
!6886 = !DILocalVariable(name: "scemode", scope: !6875, file: !3, line: 2593, type: !7)
!6887 = !DILocation(line: 2593, column: 6, scope: !6875)
!6888 = !DILocation(line: 2593, column: 40, scope: !6875)
!6889 = !DILocation(line: 2593, column: 47, scope: !6875)
!6890 = !DILocation(line: 2593, column: 16, scope: !6875)
!6891 = !DILocation(line: 2595, column: 6, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 2595, column: 6)
!6893 = !DILocation(line: 2595, column: 13, scope: !6892)
!6894 = !DILocation(line: 2595, column: 15, scope: !6892)
!6895 = !DILocation(line: 2595, column: 20, scope: !6892)
!6896 = !DILocation(line: 2595, column: 6, scope: !6875)
!6897 = !DILocation(line: 2596, column: 7, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !3, line: 2596, column: 7)
!6899 = distinct !DILexicalBlock(scope: !6892, file: !3, line: 2595, column: 32)
!6900 = !DILocation(line: 2596, column: 14, scope: !6898)
!6901 = !DILocation(line: 2596, column: 16, scope: !6898)
!6902 = !DILocation(line: 2596, column: 23, scope: !6898)
!6903 = !DILocation(line: 2596, column: 31, scope: !6898)
!6904 = !DILocation(line: 2596, column: 38, scope: !6898)
!6905 = !DILocation(line: 2596, column: 40, scope: !6898)
!6906 = !DILocation(line: 2596, column: 47, scope: !6898)
!6907 = !DILocation(line: 2596, column: 28, scope: !6898)
!6908 = !DILocation(line: 2596, column: 52, scope: !6898)
!6909 = !DILocation(line: 2597, column: 7, scope: !6898)
!6910 = !DILocation(line: 2597, column: 14, scope: !6898)
!6911 = !DILocation(line: 2597, column: 16, scope: !6898)
!6912 = !DILocation(line: 2597, column: 23, scope: !6898)
!6913 = !DILocation(line: 2597, column: 31, scope: !6898)
!6914 = !DILocation(line: 2597, column: 38, scope: !6898)
!6915 = !DILocation(line: 2597, column: 40, scope: !6898)
!6916 = !DILocation(line: 2597, column: 47, scope: !6898)
!6917 = !DILocation(line: 2597, column: 28, scope: !6898)
!6918 = !DILocation(line: 2596, column: 7, scope: !6899)
!6919 = !DILocation(line: 2599, column: 15, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 2598, column: 3)
!6921 = !DILocation(line: 2599, column: 4, scope: !6920)
!6922 = !DILocation(line: 2600, column: 4, scope: !6920)
!6923 = !DILocation(line: 2602, column: 2, scope: !6899)
!6924 = !DILocation(line: 2604, column: 6, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 2604, column: 6)
!6926 = !DILocation(line: 2604, column: 14, scope: !6925)
!6927 = !DILocation(line: 2604, column: 6, scope: !6875)
!6928 = !DILocalVariable(name: "str", scope: !6929, file: !3, line: 2605, type: !241)
!6929 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 2604, column: 51)
!6930 = !DILocation(line: 2605, column: 8, scope: !6929)
!6931 = !DILocation(line: 2607, column: 31, scope: !6929)
!6932 = !DILocation(line: 2607, column: 45, scope: !6929)
!6933 = !DILocation(line: 2607, column: 3, scope: !6929)
!6934 = !DILocation(line: 2609, column: 29, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6929, file: !3, line: 2609, column: 7)
!6936 = !DILocation(line: 2609, column: 8, scope: !6935)
!6937 = !DILocation(line: 2609, column: 7, scope: !6929)
!6938 = !DILocation(line: 2610, column: 15, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6935, file: !3, line: 2609, column: 35)
!6940 = !DILocation(line: 2610, column: 4, scope: !6939)
!6941 = !DILocation(line: 2611, column: 4, scope: !6939)
!6942 = !DILocation(line: 2615, column: 8, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6929, file: !3, line: 2615, column: 7)
!6944 = !DILocation(line: 2615, column: 16, scope: !6943)
!6945 = !DILocation(line: 2615, column: 33, scope: !6943)
!6946 = !DILocation(line: 2615, column: 37, scope: !6943)
!6947 = !DILocation(line: 2615, column: 44, scope: !6943)
!6948 = !DILocation(line: 2615, column: 46, scope: !6943)
!6949 = !DILocation(line: 2615, column: 51, scope: !6943)
!6950 = !DILocation(line: 2615, column: 7, scope: !6929)
!6951 = !DILocation(line: 2616, column: 15, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 2615, column: 62)
!6953 = !DILocation(line: 2616, column: 4, scope: !6952)
!6954 = !DILocation(line: 2617, column: 4, scope: !6952)
!6955 = !DILocation(line: 2620, column: 2, scope: !6929)
!6956 = !DILocation(line: 2622, column: 6, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 2622, column: 6)
!6958 = !DILocation(line: 2622, column: 14, scope: !6957)
!6959 = !DILocation(line: 2622, column: 6, scope: !6875)
!6960 = !DILocation(line: 2623, column: 7, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 2623, column: 7)
!6962 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 2622, column: 26)
!6963 = !DILocation(line: 2623, column: 14, scope: !6961)
!6964 = !DILocation(line: 2623, column: 7, scope: !6962)
!6965 = !DILocation(line: 2624, column: 9, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 2624, column: 8)
!6967 = distinct !DILexicalBlock(scope: !6961, file: !3, line: 2623, column: 25)
!6968 = !DILocation(line: 2624, column: 16, scope: !6966)
!6969 = !DILocation(line: 2624, column: 8, scope: !6967)
!6970 = !DILocation(line: 2625, column: 16, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 2624, column: 26)
!6972 = !DILocation(line: 2625, column: 5, scope: !6971)
!6973 = !DILocation(line: 2626, column: 5, scope: !6971)
!6974 = !DILocation(line: 2629, column: 32, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 2629, column: 8)
!6976 = !DILocation(line: 2629, column: 9, scope: !6975)
!6977 = !DILocation(line: 2629, column: 8, scope: !6967)
!6978 = !DILocation(line: 2630, column: 16, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 2629, column: 40)
!6980 = !DILocation(line: 2630, column: 5, scope: !6979)
!6981 = !DILocation(line: 2631, column: 5, scope: !6979)
!6982 = !DILocation(line: 2634, column: 8, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 2634, column: 8)
!6984 = !DILocation(line: 2634, column: 16, scope: !6983)
!6985 = !DILocation(line: 2634, column: 8, scope: !6967)
!6986 = !DILocation(line: 2635, column: 32, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 2635, column: 9)
!6988 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 2634, column: 33)
!6989 = !DILocation(line: 2635, column: 9, scope: !6987)
!6990 = !DILocation(line: 2635, column: 42, scope: !6987)
!6991 = !DILocation(line: 2635, column: 9, scope: !6988)
!6992 = !DILocation(line: 2636, column: 17, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6987, file: !3, line: 2635, column: 48)
!6994 = !DILocation(line: 2636, column: 6, scope: !6993)
!6995 = !DILocation(line: 2637, column: 6, scope: !6993)
!6996 = !DILocation(line: 2639, column: 4, scope: !6988)
!6997 = !DILocation(line: 2640, column: 3, scope: !6967)
!6998 = !DILocation(line: 2641, column: 2, scope: !6962)
!6999 = !DILocation(line: 2644, column: 26, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 2644, column: 6)
!7001 = !DILocation(line: 2644, column: 33, scope: !7000)
!7002 = !DILocation(line: 2644, column: 50, scope: !7000)
!7003 = !DILocation(line: 2644, column: 7, scope: !7000)
!7004 = !DILocation(line: 2644, column: 6, scope: !6875)
!7005 = !DILocation(line: 2645, column: 3, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7000, file: !3, line: 2644, column: 60)
!7007 = !DILocation(line: 2649, column: 26, scope: !6875)
!7008 = !DILocation(line: 2649, column: 33, scope: !6875)
!7009 = !DILocation(line: 2649, column: 36, scope: !6875)
!7010 = !DILocation(line: 2649, column: 54, scope: !6875)
!7011 = !DILocation(line: 2649, column: 72, scope: !6875)
!7012 = !DILocation(line: 2649, column: 79, scope: !6875)
!7013 = !DILocation(line: 2649, column: 2, scope: !6875)
!7014 = !DILocation(line: 2652, column: 6, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 2652, column: 6)
!7016 = !DILocation(line: 2652, column: 13, scope: !7015)
!7017 = !DILocation(line: 2652, column: 15, scope: !7015)
!7018 = !DILocation(line: 2652, column: 20, scope: !7015)
!7019 = !DILocation(line: 2652, column: 6, scope: !6875)
!7020 = !DILocation(line: 2653, column: 7, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 2653, column: 7)
!7022 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 2652, column: 34)
!7023 = !DILocation(line: 2653, column: 14, scope: !7021)
!7024 = !DILocation(line: 2653, column: 16, scope: !7021)
!7025 = !DILocation(line: 2653, column: 21, scope: !7021)
!7026 = !DILocation(line: 2653, column: 7, scope: !7022)
!7027 = !DILocation(line: 2654, column: 15, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 2653, column: 32)
!7029 = !DILocation(line: 2654, column: 4, scope: !7028)
!7030 = !DILocation(line: 2655, column: 4, scope: !7028)
!7031 = !DILocation(line: 2664, column: 2, scope: !7022)
!7032 = !DILocation(line: 2676, column: 41, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 2676, column: 6)
!7034 = !DILocation(line: 2676, column: 7, scope: !7033)
!7035 = !DILocation(line: 2676, column: 6, scope: !6875)
!7036 = !DILocation(line: 2677, column: 14, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 2676, column: 49)
!7038 = !DILocation(line: 2677, column: 3, scope: !7037)
!7039 = !DILocation(line: 2678, column: 3, scope: !7037)
!7040 = !DILocation(line: 2681, column: 2, scope: !6875)
!7041 = !DILocation(line: 2682, column: 1, scope: !6875)
!7042 = distinct !DISubprogram(name: "check_composite_output", scope: !3, file: !3, line: 2586, type: !7043, scopeLine: 2587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!7043 = !DISubroutineType(types: !7044)
!7044 = !{!7, !217}
!7045 = !DILocalVariable(name: "scene", arg: 1, scope: !7042, file: !3, line: 2586, type: !217)
!7046 = !DILocation(line: 2586, column: 42, scope: !7042)
!7047 = !DILocation(line: 2588, column: 40, scope: !7042)
!7048 = !DILocation(line: 2588, column: 47, scope: !7042)
!7049 = !DILocation(line: 2588, column: 9, scope: !7042)
!7050 = !DILocation(line: 2588, column: 2, scope: !7042)
!7051 = distinct !DISubprogram(name: "composite_needs_render", scope: !3, file: !3, line: 1732, type: !7052, scopeLine: 1733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{!7, !217, !7}
!7054 = !DILocalVariable(name: "sce", arg: 1, scope: !7051, file: !3, line: 1732, type: !217)
!7055 = !DILocation(line: 1732, column: 42, scope: !7051)
!7056 = !DILocalVariable(name: "this_scene", arg: 2, scope: !7051, file: !3, line: 1732, type: !7)
!7057 = !DILocation(line: 1732, column: 51, scope: !7051)
!7058 = !DILocalVariable(name: "ntree", scope: !7051, file: !3, line: 1734, type: !2981)
!7059 = !DILocation(line: 1734, column: 13, scope: !7051)
!7060 = !DILocation(line: 1734, column: 21, scope: !7051)
!7061 = !DILocation(line: 1734, column: 26, scope: !7051)
!7062 = !DILocalVariable(name: "node", scope: !7051, file: !3, line: 1735, type: !850)
!7063 = !DILocation(line: 1735, column: 9, scope: !7051)
!7064 = !DILocation(line: 1737, column: 6, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 1737, column: 6)
!7066 = !DILocation(line: 1737, column: 12, scope: !7065)
!7067 = !DILocation(line: 1737, column: 6, scope: !7051)
!7068 = !DILocation(line: 1737, column: 21, scope: !7065)
!7069 = !DILocation(line: 1738, column: 6, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 1738, column: 6)
!7071 = !DILocation(line: 1738, column: 11, scope: !7070)
!7072 = !DILocation(line: 1738, column: 21, scope: !7070)
!7073 = !DILocation(line: 1738, column: 6, scope: !7051)
!7074 = !DILocation(line: 1738, column: 31, scope: !7070)
!7075 = !DILocation(line: 1739, column: 7, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 1739, column: 6)
!7077 = !DILocation(line: 1739, column: 12, scope: !7076)
!7078 = !DILocation(line: 1739, column: 14, scope: !7076)
!7079 = !DILocation(line: 1739, column: 22, scope: !7076)
!7080 = !DILocation(line: 1739, column: 34, scope: !7076)
!7081 = !DILocation(line: 1739, column: 6, scope: !7051)
!7082 = !DILocation(line: 1739, column: 40, scope: !7076)
!7083 = !DILocation(line: 1741, column: 14, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 1741, column: 2)
!7085 = !DILocation(line: 1741, column: 21, scope: !7084)
!7086 = !DILocation(line: 1741, column: 27, scope: !7084)
!7087 = !DILocation(line: 1741, column: 12, scope: !7084)
!7088 = !DILocation(line: 1741, column: 7, scope: !7084)
!7089 = !DILocation(line: 1741, column: 34, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 1741, column: 2)
!7091 = !DILocation(line: 1741, column: 2, scope: !7084)
!7092 = !DILocation(line: 1742, column: 7, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 1742, column: 7)
!7094 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 1741, column: 59)
!7095 = !DILocation(line: 1742, column: 13, scope: !7093)
!7096 = !DILocation(line: 1742, column: 18, scope: !7093)
!7097 = !DILocation(line: 1742, column: 39, scope: !7093)
!7098 = !DILocation(line: 1742, column: 43, scope: !7093)
!7099 = !DILocation(line: 1742, column: 49, scope: !7093)
!7100 = !DILocation(line: 1742, column: 54, scope: !7093)
!7101 = !DILocation(line: 1742, column: 68, scope: !7093)
!7102 = !DILocation(line: 1742, column: 7, scope: !7094)
!7103 = !DILocation(line: 1743, column: 8, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 1743, column: 8)
!7105 = !DILocation(line: 1743, column: 19, scope: !7104)
!7106 = !DILocation(line: 1743, column: 24, scope: !7104)
!7107 = !DILocation(line: 1743, column: 27, scope: !7104)
!7108 = !DILocation(line: 1743, column: 33, scope: !7104)
!7109 = !DILocation(line: 1743, column: 36, scope: !7104)
!7110 = !DILocation(line: 1743, column: 44, scope: !7104)
!7111 = !DILocation(line: 1743, column: 47, scope: !7104)
!7112 = !DILocation(line: 1743, column: 53, scope: !7104)
!7113 = !DILocation(line: 1743, column: 60, scope: !7104)
!7114 = !DILocation(line: 1743, column: 65, scope: !7104)
!7115 = !DILocation(line: 1743, column: 56, scope: !7104)
!7116 = !DILocation(line: 1743, column: 8, scope: !7093)
!7117 = !DILocation(line: 1744, column: 5, scope: !7104)
!7118 = !DILocation(line: 1745, column: 2, scope: !7094)
!7119 = !DILocation(line: 1741, column: 47, scope: !7090)
!7120 = !DILocation(line: 1741, column: 53, scope: !7090)
!7121 = !DILocation(line: 1741, column: 45, scope: !7090)
!7122 = !DILocation(line: 1741, column: 2, scope: !7090)
!7123 = distinct !{!7123, !7091, !7124}
!7124 = !DILocation(line: 1745, column: 2, scope: !7084)
!7125 = !DILocation(line: 1746, column: 2, scope: !7051)
!7126 = !DILocation(line: 1747, column: 1, scope: !7051)
!7127 = distinct !DISubprogram(name: "check_valid_camera", scope: !3, file: !3, line: 2530, type: !7128, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!7128 = !DISubroutineType(types: !7129)
!7129 = !{!7, !217, !3465, !6878}
!7130 = !DILocalVariable(name: "scene", arg: 1, scope: !7127, file: !3, line: 2530, type: !217)
!7131 = !DILocation(line: 2530, column: 38, scope: !7127)
!7132 = !DILocalVariable(name: "camera_override", arg: 2, scope: !7127, file: !3, line: 2530, type: !3465)
!7133 = !DILocation(line: 2530, column: 53, scope: !7127)
!7134 = !DILocalVariable(name: "reports", arg: 3, scope: !7127, file: !3, line: 2530, type: !6878)
!7135 = !DILocation(line: 2530, column: 82, scope: !7127)
!7136 = !DILocation(line: 2532, column: 6, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 2532, column: 6)
!7138 = !DILocation(line: 2532, column: 22, scope: !7137)
!7139 = !DILocation(line: 2532, column: 30, scope: !7137)
!7140 = !DILocation(line: 2532, column: 33, scope: !7137)
!7141 = !DILocation(line: 2532, column: 40, scope: !7137)
!7142 = !DILocation(line: 2532, column: 47, scope: !7137)
!7143 = !DILocation(line: 2532, column: 6, scope: !7127)
!7144 = !DILocation(line: 2533, column: 41, scope: !7137)
!7145 = !DILocation(line: 2533, column: 19, scope: !7137)
!7146 = !DILocation(line: 2533, column: 3, scope: !7137)
!7147 = !DILocation(line: 2533, column: 10, scope: !7137)
!7148 = !DILocation(line: 2533, column: 17, scope: !7137)
!7149 = !DILocation(line: 2535, column: 27, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 2535, column: 6)
!7151 = !DILocation(line: 2535, column: 35, scope: !7150)
!7152 = !DILocation(line: 2535, column: 42, scope: !7150)
!7153 = !DILocation(line: 2535, column: 6, scope: !7150)
!7154 = !DILocation(line: 2535, column: 6, scope: !7127)
!7155 = !DILocation(line: 2536, column: 7, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 2536, column: 7)
!7157 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 2535, column: 46)
!7158 = !DILocation(line: 2536, column: 14, scope: !7156)
!7159 = !DILocation(line: 2536, column: 7, scope: !7157)
!7160 = !DILocalVariable(name: "seq", scope: !7161, file: !3, line: 2537, type: !2216)
!7161 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 2536, column: 18)
!7162 = !DILocation(line: 2537, column: 14, scope: !7161)
!7163 = !DILocation(line: 2537, column: 20, scope: !7161)
!7164 = !DILocation(line: 2537, column: 27, scope: !7161)
!7165 = !DILocation(line: 2537, column: 31, scope: !7161)
!7166 = !DILocation(line: 2537, column: 39, scope: !7161)
!7167 = !DILocation(line: 2539, column: 4, scope: !7161)
!7168 = !DILocation(line: 2539, column: 11, scope: !7161)
!7169 = !DILocation(line: 2540, column: 9, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 2540, column: 9)
!7171 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 2539, column: 16)
!7172 = !DILocation(line: 2540, column: 14, scope: !7170)
!7173 = !DILocation(line: 2540, column: 19, scope: !7170)
!7174 = !DILocation(line: 2540, column: 37, scope: !7170)
!7175 = !DILocation(line: 2540, column: 40, scope: !7170)
!7176 = !DILocation(line: 2540, column: 45, scope: !7170)
!7177 = !DILocation(line: 2540, column: 9, scope: !7171)
!7178 = !DILocation(line: 2541, column: 11, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 2541, column: 10)
!7180 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 2540, column: 52)
!7181 = !DILocation(line: 2541, column: 16, scope: !7179)
!7182 = !DILocation(line: 2541, column: 10, scope: !7180)
!7183 = !DILocation(line: 2542, column: 12, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 2542, column: 11)
!7185 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 2541, column: 30)
!7186 = !DILocation(line: 2542, column: 17, scope: !7184)
!7187 = !DILocation(line: 2542, column: 24, scope: !7184)
!7188 = !DILocation(line: 2542, column: 31, scope: !7184)
!7189 = !DILocation(line: 2542, column: 57, scope: !7184)
!7190 = !DILocation(line: 2542, column: 62, scope: !7184)
!7191 = !DILocation(line: 2542, column: 35, scope: !7184)
!7192 = !DILocation(line: 2542, column: 11, scope: !7185)
!7193 = !DILocalVariable(name: "override", scope: !7194, file: !3, line: 2544, type: !3465)
!7194 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 2542, column: 70)
!7195 = !DILocation(line: 2544, column: 16, scope: !7194)
!7196 = !DILocation(line: 2544, column: 28, scope: !7194)
!7197 = !DILocation(line: 2544, column: 33, scope: !7194)
!7198 = !DILocation(line: 2544, column: 42, scope: !7194)
!7199 = !DILocation(line: 2544, column: 39, scope: !7194)
!7200 = !DILocation(line: 2544, column: 27, scope: !7194)
!7201 = !DILocation(line: 2544, column: 51, scope: !7194)
!7202 = !DILocation(line: 2546, column: 44, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 2546, column: 12)
!7204 = !DILocation(line: 2546, column: 49, scope: !7203)
!7205 = !DILocation(line: 2546, column: 56, scope: !7203)
!7206 = !DILocation(line: 2546, column: 13, scope: !7203)
!7207 = !DILocation(line: 2546, column: 12, scope: !7194)
!7208 = !DILocation(line: 2547, column: 21, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 2546, column: 67)
!7210 = !DILocation(line: 2547, column: 76, scope: !7209)
!7211 = !DILocation(line: 2547, column: 81, scope: !7209)
!7212 = !DILocation(line: 2547, column: 88, scope: !7209)
!7213 = !DILocation(line: 2547, column: 91, scope: !7209)
!7214 = !DILocation(line: 2547, column: 95, scope: !7209)
!7215 = !DILocation(line: 2547, column: 9, scope: !7209)
!7216 = !DILocation(line: 2548, column: 9, scope: !7209)
!7217 = !DILocation(line: 2550, column: 7, scope: !7194)
!7218 = !DILocation(line: 2551, column: 6, scope: !7185)
!7219 = !DILocation(line: 2552, column: 5, scope: !7180)
!7220 = !DILocation(line: 2554, column: 11, scope: !7171)
!7221 = !DILocation(line: 2554, column: 16, scope: !7171)
!7222 = !DILocation(line: 2554, column: 9, scope: !7171)
!7223 = distinct !{!7223, !7167, !7224}
!7224 = !DILocation(line: 2555, column: 4, scope: !7161)
!7225 = !DILocation(line: 2556, column: 3, scope: !7161)
!7226 = !DILocation(line: 2557, column: 2, scope: !7157)
!7227 = !DILocation(line: 2558, column: 43, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 2558, column: 11)
!7229 = !DILocation(line: 2558, column: 50, scope: !7228)
!7230 = !DILocation(line: 2558, column: 12, scope: !7228)
!7231 = !DILocation(line: 2558, column: 11, scope: !7150)
!7232 = !DILocation(line: 2559, column: 14, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 2558, column: 68)
!7234 = !DILocation(line: 2559, column: 3, scope: !7233)
!7235 = !DILocation(line: 2560, column: 3, scope: !7233)
!7236 = !DILocation(line: 2563, column: 2, scope: !7127)
!7237 = !DILocation(line: 2564, column: 1, scope: !7127)
!7238 = distinct !DISubprogram(name: "render_scene_has_layers_to_render", scope: !3, file: !3, line: 241, type: !6839, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!7239 = !DILocalVariable(name: "scene", arg: 1, scope: !7238, file: !3, line: 241, type: !217)
!7240 = !DILocation(line: 241, column: 54, scope: !7238)
!7241 = !DILocalVariable(name: "srl", scope: !7238, file: !3, line: 243, type: !4359)
!7242 = !DILocation(line: 243, column: 20, scope: !7238)
!7243 = !DILocation(line: 244, column: 13, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 244, column: 2)
!7245 = !DILocation(line: 244, column: 20, scope: !7244)
!7246 = !DILocation(line: 244, column: 22, scope: !7244)
!7247 = !DILocation(line: 244, column: 29, scope: !7244)
!7248 = !DILocation(line: 244, column: 11, scope: !7244)
!7249 = !DILocation(line: 244, column: 7, scope: !7244)
!7250 = !DILocation(line: 244, column: 36, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 244, column: 2)
!7252 = !DILocation(line: 244, column: 2, scope: !7244)
!7253 = !DILocation(line: 245, column: 9, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 245, column: 7)
!7255 = distinct !DILexicalBlock(scope: !7251, file: !3, line: 244, column: 58)
!7256 = !DILocation(line: 245, column: 14, scope: !7254)
!7257 = !DILocation(line: 245, column: 22, scope: !7254)
!7258 = !DILocation(line: 245, column: 7, scope: !7255)
!7259 = !DILocation(line: 246, column: 4, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 245, column: 42)
!7261 = !DILocation(line: 248, column: 2, scope: !7255)
!7262 = !DILocation(line: 244, column: 47, scope: !7251)
!7263 = !DILocation(line: 244, column: 52, scope: !7251)
!7264 = !DILocation(line: 244, column: 45, scope: !7251)
!7265 = !DILocation(line: 244, column: 2, scope: !7251)
!7266 = distinct !{!7266, !7252, !7267}
!7267 = !DILocation(line: 248, column: 2, scope: !7244)
!7268 = !DILocation(line: 249, column: 2, scope: !7238)
!7269 = !DILocation(line: 250, column: 1, scope: !7238)
!7270 = distinct !DISubprogram(name: "RE_SetReports", scope: !3, file: !3, line: 2793, type: !7271, scopeLine: 2794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!7271 = !DISubroutineType(types: !7272)
!7272 = !{null, !3576, !6878}
!7273 = !DILocalVariable(name: "re", arg: 1, scope: !7270, file: !3, line: 2793, type: !3576)
!7274 = !DILocation(line: 2793, column: 28, scope: !7270)
!7275 = !DILocalVariable(name: "reports", arg: 2, scope: !7270, file: !3, line: 2793, type: !6878)
!7276 = !DILocation(line: 2793, column: 44, scope: !7270)
!7277 = !DILocation(line: 2795, column: 16, scope: !7270)
!7278 = !DILocation(line: 2795, column: 2, scope: !7270)
!7279 = !DILocation(line: 2795, column: 6, scope: !7270)
!7280 = !DILocation(line: 2795, column: 14, scope: !7270)
!7281 = !DILocation(line: 2796, column: 1, scope: !7270)
!7282 = distinct !DISubprogram(name: "RE_BlenderFrame", scope: !3, file: !3, line: 2799, type: !7283, scopeLine: 2801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!7283 = !DISubroutineType(types: !7284)
!7284 = !{null, !3576, !6098, !217, !4359, !3465, !43, !7, !7285}
!7285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !916)
!7286 = !DILocalVariable(name: "re", arg: 1, scope: !7282, file: !3, line: 2799, type: !3576)
!7287 = !DILocation(line: 2799, column: 30, scope: !7282)
!7288 = !DILocalVariable(name: "bmain", arg: 2, scope: !7282, file: !3, line: 2799, type: !6098)
!7289 = !DILocation(line: 2799, column: 40, scope: !7282)
!7290 = !DILocalVariable(name: "scene", arg: 3, scope: !7282, file: !3, line: 2799, type: !217)
!7291 = !DILocation(line: 2799, column: 54, scope: !7282)
!7292 = !DILocalVariable(name: "srl", arg: 4, scope: !7282, file: !3, line: 2799, type: !4359)
!7293 = !DILocation(line: 2799, column: 79, scope: !7282)
!7294 = !DILocalVariable(name: "camera_override", arg: 5, scope: !7282, file: !3, line: 2799, type: !3465)
!7295 = !DILocation(line: 2799, column: 92, scope: !7282)
!7296 = !DILocalVariable(name: "lay_override", arg: 6, scope: !7282, file: !3, line: 2800, type: !43)
!7297 = !DILocation(line: 2800, column: 35, scope: !7282)
!7298 = !DILocalVariable(name: "frame", arg: 7, scope: !7282, file: !3, line: 2800, type: !7)
!7299 = !DILocation(line: 2800, column: 53, scope: !7282)
!7300 = !DILocalVariable(name: "write_still", arg: 8, scope: !7282, file: !3, line: 2800, type: !7285)
!7301 = !DILocation(line: 2800, column: 71, scope: !7282)
!7302 = !DILocation(line: 2802, column: 20, scope: !7282)
!7303 = !DILocation(line: 2802, column: 24, scope: !7282)
!7304 = !DILocation(line: 2802, column: 36, scope: !7282)
!7305 = !DILocation(line: 2802, column: 30, scope: !7282)
!7306 = !DILocation(line: 2802, column: 2, scope: !7282)
!7307 = !DILocation(line: 2805, column: 17, scope: !7282)
!7308 = !DILocation(line: 2807, column: 18, scope: !7282)
!7309 = !DILocation(line: 2807, column: 2, scope: !7282)
!7310 = !DILocation(line: 2807, column: 9, scope: !7282)
!7311 = !DILocation(line: 2807, column: 11, scope: !7282)
!7312 = !DILocation(line: 2807, column: 16, scope: !7282)
!7313 = !DILocation(line: 2809, column: 34, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7282, file: !3, line: 2809, column: 6)
!7315 = !DILocation(line: 2809, column: 39, scope: !7314)
!7316 = !DILocation(line: 2809, column: 46, scope: !7314)
!7317 = !DILocation(line: 2809, column: 49, scope: !7314)
!7318 = !DILocation(line: 2809, column: 56, scope: !7314)
!7319 = !DILocation(line: 2809, column: 63, scope: !7314)
!7320 = !DILocation(line: 2809, column: 68, scope: !7314)
!7321 = !DILocation(line: 2809, column: 85, scope: !7314)
!7322 = !DILocation(line: 2809, column: 6, scope: !7314)
!7323 = !DILocation(line: 2809, column: 6, scope: !7282)
!7324 = !DILocation(line: 2810, column: 3, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 2809, column: 106)
!7326 = !DILocation(line: 2812, column: 21, scope: !7325)
!7327 = !DILocation(line: 2812, column: 25, scope: !7325)
!7328 = !DILocation(line: 2812, column: 37, scope: !7325)
!7329 = !DILocation(line: 2812, column: 31, scope: !7325)
!7330 = !DILocation(line: 2812, column: 3, scope: !7325)
!7331 = !DILocation(line: 2814, column: 25, scope: !7325)
!7332 = !DILocation(line: 2814, column: 3, scope: !7325)
!7333 = !DILocation(line: 2816, column: 7, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 2816, column: 7)
!7335 = !DILocation(line: 2816, column: 19, scope: !7334)
!7336 = !DILocation(line: 2816, column: 25, scope: !7334)
!7337 = !DILocation(line: 2816, column: 23, scope: !7334)
!7338 = !DILocation(line: 2816, column: 7, scope: !7325)
!7339 = !DILocation(line: 2817, column: 28, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 2817, column: 8)
!7341 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 2816, column: 35)
!7342 = !DILocation(line: 2817, column: 35, scope: !7340)
!7343 = !DILocation(line: 2817, column: 37, scope: !7340)
!7344 = !DILocation(line: 2817, column: 47, scope: !7340)
!7345 = !DILocation(line: 2817, column: 8, scope: !7340)
!7346 = !DILocation(line: 2817, column: 8, scope: !7341)
!7347 = !DILocation(line: 2819, column: 5, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 2817, column: 56)
!7349 = !DILocation(line: 2820, column: 4, scope: !7348)
!7350 = !DILocalVariable(name: "name", scope: !7351, file: !3, line: 2822, type: !241)
!7351 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 2821, column: 9)
!7352 = !DILocation(line: 2822, column: 10, scope: !7351)
!7353 = !DILocation(line: 2823, column: 23, scope: !7351)
!7354 = !DILocation(line: 2823, column: 29, scope: !7351)
!7355 = !DILocation(line: 2823, column: 36, scope: !7351)
!7356 = !DILocation(line: 2823, column: 38, scope: !7351)
!7357 = !DILocation(line: 2823, column: 43, scope: !7351)
!7358 = !DILocation(line: 2823, column: 50, scope: !7351)
!7359 = !DILocation(line: 2823, column: 56, scope: !7351)
!7360 = !DILocation(line: 2823, column: 63, scope: !7351)
!7361 = !DILocation(line: 2823, column: 65, scope: !7351)
!7362 = !DILocation(line: 2824, column: 24, scope: !7351)
!7363 = !DILocation(line: 2824, column: 31, scope: !7351)
!7364 = !DILocation(line: 2824, column: 33, scope: !7351)
!7365 = !DILocation(line: 2824, column: 45, scope: !7351)
!7366 = !DILocation(line: 2824, column: 52, scope: !7351)
!7367 = !DILocation(line: 2824, column: 54, scope: !7351)
!7368 = !DILocation(line: 2824, column: 62, scope: !7351)
!7369 = !DILocation(line: 2824, column: 77, scope: !7351)
!7370 = !DILocation(line: 2824, column: 44, scope: !7351)
!7371 = !DILocation(line: 2823, column: 5, scope: !7351)
!7372 = !DILocation(line: 2827, column: 29, scope: !7351)
!7373 = !DILocation(line: 2827, column: 33, scope: !7351)
!7374 = !DILocation(line: 2827, column: 40, scope: !7351)
!7375 = !DILocation(line: 2827, column: 53, scope: !7351)
!7376 = !DILocation(line: 2827, column: 5, scope: !7351)
!7377 = !DILocation(line: 2829, column: 3, scope: !7341)
!7378 = !DILocation(line: 2831, column: 21, scope: !7325)
!7379 = !DILocation(line: 2831, column: 25, scope: !7325)
!7380 = !DILocation(line: 2831, column: 37, scope: !7325)
!7381 = !DILocation(line: 2831, column: 31, scope: !7325)
!7382 = !DILocation(line: 2831, column: 3, scope: !7325)
!7383 = !DILocation(line: 2832, column: 2, scope: !7325)
!7384 = !DILocation(line: 2834, column: 20, scope: !7282)
!7385 = !DILocation(line: 2834, column: 24, scope: !7282)
!7386 = !DILocation(line: 2834, column: 36, scope: !7282)
!7387 = !DILocation(line: 2834, column: 30, scope: !7282)
!7388 = !DILocation(line: 2834, column: 45, scope: !7282)
!7389 = !DILocation(line: 2834, column: 43, scope: !7282)
!7390 = !DILocation(line: 2834, column: 2, scope: !7282)
!7391 = !DILocation(line: 2837, column: 17, scope: !7282)
!7392 = !DILocation(line: 2838, column: 1, scope: !7282)
!7393 = distinct !DISubprogram(name: "render_initialize_from_main", scope: !3, file: !3, line: 2717, type: !7394, scopeLine: 2719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!7394 = !DISubroutineType(types: !7395)
!7395 = !{!7, !3576, !4358, !6098, !217, !4359, !3465, !43, !7, !7}
!7396 = !DILocalVariable(name: "re", arg: 1, scope: !7393, file: !3, line: 2717, type: !3576)
!7397 = !DILocation(line: 2717, column: 48, scope: !7393)
!7398 = !DILocalVariable(name: "rd", arg: 2, scope: !7393, file: !3, line: 2717, type: !4358)
!7399 = !DILocation(line: 2717, column: 64, scope: !7393)
!7400 = !DILocalVariable(name: "bmain", arg: 3, scope: !7393, file: !3, line: 2717, type: !6098)
!7401 = !DILocation(line: 2717, column: 74, scope: !7393)
!7402 = !DILocalVariable(name: "scene", arg: 4, scope: !7393, file: !3, line: 2717, type: !217)
!7403 = !DILocation(line: 2717, column: 88, scope: !7393)
!7404 = !DILocalVariable(name: "srl", arg: 5, scope: !7393, file: !3, line: 2717, type: !4359)
!7405 = !DILocation(line: 2717, column: 113, scope: !7393)
!7406 = !DILocalVariable(name: "camera_override", arg: 6, scope: !7393, file: !3, line: 2718, type: !3465)
!7407 = !DILocation(line: 2718, column: 48, scope: !7393)
!7408 = !DILocalVariable(name: "lay_override", arg: 7, scope: !7393, file: !3, line: 2718, type: !43)
!7409 = !DILocation(line: 2718, column: 78, scope: !7393)
!7410 = !DILocalVariable(name: "anim", arg: 8, scope: !7393, file: !3, line: 2718, type: !7)
!7411 = !DILocation(line: 2718, column: 96, scope: !7393)
!7412 = !DILocalVariable(name: "anim_init", arg: 9, scope: !7393, file: !3, line: 2718, type: !7)
!7413 = !DILocation(line: 2718, column: 106, scope: !7393)
!7414 = !DILocalVariable(name: "winx", scope: !7393, file: !3, line: 2720, type: !7)
!7415 = !DILocation(line: 2720, column: 6, scope: !7393)
!7416 = !DILocalVariable(name: "winy", scope: !7393, file: !3, line: 2720, type: !7)
!7417 = !DILocation(line: 2720, column: 12, scope: !7393)
!7418 = !DILocalVariable(name: "disprect", scope: !7393, file: !3, line: 2721, type: !969)
!7419 = !DILocation(line: 2721, column: 7, scope: !7393)
!7420 = !DILocation(line: 2727, column: 10, scope: !7393)
!7421 = !DILocation(line: 2727, column: 14, scope: !7393)
!7422 = !DILocation(line: 2727, column: 21, scope: !7393)
!7423 = !DILocation(line: 2727, column: 25, scope: !7393)
!7424 = !DILocation(line: 2727, column: 19, scope: !7393)
!7425 = !DILocation(line: 2727, column: 31, scope: !7393)
!7426 = !DILocation(line: 2727, column: 7, scope: !7393)
!7427 = !DILocation(line: 2728, column: 10, scope: !7393)
!7428 = !DILocation(line: 2728, column: 14, scope: !7393)
!7429 = !DILocation(line: 2728, column: 21, scope: !7393)
!7430 = !DILocation(line: 2728, column: 25, scope: !7393)
!7431 = !DILocation(line: 2728, column: 19, scope: !7393)
!7432 = !DILocation(line: 2728, column: 31, scope: !7393)
!7433 = !DILocation(line: 2728, column: 7, scope: !7393)
!7434 = !DILocation(line: 2731, column: 6, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7393, file: !3, line: 2731, column: 6)
!7436 = !DILocation(line: 2731, column: 13, scope: !7435)
!7437 = !DILocation(line: 2731, column: 15, scope: !7435)
!7438 = !DILocation(line: 2731, column: 20, scope: !7435)
!7439 = !DILocation(line: 2731, column: 6, scope: !7393)
!7440 = !DILocation(line: 2732, column: 19, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 2731, column: 32)
!7442 = !DILocation(line: 2732, column: 23, scope: !7441)
!7443 = !DILocation(line: 2732, column: 30, scope: !7441)
!7444 = !DILocation(line: 2732, column: 37, scope: !7441)
!7445 = !DILocation(line: 2732, column: 35, scope: !7441)
!7446 = !DILocation(line: 2732, column: 12, scope: !7441)
!7447 = !DILocation(line: 2732, column: 17, scope: !7441)
!7448 = !DILocation(line: 2733, column: 19, scope: !7441)
!7449 = !DILocation(line: 2733, column: 23, scope: !7441)
!7450 = !DILocation(line: 2733, column: 30, scope: !7441)
!7451 = !DILocation(line: 2733, column: 37, scope: !7441)
!7452 = !DILocation(line: 2733, column: 35, scope: !7441)
!7453 = !DILocation(line: 2733, column: 12, scope: !7441)
!7454 = !DILocation(line: 2733, column: 17, scope: !7441)
!7455 = !DILocation(line: 2735, column: 19, scope: !7441)
!7456 = !DILocation(line: 2735, column: 23, scope: !7441)
!7457 = !DILocation(line: 2735, column: 30, scope: !7441)
!7458 = !DILocation(line: 2735, column: 37, scope: !7441)
!7459 = !DILocation(line: 2735, column: 35, scope: !7441)
!7460 = !DILocation(line: 2735, column: 12, scope: !7441)
!7461 = !DILocation(line: 2735, column: 17, scope: !7441)
!7462 = !DILocation(line: 2736, column: 19, scope: !7441)
!7463 = !DILocation(line: 2736, column: 23, scope: !7441)
!7464 = !DILocation(line: 2736, column: 30, scope: !7441)
!7465 = !DILocation(line: 2736, column: 37, scope: !7441)
!7466 = !DILocation(line: 2736, column: 35, scope: !7441)
!7467 = !DILocation(line: 2736, column: 12, scope: !7441)
!7468 = !DILocation(line: 2736, column: 17, scope: !7441)
!7469 = !DILocation(line: 2737, column: 2, scope: !7441)
!7470 = !DILocation(line: 2739, column: 28, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 2738, column: 7)
!7472 = !DILocation(line: 2739, column: 33, scope: !7471)
!7473 = !DILocation(line: 2739, column: 12, scope: !7471)
!7474 = !DILocation(line: 2739, column: 17, scope: !7471)
!7475 = !DILocation(line: 2740, column: 19, scope: !7471)
!7476 = !DILocation(line: 2740, column: 12, scope: !7471)
!7477 = !DILocation(line: 2740, column: 17, scope: !7471)
!7478 = !DILocation(line: 2741, column: 19, scope: !7471)
!7479 = !DILocation(line: 2741, column: 12, scope: !7471)
!7480 = !DILocation(line: 2741, column: 17, scope: !7471)
!7481 = !DILocation(line: 2744, column: 13, scope: !7393)
!7482 = !DILocation(line: 2744, column: 2, scope: !7393)
!7483 = !DILocation(line: 2744, column: 6, scope: !7393)
!7484 = !DILocation(line: 2744, column: 11, scope: !7393)
!7485 = !DILocation(line: 2745, column: 14, scope: !7393)
!7486 = !DILocation(line: 2745, column: 2, scope: !7393)
!7487 = !DILocation(line: 2745, column: 6, scope: !7393)
!7488 = !DILocation(line: 2745, column: 12, scope: !7393)
!7489 = !DILocation(line: 2746, column: 68, scope: !7393)
!7490 = !DILocation(line: 2746, column: 27, scope: !7393)
!7491 = !DILocation(line: 2746, column: 2, scope: !7393)
!7492 = !DILocation(line: 2746, column: 6, scope: !7393)
!7493 = !DILocation(line: 2746, column: 25, scope: !7393)
!7494 = !DILocation(line: 2747, column: 24, scope: !7393)
!7495 = !DILocation(line: 2747, column: 2, scope: !7393)
!7496 = !DILocation(line: 2747, column: 6, scope: !7393)
!7497 = !DILocation(line: 2747, column: 22, scope: !7393)
!7498 = !DILocation(line: 2748, column: 12, scope: !7393)
!7499 = !DILocation(line: 2748, column: 27, scope: !7393)
!7500 = !DILocation(line: 2748, column: 42, scope: !7393)
!7501 = !DILocation(line: 2748, column: 49, scope: !7393)
!7502 = !DILocation(line: 2748, column: 2, scope: !7393)
!7503 = !DILocation(line: 2748, column: 6, scope: !7393)
!7504 = !DILocation(line: 2748, column: 10, scope: !7393)
!7505 = !DILocation(line: 2749, column: 23, scope: !7393)
!7506 = !DILocation(line: 2749, column: 2, scope: !7393)
!7507 = !DILocation(line: 2749, column: 6, scope: !7393)
!7508 = !DILocation(line: 2749, column: 21, scope: !7393)
!7509 = !DILocation(line: 2750, column: 21, scope: !7393)
!7510 = !DILocation(line: 2750, column: 25, scope: !7393)
!7511 = !DILocation(line: 2750, column: 29, scope: !7393)
!7512 = !DILocation(line: 2750, column: 43, scope: !7393)
!7513 = !DILocation(line: 2750, column: 20, scope: !7393)
!7514 = !DILocation(line: 2750, column: 2, scope: !7393)
!7515 = !DILocation(line: 2750, column: 6, scope: !7393)
!7516 = !DILocation(line: 2750, column: 8, scope: !7393)
!7517 = !DILocation(line: 2750, column: 18, scope: !7393)
!7518 = !DILocation(line: 2753, column: 6, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7393, file: !3, line: 2753, column: 6)
!7520 = !DILocation(line: 2753, column: 6, scope: !7393)
!7521 = !DILocation(line: 2754, column: 33, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 2753, column: 12)
!7523 = !DILocation(line: 2754, column: 38, scope: !7522)
!7524 = !DILocation(line: 2754, column: 45, scope: !7522)
!7525 = !DILocation(line: 2754, column: 3, scope: !7522)
!7526 = !DILocation(line: 2755, column: 3, scope: !7522)
!7527 = !DILocation(line: 2755, column: 7, scope: !7522)
!7528 = !DILocation(line: 2755, column: 18, scope: !7522)
!7529 = !DILocation(line: 2756, column: 3, scope: !7522)
!7530 = !DILocation(line: 2760, column: 24, scope: !7393)
!7531 = !DILocation(line: 2760, column: 2, scope: !7393)
!7532 = !DILocation(line: 2772, column: 6, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7393, file: !3, line: 2772, column: 6)
!7534 = !DILocation(line: 2772, column: 10, scope: !7533)
!7535 = !DILocation(line: 2772, column: 13, scope: !7533)
!7536 = !DILocation(line: 2772, column: 20, scope: !7533)
!7537 = !DILocation(line: 2772, column: 22, scope: !7533)
!7538 = !DILocation(line: 2772, column: 30, scope: !7533)
!7539 = !DILocation(line: 2772, column: 6, scope: !7393)
!7540 = !DILocation(line: 2773, column: 22, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 2772, column: 48)
!7542 = !DILocation(line: 2773, column: 26, scope: !7541)
!7543 = !DILocation(line: 2773, column: 3, scope: !7541)
!7544 = !DILocation(line: 2774, column: 36, scope: !7541)
!7545 = !DILocation(line: 2774, column: 3, scope: !7541)
!7546 = !DILocation(line: 2775, column: 24, scope: !7541)
!7547 = !DILocation(line: 2775, column: 28, scope: !7541)
!7548 = !DILocation(line: 2775, column: 3, scope: !7541)
!7549 = !DILocation(line: 2776, column: 2, scope: !7541)
!7550 = !DILocation(line: 2778, column: 15, scope: !7393)
!7551 = !DILocation(line: 2778, column: 26, scope: !7393)
!7552 = !DILocation(line: 2778, column: 33, scope: !7393)
!7553 = !DILocation(line: 2778, column: 36, scope: !7393)
!7554 = !DILocation(line: 2778, column: 41, scope: !7393)
!7555 = !DILocation(line: 2778, column: 47, scope: !7393)
!7556 = !DILocation(line: 2778, column: 2, scope: !7393)
!7557 = !DILocation(line: 2779, column: 7, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7393, file: !3, line: 2779, column: 6)
!7559 = !DILocation(line: 2779, column: 11, scope: !7558)
!7560 = !DILocation(line: 2779, column: 6, scope: !7393)
!7561 = !DILocation(line: 2780, column: 3, scope: !7558)
!7562 = !DILocation(line: 2783, column: 25, scope: !7393)
!7563 = !DILocation(line: 2783, column: 29, scope: !7393)
!7564 = !DILocation(line: 2783, column: 2, scope: !7393)
!7565 = !DILocation(line: 2785, column: 27, scope: !7393)
!7566 = !DILocation(line: 2785, column: 2, scope: !7393)
!7567 = !DILocation(line: 2787, column: 2, scope: !7393)
!7568 = !DILocation(line: 2787, column: 6, scope: !7393)
!7569 = !DILocation(line: 2787, column: 19, scope: !7393)
!7570 = !DILocation(line: 2787, column: 23, scope: !7393)
!7571 = !DILocation(line: 2787, column: 28, scope: !7393)
!7572 = !DILocation(line: 2787, column: 32, scope: !7393)
!7573 = !DILocation(line: 2788, column: 2, scope: !7393)
!7574 = !DILocation(line: 2788, column: 6, scope: !7393)
!7575 = !DILocation(line: 2788, column: 20, scope: !7393)
!7576 = !DILocation(line: 2788, column: 24, scope: !7393)
!7577 = !DILocation(line: 2788, column: 29, scope: !7393)
!7578 = !DILocation(line: 2788, column: 33, scope: !7393)
!7579 = !DILocation(line: 2790, column: 2, scope: !7393)
!7580 = !DILocation(line: 2791, column: 1, scope: !7393)
!7581 = distinct !DISubprogram(name: "do_render_all_options", scope: !3, file: !3, line: 2449, type: !3574, scopeLine: 2450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!7582 = !DILocalVariable(name: "re", arg: 1, scope: !7581, file: !3, line: 2449, type: !3576)
!7583 = !DILocation(line: 2449, column: 43, scope: !7581)
!7584 = !DILocation(line: 2451, column: 2, scope: !7581)
!7585 = !DILocation(line: 2451, column: 6, scope: !7581)
!7586 = !DILocation(line: 2451, column: 27, scope: !7581)
!7587 = !DILocation(line: 2451, column: 31, scope: !7581)
!7588 = !DILocation(line: 2451, column: 36, scope: !7581)
!7589 = !DILocation(line: 2451, column: 40, scope: !7581)
!7590 = !DILocation(line: 2453, column: 33, scope: !7581)
!7591 = !DILocation(line: 2453, column: 37, scope: !7581)
!7592 = !DILocation(line: 2453, column: 2, scope: !7581)
!7593 = !DILocation(line: 2455, column: 20, scope: !7581)
!7594 = !DILocation(line: 2455, column: 2, scope: !7581)
!7595 = !DILocation(line: 2455, column: 6, scope: !7581)
!7596 = !DILocation(line: 2455, column: 8, scope: !7581)
!7597 = !DILocation(line: 2455, column: 18, scope: !7581)
!7598 = !DILocation(line: 2458, column: 32, scope: !7581)
!7599 = !DILocation(line: 2458, column: 36, scope: !7581)
!7600 = !DILocation(line: 2458, column: 38, scope: !7581)
!7601 = !DILocation(line: 2458, column: 2, scope: !7581)
!7602 = !DILocation(line: 2460, column: 23, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 2460, column: 6)
!7604 = !DILocation(line: 2460, column: 6, scope: !7603)
!7605 = !DILocation(line: 2460, column: 6, scope: !7581)
!7606 = !DILocation(line: 2462, column: 2, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 2460, column: 31)
!7608 = !DILocation(line: 2463, column: 32, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 2463, column: 11)
!7610 = !DILocation(line: 2463, column: 36, scope: !7609)
!7611 = !DILocation(line: 2463, column: 44, scope: !7609)
!7612 = !DILocation(line: 2463, column: 48, scope: !7609)
!7613 = !DILocation(line: 2463, column: 11, scope: !7609)
!7614 = !DILocation(line: 2463, column: 11, scope: !7603)
!7615 = !DILocation(line: 2465, column: 8, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7617, file: !3, line: 2465, column: 7)
!7617 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 2463, column: 52)
!7618 = !DILocation(line: 2465, column: 12, scope: !7616)
!7619 = !DILocation(line: 2465, column: 23, scope: !7616)
!7620 = !DILocation(line: 2465, column: 27, scope: !7616)
!7621 = !DILocation(line: 2465, column: 7, scope: !7617)
!7622 = !DILocation(line: 2466, column: 18, scope: !7616)
!7623 = !DILocation(line: 2466, column: 4, scope: !7616)
!7624 = !DILocation(line: 2468, column: 3, scope: !7617)
!7625 = !DILocation(line: 2468, column: 7, scope: !7617)
!7626 = !DILocation(line: 2468, column: 18, scope: !7617)
!7627 = !DILocation(line: 2468, column: 22, scope: !7617)
!7628 = !DILocation(line: 2468, column: 28, scope: !7617)
!7629 = !DILocation(line: 2468, column: 32, scope: !7617)
!7630 = !DILocation(line: 2469, column: 3, scope: !7617)
!7631 = !DILocation(line: 2469, column: 7, scope: !7617)
!7632 = !DILocation(line: 2469, column: 22, scope: !7617)
!7633 = !DILocation(line: 2469, column: 26, scope: !7617)
!7634 = !DILocation(line: 2469, column: 31, scope: !7617)
!7635 = !DILocation(line: 2469, column: 35, scope: !7617)
!7636 = !DILocation(line: 2470, column: 2, scope: !7617)
!7637 = !DILocation(line: 2472, column: 14, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 2471, column: 7)
!7639 = !DILocation(line: 2472, column: 3, scope: !7638)
!7640 = !DILocation(line: 2472, column: 7, scope: !7638)
!7641 = !DILocation(line: 2472, column: 12, scope: !7638)
!7642 = !DILocation(line: 2474, column: 38, scope: !7638)
!7643 = !DILocation(line: 2474, column: 3, scope: !7638)
!7644 = !DILocation(line: 2476, column: 23, scope: !7638)
!7645 = !DILocation(line: 2476, column: 27, scope: !7638)
!7646 = !DILocation(line: 2476, column: 3, scope: !7638)
!7647 = !DILocation(line: 2477, column: 3, scope: !7638)
!7648 = !DILocation(line: 2477, column: 7, scope: !7638)
!7649 = !DILocation(line: 2477, column: 12, scope: !7638)
!7650 = !DILocation(line: 2480, column: 24, scope: !7581)
!7651 = !DILocation(line: 2480, column: 52, scope: !7581)
!7652 = !DILocation(line: 2480, column: 56, scope: !7581)
!7653 = !DILocation(line: 2480, column: 58, scope: !7581)
!7654 = !DILocation(line: 2480, column: 50, scope: !7581)
!7655 = !DILocation(line: 2480, column: 2, scope: !7581)
!7656 = !DILocation(line: 2480, column: 6, scope: !7581)
!7657 = !DILocation(line: 2480, column: 8, scope: !7581)
!7658 = !DILocation(line: 2480, column: 22, scope: !7581)
!7659 = !DILocation(line: 2482, column: 2, scope: !7581)
!7660 = !DILocation(line: 2482, column: 6, scope: !7581)
!7661 = !DILocation(line: 2482, column: 17, scope: !7581)
!7662 = !DILocation(line: 2482, column: 21, scope: !7581)
!7663 = !DILocation(line: 2482, column: 27, scope: !7581)
!7664 = !DILocation(line: 2482, column: 31, scope: !7581)
!7665 = !DILocation(line: 2485, column: 7, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 2485, column: 6)
!7667 = !DILocation(line: 2485, column: 11, scope: !7666)
!7668 = !DILocation(line: 2485, column: 13, scope: !7666)
!7669 = !DILocation(line: 2485, column: 19, scope: !7666)
!7670 = !DILocation(line: 2485, column: 34, scope: !7666)
!7671 = !DILocation(line: 2485, column: 38, scope: !7666)
!7672 = !DILocation(line: 2485, column: 42, scope: !7666)
!7673 = !DILocation(line: 2485, column: 44, scope: !7666)
!7674 = !DILocation(line: 2485, column: 50, scope: !7666)
!7675 = !DILocation(line: 2485, column: 6, scope: !7581)
!7676 = !DILocation(line: 2486, column: 26, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 2485, column: 67)
!7678 = !DILocation(line: 2486, column: 3, scope: !7677)
!7679 = !DILocation(line: 2487, column: 3, scope: !7677)
!7680 = !DILocation(line: 2487, column: 7, scope: !7677)
!7681 = !DILocation(line: 2487, column: 22, scope: !7677)
!7682 = !DILocation(line: 2487, column: 26, scope: !7677)
!7683 = !DILocation(line: 2487, column: 31, scope: !7677)
!7684 = !DILocation(line: 2487, column: 35, scope: !7677)
!7685 = !DILocation(line: 2488, column: 2, scope: !7677)
!7686 = !DILocation(line: 2489, column: 1, scope: !7581)
!7687 = distinct !DISubprogram(name: "do_write_image_or_movie", scope: !3, file: !3, line: 2862, type: !7688, scopeLine: 2863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!7688 = !DISubroutineType(types: !7689)
!7689 = !{!7, !3576, !6098, !217, !7690, !772}
!7690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7691, size: 64)
!7691 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMovieHandle", file: !7692, line: 52, baseType: !7693)
!7692 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_writeavi.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMovieHandle", file: !7692, line: 45, size: 320, elements: !7694)
!7694 = !{!7695, !7700, !7704, !7706, !7710}
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "start_movie", scope: !7693, file: !7692, line: 46, baseType: !7696, size: 64)
!7696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7697, size: 64)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{!7, !646, !7699, !7, !7, !3199}
!7699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 64)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "append_movie", scope: !7693, file: !7692, line: 47, baseType: !7701, size: 64, offset: 64)
!7701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7702, size: 64)
!7702 = !DISubroutineType(types: !7703)
!7703 = !{!7, !7699, !7, !7, !933, !7, !7, !3199}
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "end_movie", scope: !7693, file: !7692, line: 49, baseType: !7705, size: 64, offset: 128)
!7705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4274, size: 64)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_frame", scope: !7693, file: !7692, line: 50, baseType: !7707, size: 64, offset: 192)
!7707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7708, size: 64)
!7708 = !DISubroutineType(types: !7709)
!7709 = !{!7, !7699, !3199}
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "get_movie_path", scope: !7693, file: !7692, line: 51, baseType: !7711, size: 64, offset: 256)
!7711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7712, size: 64)
!7712 = !DISubroutineType(types: !7713)
!7713 = !{null, !988, !7699}
!7714 = !DILocalVariable(name: "re", arg: 1, scope: !7687, file: !3, line: 2862, type: !3576)
!7715 = !DILocation(line: 2862, column: 44, scope: !7687)
!7716 = !DILocalVariable(name: "bmain", arg: 2, scope: !7687, file: !3, line: 2862, type: !6098)
!7717 = !DILocation(line: 2862, column: 54, scope: !7687)
!7718 = !DILocalVariable(name: "scene", arg: 3, scope: !7687, file: !3, line: 2862, type: !217)
!7719 = !DILocation(line: 2862, column: 68, scope: !7687)
!7720 = !DILocalVariable(name: "mh", arg: 4, scope: !7687, file: !3, line: 2862, type: !7690)
!7721 = !DILocation(line: 2862, column: 89, scope: !7687)
!7722 = !DILocalVariable(name: "name_override", arg: 5, scope: !7687, file: !3, line: 2862, type: !772)
!7723 = !DILocation(line: 2862, column: 105, scope: !7687)
!7724 = !DILocalVariable(name: "name", scope: !7687, file: !3, line: 2864, type: !241)
!7725 = !DILocation(line: 2864, column: 7, scope: !7687)
!7726 = !DILocalVariable(name: "rres", scope: !7687, file: !3, line: 2865, type: !3007)
!7727 = !DILocation(line: 2865, column: 15, scope: !7687)
!7728 = !DILocalVariable(name: "camera", scope: !7687, file: !3, line: 2866, type: !3465)
!7729 = !DILocation(line: 2866, column: 10, scope: !7687)
!7730 = !DILocation(line: 2866, column: 32, scope: !7687)
!7731 = !DILocation(line: 2866, column: 19, scope: !7687)
!7732 = !DILocalVariable(name: "render_time", scope: !7687, file: !3, line: 2867, type: !925)
!7733 = !DILocation(line: 2867, column: 9, scope: !7687)
!7734 = !DILocalVariable(name: "ok", scope: !7687, file: !3, line: 2868, type: !7)
!7735 = !DILocation(line: 2868, column: 6, scope: !7687)
!7736 = !DILocation(line: 2870, column: 24, scope: !7687)
!7737 = !DILocation(line: 2870, column: 2, scope: !7687)
!7738 = !DILocation(line: 2873, column: 26, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 2873, column: 6)
!7740 = !DILocation(line: 2873, column: 33, scope: !7739)
!7741 = !DILocation(line: 2873, column: 35, scope: !7739)
!7742 = !DILocation(line: 2873, column: 45, scope: !7739)
!7743 = !DILocation(line: 2873, column: 6, scope: !7739)
!7744 = !DILocation(line: 2873, column: 6, scope: !7687)
!7745 = !DILocalVariable(name: "do_free", scope: !7746, file: !3, line: 2874, type: !916)
!7746 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 2873, column: 54)
!7747 = !DILocation(line: 2874, column: 8, scope: !7746)
!7748 = !DILocalVariable(name: "ibuf", scope: !7746, file: !3, line: 2875, type: !7749)
!7749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7750, size: 64)
!7750 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImBuf", file: !909, line: 141, baseType: !908)
!7751 = !DILocation(line: 2875, column: 10, scope: !7746)
!7752 = !DILocation(line: 2875, column: 52, scope: !7746)
!7753 = !DILocation(line: 2875, column: 59, scope: !7746)
!7754 = !DILocation(line: 2875, column: 17, scope: !7746)
!7755 = !DILocation(line: 2878, column: 7, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 2878, column: 7)
!7757 = !DILocation(line: 2878, column: 13, scope: !7756)
!7758 = !DILocation(line: 2878, column: 18, scope: !7756)
!7759 = !DILocation(line: 2878, column: 7, scope: !7746)
!7760 = !DILocation(line: 2879, column: 17, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7756, file: !3, line: 2878, column: 27)
!7762 = !DILocation(line: 2879, column: 50, scope: !7761)
!7763 = !DILocation(line: 2879, column: 45, scope: !7761)
!7764 = !DILocation(line: 2879, column: 43, scope: !7761)
!7765 = !DILocation(line: 2879, column: 63, scope: !7761)
!7766 = !DILocation(line: 2879, column: 58, scope: !7761)
!7767 = !DILocation(line: 2879, column: 56, scope: !7761)
!7768 = !DILocation(line: 2879, column: 4, scope: !7761)
!7769 = !DILocation(line: 2879, column: 10, scope: !7761)
!7770 = !DILocation(line: 2879, column: 15, scope: !7761)
!7771 = !DILocation(line: 2880, column: 4, scope: !7761)
!7772 = !DILocation(line: 2880, column: 10, scope: !7761)
!7773 = !DILocation(line: 2880, column: 15, scope: !7761)
!7774 = !DILocation(line: 2881, column: 27, scope: !7761)
!7775 = !DILocation(line: 2881, column: 38, scope: !7761)
!7776 = !DILocation(line: 2881, column: 44, scope: !7761)
!7777 = !DILocation(line: 2881, column: 4, scope: !7761)
!7778 = !DILocation(line: 2882, column: 12, scope: !7761)
!7779 = !DILocation(line: 2883, column: 3, scope: !7761)
!7780 = !DILocation(line: 2886, column: 39, scope: !7746)
!7781 = !DILocation(line: 2886, column: 59, scope: !7746)
!7782 = !DILocation(line: 2886, column: 66, scope: !7746)
!7783 = !DILocation(line: 2887, column: 40, scope: !7746)
!7784 = !DILocation(line: 2887, column: 47, scope: !7746)
!7785 = !DILocation(line: 2887, column: 66, scope: !7746)
!7786 = !DILocation(line: 2887, column: 73, scope: !7746)
!7787 = !DILocation(line: 2887, column: 75, scope: !7746)
!7788 = !DILocation(line: 2886, column: 3, scope: !7746)
!7789 = !DILocation(line: 2889, column: 8, scope: !7746)
!7790 = !DILocation(line: 2889, column: 12, scope: !7746)
!7791 = !DILocation(line: 2889, column: 26, scope: !7746)
!7792 = !DILocation(line: 2889, column: 30, scope: !7746)
!7793 = !DILocation(line: 2889, column: 33, scope: !7746)
!7794 = !DILocation(line: 2889, column: 40, scope: !7746)
!7795 = !DILocation(line: 2889, column: 42, scope: !7746)
!7796 = !DILocation(line: 2889, column: 48, scope: !7746)
!7797 = !DILocation(line: 2889, column: 55, scope: !7746)
!7798 = !DILocation(line: 2889, column: 57, scope: !7746)
!7799 = !DILocation(line: 2889, column: 71, scope: !7746)
!7800 = !DILocation(line: 2889, column: 77, scope: !7746)
!7801 = !DILocation(line: 2890, column: 25, scope: !7746)
!7802 = !DILocation(line: 2890, column: 31, scope: !7746)
!7803 = !DILocation(line: 2890, column: 34, scope: !7746)
!7804 = !DILocation(line: 2890, column: 40, scope: !7746)
!7805 = !DILocation(line: 2890, column: 43, scope: !7746)
!7806 = !DILocation(line: 2890, column: 47, scope: !7746)
!7807 = !DILocation(line: 2889, column: 6, scope: !7746)
!7808 = !DILocation(line: 2891, column: 7, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 2891, column: 7)
!7810 = !DILocation(line: 2891, column: 7, scope: !7746)
!7811 = !DILocation(line: 2892, column: 4, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 2891, column: 16)
!7813 = !DILocation(line: 2892, column: 14, scope: !7812)
!7814 = !DILocation(line: 2892, column: 20, scope: !7812)
!7815 = !DILocation(line: 2893, column: 4, scope: !7812)
!7816 = !DILocation(line: 2893, column: 10, scope: !7812)
!7817 = !DILocation(line: 2893, column: 15, scope: !7812)
!7818 = !DILocation(line: 2894, column: 4, scope: !7812)
!7819 = !DILocation(line: 2894, column: 10, scope: !7812)
!7820 = !DILocation(line: 2894, column: 15, scope: !7812)
!7821 = !DILocation(line: 2895, column: 3, scope: !7812)
!7822 = !DILocation(line: 2898, column: 17, scope: !7746)
!7823 = !DILocation(line: 2898, column: 3, scope: !7746)
!7824 = !DILocation(line: 2900, column: 29, scope: !7746)
!7825 = !DILocation(line: 2900, column: 36, scope: !7746)
!7826 = !DILocation(line: 2900, column: 38, scope: !7746)
!7827 = !DILocation(line: 2900, column: 3, scope: !7746)
!7828 = !DILocation(line: 2901, column: 2, scope: !7746)
!7829 = !DILocation(line: 2903, column: 7, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7831, file: !3, line: 2903, column: 7)
!7831 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 2902, column: 7)
!7832 = !DILocation(line: 2903, column: 7, scope: !7831)
!7833 = !DILocation(line: 2904, column: 16, scope: !7830)
!7834 = !DILocation(line: 2904, column: 22, scope: !7830)
!7835 = !DILocation(line: 2904, column: 4, scope: !7830)
!7836 = !DILocation(line: 2906, column: 22, scope: !7830)
!7837 = !DILocation(line: 2906, column: 28, scope: !7830)
!7838 = !DILocation(line: 2906, column: 35, scope: !7830)
!7839 = !DILocation(line: 2906, column: 37, scope: !7830)
!7840 = !DILocation(line: 2906, column: 42, scope: !7830)
!7841 = !DILocation(line: 2906, column: 49, scope: !7830)
!7842 = !DILocation(line: 2906, column: 55, scope: !7830)
!7843 = !DILocation(line: 2906, column: 62, scope: !7830)
!7844 = !DILocation(line: 2906, column: 64, scope: !7830)
!7845 = !DILocation(line: 2907, column: 23, scope: !7830)
!7846 = !DILocation(line: 2907, column: 30, scope: !7830)
!7847 = !DILocation(line: 2907, column: 32, scope: !7830)
!7848 = !DILocation(line: 2907, column: 44, scope: !7830)
!7849 = !DILocation(line: 2907, column: 51, scope: !7830)
!7850 = !DILocation(line: 2907, column: 53, scope: !7830)
!7851 = !DILocation(line: 2907, column: 61, scope: !7830)
!7852 = !DILocation(line: 2907, column: 76, scope: !7830)
!7853 = !DILocation(line: 2907, column: 43, scope: !7830)
!7854 = !DILocation(line: 2906, column: 4, scope: !7830)
!7855 = !DILocation(line: 2909, column: 7, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7831, file: !3, line: 2909, column: 7)
!7857 = !DILocation(line: 2909, column: 11, scope: !7856)
!7858 = !DILocation(line: 2909, column: 13, scope: !7856)
!7859 = !DILocation(line: 2909, column: 23, scope: !7856)
!7860 = !DILocation(line: 2909, column: 30, scope: !7856)
!7861 = !DILocation(line: 2909, column: 7, scope: !7831)
!7862 = !DILocation(line: 2910, column: 8, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 2910, column: 8)
!7864 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 2909, column: 58)
!7865 = !DILocation(line: 2910, column: 12, scope: !7863)
!7866 = !DILocation(line: 2910, column: 8, scope: !7864)
!7867 = !DILocation(line: 2911, column: 26, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7863, file: !3, line: 2910, column: 20)
!7869 = !DILocation(line: 2911, column: 30, scope: !7868)
!7870 = !DILocation(line: 2911, column: 39, scope: !7868)
!7871 = !DILocation(line: 2911, column: 43, scope: !7868)
!7872 = !DILocation(line: 2911, column: 51, scope: !7868)
!7873 = !DILocation(line: 2911, column: 57, scope: !7868)
!7874 = !DILocation(line: 2911, column: 64, scope: !7868)
!7875 = !DILocation(line: 2911, column: 66, scope: !7868)
!7876 = !DILocation(line: 2911, column: 76, scope: !7868)
!7877 = !DILocation(line: 2911, column: 5, scope: !7868)
!7878 = !DILocation(line: 2912, column: 25, scope: !7868)
!7879 = !DILocation(line: 2912, column: 5, scope: !7868)
!7880 = !DILocation(line: 2913, column: 4, scope: !7868)
!7881 = !DILocation(line: 2914, column: 3, scope: !7864)
!7882 = !DILocalVariable(name: "ibuf", scope: !7883, file: !3, line: 2916, type: !7749)
!7883 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 2915, column: 8)
!7884 = !DILocation(line: 2916, column: 11, scope: !7883)
!7885 = !DILocation(line: 2916, column: 53, scope: !7883)
!7886 = !DILocation(line: 2916, column: 60, scope: !7883)
!7887 = !DILocation(line: 2916, column: 18, scope: !7883)
!7888 = !DILocation(line: 2918, column: 40, scope: !7883)
!7889 = !DILocation(line: 2918, column: 60, scope: !7883)
!7890 = !DILocation(line: 2918, column: 67, scope: !7883)
!7891 = !DILocation(line: 2919, column: 41, scope: !7883)
!7892 = !DILocation(line: 2919, column: 48, scope: !7883)
!7893 = !DILocation(line: 2919, column: 67, scope: !7883)
!7894 = !DILocation(line: 2919, column: 74, scope: !7883)
!7895 = !DILocation(line: 2919, column: 76, scope: !7883)
!7896 = !DILocation(line: 2918, column: 4, scope: !7883)
!7897 = !DILocation(line: 2921, column: 31, scope: !7883)
!7898 = !DILocation(line: 2921, column: 38, scope: !7883)
!7899 = !DILocation(line: 2921, column: 46, scope: !7883)
!7900 = !DILocation(line: 2921, column: 52, scope: !7883)
!7901 = !DILocation(line: 2921, column: 59, scope: !7883)
!7902 = !DILocation(line: 2921, column: 66, scope: !7883)
!7903 = !DILocation(line: 2921, column: 68, scope: !7883)
!7904 = !DILocation(line: 2921, column: 9, scope: !7883)
!7905 = !DILocation(line: 2921, column: 7, scope: !7883)
!7906 = !DILocation(line: 2923, column: 8, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 2923, column: 8)
!7908 = !DILocation(line: 2923, column: 11, scope: !7907)
!7909 = !DILocation(line: 2923, column: 8, scope: !7883)
!7910 = !DILocation(line: 2924, column: 46, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 2923, column: 17)
!7912 = !DILocation(line: 2924, column: 5, scope: !7911)
!7913 = !DILocation(line: 2925, column: 4, scope: !7911)
!7914 = !DILocation(line: 2926, column: 29, scope: !7907)
!7915 = !DILocation(line: 2926, column: 9, scope: !7907)
!7916 = !DILocation(line: 2929, column: 8, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 2929, column: 8)
!7918 = !DILocation(line: 2929, column: 11, scope: !7917)
!7919 = !DILocation(line: 2929, column: 14, scope: !7917)
!7920 = !DILocation(line: 2929, column: 21, scope: !7917)
!7921 = !DILocation(line: 2929, column: 23, scope: !7917)
!7922 = !DILocation(line: 2929, column: 33, scope: !7917)
!7923 = !DILocation(line: 2929, column: 40, scope: !7917)
!7924 = !DILocation(line: 2929, column: 64, scope: !7917)
!7925 = !DILocation(line: 2929, column: 68, scope: !7917)
!7926 = !DILocation(line: 2929, column: 75, scope: !7917)
!7927 = !DILocation(line: 2929, column: 77, scope: !7917)
!7928 = !DILocation(line: 2929, column: 87, scope: !7917)
!7929 = !DILocation(line: 2929, column: 92, scope: !7917)
!7930 = !DILocation(line: 2929, column: 8, scope: !7883)
!7931 = !DILocalVariable(name: "imf", scope: !7932, file: !3, line: 2930, type: !7933)
!7932 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 2929, column: 119)
!7933 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageFormatData", file: !6, line: 292, baseType: !2567)
!7934 = !DILocation(line: 2930, column: 21, scope: !7932)
!7935 = !DILocation(line: 2930, column: 27, scope: !7932)
!7936 = !DILocation(line: 2930, column: 34, scope: !7932)
!7937 = !DILocation(line: 2930, column: 36, scope: !7932)
!7938 = !DILocation(line: 2931, column: 9, scope: !7932)
!7939 = !DILocation(line: 2931, column: 16, scope: !7932)
!7940 = !DILocation(line: 2933, column: 26, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 2933, column: 9)
!7942 = !DILocation(line: 2933, column: 9, scope: !7941)
!7943 = !DILocation(line: 2933, column: 9, scope: !7932)
!7944 = !DILocation(line: 2934, column: 18, scope: !7941)
!7945 = !DILocation(line: 2934, column: 11, scope: !7941)
!7946 = !DILocation(line: 2934, column: 24, scope: !7941)
!7947 = !DILocation(line: 2934, column: 6, scope: !7941)
!7948 = !DILocation(line: 2934, column: 29, scope: !7941)
!7949 = !DILocation(line: 2935, column: 29, scope: !7932)
!7950 = !DILocation(line: 2935, column: 5, scope: !7932)
!7951 = !DILocation(line: 2936, column: 5, scope: !7932)
!7952 = !DILocation(line: 2936, column: 11, scope: !7932)
!7953 = !DILocation(line: 2936, column: 18, scope: !7932)
!7954 = !DILocation(line: 2938, column: 41, scope: !7932)
!7955 = !DILocation(line: 2938, column: 61, scope: !7932)
!7956 = !DILocation(line: 2938, column: 68, scope: !7932)
!7957 = !DILocation(line: 2939, column: 42, scope: !7932)
!7958 = !DILocation(line: 2939, column: 49, scope: !7932)
!7959 = !DILocation(line: 2938, column: 5, scope: !7932)
!7960 = !DILocation(line: 2941, column: 27, scope: !7932)
!7961 = !DILocation(line: 2941, column: 34, scope: !7932)
!7962 = !DILocation(line: 2941, column: 42, scope: !7932)
!7963 = !DILocation(line: 2941, column: 48, scope: !7932)
!7964 = !DILocation(line: 2941, column: 5, scope: !7932)
!7965 = !DILocation(line: 2942, column: 27, scope: !7932)
!7966 = !DILocation(line: 2942, column: 5, scope: !7932)
!7967 = !DILocation(line: 2943, column: 4, scope: !7932)
!7968 = !DILocation(line: 2946, column: 18, scope: !7883)
!7969 = !DILocation(line: 2946, column: 4, scope: !7883)
!7970 = !DILocation(line: 2950, column: 24, scope: !7687)
!7971 = !DILocation(line: 2950, column: 2, scope: !7687)
!7972 = !DILocation(line: 2952, column: 16, scope: !7687)
!7973 = !DILocation(line: 2952, column: 20, scope: !7687)
!7974 = !DILocation(line: 2952, column: 22, scope: !7687)
!7975 = !DILocation(line: 2952, column: 14, scope: !7687)
!7976 = !DILocation(line: 2953, column: 24, scope: !7687)
!7977 = !DILocation(line: 2953, column: 52, scope: !7687)
!7978 = !DILocation(line: 2953, column: 56, scope: !7687)
!7979 = !DILocation(line: 2953, column: 58, scope: !7687)
!7980 = !DILocation(line: 2953, column: 50, scope: !7687)
!7981 = !DILocation(line: 2953, column: 2, scope: !7687)
!7982 = !DILocation(line: 2953, column: 6, scope: !7687)
!7983 = !DILocation(line: 2953, column: 8, scope: !7687)
!7984 = !DILocation(line: 2953, column: 22, scope: !7687)
!7985 = !DILocation(line: 2955, column: 14, scope: !7687)
!7986 = !DILocation(line: 2955, column: 18, scope: !7687)
!7987 = !DILocation(line: 2955, column: 20, scope: !7687)
!7988 = !DILocation(line: 2955, column: 35, scope: !7687)
!7989 = !DILocation(line: 2955, column: 2, scope: !7687)
!7990 = !DILocation(line: 2956, column: 22, scope: !7687)
!7991 = !DILocation(line: 2956, column: 2, scope: !7687)
!7992 = !DILocation(line: 2958, column: 22, scope: !7687)
!7993 = !DILocation(line: 2958, column: 2, scope: !7687)
!7994 = !DILocation(line: 2960, column: 14, scope: !7687)
!7995 = !DILocation(line: 2960, column: 18, scope: !7687)
!7996 = !DILocation(line: 2960, column: 20, scope: !7687)
!7997 = !DILocation(line: 2960, column: 36, scope: !7687)
!7998 = !DILocation(line: 2960, column: 34, scope: !7687)
!7999 = !DILocation(line: 2960, column: 49, scope: !7687)
!8000 = !DILocation(line: 2960, column: 2, scope: !7687)
!8001 = !DILocation(line: 2961, column: 28, scope: !7687)
!8002 = !DILocation(line: 2961, column: 2, scope: !7687)
!8003 = !DILocation(line: 2963, column: 14, scope: !7687)
!8004 = !DILocation(line: 2963, column: 2, scope: !7687)
!8005 = !DILocation(line: 2964, column: 9, scope: !7687)
!8006 = !DILocation(line: 2964, column: 2, scope: !7687)
!8007 = !DILocation(line: 2966, column: 9, scope: !7687)
!8008 = !DILocation(line: 2966, column: 2, scope: !7687)
!8009 = distinct !DISubprogram(name: "RE_BlenderAnim", scope: !3, file: !3, line: 2970, type: !8010, scopeLine: 2972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!8010 = !DISubroutineType(types: !8011)
!8011 = !{null, !3576, !6098, !217, !3465, !43, !7, !7, !7}
!8012 = !DILocalVariable(name: "re", arg: 1, scope: !8009, file: !3, line: 2970, type: !3576)
!8013 = !DILocation(line: 2970, column: 29, scope: !8009)
!8014 = !DILocalVariable(name: "bmain", arg: 2, scope: !8009, file: !3, line: 2970, type: !6098)
!8015 = !DILocation(line: 2970, column: 39, scope: !8009)
!8016 = !DILocalVariable(name: "scene", arg: 3, scope: !8009, file: !3, line: 2970, type: !217)
!8017 = !DILocation(line: 2970, column: 53, scope: !8009)
!8018 = !DILocalVariable(name: "camera_override", arg: 4, scope: !8009, file: !3, line: 2970, type: !3465)
!8019 = !DILocation(line: 2970, column: 68, scope: !8009)
!8020 = !DILocalVariable(name: "lay_override", arg: 5, scope: !8009, file: !3, line: 2971, type: !43)
!8021 = !DILocation(line: 2971, column: 34, scope: !8009)
!8022 = !DILocalVariable(name: "sfra", arg: 6, scope: !8009, file: !3, line: 2971, type: !7)
!8023 = !DILocation(line: 2971, column: 52, scope: !8009)
!8024 = !DILocalVariable(name: "efra", arg: 7, scope: !8009, file: !3, line: 2971, type: !7)
!8025 = !DILocation(line: 2971, column: 62, scope: !8009)
!8026 = !DILocalVariable(name: "tfra", arg: 8, scope: !8009, file: !3, line: 2971, type: !7)
!8027 = !DILocation(line: 2971, column: 72, scope: !8009)
!8028 = !DILocalVariable(name: "rd", scope: !8009, file: !3, line: 2973, type: !3127)
!8029 = !DILocation(line: 2973, column: 13, scope: !8009)
!8030 = !DILocation(line: 2973, column: 18, scope: !8009)
!8031 = !DILocation(line: 2973, column: 25, scope: !8009)
!8032 = !DILocalVariable(name: "mh", scope: !8009, file: !3, line: 2974, type: !7690)
!8033 = !DILocation(line: 2974, column: 16, scope: !8009)
!8034 = !DILocation(line: 2974, column: 42, scope: !8009)
!8035 = !DILocation(line: 2974, column: 49, scope: !8009)
!8036 = !DILocation(line: 2974, column: 51, scope: !8009)
!8037 = !DILocation(line: 2974, column: 61, scope: !8009)
!8038 = !DILocation(line: 2974, column: 21, scope: !8009)
!8039 = !DILocalVariable(name: "cfrao", scope: !8009, file: !3, line: 2975, type: !7)
!8040 = !DILocation(line: 2975, column: 6, scope: !8009)
!8041 = !DILocation(line: 2975, column: 14, scope: !8009)
!8042 = !DILocation(line: 2975, column: 21, scope: !8009)
!8043 = !DILocation(line: 2975, column: 23, scope: !8009)
!8044 = !DILocalVariable(name: "nfra", scope: !8009, file: !3, line: 2976, type: !7)
!8045 = !DILocation(line: 2976, column: 6, scope: !8009)
!8046 = !DILocalVariable(name: "totrendered", scope: !8009, file: !3, line: 2976, type: !7)
!8047 = !DILocation(line: 2976, column: 12, scope: !8009)
!8048 = !DILocalVariable(name: "totskipped", scope: !8009, file: !3, line: 2976, type: !7)
!8049 = !DILocation(line: 2976, column: 29, scope: !8009)
!8050 = !DILocation(line: 2978, column: 20, scope: !8009)
!8051 = !DILocation(line: 2978, column: 24, scope: !8009)
!8052 = !DILocation(line: 2978, column: 36, scope: !8009)
!8053 = !DILocation(line: 2978, column: 30, scope: !8009)
!8054 = !DILocation(line: 2978, column: 2, scope: !8009)
!8055 = !DILocation(line: 2981, column: 35, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 2981, column: 6)
!8057 = !DILocation(line: 2981, column: 44, scope: !8056)
!8058 = !DILocation(line: 2981, column: 51, scope: !8056)
!8059 = !DILocation(line: 2981, column: 64, scope: !8056)
!8060 = !DILocation(line: 2981, column: 81, scope: !8056)
!8061 = !DILocation(line: 2981, column: 7, scope: !8056)
!8062 = !DILocation(line: 2981, column: 6, scope: !8009)
!8063 = !DILocation(line: 2982, column: 3, scope: !8056)
!8064 = !DILocation(line: 2986, column: 17, scope: !8009)
!8065 = !DILocation(line: 2988, column: 2, scope: !8009)
!8066 = !DILocation(line: 2988, column: 6, scope: !8009)
!8067 = !DILocation(line: 2988, column: 11, scope: !8009)
!8068 = !DILocation(line: 2990, column: 26, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 2990, column: 6)
!8070 = !DILocation(line: 2990, column: 33, scope: !8069)
!8071 = !DILocation(line: 2990, column: 35, scope: !8069)
!8072 = !DILocation(line: 2990, column: 45, scope: !8069)
!8073 = !DILocation(line: 2990, column: 6, scope: !8069)
!8074 = !DILocation(line: 2990, column: 6, scope: !8009)
!8075 = !DILocalVariable(name: "width", scope: !8076, file: !3, line: 2991, type: !7)
!8076 = distinct !DILexicalBlock(scope: !8069, file: !3, line: 2990, column: 54)
!8077 = !DILocation(line: 2991, column: 7, scope: !8076)
!8078 = !DILocalVariable(name: "height", scope: !8076, file: !3, line: 2991, type: !7)
!8079 = !DILocation(line: 2991, column: 14, scope: !8076)
!8080 = !DILocation(line: 2992, column: 7, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 2992, column: 7)
!8082 = !DILocation(line: 2992, column: 11, scope: !8081)
!8083 = !DILocation(line: 2992, column: 13, scope: !8081)
!8084 = !DILocation(line: 2992, column: 18, scope: !8081)
!8085 = !DILocation(line: 2992, column: 7, scope: !8076)
!8086 = !DILocation(line: 2993, column: 9, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 2993, column: 8)
!8088 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 2992, column: 30)
!8089 = !DILocation(line: 2993, column: 13, scope: !8087)
!8090 = !DILocation(line: 2993, column: 15, scope: !8087)
!8091 = !DILocation(line: 2993, column: 20, scope: !8087)
!8092 = !DILocation(line: 2993, column: 30, scope: !8087)
!8093 = !DILocation(line: 2993, column: 8, scope: !8088)
!8094 = !DILocation(line: 2994, column: 13, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 2993, column: 36)
!8096 = !DILocation(line: 2994, column: 17, scope: !8095)
!8097 = !DILocation(line: 2994, column: 11, scope: !8095)
!8098 = !DILocation(line: 2995, column: 14, scope: !8095)
!8099 = !DILocation(line: 2995, column: 18, scope: !8095)
!8100 = !DILocation(line: 2995, column: 12, scope: !8095)
!8101 = !DILocation(line: 2996, column: 4, scope: !8095)
!8102 = !DILocation(line: 2998, column: 13, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 2997, column: 9)
!8104 = !DILocation(line: 2998, column: 17, scope: !8103)
!8105 = !DILocation(line: 2998, column: 11, scope: !8103)
!8106 = !DILocation(line: 2999, column: 14, scope: !8103)
!8107 = !DILocation(line: 2999, column: 18, scope: !8103)
!8108 = !DILocation(line: 2999, column: 12, scope: !8103)
!8109 = !DILocation(line: 3001, column: 3, scope: !8088)
!8110 = !DILocation(line: 3003, column: 12, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 3002, column: 8)
!8112 = !DILocation(line: 3003, column: 16, scope: !8111)
!8113 = !DILocation(line: 3003, column: 10, scope: !8111)
!8114 = !DILocation(line: 3004, column: 13, scope: !8111)
!8115 = !DILocation(line: 3004, column: 17, scope: !8111)
!8116 = !DILocation(line: 3004, column: 11, scope: !8111)
!8117 = !DILocation(line: 3007, column: 8, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 3007, column: 7)
!8119 = !DILocation(line: 3007, column: 12, scope: !8118)
!8120 = !DILocation(line: 3007, column: 24, scope: !8118)
!8121 = !DILocation(line: 3007, column: 32, scope: !8118)
!8122 = !DILocation(line: 3007, column: 36, scope: !8118)
!8123 = !DILocation(line: 3007, column: 39, scope: !8118)
!8124 = !DILocation(line: 3007, column: 46, scope: !8118)
!8125 = !DILocation(line: 3007, column: 54, scope: !8118)
!8126 = !DILocation(line: 3007, column: 58, scope: !8118)
!8127 = !DILocation(line: 3007, column: 7, scope: !8076)
!8128 = !DILocation(line: 3008, column: 15, scope: !8118)
!8129 = !DILocation(line: 3008, column: 4, scope: !8118)
!8130 = !DILocation(line: 3009, column: 2, scope: !8076)
!8131 = !DILocation(line: 3011, column: 6, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 3011, column: 6)
!8133 = !DILocation(line: 3011, column: 10, scope: !8132)
!8134 = !DILocation(line: 3011, column: 6, scope: !8009)
!8135 = !DILocation(line: 3012, column: 3, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 3011, column: 26)
!8137 = !DILocation(line: 3012, column: 14, scope: !8136)
!8138 = !DILocation(line: 3012, column: 12, scope: !8136)
!8139 = !DILocation(line: 3012, column: 23, scope: !8136)
!8140 = !DILocation(line: 3012, column: 10, scope: !8136)
!8141 = !DILocalVariable(name: "nf", scope: !8142, file: !3, line: 3013, type: !7)
!8142 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 3012, column: 30)
!8143 = !DILocation(line: 3013, column: 8, scope: !8142)
!8144 = !DILocation(line: 3013, column: 13, scope: !8142)
!8145 = !DILocation(line: 3013, column: 17, scope: !8142)
!8146 = !DILocation(line: 3013, column: 33, scope: !8142)
!8147 = !DILocation(line: 3013, column: 37, scope: !8142)
!8148 = !DILocation(line: 3013, column: 40, scope: !8142)
!8149 = !DILocation(line: 3013, column: 44, scope: !8142)
!8150 = !DILocation(line: 3014, column: 8, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 3014, column: 8)
!8152 = !DILocation(line: 3014, column: 11, scope: !8151)
!8153 = !DILocation(line: 3014, column: 16, scope: !8151)
!8154 = !DILocation(line: 3014, column: 19, scope: !8151)
!8155 = !DILocation(line: 3014, column: 25, scope: !8151)
!8156 = !DILocation(line: 3014, column: 32, scope: !8151)
!8157 = !DILocation(line: 3014, column: 34, scope: !8151)
!8158 = !DILocation(line: 3014, column: 22, scope: !8151)
!8159 = !DILocation(line: 3014, column: 39, scope: !8151)
!8160 = !DILocation(line: 3014, column: 42, scope: !8151)
!8161 = !DILocation(line: 3014, column: 48, scope: !8151)
!8162 = !DILocation(line: 3014, column: 55, scope: !8151)
!8163 = !DILocation(line: 3014, column: 57, scope: !8151)
!8164 = !DILocation(line: 3014, column: 45, scope: !8151)
!8165 = !DILocation(line: 3014, column: 8, scope: !8142)
!8166 = !DILocation(line: 3015, column: 34, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 3014, column: 63)
!8168 = !DILocation(line: 3015, column: 21, scope: !8167)
!8169 = !DILocation(line: 3015, column: 25, scope: !8167)
!8170 = !DILocation(line: 3015, column: 27, scope: !8167)
!8171 = !DILocation(line: 3015, column: 32, scope: !8167)
!8172 = !DILocation(line: 3015, column: 5, scope: !8167)
!8173 = !DILocation(line: 3015, column: 12, scope: !8167)
!8174 = !DILocation(line: 3015, column: 14, scope: !8167)
!8175 = !DILocation(line: 3015, column: 19, scope: !8167)
!8176 = !DILocation(line: 3017, column: 23, scope: !8167)
!8177 = !DILocation(line: 3017, column: 27, scope: !8167)
!8178 = !DILocation(line: 3017, column: 39, scope: !8167)
!8179 = !DILocation(line: 3017, column: 33, scope: !8167)
!8180 = !DILocation(line: 3017, column: 5, scope: !8167)
!8181 = !DILocation(line: 3019, column: 27, scope: !8167)
!8182 = !DILocation(line: 3019, column: 5, scope: !8167)
!8183 = !DILocation(line: 3020, column: 16, scope: !8167)
!8184 = !DILocation(line: 3022, column: 9, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8167, file: !3, line: 3022, column: 9)
!8186 = !DILocation(line: 3022, column: 13, scope: !8185)
!8187 = !DILocation(line: 3022, column: 24, scope: !8185)
!8188 = !DILocation(line: 3022, column: 28, scope: !8185)
!8189 = !DILocation(line: 3022, column: 33, scope: !8185)
!8190 = !DILocation(line: 3022, column: 9, scope: !8167)
!8191 = !DILocation(line: 3023, column: 35, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8193, file: !3, line: 3023, column: 10)
!8193 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 3022, column: 39)
!8194 = !DILocation(line: 3023, column: 39, scope: !8192)
!8195 = !DILocation(line: 3023, column: 46, scope: !8192)
!8196 = !DILocation(line: 3023, column: 53, scope: !8192)
!8197 = !DILocation(line: 3023, column: 11, scope: !8192)
!8198 = !DILocation(line: 3023, column: 10, scope: !8193)
!8199 = !DILocation(line: 3024, column: 18, scope: !8192)
!8200 = !DILocation(line: 3024, column: 7, scope: !8192)
!8201 = !DILocation(line: 3025, column: 5, scope: !8193)
!8202 = !DILocation(line: 3027, column: 11, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8167, file: !3, line: 3027, column: 9)
!8204 = !DILocation(line: 3027, column: 9, scope: !8203)
!8205 = !DILocation(line: 3027, column: 20, scope: !8203)
!8206 = !DILocation(line: 3027, column: 9, scope: !8167)
!8207 = !DILocation(line: 3028, column: 24, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 3027, column: 30)
!8209 = !DILocation(line: 3028, column: 28, scope: !8208)
!8210 = !DILocation(line: 3028, column: 40, scope: !8208)
!8211 = !DILocation(line: 3028, column: 34, scope: !8208)
!8212 = !DILocation(line: 3028, column: 6, scope: !8208)
!8213 = !DILocation(line: 3029, column: 5, scope: !8208)
!8214 = !DILocation(line: 3030, column: 4, scope: !8167)
!8215 = !DILocation(line: 3032, column: 9, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 3032, column: 9)
!8217 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 3031, column: 9)
!8218 = !DILocation(line: 3032, column: 13, scope: !8216)
!8219 = !DILocation(line: 3032, column: 24, scope: !8216)
!8220 = !DILocation(line: 3032, column: 28, scope: !8216)
!8221 = !DILocation(line: 3032, column: 9, scope: !8217)
!8222 = !DILocation(line: 3033, column: 17, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 3032, column: 34)
!8224 = !DILocation(line: 3034, column: 5, scope: !8223)
!8225 = distinct !{!8225, !8135, !8226}
!8226 = !DILocation(line: 3036, column: 3, scope: !8136)
!8227 = !DILocation(line: 3037, column: 2, scope: !8136)
!8228 = !DILocation(line: 3039, column: 15, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 3039, column: 3)
!8230 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 3038, column: 7)
!8231 = !DILocation(line: 3039, column: 13, scope: !8229)
!8232 = !DILocation(line: 3039, column: 37, scope: !8229)
!8233 = !DILocation(line: 3039, column: 21, scope: !8229)
!8234 = !DILocation(line: 3039, column: 28, scope: !8229)
!8235 = !DILocation(line: 3039, column: 30, scope: !8229)
!8236 = !DILocation(line: 3039, column: 35, scope: !8229)
!8237 = !DILocation(line: 3039, column: 8, scope: !8229)
!8238 = !DILocation(line: 3039, column: 43, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8229, file: !3, line: 3039, column: 3)
!8240 = !DILocation(line: 3039, column: 50, scope: !8239)
!8241 = !DILocation(line: 3039, column: 52, scope: !8239)
!8242 = !DILocation(line: 3039, column: 60, scope: !8239)
!8243 = !DILocation(line: 3039, column: 57, scope: !8239)
!8244 = !DILocation(line: 3039, column: 3, scope: !8229)
!8245 = !DILocalVariable(name: "name", scope: !8246, file: !3, line: 3040, type: !241)
!8246 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 3039, column: 83)
!8247 = !DILocation(line: 3040, column: 9, scope: !8246)
!8248 = !DILocation(line: 3043, column: 32, scope: !8246)
!8249 = !DILocation(line: 3043, column: 41, scope: !8246)
!8250 = !DILocation(line: 3043, column: 48, scope: !8246)
!8251 = !DILocation(line: 3043, column: 61, scope: !8246)
!8252 = !DILocation(line: 3043, column: 78, scope: !8246)
!8253 = !DILocation(line: 3043, column: 4, scope: !8246)
!8254 = !DILocation(line: 3045, column: 8, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 3045, column: 8)
!8256 = !DILocation(line: 3045, column: 16, scope: !8255)
!8257 = !DILocation(line: 3045, column: 23, scope: !8255)
!8258 = !DILocation(line: 3045, column: 25, scope: !8255)
!8259 = !DILocation(line: 3045, column: 13, scope: !8255)
!8260 = !DILocation(line: 3045, column: 8, scope: !8246)
!8261 = !DILocalVariable(name: "updatelay", scope: !8262, file: !3, line: 3051, type: !43)
!8262 = distinct !DILexicalBlock(scope: !8255, file: !3, line: 3045, column: 31)
!8263 = !DILocation(line: 3051, column: 18, scope: !8262)
!8264 = !DILocation(line: 3053, column: 9, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8262, file: !3, line: 3053, column: 9)
!8266 = !DILocation(line: 3053, column: 13, scope: !8265)
!8267 = !DILocation(line: 3053, column: 17, scope: !8265)
!8268 = !DILocation(line: 3053, column: 9, scope: !8262)
!8269 = !DILocation(line: 3054, column: 18, scope: !8265)
!8270 = !DILocation(line: 3054, column: 22, scope: !8265)
!8271 = !DILocation(line: 3054, column: 26, scope: !8265)
!8272 = !DILocation(line: 3054, column: 16, scope: !8265)
!8273 = !DILocation(line: 3054, column: 6, scope: !8265)
!8274 = !DILocation(line: 3056, column: 18, scope: !8265)
!8275 = !DILocation(line: 3056, column: 22, scope: !8265)
!8276 = !DILocation(line: 3056, column: 16, scope: !8265)
!8277 = !DILocation(line: 3058, column: 35, scope: !8262)
!8278 = !DILocation(line: 3058, column: 39, scope: !8262)
!8279 = !DILocation(line: 3058, column: 49, scope: !8262)
!8280 = !DILocation(line: 3058, column: 56, scope: !8262)
!8281 = !DILocation(line: 3058, column: 63, scope: !8262)
!8282 = !DILocation(line: 3058, column: 5, scope: !8262)
!8283 = !DILocation(line: 3059, column: 5, scope: !8262)
!8284 = !DILocation(line: 3062, column: 13, scope: !8255)
!8285 = !DILocation(line: 3062, column: 10, scope: !8255)
!8286 = !DILocation(line: 3065, column: 28, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 3065, column: 8)
!8288 = !DILocation(line: 3065, column: 35, scope: !8287)
!8289 = !DILocation(line: 3065, column: 37, scope: !8287)
!8290 = !DILocation(line: 3065, column: 47, scope: !8287)
!8291 = !DILocation(line: 3065, column: 8, scope: !8287)
!8292 = !DILocation(line: 3065, column: 55, scope: !8287)
!8293 = !DILocation(line: 3065, column: 8, scope: !8246)
!8294 = !DILocation(line: 3066, column: 9, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 3066, column: 9)
!8296 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 3065, column: 61)
!8297 = !DILocation(line: 3066, column: 16, scope: !8295)
!8298 = !DILocation(line: 3066, column: 18, scope: !8295)
!8299 = !DILocation(line: 3066, column: 23, scope: !8295)
!8300 = !DILocation(line: 3066, column: 9, scope: !8296)
!8301 = !DILocation(line: 3067, column: 24, scope: !8295)
!8302 = !DILocation(line: 3067, column: 30, scope: !8295)
!8303 = !DILocation(line: 3067, column: 37, scope: !8295)
!8304 = !DILocation(line: 3067, column: 39, scope: !8295)
!8305 = !DILocation(line: 3067, column: 44, scope: !8295)
!8306 = !DILocation(line: 3067, column: 51, scope: !8295)
!8307 = !DILocation(line: 3067, column: 57, scope: !8295)
!8308 = !DILocation(line: 3067, column: 64, scope: !8295)
!8309 = !DILocation(line: 3067, column: 66, scope: !8295)
!8310 = !DILocation(line: 3068, column: 25, scope: !8295)
!8311 = !DILocation(line: 3068, column: 32, scope: !8295)
!8312 = !DILocation(line: 3068, column: 34, scope: !8295)
!8313 = !DILocation(line: 3068, column: 46, scope: !8295)
!8314 = !DILocation(line: 3068, column: 53, scope: !8295)
!8315 = !DILocation(line: 3068, column: 55, scope: !8295)
!8316 = !DILocation(line: 3068, column: 63, scope: !8295)
!8317 = !DILocation(line: 3068, column: 78, scope: !8295)
!8318 = !DILocation(line: 3068, column: 45, scope: !8295)
!8319 = !DILocation(line: 3067, column: 6, scope: !8295)
!8320 = !DILocation(line: 3070, column: 9, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 3070, column: 9)
!8322 = !DILocation(line: 3070, column: 16, scope: !8321)
!8323 = !DILocation(line: 3070, column: 18, scope: !8321)
!8324 = !DILocation(line: 3070, column: 23, scope: !8321)
!8325 = !DILocation(line: 3070, column: 40, scope: !8321)
!8326 = !DILocation(line: 3070, column: 54, scope: !8321)
!8327 = !DILocation(line: 3070, column: 43, scope: !8321)
!8328 = !DILocation(line: 3070, column: 9, scope: !8296)
!8329 = !DILocation(line: 3071, column: 49, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 3070, column: 61)
!8331 = !DILocation(line: 3071, column: 6, scope: !8330)
!8332 = !DILocation(line: 3072, column: 16, scope: !8330)
!8333 = !DILocation(line: 3073, column: 6, scope: !8330)
!8334 = !DILocation(line: 3075, column: 9, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 3075, column: 9)
!8336 = !DILocation(line: 3075, column: 16, scope: !8335)
!8337 = !DILocation(line: 3075, column: 18, scope: !8335)
!8338 = !DILocation(line: 3075, column: 23, scope: !8335)
!8339 = !DILocation(line: 3075, column: 33, scope: !8335)
!8340 = !DILocation(line: 3075, column: 48, scope: !8335)
!8341 = !DILocation(line: 3075, column: 37, scope: !8335)
!8342 = !DILocation(line: 3075, column: 9, scope: !8296)
!8343 = !DILocation(line: 3076, column: 29, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 3075, column: 55)
!8345 = !DILocation(line: 3076, column: 6, scope: !8344)
!8346 = !DILocation(line: 3077, column: 21, scope: !8344)
!8347 = !DILocation(line: 3077, column: 6, scope: !8344)
!8348 = !DILocation(line: 3078, column: 5, scope: !8344)
!8349 = !DILocation(line: 3079, column: 4, scope: !8296)
!8350 = !DILocation(line: 3081, column: 17, scope: !8246)
!8351 = !DILocation(line: 3081, column: 24, scope: !8246)
!8352 = !DILocation(line: 3081, column: 26, scope: !8246)
!8353 = !DILocation(line: 3081, column: 4, scope: !8246)
!8354 = !DILocation(line: 3081, column: 8, scope: !8246)
!8355 = !DILocation(line: 3081, column: 10, scope: !8246)
!8356 = !DILocation(line: 3081, column: 15, scope: !8246)
!8357 = !DILocation(line: 3084, column: 22, scope: !8246)
!8358 = !DILocation(line: 3084, column: 26, scope: !8246)
!8359 = !DILocation(line: 3084, column: 38, scope: !8246)
!8360 = !DILocation(line: 3084, column: 32, scope: !8246)
!8361 = !DILocation(line: 3084, column: 4, scope: !8246)
!8362 = !DILocation(line: 3087, column: 26, scope: !8246)
!8363 = !DILocation(line: 3087, column: 4, scope: !8246)
!8364 = !DILocation(line: 3088, column: 15, scope: !8246)
!8365 = !DILocation(line: 3090, column: 8, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 3090, column: 8)
!8367 = !DILocation(line: 3090, column: 12, scope: !8366)
!8368 = !DILocation(line: 3090, column: 23, scope: !8366)
!8369 = !DILocation(line: 3090, column: 27, scope: !8366)
!8370 = !DILocation(line: 3090, column: 32, scope: !8366)
!8371 = !DILocation(line: 3090, column: 8, scope: !8246)
!8372 = !DILocation(line: 3091, column: 12, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 3091, column: 9)
!8374 = distinct !DILexicalBlock(scope: !8366, file: !3, line: 3090, column: 38)
!8375 = !DILocation(line: 3091, column: 10, scope: !8373)
!8376 = !DILocation(line: 3091, column: 9, scope: !8374)
!8377 = !DILocation(line: 3092, column: 35, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 3092, column: 10)
!8379 = !DILocation(line: 3092, column: 39, scope: !8378)
!8380 = !DILocation(line: 3092, column: 46, scope: !8378)
!8381 = !DILocation(line: 3092, column: 53, scope: !8378)
!8382 = !DILocation(line: 3092, column: 11, scope: !8378)
!8383 = !DILocation(line: 3092, column: 10, scope: !8373)
!8384 = !DILocation(line: 3093, column: 18, scope: !8378)
!8385 = !DILocation(line: 3093, column: 7, scope: !8378)
!8386 = !DILocation(line: 3092, column: 61, scope: !8378)
!8387 = !DILocation(line: 3094, column: 4, scope: !8374)
!8388 = !DILocation(line: 3096, column: 16, scope: !8366)
!8389 = !DILocation(line: 3098, column: 10, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 3098, column: 8)
!8391 = !DILocation(line: 3098, column: 8, scope: !8390)
!8392 = !DILocation(line: 3098, column: 19, scope: !8390)
!8393 = !DILocation(line: 3098, column: 8, scope: !8246)
!8394 = !DILocation(line: 3100, column: 29, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !3, line: 3100, column: 9)
!8396 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 3098, column: 28)
!8397 = !DILocation(line: 3100, column: 36, scope: !8395)
!8398 = !DILocation(line: 3100, column: 38, scope: !8395)
!8399 = !DILocation(line: 3100, column: 48, scope: !8395)
!8400 = !DILocation(line: 3100, column: 9, scope: !8395)
!8401 = !DILocation(line: 3100, column: 56, scope: !8395)
!8402 = !DILocation(line: 3100, column: 9, scope: !8396)
!8403 = !DILocation(line: 3101, column: 11, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !3, line: 3101, column: 10)
!8405 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 3100, column: 62)
!8406 = !DILocation(line: 3101, column: 18, scope: !8404)
!8407 = !DILocation(line: 3101, column: 20, scope: !8404)
!8408 = !DILocation(line: 3101, column: 25, scope: !8404)
!8409 = !DILocation(line: 3101, column: 36, scope: !8404)
!8410 = !DILocation(line: 3101, column: 54, scope: !8404)
!8411 = !DILocation(line: 3101, column: 40, scope: !8404)
!8412 = !DILocation(line: 3101, column: 60, scope: !8404)
!8413 = !DILocation(line: 3101, column: 10, scope: !8405)
!8414 = !DILocation(line: 3103, column: 18, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 3101, column: 67)
!8416 = !DILocation(line: 3103, column: 7, scope: !8415)
!8417 = !DILocation(line: 3104, column: 6, scope: !8415)
!8418 = !DILocation(line: 3105, column: 5, scope: !8405)
!8419 = !DILocation(line: 3107, column: 5, scope: !8396)
!8420 = !DILocation(line: 3110, column: 10, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 3110, column: 8)
!8422 = !DILocation(line: 3110, column: 8, scope: !8421)
!8423 = !DILocation(line: 3110, column: 19, scope: !8421)
!8424 = !DILocation(line: 3110, column: 8, scope: !8246)
!8425 = !DILocation(line: 3111, column: 23, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 3110, column: 29)
!8427 = !DILocation(line: 3111, column: 27, scope: !8426)
!8428 = !DILocation(line: 3111, column: 39, scope: !8426)
!8429 = !DILocation(line: 3111, column: 33, scope: !8426)
!8430 = !DILocation(line: 3111, column: 5, scope: !8426)
!8431 = !DILocation(line: 3112, column: 4, scope: !8426)
!8432 = !DILocation(line: 3113, column: 3, scope: !8246)
!8433 = !DILocation(line: 3039, column: 66, scope: !8239)
!8434 = !DILocation(line: 3039, column: 73, scope: !8239)
!8435 = !DILocation(line: 3039, column: 75, scope: !8239)
!8436 = !DILocation(line: 3039, column: 79, scope: !8239)
!8437 = !DILocation(line: 3039, column: 3, scope: !8239)
!8438 = distinct !{!8438, !8244, !8439}
!8439 = !DILocation(line: 3113, column: 3, scope: !8229)
!8440 = !DILocation(line: 3117, column: 26, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 3117, column: 6)
!8442 = !DILocation(line: 3117, column: 33, scope: !8441)
!8443 = !DILocation(line: 3117, column: 35, scope: !8441)
!8444 = !DILocation(line: 3117, column: 45, scope: !8441)
!8445 = !DILocation(line: 3117, column: 6, scope: !8441)
!8446 = !DILocation(line: 3117, column: 6, scope: !8009)
!8447 = !DILocation(line: 3118, column: 3, scope: !8441)
!8448 = !DILocation(line: 3118, column: 7, scope: !8441)
!8449 = !DILocation(line: 3120, column: 6, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 3120, column: 6)
!8451 = !DILocation(line: 3120, column: 17, scope: !8450)
!8452 = !DILocation(line: 3120, column: 20, scope: !8450)
!8453 = !DILocation(line: 3120, column: 32, scope: !8450)
!8454 = !DILocation(line: 3120, column: 6, scope: !8009)
!8455 = !DILocation(line: 3121, column: 14, scope: !8450)
!8456 = !DILocation(line: 3121, column: 18, scope: !8450)
!8457 = !DILocation(line: 3121, column: 3, scope: !8450)
!8458 = !DILocation(line: 3123, column: 18, scope: !8009)
!8459 = !DILocation(line: 3123, column: 2, scope: !8009)
!8460 = !DILocation(line: 3123, column: 9, scope: !8009)
!8461 = !DILocation(line: 3123, column: 11, scope: !8009)
!8462 = !DILocation(line: 3123, column: 16, scope: !8009)
!8463 = !DILocation(line: 3125, column: 2, scope: !8009)
!8464 = !DILocation(line: 3125, column: 6, scope: !8009)
!8465 = !DILocation(line: 3125, column: 11, scope: !8009)
!8466 = !DILocation(line: 3127, column: 20, scope: !8009)
!8467 = !DILocation(line: 3127, column: 24, scope: !8009)
!8468 = !DILocation(line: 3127, column: 36, scope: !8009)
!8469 = !DILocation(line: 3127, column: 30, scope: !8009)
!8470 = !DILocation(line: 3127, column: 45, scope: !8009)
!8471 = !DILocation(line: 3127, column: 43, scope: !8009)
!8472 = !DILocation(line: 3127, column: 2, scope: !8009)
!8473 = !DILocation(line: 3130, column: 17, scope: !8009)
!8474 = !DILocation(line: 3131, column: 1, scope: !8009)
!8475 = distinct !DISubprogram(name: "RE_PreviewRender", scope: !3, file: !3, line: 3133, type: !8476, scopeLine: 3134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!8476 = !DISubroutineType(types: !8477)
!8477 = !{null, !3576, !6098, !217}
!8478 = !DILocalVariable(name: "re", arg: 1, scope: !8475, file: !3, line: 3133, type: !3576)
!8479 = !DILocation(line: 3133, column: 31, scope: !8475)
!8480 = !DILocalVariable(name: "bmain", arg: 2, scope: !8475, file: !3, line: 3133, type: !6098)
!8481 = !DILocation(line: 3133, column: 41, scope: !8475)
!8482 = !DILocalVariable(name: "sce", arg: 3, scope: !8475, file: !3, line: 3133, type: !217)
!8483 = !DILocation(line: 3133, column: 55, scope: !8475)
!8484 = !DILocalVariable(name: "camera", scope: !8475, file: !3, line: 3135, type: !3465)
!8485 = !DILocation(line: 3135, column: 10, scope: !8475)
!8486 = !DILocalVariable(name: "winx", scope: !8475, file: !3, line: 3136, type: !7)
!8487 = !DILocation(line: 3136, column: 6, scope: !8475)
!8488 = !DILocalVariable(name: "winy", scope: !8475, file: !3, line: 3136, type: !7)
!8489 = !DILocation(line: 3136, column: 12, scope: !8475)
!8490 = !DILocation(line: 3138, column: 10, scope: !8475)
!8491 = !DILocation(line: 3138, column: 15, scope: !8475)
!8492 = !DILocation(line: 3138, column: 17, scope: !8475)
!8493 = !DILocation(line: 3138, column: 24, scope: !8475)
!8494 = !DILocation(line: 3138, column: 29, scope: !8475)
!8495 = !DILocation(line: 3138, column: 31, scope: !8475)
!8496 = !DILocation(line: 3138, column: 22, scope: !8475)
!8497 = !DILocation(line: 3138, column: 37, scope: !8475)
!8498 = !DILocation(line: 3138, column: 7, scope: !8475)
!8499 = !DILocation(line: 3139, column: 10, scope: !8475)
!8500 = !DILocation(line: 3139, column: 15, scope: !8475)
!8501 = !DILocation(line: 3139, column: 17, scope: !8475)
!8502 = !DILocation(line: 3139, column: 24, scope: !8475)
!8503 = !DILocation(line: 3139, column: 29, scope: !8475)
!8504 = !DILocation(line: 3139, column: 31, scope: !8475)
!8505 = !DILocation(line: 3139, column: 22, scope: !8475)
!8506 = !DILocation(line: 3139, column: 37, scope: !8475)
!8507 = !DILocation(line: 3139, column: 7, scope: !8475)
!8508 = !DILocation(line: 3141, column: 15, scope: !8475)
!8509 = !DILocation(line: 3141, column: 26, scope: !8475)
!8510 = !DILocation(line: 3141, column: 31, scope: !8475)
!8511 = !DILocation(line: 3141, column: 40, scope: !8475)
!8512 = !DILocation(line: 3141, column: 46, scope: !8475)
!8513 = !DILocation(line: 3141, column: 2, scope: !8475)
!8514 = !DILocation(line: 3143, column: 13, scope: !8475)
!8515 = !DILocation(line: 3143, column: 2, scope: !8475)
!8516 = !DILocation(line: 3143, column: 6, scope: !8475)
!8517 = !DILocation(line: 3143, column: 11, scope: !8475)
!8518 = !DILocation(line: 3145, column: 13, scope: !8475)
!8519 = !DILocation(line: 3145, column: 2, scope: !8475)
!8520 = !DILocation(line: 3145, column: 6, scope: !8475)
!8521 = !DILocation(line: 3145, column: 11, scope: !8475)
!8522 = !DILocation(line: 3146, column: 14, scope: !8475)
!8523 = !DILocation(line: 3146, column: 2, scope: !8475)
!8524 = !DILocation(line: 3146, column: 6, scope: !8475)
!8525 = !DILocation(line: 3146, column: 12, scope: !8475)
!8526 = !DILocation(line: 3147, column: 68, scope: !8475)
!8527 = !DILocation(line: 3147, column: 27, scope: !8475)
!8528 = !DILocation(line: 3147, column: 2, scope: !8475)
!8529 = !DILocation(line: 3147, column: 6, scope: !8475)
!8530 = !DILocation(line: 3147, column: 25, scope: !8475)
!8531 = !DILocation(line: 3148, column: 12, scope: !8475)
!8532 = !DILocation(line: 3148, column: 17, scope: !8475)
!8533 = !DILocation(line: 3148, column: 2, scope: !8475)
!8534 = !DILocation(line: 3148, column: 6, scope: !8475)
!8535 = !DILocation(line: 3148, column: 10, scope: !8475)
!8536 = !DILocation(line: 3150, column: 24, scope: !8475)
!8537 = !DILocation(line: 3150, column: 11, scope: !8475)
!8538 = !DILocation(line: 3150, column: 9, scope: !8475)
!8539 = !DILocation(line: 3151, column: 15, scope: !8475)
!8540 = !DILocation(line: 3151, column: 19, scope: !8475)
!8541 = !DILocation(line: 3151, column: 2, scope: !8475)
!8542 = !DILocation(line: 3153, column: 15, scope: !8475)
!8543 = !DILocation(line: 3153, column: 2, scope: !8475)
!8544 = !DILocation(line: 3155, column: 22, scope: !8475)
!8545 = !DILocation(line: 3155, column: 26, scope: !8475)
!8546 = !DILocation(line: 3155, column: 2, scope: !8475)
!8547 = !DILocation(line: 3156, column: 2, scope: !8475)
!8548 = !DILocation(line: 3156, column: 6, scope: !8475)
!8549 = !DILocation(line: 3156, column: 11, scope: !8475)
!8550 = !DILocation(line: 3157, column: 1, scope: !8475)
!8551 = distinct !DISubprogram(name: "do_render_3d", scope: !3, file: !3, line: 1302, type: !3574, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!8552 = !DILocalVariable(name: "re", arg: 1, scope: !8551, file: !3, line: 1302, type: !3576)
!8553 = !DILocation(line: 1302, column: 34, scope: !8551)
!8554 = !DILocalVariable(name: "cfra_backup", scope: !8551, file: !3, line: 1304, type: !7)
!8555 = !DILocation(line: 1304, column: 6, scope: !8551)
!8556 = !DILocation(line: 1306, column: 2, scope: !8551)
!8557 = !DILocation(line: 1306, column: 6, scope: !8551)
!8558 = !DILocation(line: 1306, column: 27, scope: !8551)
!8559 = !DILocation(line: 1306, column: 31, scope: !8551)
!8560 = !DILocation(line: 1306, column: 36, scope: !8551)
!8561 = !DILocation(line: 1306, column: 40, scope: !8551)
!8562 = !DILocation(line: 1309, column: 23, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 1309, column: 6)
!8564 = !DILocation(line: 1309, column: 6, scope: !8563)
!8565 = !DILocation(line: 1309, column: 6, scope: !8551)
!8566 = !DILocation(line: 1310, column: 3, scope: !8563)
!8567 = !DILocation(line: 1313, column: 17, scope: !8551)
!8568 = !DILocation(line: 1313, column: 2, scope: !8551)
!8569 = !DILocation(line: 1316, column: 16, scope: !8551)
!8570 = !DILocation(line: 1316, column: 20, scope: !8551)
!8571 = !DILocation(line: 1316, column: 27, scope: !8551)
!8572 = !DILocation(line: 1316, column: 29, scope: !8551)
!8573 = !DILocation(line: 1316, column: 14, scope: !8551)
!8574 = !DILocation(line: 1318, column: 22, scope: !8551)
!8575 = !DILocation(line: 1318, column: 26, scope: !8551)
!8576 = !DILocation(line: 1318, column: 41, scope: !8551)
!8577 = !DILocation(line: 1318, column: 45, scope: !8551)
!8578 = !DILocation(line: 1318, column: 52, scope: !8551)
!8579 = !DILocation(line: 1318, column: 54, scope: !8551)
!8580 = !DILocation(line: 1318, column: 33, scope: !8551)
!8581 = !DILocation(line: 1318, column: 69, scope: !8551)
!8582 = !DILocation(line: 1318, column: 73, scope: !8551)
!8583 = !DILocation(line: 1318, column: 61, scope: !8551)
!8584 = !DILocation(line: 1318, column: 59, scope: !8551)
!8585 = !DILocation(line: 1318, column: 94, scope: !8551)
!8586 = !DILocation(line: 1318, column: 98, scope: !8551)
!8587 = !DILocation(line: 1318, column: 86, scope: !8551)
!8588 = !DILocation(line: 1318, column: 84, scope: !8551)
!8589 = !DILocation(line: 1318, column: 2, scope: !8551)
!8590 = !DILocation(line: 1321, column: 6, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 1321, column: 6)
!8592 = !DILocation(line: 1321, column: 10, scope: !8591)
!8593 = !DILocation(line: 1321, column: 6, scope: !8551)
!8594 = !DILocation(line: 1322, column: 3, scope: !8591)
!8595 = !DILocation(line: 1322, column: 7, scope: !8591)
!8596 = !DILocation(line: 1322, column: 17, scope: !8591)
!8597 = !DILocation(line: 1322, column: 21, scope: !8591)
!8598 = !DILocation(line: 1325, column: 32, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 1325, column: 6)
!8600 = !DILocation(line: 1325, column: 6, scope: !8599)
!8601 = !DILocation(line: 1325, column: 6, scope: !8551)
!8602 = !DILocation(line: 1326, column: 33, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8599, file: !3, line: 1325, column: 37)
!8604 = !DILocation(line: 1326, column: 37, scope: !8603)
!8605 = !DILocation(line: 1326, column: 41, scope: !8603)
!8606 = !DILocation(line: 1326, column: 47, scope: !8603)
!8607 = !DILocation(line: 1326, column: 51, scope: !8603)
!8608 = !DILocation(line: 1326, column: 58, scope: !8603)
!8609 = !DILocation(line: 1326, column: 62, scope: !8603)
!8610 = !DILocation(line: 1326, column: 3, scope: !8603)
!8611 = !DILocation(line: 1327, column: 2, scope: !8603)
!8612 = !DILocation(line: 1329, column: 25, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8599, file: !3, line: 1328, column: 7)
!8614 = !DILocation(line: 1329, column: 29, scope: !8613)
!8615 = !DILocation(line: 1329, column: 33, scope: !8613)
!8616 = !DILocation(line: 1329, column: 39, scope: !8613)
!8617 = !DILocation(line: 1329, column: 43, scope: !8613)
!8618 = !DILocation(line: 1329, column: 50, scope: !8613)
!8619 = !DILocation(line: 1329, column: 54, scope: !8613)
!8620 = !DILocation(line: 1329, column: 3, scope: !8613)
!8621 = !DILocation(line: 1330, column: 26, scope: !8613)
!8622 = !DILocation(line: 1330, column: 3, scope: !8613)
!8623 = !DILocation(line: 1334, column: 6, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 1334, column: 6)
!8625 = !DILocation(line: 1334, column: 10, scope: !8624)
!8626 = !DILocation(line: 1334, column: 6, scope: !8551)
!8627 = !DILocation(line: 1335, column: 3, scope: !8624)
!8628 = !DILocation(line: 1335, column: 7, scope: !8624)
!8629 = !DILocation(line: 1335, column: 17, scope: !8624)
!8630 = !DILocation(line: 1335, column: 21, scope: !8624)
!8631 = !DILocation(line: 1337, column: 26, scope: !8551)
!8632 = !DILocation(line: 1337, column: 2, scope: !8551)
!8633 = !DILocation(line: 1347, column: 6, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 1347, column: 6)
!8635 = !DILocation(line: 1347, column: 10, scope: !8634)
!8636 = !DILocation(line: 1347, column: 15, scope: !8634)
!8637 = !DILocation(line: 1347, column: 6, scope: !8551)
!8638 = !DILocation(line: 1348, column: 8, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 1348, column: 7)
!8640 = !DILocation(line: 1348, column: 12, scope: !8639)
!8641 = !DILocation(line: 1348, column: 23, scope: !8639)
!8642 = !DILocation(line: 1348, column: 27, scope: !8639)
!8643 = !DILocation(line: 1348, column: 7, scope: !8634)
!8644 = !DILocation(line: 1349, column: 19, scope: !8639)
!8645 = !DILocation(line: 1349, column: 4, scope: !8639)
!8646 = !DILocation(line: 1348, column: 30, scope: !8639)
!8647 = !DILocation(line: 1352, column: 19, scope: !8551)
!8648 = !DILocation(line: 1352, column: 2, scope: !8551)
!8649 = !DILocation(line: 1354, column: 22, scope: !8551)
!8650 = !DILocation(line: 1354, column: 2, scope: !8551)
!8651 = !DILocation(line: 1354, column: 6, scope: !8551)
!8652 = !DILocation(line: 1354, column: 13, scope: !8551)
!8653 = !DILocation(line: 1354, column: 15, scope: !8551)
!8654 = !DILocation(line: 1354, column: 20, scope: !8551)
!8655 = !DILocation(line: 1355, column: 2, scope: !8551)
!8656 = !DILocation(line: 1355, column: 6, scope: !8551)
!8657 = !DILocation(line: 1355, column: 13, scope: !8551)
!8658 = !DILocation(line: 1355, column: 15, scope: !8551)
!8659 = !DILocation(line: 1355, column: 24, scope: !8551)
!8660 = !DILocation(line: 1356, column: 1, scope: !8551)
!8661 = distinct !DISubprogram(name: "RE_layer_load_from_file", scope: !3, file: !3, line: 3212, type: !8662, scopeLine: 3213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!8662 = !DISubroutineType(types: !8663)
!8663 = !{null, !3596, !6878, !772, !7, !7}
!8664 = !DILocalVariable(name: "layer", arg: 1, scope: !8661, file: !3, line: 3212, type: !3596)
!8665 = !DILocation(line: 3212, column: 43, scope: !8661)
!8666 = !DILocalVariable(name: "reports", arg: 2, scope: !8661, file: !3, line: 3212, type: !6878)
!8667 = !DILocation(line: 3212, column: 62, scope: !8661)
!8668 = !DILocalVariable(name: "filename", arg: 3, scope: !8661, file: !3, line: 3212, type: !772)
!8669 = !DILocation(line: 3212, column: 83, scope: !8661)
!8670 = !DILocalVariable(name: "x", arg: 4, scope: !8661, file: !3, line: 3212, type: !7)
!8671 = !DILocation(line: 3212, column: 97, scope: !8661)
!8672 = !DILocalVariable(name: "y", arg: 5, scope: !8661, file: !3, line: 3212, type: !7)
!8673 = !DILocation(line: 3212, column: 104, scope: !8661)
!8674 = !DILocalVariable(name: "ibuf", scope: !8661, file: !3, line: 3215, type: !7749)
!8675 = !DILocation(line: 3215, column: 9, scope: !8661)
!8676 = !DILocation(line: 3215, column: 32, scope: !8661)
!8677 = !DILocation(line: 3215, column: 16, scope: !8661)
!8678 = !DILocation(line: 3217, column: 6, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 3217, column: 6)
!8680 = !DILocation(line: 3217, column: 11, scope: !8679)
!8681 = !DILocation(line: 3217, column: 15, scope: !8679)
!8682 = !DILocation(line: 3217, column: 21, scope: !8679)
!8683 = !DILocation(line: 3217, column: 26, scope: !8679)
!8684 = !DILocation(line: 3217, column: 29, scope: !8679)
!8685 = !DILocation(line: 3217, column: 35, scope: !8679)
!8686 = !DILocation(line: 3217, column: 6, scope: !8661)
!8687 = !DILocation(line: 3218, column: 7, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 3218, column: 7)
!8689 = distinct !DILexicalBlock(scope: !8679, file: !3, line: 3217, column: 48)
!8690 = !DILocation(line: 3218, column: 13, scope: !8688)
!8691 = !DILocation(line: 3218, column: 18, scope: !8688)
!8692 = !DILocation(line: 3218, column: 25, scope: !8688)
!8693 = !DILocation(line: 3218, column: 15, scope: !8688)
!8694 = !DILocation(line: 3218, column: 31, scope: !8688)
!8695 = !DILocation(line: 3218, column: 34, scope: !8688)
!8696 = !DILocation(line: 3218, column: 40, scope: !8688)
!8697 = !DILocation(line: 3218, column: 45, scope: !8688)
!8698 = !DILocation(line: 3218, column: 52, scope: !8688)
!8699 = !DILocation(line: 3218, column: 42, scope: !8688)
!8700 = !DILocation(line: 3218, column: 7, scope: !8689)
!8701 = !DILocation(line: 3219, column: 8, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 3219, column: 8)
!8703 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3218, column: 59)
!8704 = !DILocation(line: 3219, column: 14, scope: !8702)
!8705 = !DILocation(line: 3219, column: 25, scope: !8702)
!8706 = !DILocation(line: 3219, column: 8, scope: !8703)
!8707 = !DILocation(line: 3220, column: 25, scope: !8702)
!8708 = !DILocation(line: 3220, column: 5, scope: !8702)
!8709 = !DILocation(line: 3222, column: 11, scope: !8703)
!8710 = !DILocation(line: 3222, column: 18, scope: !8703)
!8711 = !DILocation(line: 3222, column: 4, scope: !8703)
!8712 = !DILocation(line: 3222, column: 25, scope: !8703)
!8713 = !DILocation(line: 3222, column: 31, scope: !8703)
!8714 = !DILocation(line: 3222, column: 63, scope: !8703)
!8715 = !DILocation(line: 3222, column: 70, scope: !8703)
!8716 = !DILocation(line: 3222, column: 61, scope: !8703)
!8717 = !DILocation(line: 3222, column: 78, scope: !8703)
!8718 = !DILocation(line: 3222, column: 85, scope: !8703)
!8719 = !DILocation(line: 3222, column: 76, scope: !8703)
!8720 = !DILocation(line: 3223, column: 3, scope: !8703)
!8721 = !DILocation(line: 3225, column: 9, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 3225, column: 8)
!8723 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3224, column: 8)
!8724 = !DILocation(line: 3225, column: 15, scope: !8722)
!8725 = !DILocation(line: 3225, column: 19, scope: !8722)
!8726 = !DILocation(line: 3225, column: 17, scope: !8722)
!8727 = !DILocation(line: 3225, column: 24, scope: !8722)
!8728 = !DILocation(line: 3225, column: 31, scope: !8722)
!8729 = !DILocation(line: 3225, column: 21, scope: !8722)
!8730 = !DILocation(line: 3225, column: 38, scope: !8722)
!8731 = !DILocation(line: 3225, column: 42, scope: !8722)
!8732 = !DILocation(line: 3225, column: 48, scope: !8722)
!8733 = !DILocation(line: 3225, column: 52, scope: !8722)
!8734 = !DILocation(line: 3225, column: 50, scope: !8722)
!8735 = !DILocation(line: 3225, column: 57, scope: !8722)
!8736 = !DILocation(line: 3225, column: 64, scope: !8722)
!8737 = !DILocation(line: 3225, column: 54, scope: !8722)
!8738 = !DILocation(line: 3225, column: 8, scope: !8723)
!8739 = !DILocalVariable(name: "ibuf_clip", scope: !8740, file: !3, line: 3226, type: !7749)
!8740 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 3225, column: 72)
!8741 = !DILocation(line: 3226, column: 12, scope: !8740)
!8742 = !DILocation(line: 3228, column: 9, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8740, file: !3, line: 3228, column: 9)
!8744 = !DILocation(line: 3228, column: 15, scope: !8743)
!8745 = !DILocation(line: 3228, column: 26, scope: !8743)
!8746 = !DILocation(line: 3228, column: 9, scope: !8740)
!8747 = !DILocation(line: 3229, column: 26, scope: !8743)
!8748 = !DILocation(line: 3229, column: 6, scope: !8743)
!8749 = !DILocation(line: 3231, column: 32, scope: !8740)
!8750 = !DILocation(line: 3231, column: 39, scope: !8740)
!8751 = !DILocation(line: 3231, column: 46, scope: !8740)
!8752 = !DILocation(line: 3231, column: 53, scope: !8740)
!8753 = !DILocation(line: 3231, column: 17, scope: !8740)
!8754 = !DILocation(line: 3231, column: 15, scope: !8740)
!8755 = !DILocation(line: 3232, column: 9, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8740, file: !3, line: 3232, column: 9)
!8757 = !DILocation(line: 3232, column: 9, scope: !8740)
!8758 = !DILocation(line: 3233, column: 18, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8756, file: !3, line: 3232, column: 20)
!8760 = !DILocation(line: 3233, column: 29, scope: !8759)
!8761 = !DILocation(line: 3233, column: 41, scope: !8759)
!8762 = !DILocation(line: 3233, column: 44, scope: !8759)
!8763 = !DILocation(line: 3233, column: 47, scope: !8759)
!8764 = !DILocation(line: 3233, column: 54, scope: !8759)
!8765 = !DILocation(line: 3233, column: 61, scope: !8759)
!8766 = !DILocation(line: 3233, column: 68, scope: !8759)
!8767 = !DILocation(line: 3233, column: 6, scope: !8759)
!8768 = !DILocation(line: 3235, column: 13, scope: !8759)
!8769 = !DILocation(line: 3235, column: 20, scope: !8759)
!8770 = !DILocation(line: 3235, column: 6, scope: !8759)
!8771 = !DILocation(line: 3235, column: 27, scope: !8759)
!8772 = !DILocation(line: 3235, column: 38, scope: !8759)
!8773 = !DILocation(line: 3235, column: 70, scope: !8759)
!8774 = !DILocation(line: 3235, column: 77, scope: !8759)
!8775 = !DILocation(line: 3235, column: 68, scope: !8759)
!8776 = !DILocation(line: 3235, column: 85, scope: !8759)
!8777 = !DILocation(line: 3235, column: 92, scope: !8759)
!8778 = !DILocation(line: 3235, column: 83, scope: !8759)
!8779 = !DILocation(line: 3236, column: 20, scope: !8759)
!8780 = !DILocation(line: 3236, column: 6, scope: !8759)
!8781 = !DILocation(line: 3237, column: 5, scope: !8759)
!8782 = !DILocation(line: 3239, column: 18, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8756, file: !3, line: 3238, column: 10)
!8784 = !DILocation(line: 3239, column: 103, scope: !8783)
!8785 = !DILocation(line: 3239, column: 6, scope: !8783)
!8786 = !DILocation(line: 3241, column: 4, scope: !8740)
!8787 = !DILocation(line: 3243, column: 17, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 3242, column: 9)
!8789 = !DILocation(line: 3243, column: 109, scope: !8788)
!8790 = !DILocation(line: 3243, column: 5, scope: !8788)
!8791 = !DILocation(line: 3247, column: 17, scope: !8689)
!8792 = !DILocation(line: 3247, column: 3, scope: !8689)
!8793 = !DILocation(line: 3248, column: 2, scope: !8689)
!8794 = !DILocation(line: 3250, column: 15, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8679, file: !3, line: 3249, column: 7)
!8796 = !DILocation(line: 3250, column: 84, scope: !8795)
!8797 = !DILocation(line: 3250, column: 3, scope: !8795)
!8798 = !DILocation(line: 3252, column: 1, scope: !8661)
!8799 = distinct !DISubprogram(name: "RE_result_load_from_file", scope: !3, file: !3, line: 3254, type: !8800, scopeLine: 3255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!8800 = !DISubroutineType(types: !8801)
!8801 = !{null, !3006, !6878, !772}
!8802 = !DILocalVariable(name: "result", arg: 1, scope: !8799, file: !3, line: 3254, type: !3006)
!8803 = !DILocation(line: 3254, column: 45, scope: !8799)
!8804 = !DILocalVariable(name: "reports", arg: 2, scope: !8799, file: !3, line: 3254, type: !6878)
!8805 = !DILocation(line: 3254, column: 65, scope: !8799)
!8806 = !DILocalVariable(name: "filename", arg: 3, scope: !8799, file: !3, line: 3254, type: !772)
!8807 = !DILocation(line: 3254, column: 86, scope: !8799)
!8808 = !DILocation(line: 3256, column: 40, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 3256, column: 6)
!8810 = !DILocation(line: 3256, column: 54, scope: !8809)
!8811 = !DILocation(line: 3256, column: 7, scope: !8809)
!8812 = !DILocation(line: 3256, column: 6, scope: !8799)
!8813 = !DILocation(line: 3257, column: 15, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 3256, column: 65)
!8815 = !DILocation(line: 3257, column: 84, scope: !8814)
!8816 = !DILocation(line: 3257, column: 3, scope: !8814)
!8817 = !DILocation(line: 3258, column: 3, scope: !8814)
!8818 = !DILocation(line: 3260, column: 1, scope: !8799)
!8819 = distinct !DISubprogram(name: "RE_WriteEnvmapResult", scope: !3, file: !3, line: 3264, type: !8820, scopeLine: 3265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{!916, !3199, !217, !8822, !772, !773, !778}
!8822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8823, size: 64)
!8823 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnvMap", file: !294, line: 135, baseType: !1328)
!8824 = !DILocalVariable(name: "reports", arg: 1, scope: !8819, file: !3, line: 3264, type: !3199)
!8825 = !DILocation(line: 3264, column: 46, scope: !8819)
!8826 = !DILocalVariable(name: "scene", arg: 2, scope: !8819, file: !3, line: 3264, type: !217)
!8827 = !DILocation(line: 3264, column: 62, scope: !8819)
!8828 = !DILocalVariable(name: "env", arg: 3, scope: !8819, file: !3, line: 3264, type: !8822)
!8829 = !DILocation(line: 3264, column: 77, scope: !8819)
!8830 = !DILocalVariable(name: "relpath", arg: 4, scope: !8819, file: !3, line: 3264, type: !772)
!8831 = !DILocation(line: 3264, column: 94, scope: !8819)
!8832 = !DILocalVariable(name: "imtype", arg: 5, scope: !8819, file: !3, line: 3264, type: !773)
!8833 = !DILocation(line: 3264, column: 114, scope: !8819)
!8834 = !DILocalVariable(name: "layout", arg: 6, scope: !8819, file: !3, line: 3264, type: !778)
!8835 = !DILocation(line: 3264, column: 128, scope: !8819)
!8836 = !DILocalVariable(name: "imf", scope: !8819, file: !3, line: 3266, type: !7933)
!8837 = !DILocation(line: 3266, column: 18, scope: !8819)
!8838 = !DILocalVariable(name: "ibuf", scope: !8819, file: !3, line: 3267, type: !7749)
!8839 = !DILocation(line: 3267, column: 9, scope: !8819)
!8840 = !DILocalVariable(name: "ok", scope: !8819, file: !3, line: 3268, type: !7)
!8841 = !DILocation(line: 3268, column: 6, scope: !8819)
!8842 = !DILocalVariable(name: "dx", scope: !8819, file: !3, line: 3269, type: !7)
!8843 = !DILocation(line: 3269, column: 6, scope: !8819)
!8844 = !DILocalVariable(name: "maxX", scope: !8819, file: !3, line: 3270, type: !7)
!8845 = !DILocation(line: 3270, column: 6, scope: !8819)
!8846 = !DILocalVariable(name: "maxY", scope: !8819, file: !3, line: 3270, type: !7)
!8847 = !DILocation(line: 3270, column: 16, scope: !8819)
!8848 = !DILocalVariable(name: "i", scope: !8819, file: !3, line: 3270, type: !7)
!8849 = !DILocation(line: 3270, column: 26, scope: !8819)
!8850 = !DILocalVariable(name: "filepath", scope: !8819, file: !3, line: 3271, type: !241)
!8851 = !DILocation(line: 3271, column: 7, scope: !8819)
!8852 = !DILocation(line: 3273, column: 6, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 3273, column: 6)
!8854 = !DILocation(line: 3273, column: 11, scope: !8853)
!8855 = !DILocation(line: 3273, column: 19, scope: !8853)
!8856 = !DILocation(line: 3273, column: 6, scope: !8819)
!8857 = !DILocation(line: 3274, column: 14, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 3273, column: 28)
!8859 = !DILocation(line: 3274, column: 3, scope: !8858)
!8860 = !DILocation(line: 3275, column: 3, scope: !8858)
!8861 = !DILocation(line: 3278, column: 8, scope: !8819)
!8862 = !DILocation(line: 3278, column: 15, scope: !8819)
!8863 = !DILocation(line: 3278, column: 17, scope: !8819)
!8864 = !DILocation(line: 3279, column: 15, scope: !8819)
!8865 = !DILocation(line: 3279, column: 6, scope: !8819)
!8866 = !DILocation(line: 3279, column: 13, scope: !8819)
!8867 = !DILocation(line: 3281, column: 7, scope: !8819)
!8868 = !DILocation(line: 3281, column: 12, scope: !8819)
!8869 = !DILocation(line: 3281, column: 21, scope: !8819)
!8870 = !DILocation(line: 3281, column: 5, scope: !8819)
!8871 = !DILocation(line: 3283, column: 6, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 3283, column: 6)
!8873 = !DILocation(line: 3283, column: 11, scope: !8872)
!8874 = !DILocation(line: 3283, column: 16, scope: !8872)
!8875 = !DILocation(line: 3283, column: 6, scope: !8819)
!8876 = !DILocation(line: 3284, column: 10, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 3284, column: 3)
!8878 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 3283, column: 29)
!8879 = !DILocation(line: 3284, column: 8, scope: !8877)
!8880 = !DILocation(line: 3284, column: 15, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 3284, column: 3)
!8882 = !DILocation(line: 3284, column: 17, scope: !8881)
!8883 = !DILocation(line: 3284, column: 3, scope: !8877)
!8884 = !DILocation(line: 3285, column: 18, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 3284, column: 31)
!8886 = !DILocation(line: 3285, column: 29, scope: !8885)
!8887 = !DILocation(line: 3285, column: 36, scope: !8885)
!8888 = !DILocation(line: 3285, column: 24, scope: !8885)
!8889 = !DILocation(line: 3285, column: 39, scope: !8885)
!8890 = !DILocation(line: 3285, column: 11, scope: !8885)
!8891 = !DILocation(line: 3285, column: 9, scope: !8885)
!8892 = !DILocation(line: 3286, column: 18, scope: !8885)
!8893 = !DILocation(line: 3286, column: 29, scope: !8885)
!8894 = !DILocation(line: 3286, column: 36, scope: !8885)
!8895 = !DILocation(line: 3286, column: 38, scope: !8885)
!8896 = !DILocation(line: 3286, column: 24, scope: !8885)
!8897 = !DILocation(line: 3286, column: 43, scope: !8885)
!8898 = !DILocation(line: 3286, column: 11, scope: !8885)
!8899 = !DILocation(line: 3286, column: 9, scope: !8885)
!8900 = !DILocation(line: 3287, column: 3, scope: !8885)
!8901 = !DILocation(line: 3284, column: 25, scope: !8881)
!8902 = !DILocation(line: 3284, column: 3, scope: !8881)
!8903 = distinct !{!8903, !8883, !8904}
!8904 = !DILocation(line: 3287, column: 3, scope: !8877)
!8905 = !DILocation(line: 3289, column: 25, scope: !8878)
!8906 = !DILocation(line: 3289, column: 32, scope: !8878)
!8907 = !DILocation(line: 3289, column: 30, scope: !8878)
!8908 = !DILocation(line: 3289, column: 36, scope: !8878)
!8909 = !DILocation(line: 3289, column: 43, scope: !8878)
!8910 = !DILocation(line: 3289, column: 41, scope: !8878)
!8911 = !DILocation(line: 3289, column: 10, scope: !8878)
!8912 = !DILocation(line: 3289, column: 8, scope: !8878)
!8913 = !DILocation(line: 3291, column: 10, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 3291, column: 3)
!8915 = !DILocation(line: 3291, column: 8, scope: !8914)
!8916 = !DILocation(line: 3291, column: 15, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 3291, column: 3)
!8918 = !DILocation(line: 3291, column: 17, scope: !8917)
!8919 = !DILocation(line: 3291, column: 3, scope: !8914)
!8920 = !DILocation(line: 3292, column: 8, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 3292, column: 8)
!8922 = !DILocation(line: 3292, column: 15, scope: !8921)
!8923 = !DILocation(line: 3292, column: 18, scope: !8921)
!8924 = !DILocation(line: 3292, column: 23, scope: !8921)
!8925 = !DILocation(line: 3292, column: 26, scope: !8921)
!8926 = !DILocation(line: 3292, column: 33, scope: !8921)
!8927 = !DILocation(line: 3292, column: 35, scope: !8921)
!8928 = !DILocation(line: 3292, column: 40, scope: !8921)
!8929 = !DILocation(line: 3292, column: 8, scope: !8917)
!8930 = !DILocation(line: 3293, column: 17, scope: !8921)
!8931 = !DILocation(line: 3293, column: 23, scope: !8921)
!8932 = !DILocation(line: 3293, column: 28, scope: !8921)
!8933 = !DILocation(line: 3293, column: 33, scope: !8921)
!8934 = !DILocation(line: 3293, column: 35, scope: !8921)
!8935 = !DILocation(line: 3293, column: 41, scope: !8921)
!8936 = !DILocation(line: 3293, column: 48, scope: !8921)
!8937 = !DILocation(line: 3293, column: 53, scope: !8921)
!8938 = !DILocation(line: 3293, column: 51, scope: !8921)
!8939 = !DILocation(line: 3293, column: 57, scope: !8921)
!8940 = !DILocation(line: 3293, column: 64, scope: !8921)
!8941 = !DILocation(line: 3293, column: 66, scope: !8921)
!8942 = !DILocation(line: 3293, column: 73, scope: !8921)
!8943 = !DILocation(line: 3293, column: 71, scope: !8921)
!8944 = !DILocation(line: 3293, column: 83, scope: !8921)
!8945 = !DILocation(line: 3293, column: 87, scope: !8921)
!8946 = !DILocation(line: 3293, column: 5, scope: !8921)
!8947 = !DILocation(line: 3292, column: 43, scope: !8921)
!8948 = !DILocation(line: 3291, column: 25, scope: !8917)
!8949 = !DILocation(line: 3291, column: 3, scope: !8917)
!8950 = distinct !{!8950, !8919, !8951}
!8951 = !DILocation(line: 3293, column: 89, scope: !8914)
!8952 = !DILocation(line: 3294, column: 2, scope: !8878)
!8953 = !DILocation(line: 3295, column: 11, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 3295, column: 11)
!8955 = !DILocation(line: 3295, column: 16, scope: !8954)
!8956 = !DILocation(line: 3295, column: 21, scope: !8954)
!8957 = !DILocation(line: 3295, column: 11, scope: !8872)
!8958 = !DILocation(line: 3296, column: 25, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 3295, column: 35)
!8960 = !DILocation(line: 3296, column: 29, scope: !8959)
!8961 = !DILocation(line: 3296, column: 10, scope: !8959)
!8962 = !DILocation(line: 3296, column: 8, scope: !8959)
!8963 = !DILocation(line: 3297, column: 15, scope: !8959)
!8964 = !DILocation(line: 3297, column: 21, scope: !8959)
!8965 = !DILocation(line: 3297, column: 26, scope: !8959)
!8966 = !DILocation(line: 3297, column: 47, scope: !8959)
!8967 = !DILocation(line: 3297, column: 51, scope: !8959)
!8968 = !DILocation(line: 3297, column: 3, scope: !8959)
!8969 = !DILocation(line: 3298, column: 2, scope: !8959)
!8970 = !DILocation(line: 3300, column: 14, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 3299, column: 7)
!8972 = !DILocation(line: 3300, column: 3, scope: !8971)
!8973 = !DILocation(line: 3301, column: 3, scope: !8971)
!8974 = !DILocation(line: 3304, column: 38, scope: !8819)
!8975 = !DILocation(line: 3304, column: 58, scope: !8819)
!8976 = !DILocation(line: 3304, column: 65, scope: !8819)
!8977 = !DILocation(line: 3304, column: 81, scope: !8819)
!8978 = !DILocation(line: 3304, column: 88, scope: !8819)
!8979 = !DILocation(line: 3304, column: 2, scope: !8819)
!8980 = !DILocation(line: 3307, column: 14, scope: !8819)
!8981 = !DILocation(line: 3307, column: 24, scope: !8819)
!8982 = !DILocation(line: 3307, column: 2, scope: !8819)
!8983 = !DILocation(line: 3308, column: 15, scope: !8819)
!8984 = !DILocation(line: 3308, column: 27, scope: !8819)
!8985 = !DILocation(line: 3308, column: 33, scope: !8819)
!8986 = !DILocation(line: 3308, column: 25, scope: !8819)
!8987 = !DILocation(line: 3308, column: 2, scope: !8819)
!8988 = !DILocation(line: 3310, column: 23, scope: !8819)
!8989 = !DILocation(line: 3310, column: 29, scope: !8819)
!8990 = !DILocation(line: 3310, column: 7, scope: !8819)
!8991 = !DILocation(line: 3310, column: 5, scope: !8819)
!8992 = !DILocation(line: 3312, column: 16, scope: !8819)
!8993 = !DILocation(line: 3312, column: 2, scope: !8819)
!8994 = !DILocation(line: 3314, column: 6, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 3314, column: 6)
!8996 = !DILocation(line: 3314, column: 6, scope: !8819)
!8997 = !DILocation(line: 3315, column: 3, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 3314, column: 10)
!8999 = !DILocation(line: 3318, column: 14, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 3317, column: 7)
!9001 = !DILocation(line: 3318, column: 3, scope: !9000)
!9002 = !DILocation(line: 3319, column: 3, scope: !9000)
!9003 = !DILocation(line: 3321, column: 1, scope: !8819)
!9004 = distinct !DISubprogram(name: "max_ii", scope: !9005, file: !9005, line: 215, type: !9006, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9005 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9006 = !DISubroutineType(types: !9007)
!9007 = !{!7, !7, !7}
!9008 = !DILocalVariable(name: "a", arg: 1, scope: !9004, file: !9005, line: 215, type: !7)
!9009 = !DILocation(line: 215, column: 24, scope: !9004)
!9010 = !DILocalVariable(name: "b", arg: 2, scope: !9004, file: !9005, line: 215, type: !7)
!9011 = !DILocation(line: 215, column: 31, scope: !9004)
!9012 = !DILocation(line: 217, column: 10, scope: !9004)
!9013 = !DILocation(line: 217, column: 14, scope: !9004)
!9014 = !DILocation(line: 217, column: 12, scope: !9004)
!9015 = !DILocation(line: 217, column: 9, scope: !9004)
!9016 = !DILocation(line: 217, column: 19, scope: !9004)
!9017 = !DILocation(line: 217, column: 23, scope: !9004)
!9018 = !DILocation(line: 217, column: 2, scope: !9004)
!9019 = distinct !DISubprogram(name: "BLI_rcti_size_y", scope: !5572, file: !5572, line: 106, type: !5573, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9020 = !DILocalVariable(name: "rct", arg: 1, scope: !9019, file: !5572, line: 106, type: !5575)
!9021 = !DILocation(line: 106, column: 53, scope: !9019)
!9022 = !DILocation(line: 106, column: 68, scope: !9019)
!9023 = !DILocation(line: 106, column: 73, scope: !9019)
!9024 = !DILocation(line: 106, column: 80, scope: !9019)
!9025 = !DILocation(line: 106, column: 85, scope: !9019)
!9026 = !DILocation(line: 106, column: 78, scope: !9019)
!9027 = !DILocation(line: 106, column: 60, scope: !9019)
!9028 = distinct !DISubprogram(name: "copy_v4_v4", scope: !9029, file: !9029, line: 71, type: !9030, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9029 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9030 = !DISubroutineType(types: !9031)
!9031 = !{null, !778, !9032}
!9032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!9033 = !DILocalVariable(name: "r", arg: 1, scope: !9028, file: !9029, line: 71, type: !778)
!9034 = !DILocation(line: 71, column: 31, scope: !9028)
!9035 = !DILocalVariable(name: "a", arg: 2, scope: !9028, file: !9029, line: 71, type: !9032)
!9036 = !DILocation(line: 71, column: 49, scope: !9028)
!9037 = !DILocation(line: 73, column: 9, scope: !9028)
!9038 = !DILocation(line: 73, column: 2, scope: !9028)
!9039 = !DILocation(line: 73, column: 7, scope: !9028)
!9040 = !DILocation(line: 74, column: 9, scope: !9028)
!9041 = !DILocation(line: 74, column: 2, scope: !9028)
!9042 = !DILocation(line: 74, column: 7, scope: !9028)
!9043 = !DILocation(line: 75, column: 9, scope: !9028)
!9044 = !DILocation(line: 75, column: 2, scope: !9028)
!9045 = !DILocation(line: 75, column: 7, scope: !9028)
!9046 = !DILocation(line: 76, column: 9, scope: !9028)
!9047 = !DILocation(line: 76, column: 2, scope: !9028)
!9048 = !DILocation(line: 76, column: 7, scope: !9028)
!9049 = !DILocation(line: 77, column: 1, scope: !9028)
!9050 = distinct !DISubprogram(name: "render_display_update_enabled", scope: !3, file: !3, line: 886, type: !9051, scopeLine: 887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9051 = !DISubroutineType(types: !9052)
!9052 = !{!7, !3576}
!9053 = !DILocalVariable(name: "re", arg: 1, scope: !9050, file: !3, line: 886, type: !3576)
!9054 = !DILocation(line: 886, column: 50, scope: !9050)
!9055 = !DILocation(line: 889, column: 6, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 889, column: 6)
!9057 = !DILocation(line: 889, column: 10, scope: !9056)
!9058 = !DILocation(line: 889, column: 6, scope: !9050)
!9059 = !DILocation(line: 890, column: 12, scope: !9056)
!9060 = !DILocation(line: 890, column: 16, scope: !9056)
!9061 = !DILocation(line: 890, column: 18, scope: !9056)
!9062 = !DILocation(line: 890, column: 26, scope: !9056)
!9063 = !DILocation(line: 890, column: 10, scope: !9056)
!9064 = !DILocation(line: 890, column: 3, scope: !9056)
!9065 = !DILocation(line: 892, column: 3, scope: !9056)
!9066 = !DILocation(line: 893, column: 1, scope: !9050)
!9067 = distinct !DISubprogram(name: "thread_break", scope: !3, file: !3, line: 138, type: !1185, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9068 = !DILocalVariable(name: "UNUSED_arg", arg: 1, scope: !9067, file: !3, line: 138, type: !215)
!9069 = !DILocation(line: 138, column: 31, scope: !9067)
!9070 = !DILocation(line: 140, column: 9, scope: !9067)
!9071 = !DILocation(line: 140, column: 2, scope: !9067)
!9072 = distinct !DISubprogram(name: "find_next_pano_slice", scope: !3, file: !3, line: 979, type: !9073, scopeLine: 980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9073 = !DISubroutineType(types: !9074)
!9074 = !{!916, !3576, !933, !933, !5210}
!9075 = !DILocalVariable(name: "re", arg: 1, scope: !9072, file: !3, line: 979, type: !3576)
!9076 = !DILocation(line: 979, column: 42, scope: !9072)
!9077 = !DILocalVariable(name: "slice", arg: 2, scope: !9072, file: !3, line: 979, type: !933)
!9078 = !DILocation(line: 979, column: 51, scope: !9072)
!9079 = !DILocalVariable(name: "minx", arg: 3, scope: !9072, file: !3, line: 979, type: !933)
!9080 = !DILocation(line: 979, column: 63, scope: !9072)
!9081 = !DILocalVariable(name: "viewplane", arg: 4, scope: !9072, file: !3, line: 979, type: !5210)
!9082 = !DILocation(line: 979, column: 75, scope: !9072)
!9083 = !DILocalVariable(name: "pa", scope: !9072, file: !3, line: 981, type: !5643)
!9084 = !DILocation(line: 981, column: 14, scope: !9072)
!9085 = !DILocalVariable(name: "best", scope: !9072, file: !3, line: 981, type: !5643)
!9086 = !DILocation(line: 981, column: 19, scope: !9072)
!9087 = !DILocalVariable(name: "found", scope: !9072, file: !3, line: 982, type: !916)
!9088 = !DILocation(line: 982, column: 7, scope: !9072)
!9089 = !DILocation(line: 984, column: 10, scope: !9072)
!9090 = !DILocation(line: 984, column: 14, scope: !9072)
!9091 = !DILocation(line: 984, column: 3, scope: !9072)
!9092 = !DILocation(line: 984, column: 8, scope: !9072)
!9093 = !DILocation(line: 986, column: 8, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9072, file: !3, line: 986, column: 6)
!9095 = !DILocation(line: 986, column: 12, scope: !9094)
!9096 = !DILocation(line: 986, column: 14, scope: !9094)
!9097 = !DILocation(line: 986, column: 19, scope: !9094)
!9098 = !DILocation(line: 986, column: 6, scope: !9072)
!9099 = !DILocation(line: 988, column: 13, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 986, column: 34)
!9101 = !DILocation(line: 988, column: 12, scope: !9100)
!9102 = !DILocation(line: 988, column: 19, scope: !9100)
!9103 = !DILocation(line: 988, column: 11, scope: !9100)
!9104 = !DILocation(line: 988, column: 9, scope: !9100)
!9105 = !DILocation(line: 989, column: 5, scope: !9100)
!9106 = !DILocation(line: 989, column: 11, scope: !9100)
!9107 = !DILocation(line: 990, column: 10, scope: !9100)
!9108 = !DILocation(line: 990, column: 3, scope: !9100)
!9109 = !DILocation(line: 994, column: 12, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9072, file: !3, line: 994, column: 2)
!9111 = !DILocation(line: 994, column: 16, scope: !9110)
!9112 = !DILocation(line: 994, column: 22, scope: !9110)
!9113 = !DILocation(line: 994, column: 10, scope: !9110)
!9114 = !DILocation(line: 994, column: 7, scope: !9110)
!9115 = !DILocation(line: 994, column: 29, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9110, file: !3, line: 994, column: 2)
!9117 = !DILocation(line: 994, column: 2, scope: !9110)
!9118 = !DILocation(line: 995, column: 7, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 995, column: 7)
!9120 = distinct !DILexicalBlock(scope: !9116, file: !3, line: 994, column: 48)
!9121 = !DILocation(line: 995, column: 11, scope: !9119)
!9122 = !DILocation(line: 995, column: 18, scope: !9119)
!9123 = !DILocation(line: 995, column: 38, scope: !9119)
!9124 = !DILocation(line: 995, column: 41, scope: !9119)
!9125 = !DILocation(line: 995, column: 45, scope: !9119)
!9126 = !DILocation(line: 995, column: 48, scope: !9119)
!9127 = !DILocation(line: 995, column: 7, scope: !9120)
!9128 = !DILocation(line: 996, column: 8, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 996, column: 8)
!9130 = distinct !DILexicalBlock(scope: !9119, file: !3, line: 995, column: 54)
!9131 = !DILocation(line: 996, column: 12, scope: !9129)
!9132 = !DILocation(line: 996, column: 21, scope: !9129)
!9133 = !DILocation(line: 996, column: 29, scope: !9129)
!9134 = !DILocation(line: 996, column: 28, scope: !9129)
!9135 = !DILocation(line: 996, column: 26, scope: !9129)
!9136 = !DILocation(line: 996, column: 8, scope: !9130)
!9137 = !DILocation(line: 997, column: 11, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9129, file: !3, line: 996, column: 35)
!9139 = !DILocation(line: 998, column: 12, scope: !9138)
!9140 = !DILocation(line: 998, column: 10, scope: !9138)
!9141 = !DILocation(line: 999, column: 13, scope: !9138)
!9142 = !DILocation(line: 999, column: 17, scope: !9138)
!9143 = !DILocation(line: 999, column: 26, scope: !9138)
!9144 = !DILocation(line: 999, column: 6, scope: !9138)
!9145 = !DILocation(line: 999, column: 11, scope: !9138)
!9146 = !DILocation(line: 1000, column: 4, scope: !9138)
!9147 = !DILocation(line: 1001, column: 3, scope: !9130)
!9148 = !DILocation(line: 1002, column: 2, scope: !9120)
!9149 = !DILocation(line: 994, column: 38, scope: !9116)
!9150 = !DILocation(line: 994, column: 42, scope: !9116)
!9151 = !DILocation(line: 994, column: 36, scope: !9116)
!9152 = !DILocation(line: 994, column: 2, scope: !9116)
!9153 = distinct !{!9153, !9117, !9154}
!9154 = !DILocation(line: 1002, column: 2, scope: !9110)
!9155 = !DILocation(line: 1004, column: 6, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9072, file: !3, line: 1004, column: 6)
!9157 = !DILocation(line: 1004, column: 6, scope: !9072)
!9158 = !DILocalVariable(name: "phi", scope: !9159, file: !3, line: 1005, type: !216)
!9159 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 1004, column: 12)
!9160 = !DILocation(line: 1005, column: 9, scope: !9159)
!9161 = !DILocation(line: 1005, column: 34, scope: !9159)
!9162 = !DILocation(line: 1005, column: 15, scope: !9159)
!9163 = !DILocation(line: 1007, column: 16, scope: !9159)
!9164 = !DILocation(line: 1007, column: 20, scope: !9159)
!9165 = !DILocation(line: 1007, column: 28, scope: !9159)
!9166 = !DILocation(line: 1007, column: 34, scope: !9159)
!9167 = !DILocation(line: 1007, column: 43, scope: !9159)
!9168 = !DILocation(line: 1007, column: 50, scope: !9159)
!9169 = !DILocation(line: 1007, column: 56, scope: !9159)
!9170 = !DILocation(line: 1007, column: 65, scope: !9159)
!9171 = !DILocation(line: 1007, column: 48, scope: !9159)
!9172 = !DILocation(line: 1007, column: 25, scope: !9159)
!9173 = !DILocation(line: 1007, column: 73, scope: !9159)
!9174 = !DILocation(line: 1007, column: 15, scope: !9159)
!9175 = !DILocation(line: 1007, column: 13, scope: !9159)
!9176 = !DILocation(line: 1008, column: 32, scope: !9159)
!9177 = !DILocation(line: 1008, column: 16, scope: !9159)
!9178 = !DILocation(line: 1008, column: 47, scope: !9159)
!9179 = !DILocation(line: 1008, column: 43, scope: !9159)
!9180 = !DILocation(line: 1008, column: 66, scope: !9159)
!9181 = !DILocation(line: 1008, column: 70, scope: !9159)
!9182 = !DILocation(line: 1008, column: 58, scope: !9159)
!9183 = !DILocation(line: 1008, column: 56, scope: !9159)
!9184 = !DILocation(line: 1008, column: 13, scope: !9159)
!9185 = !DILocation(line: 1011, column: 22, scope: !9159)
!9186 = !DILocation(line: 1011, column: 33, scope: !9159)
!9187 = !DILocation(line: 1011, column: 42, scope: !9159)
!9188 = !DILocation(line: 1011, column: 38, scope: !9159)
!9189 = !DILocation(line: 1011, column: 20, scope: !9159)
!9190 = !DILocation(line: 1012, column: 22, scope: !9159)
!9191 = !DILocation(line: 1012, column: 33, scope: !9159)
!9192 = !DILocation(line: 1012, column: 42, scope: !9159)
!9193 = !DILocation(line: 1012, column: 38, scope: !9159)
!9194 = !DILocation(line: 1012, column: 20, scope: !9159)
!9195 = !DILocation(line: 1013, column: 16, scope: !9159)
!9196 = !DILocation(line: 1013, column: 36, scope: !9159)
!9197 = !DILocation(line: 1013, column: 47, scope: !9159)
!9198 = !DILocation(line: 1013, column: 3, scope: !9159)
!9199 = !DILocation(line: 1014, column: 24, scope: !9159)
!9200 = !DILocation(line: 1014, column: 28, scope: !9159)
!9201 = !DILocation(line: 1014, column: 3, scope: !9159)
!9202 = !DILocation(line: 1017, column: 22, scope: !9159)
!9203 = !DILocation(line: 1017, column: 46, scope: !9159)
!9204 = !DILocation(line: 1017, column: 43, scope: !9159)
!9205 = !DILocation(line: 1017, column: 56, scope: !9159)
!9206 = !DILocation(line: 1017, column: 54, scope: !9159)
!9207 = !DILocation(line: 1017, column: 3, scope: !9159)
!9208 = !DILocation(line: 1018, column: 21, scope: !9159)
!9209 = !DILocation(line: 1018, column: 31, scope: !9159)
!9210 = !DILocation(line: 1018, column: 29, scope: !9159)
!9211 = !DILocation(line: 1018, column: 14, scope: !9159)
!9212 = !DILocation(line: 1018, column: 12, scope: !9159)
!9213 = !DILocation(line: 1019, column: 21, scope: !9159)
!9214 = !DILocation(line: 1019, column: 31, scope: !9159)
!9215 = !DILocation(line: 1019, column: 29, scope: !9159)
!9216 = !DILocation(line: 1019, column: 14, scope: !9159)
!9217 = !DILocation(line: 1019, column: 12, scope: !9159)
!9218 = !DILocation(line: 1020, column: 2, scope: !9159)
!9219 = !DILocation(line: 1022, column: 4, scope: !9072)
!9220 = !DILocation(line: 1022, column: 10, scope: !9072)
!9221 = !DILocation(line: 1024, column: 9, scope: !9072)
!9222 = !DILocation(line: 1024, column: 2, scope: !9072)
!9223 = !DILocation(line: 1025, column: 1, scope: !9072)
!9224 = distinct !DISubprogram(name: "find_next_part", scope: !3, file: !3, line: 1027, type: !9225, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9225 = !DISubroutineType(types: !9226)
!9226 = !{!5643, !3576, !7}
!9227 = !DILocalVariable(name: "re", arg: 1, scope: !9224, file: !3, line: 1027, type: !3576)
!9228 = !DILocation(line: 1027, column: 43, scope: !9224)
!9229 = !DILocalVariable(name: "minx", arg: 2, scope: !9224, file: !3, line: 1027, type: !7)
!9230 = !DILocation(line: 1027, column: 51, scope: !9224)
!9231 = !DILocalVariable(name: "pa", scope: !9224, file: !3, line: 1029, type: !5643)
!9232 = !DILocation(line: 1029, column: 14, scope: !9224)
!9233 = !DILocalVariable(name: "best", scope: !9224, file: !3, line: 1029, type: !5643)
!9234 = !DILocation(line: 1029, column: 19, scope: !9224)
!9235 = !DILocalVariable(name: "centx", scope: !9224, file: !3, line: 1032, type: !2926)
!9236 = !DILocation(line: 1032, column: 16, scope: !9224)
!9237 = !DILocation(line: 1032, column: 24, scope: !9224)
!9238 = !DILocation(line: 1032, column: 28, scope: !9224)
!9239 = !DILocation(line: 1032, column: 33, scope: !9224)
!9240 = !DILocalVariable(name: "centy", scope: !9224, file: !3, line: 1032, type: !2926)
!9241 = !DILocation(line: 1032, column: 38, scope: !9224)
!9242 = !DILocation(line: 1032, column: 46, scope: !9224)
!9243 = !DILocation(line: 1032, column: 50, scope: !9224)
!9244 = !DILocation(line: 1032, column: 55, scope: !9224)
!9245 = !DILocalVariable(name: "tot", scope: !9224, file: !3, line: 1032, type: !2926)
!9246 = !DILocation(line: 1032, column: 60, scope: !9224)
!9247 = !DILocalVariable(name: "mindist", scope: !9224, file: !3, line: 1033, type: !2926)
!9248 = !DILocation(line: 1033, column: 16, scope: !9224)
!9249 = !DILocation(line: 1033, column: 41, scope: !9224)
!9250 = !DILocation(line: 1033, column: 45, scope: !9224)
!9251 = !DILocation(line: 1033, column: 26, scope: !9224)
!9252 = !DILocation(line: 1033, column: 67, scope: !9224)
!9253 = !DILocation(line: 1033, column: 71, scope: !9224)
!9254 = !DILocation(line: 1033, column: 52, scope: !9224)
!9255 = !DILocation(line: 1033, column: 50, scope: !9224)
!9256 = !DILocation(line: 1036, column: 12, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 1036, column: 2)
!9258 = !DILocation(line: 1036, column: 16, scope: !9257)
!9259 = !DILocation(line: 1036, column: 22, scope: !9257)
!9260 = !DILocation(line: 1036, column: 10, scope: !9257)
!9261 = !DILocation(line: 1036, column: 7, scope: !9257)
!9262 = !DILocation(line: 1036, column: 29, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 1036, column: 2)
!9264 = !DILocation(line: 1036, column: 2, scope: !9257)
!9265 = !DILocation(line: 1037, column: 7, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9267, file: !3, line: 1037, column: 7)
!9267 = distinct !DILexicalBlock(scope: !9263, file: !3, line: 1036, column: 48)
!9268 = !DILocation(line: 1037, column: 11, scope: !9266)
!9269 = !DILocation(line: 1037, column: 18, scope: !9266)
!9270 = !DILocation(line: 1037, column: 7, scope: !9267)
!9271 = !DILocation(line: 1038, column: 30, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 1037, column: 40)
!9273 = !DILocation(line: 1038, column: 34, scope: !9272)
!9274 = !DILocation(line: 1038, column: 13, scope: !9272)
!9275 = !DILocation(line: 1038, column: 10, scope: !9272)
!9276 = !DILocation(line: 1039, column: 30, scope: !9272)
!9277 = !DILocation(line: 1039, column: 34, scope: !9272)
!9278 = !DILocation(line: 1039, column: 13, scope: !9272)
!9279 = !DILocation(line: 1039, column: 10, scope: !9272)
!9280 = !DILocation(line: 1040, column: 7, scope: !9272)
!9281 = !DILocation(line: 1041, column: 3, scope: !9272)
!9282 = !DILocation(line: 1042, column: 2, scope: !9267)
!9283 = !DILocation(line: 1036, column: 38, scope: !9263)
!9284 = !DILocation(line: 1036, column: 42, scope: !9263)
!9285 = !DILocation(line: 1036, column: 36, scope: !9263)
!9286 = !DILocation(line: 1036, column: 2, scope: !9263)
!9287 = distinct !{!9287, !9264, !9288}
!9288 = !DILocation(line: 1042, column: 2, scope: !9257)
!9289 = !DILocation(line: 1043, column: 11, scope: !9224)
!9290 = !DILocation(line: 1043, column: 8, scope: !9224)
!9291 = !DILocation(line: 1044, column: 11, scope: !9224)
!9292 = !DILocation(line: 1044, column: 8, scope: !9224)
!9293 = !DILocation(line: 1047, column: 12, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 1047, column: 2)
!9295 = !DILocation(line: 1047, column: 16, scope: !9294)
!9296 = !DILocation(line: 1047, column: 22, scope: !9294)
!9297 = !DILocation(line: 1047, column: 10, scope: !9294)
!9298 = !DILocation(line: 1047, column: 7, scope: !9294)
!9299 = !DILocation(line: 1047, column: 29, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 1047, column: 2)
!9301 = !DILocation(line: 1047, column: 2, scope: !9294)
!9302 = !DILocation(line: 1048, column: 7, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9304, file: !3, line: 1048, column: 7)
!9304 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 1047, column: 48)
!9305 = !DILocation(line: 1048, column: 11, scope: !9303)
!9306 = !DILocation(line: 1048, column: 18, scope: !9303)
!9307 = !DILocation(line: 1048, column: 38, scope: !9303)
!9308 = !DILocation(line: 1048, column: 41, scope: !9303)
!9309 = !DILocation(line: 1048, column: 45, scope: !9303)
!9310 = !DILocation(line: 1048, column: 48, scope: !9303)
!9311 = !DILocation(line: 1048, column: 7, scope: !9304)
!9312 = !DILocalVariable(name: "distx", scope: !9313, file: !3, line: 1049, type: !2926)
!9313 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 1048, column: 54)
!9314 = !DILocation(line: 1049, column: 18, scope: !9313)
!9315 = !DILocation(line: 1049, column: 26, scope: !9313)
!9316 = !DILocation(line: 1049, column: 51, scope: !9313)
!9317 = !DILocation(line: 1049, column: 55, scope: !9313)
!9318 = !DILocation(line: 1049, column: 34, scope: !9313)
!9319 = !DILocation(line: 1049, column: 32, scope: !9313)
!9320 = !DILocalVariable(name: "disty", scope: !9313, file: !3, line: 1050, type: !2926)
!9321 = !DILocation(line: 1050, column: 18, scope: !9313)
!9322 = !DILocation(line: 1050, column: 26, scope: !9313)
!9323 = !DILocation(line: 1050, column: 51, scope: !9313)
!9324 = !DILocation(line: 1050, column: 55, scope: !9313)
!9325 = !DILocation(line: 1050, column: 34, scope: !9313)
!9326 = !DILocation(line: 1050, column: 32, scope: !9313)
!9327 = !DILocation(line: 1051, column: 32, scope: !9313)
!9328 = !DILocation(line: 1051, column: 40, scope: !9313)
!9329 = !DILocation(line: 1051, column: 38, scope: !9313)
!9330 = !DILocation(line: 1051, column: 48, scope: !9313)
!9331 = !DILocation(line: 1051, column: 56, scope: !9313)
!9332 = !DILocation(line: 1051, column: 54, scope: !9313)
!9333 = !DILocation(line: 1051, column: 46, scope: !9313)
!9334 = !DILocation(line: 1051, column: 27, scope: !9313)
!9335 = !DILocation(line: 1051, column: 12, scope: !9313)
!9336 = !DILocation(line: 1051, column: 10, scope: !9313)
!9337 = !DILocation(line: 1052, column: 8, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9313, file: !3, line: 1052, column: 8)
!9339 = !DILocation(line: 1052, column: 16, scope: !9338)
!9340 = !DILocation(line: 1052, column: 14, scope: !9338)
!9341 = !DILocation(line: 1052, column: 8, scope: !9313)
!9342 = !DILocation(line: 1053, column: 9, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 1053, column: 9)
!9344 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 1052, column: 25)
!9345 = !DILocation(line: 1053, column: 13, scope: !9343)
!9346 = !DILocation(line: 1053, column: 15, scope: !9343)
!9347 = !DILocation(line: 1053, column: 20, scope: !9343)
!9348 = !DILocation(line: 1053, column: 9, scope: !9344)
!9349 = !DILocation(line: 1054, column: 10, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 1054, column: 10)
!9351 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 1053, column: 34)
!9352 = !DILocation(line: 1054, column: 14, scope: !9350)
!9353 = !DILocation(line: 1054, column: 23, scope: !9350)
!9354 = !DILocation(line: 1054, column: 31, scope: !9350)
!9355 = !DILocation(line: 1054, column: 28, scope: !9350)
!9356 = !DILocation(line: 1054, column: 10, scope: !9351)
!9357 = !DILocation(line: 1055, column: 14, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 1054, column: 37)
!9359 = !DILocation(line: 1055, column: 12, scope: !9358)
!9360 = !DILocation(line: 1056, column: 17, scope: !9358)
!9361 = !DILocation(line: 1056, column: 15, scope: !9358)
!9362 = !DILocation(line: 1057, column: 6, scope: !9358)
!9363 = !DILocation(line: 1058, column: 5, scope: !9351)
!9364 = !DILocation(line: 1060, column: 13, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 1059, column: 10)
!9366 = !DILocation(line: 1060, column: 11, scope: !9365)
!9367 = !DILocation(line: 1061, column: 16, scope: !9365)
!9368 = !DILocation(line: 1061, column: 14, scope: !9365)
!9369 = !DILocation(line: 1063, column: 4, scope: !9344)
!9370 = !DILocation(line: 1064, column: 3, scope: !9313)
!9371 = !DILocation(line: 1065, column: 2, scope: !9304)
!9372 = !DILocation(line: 1047, column: 38, scope: !9300)
!9373 = !DILocation(line: 1047, column: 42, scope: !9300)
!9374 = !DILocation(line: 1047, column: 36, scope: !9300)
!9375 = !DILocation(line: 1047, column: 2, scope: !9300)
!9376 = distinct !{!9376, !9301, !9377}
!9377 = !DILocation(line: 1065, column: 2, scope: !9294)
!9378 = !DILocation(line: 1066, column: 9, scope: !9224)
!9379 = !DILocation(line: 1066, column: 2, scope: !9224)
!9380 = distinct !DISubprogram(name: "do_render_thread", scope: !3, file: !3, line: 1089, type: !9381, scopeLine: 1090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9381 = !DISubroutineType(types: !9382)
!9382 = !{!215, !215}
!9383 = !DILocalVariable(name: "thread_v", arg: 1, scope: !9380, file: !3, line: 1089, type: !215)
!9384 = !DILocation(line: 1089, column: 37, scope: !9380)
!9385 = !DILocalVariable(name: "thread", scope: !9380, file: !3, line: 1091, type: !9386)
!9386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5624, size: 64)
!9387 = !DILocation(line: 1091, column: 16, scope: !9380)
!9388 = !DILocation(line: 1091, column: 25, scope: !9380)
!9389 = !DILocalVariable(name: "pa", scope: !9380, file: !3, line: 1092, type: !5643)
!9390 = !DILocation(line: 1092, column: 14, scope: !9380)
!9391 = !DILocation(line: 1094, column: 2, scope: !9380)
!9392 = !DILocation(line: 1094, column: 36, scope: !9380)
!9393 = !DILocation(line: 1094, column: 44, scope: !9380)
!9394 = !DILocation(line: 1094, column: 15, scope: !9380)
!9395 = !DILocation(line: 1094, column: 13, scope: !9380)
!9396 = !DILocation(line: 1095, column: 16, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9380, file: !3, line: 1094, column: 57)
!9398 = !DILocation(line: 1095, column: 24, scope: !9397)
!9399 = !DILocation(line: 1095, column: 3, scope: !9397)
!9400 = !DILocation(line: 1095, column: 7, scope: !9397)
!9401 = !DILocation(line: 1095, column: 14, scope: !9397)
!9402 = !DILocation(line: 1096, column: 18, scope: !9397)
!9403 = !DILocation(line: 1096, column: 3, scope: !9397)
!9404 = !DILocation(line: 1098, column: 7, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9397, file: !3, line: 1098, column: 7)
!9406 = !DILocation(line: 1098, column: 15, scope: !9405)
!9407 = !DILocation(line: 1098, column: 7, scope: !9397)
!9408 = !DILocation(line: 1099, column: 4, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 1098, column: 31)
!9410 = !DILocation(line: 1099, column: 12, scope: !9409)
!9411 = !DILocation(line: 1099, column: 27, scope: !9409)
!9412 = !DILocation(line: 1099, column: 35, scope: !9409)
!9413 = !DILocation(line: 1099, column: 40, scope: !9409)
!9414 = !DILocation(line: 1099, column: 44, scope: !9409)
!9415 = !DILocation(line: 1100, column: 3, scope: !9409)
!9416 = !DILocation(line: 1102, column: 25, scope: !9397)
!9417 = !DILocation(line: 1102, column: 33, scope: !9397)
!9418 = !DILocation(line: 1102, column: 44, scope: !9397)
!9419 = !DILocation(line: 1102, column: 3, scope: !9397)
!9420 = !DILocation(line: 1104, column: 9, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9397, file: !3, line: 1104, column: 7)
!9422 = !DILocation(line: 1104, column: 22, scope: !9421)
!9423 = !DILocation(line: 1104, column: 7, scope: !9421)
!9424 = !DILocation(line: 1104, column: 7, scope: !9397)
!9425 = !DILocation(line: 1105, column: 4, scope: !9421)
!9426 = distinct !{!9426, !9391, !9427}
!9427 = !DILocation(line: 1106, column: 2, scope: !9380)
!9428 = !DILocation(line: 1108, column: 2, scope: !9380)
!9429 = distinct !DISubprogram(name: "print_part_stats", scope: !3, file: !3, line: 1069, type: !9430, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9430 = !DISubroutineType(types: !9431)
!9431 = !{null, !3576, !5643}
!9432 = !DILocalVariable(name: "re", arg: 1, scope: !9429, file: !3, line: 1069, type: !3576)
!9433 = !DILocation(line: 1069, column: 38, scope: !9429)
!9434 = !DILocalVariable(name: "pa", arg: 2, scope: !9429, file: !3, line: 1069, type: !5643)
!9435 = !DILocation(line: 1069, column: 54, scope: !9429)
!9436 = !DILocalVariable(name: "str", scope: !9429, file: !3, line: 1071, type: !271)
!9437 = !DILocation(line: 1071, column: 7, scope: !9429)
!9438 = !DILocation(line: 1073, column: 15, scope: !9429)
!9439 = !DILocation(line: 1073, column: 59, scope: !9429)
!9440 = !DILocation(line: 1073, column: 63, scope: !9429)
!9441 = !DILocation(line: 1073, column: 70, scope: !9429)
!9442 = !DILocation(line: 1073, column: 73, scope: !9429)
!9443 = !DILocation(line: 1073, column: 78, scope: !9429)
!9444 = !DILocation(line: 1073, column: 83, scope: !9429)
!9445 = !DILocation(line: 1073, column: 87, scope: !9429)
!9446 = !DILocation(line: 1073, column: 91, scope: !9429)
!9447 = !DILocation(line: 1073, column: 95, scope: !9429)
!9448 = !DILocation(line: 1073, column: 97, scope: !9429)
!9449 = !DILocation(line: 1073, column: 2, scope: !9429)
!9450 = !DILocation(line: 1074, column: 18, scope: !9429)
!9451 = !DILocation(line: 1074, column: 2, scope: !9429)
!9452 = !DILocation(line: 1074, column: 6, scope: !9429)
!9453 = !DILocation(line: 1074, column: 8, scope: !9429)
!9454 = !DILocation(line: 1074, column: 16, scope: !9429)
!9455 = !DILocation(line: 1075, column: 2, scope: !9429)
!9456 = !DILocation(line: 1075, column: 6, scope: !9429)
!9457 = !DILocation(line: 1075, column: 17, scope: !9429)
!9458 = !DILocation(line: 1075, column: 21, scope: !9429)
!9459 = !DILocation(line: 1075, column: 27, scope: !9429)
!9460 = !DILocation(line: 1075, column: 31, scope: !9429)
!9461 = !DILocation(line: 1076, column: 2, scope: !9429)
!9462 = !DILocation(line: 1076, column: 6, scope: !9429)
!9463 = !DILocation(line: 1076, column: 8, scope: !9429)
!9464 = !DILocation(line: 1076, column: 16, scope: !9429)
!9465 = !DILocation(line: 1077, column: 1, scope: !9429)
!9466 = distinct !DISubprogram(name: "BLI_rcti_cent_x", scope: !5572, file: !5572, line: 100, type: !5573, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9467 = !DILocalVariable(name: "rct", arg: 1, scope: !9466, file: !5572, line: 100, type: !5575)
!9468 = !DILocation(line: 100, column: 53, scope: !9466)
!9469 = !DILocation(line: 100, column: 68, scope: !9466)
!9470 = !DILocation(line: 100, column: 73, scope: !9466)
!9471 = !DILocation(line: 100, column: 80, scope: !9466)
!9472 = !DILocation(line: 100, column: 85, scope: !9466)
!9473 = !DILocation(line: 100, column: 78, scope: !9466)
!9474 = !DILocation(line: 100, column: 91, scope: !9466)
!9475 = !DILocation(line: 100, column: 60, scope: !9466)
!9476 = distinct !DISubprogram(name: "BLI_rcti_cent_y", scope: !5572, file: !5572, line: 101, type: !5573, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9477 = !DILocalVariable(name: "rct", arg: 1, scope: !9476, file: !5572, line: 101, type: !5575)
!9478 = !DILocation(line: 101, column: 53, scope: !9476)
!9479 = !DILocation(line: 101, column: 68, scope: !9476)
!9480 = !DILocation(line: 101, column: 73, scope: !9476)
!9481 = !DILocation(line: 101, column: 80, scope: !9476)
!9482 = !DILocation(line: 101, column: 85, scope: !9476)
!9483 = !DILocation(line: 101, column: 78, scope: !9476)
!9484 = !DILocation(line: 101, column: 91, scope: !9476)
!9485 = !DILocation(line: 101, column: 60, scope: !9476)
!9486 = distinct !DISubprogram(name: "do_part_thread", scope: !3, file: !3, line: 896, type: !9381, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9487 = !DILocalVariable(name: "pa_v", arg: 1, scope: !9486, file: !3, line: 896, type: !215)
!9488 = !DILocation(line: 896, column: 35, scope: !9486)
!9489 = !DILocalVariable(name: "pa", scope: !9486, file: !3, line: 898, type: !5643)
!9490 = !DILocation(line: 898, column: 14, scope: !9486)
!9491 = !DILocation(line: 898, column: 19, scope: !9486)
!9492 = !DILocation(line: 900, column: 2, scope: !9486)
!9493 = !DILocation(line: 900, column: 6, scope: !9486)
!9494 = !DILocation(line: 900, column: 13, scope: !9486)
!9495 = !DILocation(line: 903, column: 8, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 903, column: 6)
!9497 = !DILocation(line: 903, column: 21, scope: !9496)
!9498 = !DILocation(line: 903, column: 6, scope: !9496)
!9499 = !DILocation(line: 903, column: 26, scope: !9496)
!9500 = !DILocation(line: 903, column: 6, scope: !9486)
!9501 = !DILocation(line: 905, column: 10, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 905, column: 7)
!9503 = distinct !DILexicalBlock(scope: !9496, file: !3, line: 903, column: 32)
!9504 = !DILocation(line: 905, column: 8, scope: !9502)
!9505 = !DILocation(line: 905, column: 21, scope: !9502)
!9506 = !DILocation(line: 905, column: 29, scope: !9502)
!9507 = !DILocation(line: 905, column: 37, scope: !9502)
!9508 = !DILocation(line: 905, column: 7, scope: !9503)
!9509 = !DILocation(line: 906, column: 52, scope: !9502)
!9510 = !DILocation(line: 906, column: 56, scope: !9502)
!9511 = !DILocation(line: 906, column: 69, scope: !9502)
!9512 = !DILocation(line: 906, column: 73, scope: !9502)
!9513 = !DILocation(line: 906, column: 83, scope: !9502)
!9514 = !DILocation(line: 906, column: 87, scope: !9502)
!9515 = !DILocation(line: 906, column: 17, scope: !9502)
!9516 = !DILocation(line: 906, column: 4, scope: !9502)
!9517 = !DILocation(line: 906, column: 8, scope: !9502)
!9518 = !DILocation(line: 906, column: 15, scope: !9502)
!9519 = !DILocation(line: 908, column: 40, scope: !9502)
!9520 = !DILocation(line: 908, column: 44, scope: !9502)
!9521 = !DILocation(line: 908, column: 54, scope: !9502)
!9522 = !DILocation(line: 908, column: 58, scope: !9502)
!9523 = !DILocation(line: 908, column: 17, scope: !9502)
!9524 = !DILocation(line: 908, column: 4, scope: !9502)
!9525 = !DILocation(line: 908, column: 8, scope: !9502)
!9526 = !DILocation(line: 908, column: 15, scope: !9502)
!9527 = !DILocation(line: 916, column: 31, scope: !9503)
!9528 = !DILocation(line: 916, column: 39, scope: !9503)
!9529 = !DILocation(line: 916, column: 3, scope: !9503)
!9530 = !DILocation(line: 916, column: 7, scope: !9503)
!9531 = !DILocation(line: 916, column: 15, scope: !9503)
!9532 = !DILocation(line: 916, column: 27, scope: !9503)
!9533 = !DILocation(line: 918, column: 9, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 918, column: 7)
!9535 = !DILocation(line: 918, column: 7, scope: !9534)
!9536 = !DILocation(line: 918, column: 7, scope: !9503)
!9537 = !DILocation(line: 919, column: 23, scope: !9534)
!9538 = !DILocation(line: 919, column: 4, scope: !9534)
!9539 = !DILocation(line: 920, column: 14, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9534, file: !3, line: 920, column: 12)
!9541 = !DILocation(line: 920, column: 12, scope: !9540)
!9542 = !DILocation(line: 920, column: 12, scope: !9534)
!9543 = !DILocation(line: 921, column: 21, scope: !9540)
!9544 = !DILocation(line: 921, column: 4, scope: !9540)
!9545 = !DILocation(line: 923, column: 19, scope: !9540)
!9546 = !DILocation(line: 923, column: 4, scope: !9540)
!9547 = !DILocation(line: 927, column: 3, scope: !9503)
!9548 = !DILocation(line: 930, column: 9, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 930, column: 7)
!9550 = !DILocation(line: 930, column: 17, scope: !9549)
!9551 = !DILocation(line: 930, column: 7, scope: !9549)
!9552 = !DILocation(line: 930, column: 7, scope: !9503)
!9553 = !DILocation(line: 931, column: 35, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 930, column: 30)
!9555 = !DILocation(line: 931, column: 43, scope: !9554)
!9556 = !DILocation(line: 931, column: 47, scope: !9554)
!9557 = !DILocation(line: 931, column: 4, scope: !9554)
!9558 = !DILocation(line: 932, column: 3, scope: !9554)
!9559 = !DILocation(line: 933, column: 12, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 933, column: 12)
!9561 = !DILocation(line: 933, column: 12, scope: !9549)
!9562 = !DILocation(line: 935, column: 10, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 935, column: 8)
!9564 = distinct !DILexicalBlock(scope: !9560, file: !3, line: 933, column: 47)
!9565 = !DILocation(line: 935, column: 23, scope: !9563)
!9566 = !DILocation(line: 935, column: 8, scope: !9563)
!9567 = !DILocation(line: 935, column: 28, scope: !9563)
!9568 = !DILocation(line: 935, column: 36, scope: !9563)
!9569 = !DILocation(line: 935, column: 44, scope: !9563)
!9570 = !DILocation(line: 935, column: 8, scope: !9564)
!9571 = !DILocation(line: 937, column: 4, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 935, column: 84)
!9573 = !DILocation(line: 939, column: 27, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 938, column: 9)
!9575 = !DILocation(line: 939, column: 35, scope: !9574)
!9576 = !DILocation(line: 939, column: 39, scope: !9574)
!9577 = !DILocation(line: 939, column: 5, scope: !9574)
!9578 = !DILocation(line: 941, column: 3, scope: !9564)
!9579 = !DILocation(line: 943, column: 3, scope: !9503)
!9580 = !DILocation(line: 944, column: 2, scope: !9503)
!9581 = !DILocation(line: 946, column: 2, scope: !9486)
!9582 = !DILocation(line: 946, column: 6, scope: !9486)
!9583 = !DILocation(line: 946, column: 13, scope: !9486)
!9584 = !DILocation(line: 948, column: 2, scope: !9486)
!9585 = distinct !DISubprogram(name: "render_composit_stats", scope: !3, file: !3, line: 1951, type: !1181, scopeLine: 1952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9586 = !DILocalVariable(name: "UNUSED_arg", arg: 1, scope: !9585, file: !3, line: 1951, type: !215)
!9587 = !DILocation(line: 1951, column: 41, scope: !9585)
!9588 = !DILocalVariable(name: "str", arg: 2, scope: !9585, file: !3, line: 1951, type: !988)
!9589 = !DILocation(line: 1951, column: 60, scope: !9585)
!9590 = !DILocation(line: 1953, column: 16, scope: !9585)
!9591 = !DILocation(line: 1953, column: 14, scope: !9585)
!9592 = !DILocation(line: 1954, column: 4, scope: !9585)
!9593 = !DILocation(line: 1954, column: 17, scope: !9585)
!9594 = !DILocation(line: 1954, column: 2, scope: !9585)
!9595 = !DILocation(line: 1955, column: 14, scope: !9585)
!9596 = !DILocation(line: 1956, column: 1, scope: !9585)
!9597 = distinct !DISubprogram(name: "tag_scenes_for_render", scope: !3, file: !3, line: 1843, type: !3574, scopeLine: 1844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9598 = !DILocalVariable(name: "re", arg: 1, scope: !9597, file: !3, line: 1843, type: !3576)
!9599 = !DILocation(line: 1843, column: 43, scope: !9597)
!9600 = !DILocalVariable(name: "node", scope: !9597, file: !3, line: 1845, type: !850)
!9601 = !DILocation(line: 1845, column: 9, scope: !9597)
!9602 = !DILocalVariable(name: "sce", scope: !9597, file: !3, line: 1846, type: !217)
!9603 = !DILocation(line: 1846, column: 9, scope: !9597)
!9604 = !DILocalVariable(name: "renderlay", scope: !9597, file: !3, line: 1848, type: !7)
!9605 = !DILocation(line: 1848, column: 6, scope: !9597)
!9606 = !DILocation(line: 1848, column: 18, scope: !9597)
!9607 = !DILocation(line: 1848, column: 22, scope: !9597)
!9608 = !DILocation(line: 1851, column: 13, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 1851, column: 2)
!9610 = !DILocation(line: 1851, column: 17, scope: !9609)
!9611 = !DILocation(line: 1851, column: 23, scope: !9609)
!9612 = !DILocation(line: 1851, column: 29, scope: !9609)
!9613 = !DILocation(line: 1851, column: 11, scope: !9609)
!9614 = !DILocation(line: 1851, column: 7, scope: !9609)
!9615 = !DILocation(line: 1851, column: 36, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 1851, column: 2)
!9617 = !DILocation(line: 1851, column: 2, scope: !9609)
!9618 = !DILocation(line: 1852, column: 3, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 1851, column: 61)
!9620 = !DILocation(line: 1852, column: 8, scope: !9619)
!9621 = !DILocation(line: 1852, column: 11, scope: !9619)
!9622 = !DILocation(line: 1852, column: 16, scope: !9619)
!9623 = !DILocation(line: 1854, column: 36, scope: !9619)
!9624 = !DILocation(line: 1854, column: 41, scope: !9619)
!9625 = !DILocation(line: 1854, column: 3, scope: !9619)
!9626 = !DILocation(line: 1856, column: 2, scope: !9619)
!9627 = !DILocation(line: 1851, column: 47, scope: !9616)
!9628 = !DILocation(line: 1851, column: 52, scope: !9616)
!9629 = !DILocation(line: 1851, column: 55, scope: !9616)
!9630 = !DILocation(line: 1851, column: 45, scope: !9616)
!9631 = !DILocation(line: 1851, column: 2, scope: !9616)
!9632 = distinct !{!9632, !9617, !9633}
!9633 = !DILocation(line: 1856, column: 2, scope: !9609)
!9634 = !DILocation(line: 1869, column: 19, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 1869, column: 6)
!9636 = !DILocation(line: 1869, column: 6, scope: !9635)
!9637 = !DILocation(line: 1869, column: 23, scope: !9635)
!9638 = !DILocation(line: 1869, column: 49, scope: !9635)
!9639 = !DILocation(line: 1869, column: 53, scope: !9635)
!9640 = !DILocation(line: 1869, column: 26, scope: !9635)
!9641 = !DILocation(line: 1869, column: 6, scope: !9597)
!9642 = !DILocation(line: 1870, column: 3, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9635, file: !3, line: 1869, column: 64)
!9644 = !DILocation(line: 1870, column: 7, scope: !9643)
!9645 = !DILocation(line: 1870, column: 14, scope: !9643)
!9646 = !DILocation(line: 1870, column: 17, scope: !9643)
!9647 = !DILocation(line: 1870, column: 22, scope: !9643)
!9648 = !DILocation(line: 1872, column: 36, scope: !9643)
!9649 = !DILocation(line: 1872, column: 40, scope: !9643)
!9650 = !DILocation(line: 1872, column: 47, scope: !9643)
!9651 = !DILocation(line: 1872, column: 3, scope: !9643)
!9652 = !DILocation(line: 1874, column: 2, scope: !9643)
!9653 = !DILocation(line: 1876, column: 6, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 1876, column: 6)
!9655 = !DILocation(line: 1876, column: 10, scope: !9654)
!9656 = !DILocation(line: 1876, column: 17, scope: !9654)
!9657 = !DILocation(line: 1876, column: 26, scope: !9654)
!9658 = !DILocation(line: 1876, column: 6, scope: !9597)
!9659 = !DILocation(line: 1876, column: 35, scope: !9654)
!9660 = !DILocation(line: 1879, column: 14, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 1879, column: 2)
!9662 = !DILocation(line: 1879, column: 18, scope: !9661)
!9663 = !DILocation(line: 1879, column: 25, scope: !9661)
!9664 = !DILocation(line: 1879, column: 35, scope: !9661)
!9665 = !DILocation(line: 1879, column: 41, scope: !9661)
!9666 = !DILocation(line: 1879, column: 12, scope: !9661)
!9667 = !DILocation(line: 1879, column: 7, scope: !9661)
!9668 = !DILocation(line: 1879, column: 48, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9661, file: !3, line: 1879, column: 2)
!9670 = !DILocation(line: 1879, column: 2, scope: !9661)
!9671 = !DILocation(line: 1880, column: 3, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 1879, column: 73)
!9673 = !DILocation(line: 1880, column: 9, scope: !9672)
!9674 = !DILocation(line: 1880, column: 14, scope: !9672)
!9675 = !DILocation(line: 1881, column: 7, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 1881, column: 7)
!9677 = !DILocation(line: 1881, column: 13, scope: !9676)
!9678 = !DILocation(line: 1881, column: 18, scope: !9676)
!9679 = !DILocation(line: 1881, column: 39, scope: !9676)
!9680 = !DILocation(line: 1881, column: 43, scope: !9676)
!9681 = !DILocation(line: 1881, column: 49, scope: !9676)
!9682 = !DILocation(line: 1881, column: 54, scope: !9676)
!9683 = !DILocation(line: 1881, column: 68, scope: !9676)
!9684 = !DILocation(line: 1881, column: 7, scope: !9672)
!9685 = !DILocation(line: 1882, column: 8, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9687, file: !3, line: 1882, column: 8)
!9687 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 1881, column: 74)
!9688 = !DILocation(line: 1882, column: 14, scope: !9686)
!9689 = !DILocation(line: 1882, column: 8, scope: !9687)
!9690 = !DILocation(line: 1883, column: 10, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9692, file: !3, line: 1883, column: 9)
!9692 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 1882, column: 18)
!9693 = !DILocation(line: 1883, column: 9, scope: !9692)
!9694 = !DILocation(line: 1884, column: 33, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 1884, column: 10)
!9696 = distinct !DILexicalBlock(scope: !9691, file: !3, line: 1883, column: 50)
!9697 = !DILocation(line: 1884, column: 37, scope: !9695)
!9698 = !DILocation(line: 1884, column: 44, scope: !9695)
!9699 = !DILocation(line: 1884, column: 54, scope: !9695)
!9700 = !DILocation(line: 1884, column: 10, scope: !9695)
!9701 = !DILocation(line: 1884, column: 10, scope: !9696)
!9702 = !DILocalVariable(name: "scene", scope: !9703, file: !3, line: 1885, type: !217)
!9703 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 1884, column: 61)
!9704 = !DILocation(line: 1885, column: 14, scope: !9703)
!9705 = !DILocation(line: 1885, column: 31, scope: !9703)
!9706 = !DILocation(line: 1885, column: 37, scope: !9703)
!9707 = !DILocation(line: 1885, column: 22, scope: !9703)
!9708 = !DILocation(line: 1887, column: 11, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 1887, column: 11)
!9710 = !DILocation(line: 1887, column: 18, scope: !9709)
!9711 = !DILocation(line: 1887, column: 20, scope: !9709)
!9712 = !DILocation(line: 1887, column: 30, scope: !9709)
!9713 = !DILocation(line: 1887, column: 11, scope: !9703)
!9714 = !DILocation(line: 1888, column: 20, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9709, file: !3, line: 1887, column: 48)
!9716 = !DILocation(line: 1888, column: 24, scope: !9715)
!9717 = !DILocation(line: 1888, column: 87, scope: !9715)
!9718 = !DILocation(line: 1888, column: 94, scope: !9715)
!9719 = !DILocation(line: 1888, column: 97, scope: !9715)
!9720 = !DILocation(line: 1888, column: 102, scope: !9715)
!9721 = !DILocation(line: 1888, column: 8, scope: !9715)
!9722 = !DILocation(line: 1891, column: 79, scope: !9715)
!9723 = !DILocation(line: 1891, column: 86, scope: !9715)
!9724 = !DILocation(line: 1891, column: 89, scope: !9715)
!9725 = !DILocation(line: 1891, column: 94, scope: !9715)
!9726 = !DILocation(line: 1891, column: 8, scope: !9715)
!9727 = !DILocation(line: 1893, column: 8, scope: !9715)
!9728 = !DILocation(line: 1893, column: 15, scope: !9715)
!9729 = !DILocation(line: 1893, column: 17, scope: !9715)
!9730 = !DILocation(line: 1893, column: 27, scope: !9715)
!9731 = !DILocation(line: 1894, column: 7, scope: !9715)
!9732 = !DILocation(line: 1895, column: 6, scope: !9703)
!9733 = !DILocation(line: 1896, column: 5, scope: !9696)
!9734 = !DILocation(line: 1898, column: 9, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9692, file: !3, line: 1898, column: 9)
!9736 = !DILocation(line: 1898, column: 15, scope: !9735)
!9737 = !DILocation(line: 1898, column: 27, scope: !9735)
!9738 = !DILocation(line: 1898, column: 31, scope: !9735)
!9739 = !DILocation(line: 1898, column: 21, scope: !9735)
!9740 = !DILocation(line: 1898, column: 18, scope: !9735)
!9741 = !DILocation(line: 1898, column: 9, scope: !9692)
!9742 = !DILocation(line: 1899, column: 11, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 1899, column: 10)
!9744 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 1898, column: 38)
!9745 = !DILocation(line: 1899, column: 17, scope: !9743)
!9746 = !DILocation(line: 1899, column: 21, scope: !9743)
!9747 = !DILocation(line: 1899, column: 26, scope: !9743)
!9748 = !DILocation(line: 1899, column: 38, scope: !9743)
!9749 = !DILocation(line: 1899, column: 10, scope: !9744)
!9750 = !DILocalVariable(name: "scene", scope: !9751, file: !3, line: 1900, type: !217)
!9751 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 1899, column: 44)
!9752 = !DILocation(line: 1900, column: 14, scope: !9751)
!9753 = !DILocation(line: 1900, column: 32, scope: !9751)
!9754 = !DILocation(line: 1900, column: 38, scope: !9751)
!9755 = !DILocation(line: 1900, column: 22, scope: !9751)
!9756 = !DILocation(line: 1901, column: 45, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9751, file: !3, line: 1901, column: 11)
!9758 = !DILocation(line: 1901, column: 11, scope: !9757)
!9759 = !DILocation(line: 1901, column: 11, scope: !9751)
!9760 = !DILocation(line: 1902, column: 8, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 1901, column: 53)
!9762 = !DILocation(line: 1902, column: 14, scope: !9761)
!9763 = !DILocation(line: 1902, column: 19, scope: !9761)
!9764 = !DILocation(line: 1903, column: 8, scope: !9761)
!9765 = !DILocation(line: 1903, column: 14, scope: !9761)
!9766 = !DILocation(line: 1903, column: 18, scope: !9761)
!9767 = !DILocation(line: 1903, column: 23, scope: !9761)
!9768 = !DILocation(line: 1905, column: 41, scope: !9761)
!9769 = !DILocation(line: 1905, column: 48, scope: !9761)
!9770 = !DILocation(line: 1905, column: 8, scope: !9761)
!9771 = !DILocation(line: 1907, column: 7, scope: !9761)
!9772 = !DILocation(line: 1908, column: 6, scope: !9751)
!9773 = !DILocation(line: 1909, column: 5, scope: !9744)
!9774 = !DILocation(line: 1910, column: 4, scope: !9692)
!9775 = !DILocation(line: 1911, column: 3, scope: !9687)
!9776 = !DILocation(line: 1912, column: 2, scope: !9672)
!9777 = !DILocation(line: 1879, column: 61, scope: !9669)
!9778 = !DILocation(line: 1879, column: 67, scope: !9669)
!9779 = !DILocation(line: 1879, column: 59, scope: !9669)
!9780 = !DILocation(line: 1879, column: 2, scope: !9669)
!9781 = distinct !{!9781, !9670, !9782}
!9782 = !DILocation(line: 1912, column: 2, scope: !9661)
!9783 = !DILocation(line: 1914, column: 1, scope: !9597)
!9784 = distinct !DISubprogram(name: "tag_dependend_objects_for_render", scope: !3, file: !3, line: 1791, type: !9785, scopeLine: 1792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9785 = !DISubroutineType(types: !9786)
!9786 = !{null, !217, !7}
!9787 = !DILocalVariable(name: "scene", arg: 1, scope: !9784, file: !3, line: 1791, type: !217)
!9788 = !DILocation(line: 1791, column: 53, scope: !9784)
!9789 = !DILocalVariable(name: "renderlay", arg: 2, scope: !9784, file: !3, line: 1791, type: !7)
!9790 = !DILocation(line: 1791, column: 64, scope: !9784)
!9791 = !DILocalVariable(name: "sce_iter", scope: !9784, file: !3, line: 1793, type: !217)
!9792 = !DILocation(line: 1793, column: 9, scope: !9784)
!9793 = !DILocalVariable(name: "base", scope: !9784, file: !3, line: 1794, type: !9794)
!9794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9795, size: 64)
!9795 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !6, line: 75, baseType: !2186)
!9796 = !DILocation(line: 1794, column: 8, scope: !9784)
!9797 = !DILocation(line: 1795, column: 7, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 1795, column: 2)
!9799 = !DILocation(line: 1795, column: 7, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 1795, column: 2)
!9801 = !DILocation(line: 1795, column: 2, scope: !9798)
!9802 = !DILocalVariable(name: "object", scope: !9803, file: !3, line: 1796, type: !3465)
!9803 = distinct !DILexicalBlock(scope: !9800, file: !3, line: 1795, column: 41)
!9804 = !DILocation(line: 1796, column: 11, scope: !9803)
!9805 = !DILocation(line: 1796, column: 20, scope: !9803)
!9806 = !DILocation(line: 1796, column: 26, scope: !9803)
!9807 = !DILocation(line: 1798, column: 8, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9803, file: !3, line: 1798, column: 7)
!9809 = !DILocation(line: 1798, column: 14, scope: !9808)
!9810 = !DILocation(line: 1798, column: 20, scope: !9808)
!9811 = !DILocation(line: 1798, column: 18, scope: !9808)
!9812 = !DILocation(line: 1798, column: 31, scope: !9808)
!9813 = !DILocation(line: 1798, column: 7, scope: !9803)
!9814 = !DILocation(line: 1799, column: 4, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 1798, column: 37)
!9816 = !DILocation(line: 1802, column: 7, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9803, file: !3, line: 1802, column: 7)
!9818 = !DILocation(line: 1802, column: 15, scope: !9817)
!9819 = !DILocation(line: 1802, column: 20, scope: !9817)
!9820 = !DILocation(line: 1802, column: 7, scope: !9803)
!9821 = !DILocation(line: 1803, column: 39, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 1803, column: 8)
!9823 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 1802, column: 32)
!9824 = !DILocation(line: 1803, column: 8, scope: !9822)
!9825 = !DILocation(line: 1803, column: 8, scope: !9823)
!9826 = !DILocalVariable(name: "md", scope: !9827, file: !3, line: 1804, type: !9828)
!9827 = distinct !DILexicalBlock(scope: !9822, file: !3, line: 1803, column: 48)
!9828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!9829 = !DILocation(line: 1804, column: 19, scope: !9827)
!9830 = !DILocalVariable(name: "virtualModifierData", scope: !9827, file: !3, line: 1805, type: !9831)
!9831 = !DIDerivedType(tag: DW_TAG_typedef, name: "VirtualModifierData", file: !9832, line: 391, baseType: !9833)
!9832 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_modifier.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VirtualModifierData", file: !9832, line: 386, size: 5568, elements: !9834)
!9834 = !{!9835, !9846, !9855, !9865}
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "amd", scope: !9833, file: !9832, line: 387, baseType: !9836, size: 1600)
!9836 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArmatureModifierData", file: !146, line: 535, baseType: !9837)
!9837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArmatureModifierData", file: !146, line: 527, size: 1600, elements: !9838)
!9838 = !{!9839, !9840, !9841, !9842, !9843, !9844, !9845}
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !9837, file: !146, line: 528, baseType: !2932, size: 896)
!9840 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !9837, file: !146, line: 530, baseType: !255, size: 16, offset: 896)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "multi", scope: !9837, file: !146, line: 530, baseType: !255, size: 16, offset: 912)
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !9837, file: !146, line: 531, baseType: !7, size: 32, offset: 928)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !9837, file: !146, line: 532, baseType: !296, size: 64, offset: 960)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "prevCos", scope: !9837, file: !146, line: 533, baseType: !778, size: 64, offset: 1024)
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "defgrp_name", scope: !9837, file: !146, line: 534, baseType: !271, size: 512, offset: 1088)
!9846 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9833, file: !9832, line: 388, baseType: !9847, size: 1536, offset: 1600)
!9847 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveModifierData", file: !146, line: 154, baseType: !9848)
!9848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveModifierData", file: !146, line: 147, size: 1536, elements: !9849)
!9849 = !{!9850, !9851, !9852, !9853, !9854}
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !9848, file: !146, line: 148, baseType: !2932, size: 896)
!9851 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !9848, file: !146, line: 150, baseType: !296, size: 64, offset: 896)
!9852 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9848, file: !146, line: 151, baseType: !271, size: 512, offset: 960)
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "defaxis", scope: !9848, file: !146, line: 152, baseType: !255, size: 16, offset: 1472)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9848, file: !146, line: 153, baseType: !2583, size: 48, offset: 1488)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "lmd", scope: !9833, file: !9832, line: 389, baseType: !9856, size: 1536, offset: 3136)
!9856 = !DIDerivedType(tag: DW_TAG_typedef, name: "LatticeModifierData", file: !146, line: 145, baseType: !9857)
!9857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeModifierData", file: !146, line: 138, size: 1536, elements: !9858)
!9858 = !{!9859, !9860, !9861, !9862, !9863}
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !9857, file: !146, line: 139, baseType: !2932, size: 896)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !9857, file: !146, line: 141, baseType: !296, size: 64, offset: 896)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9857, file: !146, line: 142, baseType: !271, size: 512, offset: 960)
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !9857, file: !146, line: 143, baseType: !216, size: 32, offset: 1472)
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9857, file: !146, line: 144, baseType: !9864, size: 32, offset: 1504)
!9864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 32, elements: !535)
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !9833, file: !9832, line: 390, baseType: !9866, size: 896, offset: 4672)
!9866 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShapeKeyModifierData", file: !146, line: 816, baseType: !9867)
!9867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShapeKeyModifierData", file: !146, line: 814, size: 896, elements: !9868)
!9868 = !{!9869}
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !9867, file: !146, line: 815, baseType: !2932, size: 896)
!9870 = !DILocation(line: 1805, column: 25, scope: !9827)
!9871 = !DILocation(line: 1807, column: 48, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 1807, column: 5)
!9873 = !DILocation(line: 1807, column: 15, scope: !9872)
!9874 = !DILocation(line: 1807, column: 13, scope: !9872)
!9875 = !DILocation(line: 1807, column: 10, scope: !9872)
!9876 = !DILocation(line: 1808, column: 10, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9872, file: !3, line: 1807, column: 5)
!9878 = !DILocation(line: 1807, column: 5, scope: !9872)
!9879 = !DILocation(line: 1811, column: 30, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 1811, column: 10)
!9881 = distinct !DILexicalBlock(scope: !9877, file: !3, line: 1810, column: 5)
!9882 = !DILocation(line: 1811, column: 37, scope: !9880)
!9883 = !DILocation(line: 1811, column: 11, scope: !9880)
!9884 = !DILocation(line: 1811, column: 10, scope: !9881)
!9885 = !DILocation(line: 1812, column: 7, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9880, file: !3, line: 1811, column: 64)
!9887 = !DILocation(line: 1815, column: 10, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 1815, column: 10)
!9889 = !DILocation(line: 1815, column: 14, scope: !9888)
!9890 = !DILocation(line: 1815, column: 19, scope: !9888)
!9891 = !DILocation(line: 1815, column: 10, scope: !9881)
!9892 = !DILocalVariable(name: "bmd", scope: !9893, file: !3, line: 1816, type: !2927)
!9893 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 1815, column: 45)
!9894 = !DILocation(line: 1816, column: 28, scope: !9893)
!9895 = !DILocation(line: 1816, column: 57, scope: !9893)
!9896 = !DILocation(line: 1816, column: 34, scope: !9893)
!9897 = !DILocation(line: 1817, column: 11, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9893, file: !3, line: 1817, column: 11)
!9899 = !DILocation(line: 1817, column: 16, scope: !9898)
!9900 = !DILocation(line: 1817, column: 23, scope: !9898)
!9901 = !DILocation(line: 1817, column: 26, scope: !9898)
!9902 = !DILocation(line: 1817, column: 31, scope: !9898)
!9903 = !DILocation(line: 1817, column: 39, scope: !9898)
!9904 = !DILocation(line: 1817, column: 44, scope: !9898)
!9905 = !DILocation(line: 1817, column: 11, scope: !9893)
!9906 = !DILocation(line: 1818, column: 27, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 1817, column: 56)
!9908 = !DILocation(line: 1818, column: 32, scope: !9907)
!9909 = !DILocation(line: 1818, column: 40, scope: !9907)
!9910 = !DILocation(line: 1818, column: 8, scope: !9907)
!9911 = !DILocation(line: 1819, column: 7, scope: !9907)
!9912 = !DILocation(line: 1820, column: 6, scope: !9893)
!9913 = !DILocation(line: 1821, column: 15, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 1821, column: 15)
!9915 = !DILocation(line: 1821, column: 19, scope: !9914)
!9916 = !DILocation(line: 1821, column: 24, scope: !9914)
!9917 = !DILocation(line: 1821, column: 15, scope: !9888)
!9918 = !DILocalVariable(name: "amd", scope: !9919, file: !3, line: 1822, type: !2948)
!9919 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 1821, column: 48)
!9920 = !DILocation(line: 1822, column: 26, scope: !9919)
!9921 = !DILocation(line: 1822, column: 53, scope: !9919)
!9922 = !DILocation(line: 1822, column: 32, scope: !9919)
!9923 = !DILocation(line: 1823, column: 11, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9919, file: !3, line: 1823, column: 11)
!9925 = !DILocation(line: 1823, column: 16, scope: !9924)
!9926 = !DILocation(line: 1823, column: 26, scope: !9924)
!9927 = !DILocation(line: 1823, column: 29, scope: !9924)
!9928 = !DILocation(line: 1823, column: 34, scope: !9924)
!9929 = !DILocation(line: 1823, column: 45, scope: !9924)
!9930 = !DILocation(line: 1823, column: 50, scope: !9924)
!9931 = !DILocation(line: 1823, column: 11, scope: !9919)
!9932 = !DILocation(line: 1824, column: 27, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9924, file: !3, line: 1823, column: 62)
!9934 = !DILocation(line: 1824, column: 32, scope: !9933)
!9935 = !DILocation(line: 1824, column: 43, scope: !9933)
!9936 = !DILocation(line: 1824, column: 8, scope: !9933)
!9937 = !DILocation(line: 1825, column: 7, scope: !9933)
!9938 = !DILocation(line: 1826, column: 11, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9919, file: !3, line: 1826, column: 11)
!9940 = !DILocation(line: 1826, column: 16, scope: !9939)
!9941 = !DILocation(line: 1826, column: 24, scope: !9939)
!9942 = !DILocation(line: 1826, column: 27, scope: !9939)
!9943 = !DILocation(line: 1826, column: 32, scope: !9939)
!9944 = !DILocation(line: 1826, column: 41, scope: !9939)
!9945 = !DILocation(line: 1826, column: 46, scope: !9939)
!9946 = !DILocation(line: 1826, column: 11, scope: !9919)
!9947 = !DILocation(line: 1827, column: 27, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9939, file: !3, line: 1826, column: 58)
!9949 = !DILocation(line: 1827, column: 32, scope: !9948)
!9950 = !DILocation(line: 1827, column: 41, scope: !9948)
!9951 = !DILocation(line: 1827, column: 8, scope: !9948)
!9952 = !DILocation(line: 1828, column: 7, scope: !9948)
!9953 = !DILocation(line: 1829, column: 6, scope: !9919)
!9954 = !DILocation(line: 1830, column: 15, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 1830, column: 15)
!9956 = !DILocation(line: 1830, column: 19, scope: !9955)
!9957 = !DILocation(line: 1830, column: 24, scope: !9955)
!9958 = !DILocation(line: 1830, column: 15, scope: !9914)
!9959 = !DILocalVariable(name: "smd", scope: !9960, file: !3, line: 1831, type: !2965)
!9960 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 1830, column: 53)
!9961 = !DILocation(line: 1831, column: 31, scope: !9960)
!9962 = !DILocation(line: 1831, column: 63, scope: !9960)
!9963 = !DILocation(line: 1831, column: 37, scope: !9960)
!9964 = !DILocation(line: 1832, column: 11, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 1832, column: 11)
!9966 = !DILocation(line: 1832, column: 16, scope: !9965)
!9967 = !DILocation(line: 1832, column: 24, scope: !9965)
!9968 = !DILocation(line: 1832, column: 27, scope: !9965)
!9969 = !DILocation(line: 1832, column: 32, scope: !9965)
!9970 = !DILocation(line: 1832, column: 40, scope: !9965)
!9971 = !DILocation(line: 1832, column: 45, scope: !9965)
!9972 = !DILocation(line: 1832, column: 11, scope: !9960)
!9973 = !DILocation(line: 1833, column: 27, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 1832, column: 57)
!9975 = !DILocation(line: 1833, column: 32, scope: !9974)
!9976 = !DILocation(line: 1833, column: 40, scope: !9974)
!9977 = !DILocation(line: 1833, column: 8, scope: !9974)
!9978 = !DILocation(line: 1834, column: 7, scope: !9974)
!9979 = !DILocation(line: 1835, column: 6, scope: !9960)
!9980 = !DILocation(line: 1836, column: 5, scope: !9881)
!9981 = !DILocation(line: 1809, column: 15, scope: !9877)
!9982 = !DILocation(line: 1809, column: 19, scope: !9877)
!9983 = !DILocation(line: 1809, column: 13, scope: !9877)
!9984 = !DILocation(line: 1807, column: 5, scope: !9877)
!9985 = distinct !{!9985, !9878, !9986}
!9986 = !DILocation(line: 1836, column: 5, scope: !9872)
!9987 = !DILocation(line: 1837, column: 4, scope: !9827)
!9988 = !DILocation(line: 1838, column: 3, scope: !9823)
!9989 = !DILocation(line: 1839, column: 2, scope: !9803)
!9990 = !DILocation(line: 1795, column: 2, scope: !9800)
!9991 = distinct !{!9991, !9801, !9992}
!9992 = !DILocation(line: 1839, column: 2, scope: !9798)
!9993 = !DILocation(line: 1840, column: 1, scope: !9784)
!9994 = distinct !DISubprogram(name: "rlayer_node_uses_alpha", scope: !3, file: !3, line: 1749, type: !9995, scopeLine: 1750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!9995 = !DISubroutineType(types: !9996)
!9996 = !{!916, !2981, !850}
!9997 = !DILocalVariable(name: "ntree", arg: 1, scope: !9994, file: !3, line: 1749, type: !2981)
!9998 = !DILocation(line: 1749, column: 47, scope: !9994)
!9999 = !DILocalVariable(name: "node", arg: 2, scope: !9994, file: !3, line: 1749, type: !850)
!10000 = !DILocation(line: 1749, column: 61, scope: !9994)
!10001 = !DILocalVariable(name: "sock", scope: !9994, file: !3, line: 1751, type: !854)
!10002 = !DILocation(line: 1751, column: 15, scope: !9994)
!10003 = !DILocation(line: 1753, column: 14, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 1753, column: 2)
!10005 = !DILocation(line: 1753, column: 20, scope: !10004)
!10006 = !DILocation(line: 1753, column: 28, scope: !10004)
!10007 = !DILocation(line: 1753, column: 12, scope: !10004)
!10008 = !DILocation(line: 1753, column: 7, scope: !10004)
!10009 = !DILocation(line: 1753, column: 35, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1753, column: 2)
!10011 = !DILocation(line: 1753, column: 2, scope: !10004)
!10012 = !DILocation(line: 1755, column: 7, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10014, file: !3, line: 1755, column: 7)
!10014 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 1753, column: 60)
!10015 = !DILocation(line: 1755, column: 34, scope: !10013)
!10016 = !DILocation(line: 1755, column: 58, scope: !10013)
!10017 = !DILocation(line: 1755, column: 65, scope: !10013)
!10018 = !DILocation(line: 1755, column: 37, scope: !10013)
!10019 = !DILocation(line: 1755, column: 71, scope: !10013)
!10020 = !DILocation(line: 1755, column: 7, scope: !10014)
!10021 = !DILocation(line: 1756, column: 4, scope: !10013)
!10022 = !DILocation(line: 1757, column: 2, scope: !10014)
!10023 = !DILocation(line: 1753, column: 48, scope: !10010)
!10024 = !DILocation(line: 1753, column: 54, scope: !10010)
!10025 = !DILocation(line: 1753, column: 46, scope: !10010)
!10026 = !DILocation(line: 1753, column: 2, scope: !10010)
!10027 = distinct !{!10027, !10011, !10028}
!10028 = !DILocation(line: 1757, column: 2, scope: !10004)
!10029 = !DILocation(line: 1759, column: 2, scope: !9994)
!10030 = !DILocation(line: 1760, column: 1, scope: !9994)
!10031 = distinct !DISubprogram(name: "node_tree_has_composite_output", scope: !3, file: !3, line: 2566, type: !10032, scopeLine: 2567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!10032 = !DISubroutineType(types: !10033)
!10033 = !{!916, !2981}
!10034 = !DILocalVariable(name: "ntree", arg: 1, scope: !10031, file: !3, line: 2566, type: !2981)
!10035 = !DILocation(line: 2566, column: 55, scope: !10031)
!10036 = !DILocalVariable(name: "node", scope: !10031, file: !3, line: 2568, type: !850)
!10037 = !DILocation(line: 2568, column: 9, scope: !10031)
!10038 = !DILocation(line: 2570, column: 14, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 2570, column: 2)
!10040 = !DILocation(line: 2570, column: 21, scope: !10039)
!10041 = !DILocation(line: 2570, column: 27, scope: !10039)
!10042 = !DILocation(line: 2570, column: 12, scope: !10039)
!10043 = !DILocation(line: 2570, column: 7, scope: !10039)
!10044 = !DILocation(line: 2570, column: 34, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10039, file: !3, line: 2570, column: 2)
!10046 = !DILocation(line: 2570, column: 2, scope: !10039)
!10047 = !DILocation(line: 2571, column: 7, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !3, line: 2571, column: 7)
!10049 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 2570, column: 59)
!10050 = !DILocation(line: 2571, column: 7, scope: !10049)
!10051 = !DILocation(line: 2572, column: 4, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 2571, column: 67)
!10053 = !DILocation(line: 2574, column: 12, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 2574, column: 12)
!10055 = !DILocation(line: 2574, column: 18, scope: !10054)
!10056 = !DILocation(line: 2574, column: 23, scope: !10054)
!10057 = !DILocation(line: 2574, column: 12, scope: !10048)
!10058 = !DILocation(line: 2575, column: 8, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10060, file: !3, line: 2575, column: 8)
!10060 = distinct !DILexicalBlock(scope: !10054, file: !3, line: 2574, column: 38)
!10061 = !DILocation(line: 2575, column: 14, scope: !10059)
!10062 = !DILocation(line: 2575, column: 8, scope: !10060)
!10063 = !DILocation(line: 2576, column: 53, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10065, file: !3, line: 2576, column: 9)
!10065 = distinct !DILexicalBlock(scope: !10059, file: !3, line: 2575, column: 18)
!10066 = !DILocation(line: 2576, column: 59, scope: !10064)
!10067 = !DILocation(line: 2576, column: 40, scope: !10064)
!10068 = !DILocation(line: 2576, column: 9, scope: !10064)
!10069 = !DILocation(line: 2576, column: 9, scope: !10065)
!10070 = !DILocation(line: 2577, column: 6, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 2576, column: 64)
!10072 = !DILocation(line: 2579, column: 4, scope: !10065)
!10073 = !DILocation(line: 2580, column: 3, scope: !10060)
!10074 = !DILocation(line: 2581, column: 2, scope: !10049)
!10075 = !DILocation(line: 2570, column: 47, scope: !10045)
!10076 = !DILocation(line: 2570, column: 53, scope: !10045)
!10077 = !DILocation(line: 2570, column: 45, scope: !10045)
!10078 = !DILocation(line: 2570, column: 2, scope: !10045)
!10079 = distinct !{!10079, !10046, !10080}
!10080 = !DILocation(line: 2581, column: 2, scope: !10039)
!10081 = !DILocation(line: 2583, column: 2, scope: !10031)
!10082 = !DILocation(line: 2584, column: 1, scope: !10031)
!10083 = distinct !DISubprogram(name: "check_valid_compositing_camera", scope: !3, file: !3, line: 2505, type: !10084, scopeLine: 2506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!10084 = !DISubroutineType(types: !10085)
!10085 = !{!916, !217, !3465}
!10086 = !DILocalVariable(name: "scene", arg: 1, scope: !10083, file: !3, line: 2505, type: !217)
!10087 = !DILocation(line: 2505, column: 51, scope: !10083)
!10088 = !DILocalVariable(name: "camera_override", arg: 2, scope: !10083, file: !3, line: 2505, type: !3465)
!10089 = !DILocation(line: 2505, column: 66, scope: !10083)
!10090 = !DILocation(line: 2507, column: 6, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 2507, column: 6)
!10092 = !DILocation(line: 2507, column: 13, scope: !10091)
!10093 = !DILocation(line: 2507, column: 15, scope: !10091)
!10094 = !DILocation(line: 2507, column: 23, scope: !10091)
!10095 = !DILocation(line: 2507, column: 34, scope: !10091)
!10096 = !DILocation(line: 2507, column: 37, scope: !10091)
!10097 = !DILocation(line: 2507, column: 44, scope: !10091)
!10098 = !DILocation(line: 2507, column: 6, scope: !10083)
!10099 = !DILocalVariable(name: "node", scope: !10100, file: !3, line: 2508, type: !850)
!10100 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 2507, column: 55)
!10101 = !DILocation(line: 2508, column: 10, scope: !10100)
!10102 = !DILocation(line: 2508, column: 17, scope: !10100)
!10103 = !DILocation(line: 2508, column: 24, scope: !10100)
!10104 = !DILocation(line: 2508, column: 34, scope: !10100)
!10105 = !DILocation(line: 2508, column: 40, scope: !10100)
!10106 = !DILocation(line: 2510, column: 3, scope: !10100)
!10107 = !DILocation(line: 2510, column: 10, scope: !10100)
!10108 = !DILocation(line: 2511, column: 8, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 2511, column: 8)
!10110 = distinct !DILexicalBlock(scope: !10100, file: !3, line: 2510, column: 16)
!10111 = !DILocation(line: 2511, column: 14, scope: !10109)
!10112 = !DILocation(line: 2511, column: 19, scope: !10109)
!10113 = !DILocation(line: 2511, column: 40, scope: !10109)
!10114 = !DILocation(line: 2511, column: 44, scope: !10109)
!10115 = !DILocation(line: 2511, column: 50, scope: !10109)
!10116 = !DILocation(line: 2511, column: 55, scope: !10109)
!10117 = !DILocation(line: 2511, column: 69, scope: !10109)
!10118 = !DILocation(line: 2511, column: 8, scope: !10110)
!10119 = !DILocalVariable(name: "sce", scope: !10120, file: !3, line: 2512, type: !217)
!10120 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 2511, column: 75)
!10121 = !DILocation(line: 2512, column: 12, scope: !10120)
!10122 = !DILocation(line: 2512, column: 18, scope: !10120)
!10123 = !DILocation(line: 2512, column: 24, scope: !10120)
!10124 = !DILocation(line: 2512, column: 38, scope: !10120)
!10125 = !DILocation(line: 2512, column: 44, scope: !10120)
!10126 = !DILocation(line: 2512, column: 29, scope: !10120)
!10127 = !DILocation(line: 2512, column: 49, scope: !10120)
!10128 = !DILocation(line: 2514, column: 10, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 2514, column: 9)
!10130 = !DILocation(line: 2514, column: 15, scope: !10129)
!10131 = !DILocation(line: 2514, column: 22, scope: !10129)
!10132 = !DILocation(line: 2514, column: 48, scope: !10129)
!10133 = !DILocation(line: 2514, column: 26, scope: !10129)
!10134 = !DILocation(line: 2514, column: 9, scope: !10120)
!10135 = !DILocation(line: 2516, column: 6, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 2514, column: 54)
!10137 = !DILocation(line: 2518, column: 4, scope: !10120)
!10138 = !DILocation(line: 2520, column: 11, scope: !10110)
!10139 = !DILocation(line: 2520, column: 17, scope: !10110)
!10140 = !DILocation(line: 2520, column: 9, scope: !10110)
!10141 = distinct !{!10141, !10106, !10142}
!10142 = !DILocation(line: 2521, column: 3, scope: !10100)
!10143 = !DILocation(line: 2523, column: 3, scope: !10100)
!10144 = !DILocation(line: 2526, column: 11, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 2525, column: 7)
!10146 = !DILocation(line: 2526, column: 27, scope: !10145)
!10147 = !DILocation(line: 2526, column: 35, scope: !10145)
!10148 = !DILocation(line: 2526, column: 38, scope: !10145)
!10149 = !DILocation(line: 2526, column: 45, scope: !10145)
!10150 = !DILocation(line: 2526, column: 52, scope: !10145)
!10151 = !DILocation(line: 2526, column: 10, scope: !10145)
!10152 = !DILocation(line: 2526, column: 3, scope: !10145)
!10153 = !DILocation(line: 2528, column: 1, scope: !10083)
!10154 = distinct !DISubprogram(name: "validate_render_settings", scope: !3, file: !3, line: 2684, type: !3574, scopeLine: 2685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!10155 = !DILocalVariable(name: "re", arg: 1, scope: !10154, file: !3, line: 2684, type: !3576)
!10156 = !DILocation(line: 2684, column: 46, scope: !10154)
!10157 = !DILocation(line: 2686, column: 6, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 2686, column: 6)
!10159 = !DILocation(line: 2686, column: 10, scope: !10158)
!10160 = !DILocation(line: 2686, column: 12, scope: !10158)
!10161 = !DILocation(line: 2686, column: 20, scope: !10158)
!10162 = !DILocation(line: 2686, column: 6, scope: !10154)
!10163 = !DILocation(line: 2688, column: 7, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10165, file: !3, line: 2688, column: 7)
!10165 = distinct !DILexicalBlock(scope: !10158, file: !3, line: 2686, column: 57)
!10166 = !DILocation(line: 2688, column: 11, scope: !10164)
!10167 = !DILocation(line: 2688, column: 13, scope: !10164)
!10168 = !DILocation(line: 2688, column: 17, scope: !10164)
!10169 = !DILocation(line: 2688, column: 7, scope: !10165)
!10170 = !DILocation(line: 2689, column: 4, scope: !10164)
!10171 = !DILocation(line: 2689, column: 8, scope: !10164)
!10172 = !DILocation(line: 2689, column: 10, scope: !10164)
!10173 = !DILocation(line: 2689, column: 18, scope: !10164)
!10174 = !DILocation(line: 2690, column: 2, scope: !10165)
!10175 = !DILocation(line: 2692, column: 28, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 2692, column: 6)
!10177 = !DILocation(line: 2692, column: 6, scope: !10176)
!10178 = !DILocation(line: 2692, column: 6, scope: !10154)
!10179 = !DILocation(line: 2694, column: 3, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10176, file: !3, line: 2692, column: 33)
!10181 = !DILocation(line: 2694, column: 7, scope: !10180)
!10182 = !DILocation(line: 2694, column: 9, scope: !10180)
!10183 = !DILocation(line: 2694, column: 17, scope: !10180)
!10184 = !DILocation(line: 2695, column: 3, scope: !10180)
!10185 = !DILocation(line: 2695, column: 7, scope: !10180)
!10186 = !DILocation(line: 2695, column: 9, scope: !10180)
!10187 = !DILocation(line: 2695, column: 14, scope: !10180)
!10188 = !DILocation(line: 2696, column: 2, scope: !10180)
!10189 = !DILocation(line: 2697, column: 1, scope: !10154)
!10190 = !DILocalVariable(name: "re", arg: 1, scope: !3573, file: !3, line: 2370, type: !3576)
!10191 = !DILocation(line: 2370, column: 35, scope: !3573)
!10192 = !DILocalVariable(name: "ibuf", scope: !3573, file: !3, line: 2373, type: !907)
!10193 = !DILocation(line: 2373, column: 16, scope: !3573)
!10194 = !DILocalVariable(name: "out", scope: !3573, file: !3, line: 2373, type: !907)
!10195 = !DILocation(line: 2373, column: 23, scope: !3573)
!10196 = !DILocalVariable(name: "rr", scope: !3573, file: !3, line: 2374, type: !3006)
!10197 = !DILocation(line: 2374, column: 16, scope: !3573)
!10198 = !DILocalVariable(name: "cfra", scope: !3573, file: !3, line: 2375, type: !7)
!10199 = !DILocation(line: 2375, column: 6, scope: !3573)
!10200 = !DILocation(line: 2375, column: 13, scope: !3573)
!10201 = !DILocation(line: 2375, column: 17, scope: !3573)
!10202 = !DILocation(line: 2375, column: 19, scope: !3573)
!10203 = !DILocalVariable(name: "context", scope: !3573, file: !3, line: 2376, type: !10204)
!10204 = !DIDerivedType(tag: DW_TAG_typedef, name: "SeqRenderData", file: !10205, line: 103, baseType: !10206)
!10205 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_sequencer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SeqRenderData", file: !10205, line: 92, size: 384, elements: !10207)
!10207 = !{!10208, !10209, !10210, !10211, !10212, !10213, !10214, !10215, !10216, !10217}
!10208 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !10206, file: !10205, line: 93, baseType: !3118, size: 64)
!10209 = !DIDerivedType(tag: DW_TAG_member, name: "bmain", scope: !10206, file: !10205, line: 94, baseType: !3066, size: 64, offset: 64)
!10210 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !10206, file: !10205, line: 95, baseType: !646, size: 64, offset: 128)
!10211 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !10206, file: !10205, line: 96, baseType: !7, size: 32, offset: 192)
!10212 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !10206, file: !10205, line: 97, baseType: !7, size: 32, offset: 224)
!10213 = !DIDerivedType(tag: DW_TAG_member, name: "preview_render_size", scope: !10206, file: !10205, line: 98, baseType: !7, size: 32, offset: 256)
!10214 = !DIDerivedType(tag: DW_TAG_member, name: "motion_blur_samples", scope: !10206, file: !10205, line: 99, baseType: !7, size: 32, offset: 288)
!10215 = !DIDerivedType(tag: DW_TAG_member, name: "motion_blur_shutter", scope: !10206, file: !10205, line: 100, baseType: !216, size: 32, offset: 320)
!10216 = !DIDerivedType(tag: DW_TAG_member, name: "skip_cache", scope: !10206, file: !10205, line: 101, baseType: !916, size: 8, offset: 352)
!10217 = !DIDerivedType(tag: DW_TAG_member, name: "is_proxy_render", scope: !10206, file: !10205, line: 102, baseType: !916, size: 8, offset: 360)
!10218 = !DILocation(line: 2376, column: 16, scope: !3573)
!10219 = !DILocation(line: 2378, column: 15, scope: !3573)
!10220 = !DILocation(line: 2378, column: 2, scope: !3573)
!10221 = !DILocation(line: 2378, column: 6, scope: !3573)
!10222 = !DILocation(line: 2378, column: 8, scope: !3573)
!10223 = !DILocation(line: 2378, column: 13, scope: !3573)
!10224 = !DILocation(line: 2380, column: 6, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 2380, column: 6)
!10226 = !DILocation(line: 2380, column: 19, scope: !10225)
!10227 = !DILocation(line: 2380, column: 6, scope: !3573)
!10228 = !DILocation(line: 2382, column: 38, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 2380, column: 25)
!10230 = !DILocation(line: 2382, column: 42, scope: !10229)
!10231 = !DILocation(line: 2382, column: 48, scope: !10229)
!10232 = !DILocation(line: 2382, column: 52, scope: !10229)
!10233 = !DILocation(line: 2382, column: 66, scope: !10229)
!10234 = !DILocation(line: 2382, column: 59, scope: !10229)
!10235 = !DILocation(line: 2382, column: 3, scope: !10229)
!10236 = !DILocation(line: 2383, column: 2, scope: !10229)
!10237 = !DILocation(line: 2385, column: 14, scope: !3573)
!10238 = !DILocation(line: 2387, column: 7, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 2387, column: 6)
!10240 = !DILocation(line: 2387, column: 11, scope: !10239)
!10241 = !DILocation(line: 2387, column: 13, scope: !10239)
!10242 = !DILocation(line: 2387, column: 18, scope: !10239)
!10243 = !DILocation(line: 2387, column: 30, scope: !10239)
!10244 = !DILocation(line: 2387, column: 34, scope: !10239)
!10245 = !DILocation(line: 2387, column: 38, scope: !10239)
!10246 = !DILocation(line: 2387, column: 40, scope: !10239)
!10247 = !DILocation(line: 2387, column: 45, scope: !10239)
!10248 = !DILocation(line: 2387, column: 55, scope: !10239)
!10249 = !DILocation(line: 2387, column: 6, scope: !3573)
!10250 = !DILocation(line: 2390, column: 43, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 2387, column: 61)
!10252 = !DILocation(line: 2390, column: 47, scope: !10251)
!10253 = !DILocation(line: 2390, column: 57, scope: !10251)
!10254 = !DILocation(line: 2390, column: 61, scope: !10251)
!10255 = !DILocation(line: 2390, column: 67, scope: !10251)
!10256 = !DILocation(line: 2390, column: 71, scope: !10251)
!10257 = !DILocation(line: 2391, column: 43, scope: !10251)
!10258 = !DILocation(line: 2391, column: 47, scope: !10251)
!10259 = !DILocation(line: 2391, column: 53, scope: !10251)
!10260 = !DILocation(line: 2391, column: 57, scope: !10251)
!10261 = !DILocation(line: 2390, column: 13, scope: !10251)
!10262 = !DILocation(line: 2392, column: 2, scope: !10251)
!10263 = !DILocation(line: 2394, column: 43, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 2393, column: 7)
!10265 = !DILocation(line: 2394, column: 47, scope: !10264)
!10266 = !DILocation(line: 2394, column: 57, scope: !10264)
!10267 = !DILocation(line: 2394, column: 61, scope: !10264)
!10268 = !DILocation(line: 2394, column: 67, scope: !10264)
!10269 = !DILocation(line: 2394, column: 71, scope: !10264)
!10270 = !DILocation(line: 2395, column: 43, scope: !10264)
!10271 = !DILocation(line: 2395, column: 47, scope: !10264)
!10272 = !DILocation(line: 2395, column: 55, scope: !10264)
!10273 = !DILocation(line: 2395, column: 62, scope: !10264)
!10274 = !DILocation(line: 2395, column: 66, scope: !10264)
!10275 = !DILocation(line: 2395, column: 74, scope: !10264)
!10276 = !DILocation(line: 2394, column: 13, scope: !10264)
!10277 = !DILocation(line: 2398, column: 42, scope: !3573)
!10278 = !DILocation(line: 2398, column: 8, scope: !3573)
!10279 = !DILocation(line: 2398, column: 6, scope: !3573)
!10280 = !DILocation(line: 2400, column: 6, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 2400, column: 6)
!10282 = !DILocation(line: 2400, column: 6, scope: !3573)
!10283 = !DILocation(line: 2401, column: 23, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 2400, column: 11)
!10285 = !DILocation(line: 2401, column: 10, scope: !10284)
!10286 = !DILocation(line: 2401, column: 8, scope: !10284)
!10287 = !DILocation(line: 2402, column: 17, scope: !10284)
!10288 = !DILocation(line: 2402, column: 3, scope: !10284)
!10289 = !DILocation(line: 2403, column: 44, scope: !10284)
!10290 = !DILocation(line: 2403, column: 48, scope: !10284)
!10291 = !DILocation(line: 2403, column: 55, scope: !10284)
!10292 = !DILocation(line: 2403, column: 3, scope: !10284)
!10293 = !DILocation(line: 2404, column: 2, scope: !10284)
!10294 = !DILocation(line: 2406, column: 8, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 2405, column: 7)
!10296 = !DILocation(line: 2409, column: 14, scope: !3573)
!10297 = !DILocation(line: 2411, column: 7, scope: !3573)
!10298 = !DILocation(line: 2411, column: 11, scope: !3573)
!10299 = !DILocation(line: 2411, column: 5, scope: !3573)
!10300 = !DILocation(line: 2413, column: 21, scope: !3573)
!10301 = !DILocation(line: 2413, column: 25, scope: !3573)
!10302 = !DILocation(line: 2413, column: 2, scope: !3573)
!10303 = !DILocation(line: 2415, column: 6, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 2415, column: 6)
!10305 = !DILocation(line: 2415, column: 6, scope: !3573)
!10306 = !DILocation(line: 2417, column: 32, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 2415, column: 12)
!10308 = !DILocation(line: 2417, column: 37, scope: !10307)
!10309 = !DILocation(line: 2417, column: 41, scope: !10307)
!10310 = !DILocation(line: 2417, column: 44, scope: !10307)
!10311 = !DILocation(line: 2417, column: 3, scope: !10307)
!10312 = !DILocation(line: 2419, column: 7, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 2419, column: 7)
!10314 = !DILocation(line: 2419, column: 20, scope: !10313)
!10315 = !DILocation(line: 2419, column: 7, scope: !10307)
!10316 = !DILocalVariable(name: "ed", scope: !10317, file: !3, line: 2420, type: !6793)
!10317 = distinct !DILexicalBlock(scope: !10313, file: !3, line: 2419, column: 26)
!10318 = !DILocation(line: 2420, column: 13, scope: !10317)
!10319 = !DILocation(line: 2420, column: 18, scope: !10317)
!10320 = !DILocation(line: 2420, column: 22, scope: !10317)
!10321 = !DILocation(line: 2420, column: 29, scope: !10317)
!10322 = !DILocation(line: 2421, column: 8, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10317, file: !3, line: 2421, column: 8)
!10324 = !DILocation(line: 2421, column: 8, scope: !10317)
!10325 = !DILocation(line: 2422, column: 30, scope: !10323)
!10326 = !DILocation(line: 2422, column: 34, scope: !10323)
!10327 = !DILocation(line: 2422, column: 42, scope: !10323)
!10328 = !DILocation(line: 2422, column: 46, scope: !10323)
!10329 = !DILocation(line: 2422, column: 5, scope: !10323)
!10330 = !DILocation(line: 2423, column: 3, scope: !10317)
!10331 = !DILocation(line: 2424, column: 17, scope: !10307)
!10332 = !DILocation(line: 2424, column: 3, scope: !10307)
!10333 = !DILocation(line: 2425, column: 2, scope: !10307)
!10334 = !DILocation(line: 2428, column: 32, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 2426, column: 7)
!10336 = !DILocation(line: 2428, column: 3, scope: !10335)
!10337 = !DILocation(line: 2431, column: 23, scope: !3573)
!10338 = !DILocation(line: 2431, column: 27, scope: !3573)
!10339 = !DILocation(line: 2431, column: 2, scope: !3573)
!10340 = !DILocation(line: 2434, column: 2, scope: !3573)
!10341 = !DILocation(line: 2434, column: 6, scope: !3573)
!10342 = !DILocation(line: 2434, column: 8, scope: !3573)
!10343 = !DILocation(line: 2434, column: 16, scope: !3573)
!10344 = !DILocation(line: 2437, column: 6, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 2437, column: 6)
!10346 = !DILocation(line: 2437, column: 10, scope: !10345)
!10347 = !DILocation(line: 2437, column: 12, scope: !10345)
!10348 = !DILocation(line: 2437, column: 20, scope: !10345)
!10349 = !DILocation(line: 2437, column: 24, scope: !10345)
!10350 = !DILocation(line: 2437, column: 26, scope: !10345)
!10351 = !DILocation(line: 2437, column: 17, scope: !10345)
!10352 = !DILocation(line: 2437, column: 6, scope: !3573)
!10353 = !DILocation(line: 2438, column: 3, scope: !10345)
!10354 = !DILocation(line: 2438, column: 7, scope: !10345)
!10355 = !DILocation(line: 2438, column: 16, scope: !10345)
!10356 = !DILocation(line: 2438, column: 20, scope: !10345)
!10357 = !DILocation(line: 2438, column: 33, scope: !10345)
!10358 = !DILocation(line: 2438, column: 40, scope: !10345)
!10359 = !DILocation(line: 2438, column: 44, scope: !10345)
!10360 = !DILocation(line: 2438, column: 46, scope: !10345)
!10361 = !DILocation(line: 2438, column: 38, scope: !10345)
!10362 = !DILocation(line: 2438, column: 25, scope: !10345)
!10363 = !DILocation(line: 2438, column: 55, scope: !10345)
!10364 = !DILocation(line: 2438, column: 59, scope: !10345)
!10365 = !DILocation(line: 2438, column: 61, scope: !10345)
!10366 = !DILocation(line: 2438, column: 68, scope: !10345)
!10367 = !DILocation(line: 2438, column: 72, scope: !10345)
!10368 = !DILocation(line: 2438, column: 74, scope: !10345)
!10369 = !DILocation(line: 2438, column: 66, scope: !10345)
!10370 = !DILocation(line: 2438, column: 54, scope: !10345)
!10371 = !DILocation(line: 2438, column: 52, scope: !10345)
!10372 = !DILocation(line: 2440, column: 3, scope: !10345)
!10373 = !DILocation(line: 2440, column: 7, scope: !10345)
!10374 = !DILocation(line: 2440, column: 16, scope: !10345)
!10375 = !DILocation(line: 2440, column: 20, scope: !10345)
!10376 = !DILocation(line: 2443, column: 2, scope: !3573)
!10377 = !DILocation(line: 2443, column: 6, scope: !3573)
!10378 = !DILocation(line: 2443, column: 21, scope: !3573)
!10379 = !DILocation(line: 2443, column: 25, scope: !3573)
!10380 = !DILocation(line: 2443, column: 30, scope: !3573)
!10381 = !DILocation(line: 2443, column: 34, scope: !3573)
!10382 = !DILocation(line: 2444, column: 1, scope: !3573)
!10383 = distinct !DISubprogram(name: "do_render_composite_fields_blur_3d", scope: !3, file: !3, line: 2251, type: !3574, scopeLine: 2252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!10384 = !DILocalVariable(name: "re", arg: 1, scope: !10383, file: !3, line: 2251, type: !3576)
!10385 = !DILocation(line: 2251, column: 56, scope: !10383)
!10386 = !DILocalVariable(name: "ntree", scope: !10383, file: !3, line: 2253, type: !2981)
!10387 = !DILocation(line: 2253, column: 13, scope: !10383)
!10388 = !DILocation(line: 2253, column: 21, scope: !10383)
!10389 = !DILocation(line: 2253, column: 25, scope: !10383)
!10390 = !DILocation(line: 2253, column: 32, scope: !10383)
!10391 = !DILocalVariable(name: "update_newframe", scope: !10383, file: !3, line: 2254, type: !7)
!10392 = !DILocation(line: 2254, column: 6, scope: !10383)
!10393 = !DILocation(line: 2257, column: 14, scope: !10383)
!10394 = !DILocation(line: 2257, column: 18, scope: !10383)
!10395 = !DILocation(line: 2257, column: 20, scope: !10383)
!10396 = !DILocation(line: 2257, column: 2, scope: !10383)
!10397 = !DILocation(line: 2259, column: 29, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 2259, column: 6)
!10399 = !DILocation(line: 2259, column: 33, scope: !10398)
!10400 = !DILocation(line: 2259, column: 6, scope: !10398)
!10401 = !DILocation(line: 2259, column: 6, scope: !10383)
!10402 = !DILocation(line: 2261, column: 18, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 2259, column: 44)
!10404 = !DILocation(line: 2261, column: 3, scope: !10403)
!10405 = !DILocation(line: 2263, column: 28, scope: !10403)
!10406 = !DILocation(line: 2263, column: 3, scope: !10403)
!10407 = !DILocation(line: 2264, column: 2, scope: !10403)
!10408 = !DILocation(line: 2266, column: 16, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 2265, column: 7)
!10410 = !DILocation(line: 2266, column: 20, scope: !10409)
!10411 = !DILocation(line: 2266, column: 22, scope: !10409)
!10412 = !DILocation(line: 2266, column: 3, scope: !10409)
!10413 = !DILocation(line: 2266, column: 7, scope: !10409)
!10414 = !DILocation(line: 2266, column: 9, scope: !10409)
!10415 = !DILocation(line: 2266, column: 14, scope: !10409)
!10416 = !DILocation(line: 2269, column: 22, scope: !10409)
!10417 = !DILocation(line: 2269, column: 26, scope: !10409)
!10418 = !DILocation(line: 2269, column: 3, scope: !10409)
!10419 = !DILocation(line: 2271, column: 22, scope: !10409)
!10420 = !DILocation(line: 2271, column: 26, scope: !10409)
!10421 = !DILocation(line: 2271, column: 3, scope: !10409)
!10422 = !DILocation(line: 2272, column: 8, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10409, file: !3, line: 2272, column: 7)
!10424 = !DILocation(line: 2272, column: 12, scope: !10423)
!10425 = !DILocation(line: 2272, column: 14, scope: !10423)
!10426 = !DILocation(line: 2272, column: 19, scope: !10423)
!10427 = !DILocation(line: 2272, column: 29, scope: !10423)
!10428 = !DILocation(line: 2272, column: 7, scope: !10409)
!10429 = !DILocation(line: 2273, column: 46, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 2272, column: 35)
!10431 = !DILocation(line: 2273, column: 4, scope: !10430)
!10432 = !DILocation(line: 2274, column: 3, scope: !10430)
!10433 = !DILocation(line: 2275, column: 34, scope: !10409)
!10434 = !DILocation(line: 2275, column: 39, scope: !10409)
!10435 = !DILocation(line: 2275, column: 43, scope: !10409)
!10436 = !DILocation(line: 2275, column: 16, scope: !10409)
!10437 = !DILocation(line: 2275, column: 3, scope: !10409)
!10438 = !DILocation(line: 2275, column: 7, scope: !10409)
!10439 = !DILocation(line: 2275, column: 14, scope: !10409)
!10440 = !DILocation(line: 2277, column: 24, scope: !10409)
!10441 = !DILocation(line: 2277, column: 28, scope: !10409)
!10442 = !DILocation(line: 2277, column: 3, scope: !10409)
!10443 = !DILocation(line: 2280, column: 19, scope: !10409)
!10444 = !DILocation(line: 2284, column: 6, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 2284, column: 6)
!10446 = !DILocation(line: 2284, column: 10, scope: !10445)
!10447 = !DILocation(line: 2284, column: 12, scope: !10445)
!10448 = !DILocation(line: 2284, column: 20, scope: !10445)
!10449 = !DILocation(line: 2284, column: 6, scope: !10383)
!10450 = !DILocation(line: 2285, column: 22, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 2284, column: 38)
!10452 = !DILocation(line: 2285, column: 26, scope: !10451)
!10453 = !DILocation(line: 2285, column: 3, scope: !10451)
!10454 = !DILocation(line: 2286, column: 34, scope: !10451)
!10455 = !DILocation(line: 2286, column: 3, scope: !10451)
!10456 = !DILocation(line: 2287, column: 24, scope: !10451)
!10457 = !DILocation(line: 2287, column: 28, scope: !10451)
!10458 = !DILocation(line: 2287, column: 3, scope: !10451)
!10459 = !DILocation(line: 2288, column: 2, scope: !10451)
!10460 = !DILocation(line: 2290, column: 7, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 2290, column: 6)
!10462 = !DILocation(line: 2290, column: 11, scope: !10461)
!10463 = !DILocation(line: 2290, column: 22, scope: !10461)
!10464 = !DILocation(line: 2290, column: 26, scope: !10461)
!10465 = !DILocation(line: 2290, column: 6, scope: !10383)
!10466 = !DILocation(line: 2292, column: 7, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10468, file: !3, line: 2292, column: 7)
!10468 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 2290, column: 32)
!10469 = !DILocation(line: 2292, column: 7, scope: !10468)
!10470 = !DILocation(line: 2293, column: 27, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 2292, column: 14)
!10472 = !DILocation(line: 2293, column: 31, scope: !10471)
!10473 = !DILocation(line: 2293, column: 4, scope: !10471)
!10474 = !DILocation(line: 2294, column: 29, scope: !10471)
!10475 = !DILocation(line: 2294, column: 4, scope: !10471)
!10476 = !DILocation(line: 2295, column: 3, scope: !10471)
!10477 = !DILocation(line: 2297, column: 7, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10468, file: !3, line: 2297, column: 7)
!10479 = !DILocation(line: 2297, column: 13, scope: !10478)
!10480 = !DILocation(line: 2297, column: 16, scope: !10478)
!10481 = !DILocation(line: 2297, column: 20, scope: !10478)
!10482 = !DILocation(line: 2297, column: 27, scope: !10478)
!10483 = !DILocation(line: 2297, column: 37, scope: !10478)
!10484 = !DILocation(line: 2297, column: 40, scope: !10478)
!10485 = !DILocation(line: 2297, column: 44, scope: !10478)
!10486 = !DILocation(line: 2297, column: 46, scope: !10478)
!10487 = !DILocation(line: 2297, column: 54, scope: !10478)
!10488 = !DILocation(line: 2297, column: 7, scope: !10468)
!10489 = !DILocation(line: 2299, column: 9, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10491, file: !3, line: 2299, column: 8)
!10491 = distinct !DILexicalBlock(scope: !10478, file: !3, line: 2297, column: 66)
!10492 = !DILocation(line: 2299, column: 13, scope: !10490)
!10493 = !DILocation(line: 2299, column: 15, scope: !10490)
!10494 = !DILocation(line: 2299, column: 23, scope: !10490)
!10495 = !DILocation(line: 2299, column: 41, scope: !10490)
!10496 = !DILocation(line: 2299, column: 8, scope: !10491)
!10497 = !DILocation(line: 2300, column: 25, scope: !10490)
!10498 = !DILocation(line: 2300, column: 5, scope: !10490)
!10499 = !DILocation(line: 2302, column: 9, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10491, file: !3, line: 2302, column: 8)
!10501 = !DILocation(line: 2302, column: 13, scope: !10500)
!10502 = !DILocation(line: 2302, column: 24, scope: !10500)
!10503 = !DILocation(line: 2302, column: 28, scope: !10500)
!10504 = !DILocation(line: 2302, column: 8, scope: !10491)
!10505 = !DILocation(line: 2303, column: 5, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10500, file: !3, line: 2302, column: 34)
!10507 = !DILocation(line: 2303, column: 12, scope: !10506)
!10508 = !DILocation(line: 2303, column: 23, scope: !10506)
!10509 = !DILocation(line: 2304, column: 25, scope: !10506)
!10510 = !DILocation(line: 2304, column: 29, scope: !10506)
!10511 = !DILocation(line: 2304, column: 5, scope: !10506)
!10512 = !DILocation(line: 2304, column: 12, scope: !10506)
!10513 = !DILocation(line: 2304, column: 23, scope: !10506)
!10514 = !DILocation(line: 2305, column: 23, scope: !10506)
!10515 = !DILocation(line: 2305, column: 27, scope: !10506)
!10516 = !DILocation(line: 2305, column: 5, scope: !10506)
!10517 = !DILocation(line: 2305, column: 12, scope: !10506)
!10518 = !DILocation(line: 2305, column: 21, scope: !10506)
!10519 = !DILocation(line: 2306, column: 18, scope: !10506)
!10520 = !DILocation(line: 2306, column: 22, scope: !10506)
!10521 = !DILocation(line: 2306, column: 5, scope: !10506)
!10522 = !DILocation(line: 2306, column: 12, scope: !10506)
!10523 = !DILocation(line: 2306, column: 16, scope: !10506)
!10524 = !DILocation(line: 2307, column: 18, scope: !10506)
!10525 = !DILocation(line: 2307, column: 22, scope: !10506)
!10526 = !DILocation(line: 2307, column: 5, scope: !10506)
!10527 = !DILocation(line: 2307, column: 12, scope: !10506)
!10528 = !DILocation(line: 2307, column: 16, scope: !10506)
!10529 = !DILocation(line: 2308, column: 18, scope: !10506)
!10530 = !DILocation(line: 2308, column: 22, scope: !10506)
!10531 = !DILocation(line: 2308, column: 5, scope: !10506)
!10532 = !DILocation(line: 2308, column: 12, scope: !10506)
!10533 = !DILocation(line: 2308, column: 16, scope: !10506)
!10534 = !DILocation(line: 2311, column: 13, scope: !10506)
!10535 = !DILocation(line: 2311, column: 17, scope: !10506)
!10536 = !DILocation(line: 2311, column: 11, scope: !10506)
!10537 = !DILocation(line: 2312, column: 20, scope: !10506)
!10538 = !DILocation(line: 2312, column: 24, scope: !10506)
!10539 = !DILocation(line: 2312, column: 18, scope: !10506)
!10540 = !DILocation(line: 2314, column: 9, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 2314, column: 9)
!10542 = !DILocation(line: 2314, column: 9, scope: !10506)
!10543 = !DILocation(line: 2315, column: 36, scope: !10541)
!10544 = !DILocation(line: 2315, column: 40, scope: !10541)
!10545 = !DILocation(line: 2315, column: 50, scope: !10541)
!10546 = !DILocation(line: 2315, column: 54, scope: !10541)
!10547 = !DILocation(line: 2315, column: 60, scope: !10541)
!10548 = !DILocation(line: 2315, column: 64, scope: !10541)
!10549 = !DILocation(line: 2315, column: 71, scope: !10541)
!10550 = !DILocation(line: 2315, column: 75, scope: !10541)
!10551 = !DILocation(line: 2315, column: 6, scope: !10541)
!10552 = !DILocation(line: 2317, column: 9, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 2317, column: 9)
!10554 = !DILocation(line: 2317, column: 13, scope: !10553)
!10555 = !DILocation(line: 2317, column: 15, scope: !10553)
!10556 = !DILocation(line: 2317, column: 23, scope: !10553)
!10557 = !DILocation(line: 2317, column: 9, scope: !10506)
!10558 = !DILocation(line: 2318, column: 26, scope: !10553)
!10559 = !DILocation(line: 2318, column: 30, scope: !10553)
!10560 = !DILocation(line: 2318, column: 6, scope: !10553)
!10561 = !DILocation(line: 2320, column: 28, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 2319, column: 10)
!10563 = !DILocation(line: 2320, column: 32, scope: !10562)
!10564 = !DILocation(line: 2320, column: 39, scope: !10562)
!10565 = !DILocation(line: 2320, column: 47, scope: !10562)
!10566 = !DILocation(line: 2320, column: 51, scope: !10562)
!10567 = !DILocation(line: 2320, column: 62, scope: !10562)
!10568 = !DILocation(line: 2320, column: 60, scope: !10562)
!10569 = !DILocation(line: 2320, column: 73, scope: !10562)
!10570 = !DILocation(line: 2320, column: 80, scope: !10562)
!10571 = !DILocation(line: 2320, column: 84, scope: !10562)
!10572 = !DILocation(line: 2320, column: 91, scope: !10562)
!10573 = !DILocation(line: 2320, column: 107, scope: !10562)
!10574 = !DILocation(line: 2320, column: 111, scope: !10562)
!10575 = !DILocation(line: 2320, column: 118, scope: !10562)
!10576 = !DILocation(line: 2320, column: 6, scope: !10562)
!10577 = !DILocation(line: 2323, column: 5, scope: !10506)
!10578 = !DILocation(line: 2323, column: 12, scope: !10506)
!10579 = !DILocation(line: 2323, column: 23, scope: !10506)
!10580 = !DILocation(line: 2324, column: 5, scope: !10506)
!10581 = !DILocation(line: 2324, column: 12, scope: !10506)
!10582 = !DILocation(line: 2324, column: 23, scope: !10506)
!10583 = !DILocation(line: 2325, column: 5, scope: !10506)
!10584 = !DILocation(line: 2325, column: 12, scope: !10506)
!10585 = !DILocation(line: 2325, column: 21, scope: !10506)
!10586 = !DILocation(line: 2326, column: 31, scope: !10506)
!10587 = !DILocation(line: 2326, column: 38, scope: !10506)
!10588 = !DILocation(line: 2326, column: 42, scope: !10506)
!10589 = !DILocation(line: 2326, column: 18, scope: !10506)
!10590 = !DILocation(line: 2326, column: 25, scope: !10506)
!10591 = !DILocation(line: 2326, column: 29, scope: !10506)
!10592 = !DILocation(line: 2326, column: 5, scope: !10506)
!10593 = !DILocation(line: 2326, column: 12, scope: !10506)
!10594 = !DILocation(line: 2326, column: 16, scope: !10506)
!10595 = !DILocation(line: 2327, column: 4, scope: !10506)
!10596 = !DILocation(line: 2328, column: 3, scope: !10491)
!10597 = !DILocation(line: 2329, column: 12, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10478, file: !3, line: 2329, column: 12)
!10599 = !DILocation(line: 2329, column: 16, scope: !10598)
!10600 = !DILocation(line: 2329, column: 18, scope: !10598)
!10601 = !DILocation(line: 2329, column: 26, scope: !10598)
!10602 = !DILocation(line: 2329, column: 12, scope: !10478)
!10603 = !DILocation(line: 2330, column: 24, scope: !10598)
!10604 = !DILocation(line: 2330, column: 4, scope: !10598)
!10605 = !DILocation(line: 2331, column: 2, scope: !10468)
!10606 = !DILocation(line: 2338, column: 47, scope: !10383)
!10607 = !DILocation(line: 2338, column: 51, scope: !10383)
!10608 = !DILocation(line: 2338, column: 55, scope: !10383)
!10609 = !DILocation(line: 2338, column: 23, scope: !10383)
!10610 = !DILocation(line: 2338, column: 2, scope: !10383)
!10611 = !DILocation(line: 2338, column: 6, scope: !10383)
!10612 = !DILocation(line: 2338, column: 14, scope: !10383)
!10613 = !DILocation(line: 2338, column: 21, scope: !10383)
!10614 = !DILocation(line: 2339, column: 2, scope: !10383)
!10615 = !DILocation(line: 2339, column: 6, scope: !10383)
!10616 = !DILocation(line: 2339, column: 21, scope: !10383)
!10617 = !DILocation(line: 2339, column: 25, scope: !10383)
!10618 = !DILocation(line: 2339, column: 30, scope: !10383)
!10619 = !DILocation(line: 2339, column: 34, scope: !10383)
!10620 = !DILocation(line: 2340, column: 1, scope: !10383)
!10621 = distinct !DISubprogram(name: "renderresult_stampinfo", scope: !3, file: !3, line: 2342, type: !3574, scopeLine: 2343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!10622 = !DILocalVariable(name: "re", arg: 1, scope: !10621, file: !3, line: 2342, type: !3576)
!10623 = !DILocation(line: 2342, column: 44, scope: !10621)
!10624 = !DILocalVariable(name: "rres", scope: !10621, file: !3, line: 2344, type: !3007)
!10625 = !DILocation(line: 2344, column: 15, scope: !10621)
!10626 = !DILocation(line: 2347, column: 24, scope: !10621)
!10627 = !DILocation(line: 2347, column: 2, scope: !10621)
!10628 = !DILocation(line: 2348, column: 16, scope: !10621)
!10629 = !DILocation(line: 2348, column: 20, scope: !10621)
!10630 = !DILocation(line: 2348, column: 40, scope: !10621)
!10631 = !DILocation(line: 2348, column: 27, scope: !10621)
!10632 = !DILocation(line: 2348, column: 67, scope: !10621)
!10633 = !DILocation(line: 2348, column: 45, scope: !10621)
!10634 = !DILocation(line: 2348, column: 80, scope: !10621)
!10635 = !DILocation(line: 2348, column: 92, scope: !10621)
!10636 = !DILocation(line: 2348, column: 104, scope: !10621)
!10637 = !DILocation(line: 2348, column: 2, scope: !10621)
!10638 = !DILocation(line: 2349, column: 24, scope: !10621)
!10639 = !DILocation(line: 2349, column: 2, scope: !10621)
!10640 = !DILocation(line: 2350, column: 1, scope: !10621)
!10641 = distinct !DISubprogram(name: "do_render_fields_blur_3d", scope: !3, file: !3, line: 1618, type: !3574, scopeLine: 1619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!10642 = !DILocalVariable(name: "re", arg: 1, scope: !10641, file: !3, line: 1618, type: !3576)
!10643 = !DILocation(line: 1618, column: 46, scope: !10641)
!10644 = !DILocalVariable(name: "camera", scope: !10641, file: !3, line: 1620, type: !3465)
!10645 = !DILocation(line: 1620, column: 10, scope: !10641)
!10646 = !DILocation(line: 1620, column: 32, scope: !10641)
!10647 = !DILocation(line: 1620, column: 19, scope: !10641)
!10648 = !DILocation(line: 1622, column: 6, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 1622, column: 6)
!10650 = !DILocation(line: 1622, column: 13, scope: !10649)
!10651 = !DILocation(line: 1622, column: 6, scope: !10641)
!10652 = !DILocation(line: 1623, column: 14, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10649, file: !3, line: 1622, column: 22)
!10654 = !DILocation(line: 1623, column: 18, scope: !10653)
!10655 = !DILocation(line: 1623, column: 3, scope: !10653)
!10656 = !DILocation(line: 1624, column: 14, scope: !10653)
!10657 = !DILocation(line: 1625, column: 3, scope: !10653)
!10658 = !DILocation(line: 1629, column: 15, scope: !10641)
!10659 = !DILocation(line: 1629, column: 19, scope: !10641)
!10660 = !DILocation(line: 1629, column: 2, scope: !10641)
!10661 = !DILocation(line: 1631, column: 6, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 1631, column: 6)
!10663 = !DILocation(line: 1631, column: 10, scope: !10662)
!10664 = !DILocation(line: 1631, column: 12, scope: !10662)
!10665 = !DILocation(line: 1631, column: 17, scope: !10662)
!10666 = !DILocation(line: 1631, column: 6, scope: !10641)
!10667 = !DILocation(line: 1632, column: 23, scope: !10662)
!10668 = !DILocation(line: 1632, column: 3, scope: !10662)
!10669 = !DILocation(line: 1633, column: 11, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 1633, column: 11)
!10671 = !DILocation(line: 1633, column: 15, scope: !10670)
!10672 = !DILocation(line: 1633, column: 17, scope: !10670)
!10673 = !DILocation(line: 1633, column: 22, scope: !10670)
!10674 = !DILocation(line: 1633, column: 32, scope: !10670)
!10675 = !DILocation(line: 1633, column: 36, scope: !10670)
!10676 = !DILocation(line: 1633, column: 40, scope: !10670)
!10677 = !DILocation(line: 1633, column: 42, scope: !10670)
!10678 = !DILocation(line: 1633, column: 50, scope: !10670)
!10679 = !DILocation(line: 1633, column: 67, scope: !10670)
!10680 = !DILocation(line: 1633, column: 11, scope: !10662)
!10681 = !DILocation(line: 1634, column: 21, scope: !10670)
!10682 = !DILocation(line: 1634, column: 3, scope: !10670)
!10683 = !DILocation(line: 1636, column: 16, scope: !10670)
!10684 = !DILocation(line: 1636, column: 3, scope: !10670)
!10685 = !DILocation(line: 1639, column: 6, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 1639, column: 6)
!10687 = !DILocation(line: 1639, column: 10, scope: !10686)
!10688 = !DILocation(line: 1639, column: 6, scope: !10641)
!10689 = !DILocation(line: 1640, column: 7, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 1640, column: 7)
!10691 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 1639, column: 18)
!10692 = !DILocation(line: 1640, column: 11, scope: !10690)
!10693 = !DILocation(line: 1640, column: 13, scope: !10690)
!10694 = !DILocation(line: 1640, column: 18, scope: !10690)
!10695 = !DILocation(line: 1640, column: 7, scope: !10691)
!10696 = !DILocation(line: 1641, column: 9, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10698, file: !3, line: 1641, column: 8)
!10698 = distinct !DILexicalBlock(scope: !10690, file: !3, line: 1640, column: 30)
!10699 = !DILocation(line: 1641, column: 13, scope: !10697)
!10700 = !DILocation(line: 1641, column: 15, scope: !10697)
!10701 = !DILocation(line: 1641, column: 20, scope: !10697)
!10702 = !DILocation(line: 1641, column: 30, scope: !10697)
!10703 = !DILocation(line: 1641, column: 8, scope: !10698)
!10704 = !DILocalVariable(name: "rres", scope: !10705, file: !3, line: 1642, type: !3006)
!10705 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 1641, column: 36)
!10706 = !DILocation(line: 1642, column: 19, scope: !10705)
!10707 = !DILocalVariable(name: "orig_disprect", scope: !10705, file: !3, line: 1645, type: !10708)
!10708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!10709 = !DILocation(line: 1645, column: 16, scope: !10705)
!10710 = !DILocation(line: 1645, column: 32, scope: !10705)
!10711 = !DILocation(line: 1645, column: 36, scope: !10705)
!10712 = !DILocalVariable(name: "orig_rectx", scope: !10705, file: !3, line: 1646, type: !3162)
!10713 = !DILocation(line: 1646, column: 16, scope: !10705)
!10714 = !DILocation(line: 1646, column: 29, scope: !10705)
!10715 = !DILocation(line: 1646, column: 33, scope: !10705)
!10716 = !DILocalVariable(name: "orig_recty", scope: !10705, file: !3, line: 1646, type: !3162)
!10717 = !DILocation(line: 1646, column: 40, scope: !10705)
!10718 = !DILocation(line: 1646, column: 53, scope: !10705)
!10719 = !DILocation(line: 1646, column: 57, scope: !10705)
!10720 = !DILocation(line: 1648, column: 24, scope: !10705)
!10721 = !DILocation(line: 1648, column: 28, scope: !10705)
!10722 = !DILocation(line: 1648, column: 5, scope: !10705)
!10723 = !DILocation(line: 1651, column: 5, scope: !10705)
!10724 = !DILocation(line: 1651, column: 9, scope: !10705)
!10725 = !DILocation(line: 1651, column: 17, scope: !10705)
!10726 = !DILocation(line: 1651, column: 28, scope: !10705)
!10727 = !DILocation(line: 1651, column: 32, scope: !10705)
!10728 = !DILocation(line: 1654, column: 47, scope: !10705)
!10729 = !DILocation(line: 1654, column: 5, scope: !10705)
!10730 = !DILocation(line: 1656, column: 30, scope: !10705)
!10731 = !DILocation(line: 1656, column: 35, scope: !10705)
!10732 = !DILocation(line: 1656, column: 39, scope: !10705)
!10733 = !DILocation(line: 1656, column: 12, scope: !10705)
!10734 = !DILocation(line: 1656, column: 10, scope: !10705)
!10735 = !DILocation(line: 1658, column: 25, scope: !10705)
!10736 = !DILocation(line: 1658, column: 31, scope: !10705)
!10737 = !DILocation(line: 1658, column: 35, scope: !10705)
!10738 = !DILocation(line: 1658, column: 5, scope: !10705)
!10739 = !DILocation(line: 1659, column: 24, scope: !10705)
!10740 = !DILocation(line: 1659, column: 28, scope: !10705)
!10741 = !DILocation(line: 1659, column: 5, scope: !10705)
!10742 = !DILocation(line: 1660, column: 18, scope: !10705)
!10743 = !DILocation(line: 1660, column: 5, scope: !10705)
!10744 = !DILocation(line: 1660, column: 9, scope: !10705)
!10745 = !DILocation(line: 1660, column: 16, scope: !10705)
!10746 = !DILocation(line: 1663, column: 50, scope: !10705)
!10747 = !DILocation(line: 1663, column: 54, scope: !10705)
!10748 = !DILocation(line: 1663, column: 58, scope: !10705)
!10749 = !DILocation(line: 1663, column: 26, scope: !10705)
!10750 = !DILocation(line: 1663, column: 5, scope: !10705)
!10751 = !DILocation(line: 1663, column: 9, scope: !10705)
!10752 = !DILocation(line: 1663, column: 17, scope: !10705)
!10753 = !DILocation(line: 1663, column: 24, scope: !10705)
!10754 = !DILocation(line: 1665, column: 26, scope: !10705)
!10755 = !DILocation(line: 1665, column: 30, scope: !10705)
!10756 = !DILocation(line: 1665, column: 5, scope: !10705)
!10757 = !DILocation(line: 1667, column: 5, scope: !10705)
!10758 = !DILocation(line: 1667, column: 9, scope: !10705)
!10759 = !DILocation(line: 1667, column: 22, scope: !10705)
!10760 = !DILocation(line: 1667, column: 26, scope: !10705)
!10761 = !DILocation(line: 1667, column: 31, scope: !10705)
!10762 = !DILocation(line: 1667, column: 35, scope: !10705)
!10763 = !DILocation(line: 1668, column: 5, scope: !10705)
!10764 = !DILocation(line: 1668, column: 9, scope: !10705)
!10765 = !DILocation(line: 1668, column: 24, scope: !10705)
!10766 = !DILocation(line: 1668, column: 28, scope: !10705)
!10767 = !DILocation(line: 1668, column: 33, scope: !10705)
!10768 = !DILocation(line: 1668, column: 37, scope: !10705)
!10769 = !DILocation(line: 1671, column: 5, scope: !10705)
!10770 = !DILocation(line: 1671, column: 9, scope: !10705)
!10771 = !DILocation(line: 1671, column: 20, scope: !10705)
!10772 = !DILocation(line: 1672, column: 17, scope: !10705)
!10773 = !DILocation(line: 1672, column: 5, scope: !10705)
!10774 = !DILocation(line: 1672, column: 9, scope: !10705)
!10775 = !DILocation(line: 1672, column: 15, scope: !10705)
!10776 = !DILocation(line: 1673, column: 17, scope: !10705)
!10777 = !DILocation(line: 1673, column: 5, scope: !10705)
!10778 = !DILocation(line: 1673, column: 9, scope: !10705)
!10779 = !DILocation(line: 1673, column: 15, scope: !10705)
!10780 = !DILocation(line: 1674, column: 4, scope: !10705)
!10781 = !DILocation(line: 1677, column: 5, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 1675, column: 9)
!10783 = !DILocation(line: 1677, column: 9, scope: !10782)
!10784 = !DILocation(line: 1677, column: 17, scope: !10782)
!10785 = !DILocation(line: 1677, column: 21, scope: !10782)
!10786 = !DILocation(line: 1678, column: 5, scope: !10782)
!10787 = !DILocation(line: 1678, column: 9, scope: !10782)
!10788 = !DILocation(line: 1678, column: 17, scope: !10782)
!10789 = !DILocation(line: 1678, column: 21, scope: !10782)
!10790 = !DILocation(line: 1680, column: 3, scope: !10698)
!10791 = !DILocation(line: 1681, column: 2, scope: !10691)
!10792 = !DILocation(line: 1682, column: 1, scope: !10641)
!10793 = distinct !DISubprogram(name: "render_result_disprect_to_full_resolution", scope: !3, file: !3, line: 1608, type: !3574, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!10794 = !DILocalVariable(name: "re", arg: 1, scope: !10793, file: !3, line: 1608, type: !3576)
!10795 = !DILocation(line: 1608, column: 63, scope: !10793)
!10796 = !DILocation(line: 1610, column: 22, scope: !10793)
!10797 = !DILocation(line: 1610, column: 26, scope: !10793)
!10798 = !DILocation(line: 1610, column: 35, scope: !10793)
!10799 = !DILocation(line: 1610, column: 40, scope: !10793)
!10800 = !DILocation(line: 1610, column: 2, scope: !10793)
!10801 = !DILocation(line: 1610, column: 6, scope: !10793)
!10802 = !DILocation(line: 1610, column: 15, scope: !10793)
!10803 = !DILocation(line: 1610, column: 20, scope: !10793)
!10804 = !DILocation(line: 1611, column: 22, scope: !10793)
!10805 = !DILocation(line: 1611, column: 26, scope: !10793)
!10806 = !DILocation(line: 1611, column: 2, scope: !10793)
!10807 = !DILocation(line: 1611, column: 6, scope: !10793)
!10808 = !DILocation(line: 1611, column: 15, scope: !10793)
!10809 = !DILocation(line: 1611, column: 20, scope: !10793)
!10810 = !DILocation(line: 1612, column: 22, scope: !10793)
!10811 = !DILocation(line: 1612, column: 26, scope: !10793)
!10812 = !DILocation(line: 1612, column: 2, scope: !10793)
!10813 = !DILocation(line: 1612, column: 6, scope: !10793)
!10814 = !DILocation(line: 1612, column: 15, scope: !10793)
!10815 = !DILocation(line: 1612, column: 20, scope: !10793)
!10816 = !DILocation(line: 1613, column: 14, scope: !10793)
!10817 = !DILocation(line: 1613, column: 18, scope: !10793)
!10818 = !DILocation(line: 1613, column: 2, scope: !10793)
!10819 = !DILocation(line: 1613, column: 6, scope: !10793)
!10820 = !DILocation(line: 1613, column: 12, scope: !10793)
!10821 = !DILocation(line: 1614, column: 14, scope: !10793)
!10822 = !DILocation(line: 1614, column: 18, scope: !10793)
!10823 = !DILocation(line: 1614, column: 2, scope: !10793)
!10824 = !DILocation(line: 1614, column: 6, scope: !10793)
!10825 = !DILocation(line: 1614, column: 12, scope: !10793)
!10826 = !DILocation(line: 1615, column: 1, scope: !10793)
!10827 = distinct !DISubprogram(name: "ntree_render_scenes", scope: !3, file: !3, line: 1916, type: !3574, scopeLine: 1917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!10828 = !DILocalVariable(name: "re", arg: 1, scope: !10827, file: !3, line: 1916, type: !3576)
!10829 = !DILocation(line: 1916, column: 41, scope: !10827)
!10830 = !DILocalVariable(name: "node", scope: !10827, file: !3, line: 1918, type: !850)
!10831 = !DILocation(line: 1918, column: 9, scope: !10827)
!10832 = !DILocalVariable(name: "cfra", scope: !10827, file: !3, line: 1919, type: !7)
!10833 = !DILocation(line: 1919, column: 6, scope: !10827)
!10834 = !DILocation(line: 1919, column: 13, scope: !10827)
!10835 = !DILocation(line: 1919, column: 17, scope: !10827)
!10836 = !DILocation(line: 1919, column: 24, scope: !10827)
!10837 = !DILocation(line: 1919, column: 26, scope: !10827)
!10838 = !DILocalVariable(name: "restore_scene", scope: !10827, file: !3, line: 1920, type: !217)
!10839 = !DILocation(line: 1920, column: 9, scope: !10827)
!10840 = !DILocation(line: 1920, column: 25, scope: !10827)
!10841 = !DILocation(line: 1920, column: 29, scope: !10827)
!10842 = !DILocalVariable(name: "scene_changed", scope: !10827, file: !3, line: 1921, type: !916)
!10843 = !DILocation(line: 1921, column: 7, scope: !10827)
!10844 = !DILocation(line: 1923, column: 6, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 1923, column: 6)
!10846 = !DILocation(line: 1923, column: 10, scope: !10845)
!10847 = !DILocation(line: 1923, column: 17, scope: !10845)
!10848 = !DILocation(line: 1923, column: 26, scope: !10845)
!10849 = !DILocation(line: 1923, column: 6, scope: !10827)
!10850 = !DILocation(line: 1923, column: 35, scope: !10845)
!10851 = !DILocation(line: 1925, column: 24, scope: !10827)
!10852 = !DILocation(line: 1925, column: 2, scope: !10827)
!10853 = !DILocation(line: 1929, column: 14, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 1929, column: 2)
!10855 = !DILocation(line: 1929, column: 18, scope: !10854)
!10856 = !DILocation(line: 1929, column: 25, scope: !10854)
!10857 = !DILocation(line: 1929, column: 35, scope: !10854)
!10858 = !DILocation(line: 1929, column: 41, scope: !10854)
!10859 = !DILocation(line: 1929, column: 12, scope: !10854)
!10860 = !DILocation(line: 1929, column: 7, scope: !10854)
!10861 = !DILocation(line: 1929, column: 48, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10854, file: !3, line: 1929, column: 2)
!10863 = !DILocation(line: 1929, column: 2, scope: !10854)
!10864 = !DILocation(line: 1930, column: 7, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10866, file: !3, line: 1930, column: 7)
!10866 = distinct !DILexicalBlock(scope: !10862, file: !3, line: 1929, column: 73)
!10867 = !DILocation(line: 1930, column: 13, scope: !10865)
!10868 = !DILocation(line: 1930, column: 18, scope: !10865)
!10869 = !DILocation(line: 1930, column: 39, scope: !10865)
!10870 = !DILocation(line: 1930, column: 43, scope: !10865)
!10871 = !DILocation(line: 1930, column: 49, scope: !10865)
!10872 = !DILocation(line: 1930, column: 54, scope: !10865)
!10873 = !DILocation(line: 1930, column: 68, scope: !10865)
!10874 = !DILocation(line: 1930, column: 7, scope: !10866)
!10875 = !DILocation(line: 1931, column: 8, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 1931, column: 8)
!10877 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 1930, column: 74)
!10878 = !DILocation(line: 1931, column: 14, scope: !10876)
!10879 = !DILocation(line: 1931, column: 17, scope: !10876)
!10880 = !DILocation(line: 1931, column: 20, scope: !10876)
!10881 = !DILocation(line: 1931, column: 26, scope: !10876)
!10882 = !DILocation(line: 1931, column: 38, scope: !10876)
!10883 = !DILocation(line: 1931, column: 42, scope: !10876)
!10884 = !DILocation(line: 1931, column: 32, scope: !10876)
!10885 = !DILocation(line: 1931, column: 29, scope: !10876)
!10886 = !DILocation(line: 1931, column: 8, scope: !10877)
!10887 = !DILocation(line: 1932, column: 9, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 1932, column: 9)
!10889 = distinct !DILexicalBlock(scope: !10876, file: !3, line: 1931, column: 49)
!10890 = !DILocation(line: 1932, column: 15, scope: !10888)
!10891 = !DILocation(line: 1932, column: 20, scope: !10888)
!10892 = !DILocation(line: 1932, column: 9, scope: !10889)
!10893 = !DILocalVariable(name: "scene", scope: !10894, file: !3, line: 1933, type: !217)
!10894 = distinct !DILexicalBlock(scope: !10888, file: !3, line: 1932, column: 33)
!10895 = !DILocation(line: 1933, column: 13, scope: !10894)
!10896 = !DILocation(line: 1933, column: 30, scope: !10894)
!10897 = !DILocation(line: 1933, column: 36, scope: !10894)
!10898 = !DILocation(line: 1933, column: 21, scope: !10894)
!10899 = !DILocation(line: 1935, column: 23, scope: !10894)
!10900 = !DILocation(line: 1935, column: 32, scope: !10894)
!10901 = !DILocation(line: 1935, column: 29, scope: !10894)
!10902 = !DILocation(line: 1935, column: 20, scope: !10894)
!10903 = !DILocation(line: 1936, column: 19, scope: !10894)
!10904 = !DILocation(line: 1936, column: 23, scope: !10894)
!10905 = !DILocation(line: 1936, column: 30, scope: !10894)
!10906 = !DILocation(line: 1936, column: 6, scope: !10894)
!10907 = !DILocation(line: 1937, column: 6, scope: !10894)
!10908 = !DILocation(line: 1937, column: 12, scope: !10894)
!10909 = !DILocation(line: 1937, column: 17, scope: !10894)
!10910 = !DILocation(line: 1939, column: 17, scope: !10894)
!10911 = !DILocation(line: 1939, column: 32, scope: !10894)
!10912 = !DILocation(line: 1939, column: 42, scope: !10894)
!10913 = !DILocation(line: 1939, column: 6, scope: !10894)
!10914 = !DILocation(line: 1940, column: 5, scope: !10894)
!10915 = !DILocation(line: 1941, column: 4, scope: !10889)
!10916 = !DILocation(line: 1942, column: 3, scope: !10877)
!10917 = !DILocation(line: 1943, column: 2, scope: !10866)
!10918 = !DILocation(line: 1929, column: 61, scope: !10862)
!10919 = !DILocation(line: 1929, column: 67, scope: !10862)
!10920 = !DILocation(line: 1929, column: 59, scope: !10862)
!10921 = !DILocation(line: 1929, column: 2, scope: !10862)
!10922 = distinct !{!10922, !10863, !10923}
!10923 = !DILocation(line: 1943, column: 2, scope: !10854)
!10924 = !DILocation(line: 1946, column: 6, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 1946, column: 6)
!10926 = !DILocation(line: 1946, column: 6, scope: !10827)
!10927 = !DILocation(line: 1947, column: 28, scope: !10925)
!10928 = !DILocation(line: 1947, column: 32, scope: !10925)
!10929 = !DILocation(line: 1947, column: 38, scope: !10925)
!10930 = !DILocation(line: 1947, column: 42, scope: !10925)
!10931 = !DILocation(line: 1947, column: 3, scope: !10925)
!10932 = !DILocation(line: 1948, column: 1, scope: !10827)
!10933 = distinct !DISubprogram(name: "do_render_fields_3d", scope: !3, file: !3, line: 1531, type: !3574, scopeLine: 1532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!10934 = !DILocalVariable(name: "re", arg: 1, scope: !10933, file: !3, line: 1531, type: !3576)
!10935 = !DILocation(line: 1531, column: 41, scope: !10933)
!10936 = !DILocalVariable(name: "camera", scope: !10933, file: !3, line: 1533, type: !3465)
!10937 = !DILocation(line: 1533, column: 10, scope: !10933)
!10938 = !DILocation(line: 1533, column: 32, scope: !10933)
!10939 = !DILocation(line: 1533, column: 19, scope: !10933)
!10940 = !DILocalVariable(name: "rr1", scope: !10933, file: !3, line: 1534, type: !3006)
!10941 = !DILocation(line: 1534, column: 16, scope: !10933)
!10942 = !DILocalVariable(name: "rr2", scope: !10933, file: !3, line: 1534, type: !3006)
!10943 = !DILocation(line: 1534, column: 22, scope: !10933)
!10944 = !DILocation(line: 1537, column: 2, scope: !10933)
!10945 = !DILocation(line: 1537, column: 6, scope: !10933)
!10946 = !DILocation(line: 1537, column: 11, scope: !10933)
!10947 = !DILocation(line: 1538, column: 2, scope: !10933)
!10948 = !DILocation(line: 1538, column: 6, scope: !10933)
!10949 = !DILocation(line: 1538, column: 12, scope: !10933)
!10950 = !DILocation(line: 1539, column: 2, scope: !10933)
!10951 = !DILocation(line: 1539, column: 6, scope: !10933)
!10952 = !DILocation(line: 1539, column: 15, scope: !10933)
!10953 = !DILocation(line: 1539, column: 20, scope: !10933)
!10954 = !DILocation(line: 1540, column: 2, scope: !10933)
!10955 = !DILocation(line: 1540, column: 6, scope: !10933)
!10956 = !DILocation(line: 1540, column: 15, scope: !10933)
!10957 = !DILocation(line: 1540, column: 20, scope: !10933)
!10958 = !DILocation(line: 1542, column: 2, scope: !10933)
!10959 = !DILocation(line: 1542, column: 6, scope: !10933)
!10960 = !DILocation(line: 1542, column: 8, scope: !10933)
!10961 = !DILocation(line: 1542, column: 17, scope: !10933)
!10962 = !DILocation(line: 1545, column: 15, scope: !10933)
!10963 = !DILocation(line: 1545, column: 19, scope: !10933)
!10964 = !DILocation(line: 1545, column: 2, scope: !10933)
!10965 = !DILocation(line: 1546, column: 6, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 1546, column: 6)
!10967 = !DILocation(line: 1546, column: 10, scope: !10966)
!10968 = !DILocation(line: 1546, column: 12, scope: !10966)
!10969 = !DILocation(line: 1546, column: 17, scope: !10966)
!10970 = !DILocation(line: 1546, column: 27, scope: !10966)
!10971 = !DILocation(line: 1546, column: 31, scope: !10966)
!10972 = !DILocation(line: 1546, column: 35, scope: !10966)
!10973 = !DILocation(line: 1546, column: 37, scope: !10966)
!10974 = !DILocation(line: 1546, column: 45, scope: !10966)
!10975 = !DILocation(line: 1546, column: 62, scope: !10966)
!10976 = !DILocation(line: 1546, column: 6, scope: !10933)
!10977 = !DILocation(line: 1547, column: 21, scope: !10966)
!10978 = !DILocation(line: 1547, column: 3, scope: !10966)
!10979 = !DILocation(line: 1549, column: 16, scope: !10966)
!10980 = !DILocation(line: 1549, column: 3, scope: !10966)
!10981 = !DILocation(line: 1551, column: 21, scope: !10933)
!10982 = !DILocation(line: 1551, column: 25, scope: !10933)
!10983 = !DILocation(line: 1551, column: 2, scope: !10933)
!10984 = !DILocation(line: 1552, column: 8, scope: !10933)
!10985 = !DILocation(line: 1552, column: 12, scope: !10933)
!10986 = !DILocation(line: 1552, column: 6, scope: !10933)
!10987 = !DILocation(line: 1553, column: 2, scope: !10933)
!10988 = !DILocation(line: 1553, column: 6, scope: !10933)
!10989 = !DILocation(line: 1553, column: 13, scope: !10933)
!10990 = !DILocation(line: 1554, column: 23, scope: !10933)
!10991 = !DILocation(line: 1554, column: 27, scope: !10933)
!10992 = !DILocation(line: 1554, column: 2, scope: !10933)
!10993 = !DILocation(line: 1557, column: 7, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 1557, column: 6)
!10995 = !DILocation(line: 1557, column: 11, scope: !10994)
!10996 = !DILocation(line: 1557, column: 22, scope: !10994)
!10997 = !DILocation(line: 1557, column: 26, scope: !10994)
!10998 = !DILocation(line: 1557, column: 6, scope: !10933)
!10999 = !DILocation(line: 1559, column: 3, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10994, file: !3, line: 1557, column: 32)
!11001 = !DILocation(line: 1559, column: 7, scope: !11000)
!11002 = !DILocation(line: 1559, column: 9, scope: !11000)
!11003 = !DILocation(line: 1559, column: 18, scope: !11000)
!11004 = !DILocation(line: 1561, column: 3, scope: !11000)
!11005 = !DILocation(line: 1561, column: 7, scope: !11000)
!11006 = !DILocation(line: 1561, column: 12, scope: !11000)
!11007 = !DILocation(line: 1562, column: 8, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 1562, column: 7)
!11009 = !DILocation(line: 1562, column: 12, scope: !11008)
!11010 = !DILocation(line: 1562, column: 14, scope: !11008)
!11011 = !DILocation(line: 1562, column: 19, scope: !11008)
!11012 = !DILocation(line: 1562, column: 35, scope: !11008)
!11013 = !DILocation(line: 1562, column: 7, scope: !11000)
!11014 = !DILocation(line: 1563, column: 4, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11008, file: !3, line: 1562, column: 41)
!11016 = !DILocation(line: 1563, column: 8, scope: !11015)
!11017 = !DILocation(line: 1563, column: 19, scope: !11015)
!11018 = !DILocation(line: 1564, column: 3, scope: !11015)
!11019 = !DILocation(line: 1565, column: 16, scope: !11000)
!11020 = !DILocation(line: 1565, column: 20, scope: !11000)
!11021 = !DILocation(line: 1565, column: 3, scope: !11000)
!11022 = !DILocation(line: 1566, column: 7, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 1566, column: 7)
!11024 = !DILocation(line: 1566, column: 11, scope: !11023)
!11025 = !DILocation(line: 1566, column: 13, scope: !11023)
!11026 = !DILocation(line: 1566, column: 18, scope: !11023)
!11027 = !DILocation(line: 1566, column: 28, scope: !11023)
!11028 = !DILocation(line: 1566, column: 32, scope: !11023)
!11029 = !DILocation(line: 1566, column: 36, scope: !11023)
!11030 = !DILocation(line: 1566, column: 38, scope: !11023)
!11031 = !DILocation(line: 1566, column: 46, scope: !11023)
!11032 = !DILocation(line: 1566, column: 63, scope: !11023)
!11033 = !DILocation(line: 1566, column: 7, scope: !11000)
!11034 = !DILocation(line: 1567, column: 22, scope: !11023)
!11035 = !DILocation(line: 1567, column: 4, scope: !11023)
!11036 = !DILocation(line: 1569, column: 17, scope: !11023)
!11037 = !DILocation(line: 1569, column: 4, scope: !11023)
!11038 = !DILocation(line: 1570, column: 3, scope: !11000)
!11039 = !DILocation(line: 1570, column: 7, scope: !11000)
!11040 = !DILocation(line: 1570, column: 12, scope: !11000)
!11041 = !DILocation(line: 1572, column: 3, scope: !11000)
!11042 = !DILocation(line: 1572, column: 7, scope: !11000)
!11043 = !DILocation(line: 1572, column: 18, scope: !11000)
!11044 = !DILocation(line: 1574, column: 9, scope: !11000)
!11045 = !DILocation(line: 1574, column: 13, scope: !11000)
!11046 = !DILocation(line: 1574, column: 7, scope: !11000)
!11047 = !DILocation(line: 1575, column: 2, scope: !11000)
!11048 = !DILocation(line: 1578, column: 2, scope: !10933)
!11049 = !DILocation(line: 1578, column: 6, scope: !10933)
!11050 = !DILocation(line: 1578, column: 11, scope: !10933)
!11051 = !DILocation(line: 1579, column: 2, scope: !10933)
!11052 = !DILocation(line: 1579, column: 6, scope: !10933)
!11053 = !DILocation(line: 1579, column: 12, scope: !10933)
!11054 = !DILocation(line: 1580, column: 2, scope: !10933)
!11055 = !DILocation(line: 1580, column: 6, scope: !10933)
!11056 = !DILocation(line: 1580, column: 15, scope: !10933)
!11057 = !DILocation(line: 1580, column: 20, scope: !10933)
!11058 = !DILocation(line: 1581, column: 2, scope: !10933)
!11059 = !DILocation(line: 1581, column: 6, scope: !10933)
!11060 = !DILocation(line: 1581, column: 15, scope: !10933)
!11061 = !DILocation(line: 1581, column: 20, scope: !10933)
!11062 = !DILocation(line: 1583, column: 21, scope: !10933)
!11063 = !DILocation(line: 1583, column: 25, scope: !10933)
!11064 = !DILocation(line: 1583, column: 2, scope: !10933)
!11065 = !DILocation(line: 1584, column: 33, scope: !10933)
!11066 = !DILocation(line: 1584, column: 38, scope: !10933)
!11067 = !DILocation(line: 1584, column: 42, scope: !10933)
!11068 = !DILocation(line: 1584, column: 15, scope: !10933)
!11069 = !DILocation(line: 1584, column: 2, scope: !10933)
!11070 = !DILocation(line: 1584, column: 6, scope: !10933)
!11071 = !DILocation(line: 1584, column: 13, scope: !10933)
!11072 = !DILocation(line: 1586, column: 6, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 1586, column: 6)
!11074 = !DILocation(line: 1586, column: 6, scope: !10933)
!11075 = !DILocation(line: 1587, column: 7, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 1587, column: 7)
!11077 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 1586, column: 11)
!11078 = !DILocation(line: 1587, column: 11, scope: !11076)
!11079 = !DILocation(line: 1587, column: 13, scope: !11076)
!11080 = !DILocation(line: 1587, column: 18, scope: !11076)
!11081 = !DILocation(line: 1587, column: 7, scope: !11077)
!11082 = !DILocation(line: 1588, column: 30, scope: !11076)
!11083 = !DILocation(line: 1588, column: 34, scope: !11076)
!11084 = !DILocation(line: 1588, column: 42, scope: !11076)
!11085 = !DILocation(line: 1588, column: 47, scope: !11076)
!11086 = !DILocation(line: 1588, column: 4, scope: !11076)
!11087 = !DILocation(line: 1590, column: 30, scope: !11076)
!11088 = !DILocation(line: 1590, column: 34, scope: !11076)
!11089 = !DILocation(line: 1590, column: 42, scope: !11076)
!11090 = !DILocation(line: 1590, column: 47, scope: !11076)
!11091 = !DILocation(line: 1590, column: 4, scope: !11076)
!11092 = !DILocation(line: 1592, column: 22, scope: !11077)
!11093 = !DILocation(line: 1592, column: 3, scope: !11077)
!11094 = !DILocation(line: 1593, column: 2, scope: !11077)
!11095 = !DILocation(line: 1595, column: 21, scope: !10933)
!11096 = !DILocation(line: 1595, column: 2, scope: !10933)
!11097 = !DILocation(line: 1597, column: 2, scope: !10933)
!11098 = !DILocation(line: 1597, column: 6, scope: !10933)
!11099 = !DILocation(line: 1597, column: 8, scope: !10933)
!11100 = !DILocation(line: 1597, column: 17, scope: !10933)
!11101 = !DILocation(line: 1600, column: 47, scope: !10933)
!11102 = !DILocation(line: 1600, column: 51, scope: !10933)
!11103 = !DILocation(line: 1600, column: 55, scope: !10933)
!11104 = !DILocation(line: 1600, column: 23, scope: !10933)
!11105 = !DILocation(line: 1600, column: 2, scope: !10933)
!11106 = !DILocation(line: 1600, column: 6, scope: !10933)
!11107 = !DILocation(line: 1600, column: 14, scope: !10933)
!11108 = !DILocation(line: 1600, column: 21, scope: !10933)
!11109 = !DILocation(line: 1602, column: 23, scope: !10933)
!11110 = !DILocation(line: 1602, column: 27, scope: !10933)
!11111 = !DILocation(line: 1602, column: 2, scope: !10933)
!11112 = !DILocation(line: 1604, column: 2, scope: !10933)
!11113 = !DILocation(line: 1604, column: 6, scope: !10933)
!11114 = !DILocation(line: 1604, column: 21, scope: !10933)
!11115 = !DILocation(line: 1604, column: 25, scope: !10933)
!11116 = !DILocation(line: 1604, column: 30, scope: !10933)
!11117 = !DILocation(line: 1604, column: 34, scope: !10933)
!11118 = !DILocation(line: 1605, column: 1, scope: !10933)
!11119 = distinct !DISubprogram(name: "do_render_blur_3d", scope: !3, file: !3, line: 1444, type: !3574, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!11120 = !DILocalVariable(name: "re", arg: 1, scope: !11119, file: !3, line: 1444, type: !3576)
!11121 = !DILocation(line: 1444, column: 39, scope: !11119)
!11122 = !DILocalVariable(name: "rres", scope: !11119, file: !3, line: 1446, type: !3006)
!11123 = !DILocation(line: 1446, column: 16, scope: !11119)
!11124 = !DILocalVariable(name: "blurfac", scope: !11119, file: !3, line: 1447, type: !216)
!11125 = !DILocation(line: 1447, column: 8, scope: !11119)
!11126 = !DILocalVariable(name: "blur", scope: !11119, file: !3, line: 1448, type: !7)
!11127 = !DILocation(line: 1448, column: 6, scope: !11119)
!11128 = !DILocation(line: 1448, column: 13, scope: !11119)
!11129 = !DILocation(line: 1448, column: 17, scope: !11119)
!11130 = !DILocation(line: 1448, column: 19, scope: !11119)
!11131 = !DILocation(line: 1451, column: 27, scope: !11119)
!11132 = !DILocation(line: 1451, column: 32, scope: !11119)
!11133 = !DILocation(line: 1451, column: 36, scope: !11119)
!11134 = !DILocation(line: 1451, column: 9, scope: !11119)
!11135 = !DILocation(line: 1451, column: 7, scope: !11119)
!11136 = !DILocation(line: 1454, column: 2, scope: !11119)
!11137 = !DILocation(line: 1454, column: 13, scope: !11119)
!11138 = !DILocation(line: 1455, column: 20, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 1454, column: 17)
!11140 = !DILocation(line: 1455, column: 24, scope: !11139)
!11141 = !DILocation(line: 1455, column: 26, scope: !11139)
!11142 = !DILocation(line: 1455, column: 45, scope: !11139)
!11143 = !DILocation(line: 1455, column: 49, scope: !11139)
!11144 = !DILocation(line: 1455, column: 51, scope: !11139)
!11145 = !DILocation(line: 1455, column: 67, scope: !11139)
!11146 = !DILocation(line: 1455, column: 65, scope: !11139)
!11147 = !DILocation(line: 1455, column: 37, scope: !11139)
!11148 = !DILocation(line: 1455, column: 34, scope: !11139)
!11149 = !DILocation(line: 1455, column: 83, scope: !11139)
!11150 = !DILocation(line: 1455, column: 87, scope: !11139)
!11151 = !DILocation(line: 1455, column: 89, scope: !11139)
!11152 = !DILocation(line: 1455, column: 76, scope: !11139)
!11153 = !DILocation(line: 1455, column: 74, scope: !11139)
!11154 = !DILocation(line: 1455, column: 3, scope: !11139)
!11155 = !DILocation(line: 1455, column: 7, scope: !11139)
!11156 = !DILocation(line: 1455, column: 18, scope: !11139)
!11157 = !DILocation(line: 1457, column: 19, scope: !11139)
!11158 = !DILocation(line: 1457, column: 23, scope: !11139)
!11159 = !DILocation(line: 1457, column: 25, scope: !11139)
!11160 = !DILocation(line: 1457, column: 41, scope: !11139)
!11161 = !DILocation(line: 1457, column: 39, scope: !11139)
!11162 = !DILocation(line: 1457, column: 3, scope: !11139)
!11163 = !DILocation(line: 1457, column: 7, scope: !11139)
!11164 = !DILocation(line: 1457, column: 9, scope: !11139)
!11165 = !DILocation(line: 1457, column: 17, scope: !11139)
!11166 = !DILocation(line: 1459, column: 16, scope: !11139)
!11167 = !DILocation(line: 1459, column: 3, scope: !11139)
!11168 = !DILocation(line: 1461, column: 28, scope: !11139)
!11169 = !DILocation(line: 1461, column: 32, scope: !11139)
!11170 = !DILocation(line: 1461, column: 34, scope: !11139)
!11171 = !DILocation(line: 1461, column: 50, scope: !11139)
!11172 = !DILocation(line: 1461, column: 48, scope: !11139)
!11173 = !DILocation(line: 1461, column: 20, scope: !11139)
!11174 = !DILocation(line: 1461, column: 18, scope: !11139)
!11175 = !DILocation(line: 1461, column: 11, scope: !11139)
!11176 = !DILocation(line: 1463, column: 27, scope: !11139)
!11177 = !DILocation(line: 1463, column: 33, scope: !11139)
!11178 = !DILocation(line: 1463, column: 37, scope: !11139)
!11179 = !DILocation(line: 1463, column: 45, scope: !11139)
!11180 = !DILocation(line: 1463, column: 3, scope: !11139)
!11181 = !DILocation(line: 1464, column: 7, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 1464, column: 7)
!11183 = !DILocation(line: 1464, column: 11, scope: !11182)
!11184 = !DILocation(line: 1464, column: 22, scope: !11182)
!11185 = !DILocation(line: 1464, column: 26, scope: !11182)
!11186 = !DILocation(line: 1464, column: 7, scope: !11139)
!11187 = !DILocation(line: 1464, column: 32, scope: !11182)
!11188 = distinct !{!11188, !11136, !11189}
!11189 = !DILocation(line: 1465, column: 2, scope: !11119)
!11190 = !DILocation(line: 1468, column: 21, scope: !11119)
!11191 = !DILocation(line: 1468, column: 25, scope: !11119)
!11192 = !DILocation(line: 1468, column: 2, scope: !11119)
!11193 = !DILocation(line: 1469, column: 21, scope: !11119)
!11194 = !DILocation(line: 1469, column: 25, scope: !11119)
!11195 = !DILocation(line: 1469, column: 2, scope: !11119)
!11196 = !DILocation(line: 1470, column: 15, scope: !11119)
!11197 = !DILocation(line: 1470, column: 2, scope: !11119)
!11198 = !DILocation(line: 1470, column: 6, scope: !11119)
!11199 = !DILocation(line: 1470, column: 13, scope: !11119)
!11200 = !DILocation(line: 1471, column: 23, scope: !11119)
!11201 = !DILocation(line: 1471, column: 27, scope: !11119)
!11202 = !DILocation(line: 1471, column: 2, scope: !11119)
!11203 = !DILocation(line: 1473, column: 2, scope: !11119)
!11204 = !DILocation(line: 1473, column: 6, scope: !11119)
!11205 = !DILocation(line: 1473, column: 17, scope: !11119)
!11206 = !DILocation(line: 1474, column: 2, scope: !11119)
!11207 = !DILocation(line: 1474, column: 6, scope: !11119)
!11208 = !DILocation(line: 1474, column: 8, scope: !11119)
!11209 = !DILocation(line: 1474, column: 16, scope: !11119)
!11210 = !DILocation(line: 1477, column: 7, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 1477, column: 6)
!11212 = !DILocation(line: 1477, column: 11, scope: !11211)
!11213 = !DILocation(line: 1477, column: 13, scope: !11211)
!11214 = !DILocation(line: 1477, column: 21, scope: !11211)
!11215 = !DILocation(line: 1477, column: 77, scope: !11211)
!11216 = !DILocation(line: 1477, column: 6, scope: !11119)
!11217 = !DILocation(line: 1478, column: 33, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 1477, column: 82)
!11219 = !DILocation(line: 1478, column: 37, scope: !11218)
!11220 = !DILocation(line: 1478, column: 47, scope: !11218)
!11221 = !DILocation(line: 1478, column: 51, scope: !11218)
!11222 = !DILocation(line: 1478, column: 57, scope: !11218)
!11223 = !DILocation(line: 1478, column: 61, scope: !11218)
!11224 = !DILocation(line: 1478, column: 68, scope: !11218)
!11225 = !DILocation(line: 1478, column: 72, scope: !11218)
!11226 = !DILocation(line: 1478, column: 3, scope: !11218)
!11227 = !DILocation(line: 1479, column: 2, scope: !11218)
!11228 = !DILocation(line: 1482, column: 47, scope: !11119)
!11229 = !DILocation(line: 1482, column: 51, scope: !11119)
!11230 = !DILocation(line: 1482, column: 55, scope: !11119)
!11231 = !DILocation(line: 1482, column: 23, scope: !11119)
!11232 = !DILocation(line: 1482, column: 2, scope: !11119)
!11233 = !DILocation(line: 1482, column: 6, scope: !11119)
!11234 = !DILocation(line: 1482, column: 14, scope: !11119)
!11235 = !DILocation(line: 1482, column: 21, scope: !11119)
!11236 = !DILocation(line: 1483, column: 2, scope: !11119)
!11237 = !DILocation(line: 1483, column: 6, scope: !11119)
!11238 = !DILocation(line: 1483, column: 21, scope: !11119)
!11239 = !DILocation(line: 1483, column: 25, scope: !11119)
!11240 = !DILocation(line: 1483, column: 30, scope: !11119)
!11241 = !DILocation(line: 1483, column: 34, scope: !11119)
!11242 = !DILocation(line: 1484, column: 1, scope: !11119)
!11243 = distinct !DISubprogram(name: "merge_renderresult_fields", scope: !3, file: !3, line: 1504, type: !11244, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!11244 = !DISubroutineType(types: !11245)
!11245 = !{null, !3006, !3006, !3006}
!11246 = !DILocalVariable(name: "rr", arg: 1, scope: !11243, file: !3, line: 1504, type: !3006)
!11247 = !DILocation(line: 1504, column: 53, scope: !11243)
!11248 = !DILocalVariable(name: "rr1", arg: 2, scope: !11243, file: !3, line: 1504, type: !3006)
!11249 = !DILocation(line: 1504, column: 71, scope: !11243)
!11250 = !DILocalVariable(name: "rr2", arg: 3, scope: !11243, file: !3, line: 1504, type: !3006)
!11251 = !DILocation(line: 1504, column: 90, scope: !11243)
!11252 = !DILocalVariable(name: "rl", scope: !11243, file: !3, line: 1506, type: !3596)
!11253 = !DILocation(line: 1506, column: 15, scope: !11243)
!11254 = !DILocalVariable(name: "rl1", scope: !11243, file: !3, line: 1506, type: !3596)
!11255 = !DILocation(line: 1506, column: 20, scope: !11243)
!11256 = !DILocalVariable(name: "rl2", scope: !11243, file: !3, line: 1506, type: !3596)
!11257 = !DILocation(line: 1506, column: 26, scope: !11243)
!11258 = !DILocalVariable(name: "rpass", scope: !11243, file: !3, line: 1507, type: !3602)
!11259 = !DILocation(line: 1507, column: 14, scope: !11243)
!11260 = !DILocalVariable(name: "rpass1", scope: !11243, file: !3, line: 1507, type: !3602)
!11261 = !DILocation(line: 1507, column: 22, scope: !11243)
!11262 = !DILocalVariable(name: "rpass2", scope: !11243, file: !3, line: 1507, type: !3602)
!11263 = !DILocation(line: 1507, column: 31, scope: !11243)
!11264 = !DILocation(line: 1509, column: 8, scope: !11243)
!11265 = !DILocation(line: 1509, column: 13, scope: !11243)
!11266 = !DILocation(line: 1509, column: 20, scope: !11243)
!11267 = !DILocation(line: 1509, column: 6, scope: !11243)
!11268 = !DILocation(line: 1510, column: 8, scope: !11243)
!11269 = !DILocation(line: 1510, column: 13, scope: !11243)
!11270 = !DILocation(line: 1510, column: 20, scope: !11243)
!11271 = !DILocation(line: 1510, column: 6, scope: !11243)
!11272 = !DILocation(line: 1511, column: 12, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 1511, column: 2)
!11274 = !DILocation(line: 1511, column: 16, scope: !11273)
!11275 = !DILocation(line: 1511, column: 23, scope: !11273)
!11276 = !DILocation(line: 1511, column: 10, scope: !11273)
!11277 = !DILocation(line: 1511, column: 7, scope: !11273)
!11278 = !DILocation(line: 1511, column: 30, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1511, column: 2)
!11280 = !DILocation(line: 1511, column: 33, scope: !11279)
!11281 = !DILocation(line: 1511, column: 36, scope: !11279)
!11282 = !DILocation(line: 1511, column: 40, scope: !11279)
!11283 = !DILocation(line: 1511, column: 43, scope: !11279)
!11284 = !DILocation(line: 0, scope: !11279)
!11285 = !DILocation(line: 1511, column: 2, scope: !11273)
!11286 = !DILocation(line: 1514, column: 7, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11288, file: !3, line: 1514, column: 7)
!11288 = distinct !DILexicalBlock(scope: !11279, file: !3, line: 1511, column: 97)
!11289 = !DILocation(line: 1514, column: 11, scope: !11287)
!11290 = !DILocation(line: 1514, column: 17, scope: !11287)
!11291 = !DILocation(line: 1514, column: 20, scope: !11287)
!11292 = !DILocation(line: 1514, column: 25, scope: !11287)
!11293 = !DILocation(line: 1514, column: 31, scope: !11287)
!11294 = !DILocation(line: 1514, column: 34, scope: !11287)
!11295 = !DILocation(line: 1514, column: 39, scope: !11287)
!11296 = !DILocation(line: 1514, column: 7, scope: !11288)
!11297 = !DILocation(line: 1515, column: 20, scope: !11287)
!11298 = !DILocation(line: 1515, column: 24, scope: !11287)
!11299 = !DILocation(line: 1515, column: 28, scope: !11287)
!11300 = !DILocation(line: 1515, column: 35, scope: !11287)
!11301 = !DILocation(line: 1515, column: 40, scope: !11287)
!11302 = !DILocation(line: 1515, column: 47, scope: !11287)
!11303 = !DILocation(line: 1515, column: 52, scope: !11287)
!11304 = !DILocation(line: 1515, column: 4, scope: !11287)
!11305 = !DILocation(line: 1518, column: 12, scope: !11288)
!11306 = !DILocation(line: 1518, column: 17, scope: !11288)
!11307 = !DILocation(line: 1518, column: 24, scope: !11288)
!11308 = !DILocation(line: 1518, column: 10, scope: !11288)
!11309 = !DILocation(line: 1519, column: 12, scope: !11288)
!11310 = !DILocation(line: 1519, column: 17, scope: !11288)
!11311 = !DILocation(line: 1519, column: 24, scope: !11288)
!11312 = !DILocation(line: 1519, column: 10, scope: !11288)
!11313 = !DILocation(line: 1520, column: 16, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11288, file: !3, line: 1520, column: 3)
!11315 = !DILocation(line: 1520, column: 20, scope: !11314)
!11316 = !DILocation(line: 1520, column: 27, scope: !11314)
!11317 = !DILocation(line: 1520, column: 14, scope: !11314)
!11318 = !DILocation(line: 1520, column: 8, scope: !11314)
!11319 = !DILocation(line: 1521, column: 8, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 1520, column: 3)
!11321 = !DILocation(line: 1521, column: 14, scope: !11320)
!11322 = !DILocation(line: 1521, column: 17, scope: !11320)
!11323 = !DILocation(line: 1521, column: 24, scope: !11320)
!11324 = !DILocation(line: 1521, column: 27, scope: !11320)
!11325 = !DILocation(line: 0, scope: !11320)
!11326 = !DILocation(line: 1520, column: 3, scope: !11314)
!11327 = !DILocation(line: 1524, column: 20, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11320, file: !3, line: 1523, column: 3)
!11329 = !DILocation(line: 1524, column: 24, scope: !11328)
!11330 = !DILocation(line: 1524, column: 31, scope: !11328)
!11331 = !DILocation(line: 1524, column: 37, scope: !11328)
!11332 = !DILocation(line: 1524, column: 45, scope: !11328)
!11333 = !DILocation(line: 1524, column: 51, scope: !11328)
!11334 = !DILocation(line: 1524, column: 59, scope: !11328)
!11335 = !DILocation(line: 1524, column: 65, scope: !11328)
!11336 = !DILocation(line: 1524, column: 72, scope: !11328)
!11337 = !DILocation(line: 1524, column: 4, scope: !11328)
!11338 = !DILocation(line: 1525, column: 3, scope: !11328)
!11339 = !DILocation(line: 1522, column: 16, scope: !11320)
!11340 = !DILocation(line: 1522, column: 23, scope: !11320)
!11341 = !DILocation(line: 1522, column: 14, scope: !11320)
!11342 = !DILocation(line: 1522, column: 38, scope: !11320)
!11343 = !DILocation(line: 1522, column: 46, scope: !11320)
!11344 = !DILocation(line: 1522, column: 36, scope: !11320)
!11345 = !DILocation(line: 1522, column: 61, scope: !11320)
!11346 = !DILocation(line: 1522, column: 69, scope: !11320)
!11347 = !DILocation(line: 1522, column: 59, scope: !11320)
!11348 = !DILocation(line: 1520, column: 3, scope: !11320)
!11349 = distinct !{!11349, !11326, !11350}
!11350 = !DILocation(line: 1525, column: 3, scope: !11314)
!11351 = !DILocation(line: 1526, column: 2, scope: !11288)
!11352 = !DILocation(line: 1511, column: 53, scope: !11279)
!11353 = !DILocation(line: 1511, column: 57, scope: !11279)
!11354 = !DILocation(line: 1511, column: 51, scope: !11279)
!11355 = !DILocation(line: 1511, column: 69, scope: !11279)
!11356 = !DILocation(line: 1511, column: 74, scope: !11279)
!11357 = !DILocation(line: 1511, column: 67, scope: !11279)
!11358 = !DILocation(line: 1511, column: 86, scope: !11279)
!11359 = !DILocation(line: 1511, column: 91, scope: !11279)
!11360 = !DILocation(line: 1511, column: 84, scope: !11279)
!11361 = !DILocation(line: 1511, column: 2, scope: !11279)
!11362 = distinct !{!11362, !11285, !11363}
!11363 = !DILocation(line: 1526, column: 2, scope: !11273)
!11364 = !DILocation(line: 1527, column: 1, scope: !11243)
!11365 = distinct !DISubprogram(name: "interleave_rect", scope: !3, file: !3, line: 1488, type: !11366, scopeLine: 1489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!11366 = !DISubroutineType(types: !11367)
!11367 = !{null, !3006, !778, !778, !778, !7}
!11368 = !DILocalVariable(name: "rr", arg: 1, scope: !11365, file: !3, line: 1488, type: !3006)
!11369 = !DILocation(line: 1488, column: 43, scope: !11365)
!11370 = !DILocalVariable(name: "rectf", arg: 2, scope: !11365, file: !3, line: 1488, type: !778)
!11371 = !DILocation(line: 1488, column: 54, scope: !11365)
!11372 = !DILocalVariable(name: "rectf1", arg: 3, scope: !11365, file: !3, line: 1488, type: !778)
!11373 = !DILocation(line: 1488, column: 68, scope: !11365)
!11374 = !DILocalVariable(name: "rectf2", arg: 4, scope: !11365, file: !3, line: 1488, type: !778)
!11375 = !DILocation(line: 1488, column: 83, scope: !11365)
!11376 = !DILocalVariable(name: "channels", arg: 5, scope: !11365, file: !3, line: 1488, type: !7)
!11377 = !DILocation(line: 1488, column: 95, scope: !11365)
!11378 = !DILocalVariable(name: "a", scope: !11365, file: !3, line: 1490, type: !7)
!11379 = !DILocation(line: 1490, column: 6, scope: !11365)
!11380 = !DILocalVariable(name: "stride", scope: !11365, file: !3, line: 1490, type: !7)
!11381 = !DILocation(line: 1490, column: 9, scope: !11365)
!11382 = !DILocation(line: 1490, column: 18, scope: !11365)
!11383 = !DILocation(line: 1490, column: 29, scope: !11365)
!11384 = !DILocation(line: 1490, column: 33, scope: !11365)
!11385 = !DILocation(line: 1490, column: 27, scope: !11365)
!11386 = !DILocalVariable(name: "len", scope: !11365, file: !3, line: 1491, type: !7)
!11387 = !DILocation(line: 1491, column: 6, scope: !11365)
!11388 = !DILocation(line: 1491, column: 12, scope: !11365)
!11389 = !DILocation(line: 1491, column: 19, scope: !11365)
!11390 = !DILocation(line: 1493, column: 9, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11365, file: !3, line: 1493, column: 2)
!11392 = !DILocation(line: 1493, column: 7, scope: !11391)
!11393 = !DILocation(line: 1493, column: 14, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11391, file: !3, line: 1493, column: 2)
!11395 = !DILocation(line: 1493, column: 18, scope: !11394)
!11396 = !DILocation(line: 1493, column: 22, scope: !11394)
!11397 = !DILocation(line: 1493, column: 16, scope: !11394)
!11398 = !DILocation(line: 1493, column: 2, scope: !11391)
!11399 = !DILocation(line: 1494, column: 10, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11394, file: !3, line: 1493, column: 37)
!11401 = !DILocation(line: 1494, column: 3, scope: !11400)
!11402 = !DILocation(line: 1494, column: 17, scope: !11400)
!11403 = !DILocation(line: 1494, column: 25, scope: !11400)
!11404 = !DILocation(line: 1495, column: 12, scope: !11400)
!11405 = !DILocation(line: 1495, column: 9, scope: !11400)
!11406 = !DILocation(line: 1496, column: 13, scope: !11400)
!11407 = !DILocation(line: 1496, column: 10, scope: !11400)
!11408 = !DILocation(line: 1497, column: 10, scope: !11400)
!11409 = !DILocation(line: 1497, column: 3, scope: !11400)
!11410 = !DILocation(line: 1497, column: 17, scope: !11400)
!11411 = !DILocation(line: 1497, column: 25, scope: !11400)
!11412 = !DILocation(line: 1498, column: 12, scope: !11400)
!11413 = !DILocation(line: 1498, column: 9, scope: !11400)
!11414 = !DILocation(line: 1499, column: 13, scope: !11400)
!11415 = !DILocation(line: 1499, column: 10, scope: !11400)
!11416 = !DILocation(line: 1500, column: 2, scope: !11400)
!11417 = !DILocation(line: 1493, column: 31, scope: !11394)
!11418 = !DILocation(line: 1493, column: 2, scope: !11394)
!11419 = distinct !{!11419, !11398, !11420}
!11420 = !DILocation(line: 1500, column: 2, scope: !11391)
!11421 = !DILocation(line: 1501, column: 1, scope: !11365)
!11422 = distinct !DISubprogram(name: "merge_renderresult_blur", scope: !3, file: !3, line: 1419, type: !11423, scopeLine: 1420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!11423 = !DISubroutineType(types: !11424)
!11424 = !{null, !3006, !3006, !216, !916}
!11425 = !DILocalVariable(name: "rr", arg: 1, scope: !11422, file: !3, line: 1419, type: !3006)
!11426 = !DILocation(line: 1419, column: 51, scope: !11422)
!11427 = !DILocalVariable(name: "brr", arg: 2, scope: !11422, file: !3, line: 1419, type: !3006)
!11428 = !DILocation(line: 1419, column: 69, scope: !11422)
!11429 = !DILocalVariable(name: "blurfac", arg: 3, scope: !11422, file: !3, line: 1419, type: !216)
!11430 = !DILocation(line: 1419, column: 80, scope: !11422)
!11431 = !DILocalVariable(name: "key_alpha", arg: 4, scope: !11422, file: !3, line: 1419, type: !916)
!11432 = !DILocation(line: 1419, column: 94, scope: !11422)
!11433 = !DILocalVariable(name: "rl", scope: !11422, file: !3, line: 1421, type: !3596)
!11434 = !DILocation(line: 1421, column: 15, scope: !11422)
!11435 = !DILocalVariable(name: "rl1", scope: !11422, file: !3, line: 1421, type: !3596)
!11436 = !DILocation(line: 1421, column: 20, scope: !11422)
!11437 = !DILocalVariable(name: "rpass", scope: !11422, file: !3, line: 1422, type: !3602)
!11438 = !DILocation(line: 1422, column: 14, scope: !11422)
!11439 = !DILocalVariable(name: "rpass1", scope: !11422, file: !3, line: 1422, type: !3602)
!11440 = !DILocation(line: 1422, column: 22, scope: !11422)
!11441 = !DILocation(line: 1424, column: 8, scope: !11422)
!11442 = !DILocation(line: 1424, column: 13, scope: !11422)
!11443 = !DILocation(line: 1424, column: 20, scope: !11422)
!11444 = !DILocation(line: 1424, column: 6, scope: !11422)
!11445 = !DILocation(line: 1425, column: 12, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 1425, column: 2)
!11447 = !DILocation(line: 1425, column: 16, scope: !11446)
!11448 = !DILocation(line: 1425, column: 23, scope: !11446)
!11449 = !DILocation(line: 1425, column: 10, scope: !11446)
!11450 = !DILocation(line: 1425, column: 7, scope: !11446)
!11451 = !DILocation(line: 1425, column: 30, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 1425, column: 2)
!11453 = !DILocation(line: 1425, column: 33, scope: !11452)
!11454 = !DILocation(line: 1425, column: 36, scope: !11452)
!11455 = !DILocation(line: 0, scope: !11452)
!11456 = !DILocation(line: 1425, column: 2, scope: !11446)
!11457 = !DILocation(line: 1428, column: 7, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 1428, column: 7)
!11459 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 1425, column: 73)
!11460 = !DILocation(line: 1428, column: 11, scope: !11458)
!11461 = !DILocation(line: 1428, column: 17, scope: !11458)
!11462 = !DILocation(line: 1428, column: 20, scope: !11458)
!11463 = !DILocation(line: 1428, column: 25, scope: !11458)
!11464 = !DILocation(line: 1428, column: 7, scope: !11459)
!11465 = !DILocation(line: 1429, column: 8, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !3, line: 1429, column: 8)
!11467 = distinct !DILexicalBlock(scope: !11458, file: !3, line: 1428, column: 32)
!11468 = !DILocation(line: 1429, column: 8, scope: !11467)
!11469 = !DILocation(line: 1430, column: 22, scope: !11466)
!11470 = !DILocation(line: 1430, column: 26, scope: !11466)
!11471 = !DILocation(line: 1430, column: 30, scope: !11466)
!11472 = !DILocation(line: 1430, column: 37, scope: !11466)
!11473 = !DILocation(line: 1430, column: 42, scope: !11466)
!11474 = !DILocation(line: 1430, column: 49, scope: !11466)
!11475 = !DILocation(line: 1430, column: 5, scope: !11466)
!11476 = !DILocation(line: 1432, column: 18, scope: !11466)
!11477 = !DILocation(line: 1432, column: 22, scope: !11466)
!11478 = !DILocation(line: 1432, column: 26, scope: !11466)
!11479 = !DILocation(line: 1432, column: 33, scope: !11466)
!11480 = !DILocation(line: 1432, column: 38, scope: !11466)
!11481 = !DILocation(line: 1432, column: 45, scope: !11466)
!11482 = !DILocation(line: 1432, column: 5, scope: !11466)
!11483 = !DILocation(line: 1433, column: 3, scope: !11467)
!11484 = !DILocation(line: 1436, column: 12, scope: !11459)
!11485 = !DILocation(line: 1436, column: 17, scope: !11459)
!11486 = !DILocation(line: 1436, column: 24, scope: !11459)
!11487 = !DILocation(line: 1436, column: 10, scope: !11459)
!11488 = !DILocation(line: 1437, column: 16, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 1437, column: 3)
!11490 = !DILocation(line: 1437, column: 20, scope: !11489)
!11491 = !DILocation(line: 1437, column: 27, scope: !11489)
!11492 = !DILocation(line: 1437, column: 14, scope: !11489)
!11493 = !DILocation(line: 1437, column: 8, scope: !11489)
!11494 = !DILocation(line: 1437, column: 34, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 1437, column: 3)
!11496 = !DILocation(line: 1437, column: 40, scope: !11495)
!11497 = !DILocation(line: 1437, column: 43, scope: !11495)
!11498 = !DILocation(line: 0, scope: !11495)
!11499 = !DILocation(line: 1437, column: 3, scope: !11489)
!11500 = !DILocation(line: 1438, column: 17, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11495, file: !3, line: 1437, column: 95)
!11502 = !DILocation(line: 1438, column: 21, scope: !11501)
!11503 = !DILocation(line: 1438, column: 28, scope: !11501)
!11504 = !DILocation(line: 1438, column: 34, scope: !11501)
!11505 = !DILocation(line: 1438, column: 42, scope: !11501)
!11506 = !DILocation(line: 1438, column: 48, scope: !11501)
!11507 = !DILocation(line: 1438, column: 57, scope: !11501)
!11508 = !DILocation(line: 1438, column: 64, scope: !11501)
!11509 = !DILocation(line: 1438, column: 4, scope: !11501)
!11510 = !DILocation(line: 1439, column: 3, scope: !11501)
!11511 = !DILocation(line: 1437, column: 59, scope: !11495)
!11512 = !DILocation(line: 1437, column: 66, scope: !11495)
!11513 = !DILocation(line: 1437, column: 57, scope: !11495)
!11514 = !DILocation(line: 1437, column: 81, scope: !11495)
!11515 = !DILocation(line: 1437, column: 89, scope: !11495)
!11516 = !DILocation(line: 1437, column: 79, scope: !11495)
!11517 = !DILocation(line: 1437, column: 3, scope: !11495)
!11518 = distinct !{!11518, !11499, !11519}
!11519 = !DILocation(line: 1439, column: 3, scope: !11489)
!11520 = !DILocation(line: 1440, column: 2, scope: !11459)
!11521 = !DILocation(line: 1425, column: 46, scope: !11452)
!11522 = !DILocation(line: 1425, column: 50, scope: !11452)
!11523 = !DILocation(line: 1425, column: 44, scope: !11452)
!11524 = !DILocation(line: 1425, column: 62, scope: !11452)
!11525 = !DILocation(line: 1425, column: 67, scope: !11452)
!11526 = !DILocation(line: 1425, column: 60, scope: !11452)
!11527 = !DILocation(line: 1425, column: 2, scope: !11452)
!11528 = distinct !{!11528, !11456, !11529}
!11529 = !DILocation(line: 1440, column: 2, scope: !11446)
!11530 = !DILocation(line: 1441, column: 1, scope: !11422)
!11531 = distinct !DISubprogram(name: "addblur_rect_key", scope: !3, file: !3, line: 1359, type: !11532, scopeLine: 1360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!11532 = !DISubroutineType(types: !11533)
!11533 = !{null, !3006, !778, !778, !216}
!11534 = !DILocalVariable(name: "rr", arg: 1, scope: !11531, file: !3, line: 1359, type: !3006)
!11535 = !DILocation(line: 1359, column: 44, scope: !11531)
!11536 = !DILocalVariable(name: "rectf", arg: 2, scope: !11531, file: !3, line: 1359, type: !778)
!11537 = !DILocation(line: 1359, column: 55, scope: !11531)
!11538 = !DILocalVariable(name: "rectf1", arg: 3, scope: !11531, file: !3, line: 1359, type: !778)
!11539 = !DILocation(line: 1359, column: 69, scope: !11531)
!11540 = !DILocalVariable(name: "blurfac", arg: 4, scope: !11531, file: !3, line: 1359, type: !216)
!11541 = !DILocation(line: 1359, column: 83, scope: !11531)
!11542 = !DILocalVariable(name: "mfac", scope: !11531, file: !3, line: 1361, type: !216)
!11543 = !DILocation(line: 1361, column: 8, scope: !11531)
!11544 = !DILocation(line: 1361, column: 22, scope: !11531)
!11545 = !DILocation(line: 1361, column: 20, scope: !11531)
!11546 = !DILocalVariable(name: "a", scope: !11531, file: !3, line: 1362, type: !7)
!11547 = !DILocation(line: 1362, column: 6, scope: !11531)
!11548 = !DILocalVariable(name: "b", scope: !11531, file: !3, line: 1362, type: !7)
!11549 = !DILocation(line: 1362, column: 9, scope: !11531)
!11550 = !DILocalVariable(name: "stride", scope: !11531, file: !3, line: 1362, type: !7)
!11551 = !DILocation(line: 1362, column: 12, scope: !11531)
!11552 = !DILocation(line: 1362, column: 25, scope: !11531)
!11553 = !DILocation(line: 1362, column: 29, scope: !11531)
!11554 = !DILocation(line: 1362, column: 23, scope: !11531)
!11555 = !DILocalVariable(name: "len", scope: !11531, file: !3, line: 1363, type: !7)
!11556 = !DILocation(line: 1363, column: 6, scope: !11531)
!11557 = !DILocation(line: 1363, column: 12, scope: !11531)
!11558 = !DILocation(line: 1363, column: 19, scope: !11531)
!11559 = !DILocation(line: 1365, column: 9, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11531, file: !3, line: 1365, column: 2)
!11561 = !DILocation(line: 1365, column: 7, scope: !11560)
!11562 = !DILocation(line: 1365, column: 14, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11560, file: !3, line: 1365, column: 2)
!11564 = !DILocation(line: 1365, column: 18, scope: !11563)
!11565 = !DILocation(line: 1365, column: 22, scope: !11563)
!11566 = !DILocation(line: 1365, column: 16, scope: !11563)
!11567 = !DILocation(line: 1365, column: 2, scope: !11560)
!11568 = !DILocation(line: 1366, column: 7, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11570, file: !3, line: 1366, column: 7)
!11570 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 1365, column: 34)
!11571 = !DILocation(line: 1366, column: 15, scope: !11569)
!11572 = !DILocation(line: 1366, column: 7, scope: !11570)
!11573 = !DILocation(line: 1367, column: 11, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11569, file: !3, line: 1366, column: 24)
!11575 = !DILocation(line: 1367, column: 4, scope: !11574)
!11576 = !DILocation(line: 1367, column: 18, scope: !11574)
!11577 = !DILocation(line: 1367, column: 26, scope: !11574)
!11578 = !DILocation(line: 1368, column: 3, scope: !11574)
!11579 = !DILocalVariable(name: "rf", scope: !11580, file: !3, line: 1370, type: !778)
!11580 = distinct !DILexicalBlock(scope: !11569, file: !3, line: 1369, column: 8)
!11581 = !DILocation(line: 1370, column: 11, scope: !11580)
!11582 = !DILocation(line: 1370, column: 16, scope: !11580)
!11583 = !DILocalVariable(name: "rf1", scope: !11580, file: !3, line: 1370, type: !778)
!11584 = !DILocation(line: 1370, column: 24, scope: !11580)
!11585 = !DILocation(line: 1370, column: 30, scope: !11580)
!11586 = !DILocation(line: 1372, column: 13, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11580, file: !3, line: 1372, column: 4)
!11588 = !DILocation(line: 1372, column: 17, scope: !11587)
!11589 = !DILocation(line: 1372, column: 11, scope: !11587)
!11590 = !DILocation(line: 1372, column: 9, scope: !11587)
!11591 = !DILocation(line: 1372, column: 24, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11587, file: !3, line: 1372, column: 4)
!11593 = !DILocation(line: 1372, column: 26, scope: !11592)
!11594 = !DILocation(line: 1372, column: 4, scope: !11587)
!11595 = !DILocation(line: 1373, column: 9, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 1373, column: 9)
!11597 = distinct !DILexicalBlock(scope: !11592, file: !3, line: 1372, column: 55)
!11598 = !DILocation(line: 1373, column: 16, scope: !11596)
!11599 = !DILocation(line: 1373, column: 9, scope: !11597)
!11600 = !DILocation(line: 1374, column: 14, scope: !11596)
!11601 = !DILocation(line: 1374, column: 21, scope: !11596)
!11602 = !DILocation(line: 1374, column: 19, scope: !11596)
!11603 = !DILocation(line: 1374, column: 6, scope: !11596)
!11604 = !DILocation(line: 1374, column: 12, scope: !11596)
!11605 = !DILocation(line: 1375, column: 14, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 1375, column: 14)
!11607 = !DILocation(line: 1375, column: 20, scope: !11606)
!11608 = !DILocation(line: 1375, column: 14, scope: !11596)
!11609 = !DILocation(line: 1376, column: 14, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11606, file: !3, line: 1375, column: 29)
!11611 = !DILocation(line: 1376, column: 6, scope: !11610)
!11612 = !DILocation(line: 1376, column: 12, scope: !11610)
!11613 = !DILocation(line: 1377, column: 14, scope: !11610)
!11614 = !DILocation(line: 1377, column: 6, scope: !11610)
!11615 = !DILocation(line: 1377, column: 12, scope: !11610)
!11616 = !DILocation(line: 1378, column: 14, scope: !11610)
!11617 = !DILocation(line: 1378, column: 6, scope: !11610)
!11618 = !DILocation(line: 1378, column: 12, scope: !11610)
!11619 = !DILocation(line: 1379, column: 14, scope: !11610)
!11620 = !DILocation(line: 1379, column: 24, scope: !11610)
!11621 = !DILocation(line: 1379, column: 22, scope: !11610)
!11622 = !DILocation(line: 1379, column: 6, scope: !11610)
!11623 = !DILocation(line: 1379, column: 12, scope: !11610)
!11624 = !DILocation(line: 1380, column: 5, scope: !11610)
!11625 = !DILocation(line: 1382, column: 14, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11606, file: !3, line: 1381, column: 10)
!11627 = !DILocation(line: 1382, column: 21, scope: !11626)
!11628 = !DILocation(line: 1382, column: 19, scope: !11626)
!11629 = !DILocation(line: 1382, column: 29, scope: !11626)
!11630 = !DILocation(line: 1382, column: 39, scope: !11626)
!11631 = !DILocation(line: 1382, column: 37, scope: !11626)
!11632 = !DILocation(line: 1382, column: 27, scope: !11626)
!11633 = !DILocation(line: 1382, column: 6, scope: !11626)
!11634 = !DILocation(line: 1382, column: 12, scope: !11626)
!11635 = !DILocation(line: 1383, column: 14, scope: !11626)
!11636 = !DILocation(line: 1383, column: 21, scope: !11626)
!11637 = !DILocation(line: 1383, column: 19, scope: !11626)
!11638 = !DILocation(line: 1383, column: 29, scope: !11626)
!11639 = !DILocation(line: 1383, column: 39, scope: !11626)
!11640 = !DILocation(line: 1383, column: 37, scope: !11626)
!11641 = !DILocation(line: 1383, column: 27, scope: !11626)
!11642 = !DILocation(line: 1383, column: 6, scope: !11626)
!11643 = !DILocation(line: 1383, column: 12, scope: !11626)
!11644 = !DILocation(line: 1384, column: 14, scope: !11626)
!11645 = !DILocation(line: 1384, column: 21, scope: !11626)
!11646 = !DILocation(line: 1384, column: 19, scope: !11626)
!11647 = !DILocation(line: 1384, column: 29, scope: !11626)
!11648 = !DILocation(line: 1384, column: 39, scope: !11626)
!11649 = !DILocation(line: 1384, column: 37, scope: !11626)
!11650 = !DILocation(line: 1384, column: 27, scope: !11626)
!11651 = !DILocation(line: 1384, column: 6, scope: !11626)
!11652 = !DILocation(line: 1384, column: 12, scope: !11626)
!11653 = !DILocation(line: 1385, column: 14, scope: !11626)
!11654 = !DILocation(line: 1385, column: 21, scope: !11626)
!11655 = !DILocation(line: 1385, column: 19, scope: !11626)
!11656 = !DILocation(line: 1385, column: 29, scope: !11626)
!11657 = !DILocation(line: 1385, column: 39, scope: !11626)
!11658 = !DILocation(line: 1385, column: 37, scope: !11626)
!11659 = !DILocation(line: 1385, column: 27, scope: !11626)
!11660 = !DILocation(line: 1385, column: 6, scope: !11626)
!11661 = !DILocation(line: 1385, column: 12, scope: !11626)
!11662 = !DILocation(line: 1387, column: 4, scope: !11597)
!11663 = !DILocation(line: 1372, column: 32, scope: !11592)
!11664 = !DILocation(line: 1372, column: 39, scope: !11592)
!11665 = !DILocation(line: 1372, column: 49, scope: !11592)
!11666 = !DILocation(line: 1372, column: 4, scope: !11592)
!11667 = distinct !{!11667, !11594, !11668}
!11668 = !DILocation(line: 1387, column: 4, scope: !11587)
!11669 = !DILocation(line: 1389, column: 12, scope: !11570)
!11670 = !DILocation(line: 1389, column: 9, scope: !11570)
!11671 = !DILocation(line: 1390, column: 13, scope: !11570)
!11672 = !DILocation(line: 1390, column: 10, scope: !11570)
!11673 = !DILocation(line: 1391, column: 2, scope: !11570)
!11674 = !DILocation(line: 1365, column: 30, scope: !11563)
!11675 = !DILocation(line: 1365, column: 2, scope: !11563)
!11676 = distinct !{!11676, !11567, !11677}
!11677 = !DILocation(line: 1391, column: 2, scope: !11560)
!11678 = !DILocation(line: 1392, column: 1, scope: !11531)
!11679 = distinct !DISubprogram(name: "addblur_rect", scope: !3, file: !3, line: 1395, type: !11680, scopeLine: 1396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!11680 = !DISubroutineType(types: !11681)
!11681 = !{null, !3006, !778, !778, !216, !7}
!11682 = !DILocalVariable(name: "rr", arg: 1, scope: !11679, file: !3, line: 1395, type: !3006)
!11683 = !DILocation(line: 1395, column: 40, scope: !11679)
!11684 = !DILocalVariable(name: "rectf", arg: 2, scope: !11679, file: !3, line: 1395, type: !778)
!11685 = !DILocation(line: 1395, column: 51, scope: !11679)
!11686 = !DILocalVariable(name: "rectf1", arg: 3, scope: !11679, file: !3, line: 1395, type: !778)
!11687 = !DILocation(line: 1395, column: 65, scope: !11679)
!11688 = !DILocalVariable(name: "blurfac", arg: 4, scope: !11679, file: !3, line: 1395, type: !216)
!11689 = !DILocation(line: 1395, column: 79, scope: !11679)
!11690 = !DILocalVariable(name: "channels", arg: 5, scope: !11679, file: !3, line: 1395, type: !7)
!11691 = !DILocation(line: 1395, column: 92, scope: !11679)
!11692 = !DILocalVariable(name: "mfac", scope: !11679, file: !3, line: 1397, type: !216)
!11693 = !DILocation(line: 1397, column: 8, scope: !11679)
!11694 = !DILocation(line: 1397, column: 22, scope: !11679)
!11695 = !DILocation(line: 1397, column: 20, scope: !11679)
!11696 = !DILocalVariable(name: "a", scope: !11679, file: !3, line: 1398, type: !7)
!11697 = !DILocation(line: 1398, column: 6, scope: !11679)
!11698 = !DILocalVariable(name: "b", scope: !11679, file: !3, line: 1398, type: !7)
!11699 = !DILocation(line: 1398, column: 9, scope: !11679)
!11700 = !DILocalVariable(name: "stride", scope: !11679, file: !3, line: 1398, type: !7)
!11701 = !DILocation(line: 1398, column: 12, scope: !11679)
!11702 = !DILocation(line: 1398, column: 21, scope: !11679)
!11703 = !DILocation(line: 1398, column: 32, scope: !11679)
!11704 = !DILocation(line: 1398, column: 36, scope: !11679)
!11705 = !DILocation(line: 1398, column: 30, scope: !11679)
!11706 = !DILocalVariable(name: "len", scope: !11679, file: !3, line: 1399, type: !7)
!11707 = !DILocation(line: 1399, column: 6, scope: !11679)
!11708 = !DILocation(line: 1399, column: 12, scope: !11679)
!11709 = !DILocation(line: 1399, column: 19, scope: !11679)
!11710 = !DILocation(line: 1401, column: 9, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11679, file: !3, line: 1401, column: 2)
!11712 = !DILocation(line: 1401, column: 7, scope: !11711)
!11713 = !DILocation(line: 1401, column: 14, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 1401, column: 2)
!11715 = !DILocation(line: 1401, column: 18, scope: !11714)
!11716 = !DILocation(line: 1401, column: 22, scope: !11714)
!11717 = !DILocation(line: 1401, column: 16, scope: !11714)
!11718 = !DILocation(line: 1401, column: 2, scope: !11711)
!11719 = !DILocation(line: 1402, column: 7, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11721, file: !3, line: 1402, column: 7)
!11721 = distinct !DILexicalBlock(scope: !11714, file: !3, line: 1401, column: 34)
!11722 = !DILocation(line: 1402, column: 15, scope: !11720)
!11723 = !DILocation(line: 1402, column: 7, scope: !11721)
!11724 = !DILocation(line: 1403, column: 11, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 1402, column: 24)
!11726 = !DILocation(line: 1403, column: 4, scope: !11725)
!11727 = !DILocation(line: 1403, column: 18, scope: !11725)
!11728 = !DILocation(line: 1403, column: 26, scope: !11725)
!11729 = !DILocation(line: 1404, column: 3, scope: !11725)
!11730 = !DILocalVariable(name: "rf", scope: !11731, file: !3, line: 1406, type: !778)
!11731 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 1405, column: 8)
!11732 = !DILocation(line: 1406, column: 11, scope: !11731)
!11733 = !DILocation(line: 1406, column: 16, scope: !11731)
!11734 = !DILocalVariable(name: "rf1", scope: !11731, file: !3, line: 1406, type: !778)
!11735 = !DILocation(line: 1406, column: 24, scope: !11731)
!11736 = !DILocation(line: 1406, column: 30, scope: !11731)
!11737 = !DILocation(line: 1408, column: 13, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11731, file: !3, line: 1408, column: 4)
!11739 = !DILocation(line: 1408, column: 17, scope: !11738)
!11740 = !DILocation(line: 1408, column: 25, scope: !11738)
!11741 = !DILocation(line: 1408, column: 23, scope: !11738)
!11742 = !DILocation(line: 1408, column: 11, scope: !11738)
!11743 = !DILocation(line: 1408, column: 9, scope: !11738)
!11744 = !DILocation(line: 1408, column: 35, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11738, file: !3, line: 1408, column: 4)
!11746 = !DILocation(line: 1408, column: 37, scope: !11745)
!11747 = !DILocation(line: 1408, column: 4, scope: !11738)
!11748 = !DILocation(line: 1409, column: 13, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 1408, column: 60)
!11750 = !DILocation(line: 1409, column: 20, scope: !11749)
!11751 = !DILocation(line: 1409, column: 18, scope: !11749)
!11752 = !DILocation(line: 1409, column: 28, scope: !11749)
!11753 = !DILocation(line: 1409, column: 38, scope: !11749)
!11754 = !DILocation(line: 1409, column: 36, scope: !11749)
!11755 = !DILocation(line: 1409, column: 26, scope: !11749)
!11756 = !DILocation(line: 1409, column: 5, scope: !11749)
!11757 = !DILocation(line: 1409, column: 11, scope: !11749)
!11758 = !DILocation(line: 1410, column: 4, scope: !11749)
!11759 = !DILocation(line: 1408, column: 43, scope: !11745)
!11760 = !DILocation(line: 1408, column: 49, scope: !11745)
!11761 = !DILocation(line: 1408, column: 56, scope: !11745)
!11762 = !DILocation(line: 1408, column: 4, scope: !11745)
!11763 = distinct !{!11763, !11747, !11764}
!11764 = !DILocation(line: 1410, column: 4, scope: !11738)
!11765 = !DILocation(line: 1412, column: 12, scope: !11721)
!11766 = !DILocation(line: 1412, column: 9, scope: !11721)
!11767 = !DILocation(line: 1413, column: 13, scope: !11721)
!11768 = !DILocation(line: 1413, column: 10, scope: !11721)
!11769 = !DILocation(line: 1414, column: 2, scope: !11721)
!11770 = !DILocation(line: 1401, column: 30, scope: !11714)
!11771 = !DILocation(line: 1401, column: 2, scope: !11714)
!11772 = distinct !{!11772, !11718, !11773}
!11773 = !DILocation(line: 1414, column: 2, scope: !11711)
!11774 = !DILocation(line: 1415, column: 1, scope: !11679)
!11775 = distinct !DISubprogram(name: "render_scene", scope: !3, file: !3, line: 1688, type: !11776, scopeLine: 1689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!11776 = !DISubroutineType(types: !11777)
!11777 = !{null, !3576, !217, !7}
!11778 = !DILocalVariable(name: "re", arg: 1, scope: !11775, file: !3, line: 1688, type: !3576)
!11779 = !DILocation(line: 1688, column: 34, scope: !11775)
!11780 = !DILocalVariable(name: "sce", arg: 2, scope: !11775, file: !3, line: 1688, type: !217)
!11781 = !DILocation(line: 1688, column: 45, scope: !11775)
!11782 = !DILocalVariable(name: "cfra", arg: 3, scope: !11775, file: !3, line: 1688, type: !7)
!11783 = !DILocation(line: 1688, column: 54, scope: !11775)
!11784 = !DILocalVariable(name: "resc", scope: !11775, file: !3, line: 1690, type: !3576)
!11785 = !DILocation(line: 1690, column: 10, scope: !11775)
!11786 = !DILocation(line: 1690, column: 30, scope: !11775)
!11787 = !DILocation(line: 1690, column: 35, scope: !11775)
!11788 = !DILocation(line: 1690, column: 38, scope: !11775)
!11789 = !DILocation(line: 1690, column: 17, scope: !11775)
!11790 = !DILocalVariable(name: "winx", scope: !11775, file: !3, line: 1691, type: !7)
!11791 = !DILocation(line: 1691, column: 6, scope: !11775)
!11792 = !DILocation(line: 1691, column: 13, scope: !11775)
!11793 = !DILocation(line: 1691, column: 17, scope: !11775)
!11794 = !DILocalVariable(name: "winy", scope: !11775, file: !3, line: 1691, type: !7)
!11795 = !DILocation(line: 1691, column: 23, scope: !11775)
!11796 = !DILocation(line: 1691, column: 30, scope: !11775)
!11797 = !DILocation(line: 1691, column: 34, scope: !11775)
!11798 = !DILocation(line: 1693, column: 16, scope: !11775)
!11799 = !DILocation(line: 1693, column: 2, scope: !11775)
!11800 = !DILocation(line: 1693, column: 7, scope: !11775)
!11801 = !DILocation(line: 1693, column: 9, scope: !11775)
!11802 = !DILocation(line: 1693, column: 14, scope: !11775)
!11803 = !DILocation(line: 1695, column: 33, scope: !11775)
!11804 = !DILocation(line: 1695, column: 2, scope: !11775)
!11805 = !DILocation(line: 1704, column: 15, scope: !11775)
!11806 = !DILocation(line: 1704, column: 21, scope: !11775)
!11807 = !DILocation(line: 1704, column: 26, scope: !11775)
!11808 = !DILocation(line: 1704, column: 31, scope: !11775)
!11809 = !DILocation(line: 1704, column: 40, scope: !11775)
!11810 = !DILocation(line: 1704, column: 46, scope: !11775)
!11811 = !DILocation(line: 1704, column: 53, scope: !11775)
!11812 = !DILocation(line: 1704, column: 57, scope: !11775)
!11813 = !DILocation(line: 1704, column: 2, scope: !11775)
!11814 = !DILocation(line: 1707, column: 21, scope: !11775)
!11815 = !DILocation(line: 1707, column: 27, scope: !11775)
!11816 = !DILocation(line: 1707, column: 29, scope: !11775)
!11817 = !DILocation(line: 1707, column: 37, scope: !11775)
!11818 = !DILocation(line: 1707, column: 61, scope: !11775)
!11819 = !DILocation(line: 1707, column: 65, scope: !11775)
!11820 = !DILocation(line: 1707, column: 67, scope: !11775)
!11821 = !DILocation(line: 1707, column: 75, scope: !11775)
!11822 = !DILocation(line: 1707, column: 58, scope: !11775)
!11823 = !DILocation(line: 1707, column: 2, scope: !11775)
!11824 = !DILocation(line: 1707, column: 8, scope: !11775)
!11825 = !DILocation(line: 1707, column: 10, scope: !11775)
!11826 = !DILocation(line: 1707, column: 18, scope: !11775)
!11827 = !DILocation(line: 1710, column: 15, scope: !11775)
!11828 = !DILocation(line: 1710, column: 19, scope: !11775)
!11829 = !DILocation(line: 1710, column: 2, scope: !11775)
!11830 = !DILocation(line: 1710, column: 8, scope: !11775)
!11831 = !DILocation(line: 1710, column: 13, scope: !11775)
!11832 = !DILocation(line: 1711, column: 16, scope: !11775)
!11833 = !DILocation(line: 1711, column: 2, scope: !11775)
!11834 = !DILocation(line: 1711, column: 8, scope: !11775)
!11835 = !DILocation(line: 1711, column: 14, scope: !11775)
!11836 = !DILocation(line: 1712, column: 14, scope: !11775)
!11837 = !DILocation(line: 1712, column: 19, scope: !11775)
!11838 = !DILocation(line: 1712, column: 2, scope: !11775)
!11839 = !DILocation(line: 1712, column: 8, scope: !11775)
!11840 = !DILocation(line: 1712, column: 12, scope: !11775)
!11841 = !DILocation(line: 1713, column: 70, scope: !11775)
!11842 = !DILocation(line: 1713, column: 29, scope: !11775)
!11843 = !DILocation(line: 1713, column: 2, scope: !11775)
!11844 = !DILocation(line: 1713, column: 8, scope: !11775)
!11845 = !DILocation(line: 1713, column: 27, scope: !11775)
!11846 = !DILocation(line: 1716, column: 27, scope: !11775)
!11847 = !DILocation(line: 1716, column: 31, scope: !11775)
!11848 = !DILocation(line: 1716, column: 37, scope: !11775)
!11849 = !DILocation(line: 1716, column: 2, scope: !11775)
!11850 = !DILocation(line: 1719, column: 25, scope: !11775)
!11851 = !DILocation(line: 1719, column: 29, scope: !11775)
!11852 = !DILocation(line: 1719, column: 2, scope: !11775)
!11853 = !DILocation(line: 1719, column: 8, scope: !11775)
!11854 = !DILocation(line: 1719, column: 23, scope: !11775)
!11855 = !DILocation(line: 1720, column: 14, scope: !11775)
!11856 = !DILocation(line: 1720, column: 18, scope: !11775)
!11857 = !DILocation(line: 1720, column: 2, scope: !11775)
!11858 = !DILocation(line: 1720, column: 8, scope: !11775)
!11859 = !DILocation(line: 1720, column: 12, scope: !11775)
!11860 = !DILocation(line: 1721, column: 21, scope: !11775)
!11861 = !DILocation(line: 1721, column: 25, scope: !11775)
!11862 = !DILocation(line: 1721, column: 2, scope: !11775)
!11863 = !DILocation(line: 1721, column: 8, scope: !11775)
!11864 = !DILocation(line: 1721, column: 19, scope: !11775)
!11865 = !DILocation(line: 1722, column: 14, scope: !11775)
!11866 = !DILocation(line: 1722, column: 18, scope: !11775)
!11867 = !DILocation(line: 1722, column: 2, scope: !11775)
!11868 = !DILocation(line: 1722, column: 8, scope: !11775)
!11869 = !DILocation(line: 1722, column: 12, scope: !11775)
!11870 = !DILocation(line: 1723, column: 21, scope: !11775)
!11871 = !DILocation(line: 1723, column: 25, scope: !11775)
!11872 = !DILocation(line: 1723, column: 2, scope: !11775)
!11873 = !DILocation(line: 1723, column: 8, scope: !11775)
!11874 = !DILocation(line: 1723, column: 19, scope: !11775)
!11875 = !DILocation(line: 1724, column: 14, scope: !11775)
!11876 = !DILocation(line: 1724, column: 18, scope: !11775)
!11877 = !DILocation(line: 1724, column: 2, scope: !11775)
!11878 = !DILocation(line: 1724, column: 8, scope: !11775)
!11879 = !DILocation(line: 1724, column: 12, scope: !11775)
!11880 = !DILocation(line: 1725, column: 31, scope: !11775)
!11881 = !DILocation(line: 1725, column: 35, scope: !11775)
!11882 = !DILocation(line: 1725, column: 2, scope: !11775)
!11883 = !DILocation(line: 1725, column: 8, scope: !11775)
!11884 = !DILocation(line: 1725, column: 29, scope: !11775)
!11885 = !DILocation(line: 1726, column: 14, scope: !11775)
!11886 = !DILocation(line: 1726, column: 18, scope: !11775)
!11887 = !DILocation(line: 1726, column: 2, scope: !11775)
!11888 = !DILocation(line: 1726, column: 8, scope: !11775)
!11889 = !DILocation(line: 1726, column: 12, scope: !11775)
!11890 = !DILocation(line: 1728, column: 27, scope: !11775)
!11891 = !DILocation(line: 1728, column: 2, scope: !11775)
!11892 = !DILocation(line: 1729, column: 1, scope: !11775)
!11893 = distinct !DISubprogram(name: "render_scene_needs_vector", scope: !3, file: !3, line: 229, type: !9051, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3577)
!11894 = !DILocalVariable(name: "re", arg: 1, scope: !11893, file: !3, line: 229, type: !3576)
!11895 = !DILocation(line: 229, column: 46, scope: !11893)
!11896 = !DILocalVariable(name: "srl", scope: !11893, file: !3, line: 231, type: !4359)
!11897 = !DILocation(line: 231, column: 20, scope: !11893)
!11898 = !DILocation(line: 233, column: 13, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11893, file: !3, line: 233, column: 2)
!11900 = !DILocation(line: 233, column: 17, scope: !11899)
!11901 = !DILocation(line: 233, column: 19, scope: !11899)
!11902 = !DILocation(line: 233, column: 26, scope: !11899)
!11903 = !DILocation(line: 233, column: 11, scope: !11899)
!11904 = !DILocation(line: 233, column: 7, scope: !11899)
!11905 = !DILocation(line: 233, column: 33, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11899, file: !3, line: 233, column: 2)
!11907 = !DILocation(line: 233, column: 2, scope: !11899)
!11908 = !DILocation(line: 234, column: 9, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11906, file: !3, line: 234, column: 7)
!11910 = !DILocation(line: 234, column: 14, scope: !11909)
!11911 = !DILocation(line: 234, column: 22, scope: !11909)
!11912 = !DILocation(line: 234, column: 7, scope: !11906)
!11913 = !DILocation(line: 235, column: 8, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11909, file: !3, line: 235, column: 8)
!11915 = !DILocation(line: 235, column: 13, scope: !11914)
!11916 = !DILocation(line: 235, column: 22, scope: !11914)
!11917 = !DILocation(line: 235, column: 8, scope: !11909)
!11918 = !DILocation(line: 236, column: 5, scope: !11914)
!11919 = !DILocation(line: 235, column: 24, scope: !11914)
!11920 = !DILocation(line: 234, column: 39, scope: !11909)
!11921 = !DILocation(line: 233, column: 44, scope: !11906)
!11922 = !DILocation(line: 233, column: 49, scope: !11906)
!11923 = !DILocation(line: 233, column: 42, scope: !11906)
!11924 = !DILocation(line: 233, column: 2, scope: !11906)
!11925 = distinct !{!11925, !11907, !11926}
!11926 = !DILocation(line: 236, column: 12, scope: !11899)
!11927 = !DILocation(line: 238, column: 2, scope: !11893)
!11928 = !DILocation(line: 239, column: 1, scope: !11893)
