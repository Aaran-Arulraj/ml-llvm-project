; ModuleID = 'blender/source/blender/editors/screen/screen_ops.c'
source_filename = "blender/source/blender/editors/screen/screen_ops.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.bContext = type opaque
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type { %struct.ID, %struct.AnimData*, %struct.ListBase, i32, i32, i32, i32, i32, i32 }
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type { %struct.ARegionType*, %struct.ARegionType*, i32, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.bContext*, %struct.ARegion*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.ARegion*, %struct.wmNotifier*)*, void (%struct.ARegion*)*, i8* (i8*)*, void ()*, void (%struct.wmKeyConfig*)*, void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i16 }
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type { %struct.SpaceType*, %struct.SpaceType*, [64 x i8], i32, i32, %struct.SpaceLink* (%struct.bContext*)*, void (%struct.SpaceLink*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.wmNotifier*)*, void (%struct.bContext*, %struct.ScrArea*)*, %struct.SpaceLink* (%struct.SpaceLink*)*, void ()*, void (%struct.wmKeyConfig*)*, void ()*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, i32 }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.wmNotifier = type { %struct.wmNotifier*, %struct.wmNotifier*, %struct.wmWindowManager*, %struct.wmWindow*, i32, i32, i32, i32, i32, i8* }
%struct.bContextDataResult = type opaque
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type { i16, i16, i16, i16, float*, [2 x double], i8 }
%struct.SmoothView3DStore = type opaque
%struct.SpaceNode = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ID*, %struct.ID*, i16, i16, float, float, float, float, float, [2 x float], %struct.ListBase, %struct.bNodeTree*, %struct.bNodeTree*, [64 x i8], i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.bGPdata* }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BLI_mempool = type opaque
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.EditBone = type { %struct.EditBone*, %struct.EditBone*, %struct.IDProperty*, %struct.EditBone*, i8*, [64 x i8], float, [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, float, float, float, float, i16 }
%struct.SpaceImage = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.Image*, %struct.ImageUser, %struct.CurveMapping*, %struct.Scopes, %struct.Histogram, %struct.bGPdata*, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, float*, float*, float*, float*, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.MaskSpaceInfo = type { %struct.Mask*, i8, i8, i8, [5 x i8] }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.Key = type opaque
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.Lattice = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i32, float, float, float, float, float, float, %struct.BPoint*, %struct.Ipo*, %struct.Key*, %struct.MDeformVert*, [64 x i8], %struct.EditLatt* }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.EditLatt = type { %struct.Lattice*, i32, [4 x i8] }
%struct.MetaBall = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Ipo*, %struct.Material**, i8, i8, i16, i16, i16, [3 x float], [3 x float], [3 x float], float, float, float, %struct.MetaElem* }
%struct.MetaElem = type { %struct.MetaElem*, %struct.MetaElem*, %struct.BoundBox*, i16, i16, i16, i16, float, float, float, [4 x float], float, float, float, float, float, float, float, float*, float* }
%struct.SpaceClip = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, float, float, float, float, %struct.MovieClipUser, %struct.MovieClip*, %struct.MovieClipScopes, i32, i16, i16, i32, [2 x float], float, float, i32, [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i32, i32, [2 x float], %struct.MaskSpaceInfo }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.MovieClipScopes = type { i16, i16, i32, i32, i32, %struct.MovieTrackingMarker, %struct.ImBuf*, %struct.ImBuf*, [2 x float], i16, i16, i32, %struct.MovieTrackingTrack*, %struct.MovieTrackingMarker*, [2 x float] }
%struct.ImBuf = type opaque
%struct.SpaceSeq = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, float, float, i16, i16, i16, i16, i32, float, i32, i32, %struct.bGPdata*, %struct.SequencerScopes }
%struct.SequencerScopes = type { %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf*, %struct.ImBuf* }
%struct.AZone = type { %struct.AZone*, %struct.AZone*, %struct.ARegion*, i32, i32, i16, i16, i16, i16, %struct.rcti, float }
%struct.uiLayout = type opaque
%struct.ScreenAnimData = type { %struct.ARegion*, i16, i16, i16, i32, i32, double }
%struct.RegionAlphaInfo = type { %struct.ScrArea*, %struct.ARegion*, %struct.ARegion*, i32 }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.wmKeyMapItem = type { %struct.wmKeyMapItem*, %struct.wmKeyMapItem*, [64 x i8], %struct.IDProperty*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.PointerRNA* }
%struct.wmDropBox = type { %struct.wmDropBox*, %struct.wmDropBox*, i32 (%struct.bContext*, %struct.wmDrag*, %struct.wmEvent*)*, void (%struct.wmDrag*, %struct.wmDropBox*)*, %struct.wmOperatorType*, %struct.IDProperty*, %struct.PointerRNA*, i16 }
%struct.wmDrag = type { %struct.wmDrag*, %struct.wmDrag*, i32, i32, i8*, [1024 x i8], double, %struct.ImBuf*, float, i32, i32, [200 x i8], i32 }
%struct.sActionzoneData = type { %struct.ScrArea*, %struct.ScrArea*, %struct.AZone*, i32, i32, i32, i32 }
%struct.wmEventHandler = type opaque
%struct.ScrEdge = type { %struct.ScrEdge*, %struct.ScrEdge*, %struct.ScrVert*, %struct.ScrVert*, i16, i16, i32 }
%struct.uiPopupMenu = type opaque
%struct.sAreaMoveData = type { i32, i32, i32, i32, i8 }
%struct.sAreaSplitData = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ScrEdge*, %struct.ScrArea*, %struct.ScrArea* }
%struct.sAreaJoinData = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrArea* }
%struct.sAreaSwapData = type { %struct.ScrArea*, %struct.ScrArea* }
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.RegionMoveData = type { %struct.AZone*, %struct.ARegion*, %struct.ScrArea*, i32, i32, i32, i32, i32, i32, i32 }
%struct.bDopeSheet = type { %struct.ID*, %struct.ListBase, %struct.Group*, [64 x i8], i32, i32, i32, i32 }
%struct.DLRBT_Tree = type { i8*, i8*, i8* }
%struct.ActKeyColumn = type { %struct.ActKeyColumn*, %struct.ActKeyColumn*, %struct.ActKeyColumn*, %struct.ActKeyColumn*, %struct.ActKeyColumn*, i8, i8, i16, float, i16, i16 }
%struct.MaskLayer = type { %struct.MaskLayer*, %struct.MaskLayer*, [64 x i8], %struct.ListBase, %struct.ListBase, %struct.MaskSpline*, %struct.MaskSplinePoint*, float, i8, i8, i8, [7 x i8], i8, i8 }
%struct.MaskSpline = type { %struct.MaskSpline*, %struct.MaskSpline*, i16, i8, i8, i32, %struct.MaskSplinePoint*, %struct.MaskParent, %struct.MaskSplinePoint* }
%struct.MaskParent = type { i32, i32, %struct.ID*, [64 x i8], [64 x i8], [2 x float], [4 x [2 x float]] }
%struct.MaskSplinePoint = type { %struct.BezTriple, i32, i32, %struct.MaskSplinePointUW*, %struct.MaskParent }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.MaskSplinePointUW = type { float, float, i32 }
%struct.DLRBT_Node = type { %struct.DLRBT_Node*, %struct.DLRBT_Node*, %struct.DLRBT_Node*, %struct.DLRBT_Node*, %struct.DLRBT_Node*, i8 }
%struct.TimeMarker = type { %struct.TimeMarker*, %struct.TimeMarker*, i32, [64 x i8], i32, %struct.Object* }

@.str = private unnamed_addr constant [25 x i8] c"expected a view3d region\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"expected a timeline/animation area to be active\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"expected a view3d region & editmesh\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"expected a view3d region & editcurve\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.4 = private unnamed_addr constant [15 x i8] c"Flip to Bottom\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"SCREEN_OT_header_flip\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"Flip to Top\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"Collapse Menus\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"SCREEN_OT_header_toggle_menus\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"Tile Area\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"SCREEN_OT_screen_full_area\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"Maximize Area\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.12 = private unnamed_addr constant [16 x i8] c"RegionAlphaInfo\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"Screen Editing\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"SCREEN_OT_actionzone\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"modifier\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"SCREEN_OT_area_split\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"SCREEN_OT_area_join\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"SCREEN_OT_area_dupli\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"SCREEN_OT_area_swap\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"SCREEN_OT_region_scale\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"SCREEN_OT_area_move\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"SCREEN_OT_area_options\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"SCREEN_OT_header\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"Header\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"SCREEN_OT_header_toolbox\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"Screen\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"SCREEN_OT_animation_step\00", align 1
@.str.28 = private unnamed_addr constant [23 x i8] c"SCREEN_OT_region_blend\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"SCREEN_OT_screen_set\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"delta\00", align 1
@.str.31 = private unnamed_addr constant [16 x i8] c"use_hide_panels\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"SCREEN_OT_screenshot\00", align 1
@.str.33 = private unnamed_addr constant [21 x i8] c"SCREEN_OT_screencast\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"SCREEN_OT_region_quadview\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"SCREEN_OT_repeat_history\00", align 1
@.str.36 = private unnamed_addr constant [22 x i8] c"SCREEN_OT_repeat_last\00", align 1
@.str.37 = private unnamed_addr constant [22 x i8] c"SCREEN_OT_region_flip\00", align 1
@.str.38 = private unnamed_addr constant [20 x i8] c"SCREEN_OT_redo_last\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"SCRIPT_OT_reload\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"FILE_OT_execute\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"FILE_OT_cancel\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"ED_OT_undo\00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"ED_OT_redo\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"ED_OT_undo_history\00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c"RENDER_OT_render\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"use_viewport\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"animation\00", align 1
@.str.48 = private unnamed_addr constant [22 x i8] c"RENDER_OT_view_cancel\00", align 1
@.str.49 = private unnamed_addr constant [20 x i8] c"RENDER_OT_view_show\00", align 1
@.str.50 = private unnamed_addr constant [29 x i8] c"RENDER_OT_play_rendered_anim\00", align 1
@.str.51 = private unnamed_addr constant [24 x i8] c"SCREEN_OT_userpref_show\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"Frames\00", align 1
@.str.53 = private unnamed_addr constant [23 x i8] c"SCREEN_OT_frame_offset\00", align 1
@.str.54 = private unnamed_addr constant [21 x i8] c"SCREEN_OT_frame_jump\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"SCREEN_OT_keyframe_jump\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"next\00", align 1
@.str.58 = private unnamed_addr constant [25 x i8] c"SCREEN_OT_animation_play\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.60 = private unnamed_addr constant [27 x i8] c"SCREEN_OT_animation_cancel\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"Window\00", align 1
@.str.62 = private unnamed_addr constant [20 x i8] c"WM_OT_open_mainfile\00", align 1
@.str.63 = private unnamed_addr constant [17 x i8] c"UI_OT_drop_color\00", align 1
@.str.64 = private unnamed_addr constant [25 x i8] c"Handle Area Action Zones\00", align 1
@.str.65 = private unnamed_addr constant [52 x i8] c"Handle area action zones for mouse actions/gestures\00", align 1
@.str.66 = private unnamed_addr constant [9 x i8] c"Modifier\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"Modifier state\00", align 1
@.str.68 = private unnamed_addr constant [16 x i8] c"sActionzoneData\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.69 = private unnamed_addr constant [12 x i8] c"Repeat Last\00", align 1
@.str.70 = private unnamed_addr constant [19 x i8] c"Repeat last action\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"Repeat History\00", align 1
@.str.72 = private unnamed_addr constant [44 x i8] c"Display menu for previous actions performed\00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.74 = private unnamed_addr constant [6 x i8] c"Index\00", align 1
@.str.75 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.76 = private unnamed_addr constant [10 x i8] c"Redo Last\00", align 1
@.str.77 = private unnamed_addr constant [39 x i8] c"Display menu for last action performed\00", align 1
@.str.78 = private unnamed_addr constant [16 x i8] c"Move Area Edges\00", align 1
@.str.79 = private unnamed_addr constant [25 x i8] c"Move selected area edges\00", align 1
@.str.80 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.81 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.82 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"Y\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"Delta\00", align 1
@.str.85 = private unnamed_addr constant [14 x i8] c"sAreaMoveData\00", align 1
@.str.86 = private unnamed_addr constant [11 x i8] c"Split Area\00", align 1
@.str.87 = private unnamed_addr constant [37 x i8] c"Split selected area into new windows\00", align 1
@.str.88 = private unnamed_addr constant [10 x i8] c"direction\00", align 1
@prop_direction_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 104, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.97, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 118, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str.89 = private unnamed_addr constant [10 x i8] c"Direction\00", align 1
@.str.90 = private unnamed_addr constant [7 x i8] c"factor\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"Factor\00", align 1
@.str.92 = private unnamed_addr constant [8 x i8] c"mouse_x\00", align 1
@.str.93 = private unnamed_addr constant [8 x i8] c"Mouse X\00", align 1
@.str.94 = private unnamed_addr constant [8 x i8] c"mouse_y\00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c"Mouse Y\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"op_area_split\00", align 1
@.str.97 = private unnamed_addr constant [11 x i8] c"HORIZONTAL\00", align 1
@.str.98 = private unnamed_addr constant [11 x i8] c"Horizontal\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"VERTICAL\00", align 1
@.str.100 = private unnamed_addr constant [9 x i8] c"Vertical\00", align 1
@.str.101 = private unnamed_addr constant [10 x i8] c"Join Area\00", align 1
@.str.102 = private unnamed_addr constant [36 x i8] c"Join selected areas into new window\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"min_x\00", align 1
@.str.104 = private unnamed_addr constant [4 x i8] c"X 1\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"min_y\00", align 1
@.str.106 = private unnamed_addr constant [4 x i8] c"Y 1\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"max_x\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"X 2\00", align 1
@.str.109 = private unnamed_addr constant [6 x i8] c"max_y\00", align 1
@.str.110 = private unnamed_addr constant [4 x i8] c"Y 2\00", align 1
@.str.111 = private unnamed_addr constant [24 x i8] c"areas don't share edge\0A\00", align 1
@.str.112 = private unnamed_addr constant [13 x i8] c"op_area_join\00", align 1
@.str.113 = private unnamed_addr constant [27 x i8] c"oops, didn't expect that!\0A\00", align 1
@.str.114 = private unnamed_addr constant [13 x i8] c"Area Options\00", align 1
@.str.115 = private unnamed_addr constant [37 x i8] c"Operations for splitting and merging\00", align 1
@.str.116 = private unnamed_addr constant [31 x i8] c"Duplicate Area into New Window\00", align 1
@.str.117 = private unnamed_addr constant [40 x i8] c"Duplicate selected area into new window\00", align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"Swap Areas\00", align 1
@.str.119 = private unnamed_addr constant [37 x i8] c"Swap selected areas screen positions\00", align 1
@.str.120 = private unnamed_addr constant [14 x i8] c"sAreaSwapData\00", align 1
@.str.121 = private unnamed_addr constant [17 x i8] c"Toggle Quad View\00", align 1
@.str.122 = private unnamed_addr constant [58 x i8] c"Split selected area into camera, front, right & top views\00", align 1
@.str.123 = private unnamed_addr constant [37 x i8] c"Only window region can be 4-splitted\00", align 1
@.str.124 = private unnamed_addr constant [35 x i8] c"Only last region can be 4-splitted\00", align 1
@.str.125 = private unnamed_addr constant [18 x i8] c"Scale Region Size\00", align 1
@.str.126 = private unnamed_addr constant [20 x i8] c"Scale selected area\00", align 1
@.str.127 = private unnamed_addr constant [47 x i8] c"Can only scale region size from an action zone\00", align 1
@.str.128 = private unnamed_addr constant [15 x i8] c"RegionMoveData\00", align 1
@.str.129 = private unnamed_addr constant [12 x i8] c"Flip Region\00", align 1
@.str.130 = private unnamed_addr constant [57 x i8] c"Toggle the region's alignment (left/right or top/bottom)\00", align 1
@.str.131 = private unnamed_addr constant [19 x i8] c"Flip Header Region\00", align 1
@.str.132 = private unnamed_addr constant [50 x i8] c"Toggle the header over/below the main window area\00", align 1
@.str.133 = private unnamed_addr constant [15 x i8] c"Display header\00", align 1
@.str.134 = private unnamed_addr constant [29 x i8] c"Expand/Collapse Header Menus\00", align 1
@.str.135 = private unnamed_addr constant [45 x i8] c"Expand or collapse the header pulldown menus\00", align 1
@.str.136 = private unnamed_addr constant [15 x i8] c"Header Toolbox\00", align 1
@.str.137 = private unnamed_addr constant [30 x i8] c"Display header region toolbox\00", align 1
@.str.138 = private unnamed_addr constant [11 x i8] c"Set Screen\00", align 1
@.str.139 = private unnamed_addr constant [32 x i8] c"Cycle through available screens\00", align 1
@.str.140 = private unnamed_addr constant [23 x i8] c"Toggle Fullscreen Area\00", align 1
@.str.141 = private unnamed_addr constant [53 x i8] c"Toggle display selected area as fullscreen/maximized\00", align 1
@.str.142 = private unnamed_addr constant [12 x i8] c"Hide Panels\00", align 1
@.str.143 = private unnamed_addr constant [20 x i8] c"Hide all the panels\00", align 1
@.str.144 = private unnamed_addr constant [24 x i8] c"Back to Previous Screen\00", align 1
@.str.145 = private unnamed_addr constant [74 x i8] c"Revert back to the original screen layout, before fullscreen area overlay\00", align 1
@.str.146 = private unnamed_addr constant [27 x i8] c"SCREEN_OT_back_to_previous\00", align 1
@.str.147 = private unnamed_addr constant [31 x i8] c"No fullscreen areas were found\00", align 1
@.str.148 = private unnamed_addr constant [20 x i8] c"Clean-up Space-data\00", align 1
@.str.149 = private unnamed_addr constant [45 x i8] c"Remove unused settings for invisible editors\00", align 1
@.str.150 = private unnamed_addr constant [28 x i8] c"SCREEN_OT_spacedata_cleanup\00", align 1
@.str.151 = private unnamed_addr constant [30 x i8] c"Removed amount of editors: %d\00", align 1
@.str.152 = private unnamed_addr constant [22 x i8] c"Show User Preferences\00", align 1
@.str.153 = private unnamed_addr constant [22 x i8] c"Show user preferences\00", align 1
@.str.154 = private unnamed_addr constant [13 x i8] c"Region Alpha\00", align 1
@.str.155 = private unnamed_addr constant [36 x i8] c"Blend in and out overlapping region\00", align 1
@.str.156 = private unnamed_addr constant [13 x i8] c"Frame Offset\00", align 1
@.str.157 = private unnamed_addr constant [54 x i8] c"Move current frame forward/backward by a given number\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.158 = private unnamed_addr constant [17 x i8] c"Jump to Endpoint\00", align 1
@.str.159 = private unnamed_addr constant [40 x i8] c"Jump to first/last frame in frame range\00", align 1
@.str.160 = private unnamed_addr constant [11 x i8] c"Last Frame\00", align 1
@.str.161 = private unnamed_addr constant [42 x i8] c"Jump to the last frame of the frame range\00", align 1
@.str.162 = private unnamed_addr constant [17 x i8] c"Jump to Keyframe\00", align 1
@.str.163 = private unnamed_addr constant [31 x i8] c"Jump to previous/next keyframe\00", align 1
@.str.164 = private unnamed_addr constant [14 x i8] c"Next Keyframe\00", align 1
@.str.165 = private unnamed_addr constant [47 x i8] c"No more keyframes to jump to in this direction\00", align 1
@.str.166 = private unnamed_addr constant [15 x i8] c"Jump to Marker\00", align 1
@.str.167 = private unnamed_addr constant [29 x i8] c"Jump to previous/next marker\00", align 1
@.str.168 = private unnamed_addr constant [22 x i8] c"SCREEN_OT_marker_jump\00", align 1
@.str.169 = private unnamed_addr constant [12 x i8] c"Next Marker\00", align 1
@.str.170 = private unnamed_addr constant [45 x i8] c"No more markers to jump to in this direction\00", align 1
@.str.171 = private unnamed_addr constant [15 x i8] c"Animation Step\00", align 1
@.str.172 = private unnamed_addr constant [35 x i8] c"Step through animation by position\00", align 1
@.str.173 = private unnamed_addr constant [15 x i8] c"Play Animation\00", align 1
@.str.174 = private unnamed_addr constant [15 x i8] c"Play animation\00", align 1
@.str.175 = private unnamed_addr constant [16 x i8] c"Play in Reverse\00", align 1
@.str.176 = private unnamed_addr constant [30 x i8] c"Animation is played backwards\00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c"sync\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"Sync\00", align 1
@.str.179 = private unnamed_addr constant [34 x i8] c"Drop frames to maintain framerate\00", align 1
@.str.180 = private unnamed_addr constant [17 x i8] c"Cancel Animation\00", align 1
@.str.181 = private unnamed_addr constant [50 x i8] c"Cancel animation, returning to the original frame\00", align 1
@.str.182 = private unnamed_addr constant [14 x i8] c"restore_frame\00", align 1
@.str.183 = private unnamed_addr constant [14 x i8] c"Restore Frame\00", align 1
@.str.184 = private unnamed_addr constant [49 x i8] c"Restore the frame when animation was initialized\00", align 1
@.str.185 = private unnamed_addr constant [11 x i8] c"New Screen\00", align 1
@.str.186 = private unnamed_addr constant [17 x i8] c"Add a new screen\00", align 1
@.str.187 = private unnamed_addr constant [14 x i8] c"SCREEN_OT_new\00", align 1
@.str.188 = private unnamed_addr constant [14 x i8] c"Delete Screen\00", align 1
@.str.189 = private unnamed_addr constant [21 x i8] c"Delete active screen\00", align 1
@.str.190 = private unnamed_addr constant [17 x i8] c"SCREEN_OT_delete\00", align 1
@SCENE_OT_new.type_items = internal global [6 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.191, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.193, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.194, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.196, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.197, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.199, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.200, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.202, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.203, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.205, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3586
@.str.191 = private unnamed_addr constant [4 x i8] c"NEW\00", align 1
@.str.192 = private unnamed_addr constant [4 x i8] c"New\00", align 1
@.str.193 = private unnamed_addr constant [14 x i8] c"Add new scene\00", align 1
@.str.194 = private unnamed_addr constant [6 x i8] c"EMPTY\00", align 1
@.str.195 = private unnamed_addr constant [14 x i8] c"Copy Settings\00", align 1
@.str.196 = private unnamed_addr constant [32 x i8] c"Make a copy without any objects\00", align 1
@.str.197 = private unnamed_addr constant [13 x i8] c"LINK_OBJECTS\00", align 1
@.str.198 = private unnamed_addr constant [13 x i8] c"Link Objects\00", align 1
@.str.199 = private unnamed_addr constant [43 x i8] c"Link to the objects from the current scene\00", align 1
@.str.200 = private unnamed_addr constant [17 x i8] c"LINK_OBJECT_DATA\00", align 1
@.str.201 = private unnamed_addr constant [17 x i8] c"Link Object Data\00", align 1
@.str.202 = private unnamed_addr constant [51 x i8] c"Copy objects linked to data from the current scene\00", align 1
@.str.203 = private unnamed_addr constant [10 x i8] c"FULL_COPY\00", align 1
@.str.204 = private unnamed_addr constant [10 x i8] c"Full Copy\00", align 1
@.str.205 = private unnamed_addr constant [38 x i8] c"Make a full copy of the current scene\00", align 1
@.str.206 = private unnamed_addr constant [10 x i8] c"New Scene\00", align 1
@.str.207 = private unnamed_addr constant [22 x i8] c"Add new scene by type\00", align 1
@.str.208 = private unnamed_addr constant [13 x i8] c"SCENE_OT_new\00", align 1
@.str.209 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.210 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.211 = private unnamed_addr constant [6 x i8] c"Scene\00", align 1
@.str.212 = private unnamed_addr constant [13 x i8] c"Delete Scene\00", align 1
@.str.213 = private unnamed_addr constant [20 x i8] c"Delete active scene\00", align 1
@.str.214 = private unnamed_addr constant [16 x i8] c"SCENE_OT_delete\00", align 1
@.str.215 = private unnamed_addr constant [17 x i8] c"scene delete %p\0A\00", align 1
@.str.216 = private unnamed_addr constant [9 x i8] c"filepath\00", align 1
@keymap_modal_set.modal_items = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.217, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.219, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.221, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.223, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3718
@.str.217 = private unnamed_addr constant [7 x i8] c"CANCEL\00", align 1
@.str.218 = private unnamed_addr constant [7 x i8] c"Cancel\00", align 1
@.str.219 = private unnamed_addr constant [6 x i8] c"APPLY\00", align 1
@.str.220 = private unnamed_addr constant [6 x i8] c"Apply\00", align 1
@.str.221 = private unnamed_addr constant [7 x i8] c"STEP10\00", align 1
@.str.222 = private unnamed_addr constant [9 x i8] c"Steps on\00", align 1
@.str.223 = private unnamed_addr constant [11 x i8] c"STEP10_OFF\00", align 1
@.str.224 = private unnamed_addr constant [10 x i8] c"Steps off\00", align 1
@.str.225 = private unnamed_addr constant [19 x i8] c"Standard Modal Map\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_regionactive(%struct.bContext* %C) #0 !dbg !3731 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3736, metadata !DIExpression()), !dbg !3737
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3738
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !3740
  %cmp = icmp eq %struct.wmWindow* %call, null, !dbg !3741
  br i1 %cmp, label %if.then, label %if.end, !dbg !3742

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3743
  br label %return, !dbg !3743

if.end:                                           ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3744
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !3746
  %cmp2 = icmp eq %struct.bScreen* %call1, null, !dbg !3747
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3748

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3749
  br label %return, !dbg !3749

if.end4:                                          ; preds = %if.end
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3750
  %call5 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !3752
  %cmp6 = icmp eq %struct.ARegion* %call5, null, !dbg !3753
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3754

if.then7:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !3755
  br label %return, !dbg !3755

if.end8:                                          ; preds = %if.end4
  store i32 1, i32* %retval, align 4, !dbg !3756
  br label %return, !dbg !3756

return:                                           ; preds = %if.end8, %if.then7, %if.then3, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !3757
  ret i32 %3, !dbg !3757
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #2

declare dso_local %struct.bScreen* @CTX_wm_screen(%struct.bContext*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_areaactive(%struct.bContext* %C) #0 !dbg !3758 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3759, metadata !DIExpression()), !dbg !3760
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3761
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !3763
  %cmp = icmp eq %struct.wmWindow* %call, null, !dbg !3764
  br i1 %cmp, label %if.then, label %if.end, !dbg !3765

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3766
  br label %return, !dbg !3766

if.end:                                           ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3767
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !3769
  %cmp2 = icmp eq %struct.bScreen* %call1, null, !dbg !3770
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3771

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3772
  br label %return, !dbg !3772

if.end4:                                          ; preds = %if.end
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3773
  %call5 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %2), !dbg !3775
  %cmp6 = icmp eq %struct.ScrArea* %call5, null, !dbg !3776
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !3777

if.then7:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !3778
  br label %return, !dbg !3778

if.end8:                                          ; preds = %if.end4
  store i32 1, i32* %retval, align 4, !dbg !3779
  br label %return, !dbg !3779

return:                                           ; preds = %if.end8, %if.then7, %if.then3, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !3780
  ret i32 %3, !dbg !3780
}

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_screenactive(%struct.bContext* %C) #0 !dbg !3781 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3782, metadata !DIExpression()), !dbg !3783
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3784
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !3786
  %cmp = icmp eq %struct.wmWindow* %call, null, !dbg !3787
  br i1 %cmp, label %if.then, label %if.end, !dbg !3788

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3789
  br label %return, !dbg !3789

if.end:                                           ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3790
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !3792
  %cmp2 = icmp eq %struct.bScreen* %call1, null, !dbg !3793
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3794

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3795
  br label %return, !dbg !3795

if.end4:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !3796
  br label %return, !dbg !3796

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !3797
  ret i32 %2, !dbg !3797
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_screen_mainwinactive(%struct.bContext* %C) #0 !dbg !3798 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %screen = alloca %struct.bScreen*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3799, metadata !DIExpression()), !dbg !3800
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !3801, metadata !DIExpression()), !dbg !3802
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3803
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !3805
  %cmp = icmp eq %struct.wmWindow* %call, null, !dbg !3806
  br i1 %cmp, label %if.then, label %if.end, !dbg !3807

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3808
  br label %return, !dbg !3808

if.end:                                           ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3809
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !3810
  store %struct.bScreen* %call1, %struct.bScreen** %screen, align 8, !dbg !3811
  %2 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !3812
  %cmp2 = icmp eq %struct.bScreen* %2, null, !dbg !3814
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3815

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3816
  br label %return, !dbg !3816

if.end4:                                          ; preds = %if.end
  %3 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !3817
  %subwinactive = getelementptr inbounds %struct.bScreen, %struct.bScreen* %3, i32 0, i32 19, !dbg !3819
  %4 = load i16, i16* %subwinactive, align 4, !dbg !3819
  %conv = sext i16 %4 to i32, !dbg !3817
  %5 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !3820
  %mainwin = getelementptr inbounds %struct.bScreen, %struct.bScreen* %5, i32 0, i32 18, !dbg !3821
  %6 = load i16, i16* %mainwin, align 2, !dbg !3821
  %conv5 = sext i16 %6 to i32, !dbg !3820
  %cmp6 = icmp ne i32 %conv, %conv5, !dbg !3822
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !3823

if.then8:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !3824
  br label %return, !dbg !3824

if.end9:                                          ; preds = %if.end4
  store i32 1, i32* %retval, align 4, !dbg !3825
  br label %return, !dbg !3825

return:                                           ; preds = %if.end9, %if.then8, %if.then3, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !3826
  ret i32 %7, !dbg !3826
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_scene_editable(%struct.bContext* %C) #0 !dbg !3827 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %scene = alloca %struct.Scene*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3828, metadata !DIExpression()), !dbg !3829
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !3830, metadata !DIExpression()), !dbg !3833
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3834
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !3835
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !3833
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3836
  %tobool = icmp ne %struct.Scene* %1, null, !dbg !3836
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3838

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3839
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 0, !dbg !3840
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !3841
  %3 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !3841
  %cmp = icmp eq %struct.Library* %3, null, !dbg !3842
  br i1 %cmp, label %if.then, label %if.end, !dbg !3843

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !3844
  br label %return, !dbg !3844

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !3845
  br label %return, !dbg !3845

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !3846
  ret i32 %4, !dbg !3846
}

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_objectmode(%struct.bContext* %C) #0 !dbg !3847 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %scene = alloca %struct.Scene*, align 8
  %obact = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3848, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !3850, metadata !DIExpression()), !dbg !3851
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3852
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !3853
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !3851
  call void @llvm.dbg.declare(metadata %struct.Object** %obact, metadata !3854, metadata !DIExpression()), !dbg !3857
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3858
  %call1 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %1), !dbg !3859
  store %struct.Object* %call1, %struct.Object** %obact, align 8, !dbg !3857
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3860
  %cmp = icmp eq %struct.Scene* %2, null, !dbg !3862
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3863

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3864
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 0, !dbg !3865
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !3866
  %4 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !3866
  %tobool = icmp ne %struct.Library* %4, null, !dbg !3864
  br i1 %tobool, label %if.then, label %if.end, !dbg !3867

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !3868
  br label %return, !dbg !3868

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3869
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %5), !dbg !3871
  %tobool3 = icmp ne %struct.Object* %call2, null, !dbg !3871
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !3872

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3873
  br label %return, !dbg !3873

if.end5:                                          ; preds = %if.end
  %6 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !3874
  %tobool6 = icmp ne %struct.Object* %6, null, !dbg !3874
  br i1 %tobool6, label %land.lhs.true, label %if.end9, !dbg !3876

land.lhs.true:                                    ; preds = %if.end5
  %7 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !3877
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 27, !dbg !3878
  %8 = load i32, i32* %mode, align 8, !dbg !3878
  %cmp7 = icmp ne i32 %8, 0, !dbg !3879
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !3880

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !3881
  br label %return, !dbg !3881

if.end9:                                          ; preds = %land.lhs.true, %if.end5
  store i32 1, i32* %retval, align 4, !dbg !3882
  br label %return, !dbg !3882

return:                                           ; preds = %if.end9, %if.then8, %if.then4, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !3883
  ret i32 %9, !dbg !3883
}

declare dso_local %struct.Object* @CTX_data_active_object(%struct.bContext*) #2

declare dso_local %struct.Object* @CTX_data_edit_object(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_view3d_active(%struct.bContext* %C) #0 !dbg !3884 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3885, metadata !DIExpression()), !dbg !3886
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3887
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 1), !dbg !3888
  %conv = zext i8 %call to i32, !dbg !3888
  ret i32 %conv, !dbg !3889
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ed_spacetype_test(%struct.bContext* %C, i32 %type) #0 !dbg !3890 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %type.addr = alloca i32, align 4
  %sl = alloca %struct.SpaceLink*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3893, metadata !DIExpression()), !dbg !3894
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3895, metadata !DIExpression()), !dbg !3896
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3897
  %call = call i32 @ED_operator_areaactive(%struct.bContext* %0), !dbg !3899
  %tobool = icmp ne i32 %call, 0, !dbg !3899
  br i1 %tobool, label %if.then, label %if.end, !dbg !3900

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SpaceLink** %sl, metadata !3901, metadata !DIExpression()), !dbg !3903
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3904
  %call1 = call %struct.SpaceLink* @CTX_wm_space_data(%struct.bContext* %1), !dbg !3905
  store %struct.SpaceLink* %call1, %struct.SpaceLink** %sl, align 8, !dbg !3903
  %2 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !3906
  %tobool2 = icmp ne %struct.SpaceLink* %2, null, !dbg !3906
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !3907

land.rhs:                                         ; preds = %if.then
  %3 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !3908
  %spacetype = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %3, i32 0, i32 3, !dbg !3909
  %4 = load i32, i32* %spacetype, align 8, !dbg !3909
  %5 = load i32, i32* %type.addr, align 4, !dbg !3910
  %cmp = icmp eq i32 %4, %5, !dbg !3911
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %6 = phi i1 [ false, %if.then ], [ %cmp, %land.rhs ], !dbg !3912
  %land.ext = zext i1 %6 to i32, !dbg !3907
  %conv = trunc i32 %land.ext to i8, !dbg !3906
  store i8 %conv, i8* %retval, align 1, !dbg !3913
  br label %return, !dbg !3913

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3914
  br label %return, !dbg !3914

return:                                           ; preds = %if.end, %land.end
  %7 = load i8, i8* %retval, align 1, !dbg !3915
  ret i8 %7, !dbg !3915
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_region_view3d_active(%struct.bContext* %C) #0 !dbg !3916 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3917, metadata !DIExpression()), !dbg !3918
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3919
  %call = call %struct.RegionView3D* @CTX_wm_region_view3d(%struct.bContext* %0), !dbg !3921
  %tobool = icmp ne %struct.RegionView3D* %call, null, !dbg !3921
  br i1 %tobool, label %if.then, label %if.end, !dbg !3922

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !3923
  br label %return, !dbg !3923

if.end:                                           ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3924
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)), !dbg !3925
  store i32 0, i32* %retval, align 4, !dbg !3926
  br label %return, !dbg !3926

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !3927
  ret i32 %2, !dbg !3927
}

declare dso_local %struct.RegionView3D* @CTX_wm_region_view3d(%struct.bContext*) #2

declare dso_local void @CTX_wm_operator_poll_msg_set(%struct.bContext*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_animview_active(%struct.bContext* %C) #0 !dbg !3928 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %sl = alloca %struct.SpaceLink*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3929, metadata !DIExpression()), !dbg !3930
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3931
  %call = call i32 @ED_operator_areaactive(%struct.bContext* %0), !dbg !3933
  %tobool = icmp ne i32 %call, 0, !dbg !3933
  br i1 %tobool, label %if.then, label %if.end15, !dbg !3934

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SpaceLink** %sl, metadata !3935, metadata !DIExpression()), !dbg !3937
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3938
  %call1 = call %struct.SpaceLink* @CTX_wm_space_data(%struct.bContext* %1), !dbg !3939
  store %struct.SpaceLink* %call1, %struct.SpaceLink** %sl, align 8, !dbg !3937
  %2 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !3940
  %tobool2 = icmp ne %struct.SpaceLink* %2, null, !dbg !3940
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !3942

land.lhs.true:                                    ; preds = %if.then
  %3 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !3943
  %spacetype = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %3, i32 0, i32 3, !dbg !3943
  %4 = load i32, i32* %spacetype, align 8, !dbg !3943
  %cmp = icmp eq i32 %4, 8, !dbg !3943
  br i1 %cmp, label %if.then14, label %lor.lhs.false, !dbg !3943

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !3943
  %spacetype3 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %5, i32 0, i32 3, !dbg !3943
  %6 = load i32, i32* %spacetype3, align 8, !dbg !3943
  %cmp4 = icmp eq i32 %6, 12, !dbg !3943
  br i1 %cmp4, label %if.then14, label %lor.lhs.false5, !dbg !3943

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %7 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !3943
  %spacetype6 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %7, i32 0, i32 3, !dbg !3943
  %8 = load i32, i32* %spacetype6, align 8, !dbg !3943
  %cmp7 = icmp eq i32 %8, 13, !dbg !3943
  br i1 %cmp7, label %if.then14, label %lor.lhs.false8, !dbg !3943

lor.lhs.false8:                                   ; preds = %lor.lhs.false5
  %9 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !3943
  %spacetype9 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %9, i32 0, i32 3, !dbg !3943
  %10 = load i32, i32* %spacetype9, align 8, !dbg !3943
  %cmp10 = icmp eq i32 %10, 2, !dbg !3943
  br i1 %cmp10, label %if.then14, label %lor.lhs.false11, !dbg !3943

lor.lhs.false11:                                  ; preds = %lor.lhs.false8
  %11 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !3943
  %spacetype12 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %11, i32 0, i32 3, !dbg !3943
  %12 = load i32, i32* %spacetype12, align 8, !dbg !3943
  %cmp13 = icmp eq i32 %12, 15, !dbg !3943
  br i1 %cmp13, label %if.then14, label %if.end, !dbg !3944

if.then14:                                        ; preds = %lor.lhs.false11, %lor.lhs.false8, %lor.lhs.false5, %lor.lhs.false, %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !3945
  br label %return, !dbg !3945

if.end:                                           ; preds = %lor.lhs.false11, %if.then
  br label %if.end15, !dbg !3946

if.end15:                                         ; preds = %if.end, %entry
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3947
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %13, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0)), !dbg !3948
  store i32 0, i32* %retval, align 4, !dbg !3949
  br label %return, !dbg !3949

return:                                           ; preds = %if.end15, %if.then14
  %14 = load i32, i32* %retval, align 4, !dbg !3950
  ret i32 %14, !dbg !3950
}

declare dso_local %struct.SpaceLink* @CTX_wm_space_data(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_timeline_active(%struct.bContext* %C) #0 !dbg !3951 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3952, metadata !DIExpression()), !dbg !3953
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3954
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 15), !dbg !3955
  %conv = zext i8 %call to i32, !dbg !3955
  ret i32 %conv, !dbg !3956
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_outliner_active(%struct.bContext* %C) #0 !dbg !3957 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3958, metadata !DIExpression()), !dbg !3959
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3960
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 3), !dbg !3961
  %conv = zext i8 %call to i32, !dbg !3961
  ret i32 %conv, !dbg !3962
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_outliner_active_no_editobject(%struct.bContext* %C) #0 !dbg !3963 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3964, metadata !DIExpression()), !dbg !3965
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3966
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 3), !dbg !3968
  %tobool = icmp ne i8 %call, 0, !dbg !3968
  br i1 %tobool, label %if.then, label %if.end, !dbg !3969

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !3970, metadata !DIExpression()), !dbg !3972
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3973
  %call1 = call %struct.Object* @ED_object_active_context(%struct.bContext* %1), !dbg !3974
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !3972
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !3975, metadata !DIExpression()), !dbg !3976
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3977
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %2), !dbg !3978
  store %struct.Object* %call2, %struct.Object** %obedit, align 8, !dbg !3976
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3979
  %tobool3 = icmp ne %struct.Object* %3, null, !dbg !3979
  br i1 %tobool3, label %land.lhs.true, label %if.else, !dbg !3981

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3982
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !3983
  %cmp = icmp eq %struct.Object* %4, %5, !dbg !3984
  br i1 %cmp, label %if.then4, label %if.else, !dbg !3985

if.then4:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !3986
  br label %return, !dbg !3986

if.else:                                          ; preds = %land.lhs.true, %if.then
  store i32 1, i32* %retval, align 4, !dbg !3987
  br label %return, !dbg !3987

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3988
  br label %return, !dbg !3988

return:                                           ; preds = %if.end, %if.else, %if.then4
  %6 = load i32, i32* %retval, align 4, !dbg !3989
  ret i32 %6, !dbg !3989
}

declare dso_local %struct.Object* @ED_object_active_context(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_file_active(%struct.bContext* %C) #0 !dbg !3990 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3991, metadata !DIExpression()), !dbg !3992
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3993
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 5), !dbg !3994
  %conv = zext i8 %call to i32, !dbg !3994
  ret i32 %conv, !dbg !3995
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_action_active(%struct.bContext* %C) #0 !dbg !3996 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3997, metadata !DIExpression()), !dbg !3998
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3999
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 12), !dbg !4000
  %conv = zext i8 %call to i32, !dbg !4000
  ret i32 %conv, !dbg !4001
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_buttons_active(%struct.bContext* %C) #0 !dbg !4002 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4003, metadata !DIExpression()), !dbg !4004
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4005
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 4), !dbg !4006
  %conv = zext i8 %call to i32, !dbg !4006
  ret i32 %conv, !dbg !4007
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_node_active(%struct.bContext* %C) #0 !dbg !4008 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4009, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !4011, metadata !DIExpression()), !dbg !4077
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4078
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !4079
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !4077
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4080
  %tobool = icmp ne %struct.SpaceNode* %1, null, !dbg !4080
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4082

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4083
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 19, !dbg !4084
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !4084
  %tobool1 = icmp ne %struct.bNodeTree* %3, null, !dbg !4083
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4085

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !4086
  br label %return, !dbg !4086

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4087
  br label %return, !dbg !4087

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !4088
  ret i32 %4, !dbg !4088
}

declare dso_local %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_node_editable(%struct.bContext* %C) #0 !dbg !4089 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !4092, metadata !DIExpression()), !dbg !4093
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4094
  %call = call %struct.SpaceNode* @CTX_wm_space_node(%struct.bContext* %0), !dbg !4095
  store %struct.SpaceNode* %call, %struct.SpaceNode** %snode, align 8, !dbg !4093
  %1 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4096
  %tobool = icmp ne %struct.SpaceNode* %1, null, !dbg !4096
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4098

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4099
  %edittree = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %2, i32 0, i32 19, !dbg !4100
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree, align 8, !dbg !4100
  %tobool1 = icmp ne %struct.bNodeTree* %3, null, !dbg !4099
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !4101

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !4102
  %edittree3 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %4, i32 0, i32 19, !dbg !4103
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %edittree3, align 8, !dbg !4103
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 0, !dbg !4104
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !4105
  %6 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !4105
  %cmp = icmp eq %struct.Library* %6, null, !dbg !4106
  br i1 %cmp, label %if.then, label %if.end, !dbg !4107

if.then:                                          ; preds = %land.lhs.true2
  store i32 1, i32* %retval, align 4, !dbg !4108
  br label %return, !dbg !4108

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4109
  br label %return, !dbg !4109

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !4110
  ret i32 %7, !dbg !4110
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_graphedit_active(%struct.bContext* %C) #0 !dbg !4111 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4112, metadata !DIExpression()), !dbg !4113
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4114
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 2), !dbg !4115
  %conv = zext i8 %call to i32, !dbg !4115
  ret i32 %conv, !dbg !4116
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_sequencer_active(%struct.bContext* %C) #0 !dbg !4117 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4118, metadata !DIExpression()), !dbg !4119
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4120
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 8), !dbg !4121
  %conv = zext i8 %call to i32, !dbg !4121
  ret i32 %conv, !dbg !4122
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_sequencer_active_editable(%struct.bContext* %C) #0 !dbg !4123 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4124, metadata !DIExpression()), !dbg !4125
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4126
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 8), !dbg !4127
  %conv = zext i8 %call to i32, !dbg !4127
  %tobool = icmp ne i32 %conv, 0, !dbg !4127
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4128

land.rhs:                                         ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4129
  %call1 = call i32 @ED_operator_scene_editable(%struct.bContext* %1), !dbg !4130
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4128
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !4131
  %land.ext = zext i1 %2 to i32, !dbg !4128
  ret i32 %land.ext, !dbg !4132
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_image_active(%struct.bContext* %C) #0 !dbg !4133 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4134, metadata !DIExpression()), !dbg !4135
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4136
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 6), !dbg !4137
  %conv = zext i8 %call to i32, !dbg !4137
  ret i32 %conv, !dbg !4138
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_nla_active(%struct.bContext* %C) #0 !dbg !4139 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4140, metadata !DIExpression()), !dbg !4141
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4142
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 13), !dbg !4143
  %conv = zext i8 %call to i32, !dbg !4143
  ret i32 %conv, !dbg !4144
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_logic_active(%struct.bContext* %C) #0 !dbg !4145 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4146, metadata !DIExpression()), !dbg !4147
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4148
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 17), !dbg !4149
  %conv = zext i8 %call to i32, !dbg !4149
  ret i32 %conv, !dbg !4150
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_info_active(%struct.bContext* %C) #0 !dbg !4151 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4152, metadata !DIExpression()), !dbg !4153
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4154
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 7), !dbg !4155
  %conv = zext i8 %call to i32, !dbg !4155
  ret i32 %conv, !dbg !4156
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_console_active(%struct.bContext* %C) #0 !dbg !4157 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4158, metadata !DIExpression()), !dbg !4159
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4160
  %call = call zeroext i8 @ed_spacetype_test(%struct.bContext* %0, i32 18), !dbg !4161
  %conv = zext i8 %call to i32, !dbg !4161
  ret i32 %conv, !dbg !4162
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_object_active(%struct.bContext* %C) #0 !dbg !4163 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4164, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4166, metadata !DIExpression()), !dbg !4167
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4168
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !4169
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !4167
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4170
  %cmp = icmp ne %struct.Object* %1, null, !dbg !4171
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4172

land.rhs:                                         ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4173
  %call1 = call i32 @ed_object_hidden(%struct.Object* %2), !dbg !4174
  %tobool = icmp ne i32 %call1, 0, !dbg !4175
  %lnot = xor i1 %tobool, true, !dbg !4175
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !4176
  %land.ext = zext i1 %3 to i32, !dbg !4172
  ret i32 %land.ext, !dbg !4177
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ed_object_hidden(%struct.Object* %ob) #0 !dbg !4178 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !4181, metadata !DIExpression()), !dbg !4182
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4183
  %restrictflag = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 102, !dbg !4184
  %1 = load i8, i8* %restrictflag, align 8, !dbg !4184
  %conv = zext i8 %1 to i32, !dbg !4183
  %and = and i32 %conv, 1, !dbg !4185
  %tobool = icmp ne i32 %and, 0, !dbg !4185
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4186

land.rhs:                                         ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !4187
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 27, !dbg !4188
  %3 = load i32, i32* %mode, align 8, !dbg !4188
  %and1 = and i32 %3, 1, !dbg !4189
  %tobool2 = icmp ne i32 %and1, 0, !dbg !4190
  %lnot = xor i1 %tobool2, true, !dbg !4190
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !4191
  %land.ext = zext i1 %4 to i32, !dbg !4186
  ret i32 %land.ext, !dbg !4192
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_object_active_editable(%struct.bContext* %C) #0 !dbg !4193 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4194, metadata !DIExpression()), !dbg !4195
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4196, metadata !DIExpression()), !dbg !4197
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4198
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !4199
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !4197
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4200
  %cmp = icmp ne %struct.Object* %1, null, !dbg !4201
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !4202

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4203
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !4204
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !4205
  %3 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !4205
  %tobool = icmp ne %struct.Library* %3, null, !dbg !4206
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !4207

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4208
  %call1 = call i32 @ed_object_hidden(%struct.Object* %4), !dbg !4209
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4210
  %lnot = xor i1 %tobool2, true, !dbg !4210
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %5 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !4211
  %land.ext = zext i1 %5 to i32, !dbg !4207
  ret i32 %land.ext, !dbg !4212
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_object_active_editable_mesh(%struct.bContext* %C) #0 !dbg !4213 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4214, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4216, metadata !DIExpression()), !dbg !4217
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4218
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !4219
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !4217
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4220
  %cmp = icmp ne %struct.Object* %1, null, !dbg !4221
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !4222

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4223
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !4224
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !4225
  %3 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !4225
  %tobool = icmp ne %struct.Library* %3, null, !dbg !4226
  br i1 %tobool, label %land.end, label %land.lhs.true1, !dbg !4227

land.lhs.true1:                                   ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4228
  %call2 = call i32 @ed_object_hidden(%struct.Object* %4), !dbg !4229
  %tobool3 = icmp ne i32 %call2, 0, !dbg !4229
  br i1 %tobool3, label %land.end, label %land.lhs.true4, !dbg !4230

land.lhs.true4:                                   ; preds = %land.lhs.true1
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4231
  %type = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !4232
  %6 = load i16, i16* %type, align 8, !dbg !4232
  %conv = sext i16 %6 to i32, !dbg !4231
  %cmp5 = icmp eq i32 %conv, 1, !dbg !4233
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !4234

land.rhs:                                         ; preds = %land.lhs.true4
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4235
  %data = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !4236
  %8 = load i8*, i8** %data, align 8, !dbg !4236
  %9 = bitcast i8* %8 to %struct.ID*, !dbg !4237
  %lib7 = getelementptr inbounds %struct.ID, %struct.ID* %9, i32 0, i32 3, !dbg !4238
  %10 = load %struct.Library*, %struct.Library** %lib7, align 8, !dbg !4238
  %tobool8 = icmp ne %struct.Library* %10, null, !dbg !4239
  %lnot = xor i1 %tobool8, true, !dbg !4239
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true4, %land.lhs.true1, %land.lhs.true, %entry
  %11 = phi i1 [ false, %land.lhs.true4 ], [ false, %land.lhs.true1 ], [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !4240
  %land.ext = zext i1 %11 to i32, !dbg !4234
  ret i32 %land.ext, !dbg !4241
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_object_active_editable_font(%struct.bContext* %C) #0 !dbg !4242 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4243, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4245, metadata !DIExpression()), !dbg !4246
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4247
  %call = call %struct.Object* @ED_object_active_context(%struct.bContext* %0), !dbg !4248
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !4246
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4249
  %cmp = icmp ne %struct.Object* %1, null, !dbg !4250
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !4251

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4252
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !4253
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !4254
  %3 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !4254
  %tobool = icmp ne %struct.Library* %3, null, !dbg !4255
  br i1 %tobool, label %land.end, label %land.lhs.true1, !dbg !4256

land.lhs.true1:                                   ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4257
  %call2 = call i32 @ed_object_hidden(%struct.Object* %4), !dbg !4258
  %tobool3 = icmp ne i32 %call2, 0, !dbg !4258
  br i1 %tobool3, label %land.end, label %land.rhs, !dbg !4259

land.rhs:                                         ; preds = %land.lhs.true1
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4260
  %type = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !4261
  %6 = load i16, i16* %type, align 8, !dbg !4261
  %conv = sext i16 %6 to i32, !dbg !4260
  %cmp4 = icmp eq i32 %conv, 4, !dbg !4262
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true1, %land.lhs.true, %entry
  %7 = phi i1 [ false, %land.lhs.true1 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !4263
  %land.ext = zext i1 %7 to i32, !dbg !4259
  ret i32 %land.ext, !dbg !4264
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_editmesh(%struct.bContext* %C) #0 !dbg !4265 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4266, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4268, metadata !DIExpression()), !dbg !4269
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4270
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4271
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4269
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4272
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4272
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4274

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4275
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !4276
  %3 = load i16, i16* %type, align 8, !dbg !4276
  %conv = sext i16 %3 to i32, !dbg !4275
  %cmp = icmp eq i32 %conv, 1, !dbg !4277
  br i1 %cmp, label %if.then, label %if.end, !dbg !4278

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4279
  %call2 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %4), !dbg !4280
  %cmp3 = icmp ne %struct.BMEditMesh* null, %call2, !dbg !4281
  %conv4 = zext i1 %cmp3 to i32, !dbg !4281
  store i32 %conv4, i32* %retval, align 4, !dbg !4282
  br label %return, !dbg !4282

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4283
  br label %return, !dbg !4283

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !4284
  ret i32 %5, !dbg !4284
}

declare dso_local %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_editmesh_view3d(%struct.bContext* %C) #0 !dbg !4285 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4286, metadata !DIExpression()), !dbg !4287
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4288
  %call = call i32 @ED_operator_editmesh(%struct.bContext* %0), !dbg !4289
  %tobool = icmp ne i32 %call, 0, !dbg !4289
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4290

land.rhs:                                         ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4291
  %call1 = call i32 @ED_operator_view3d_active(%struct.bContext* %1), !dbg !4292
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4290
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !4293
  %land.ext = zext i1 %2 to i32, !dbg !4290
  ret i32 %land.ext, !dbg !4294
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_editmesh_region_view3d(%struct.bContext* %C) #0 !dbg !4295 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4296, metadata !DIExpression()), !dbg !4297
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4298
  %call = call i32 @ED_operator_editmesh(%struct.bContext* %0), !dbg !4300
  %tobool = icmp ne i32 %call, 0, !dbg !4300
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4301

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4302
  %call1 = call %struct.RegionView3D* @CTX_wm_region_view3d(%struct.bContext* %1), !dbg !4303
  %tobool2 = icmp ne %struct.RegionView3D* %call1, null, !dbg !4303
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4304

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !4305
  br label %return, !dbg !4305

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4306
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0)), !dbg !4307
  store i32 0, i32* %retval, align 4, !dbg !4308
  br label %return, !dbg !4308

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !4309
  ret i32 %3, !dbg !4309
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_editarmature(%struct.bContext* %C) #0 !dbg !4310 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4311, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4313, metadata !DIExpression()), !dbg !4314
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4315
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4316
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4314
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4317
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4317
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4319

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4320
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !4321
  %3 = load i16, i16* %type, align 8, !dbg !4321
  %conv = sext i16 %3 to i32, !dbg !4320
  %cmp = icmp eq i32 %conv, 25, !dbg !4322
  br i1 %cmp, label %if.then, label %if.end, !dbg !4323

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4324
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !4325
  %5 = load i8*, i8** %data, align 8, !dbg !4325
  %6 = bitcast i8* %5 to %struct.bArmature*, !dbg !4326
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %6, i32 0, i32 4, !dbg !4327
  %7 = load %struct.ListBase*, %struct.ListBase** %edbo, align 8, !dbg !4327
  %cmp2 = icmp ne %struct.ListBase* null, %7, !dbg !4328
  %conv3 = zext i1 %cmp2 to i32, !dbg !4328
  store i32 %conv3, i32* %retval, align 4, !dbg !4329
  br label %return, !dbg !4329

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4330
  br label %return, !dbg !4330

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4331
  ret i32 %8, !dbg !4331
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_posemode_exclusive(%struct.bContext* %C) #0 !dbg !4332 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obact = alloca %struct.Object*, align 8
  %obpose = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4333, metadata !DIExpression()), !dbg !4334
  call void @llvm.dbg.declare(metadata %struct.Object** %obact, metadata !4335, metadata !DIExpression()), !dbg !4336
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4337
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !4338
  store %struct.Object* %call, %struct.Object** %obact, align 8, !dbg !4336
  %1 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !4339
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4339
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !4341

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !4342
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 27, !dbg !4343
  %3 = load i32, i32* %mode, align 8, !dbg !4343
  %and = and i32 %3, 1, !dbg !4344
  %tobool1 = icmp ne i32 %and, 0, !dbg !4344
  br i1 %tobool1, label %if.end7, label %if.then, !dbg !4345

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.Object** %obpose, metadata !4346, metadata !DIExpression()), !dbg !4348
  %4 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !4349
  %call2 = call %struct.Object* @BKE_object_pose_armature_get(%struct.Object* %4), !dbg !4351
  store %struct.Object* %call2, %struct.Object** %obpose, align 8, !dbg !4352
  %tobool3 = icmp ne %struct.Object* %call2, null, !dbg !4352
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !4353

if.then4:                                         ; preds = %if.then
  %5 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !4354
  %6 = load %struct.Object*, %struct.Object** %obpose, align 8, !dbg !4357
  %cmp = icmp eq %struct.Object* %5, %6, !dbg !4358
  br i1 %cmp, label %if.then5, label %if.end, !dbg !4359

if.then5:                                         ; preds = %if.then4
  store i32 1, i32* %retval, align 4, !dbg !4360
  br label %return, !dbg !4360

if.end:                                           ; preds = %if.then4
  br label %if.end6, !dbg !4362

if.end6:                                          ; preds = %if.end, %if.then
  br label %if.end7, !dbg !4363

if.end7:                                          ; preds = %if.end6, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4364
  br label %return, !dbg !4364

return:                                           ; preds = %if.end7, %if.then5
  %7 = load i32, i32* %retval, align 4, !dbg !4365
  ret i32 %7, !dbg !4365
}

declare dso_local %struct.Object* @BKE_object_pose_armature_get(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_posemode_context(%struct.bContext* %C) #0 !dbg !4366 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obpose = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4367, metadata !DIExpression()), !dbg !4368
  call void @llvm.dbg.declare(metadata %struct.Object** %obpose, metadata !4369, metadata !DIExpression()), !dbg !4370
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4371
  %call = call %struct.Object* @ED_pose_object_from_context(%struct.bContext* %0), !dbg !4372
  store %struct.Object* %call, %struct.Object** %obpose, align 8, !dbg !4370
  %1 = load %struct.Object*, %struct.Object** %obpose, align 8, !dbg !4373
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4373
  br i1 %tobool, label %land.lhs.true, label %if.end5, !dbg !4375

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obpose, align 8, !dbg !4376
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 27, !dbg !4377
  %3 = load i32, i32* %mode, align 8, !dbg !4377
  %and = and i32 %3, 1, !dbg !4378
  %tobool1 = icmp ne i32 %and, 0, !dbg !4378
  br i1 %tobool1, label %if.end5, label %if.then, !dbg !4379

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %obpose, align 8, !dbg !4380
  %call2 = call zeroext i8 @BKE_object_pose_context_check(%struct.Object* %4), !dbg !4383
  %tobool3 = icmp ne i8 %call2, 0, !dbg !4383
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !4384

if.then4:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !4385
  br label %return, !dbg !4385

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !4387

if.end5:                                          ; preds = %if.end, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4388
  br label %return, !dbg !4388

return:                                           ; preds = %if.end5, %if.then4
  %5 = load i32, i32* %retval, align 4, !dbg !4389
  ret i32 %5, !dbg !4389
}

declare dso_local %struct.Object* @ED_pose_object_from_context(%struct.bContext*) #2

declare dso_local zeroext i8 @BKE_object_pose_context_check(%struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_posemode(%struct.bContext* %C) #0 !dbg !4390 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obact = alloca %struct.Object*, align 8
  %obpose = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4391, metadata !DIExpression()), !dbg !4392
  call void @llvm.dbg.declare(metadata %struct.Object** %obact, metadata !4393, metadata !DIExpression()), !dbg !4394
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4395
  %call = call %struct.Object* @CTX_data_active_object(%struct.bContext* %0), !dbg !4396
  store %struct.Object* %call, %struct.Object** %obact, align 8, !dbg !4394
  %1 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !4397
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4397
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !4399

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !4400
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 27, !dbg !4401
  %3 = load i32, i32* %mode, align 8, !dbg !4401
  %and = and i32 %3, 1, !dbg !4402
  %tobool1 = icmp ne i32 %and, 0, !dbg !4402
  br i1 %tobool1, label %if.end10, label %if.then, !dbg !4403

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.Object** %obpose, metadata !4404, metadata !DIExpression()), !dbg !4406
  %4 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !4407
  %call2 = call %struct.Object* @BKE_object_pose_armature_get(%struct.Object* %4), !dbg !4409
  store %struct.Object* %call2, %struct.Object** %obpose, align 8, !dbg !4410
  %tobool3 = icmp ne %struct.Object* %call2, null, !dbg !4410
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !4411

if.then4:                                         ; preds = %if.then
  %5 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !4412
  %6 = load %struct.Object*, %struct.Object** %obpose, align 8, !dbg !4415
  %cmp = icmp eq %struct.Object* %5, %6, !dbg !4416
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !4417

lor.lhs.false:                                    ; preds = %if.then4
  %7 = load %struct.Object*, %struct.Object** %obact, align 8, !dbg !4418
  %mode5 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 27, !dbg !4419
  %8 = load i32, i32* %mode5, align 8, !dbg !4419
  %and6 = and i32 %8, 8, !dbg !4420
  %tobool7 = icmp ne i32 %and6, 0, !dbg !4420
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !4421

if.then8:                                         ; preds = %lor.lhs.false, %if.then4
  store i32 1, i32* %retval, align 4, !dbg !4422
  br label %return, !dbg !4422

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end9, !dbg !4424

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end10, !dbg !4425

if.end10:                                         ; preds = %if.end9, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4426
  br label %return, !dbg !4426

return:                                           ; preds = %if.end10, %if.then8
  %9 = load i32, i32* %retval, align 4, !dbg !4427
  ret i32 %9, !dbg !4427
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_uvedit(%struct.bContext* %C) #0 !dbg !4428 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4429, metadata !DIExpression()), !dbg !4430
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !4431, metadata !DIExpression()), !dbg !4511
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4512
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !4513
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !4511
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4514, metadata !DIExpression()), !dbg !4515
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4516
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !4517
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !4515
  %2 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !4518
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4519
  %call2 = call zeroext i8 @ED_space_image_show_uvedit(%struct.SpaceImage* %2, %struct.Object* %3), !dbg !4520
  %conv = zext i8 %call2 to i32, !dbg !4520
  ret i32 %conv, !dbg !4521
}

declare dso_local %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext*) #2

declare dso_local zeroext i8 @ED_space_image_show_uvedit(%struct.SpaceImage*, %struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_uvedit_space_image(%struct.bContext* %C) #0 !dbg !4522 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4523, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !4525, metadata !DIExpression()), !dbg !4526
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4527
  %call = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %0), !dbg !4528
  store %struct.SpaceImage* %call, %struct.SpaceImage** %sima, align 8, !dbg !4526
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4529, metadata !DIExpression()), !dbg !4530
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4531
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !4532
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !4530
  %2 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !4533
  %tobool = icmp ne %struct.SpaceImage* %2, null, !dbg !4533
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4534

land.rhs:                                         ; preds = %entry
  %3 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !4535
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4536
  %call2 = call zeroext i8 @ED_space_image_show_uvedit(%struct.SpaceImage* %3, %struct.Object* %4), !dbg !4537
  %conv = zext i8 %call2 to i32, !dbg !4537
  %tobool3 = icmp ne i32 %conv, 0, !dbg !4534
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool3, %land.rhs ], !dbg !4538
  %land.ext = zext i1 %5 to i32, !dbg !4534
  ret i32 %land.ext, !dbg !4539
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_uvmap(%struct.bContext* %C) #0 !dbg !4540 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4541, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4543, metadata !DIExpression()), !dbg !4544
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4545
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4546
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4544
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4547, metadata !DIExpression()), !dbg !4766
  store %struct.BMEditMesh* null, %struct.BMEditMesh** %em, align 8, !dbg !4766
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4767
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4767
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4769

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4770
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !4771
  %3 = load i16, i16* %type, align 8, !dbg !4771
  %conv = sext i16 %3 to i32, !dbg !4770
  %cmp = icmp eq i32 %conv, 1, !dbg !4772
  br i1 %cmp, label %if.then, label %if.end, !dbg !4773

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4774
  %call2 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %4), !dbg !4776
  store %struct.BMEditMesh* %call2, %struct.BMEditMesh** %em, align 8, !dbg !4777
  br label %if.end, !dbg !4778

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4779
  %tobool3 = icmp ne %struct.BMEditMesh* %5, null, !dbg !4779
  br i1 %tobool3, label %land.lhs.true4, label %if.end7, !dbg !4781

land.lhs.true4:                                   ; preds = %if.end
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4782
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !4783
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4783
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 3, !dbg !4784
  %8 = load i32, i32* %totface, align 4, !dbg !4784
  %tobool5 = icmp ne i32 %8, 0, !dbg !4785
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !4786

if.then6:                                         ; preds = %land.lhs.true4
  store i32 1, i32* %retval, align 4, !dbg !4787
  br label %return, !dbg !4787

if.end7:                                          ; preds = %land.lhs.true4, %if.end
  store i32 0, i32* %retval, align 4, !dbg !4789
  br label %return, !dbg !4789

return:                                           ; preds = %if.end7, %if.then6
  %9 = load i32, i32* %retval, align 4, !dbg !4790
  ret i32 %9, !dbg !4790
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_editsurfcurve(%struct.bContext* %C) #0 !dbg !4791 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4792, metadata !DIExpression()), !dbg !4793
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4794, metadata !DIExpression()), !dbg !4795
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4796
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4797
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4795
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4798
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4798
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4800

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4801
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !4801
  %3 = load i16, i16* %type, align 8, !dbg !4801
  %conv = sext i16 %3 to i32, !dbg !4801
  %cmp = icmp eq i32 %conv, 2, !dbg !4801
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4801

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4801
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !4801
  %5 = load i16, i16* %type2, align 8, !dbg !4801
  %conv3 = sext i16 %5 to i32, !dbg !4801
  %cmp4 = icmp eq i32 %conv3, 3, !dbg !4801
  br i1 %cmp4, label %if.then, label %if.end, !dbg !4802

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4803
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !4804
  %7 = load i8*, i8** %data, align 8, !dbg !4804
  %8 = bitcast i8* %7 to %struct.Curve*, !dbg !4805
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %8, i32 0, i32 4, !dbg !4806
  %9 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4806
  %cmp6 = icmp ne %struct.EditNurb* null, %9, !dbg !4807
  %conv7 = zext i1 %cmp6 to i32, !dbg !4807
  store i32 %conv7, i32* %retval, align 4, !dbg !4808
  br label %return, !dbg !4808

if.end:                                           ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4809
  br label %return, !dbg !4809

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4810
  ret i32 %10, !dbg !4810
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_editsurfcurve_region_view3d(%struct.bContext* %C) #0 !dbg !4811 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4812, metadata !DIExpression()), !dbg !4813
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4814
  %call = call i32 @ED_operator_editsurfcurve(%struct.bContext* %0), !dbg !4816
  %tobool = icmp ne i32 %call, 0, !dbg !4816
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4817

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4818
  %call1 = call %struct.RegionView3D* @CTX_wm_region_view3d(%struct.bContext* %1), !dbg !4819
  %tobool2 = icmp ne %struct.RegionView3D* %call1, null, !dbg !4819
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4820

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !4821
  br label %return, !dbg !4821

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4822
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0)), !dbg !4823
  store i32 0, i32* %retval, align 4, !dbg !4824
  br label %return, !dbg !4824

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !4825
  ret i32 %3, !dbg !4825
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_editcurve(%struct.bContext* %C) #0 !dbg !4826 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4827, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4829, metadata !DIExpression()), !dbg !4830
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4831
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4832
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4830
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4833
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4833
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4835

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4836
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !4837
  %3 = load i16, i16* %type, align 8, !dbg !4837
  %conv = sext i16 %3 to i32, !dbg !4836
  %cmp = icmp eq i32 %conv, 2, !dbg !4838
  br i1 %cmp, label %if.then, label %if.end, !dbg !4839

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4840
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !4841
  %5 = load i8*, i8** %data, align 8, !dbg !4841
  %6 = bitcast i8* %5 to %struct.Curve*, !dbg !4842
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 4, !dbg !4843
  %7 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4843
  %cmp2 = icmp ne %struct.EditNurb* null, %7, !dbg !4844
  %conv3 = zext i1 %cmp2 to i32, !dbg !4844
  store i32 %conv3, i32* %retval, align 4, !dbg !4845
  br label %return, !dbg !4845

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4846
  br label %return, !dbg !4846

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4847
  ret i32 %8, !dbg !4847
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_editcurve_3d(%struct.bContext* %C) #0 !dbg !4848 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4849, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4851, metadata !DIExpression()), !dbg !4852
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4853
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4854
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4852
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4855
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4855
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4857

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4858
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !4859
  %3 = load i16, i16* %type, align 8, !dbg !4859
  %conv = sext i16 %3 to i32, !dbg !4858
  %cmp = icmp eq i32 %conv, 2, !dbg !4860
  br i1 %cmp, label %if.then, label %if.end, !dbg !4861

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !4862, metadata !DIExpression()), !dbg !4864
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4865
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !4866
  %5 = load i8*, i8** %data, align 8, !dbg !4866
  %6 = bitcast i8* %5 to %struct.Curve*, !dbg !4867
  store %struct.Curve* %6, %struct.Curve** %cu, align 8, !dbg !4864
  %7 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4868
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 23, !dbg !4869
  %8 = load i32, i32* %flag, align 4, !dbg !4869
  %and = and i32 %8, 1, !dbg !4870
  %tobool2 = icmp ne i32 %and, 0, !dbg !4870
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !4871

land.rhs:                                         ; preds = %if.then
  %9 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !4872
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 4, !dbg !4873
  %10 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4873
  %cmp3 = icmp ne %struct.EditNurb* null, %10, !dbg !4874
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %11 = phi i1 [ false, %if.then ], [ %cmp3, %land.rhs ], !dbg !4875
  %land.ext = zext i1 %11 to i32, !dbg !4871
  store i32 %land.ext, i32* %retval, align 4, !dbg !4876
  br label %return, !dbg !4876

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4877
  br label %return, !dbg !4877

return:                                           ; preds = %if.end, %land.end
  %12 = load i32, i32* %retval, align 4, !dbg !4878
  ret i32 %12, !dbg !4878
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_editsurf(%struct.bContext* %C) #0 !dbg !4879 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4880, metadata !DIExpression()), !dbg !4881
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4882, metadata !DIExpression()), !dbg !4883
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4884
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4885
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4883
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4886
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4886
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4888

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4889
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !4890
  %3 = load i16, i16* %type, align 8, !dbg !4890
  %conv = sext i16 %3 to i32, !dbg !4889
  %cmp = icmp eq i32 %conv, 3, !dbg !4891
  br i1 %cmp, label %if.then, label %if.end, !dbg !4892

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4893
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !4894
  %5 = load i8*, i8** %data, align 8, !dbg !4894
  %6 = bitcast i8* %5 to %struct.Curve*, !dbg !4895
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 4, !dbg !4896
  %7 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !4896
  %cmp2 = icmp ne %struct.EditNurb* null, %7, !dbg !4897
  %conv3 = zext i1 %cmp2 to i32, !dbg !4897
  store i32 %conv3, i32* %retval, align 4, !dbg !4898
  br label %return, !dbg !4898

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4899
  br label %return, !dbg !4899

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4900
  ret i32 %8, !dbg !4900
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_editfont(%struct.bContext* %C) #0 !dbg !4901 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4902, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4904, metadata !DIExpression()), !dbg !4905
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4906
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4907
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4905
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4908
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4908
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4910

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4911
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !4912
  %3 = load i16, i16* %type, align 8, !dbg !4912
  %conv = sext i16 %3 to i32, !dbg !4911
  %cmp = icmp eq i32 %conv, 4, !dbg !4913
  br i1 %cmp, label %if.then, label %if.end, !dbg !4914

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4915
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !4916
  %5 = load i8*, i8** %data, align 8, !dbg !4916
  %6 = bitcast i8* %5 to %struct.Curve*, !dbg !4917
  %editfont = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 53, !dbg !4918
  %7 = load %struct.EditFont*, %struct.EditFont** %editfont, align 8, !dbg !4918
  %cmp2 = icmp ne %struct.EditFont* null, %7, !dbg !4919
  %conv3 = zext i1 %cmp2 to i32, !dbg !4919
  store i32 %conv3, i32* %retval, align 4, !dbg !4920
  br label %return, !dbg !4920

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4921
  br label %return, !dbg !4921

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4922
  ret i32 %8, !dbg !4922
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_editlattice(%struct.bContext* %C) #0 !dbg !4923 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4924, metadata !DIExpression()), !dbg !4925
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4926, metadata !DIExpression()), !dbg !4927
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4928
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4929
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4927
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4930
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4930
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4932

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4933
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !4934
  %3 = load i16, i16* %type, align 8, !dbg !4934
  %conv = sext i16 %3 to i32, !dbg !4933
  %cmp = icmp eq i32 %conv, 22, !dbg !4935
  br i1 %cmp, label %if.then, label %if.end, !dbg !4936

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4937
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !4938
  %5 = load i8*, i8** %data, align 8, !dbg !4938
  %6 = bitcast i8* %5 to %struct.Lattice*, !dbg !4939
  %editlatt = getelementptr inbounds %struct.Lattice, %struct.Lattice* %6, i32 0, i32 26, !dbg !4940
  %7 = load %struct.EditLatt*, %struct.EditLatt** %editlatt, align 8, !dbg !4940
  %cmp2 = icmp ne %struct.EditLatt* null, %7, !dbg !4941
  %conv3 = zext i1 %cmp2 to i32, !dbg !4941
  store i32 %conv3, i32* %retval, align 4, !dbg !4942
  br label %return, !dbg !4942

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4943
  br label %return, !dbg !4943

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4944
  ret i32 %8, !dbg !4944
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_editmball(%struct.bContext* %C) #0 !dbg !4945 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4946, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4948, metadata !DIExpression()), !dbg !4949
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4950
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4951
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4949
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4952
  %tobool = icmp ne %struct.Object* %1, null, !dbg !4952
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4954

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4955
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !4956
  %3 = load i16, i16* %type, align 8, !dbg !4956
  %conv = sext i16 %3 to i32, !dbg !4955
  %cmp = icmp eq i32 %conv, 5, !dbg !4957
  br i1 %cmp, label %if.then, label %if.end, !dbg !4958

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4959
  %data = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !4960
  %5 = load i8*, i8** %data, align 8, !dbg !4960
  %6 = bitcast i8* %5 to %struct.MetaBall*, !dbg !4961
  %editelems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %6, i32 0, i32 4, !dbg !4962
  %7 = load %struct.ListBase*, %struct.ListBase** %editelems, align 8, !dbg !4962
  %cmp2 = icmp ne %struct.ListBase* null, %7, !dbg !4963
  %conv3 = zext i1 %cmp2 to i32, !dbg !4963
  store i32 %conv3, i32* %retval, align 4, !dbg !4964
  br label %return, !dbg !4964

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !4965
  br label %return, !dbg !4965

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4966
  ret i32 %8, !dbg !4966
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_operator_mask(%struct.bContext* %C) #0 !dbg !4967 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %sc = alloca %struct.SpaceClip*, align 8
  %sseq = alloca %struct.SpaceSeq*, align 8
  %scene = alloca %struct.Scene*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %scene15 = alloca %struct.Scene*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4968, metadata !DIExpression()), !dbg !4969
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !4970, metadata !DIExpression()), !dbg !4971
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4972
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !4973
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !4971
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4974
  %tobool = icmp ne %struct.ScrArea* %1, null, !dbg !4974
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4976

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4977
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %2, i32 0, i32 19, !dbg !4978
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !4979
  %3 = load i8*, i8** %first, align 8, !dbg !4979
  %tobool1 = icmp ne i8* %3, null, !dbg !4977
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4980

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4981
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 8, !dbg !4983
  %5 = load i8, i8* %spacetype, align 8, !dbg !4983
  %conv = zext i8 %5 to i32, !dbg !4981
  switch i32 %conv, label %sw.epilog [
    i32 20, label %sw.bb
    i32 8, label %sw.bb6
    i32 6, label %sw.bb12
  ], !dbg !4984

sw.bb:                                            ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.SpaceClip** %sc, metadata !4985, metadata !DIExpression()), !dbg !5046
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5047
  %spacedata2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 19, !dbg !5048
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata2, i32 0, i32 0, !dbg !5049
  %7 = load i8*, i8** %first3, align 8, !dbg !5049
  %8 = bitcast i8* %7 to %struct.SpaceClip*, !dbg !5047
  store %struct.SpaceClip* %8, %struct.SpaceClip** %sc, align 8, !dbg !5046
  %9 = load %struct.SpaceClip*, %struct.SpaceClip** %sc, align 8, !dbg !5050
  %call4 = call zeroext i8 @ED_space_clip_check_show_maskedit(%struct.SpaceClip* %9), !dbg !5051
  %conv5 = zext i8 %call4 to i32, !dbg !5051
  store i32 %conv5, i32* %retval, align 4, !dbg !5052
  br label %return, !dbg !5052

sw.bb6:                                           ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.SpaceSeq** %sseq, metadata !5053, metadata !DIExpression()), !dbg !5086
  %10 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5087
  %spacedata7 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %10, i32 0, i32 19, !dbg !5088
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata7, i32 0, i32 0, !dbg !5089
  %11 = load i8*, i8** %first8, align 8, !dbg !5089
  %12 = bitcast i8* %11 to %struct.SpaceSeq*, !dbg !5087
  store %struct.SpaceSeq* %12, %struct.SpaceSeq** %sseq, align 8, !dbg !5086
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5090, metadata !DIExpression()), !dbg !5091
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5092
  %call9 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %13), !dbg !5093
  store %struct.Scene* %call9, %struct.Scene** %scene, align 8, !dbg !5091
  %14 = load %struct.SpaceSeq*, %struct.SpaceSeq** %sseq, align 8, !dbg !5094
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5095
  %call10 = call zeroext i8 @ED_space_sequencer_check_show_maskedit(%struct.SpaceSeq* %14, %struct.Scene* %15), !dbg !5096
  %conv11 = zext i8 %call10 to i32, !dbg !5096
  store i32 %conv11, i32* %retval, align 4, !dbg !5097
  br label %return, !dbg !5097

sw.bb12:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !5098, metadata !DIExpression()), !dbg !5100
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5101
  %spacedata13 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %16, i32 0, i32 19, !dbg !5102
  %first14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata13, i32 0, i32 0, !dbg !5103
  %17 = load i8*, i8** %first14, align 8, !dbg !5103
  %18 = bitcast i8* %17 to %struct.SpaceImage*, !dbg !5101
  store %struct.SpaceImage* %18, %struct.SpaceImage** %sima, align 8, !dbg !5100
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene15, metadata !5104, metadata !DIExpression()), !dbg !5105
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5106
  %call16 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %19), !dbg !5107
  store %struct.Scene* %call16, %struct.Scene** %scene15, align 8, !dbg !5105
  %20 = load %struct.Scene*, %struct.Scene** %scene15, align 8, !dbg !5108
  %21 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !5109
  %call17 = call zeroext i8 @ED_space_image_check_show_maskedit(%struct.Scene* %20, %struct.SpaceImage* %21), !dbg !5110
  %conv18 = zext i8 %call17 to i32, !dbg !5110
  store i32 %conv18, i32* %retval, align 4, !dbg !5111
  br label %return, !dbg !5111

sw.epilog:                                        ; preds = %if.then
  br label %if.end, !dbg !5112

if.end:                                           ; preds = %sw.epilog, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !5113
  br label %return, !dbg !5113

return:                                           ; preds = %if.end, %sw.bb12, %sw.bb6, %sw.bb
  %22 = load i32, i32* %retval, align 4, !dbg !5114
  ret i32 %22, !dbg !5114
}

declare dso_local zeroext i8 @ED_space_clip_check_show_maskedit(%struct.SpaceClip*) #2

declare dso_local zeroext i8 @ED_space_sequencer_check_show_maskedit(%struct.SpaceSeq*, %struct.Scene*) #2

declare dso_local zeroext i8 @ED_space_image_check_show_maskedit(%struct.Scene*, %struct.SpaceImage*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.AZone* @is_in_area_actionzone(%struct.ScrArea* %sa, i32* %xy) #0 !dbg !5115 {
entry:
  %sa.addr = alloca %struct.ScrArea*, align 8
  %xy.addr = alloca i32*, align 8
  %az = alloca %struct.AZone*, align 8
  %radius = alloca i32, align 4
  %mouse_radius = alloca i32, align 4
  %spot_radius = alloca i32, align 4
  %fadein_radius = alloca i32, align 4
  %fadeout_radius = alloca i32, align 4
  %click_rect = alloca %struct.rcti, align 4
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !5216, metadata !DIExpression()), !dbg !5217
  store i32* %xy, i32** %xy.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %xy.addr, metadata !5218, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.declare(metadata %struct.AZone** %az, metadata !5220, metadata !DIExpression()), !dbg !5223
  store %struct.AZone* null, %struct.AZone** %az, align 8, !dbg !5223
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5224
  %actionzones = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %0, i32 0, i32 22, !dbg !5226
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %actionzones, i32 0, i32 0, !dbg !5227
  %1 = load i8*, i8** %first, align 8, !dbg !5227
  %2 = bitcast i8* %1 to %struct.AZone*, !dbg !5224
  store %struct.AZone* %2, %struct.AZone** %az, align 8, !dbg !5228
  br label %for.cond, !dbg !5229

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5230
  %tobool = icmp ne %struct.AZone* %3, null, !dbg !5232
  br i1 %tobool, label %for.body, label %for.end, !dbg !5232

for.body:                                         ; preds = %for.cond
  %4 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5233
  %rect = getelementptr inbounds %struct.AZone, %struct.AZone* %4, i32 0, i32 9, !dbg !5236
  %5 = load i32*, i32** %xy.addr, align 8, !dbg !5237
  %call = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %rect, i32* %5), !dbg !5238
  %tobool1 = icmp ne i8 %call, 0, !dbg !5238
  br i1 %tobool1, label %if.then, label %if.end112, !dbg !5239

if.then:                                          ; preds = %for.body
  %6 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5240
  %type = getelementptr inbounds %struct.AZone, %struct.AZone* %6, i32 0, i32 3, !dbg !5243
  %7 = load i32, i32* %type, align 8, !dbg !5243
  %cmp = icmp eq i32 %7, 1, !dbg !5244
  br i1 %cmp, label %if.then2, label %if.else, !dbg !5245

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %radius, metadata !5246, metadata !DIExpression()), !dbg !5248
  %8 = load i32*, i32** %xy.addr, align 8, !dbg !5249
  %arrayidx = getelementptr inbounds i32, i32* %8, i64 0, !dbg !5249
  %9 = load i32, i32* %arrayidx, align 4, !dbg !5249
  %10 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5250
  %x1 = getelementptr inbounds %struct.AZone, %struct.AZone* %10, i32 0, i32 5, !dbg !5251
  %11 = load i16, i16* %x1, align 8, !dbg !5251
  %conv = sext i16 %11 to i32, !dbg !5250
  %sub = sub nsw i32 %9, %conv, !dbg !5252
  %12 = load i32*, i32** %xy.addr, align 8, !dbg !5253
  %arrayidx3 = getelementptr inbounds i32, i32* %12, i64 0, !dbg !5253
  %13 = load i32, i32* %arrayidx3, align 4, !dbg !5253
  %14 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5254
  %x14 = getelementptr inbounds %struct.AZone, %struct.AZone* %14, i32 0, i32 5, !dbg !5255
  %15 = load i16, i16* %x14, align 8, !dbg !5255
  %conv5 = sext i16 %15 to i32, !dbg !5254
  %sub6 = sub nsw i32 %13, %conv5, !dbg !5256
  %mul = mul nsw i32 %sub, %sub6, !dbg !5257
  %16 = load i32*, i32** %xy.addr, align 8, !dbg !5258
  %arrayidx7 = getelementptr inbounds i32, i32* %16, i64 1, !dbg !5258
  %17 = load i32, i32* %arrayidx7, align 4, !dbg !5258
  %18 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5259
  %y1 = getelementptr inbounds %struct.AZone, %struct.AZone* %18, i32 0, i32 6, !dbg !5260
  %19 = load i16, i16* %y1, align 2, !dbg !5260
  %conv8 = sext i16 %19 to i32, !dbg !5259
  %sub9 = sub nsw i32 %17, %conv8, !dbg !5261
  %20 = load i32*, i32** %xy.addr, align 8, !dbg !5262
  %arrayidx10 = getelementptr inbounds i32, i32* %20, i64 1, !dbg !5262
  %21 = load i32, i32* %arrayidx10, align 4, !dbg !5262
  %22 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5263
  %y111 = getelementptr inbounds %struct.AZone, %struct.AZone* %22, i32 0, i32 6, !dbg !5264
  %23 = load i16, i16* %y111, align 2, !dbg !5264
  %conv12 = sext i16 %23 to i32, !dbg !5263
  %sub13 = sub nsw i32 %21, %conv12, !dbg !5265
  %mul14 = mul nsw i32 %sub9, %sub13, !dbg !5266
  %add = add nsw i32 %mul, %mul14, !dbg !5267
  store i32 %add, i32* %radius, align 4, !dbg !5248
  %24 = load i32, i32* %radius, align 4, !dbg !5268
  %conv15 = sitofp i32 %24 to float, !dbg !5268
  %25 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5270
  %conv16 = sext i16 %25 to i32, !dbg !5270
  %conv17 = sitofp i32 %conv16 to float, !dbg !5270
  %mul18 = fmul float 0x3FE3333340000000, %conv17, !dbg !5270
  %26 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5271
  %conv19 = sext i16 %26 to i32, !dbg !5271
  %conv20 = sitofp i32 %conv19 to float, !dbg !5271
  %mul21 = fmul float 0x3FE3333340000000, %conv20, !dbg !5271
  %mul22 = fmul float %mul18, %mul21, !dbg !5272
  %cmp23 = fcmp ole float %conv15, %mul22, !dbg !5273
  br i1 %cmp23, label %if.then25, label %if.end, !dbg !5274

if.then25:                                        ; preds = %if.then2
  br label %for.end, !dbg !5275

if.end:                                           ; preds = %if.then2
  br label %if.end111, !dbg !5276

if.else:                                          ; preds = %if.then
  %27 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5277
  %type26 = getelementptr inbounds %struct.AZone, %struct.AZone* %27, i32 0, i32 3, !dbg !5279
  %28 = load i32, i32* %type26, align 8, !dbg !5279
  %cmp27 = icmp eq i32 %28, 2, !dbg !5280
  br i1 %cmp27, label %if.then29, label %if.else30, !dbg !5281

if.then29:                                        ; preds = %if.else
  br label %for.end, !dbg !5282

if.else30:                                        ; preds = %if.else
  %29 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5284
  %type31 = getelementptr inbounds %struct.AZone, %struct.AZone* %29, i32 0, i32 3, !dbg !5286
  %30 = load i32, i32* %type31, align 8, !dbg !5286
  %cmp32 = icmp eq i32 %30, 3, !dbg !5287
  br i1 %cmp32, label %if.then34, label %if.end109, !dbg !5288

if.then34:                                        ; preds = %if.else30
  call void @llvm.dbg.declare(metadata i32* %mouse_radius, metadata !5289, metadata !DIExpression()), !dbg !5291
  call void @llvm.dbg.declare(metadata i32* %spot_radius, metadata !5292, metadata !DIExpression()), !dbg !5293
  call void @llvm.dbg.declare(metadata i32* %fadein_radius, metadata !5294, metadata !DIExpression()), !dbg !5295
  call void @llvm.dbg.declare(metadata i32* %fadeout_radius, metadata !5296, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.declare(metadata %struct.rcti* %click_rect, metadata !5298, metadata !DIExpression()), !dbg !5299
  %31 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5300
  %x135 = getelementptr inbounds %struct.AZone, %struct.AZone* %31, i32 0, i32 5, !dbg !5301
  %32 = load i16, i16* %x135, align 8, !dbg !5301
  %33 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5302
  %y136 = getelementptr inbounds %struct.AZone, %struct.AZone* %33, i32 0, i32 6, !dbg !5303
  %34 = load i16, i16* %y136, align 2, !dbg !5303
  %35 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5304
  %x2 = getelementptr inbounds %struct.AZone, %struct.AZone* %35, i32 0, i32 7, !dbg !5305
  %36 = load i16, i16* %x2, align 4, !dbg !5305
  %37 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5306
  %y2 = getelementptr inbounds %struct.AZone, %struct.AZone* %37, i32 0, i32 8, !dbg !5307
  %38 = load i16, i16* %y2, align 2, !dbg !5307
  call void @fullscreen_click_rcti_init(%struct.rcti* %click_rect, i16 signext %32, i16 signext %34, i16 signext %36, i16 signext %38), !dbg !5308
  %39 = load i32*, i32** %xy.addr, align 8, !dbg !5309
  %call37 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %click_rect, i32* %39), !dbg !5311
  %tobool38 = icmp ne i8 %call37, 0, !dbg !5311
  br i1 %tobool38, label %if.then39, label %if.else40, !dbg !5312

if.then39:                                        ; preds = %if.then34
  %40 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5313
  %alpha = getelementptr inbounds %struct.AZone, %struct.AZone* %40, i32 0, i32 10, !dbg !5315
  store float 1.000000e+00, float* %alpha, align 8, !dbg !5316
  br label %if.end108, !dbg !5317

if.else40:                                        ; preds = %if.then34
  %41 = load i32*, i32** %xy.addr, align 8, !dbg !5318
  %arrayidx41 = getelementptr inbounds i32, i32* %41, i64 0, !dbg !5318
  %42 = load i32, i32* %arrayidx41, align 4, !dbg !5318
  %43 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5320
  %x242 = getelementptr inbounds %struct.AZone, %struct.AZone* %43, i32 0, i32 7, !dbg !5321
  %44 = load i16, i16* %x242, align 4, !dbg !5321
  %conv43 = sext i16 %44 to i32, !dbg !5320
  %sub44 = sub nsw i32 %42, %conv43, !dbg !5322
  %45 = load i32*, i32** %xy.addr, align 8, !dbg !5323
  %arrayidx45 = getelementptr inbounds i32, i32* %45, i64 0, !dbg !5323
  %46 = load i32, i32* %arrayidx45, align 4, !dbg !5323
  %47 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5324
  %x246 = getelementptr inbounds %struct.AZone, %struct.AZone* %47, i32 0, i32 7, !dbg !5325
  %48 = load i16, i16* %x246, align 4, !dbg !5325
  %conv47 = sext i16 %48 to i32, !dbg !5324
  %sub48 = sub nsw i32 %46, %conv47, !dbg !5326
  %mul49 = mul nsw i32 %sub44, %sub48, !dbg !5327
  %49 = load i32*, i32** %xy.addr, align 8, !dbg !5328
  %arrayidx50 = getelementptr inbounds i32, i32* %49, i64 1, !dbg !5328
  %50 = load i32, i32* %arrayidx50, align 4, !dbg !5328
  %51 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5329
  %y251 = getelementptr inbounds %struct.AZone, %struct.AZone* %51, i32 0, i32 8, !dbg !5330
  %52 = load i16, i16* %y251, align 2, !dbg !5330
  %conv52 = sext i16 %52 to i32, !dbg !5329
  %sub53 = sub nsw i32 %50, %conv52, !dbg !5331
  %53 = load i32*, i32** %xy.addr, align 8, !dbg !5332
  %arrayidx54 = getelementptr inbounds i32, i32* %53, i64 1, !dbg !5332
  %54 = load i32, i32* %arrayidx54, align 4, !dbg !5332
  %55 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5333
  %y255 = getelementptr inbounds %struct.AZone, %struct.AZone* %55, i32 0, i32 8, !dbg !5334
  %56 = load i16, i16* %y255, align 2, !dbg !5334
  %conv56 = sext i16 %56 to i32, !dbg !5333
  %sub57 = sub nsw i32 %54, %conv56, !dbg !5335
  %mul58 = mul nsw i32 %sub53, %sub57, !dbg !5336
  %add59 = add nsw i32 %mul49, %mul58, !dbg !5337
  store i32 %add59, i32* %mouse_radius, align 4, !dbg !5338
  %57 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5339
  %conv60 = sext i16 %57 to i32, !dbg !5339
  %conv61 = sitofp i32 %conv60 to float, !dbg !5339
  %mul62 = fmul float 0x3FE3333340000000, %conv61, !dbg !5339
  %58 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5340
  %conv63 = sext i16 %58 to i32, !dbg !5340
  %conv64 = sitofp i32 %conv63 to float, !dbg !5340
  %mul65 = fmul float 0x3FE3333340000000, %conv64, !dbg !5340
  %mul66 = fmul float %mul62, %mul65, !dbg !5341
  %conv67 = fptosi float %mul66 to i32, !dbg !5339
  store i32 %conv67, i32* %spot_radius, align 4, !dbg !5342
  %59 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5343
  %conv68 = sext i16 %59 to i32, !dbg !5343
  %conv69 = sitofp i32 %conv68 to float, !dbg !5343
  %mul70 = fmul float 5.000000e+00, %conv69, !dbg !5343
  %60 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5344
  %conv71 = sext i16 %60 to i32, !dbg !5344
  %conv72 = sitofp i32 %conv71 to float, !dbg !5344
  %mul73 = fmul float 5.000000e+00, %conv72, !dbg !5344
  %mul74 = fmul float %mul70, %mul73, !dbg !5345
  %conv75 = fptosi float %mul74 to i32, !dbg !5343
  store i32 %conv75, i32* %fadein_radius, align 4, !dbg !5346
  %61 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5347
  %conv76 = sext i16 %61 to i32, !dbg !5347
  %conv77 = sitofp i32 %conv76 to float, !dbg !5347
  %mul78 = fmul float 6.500000e+00, %conv77, !dbg !5347
  %62 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5348
  %conv79 = sext i16 %62 to i32, !dbg !5348
  %conv80 = sitofp i32 %conv79 to float, !dbg !5348
  %mul81 = fmul float 6.500000e+00, %conv80, !dbg !5348
  %mul82 = fmul float %mul78, %mul81, !dbg !5349
  %conv83 = fptosi float %mul82 to i32, !dbg !5347
  store i32 %conv83, i32* %fadeout_radius, align 4, !dbg !5350
  %63 = load i32, i32* %mouse_radius, align 4, !dbg !5351
  %64 = load i32, i32* %spot_radius, align 4, !dbg !5353
  %cmp84 = icmp slt i32 %63, %64, !dbg !5354
  br i1 %cmp84, label %if.then86, label %if.else88, !dbg !5355

if.then86:                                        ; preds = %if.else40
  %65 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5356
  %alpha87 = getelementptr inbounds %struct.AZone, %struct.AZone* %65, i32 0, i32 10, !dbg !5358
  store float 1.000000e+00, float* %alpha87, align 8, !dbg !5359
  br label %if.end107, !dbg !5360

if.else88:                                        ; preds = %if.else40
  %66 = load i32, i32* %mouse_radius, align 4, !dbg !5361
  %67 = load i32, i32* %fadein_radius, align 4, !dbg !5363
  %cmp89 = icmp slt i32 %66, %67, !dbg !5364
  br i1 %cmp89, label %if.then91, label %if.else93, !dbg !5365

if.then91:                                        ; preds = %if.else88
  %68 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5366
  %alpha92 = getelementptr inbounds %struct.AZone, %struct.AZone* %68, i32 0, i32 10, !dbg !5368
  store float 1.000000e+00, float* %alpha92, align 8, !dbg !5369
  br label %if.end106, !dbg !5370

if.else93:                                        ; preds = %if.else88
  %69 = load i32, i32* %mouse_radius, align 4, !dbg !5371
  %70 = load i32, i32* %fadeout_radius, align 4, !dbg !5373
  %cmp94 = icmp slt i32 %69, %70, !dbg !5374
  br i1 %cmp94, label %if.then96, label %if.else103, !dbg !5375

if.then96:                                        ; preds = %if.else93
  %71 = load i32, i32* %mouse_radius, align 4, !dbg !5376
  %72 = load i32, i32* %fadein_radius, align 4, !dbg !5378
  %sub97 = sub nsw i32 %71, %72, !dbg !5379
  %conv98 = sitofp i32 %sub97 to float, !dbg !5380
  %73 = load i32, i32* %fadeout_radius, align 4, !dbg !5381
  %74 = load i32, i32* %fadein_radius, align 4, !dbg !5382
  %sub99 = sub nsw i32 %73, %74, !dbg !5383
  %conv100 = sitofp i32 %sub99 to float, !dbg !5384
  %div = fdiv float %conv98, %conv100, !dbg !5385
  %sub101 = fsub float 1.000000e+00, %div, !dbg !5386
  %75 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5387
  %alpha102 = getelementptr inbounds %struct.AZone, %struct.AZone* %75, i32 0, i32 10, !dbg !5388
  store float %sub101, float* %alpha102, align 8, !dbg !5389
  br label %if.end105, !dbg !5390

if.else103:                                       ; preds = %if.else93
  %76 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5391
  %alpha104 = getelementptr inbounds %struct.AZone, %struct.AZone* %76, i32 0, i32 10, !dbg !5393
  store float 0.000000e+00, float* %alpha104, align 8, !dbg !5394
  br label %if.end105

if.end105:                                        ; preds = %if.else103, %if.then96
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then91
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then86
  store %struct.AZone* null, %struct.AZone** %az, align 8, !dbg !5395
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then39
  %77 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5396
  call void @ED_area_tag_redraw(%struct.ScrArea* %77), !dbg !5397
  br label %for.end, !dbg !5398

if.end109:                                        ; preds = %if.else30
  br label %if.end110

if.end110:                                        ; preds = %if.end109
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.end
  br label %if.end112, !dbg !5399

if.end112:                                        ; preds = %if.end111, %for.body
  br label %for.inc, !dbg !5400

for.inc:                                          ; preds = %if.end112
  %78 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5401
  %next = getelementptr inbounds %struct.AZone, %struct.AZone* %78, i32 0, i32 0, !dbg !5402
  %79 = load %struct.AZone*, %struct.AZone** %next, align 8, !dbg !5402
  store %struct.AZone* %79, %struct.AZone** %az, align 8, !dbg !5403
  br label %for.cond, !dbg !5404, !llvm.loop !5405

for.end:                                          ; preds = %if.end108, %if.then29, %if.then25, %for.cond
  %80 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !5407
  ret %struct.AZone* %80, !dbg !5408
}

declare dso_local zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @fullscreen_click_rcti_init(%struct.rcti* %rect, i16 signext %x1, i16 signext %y1, i16 signext %x2, i16 signext %y2) #0 !dbg !5409 {
entry:
  %rect.addr = alloca %struct.rcti*, align 8
  %x1.addr = alloca i16, align 2
  %y1.addr = alloca i16, align 2
  %x2.addr = alloca i16, align 2
  %y2.addr = alloca i16, align 2
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %icon_size = alloca float, align 4
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !5414, metadata !DIExpression()), !dbg !5415
  store i16 %x1, i16* %x1.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x1.addr, metadata !5416, metadata !DIExpression()), !dbg !5417
  store i16 %y1, i16* %y1.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %y1.addr, metadata !5418, metadata !DIExpression()), !dbg !5419
  store i16 %x2, i16* %x2.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x2.addr, metadata !5420, metadata !DIExpression()), !dbg !5421
  store i16 %y2, i16* %y2.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %y2.addr, metadata !5422, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5424, metadata !DIExpression()), !dbg !5425
  %0 = load i16, i16* %x2.addr, align 2, !dbg !5426
  %conv = sext i16 %0 to i32, !dbg !5426
  %conv1 = sitofp i32 %conv to float, !dbg !5426
  %1 = load i16, i16* %x2.addr, align 2, !dbg !5427
  %conv2 = sitofp i16 %1 to float, !dbg !5428
  %2 = load i16, i16* %x1.addr, align 2, !dbg !5429
  %conv3 = sext i16 %2 to i32, !dbg !5429
  %conv4 = sitofp i32 %conv3 to float, !dbg !5429
  %sub = fsub float %conv2, %conv4, !dbg !5430
  %mul = fmul float %sub, 5.000000e-01, !dbg !5431
  %3 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5432
  %4 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !5432
  %conv5 = sitofp i32 %4 to float, !dbg !5432
  %mul6 = fmul float %3, %conv5, !dbg !5432
  %div = fdiv float %mul6, 7.200000e+01, !dbg !5432
  %div7 = fdiv float %mul, %div, !dbg !5433
  %sub8 = fsub float %conv1, %div7, !dbg !5434
  %conv9 = fptosi float %sub8 to i32, !dbg !5426
  store i32 %conv9, i32* %x, align 4, !dbg !5425
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5435, metadata !DIExpression()), !dbg !5436
  %5 = load i16, i16* %y2.addr, align 2, !dbg !5437
  %conv10 = sext i16 %5 to i32, !dbg !5437
  %conv11 = sitofp i32 %conv10 to float, !dbg !5437
  %6 = load i16, i16* %y2.addr, align 2, !dbg !5438
  %conv12 = sitofp i16 %6 to float, !dbg !5439
  %7 = load i16, i16* %y1.addr, align 2, !dbg !5440
  %conv13 = sext i16 %7 to i32, !dbg !5440
  %conv14 = sitofp i32 %conv13 to float, !dbg !5440
  %sub15 = fsub float %conv12, %conv14, !dbg !5441
  %mul16 = fmul float %sub15, 5.000000e-01, !dbg !5442
  %8 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5443
  %9 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !5443
  %conv17 = sitofp i32 %9 to float, !dbg !5443
  %mul18 = fmul float %8, %conv17, !dbg !5443
  %div19 = fdiv float %mul18, 7.200000e+01, !dbg !5443
  %div20 = fdiv float %mul16, %div19, !dbg !5444
  %sub21 = fsub float %conv11, %div20, !dbg !5445
  %conv22 = fptosi float %sub21 to i32, !dbg !5437
  store i32 %conv22, i32* %y, align 4, !dbg !5436
  call void @llvm.dbg.declare(metadata float* %icon_size, metadata !5446, metadata !DIExpression()), !dbg !5447
  %10 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5448
  %11 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !5448
  %conv23 = sitofp i32 %11 to float, !dbg !5448
  %mul24 = fmul float %10, %conv23, !dbg !5448
  %div25 = fdiv float %mul24, 7.200000e+01, !dbg !5448
  %mul26 = fmul float 1.600000e+01, %div25, !dbg !5448
  %12 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5449
  %13 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !5449
  %conv27 = sitofp i32 %13 to float, !dbg !5449
  %mul28 = fmul float %12, %conv27, !dbg !5449
  %div29 = fdiv float %mul28, 7.200000e+01, !dbg !5449
  %mul30 = fmul float 7.000000e+00, %div29, !dbg !5450
  %add = fadd float %mul26, %mul30, !dbg !5451
  store float %add, float* %icon_size, align 4, !dbg !5447
  %14 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5452
  %15 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !5452
  %conv31 = sitofp i32 %15 to float, !dbg !5452
  %mul32 = fmul float %14, %conv31, !dbg !5452
  %div33 = fdiv float %mul32, 7.200000e+01, !dbg !5452
  %div34 = fdiv float 3.600000e+01, %div33, !dbg !5453
  %16 = load i32, i32* %x, align 4, !dbg !5454
  %conv35 = sitofp i32 %16 to float, !dbg !5454
  %add36 = fadd float %conv35, %div34, !dbg !5454
  %conv37 = fptosi float %add36 to i32, !dbg !5454
  store i32 %conv37, i32* %x, align 4, !dbg !5454
  %17 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5455
  %18 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !5455
  %conv38 = sitofp i32 %18 to float, !dbg !5455
  %mul39 = fmul float %17, %conv38, !dbg !5455
  %div40 = fdiv float %mul39, 7.200000e+01, !dbg !5455
  %div41 = fdiv float 3.600000e+01, %div40, !dbg !5456
  %19 = load i32, i32* %y, align 4, !dbg !5457
  %conv42 = sitofp i32 %19 to float, !dbg !5457
  %add43 = fadd float %conv42, %div41, !dbg !5457
  %conv44 = fptosi float %add43 to i32, !dbg !5457
  store i32 %conv44, i32* %y, align 4, !dbg !5457
  %20 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5458
  %21 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !5458
  %conv45 = sitofp i32 %21 to float, !dbg !5458
  %mul46 = fmul float %20, %conv45, !dbg !5458
  %div47 = fdiv float %mul46, 7.200000e+01, !dbg !5458
  %mul48 = fmul float 1.600000e+01, %div47, !dbg !5458
  %22 = load i32, i32* %x, align 4, !dbg !5459
  %conv49 = sitofp i32 %22 to float, !dbg !5459
  %sub50 = fsub float %conv49, %mul48, !dbg !5459
  %conv51 = fptosi float %sub50 to i32, !dbg !5459
  store i32 %conv51, i32* %x, align 4, !dbg !5459
  %23 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !5460
  %24 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !5460
  %conv52 = sitofp i32 %24 to float, !dbg !5460
  %mul53 = fmul float %23, %conv52, !dbg !5460
  %div54 = fdiv float %mul53, 7.200000e+01, !dbg !5460
  %mul55 = fmul float 1.600000e+01, %div54, !dbg !5460
  %25 = load i32, i32* %y, align 4, !dbg !5461
  %conv56 = sitofp i32 %25 to float, !dbg !5461
  %sub57 = fsub float %conv56, %mul55, !dbg !5461
  %conv58 = fptosi float %sub57 to i32, !dbg !5461
  store i32 %conv58, i32* %y, align 4, !dbg !5461
  %26 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5462
  %27 = load i32, i32* %x, align 4, !dbg !5463
  %28 = load i32, i32* %x, align 4, !dbg !5464
  %conv59 = sitofp i32 %28 to float, !dbg !5464
  %29 = load float, float* %icon_size, align 4, !dbg !5465
  %add60 = fadd float %conv59, %29, !dbg !5466
  %conv61 = fptosi float %add60 to i32, !dbg !5464
  %30 = load i32, i32* %y, align 4, !dbg !5467
  %31 = load i32, i32* %y, align 4, !dbg !5468
  %conv62 = sitofp i32 %31 to float, !dbg !5468
  %32 = load float, float* %icon_size, align 4, !dbg !5469
  %add63 = fadd float %conv62, %32, !dbg !5470
  %conv64 = fptosi float %add63 to i32, !dbg !5468
  call void @BLI_rcti_init(%struct.rcti* %26, i32 %27, i32 %conv61, i32 %30, i32 %conv64), !dbg !5471
  ret void, !dbg !5472
}

declare dso_local void @ED_area_tag_redraw(%struct.ScrArea*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_screens_header_tools_menu_create(%struct.bContext* %C, %struct.uiLayout* %layout, i8* %UNUSED_arg) #0 !dbg !5473 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %layout.addr = alloca %struct.uiLayout*, align 8
  %UNUSED_arg.addr = alloca i8*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5479, metadata !DIExpression()), !dbg !5480
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !5481, metadata !DIExpression()), !dbg !5482
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !5483, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !5485, metadata !DIExpression()), !dbg !5486
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5487
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !5488
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !5486
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5489, metadata !DIExpression()), !dbg !5490
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5491
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !5492
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !5490
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5493
  %alignment = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 9, !dbg !5495
  %3 = load i16, i16* %alignment, align 8, !dbg !5495
  %conv = sext i16 %3 to i32, !dbg !5493
  %cmp = icmp eq i32 %conv, 1, !dbg !5496
  br i1 %cmp, label %if.then, label %if.else, !dbg !5497

if.then:                                          ; preds = %entry
  %4 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5498
  call void @uiItemO(%struct.uiLayout* %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0)), !dbg !5499
  br label %if.end, !dbg !5499

if.else:                                          ; preds = %entry
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5500
  call void @uiItemO(%struct.uiLayout* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0)), !dbg !5501
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5502
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5503
  %flag = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 14, !dbg !5504
  %8 = load i16, i16* %flag, align 2, !dbg !5504
  %conv3 = sext i16 %8 to i32, !dbg !5503
  %and = and i32 %conv3, 1, !dbg !5505
  %tobool = icmp ne i32 %and, 0, !dbg !5506
  %9 = zext i1 %tobool to i64, !dbg !5506
  %cond = select i1 %tobool, i32 39, i32 38, !dbg !5506
  call void @uiItemO(%struct.uiLayout* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i32 %cond, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0)), !dbg !5507
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5508
  call void @uiItemS(%struct.uiLayout* %10), !dbg !5509
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5510
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %11, i32 0, i32 8, !dbg !5512
  %12 = load i8, i8* %spacetype, align 8, !dbg !5512
  %conv4 = zext i8 %12 to i32, !dbg !5510
  %cmp5 = icmp ne i32 %conv4, 5, !dbg !5513
  br i1 %cmp5, label %if.then7, label %if.end12, !dbg !5514

if.then7:                                         ; preds = %if.end
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5515
  %full = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 6, !dbg !5518
  %14 = load %struct.bScreen*, %struct.bScreen** %full, align 8, !dbg !5518
  %tobool8 = icmp ne %struct.bScreen* %14, null, !dbg !5515
  br i1 %tobool8, label %if.then9, label %if.else10, !dbg !5519

if.then9:                                         ; preds = %if.then7
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5520
  call void @uiItemO(%struct.uiLayout* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)), !dbg !5521
  br label %if.end11, !dbg !5521

if.else10:                                        ; preds = %if.then7
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !5522
  call void @uiItemO(%struct.uiLayout* %16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)), !dbg !5523
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.then9
  br label %if.end12, !dbg !5524

if.end12:                                         ; preds = %if.end11, %if.end
  ret void, !dbg !5525
}

declare dso_local void @uiItemO(%struct.uiLayout*, i8*, i32, i8*) #2

declare dso_local void @uiItemS(%struct.uiLayout*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bScreen* @ED_screen_animation_playing(%struct.wmWindowManager* %wm) #0 !dbg !5526 {
entry:
  %retval = alloca %struct.bScreen*, align 8
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %window = alloca %struct.wmWindow*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !5532, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window, metadata !5534, metadata !DIExpression()), !dbg !5537
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !5538
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %0, i32 0, i32 3, !dbg !5540
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !5541
  %1 = load i8*, i8** %first, align 8, !dbg !5541
  %2 = bitcast i8* %1 to %struct.wmWindow*, !dbg !5538
  store %struct.wmWindow* %2, %struct.wmWindow** %window, align 8, !dbg !5542
  br label %for.cond, !dbg !5543

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !5544
  %tobool = icmp ne %struct.wmWindow* %3, null, !dbg !5546
  br i1 %tobool, label %for.body, label %for.end, !dbg !5546

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !5547
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %4, i32 0, i32 3, !dbg !5549
  %5 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5549
  %animtimer = getelementptr inbounds %struct.bScreen, %struct.bScreen* %5, i32 0, i32 21, !dbg !5550
  %6 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !5550
  %tobool1 = icmp ne %struct.wmTimer* %6, null, !dbg !5547
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5551

if.then:                                          ; preds = %for.body
  %7 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !5552
  %screen2 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %7, i32 0, i32 3, !dbg !5553
  %8 = load %struct.bScreen*, %struct.bScreen** %screen2, align 8, !dbg !5553
  store %struct.bScreen* %8, %struct.bScreen** %retval, align 8, !dbg !5554
  br label %return, !dbg !5554

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5550

for.inc:                                          ; preds = %if.end
  %9 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !5555
  %next = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %9, i32 0, i32 0, !dbg !5556
  %10 = load %struct.wmWindow*, %struct.wmWindow** %next, align 8, !dbg !5556
  store %struct.wmWindow* %10, %struct.wmWindow** %window, align 8, !dbg !5557
  br label %for.cond, !dbg !5558, !llvm.loop !5559

for.end:                                          ; preds = %for.cond
  store %struct.bScreen* null, %struct.bScreen** %retval, align 8, !dbg !5561
  br label %return, !dbg !5561

return:                                           ; preds = %for.end, %if.then
  %11 = load %struct.bScreen*, %struct.bScreen** %retval, align 8, !dbg !5562
  ret %struct.bScreen* %11, !dbg !5562
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ED_screen_animation_play(%struct.bContext* %C, i32 %sync, i32 %mode) #0 !dbg !5563 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sync.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %screen = alloca %struct.bScreen*, align 8
  %scene = alloca %struct.Scene*, align 8
  %refresh = alloca i32, align 4
  %wt = alloca %struct.wmTimer*, align 8
  %sad = alloca %struct.ScreenAnimData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5566, metadata !DIExpression()), !dbg !5567
  store i32 %sync, i32* %sync.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sync.addr, metadata !5568, metadata !DIExpression()), !dbg !5569
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5570, metadata !DIExpression()), !dbg !5571
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !5572, metadata !DIExpression()), !dbg !5573
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5574
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !5575
  store %struct.bScreen* %call, %struct.bScreen** %screen, align 8, !dbg !5573
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5576, metadata !DIExpression()), !dbg !5577
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5578
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !5579
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !5577
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5580
  %call2 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %2), !dbg !5582
  %call3 = call %struct.bScreen* @ED_screen_animation_playing(%struct.wmWindowManager* %call2), !dbg !5583
  %tobool = icmp ne %struct.bScreen* %call3, null, !dbg !5583
  br i1 %tobool, label %if.then, label %if.else, !dbg !5584

if.then:                                          ; preds = %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5585
  call void @ED_screen_animation_timer(%struct.bContext* %3, i32 0, i32 0, i32 0, i32 0), !dbg !5587
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5588
  call void @sound_stop_scene(%struct.Scene* %4), !dbg !5589
  br label %if.end10, !dbg !5590

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %refresh, metadata !5591, metadata !DIExpression()), !dbg !5593
  store i32 15, i32* %refresh, align 4, !dbg !5593
  %5 = load i32, i32* %mode.addr, align 4, !dbg !5594
  %cmp = icmp eq i32 %5, 1, !dbg !5596
  br i1 %cmp, label %if.then4, label %if.end, !dbg !5597

if.then4:                                         ; preds = %if.else
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5598
  call void @sound_play_scene(%struct.Scene* %6), !dbg !5599
  br label %if.end, !dbg !5599

if.end:                                           ; preds = %if.then4, %if.else
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5600
  %8 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5601
  %redraws_flag = getelementptr inbounds %struct.bScreen, %struct.bScreen* %8, i32 0, i32 7, !dbg !5602
  %9 = load i32, i32* %redraws_flag, align 8, !dbg !5602
  %10 = load i32, i32* %refresh, align 4, !dbg !5603
  %11 = load i32, i32* %sync.addr, align 4, !dbg !5604
  %12 = load i32, i32* %mode.addr, align 4, !dbg !5605
  call void @ED_screen_animation_timer(%struct.bContext* %7, i32 %9, i32 %10, i32 %11, i32 %12), !dbg !5606
  %13 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5607
  %animtimer = getelementptr inbounds %struct.bScreen, %struct.bScreen* %13, i32 0, i32 21, !dbg !5609
  %14 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !5609
  %tobool5 = icmp ne %struct.wmTimer* %14, null, !dbg !5607
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !5610

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.wmTimer** %wt, metadata !5611, metadata !DIExpression()), !dbg !5615
  %15 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5616
  %animtimer7 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %15, i32 0, i32 21, !dbg !5617
  %16 = load %struct.wmTimer*, %struct.wmTimer** %animtimer7, align 8, !dbg !5617
  store %struct.wmTimer* %16, %struct.wmTimer** %wt, align 8, !dbg !5615
  call void @llvm.dbg.declare(metadata %struct.ScreenAnimData** %sad, metadata !5618, metadata !DIExpression()), !dbg !5630
  %17 = load %struct.wmTimer*, %struct.wmTimer** %wt, align 8, !dbg !5631
  %customdata = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %17, i32 0, i32 5, !dbg !5632
  %18 = load i8*, i8** %customdata, align 8, !dbg !5632
  %19 = bitcast i8* %18 to %struct.ScreenAnimData*, !dbg !5631
  store %struct.ScreenAnimData* %19, %struct.ScreenAnimData** %sad, align 8, !dbg !5630
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5633
  %call8 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %20), !dbg !5634
  %21 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !5635
  %ar = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %21, i32 0, i32 0, !dbg !5636
  store %struct.ARegion* %call8, %struct.ARegion** %ar, align 8, !dbg !5637
  br label %if.end9, !dbg !5638

if.end9:                                          ; preds = %if.then6, %if.end
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then
  ret i32 4, !dbg !5639
}

declare dso_local %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext*) #2

declare dso_local void @ED_screen_animation_timer(%struct.bContext*, i32, i32, i32, i32) #2

declare dso_local void @sound_stop_scene(%struct.Scene*) #2

declare dso_local void @sound_play_scene(%struct.Scene*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local float @ED_region_blend_factor(%struct.ARegion* %ar) #0 !dbg !5640 {
entry:
  %retval = alloca float, align 4
  %ar.addr = alloca %struct.ARegion*, align 8
  %rgi = alloca %struct.RegionAlphaInfo*, align 8
  %alpha = alloca float, align 4
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !5643, metadata !DIExpression()), !dbg !5644
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5645
  %regiontimer = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 28, !dbg !5647
  %1 = load %struct.wmTimer*, %struct.wmTimer** %regiontimer, align 8, !dbg !5647
  %cmp = icmp eq %struct.wmTimer* %1, null, !dbg !5648
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5649

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5650
  %alignment = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 9, !dbg !5651
  %3 = load i16, i16* %alignment, align 8, !dbg !5651
  %conv = sext i16 %3 to i32, !dbg !5650
  %and = and i32 %conv, 32, !dbg !5652
  %tobool = icmp ne i32 %and, 0, !dbg !5652
  br i1 %tobool, label %land.lhs.true1, label %if.end, !dbg !5653

land.lhs.true1:                                   ; preds = %land.lhs.true
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5654
  %prev = getelementptr inbounds %struct.ARegion, %struct.ARegion* %4, i32 0, i32 1, !dbg !5655
  %5 = load %struct.ARegion*, %struct.ARegion** %prev, align 8, !dbg !5655
  %tobool2 = icmp ne %struct.ARegion* %5, null, !dbg !5654
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5656

if.then:                                          ; preds = %land.lhs.true1
  %6 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5657
  %prev3 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %6, i32 0, i32 1, !dbg !5659
  %7 = load %struct.ARegion*, %struct.ARegion** %prev3, align 8, !dbg !5659
  store %struct.ARegion* %7, %struct.ARegion** %ar.addr, align 8, !dbg !5660
  br label %if.end, !dbg !5661

if.end:                                           ; preds = %if.then, %land.lhs.true1, %land.lhs.true, %entry
  %8 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5662
  %regiontimer4 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 28, !dbg !5664
  %9 = load %struct.wmTimer*, %struct.wmTimer** %regiontimer4, align 8, !dbg !5664
  %tobool5 = icmp ne %struct.wmTimer* %9, null, !dbg !5662
  br i1 %tobool5, label %if.then6, label %if.end21, !dbg !5665

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.RegionAlphaInfo** %rgi, metadata !5666, metadata !DIExpression()), !dbg !5676
  %10 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5677
  %regiontimer7 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %10, i32 0, i32 28, !dbg !5678
  %11 = load %struct.wmTimer*, %struct.wmTimer** %regiontimer7, align 8, !dbg !5678
  %customdata = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %11, i32 0, i32 5, !dbg !5679
  %12 = load i8*, i8** %customdata, align 8, !dbg !5679
  %13 = bitcast i8* %12 to %struct.RegionAlphaInfo*, !dbg !5677
  store %struct.RegionAlphaInfo* %13, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5676
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !5680, metadata !DIExpression()), !dbg !5681
  %14 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5682
  %regiontimer8 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %14, i32 0, i32 28, !dbg !5683
  %15 = load %struct.wmTimer*, %struct.wmTimer** %regiontimer8, align 8, !dbg !5683
  %duration = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %15, i32 0, i32 6, !dbg !5684
  %16 = load double, double* %duration, align 8, !dbg !5684
  %conv9 = fptrunc double %16 to float, !dbg !5685
  %div = fdiv float %conv9, 0x3FC99999A0000000, !dbg !5686
  store float %div, float* %alpha, align 4, !dbg !5687
  %17 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5688
  %hidden = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %17, i32 0, i32 3, !dbg !5690
  %18 = load i32, i32* %hidden, align 8, !dbg !5690
  %tobool10 = icmp ne i32 %18, 0, !dbg !5688
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5691

if.then11:                                        ; preds = %if.then6
  %19 = load float, float* %alpha, align 4, !dbg !5692
  %sub = fsub float 0x3FEB851EA0000000, %19, !dbg !5693
  store float %sub, float* %alpha, align 4, !dbg !5694
  br label %if.end12, !dbg !5695

if.end12:                                         ; preds = %if.then11, %if.then6
  %20 = load float, float* %alpha, align 4, !dbg !5696
  %cmp13 = fcmp olt float %20, 0.000000e+00, !dbg !5696
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !5699

if.then15:                                        ; preds = %if.end12
  store float 0.000000e+00, float* %alpha, align 4, !dbg !5696
  br label %if.end20, !dbg !5696

if.else:                                          ; preds = %if.end12
  %21 = load float, float* %alpha, align 4, !dbg !5700
  %cmp16 = fcmp ogt float %21, 1.000000e+00, !dbg !5700
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !5696

if.then18:                                        ; preds = %if.else
  store float 1.000000e+00, float* %alpha, align 4, !dbg !5700
  br label %if.end19, !dbg !5700

if.end19:                                         ; preds = %if.then18, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then15
  %22 = load float, float* %alpha, align 4, !dbg !5702
  store float %22, float* %retval, align 4, !dbg !5703
  br label %return, !dbg !5703

if.end21:                                         ; preds = %if.end
  store float 1.000000e+00, float* %retval, align 4, !dbg !5704
  br label %return, !dbg !5704

return:                                           ; preds = %if.end21, %if.end20
  %23 = load float, float* %retval, align 4, !dbg !5705
  ret float %23, !dbg !5705
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @region_blend_start(%struct.bContext* %C, %struct.ScrArea* %sa, %struct.ARegion* %ar) #0 !dbg !5706 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sa.addr = alloca %struct.ScrArea*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %rgi = alloca %struct.RegionAlphaInfo*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5709, metadata !DIExpression()), !dbg !5710
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !5711, metadata !DIExpression()), !dbg !5712
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !5713, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !5715, metadata !DIExpression()), !dbg !5717
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5718
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !5719
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !5717
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !5720, metadata !DIExpression()), !dbg !5721
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5722
  %call1 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %1), !dbg !5723
  store %struct.wmWindow* %call1, %struct.wmWindow** %win, align 8, !dbg !5721
  call void @llvm.dbg.declare(metadata %struct.RegionAlphaInfo** %rgi, metadata !5724, metadata !DIExpression()), !dbg !5725
  %2 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5726
  %regiontimer = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 28, !dbg !5728
  %3 = load %struct.wmTimer*, %struct.wmTimer** %regiontimer, align 8, !dbg !5728
  %tobool = icmp ne %struct.wmTimer* %3, null, !dbg !5726
  br i1 %tobool, label %if.then, label %if.end, !dbg !5729

if.then:                                          ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5730
  %5 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5732
  call void @region_blend_end(%struct.bContext* %4, %struct.ARegion* %5, i8 zeroext 1), !dbg !5733
  br label %if.end, !dbg !5734

if.end:                                           ; preds = %if.then, %entry
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5735
  %call2 = call i8* %6(i64 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0)), !dbg !5735
  %7 = bitcast i8* %call2 to %struct.RegionAlphaInfo*, !dbg !5735
  store %struct.RegionAlphaInfo* %7, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5736
  %8 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5737
  %flag = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 10, !dbg !5738
  %9 = load i16, i16* %flag, align 2, !dbg !5738
  %conv = sext i16 %9 to i32, !dbg !5737
  %and = and i32 %conv, 1, !dbg !5739
  %10 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5740
  %hidden = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %10, i32 0, i32 3, !dbg !5741
  store i32 %and, i32* %hidden, align 8, !dbg !5742
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5743
  %12 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5744
  %sa3 = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %12, i32 0, i32 0, !dbg !5745
  store %struct.ScrArea* %11, %struct.ScrArea** %sa3, align 8, !dbg !5746
  %13 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5747
  %14 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5748
  %ar4 = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %14, i32 0, i32 1, !dbg !5749
  store %struct.ARegion* %13, %struct.ARegion** %ar4, align 8, !dbg !5750
  %15 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5751
  %flag5 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %15, i32 0, i32 10, !dbg !5752
  %16 = load i16, i16* %flag5, align 2, !dbg !5753
  %conv6 = sext i16 %16 to i32, !dbg !5753
  %and7 = and i32 %conv6, -2, !dbg !5753
  %conv8 = trunc i32 %and7 to i16, !dbg !5753
  store i16 %conv8, i16* %flag5, align 2, !dbg !5753
  %17 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5754
  %hidden9 = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %17, i32 0, i32 3, !dbg !5756
  %18 = load i32, i32* %hidden9, align 8, !dbg !5756
  %cmp = icmp eq i32 %18, 0, !dbg !5757
  br i1 %cmp, label %if.then11, label %if.else, !dbg !5758

if.then11:                                        ; preds = %if.end
  %19 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !5759
  %20 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5760
  %21 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5761
  call void @ED_area_initialize(%struct.wmWindowManager* %19, %struct.wmWindow* %20, %struct.ScrArea* %21), !dbg !5762
  br label %if.end12, !dbg !5762

if.else:                                          ; preds = %if.end
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5763
  %23 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5764
  %handlers = getelementptr inbounds %struct.ARegion, %struct.ARegion* %23, i32 0, i32 26, !dbg !5765
  call void @WM_event_remove_handlers(%struct.bContext* %22, %struct.ListBase* %handlers), !dbg !5766
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then11
  %24 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5767
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %24, i32 0, i32 0, !dbg !5769
  %25 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !5769
  %tobool13 = icmp ne %struct.ARegion* %25, null, !dbg !5767
  br i1 %tobool13, label %if.then14, label %if.end22, !dbg !5770

if.then14:                                        ; preds = %if.end12
  %26 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5771
  %next15 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %26, i32 0, i32 0, !dbg !5774
  %27 = load %struct.ARegion*, %struct.ARegion** %next15, align 8, !dbg !5774
  %alignment = getelementptr inbounds %struct.ARegion, %struct.ARegion* %27, i32 0, i32 9, !dbg !5775
  %28 = load i16, i16* %alignment, align 8, !dbg !5775
  %conv16 = sext i16 %28 to i32, !dbg !5771
  %and17 = and i32 %conv16, 32, !dbg !5776
  %tobool18 = icmp ne i32 %and17, 0, !dbg !5776
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !5777

if.then19:                                        ; preds = %if.then14
  %29 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5778
  %next20 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %29, i32 0, i32 0, !dbg !5780
  %30 = load %struct.ARegion*, %struct.ARegion** %next20, align 8, !dbg !5780
  %31 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5781
  %child_ar = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %31, i32 0, i32 2, !dbg !5782
  store %struct.ARegion* %30, %struct.ARegion** %child_ar, align 8, !dbg !5783
  br label %if.end21, !dbg !5784

if.end21:                                         ; preds = %if.then19, %if.then14
  br label %if.end22, !dbg !5785

if.end22:                                         ; preds = %if.end21, %if.end12
  %32 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !5786
  %33 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5787
  %call23 = call %struct.wmTimer* @WM_event_add_timer(%struct.wmWindowManager* %32, %struct.wmWindow* %33, i32 279, double 0x3FA47AE140000000), !dbg !5788
  %34 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5789
  %regiontimer24 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %34, i32 0, i32 28, !dbg !5790
  store %struct.wmTimer* %call23, %struct.wmTimer** %regiontimer24, align 8, !dbg !5791
  %35 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5792
  %36 = bitcast %struct.RegionAlphaInfo* %35 to i8*, !dbg !5792
  %37 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5793
  %regiontimer25 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %37, i32 0, i32 28, !dbg !5794
  %38 = load %struct.wmTimer*, %struct.wmTimer** %regiontimer25, align 8, !dbg !5794
  %customdata = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %38, i32 0, i32 5, !dbg !5795
  store i8* %36, i8** %customdata, align 8, !dbg !5796
  ret void, !dbg !5797
}

; Function Attrs: noinline nounwind uwtable
define internal void @region_blend_end(%struct.bContext* %C, %struct.ARegion* %ar, i8 zeroext %is_running) #0 !dbg !5798 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %is_running.addr = alloca i8, align 1
  %rgi = alloca %struct.RegionAlphaInfo*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5802, metadata !DIExpression()), !dbg !5803
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !5804, metadata !DIExpression()), !dbg !5805
  store i8 %is_running, i8* %is_running.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_running.addr, metadata !5806, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.declare(metadata %struct.RegionAlphaInfo** %rgi, metadata !5808, metadata !DIExpression()), !dbg !5809
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5810
  %regiontimer = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 28, !dbg !5811
  %1 = load %struct.wmTimer*, %struct.wmTimer** %regiontimer, align 8, !dbg !5811
  %customdata = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %1, i32 0, i32 5, !dbg !5812
  %2 = load i8*, i8** %customdata, align 8, !dbg !5812
  %3 = bitcast i8* %2 to %struct.RegionAlphaInfo*, !dbg !5810
  store %struct.RegionAlphaInfo* %3, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5809
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5813
  call void @ED_region_tag_redraw(%struct.ARegion* %4), !dbg !5814
  %5 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5815
  %child_ar = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %5, i32 0, i32 2, !dbg !5817
  %6 = load %struct.ARegion*, %struct.ARegion** %child_ar, align 8, !dbg !5817
  %tobool = icmp ne %struct.ARegion* %6, null, !dbg !5815
  br i1 %tobool, label %if.then, label %if.end, !dbg !5818

if.then:                                          ; preds = %entry
  %7 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5819
  %child_ar1 = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %7, i32 0, i32 2, !dbg !5820
  %8 = load %struct.ARegion*, %struct.ARegion** %child_ar1, align 8, !dbg !5820
  call void @ED_region_tag_redraw(%struct.ARegion* %8), !dbg !5821
  br label %if.end, !dbg !5821

if.end:                                           ; preds = %if.then, %entry
  %9 = load i8, i8* %is_running.addr, align 1, !dbg !5822
  %tobool2 = icmp ne i8 %9, 0, !dbg !5822
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !5824

if.then3:                                         ; preds = %if.end
  %10 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5825
  %hidden = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %10, i32 0, i32 3, !dbg !5828
  %11 = load i32, i32* %hidden, align 8, !dbg !5828
  %tobool4 = icmp ne i32 %11, 0, !dbg !5825
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !5829

if.then5:                                         ; preds = %if.then3
  %12 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5830
  %ar6 = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %12, i32 0, i32 1, !dbg !5831
  %13 = load %struct.ARegion*, %struct.ARegion** %ar6, align 8, !dbg !5831
  %flag = getelementptr inbounds %struct.ARegion, %struct.ARegion* %13, i32 0, i32 10, !dbg !5832
  %14 = load i16, i16* %flag, align 2, !dbg !5833
  %conv = sext i16 %14 to i32, !dbg !5833
  %and = and i32 %conv, -2, !dbg !5833
  %conv7 = trunc i32 %and to i16, !dbg !5833
  store i16 %conv7, i16* %flag, align 2, !dbg !5833
  br label %if.end8, !dbg !5830

if.end8:                                          ; preds = %if.then5, %if.then3
  br label %if.end20, !dbg !5834

if.else:                                          ; preds = %if.end
  %15 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5835
  %hidden9 = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %15, i32 0, i32 3, !dbg !5838
  %16 = load i32, i32* %hidden9, align 8, !dbg !5838
  %tobool10 = icmp ne i32 %16, 0, !dbg !5835
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !5839

if.then11:                                        ; preds = %if.else
  %17 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5840
  %hidden12 = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %17, i32 0, i32 3, !dbg !5842
  %18 = load i32, i32* %hidden12, align 8, !dbg !5842
  %19 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5843
  %ar13 = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %19, i32 0, i32 1, !dbg !5844
  %20 = load %struct.ARegion*, %struct.ARegion** %ar13, align 8, !dbg !5844
  %flag14 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %20, i32 0, i32 10, !dbg !5845
  %21 = load i16, i16* %flag14, align 2, !dbg !5846
  %conv15 = sext i16 %21 to i32, !dbg !5846
  %or = or i32 %conv15, %18, !dbg !5846
  %conv16 = trunc i32 %or to i16, !dbg !5846
  store i16 %conv16, i16* %flag14, align 2, !dbg !5846
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5847
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %22), !dbg !5848
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5849
  %call17 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %23), !dbg !5850
  %24 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5851
  %sa = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %24, i32 0, i32 0, !dbg !5852
  %25 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5852
  call void @ED_area_initialize(%struct.wmWindowManager* %call, %struct.wmWindow* %call17, %struct.ScrArea* %25), !dbg !5853
  br label %if.end18, !dbg !5854

if.end18:                                         ; preds = %if.then11, %if.else
  %26 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !5855
  %sa19 = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %26, i32 0, i32 0, !dbg !5856
  %27 = load %struct.ScrArea*, %struct.ScrArea** %sa19, align 8, !dbg !5856
  call void @ED_area_tag_redraw(%struct.ScrArea* %27), !dbg !5857
  br label %if.end20

if.end20:                                         ; preds = %if.end18, %if.end8
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5858
  %call21 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %28), !dbg !5859
  %29 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5860
  %regiontimer22 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %29, i32 0, i32 28, !dbg !5861
  %30 = load %struct.wmTimer*, %struct.wmTimer** %regiontimer22, align 8, !dbg !5861
  call void @WM_event_remove_timer(%struct.wmWindowManager* %call21, %struct.wmWindow* null, %struct.wmTimer* %30), !dbg !5862
  %31 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5863
  %regiontimer23 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %31, i32 0, i32 28, !dbg !5864
  store %struct.wmTimer* null, %struct.wmTimer** %regiontimer23, align 8, !dbg !5865
  ret void, !dbg !5866
}

declare dso_local void @ED_area_initialize(%struct.wmWindowManager*, %struct.wmWindow*, %struct.ScrArea*) #2

declare dso_local void @WM_event_remove_handlers(%struct.bContext*, %struct.ListBase*) #2

declare dso_local %struct.wmTimer* @WM_event_add_timer(%struct.wmWindowManager*, %struct.wmWindow*, i32, double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_operatortypes_screen() #0 !dbg !5867 {
entry:
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_actionzone), !dbg !5868
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_repeat_last), !dbg !5869
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_repeat_history), !dbg !5870
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_redo_last), !dbg !5871
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_area_move), !dbg !5872
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_area_split), !dbg !5873
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_area_join), !dbg !5874
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_area_options), !dbg !5875
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_area_dupli), !dbg !5876
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_area_swap), !dbg !5877
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_region_quadview), !dbg !5878
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_region_scale), !dbg !5879
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_region_flip), !dbg !5880
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_header_flip), !dbg !5881
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_header), !dbg !5882
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_header_toggle_menus), !dbg !5883
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_header_toolbox), !dbg !5884
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_screen_set), !dbg !5885
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_screen_full_area), !dbg !5886
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_back_to_previous), !dbg !5887
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_spacedata_cleanup), !dbg !5888
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_screenshot), !dbg !5889
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_screencast), !dbg !5890
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_userpref_show), !dbg !5891
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_region_blend), !dbg !5892
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_frame_offset), !dbg !5893
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_frame_jump), !dbg !5894
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_keyframe_jump), !dbg !5895
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_marker_jump), !dbg !5896
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_animation_step), !dbg !5897
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_animation_play), !dbg !5898
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_animation_cancel), !dbg !5899
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_new), !dbg !5900
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCREEN_OT_delete), !dbg !5901
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCENE_OT_new), !dbg !5902
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @SCENE_OT_delete), !dbg !5903
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ED_OT_undo), !dbg !5904
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ED_OT_undo_push), !dbg !5905
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ED_OT_redo), !dbg !5906
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @ED_OT_undo_history), !dbg !5907
  ret void, !dbg !5908
}

declare dso_local void @WM_operatortype_append(void (%struct.wmOperatorType*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_actionzone(%struct.wmOperatorType* %ot) #0 !dbg !5909 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5910, metadata !DIExpression()), !dbg !5911
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5912
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5913
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.64, i64 0, i64 0), i8** %name, align 8, !dbg !5914
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5915
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5916
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.65, i64 0, i64 0), i8** %description, align 8, !dbg !5917
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5918
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5919
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i8** %idname, align 8, !dbg !5920
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5921
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5922
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @actionzone_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5923
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5924
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !5925
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @actionzone_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !5926
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5927
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5928
  store i32 (%struct.bContext*)* @actionzone_area_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !5929
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5930
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 7, !dbg !5931
  store void (%struct.bContext*, %struct.wmOperator*)* @actionzone_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !5932
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5933
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 19, !dbg !5934
  store i16 68, i16* %flag, align 8, !dbg !5935
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5936
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !5937
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5937
  %10 = bitcast %struct.StructRNA* %9 to i8*, !dbg !5936
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i32 0, i32 0, i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67, i64 0, i64 0), i32 0, i32 2), !dbg !5938
  ret void, !dbg !5939
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_repeat_last(%struct.wmOperatorType* %ot) #0 !dbg !5940 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5941, metadata !DIExpression()), !dbg !5942
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5943
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5944
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0), i8** %name, align 8, !dbg !5945
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5946
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5947
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.70, i64 0, i64 0), i8** %description, align 8, !dbg !5948
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5949
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5950
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0), i8** %idname, align 8, !dbg !5951
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5952
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5953
  store i32 (%struct.bContext*, %struct.wmOperator*)* @repeat_last_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5954
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5955
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5956
  store i32 (%struct.bContext*)* @ED_operator_screenactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !5957
  ret void, !dbg !5958
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_repeat_history(%struct.wmOperatorType* %ot) #0 !dbg !5959 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5960, metadata !DIExpression()), !dbg !5961
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5962
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5963
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i64 0, i64 0), i8** %name, align 8, !dbg !5964
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5965
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5966
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.72, i64 0, i64 0), i8** %description, align 8, !dbg !5967
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5968
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5969
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0), i8** %idname, align 8, !dbg !5970
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5971
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5972
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @repeat_history_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5973
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5974
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5975
  store i32 (%struct.bContext*, %struct.wmOperator*)* @repeat_history_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5976
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5977
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5978
  store i32 (%struct.bContext*)* @ED_operator_screenactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !5979
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5980
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5981
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5981
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5980
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 0, i32 0, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), i32 0, i32 1000), !dbg !5982
  ret void, !dbg !5983
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_redo_last(%struct.wmOperatorType* %ot) #0 !dbg !5984 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5985, metadata !DIExpression()), !dbg !5986
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5987
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5988
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.76, i64 0, i64 0), i8** %name, align 8, !dbg !5989
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5990
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5991
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.77, i64 0, i64 0), i8** %description, align 8, !dbg !5992
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5993
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5994
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i8** %idname, align 8, !dbg !5995
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5996
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5997
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @redo_last_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5998
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5999
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6000
  store i32 (%struct.bContext*)* @ED_operator_screenactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6001
  ret void, !dbg !6002
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_area_move(%struct.wmOperatorType* %ot) #0 !dbg !6003 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6004, metadata !DIExpression()), !dbg !6005
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6006
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6007
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.78, i64 0, i64 0), i8** %name, align 8, !dbg !6008
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6009
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6010
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.79, i64 0, i64 0), i8** %description, align 8, !dbg !6011
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6012
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6013
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0), i8** %idname, align 8, !dbg !6014
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6015
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6016
  store i32 (%struct.bContext*, %struct.wmOperator*)* @area_move_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6017
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6018
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !6019
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @area_move_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6020
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6021
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 7, !dbg !6022
  store void (%struct.bContext*, %struct.wmOperator*)* @area_move_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !6023
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6024
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 8, !dbg !6025
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @area_move_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !6026
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6027
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 9, !dbg !6028
  store i32 (%struct.bContext*)* @ED_operator_screen_mainwinactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6029
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6030
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !6031
  store i16 68, i16* %flag, align 8, !dbg !6032
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6033
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !6034
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6034
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !6033
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6035
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6036
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !6037
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !6037
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !6036
  %call2 = call %struct.PropertyRNA* @RNA_def_int(i8* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6038
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6039
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !6040
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !6040
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !6039
  %call4 = call %struct.PropertyRNA* @RNA_def_int(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6041
  ret void, !dbg !6042
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_area_split(%struct.wmOperatorType* %ot) #0 !dbg !6043 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6044, metadata !DIExpression()), !dbg !6045
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6046
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6047
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.86, i64 0, i64 0), i8** %name, align 8, !dbg !6048
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6049
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6050
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.87, i64 0, i64 0), i8** %description, align 8, !dbg !6051
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6052
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6053
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i8** %idname, align 8, !dbg !6054
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6055
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6056
  store i32 (%struct.bContext*, %struct.wmOperator*)* @area_split_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6057
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6058
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !6059
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @area_split_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6060
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6061
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 8, !dbg !6062
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @area_split_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !6063
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6064
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 7, !dbg !6065
  store void (%struct.bContext*, %struct.wmOperator*)* @area_split_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !6066
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6067
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 9, !dbg !6068
  store i32 (%struct.bContext*)* @screen_active_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !6069
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6070
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !6071
  store i16 68, i16* %flag, align 8, !dbg !6072
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6073
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !6074
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6074
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !6073
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @prop_direction_items, i64 0, i64 0), i32 104, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0)), !dbg !6075
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6076
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !6077
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !6077
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !6076
  %call2 = call %struct.PropertyRNA* @RNA_def_float(i8* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i64 0, i64 0), float 5.000000e-01, float 0.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), float 0.000000e+00, float 1.000000e+00), !dbg !6078
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6079
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !6080
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !6080
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !6079
  %call4 = call %struct.PropertyRNA* @RNA_def_int(i8* %17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0), i32 -100, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6081
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6082
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 11, !dbg !6083
  %19 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !6083
  %20 = bitcast %struct.StructRNA* %19 to i8*, !dbg !6082
  %call6 = call %struct.PropertyRNA* @RNA_def_int(i8* %20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.94, i64 0, i64 0), i32 -100, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6084
  ret void, !dbg !6085
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_area_join(%struct.wmOperatorType* %ot) #0 !dbg !6086 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6087, metadata !DIExpression()), !dbg !6088
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6089
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6090
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.101, i64 0, i64 0), i8** %name, align 8, !dbg !6091
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6092
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6093
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.102, i64 0, i64 0), i8** %description, align 8, !dbg !6094
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6095
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6096
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i8** %idname, align 8, !dbg !6097
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6098
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6099
  store i32 (%struct.bContext*, %struct.wmOperator*)* @area_join_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6100
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6101
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !6102
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @area_join_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6103
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6104
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 8, !dbg !6105
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @area_join_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !6106
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6107
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !6108
  store i32 (%struct.bContext*)* @screen_active_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !6109
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6110
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 7, !dbg !6111
  store void (%struct.bContext*, %struct.wmOperator*)* @area_join_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !6112
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6113
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 19, !dbg !6114
  store i16 68, i16* %flag, align 8, !dbg !6115
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6116
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !6117
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6117
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !6116
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0), i32 -100, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6118
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6119
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !6120
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !6120
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !6119
  %call2 = call %struct.PropertyRNA* @RNA_def_int(i8* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0), i32 -100, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6121
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6122
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !6123
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !6123
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !6122
  %call4 = call %struct.PropertyRNA* @RNA_def_int(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), i32 -100, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6124
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6125
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 11, !dbg !6126
  %19 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !6126
  %20 = bitcast %struct.StructRNA* %19 to i8*, !dbg !6125
  %call6 = call %struct.PropertyRNA* @RNA_def_int(i8* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0), i32 -100, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6127
  ret void, !dbg !6128
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_area_options(%struct.wmOperatorType* %ot) #0 !dbg !6129 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6130, metadata !DIExpression()), !dbg !6131
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6132
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6133
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.114, i64 0, i64 0), i8** %name, align 8, !dbg !6134
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6135
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6136
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.115, i64 0, i64 0), i8** %description, align 8, !dbg !6137
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6138
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6139
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8** %idname, align 8, !dbg !6140
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6141
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !6142
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @screen_area_options_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6143
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6144
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6145
  store i32 (%struct.bContext*)* @ED_operator_screen_mainwinactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6146
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6147
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6148
  store i16 64, i16* %flag, align 8, !dbg !6149
  ret void, !dbg !6150
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_area_dupli(%struct.wmOperatorType* %ot) #0 !dbg !6151 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6152, metadata !DIExpression()), !dbg !6153
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6154
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6155
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.116, i64 0, i64 0), i8** %name, align 8, !dbg !6156
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6157
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6158
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.117, i64 0, i64 0), i8** %description, align 8, !dbg !6159
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6160
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6161
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i8** %idname, align 8, !dbg !6162
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6163
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !6164
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @area_dupli_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6165
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6166
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6167
  store i32 (%struct.bContext*)* @ED_operator_areaactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6168
  ret void, !dbg !6169
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_area_swap(%struct.wmOperatorType* %ot) #0 !dbg !6170 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6171, metadata !DIExpression()), !dbg !6172
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6173
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6174
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.118, i64 0, i64 0), i8** %name, align 8, !dbg !6175
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6176
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6177
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.119, i64 0, i64 0), i8** %description, align 8, !dbg !6178
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6179
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6180
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i64 0, i64 0), i8** %idname, align 8, !dbg !6181
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6182
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !6183
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @area_swap_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6184
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6185
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !6186
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @area_swap_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !6187
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6188
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6189
  store i32 (%struct.bContext*)* @ED_operator_areaactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6190
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6191
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 7, !dbg !6192
  store void (%struct.bContext*, %struct.wmOperator*)* @area_swap_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !6193
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6194
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 19, !dbg !6195
  store i16 4, i16* %flag, align 8, !dbg !6196
  ret void, !dbg !6197
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_region_quadview(%struct.wmOperatorType* %ot) #0 !dbg !6198 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6199, metadata !DIExpression()), !dbg !6200
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6201
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6202
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.121, i64 0, i64 0), i8** %name, align 8, !dbg !6203
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6204
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6205
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i64 0, i64 0), i8** %description, align 8, !dbg !6206
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6207
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6208
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i64 0, i64 0), i8** %idname, align 8, !dbg !6209
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6210
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6211
  store i32 (%struct.bContext*, %struct.wmOperator*)* @region_quadview_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6212
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6213
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6214
  store i32 (%struct.bContext*)* @ED_operator_region_view3d_active, i32 (%struct.bContext*)** %poll, align 8, !dbg !6215
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6216
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6217
  store i16 0, i16* %flag, align 8, !dbg !6218
  ret void, !dbg !6219
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_region_scale(%struct.wmOperatorType* %ot) #0 !dbg !6220 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6221, metadata !DIExpression()), !dbg !6222
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6223
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6224
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.125, i64 0, i64 0), i8** %name, align 8, !dbg !6225
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6226
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6227
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.126, i64 0, i64 0), i8** %description, align 8, !dbg !6228
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6229
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6230
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8** %idname, align 8, !dbg !6231
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6232
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !6233
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @region_scale_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6234
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6235
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !6236
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @region_scale_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !6237
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6238
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 7, !dbg !6239
  store void (%struct.bContext*, %struct.wmOperator*)* @region_scale_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !6240
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6241
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !6242
  store i32 (%struct.bContext*)* @ED_operator_areaactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6243
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6244
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 19, !dbg !6245
  store i16 68, i16* %flag, align 8, !dbg !6246
  ret void, !dbg !6247
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_region_flip(%struct.wmOperatorType* %ot) #0 !dbg !6248 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6249, metadata !DIExpression()), !dbg !6250
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6251
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6252
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.129, i64 0, i64 0), i8** %name, align 8, !dbg !6253
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6254
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6255
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.37, i64 0, i64 0), i8** %idname, align 8, !dbg !6256
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6257
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6258
  store i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.130, i64 0, i64 0), i8** %description, align 8, !dbg !6259
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6260
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6261
  store i32 (%struct.bContext*, %struct.wmOperator*)* @region_flip_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6262
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6263
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6264
  store i32 (%struct.bContext*)* @ED_operator_areaactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6265
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6266
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6267
  store i16 0, i16* %flag, align 8, !dbg !6268
  ret void, !dbg !6269
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_header_flip(%struct.wmOperatorType* %ot) #0 !dbg !6270 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6271, metadata !DIExpression()), !dbg !6272
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6273
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6274
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.131, i64 0, i64 0), i8** %name, align 8, !dbg !6275
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6276
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6277
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i8** %idname, align 8, !dbg !6278
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6279
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6280
  store i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.132, i64 0, i64 0), i8** %description, align 8, !dbg !6281
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6282
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6283
  store i32 (%struct.bContext*, %struct.wmOperator*)* @header_flip_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6284
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6285
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6286
  store i32 (%struct.bContext*)* @ED_operator_areaactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6287
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6288
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6289
  store i16 0, i16* %flag, align 8, !dbg !6290
  ret void, !dbg !6291
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_header(%struct.wmOperatorType* %ot) #0 !dbg !6292 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6293, metadata !DIExpression()), !dbg !6294
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6295
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6296
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8** %name, align 8, !dbg !6297
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6298
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6299
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.133, i64 0, i64 0), i8** %description, align 8, !dbg !6300
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6301
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6302
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i8** %idname, align 8, !dbg !6303
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6304
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6305
  store i32 (%struct.bContext*, %struct.wmOperator*)* @header_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6306
  ret void, !dbg !6307
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_header_toggle_menus(%struct.wmOperatorType* %ot) #0 !dbg !6308 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6309, metadata !DIExpression()), !dbg !6310
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6311
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6312
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i64 0, i64 0), i8** %name, align 8, !dbg !6313
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6314
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6315
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0), i8** %idname, align 8, !dbg !6316
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6317
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6318
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.135, i64 0, i64 0), i8** %description, align 8, !dbg !6319
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6320
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6321
  store i32 (%struct.bContext*, %struct.wmOperator*)* @header_toggle_menus_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6322
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6323
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6324
  store i32 (%struct.bContext*)* @ED_operator_areaactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6325
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6326
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6327
  store i16 0, i16* %flag, align 8, !dbg !6328
  ret void, !dbg !6329
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_header_toolbox(%struct.wmOperatorType* %ot) #0 !dbg !6330 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6331, metadata !DIExpression()), !dbg !6332
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6333
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6334
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.136, i64 0, i64 0), i8** %name, align 8, !dbg !6335
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6336
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6337
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.137, i64 0, i64 0), i8** %description, align 8, !dbg !6338
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6339
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6340
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0), i8** %idname, align 8, !dbg !6341
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6342
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !6343
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @header_toolbox_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6344
  ret void, !dbg !6345
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_screen_set(%struct.wmOperatorType* %ot) #0 !dbg !6346 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6347, metadata !DIExpression()), !dbg !6348
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6349
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6350
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.138, i64 0, i64 0), i8** %name, align 8, !dbg !6351
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6352
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6353
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.139, i64 0, i64 0), i8** %description, align 8, !dbg !6354
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6355
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6356
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), i8** %idname, align 8, !dbg !6357
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6358
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6359
  store i32 (%struct.bContext*, %struct.wmOperator*)* @screen_set_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6360
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6361
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6362
  store i32 (%struct.bContext*)* @ED_operator_screenactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6363
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6364
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !6365
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6365
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !6364
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6366
  ret void, !dbg !6367
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_screen_full_area(%struct.wmOperatorType* %ot) #0 !dbg !6368 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6369, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6371, metadata !DIExpression()), !dbg !6372
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6373
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6374
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.140, i64 0, i64 0), i8** %name, align 8, !dbg !6375
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6376
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6377
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.141, i64 0, i64 0), i8** %description, align 8, !dbg !6378
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6379
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6380
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8** %idname, align 8, !dbg !6381
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6382
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6383
  store i32 (%struct.bContext*, %struct.wmOperator*)* @screen_maximize_area_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6384
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6385
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6386
  store i32 (%struct.bContext*)* @ED_operator_areaactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6387
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6388
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6389
  store i16 0, i16* %flag, align 8, !dbg !6390
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6391
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6392
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6392
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6391
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.143, i64 0, i64 0)), !dbg !6393
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !6394
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6395
  call void @RNA_def_property_flag(%struct.PropertyRNA* %9, i32 268435456), !dbg !6396
  ret void, !dbg !6397
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_back_to_previous(%struct.wmOperatorType* %ot) #0 !dbg !6398 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6401, metadata !DIExpression()), !dbg !6402
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6403
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6404
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.144, i64 0, i64 0), i8** %name, align 8, !dbg !6405
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6406
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6407
  store i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.145, i64 0, i64 0), i8** %description, align 8, !dbg !6408
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6409
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6410
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.146, i64 0, i64 0), i8** %idname, align 8, !dbg !6411
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6412
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6413
  store i32 (%struct.bContext*, %struct.wmOperator*)* @fullscreen_back_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6414
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6415
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6416
  store i32 (%struct.bContext*)* @ED_operator_screenactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6417
  ret void, !dbg !6418
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_spacedata_cleanup(%struct.wmOperatorType* %ot) #0 !dbg !6419 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6420, metadata !DIExpression()), !dbg !6421
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6422
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6423
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.148, i64 0, i64 0), i8** %name, align 8, !dbg !6424
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6425
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6426
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.149, i64 0, i64 0), i8** %description, align 8, !dbg !6427
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6428
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6429
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.150, i64 0, i64 0), i8** %idname, align 8, !dbg !6430
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6431
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6432
  store i32 (%struct.bContext*, %struct.wmOperator*)* @spacedata_cleanup_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6433
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6434
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6435
  store i32 (%struct.bContext*)* @WM_operator_winactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6436
  ret void, !dbg !6437
}

declare dso_local void @SCREEN_OT_screenshot(%struct.wmOperatorType*) #2

declare dso_local void @SCREEN_OT_screencast(%struct.wmOperatorType*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_userpref_show(%struct.wmOperatorType* %ot) #0 !dbg !6438 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6439, metadata !DIExpression()), !dbg !6440
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6441
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6442
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.152, i64 0, i64 0), i8** %name, align 8, !dbg !6443
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6444
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6445
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.153, i64 0, i64 0), i8** %description, align 8, !dbg !6446
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6447
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6448
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51, i64 0, i64 0), i8** %idname, align 8, !dbg !6449
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6450
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !6451
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @userpref_show_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6452
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6453
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6454
  store i32 (%struct.bContext*)* @ED_operator_screenactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6455
  ret void, !dbg !6456
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_region_blend(%struct.wmOperatorType* %ot) #0 !dbg !6457 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6458, metadata !DIExpression()), !dbg !6459
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6460
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6461
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.154, i64 0, i64 0), i8** %name, align 8, !dbg !6462
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6463
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6464
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0), i8** %idname, align 8, !dbg !6465
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6466
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6467
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.155, i64 0, i64 0), i8** %description, align 8, !dbg !6468
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6469
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !6470
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @region_blend_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6471
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6472
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 19, !dbg !6473
  store i16 64, i16* %flag, align 8, !dbg !6474
  ret void, !dbg !6475
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_frame_offset(%struct.wmOperatorType* %ot) #0 !dbg !6476 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6477, metadata !DIExpression()), !dbg !6478
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6479
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6480
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.156, i64 0, i64 0), i8** %name, align 8, !dbg !6481
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6482
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6483
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i8** %idname, align 8, !dbg !6484
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6485
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6486
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.157, i64 0, i64 0), i8** %description, align 8, !dbg !6487
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6488
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6489
  store i32 (%struct.bContext*, %struct.wmOperator*)* @frame_offset_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6490
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6491
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6492
  store i32 (%struct.bContext*)* @ED_operator_screenactive_norender, i32 (%struct.bContext*)** %poll, align 8, !dbg !6493
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6494
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6495
  store i16 0, i16* %flag, align 8, !dbg !6496
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6497
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6498
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6498
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6497
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6499
  ret void, !dbg !6500
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_frame_jump(%struct.wmOperatorType* %ot) #0 !dbg !6501 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6502, metadata !DIExpression()), !dbg !6503
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6504
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6505
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.158, i64 0, i64 0), i8** %name, align 8, !dbg !6506
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6507
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6508
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.159, i64 0, i64 0), i8** %description, align 8, !dbg !6509
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6510
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6511
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i64 0, i64 0), i8** %idname, align 8, !dbg !6512
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6513
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6514
  store i32 (%struct.bContext*, %struct.wmOperator*)* @frame_jump_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6515
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6516
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6517
  store i32 (%struct.bContext*)* @ED_operator_screenactive_norender, i32 (%struct.bContext*)** %poll, align 8, !dbg !6518
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6519
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6520
  store i16 2, i16* %flag, align 8, !dbg !6521
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6522
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6523
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6523
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6522
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.160, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.161, i64 0, i64 0)), !dbg !6524
  ret void, !dbg !6525
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_keyframe_jump(%struct.wmOperatorType* %ot) #0 !dbg !6526 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6527, metadata !DIExpression()), !dbg !6528
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6529
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6530
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.162, i64 0, i64 0), i8** %name, align 8, !dbg !6531
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6532
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6533
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.163, i64 0, i64 0), i8** %description, align 8, !dbg !6534
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6535
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6536
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i8** %idname, align 8, !dbg !6537
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6538
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6539
  store i32 (%struct.bContext*, %struct.wmOperator*)* @keyframe_jump_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6540
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6541
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6542
  store i32 (%struct.bContext*)* @ED_operator_screenactive_norender, i32 (%struct.bContext*)** %poll, align 8, !dbg !6543
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6544
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6545
  store i16 2, i16* %flag, align 8, !dbg !6546
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6547
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6548
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6548
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6547
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0)), !dbg !6549
  ret void, !dbg !6550
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_marker_jump(%struct.wmOperatorType* %ot) #0 !dbg !6551 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6552, metadata !DIExpression()), !dbg !6553
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6554
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6555
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.166, i64 0, i64 0), i8** %name, align 8, !dbg !6556
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6557
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6558
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i64 0, i64 0), i8** %description, align 8, !dbg !6559
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6560
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6561
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.168, i64 0, i64 0), i8** %idname, align 8, !dbg !6562
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6563
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6564
  store i32 (%struct.bContext*, %struct.wmOperator*)* @marker_jump_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6565
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6566
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6567
  store i32 (%struct.bContext*)* @ED_operator_screenactive_norender, i32 (%struct.bContext*)** %poll, align 8, !dbg !6568
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6569
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6570
  store i16 2, i16* %flag, align 8, !dbg !6571
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6572
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6573
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6573
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6572
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0)), !dbg !6574
  ret void, !dbg !6575
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_animation_step(%struct.wmOperatorType* %ot) #0 !dbg !6576 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6577, metadata !DIExpression()), !dbg !6578
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6579
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6580
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.171, i64 0, i64 0), i8** %name, align 8, !dbg !6581
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6582
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6583
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.172, i64 0, i64 0), i8** %description, align 8, !dbg !6584
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6585
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6586
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i8** %idname, align 8, !dbg !6587
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6588
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !6589
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @screen_animation_step, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6590
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6591
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6592
  store i32 (%struct.bContext*)* @ED_operator_screenactive_norender, i32 (%struct.bContext*)** %poll, align 8, !dbg !6593
  ret void, !dbg !6594
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_animation_play(%struct.wmOperatorType* %ot) #0 !dbg !6595 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6596, metadata !DIExpression()), !dbg !6597
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6598, metadata !DIExpression()), !dbg !6599
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6600
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6601
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.173, i64 0, i64 0), i8** %name, align 8, !dbg !6602
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6603
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6604
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.174, i64 0, i64 0), i8** %description, align 8, !dbg !6605
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6606
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6607
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.58, i64 0, i64 0), i8** %idname, align 8, !dbg !6608
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6609
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6610
  store i32 (%struct.bContext*, %struct.wmOperator*)* @screen_animation_play_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6611
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6612
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6613
  store i32 (%struct.bContext*)* @ED_operator_screenactive_norender, i32 (%struct.bContext*)** %poll, align 8, !dbg !6614
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6615
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !6616
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6616
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !6615
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.176, i64 0, i64 0)), !dbg !6617
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !6618
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6619
  call void @RNA_def_property_flag(%struct.PropertyRNA* %8, i32 268435456), !dbg !6620
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6621
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !6622
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !6622
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !6621
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.179, i64 0, i64 0)), !dbg !6623
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !6624
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6625
  call void @RNA_def_property_flag(%struct.PropertyRNA* %12, i32 268435456), !dbg !6626
  ret void, !dbg !6627
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_animation_cancel(%struct.wmOperatorType* %ot) #0 !dbg !6628 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6629, metadata !DIExpression()), !dbg !6630
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6631
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6632
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.180, i64 0, i64 0), i8** %name, align 8, !dbg !6633
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6634
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6635
  store i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.181, i64 0, i64 0), i8** %description, align 8, !dbg !6636
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6637
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6638
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60, i64 0, i64 0), i8** %idname, align 8, !dbg !6639
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6640
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6641
  store i32 (%struct.bContext*, %struct.wmOperator*)* @screen_animation_cancel_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6642
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6643
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6644
  store i32 (%struct.bContext*)* @ED_operator_screenactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6645
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6646
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !6647
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6647
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !6646
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.182, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.184, i64 0, i64 0)), !dbg !6648
  ret void, !dbg !6649
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_new(%struct.wmOperatorType* %ot) #0 !dbg !6650 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6651, metadata !DIExpression()), !dbg !6652
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6653
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6654
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.185, i64 0, i64 0), i8** %name, align 8, !dbg !6655
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6656
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6657
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.186, i64 0, i64 0), i8** %description, align 8, !dbg !6658
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6659
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6660
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.187, i64 0, i64 0), i8** %idname, align 8, !dbg !6661
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6662
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6663
  store i32 (%struct.bContext*, %struct.wmOperator*)* @screen_new_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6664
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6665
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6666
  store i32 (%struct.bContext*)* @WM_operator_winactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !6667
  ret void, !dbg !6668
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCREEN_OT_delete(%struct.wmOperatorType* %ot) #0 !dbg !6669 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6670, metadata !DIExpression()), !dbg !6671
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6672
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6673
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.188, i64 0, i64 0), i8** %name, align 8, !dbg !6674
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6675
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6676
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.189, i64 0, i64 0), i8** %description, align 8, !dbg !6677
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6678
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6679
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.190, i64 0, i64 0), i8** %idname, align 8, !dbg !6680
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6681
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6682
  store i32 (%struct.bContext*, %struct.wmOperator*)* @screen_delete_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6683
  ret void, !dbg !6684
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCENE_OT_new(%struct.wmOperatorType* %ot) #0 !dbg !3588 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6685, metadata !DIExpression()), !dbg !6686
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6687
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6688
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.206, i64 0, i64 0), i8** %name, align 8, !dbg !6689
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6690
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6691
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.207, i64 0, i64 0), i8** %description, align 8, !dbg !6692
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6693
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6694
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.208, i64 0, i64 0), i8** %idname, align 8, !dbg !6695
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6696
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6697
  store i32 (%struct.bContext*, %struct.wmOperator*)* @scene_new_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6698
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6699
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !6700
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6701
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6702
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6703
  store i16 3, i16* %flag, align 8, !dbg !6704
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6705
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6706
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6706
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6705
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.209, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @SCENE_OT_new.type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.210, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.75, i64 0, i64 0)), !dbg !6707
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6708
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 13, !dbg !6709
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !6710
  ret void, !dbg !6711
}

; Function Attrs: noinline nounwind uwtable
define internal void @SCENE_OT_delete(%struct.wmOperatorType* %ot) #0 !dbg !6712 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6713, metadata !DIExpression()), !dbg !6714
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6715
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6716
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.212, i64 0, i64 0), i8** %name, align 8, !dbg !6717
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6718
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6719
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.213, i64 0, i64 0), i8** %description, align 8, !dbg !6720
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6721
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6722
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.214, i64 0, i64 0), i8** %idname, align 8, !dbg !6723
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6724
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6725
  store i32 (%struct.bContext*, %struct.wmOperator*)* @scene_delete_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6726
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6727
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 19, !dbg !6728
  store i16 3, i16* %flag, align 8, !dbg !6729
  ret void, !dbg !6730
}

declare dso_local void @ED_OT_undo(%struct.wmOperatorType*) #2

declare dso_local void @ED_OT_undo_push(%struct.wmOperatorType*) #2

declare dso_local void @ED_OT_redo(%struct.wmOperatorType*) #2

declare dso_local void @ED_OT_undo_history(%struct.wmOperatorType*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ED_keymap_screen(%struct.wmKeyConfig* %keyconf) #0 !dbg !6731 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !6732, metadata !DIExpression()), !dbg !6733
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !6734, metadata !DIExpression()), !dbg !6735
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !6736, metadata !DIExpression()), !dbg !6739
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !6740, metadata !DIExpression()), !dbg !6764
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !6765
  %call = call %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i32 0, i32 0), !dbg !6766
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %keymap, align 8, !dbg !6767
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6768
  %call1 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i32 1, i32 1, i32 0, i32 0), !dbg !6769
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call1, i32 0, i32 17, !dbg !6770
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6770
  call void @RNA_int_set(%struct.PointerRNA* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i32 0), !dbg !6771
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6772
  %call2 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i32 1, i32 1, i32 1, i32 0), !dbg !6773
  %ptr3 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call2, i32 0, i32 17, !dbg !6774
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !6774
  call void @RNA_int_set(%struct.PointerRNA* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i32 1), !dbg !6775
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6776
  %call4 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i32 1, i32 1, i32 2, i32 0), !dbg !6777
  %ptr5 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call4, i32 0, i32 17, !dbg !6778
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !6778
  call void @RNA_int_set(%struct.PointerRNA* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i32 2), !dbg !6779
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6780
  %call6 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 20480, i32 0, i32 0, i32 0), !dbg !6781
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6782
  %call7 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i32 20480, i32 0, i32 0, i32 0), !dbg !6783
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6784
  %call8 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i32 20480, i32 0, i32 1, i32 0), !dbg !6785
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6786
  %call9 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i64 0, i64 0), i32 20480, i32 0, i32 2, i32 0), !dbg !6787
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6788
  %call10 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i32 20481, i32 0, i32 0, i32 0), !dbg !6789
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6790
  %call11 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0), i32 1, i32 1, i32 0, i32 0), !dbg !6791
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6792
  %call12 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i32 3, i32 1, i32 0, i32 0), !dbg !6793
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6794
  %call13 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %14, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i32 308, i32 1, i32 4, i32 0), !dbg !6795
  %15 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !6796
  %call14 = call %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i32 0, i32 0), !dbg !6797
  store %struct.wmKeyMap* %call14, %struct.wmKeyMap** %keymap, align 8, !dbg !6798
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6799
  %call15 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0), i32 3, i32 1, i32 0, i32 0), !dbg !6800
  %17 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !6801
  %call16 = call %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig* %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i32 0, i32 0), !dbg !6802
  store %struct.wmKeyMap* %call16, %struct.wmKeyMap** %keymap, align 8, !dbg !6803
  %18 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6804
  %call17 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i32 273, i32 -1, i32 -1, i32 0), !dbg !6805
  %19 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6806
  %call18 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %19, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0), i32 279, i32 -1, i32 -1, i32 0), !dbg !6807
  %20 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6808
  %call19 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %20, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), i32 139, i32 1, i32 2, i32 0), !dbg !6809
  %ptr20 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call19, i32 0, i32 17, !dbg !6810
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr20, align 8, !dbg !6810
  call void @RNA_int_set(%struct.PointerRNA* %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 1), !dbg !6811
  %22 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6812
  %call21 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %22, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), i32 137, i32 1, i32 2, i32 0), !dbg !6813
  %ptr22 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call21, i32 0, i32 17, !dbg !6814
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr22, align 8, !dbg !6814
  call void @RNA_int_set(%struct.PointerRNA* %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 -1), !dbg !6815
  %24 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6816
  %call23 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i32 140, i32 1, i32 2, i32 0), !dbg !6817
  %25 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6818
  %call24 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %25, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i32 138, i32 1, i32 2, i32 0), !dbg !6819
  %26 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6820
  %call25 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i32 221, i32 1, i32 1, i32 0), !dbg !6821
  %27 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6822
  %call26 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %27, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i32 309, i32 1, i32 4, i32 0), !dbg !6823
  store %struct.wmKeyMapItem* %call26, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6824
  %28 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6825
  %ptr27 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %28, i32 0, i32 17, !dbg !6826
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr27, align 8, !dbg !6826
  call void @RNA_boolean_set(%struct.PointerRNA* %29, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 1), !dbg !6827
  %30 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6828
  %call28 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %30, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i32 20482, i32 0, i32 0, i32 0), !dbg !6829
  store %struct.wmKeyMapItem* %call28, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6830
  %31 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6831
  %ptr29 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %31, i32 0, i32 17, !dbg !6832
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr29, align 8, !dbg !6832
  call void @RNA_boolean_set(%struct.PointerRNA* %32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0), i32 1), !dbg !6833
  %33 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6834
  %call30 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %33, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i64 0, i64 0), i32 302, i32 1, i32 2, i32 0), !dbg !6835
  %34 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6836
  %call31 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %34, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.33, i64 0, i64 0), i32 302, i32 1, i32 4, i32 0), !dbg !6837
  %35 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6838
  %call32 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %35, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i64 0, i64 0), i32 113, i32 1, i32 6, i32 0), !dbg !6839
  %36 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6840
  %call33 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %36, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0), i32 302, i32 1, i32 0, i32 0), !dbg !6841
  %37 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6842
  %call34 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %37, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.36, i64 0, i64 0), i32 114, i32 1, i32 1, i32 0), !dbg !6843
  %38 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6844
  %call35 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %38, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.37, i64 0, i64 0), i32 304, i32 1, i32 0, i32 0), !dbg !6845
  %39 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6846
  %call36 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %39, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i32 305, i32 1, i32 0, i32 0), !dbg !6847
  %40 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6848
  %call37 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i64 0, i64 0), i32 307, i32 1, i32 0, i32 0), !dbg !6849
  %41 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6850
  %call38 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %41, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i64 0, i64 0), i32 220, i32 1, i32 0, i32 0), !dbg !6851
  %42 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6852
  %call39 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %42, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i64 0, i64 0), i32 163, i32 1, i32 0, i32 0), !dbg !6853
  %43 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6854
  %call40 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i64 0, i64 0), i32 218, i32 1, i32 0, i32 0), !dbg !6855
  %44 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6856
  %call41 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i64 0, i64 0), i32 122, i32 1, i32 2, i32 0), !dbg !6857
  %45 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6858
  %call42 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %45, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i64 0, i64 0), i32 122, i32 1, i32 3, i32 0), !dbg !6859
  %46 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6860
  %call43 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %46, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i64 0, i64 0), i32 122, i32 1, i32 6, i32 0), !dbg !6861
  %47 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6862
  %call44 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %47, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i64 0, i64 0), i32 311, i32 1, i32 0, i32 0), !dbg !6863
  store %struct.wmKeyMapItem* %call44, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6864
  %48 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6865
  %ptr45 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %48, i32 0, i32 17, !dbg !6866
  %49 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr45, align 8, !dbg !6866
  call void @RNA_boolean_set(%struct.PointerRNA* %49, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0), i32 1), !dbg !6867
  %50 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6868
  %call46 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %50, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i64 0, i64 0), i32 311, i32 1, i32 2, i32 0), !dbg !6869
  store %struct.wmKeyMapItem* %call46, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6870
  %51 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6871
  %ptr47 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %51, i32 0, i32 17, !dbg !6872
  %52 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr47, align 8, !dbg !6872
  call void @RNA_boolean_set(%struct.PointerRNA* %52, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), i32 1), !dbg !6873
  %53 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6874
  %ptr48 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %53, i32 0, i32 17, !dbg !6875
  %54 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr48, align 8, !dbg !6875
  call void @RNA_boolean_set(%struct.PointerRNA* %54, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0), i32 1), !dbg !6876
  %55 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6877
  %call49 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %55, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.48, i64 0, i64 0), i32 218, i32 1, i32 0, i32 0), !dbg !6878
  %56 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6879
  %call50 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %56, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i64 0, i64 0), i32 310, i32 1, i32 0, i32 0), !dbg !6880
  %57 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6881
  %call51 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %57, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i64 0, i64 0), i32 310, i32 1, i32 2, i32 0), !dbg !6882
  %58 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6883
  %call52 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %58, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51, i64 0, i64 0), i32 117, i32 1, i32 6, i32 0), !dbg !6884
  %59 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !6885
  %call53 = call %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig* %59, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0), i32 0, i32 0), !dbg !6886
  store %struct.wmKeyMap* %call53, %struct.wmKeyMap** %keymap, align 8, !dbg !6887
  %60 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6888
  %call54 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %60, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i32 140, i32 1, i32 1, i32 0), !dbg !6889
  %ptr55 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call54, i32 0, i32 17, !dbg !6890
  %61 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr55, align 8, !dbg !6890
  call void @RNA_int_set(%struct.PointerRNA* %61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 10), !dbg !6891
  %62 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6892
  %call56 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %62, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i32 138, i32 1, i32 1, i32 0), !dbg !6893
  %ptr57 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call56, i32 0, i32 17, !dbg !6894
  %63 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr57, align 8, !dbg !6894
  call void @RNA_int_set(%struct.PointerRNA* %63, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 -10), !dbg !6895
  %64 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6896
  %call58 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i32 137, i32 1, i32 0, i32 0), !dbg !6897
  %ptr59 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call58, i32 0, i32 17, !dbg !6898
  %65 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr59, align 8, !dbg !6898
  call void @RNA_int_set(%struct.PointerRNA* %65, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 -1), !dbg !6899
  %66 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6900
  %call60 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %66, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i32 139, i32 1, i32 0, i32 0), !dbg !6901
  %ptr61 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call60, i32 0, i32 17, !dbg !6902
  %67 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr61, align 8, !dbg !6902
  call void @RNA_int_set(%struct.PointerRNA* %67, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 1), !dbg !6903
  %68 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6904
  %call62 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %68, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i32 11, i32 1, i32 4, i32 0), !dbg !6905
  %ptr63 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call62, i32 0, i32 17, !dbg !6906
  %69 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr63, align 8, !dbg !6906
  call void @RNA_int_set(%struct.PointerRNA* %69, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 1), !dbg !6907
  %70 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6908
  %call64 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %70, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0), i32 10, i32 1, i32 4, i32 0), !dbg !6909
  %ptr65 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call64, i32 0, i32 17, !dbg !6910
  %71 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr65, align 8, !dbg !6910
  call void @RNA_int_set(%struct.PointerRNA* %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 -1), !dbg !6911
  %72 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6912
  %call66 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %72, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i64 0, i64 0), i32 140, i32 1, i32 3, i32 0), !dbg !6913
  %ptr67 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call66, i32 0, i32 17, !dbg !6914
  %73 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr67, align 8, !dbg !6914
  call void @RNA_boolean_set(%struct.PointerRNA* %73, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 1), !dbg !6915
  %74 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6916
  %call68 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %74, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i64 0, i64 0), i32 138, i32 1, i32 3, i32 0), !dbg !6917
  %ptr69 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call68, i32 0, i32 17, !dbg !6918
  %75 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr69, align 8, !dbg !6918
  call void @RNA_boolean_set(%struct.PointerRNA* %75, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 0), !dbg !6919
  %76 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6920
  %call70 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %76, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i64 0, i64 0), i32 139, i32 1, i32 1, i32 0), !dbg !6921
  %ptr71 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call70, i32 0, i32 17, !dbg !6922
  %77 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr71, align 8, !dbg !6922
  call void @RNA_boolean_set(%struct.PointerRNA* %77, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 1), !dbg !6923
  %78 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6924
  %call72 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %78, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i64 0, i64 0), i32 137, i32 1, i32 1, i32 0), !dbg !6925
  %ptr73 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call72, i32 0, i32 17, !dbg !6926
  %79 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr73, align 8, !dbg !6926
  call void @RNA_boolean_set(%struct.PointerRNA* %79, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i32 0), !dbg !6927
  %80 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6928
  %call74 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %80, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i32 140, i32 1, i32 0, i32 0), !dbg !6929
  store %struct.wmKeyMapItem* %call74, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6930
  %81 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6931
  %ptr75 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %81, i32 0, i32 17, !dbg !6932
  %82 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr75, align 8, !dbg !6932
  call void @RNA_boolean_set(%struct.PointerRNA* %82, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i32 1), !dbg !6933
  %83 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6934
  %call76 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %83, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i32 138, i32 1, i32 0, i32 0), !dbg !6935
  store %struct.wmKeyMapItem* %call76, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6936
  %84 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6937
  %ptr77 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %84, i32 0, i32 17, !dbg !6938
  %85 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr77, align 8, !dbg !6938
  call void @RNA_boolean_set(%struct.PointerRNA* %85, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i32 0), !dbg !6939
  %86 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6940
  %call78 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %86, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i32 177, i32 1, i32 0, i32 0), !dbg !6941
  store %struct.wmKeyMapItem* %call78, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6942
  %87 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6943
  %ptr79 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %87, i32 0, i32 17, !dbg !6944
  %88 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr79, align 8, !dbg !6944
  call void @RNA_boolean_set(%struct.PointerRNA* %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i32 1), !dbg !6945
  %89 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6946
  %call80 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %89, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i32 176, i32 1, i32 0, i32 0), !dbg !6947
  store %struct.wmKeyMapItem* %call80, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6948
  %90 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !6949
  %ptr81 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %90, i32 0, i32 17, !dbg !6950
  %91 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr81, align 8, !dbg !6950
  call void @RNA_boolean_set(%struct.PointerRNA* %91, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i32 0), !dbg !6951
  %92 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6952
  %call82 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %92, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.58, i64 0, i64 0), i32 97, i32 1, i32 4, i32 0), !dbg !6953
  %93 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6954
  %call83 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %93, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.58, i64 0, i64 0), i32 97, i32 1, i32 5, i32 0), !dbg !6955
  %ptr84 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %call83, i32 0, i32 17, !dbg !6956
  %94 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr84, align 8, !dbg !6956
  call void @RNA_boolean_set(%struct.PointerRNA* %94, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0), i32 1), !dbg !6957
  %95 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6958
  %call85 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %95, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60, i64 0, i64 0), i32 218, i32 1, i32 0, i32 0), !dbg !6959
  %96 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6960
  %call86 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %96, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.58, i64 0, i64 0), i32 174, i32 1, i32 0, i32 0), !dbg !6961
  %97 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !6962
  %call87 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %97, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60, i64 0, i64 0), i32 175, i32 1, i32 0, i32 0), !dbg !6963
  %call88 = call %struct.ListBase* @WM_dropboxmap_find(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0), i32 0, i32 0), !dbg !6964
  store %struct.ListBase* %call88, %struct.ListBase** %lb, align 8, !dbg !6965
  %98 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !6966
  %call89 = call %struct.wmDropBox* @WM_dropbox_add(%struct.ListBase* %98, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.62, i64 0, i64 0), i32 (%struct.bContext*, %struct.wmDrag*, %struct.wmEvent*)* @open_file_drop_poll, void (%struct.wmDrag*, %struct.wmDropBox*)* @open_file_drop_copy), !dbg !6967
  %99 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !6968
  %call90 = call %struct.wmDropBox* @WM_dropbox_add(%struct.ListBase* %99, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.63, i64 0, i64 0), i32 (%struct.bContext*, %struct.wmDrag*, %struct.wmEvent*)* @UI_drop_color_poll, void (%struct.wmDrag*, %struct.wmDropBox*)* @UI_drop_color_copy), !dbg !6969
  %100 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !6970
  call void @keymap_modal_set(%struct.wmKeyConfig* %100), !dbg !6971
  ret void, !dbg !6972
}

declare dso_local %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig*, i8*, i32, i32) #2

declare dso_local void @RNA_int_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap*, i8*, i32, i32, i32, i32) #2

declare dso_local %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap*, i8*, i32, i32, i32, i32) #2

declare dso_local void @RNA_boolean_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local %struct.ListBase* @WM_dropboxmap_find(i8*, i32, i32) #2

declare dso_local %struct.wmDropBox* @WM_dropbox_add(%struct.ListBase*, i8*, i32 (%struct.bContext*, %struct.wmDrag*, %struct.wmEvent*)*, void (%struct.wmDrag*, %struct.wmDropBox*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @open_file_drop_poll(%struct.bContext* %UNUSED_C, %struct.wmDrag* %drag, %struct.wmEvent* %UNUSED_event) #0 !dbg !6973 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %drag.addr = alloca %struct.wmDrag*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !7000, metadata !DIExpression()), !dbg !7001
  store %struct.wmDrag* %drag, %struct.wmDrag** %drag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmDrag** %drag.addr, metadata !7002, metadata !DIExpression()), !dbg !7003
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !7004, metadata !DIExpression()), !dbg !7005
  %0 = load %struct.wmDrag*, %struct.wmDrag** %drag.addr, align 8, !dbg !7006
  %type = getelementptr inbounds %struct.wmDrag, %struct.wmDrag* %0, i32 0, i32 3, !dbg !7008
  %1 = load i32, i32* %type, align 4, !dbg !7008
  %cmp = icmp eq i32 %1, 2, !dbg !7009
  br i1 %cmp, label %if.then, label %if.end3, !dbg !7010

if.then:                                          ; preds = %entry
  %2 = load %struct.wmDrag*, %struct.wmDrag** %drag.addr, align 8, !dbg !7011
  %icon = getelementptr inbounds %struct.wmDrag, %struct.wmDrag* %2, i32 0, i32 2, !dbg !7014
  %3 = load i32, i32* %icon, align 8, !dbg !7014
  %cmp1 = icmp eq i32 %3, 695, !dbg !7015
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !7016

if.then2:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !7017
  br label %return, !dbg !7017

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !7018

if.end3:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !7019
  br label %return, !dbg !7019

return:                                           ; preds = %if.end3, %if.then2
  %4 = load i32, i32* %retval, align 4, !dbg !7020
  ret i32 %4, !dbg !7020
}

; Function Attrs: noinline nounwind uwtable
define internal void @open_file_drop_copy(%struct.wmDrag* %drag, %struct.wmDropBox* %drop) #0 !dbg !7021 {
entry:
  %drag.addr = alloca %struct.wmDrag*, align 8
  %drop.addr = alloca %struct.wmDropBox*, align 8
  store %struct.wmDrag* %drag, %struct.wmDrag** %drag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmDrag** %drag.addr, metadata !7043, metadata !DIExpression()), !dbg !7044
  store %struct.wmDropBox* %drop, %struct.wmDropBox** %drop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmDropBox** %drop.addr, metadata !7045, metadata !DIExpression()), !dbg !7046
  %0 = load %struct.wmDropBox*, %struct.wmDropBox** %drop.addr, align 8, !dbg !7047
  %ptr = getelementptr inbounds %struct.wmDropBox, %struct.wmDropBox* %0, i32 0, i32 6, !dbg !7048
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7048
  %2 = load %struct.wmDrag*, %struct.wmDrag** %drag.addr, align 8, !dbg !7049
  %path = getelementptr inbounds %struct.wmDrag, %struct.wmDrag* %2, i32 0, i32 5, !dbg !7050
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !7049
  call void @RNA_string_set(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.216, i64 0, i64 0), i8* %arraydecay), !dbg !7051
  %3 = load %struct.wmDropBox*, %struct.wmDropBox** %drop.addr, align 8, !dbg !7052
  %opcontext = getelementptr inbounds %struct.wmDropBox, %struct.wmDropBox* %3, i32 0, i32 7, !dbg !7053
  store i16 6, i16* %opcontext, align 8, !dbg !7054
  ret void, !dbg !7055
}

declare dso_local i32 @UI_drop_color_poll(%struct.bContext*, %struct.wmDrag*, %struct.wmEvent*) #2

declare dso_local void @UI_drop_color_copy(%struct.wmDrag*, %struct.wmDropBox*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @keymap_modal_set(%struct.wmKeyConfig* %keyconf) #0 !dbg !3720 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !7056, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !7058, metadata !DIExpression()), !dbg !7059
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !7060
  %call = call %struct.wmKeyMap* @WM_modalkeymap_add(%struct.wmKeyConfig* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.225, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @keymap_modal_set.modal_items, i64 0, i64 0)), !dbg !7061
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %keymap, align 8, !dbg !7062
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !7063
  %call1 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %1, i32 218, i32 1, i32 -1, i32 0, i32 1), !dbg !7064
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !7065
  %call2 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %2, i32 1, i32 -1, i32 -1, i32 0, i32 2), !dbg !7066
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !7067
  %call3 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %3, i32 220, i32 1, i32 -1, i32 0, i32 2), !dbg !7068
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !7069
  %call4 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %4, i32 163, i32 1, i32 -1, i32 0, i32 2), !dbg !7070
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !7071
  %call5 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %5, i32 212, i32 1, i32 -1, i32 0, i32 3), !dbg !7072
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !7073
  %call6 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %6, i32 212, i32 2, i32 -1, i32 0, i32 4), !dbg !7074
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !7075
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)), !dbg !7076
  ret void, !dbg !7077
}

declare dso_local void @BLI_rcti_init(%struct.rcti*, i32, i32, i32, i32) #2

declare dso_local void @ED_region_tag_redraw(%struct.ARegion*) #2

declare dso_local void @WM_event_remove_timer(%struct.wmWindowManager*, %struct.wmWindow*, %struct.wmTimer*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @actionzone_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !7078 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %az = alloca %struct.AZone*, align 8
  %sad = alloca %struct.sActionzoneData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7083, metadata !DIExpression()), !dbg !7084
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7085, metadata !DIExpression()), !dbg !7086
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7087, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.declare(metadata %struct.AZone** %az, metadata !7089, metadata !DIExpression()), !dbg !7090
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7091
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !7092
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7093
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %1, i32 0, i32 4, !dbg !7094
  %call1 = call %struct.AZone* @is_in_area_actionzone(%struct.ScrArea* %call, i32* %x), !dbg !7095
  store %struct.AZone* %call1, %struct.AZone** %az, align 8, !dbg !7090
  call void @llvm.dbg.declare(metadata %struct.sActionzoneData** %sad, metadata !7096, metadata !DIExpression()), !dbg !7108
  %2 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !7109
  %cmp = icmp eq %struct.AZone* %2, null, !dbg !7111
  br i1 %cmp, label %if.then, label %if.end, !dbg !7112

if.then:                                          ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !7113
  br label %return, !dbg !7113

if.end:                                           ; preds = %entry
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7114
  %call2 = call i8* %3(i64 40, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.68, i64 0, i64 0)), !dbg !7114
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7115
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 5, !dbg !7116
  store i8* %call2, i8** %customdata, align 8, !dbg !7117
  %5 = bitcast i8* %call2 to %struct.sActionzoneData*, !dbg !7115
  store %struct.sActionzoneData* %5, %struct.sActionzoneData** %sad, align 8, !dbg !7118
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7119
  %call3 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %6), !dbg !7120
  %7 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7121
  %sa1 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %7, i32 0, i32 0, !dbg !7122
  store %struct.ScrArea* %call3, %struct.ScrArea** %sa1, align 8, !dbg !7123
  %8 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !7124
  %9 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7125
  %az4 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %9, i32 0, i32 2, !dbg !7126
  store %struct.AZone* %8, %struct.AZone** %az4, align 8, !dbg !7127
  %10 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7128
  %x5 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %10, i32 0, i32 4, !dbg !7129
  %11 = load i32, i32* %x5, align 4, !dbg !7129
  %12 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7130
  %x6 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %12, i32 0, i32 3, !dbg !7131
  store i32 %11, i32* %x6, align 8, !dbg !7132
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7133
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 5, !dbg !7134
  %14 = load i32, i32* %y, align 8, !dbg !7134
  %15 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7135
  %y7 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %15, i32 0, i32 4, !dbg !7136
  store i32 %14, i32* %y7, align 4, !dbg !7137
  %16 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7138
  %az8 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %16, i32 0, i32 2, !dbg !7138
  %17 = load %struct.AZone*, %struct.AZone** %az8, align 8, !dbg !7138
  %type = getelementptr inbounds %struct.AZone, %struct.AZone* %17, i32 0, i32 3, !dbg !7138
  %18 = load i32, i32* %type, align 8, !dbg !7138
  %cmp9 = icmp eq i32 %18, 2, !dbg !7138
  br i1 %cmp9, label %if.then13, label %lor.lhs.false, !dbg !7138

lor.lhs.false:                                    ; preds = %if.end
  %19 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7138
  %az10 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %19, i32 0, i32 2, !dbg !7138
  %20 = load %struct.AZone*, %struct.AZone** %az10, align 8, !dbg !7138
  %type11 = getelementptr inbounds %struct.AZone, %struct.AZone* %20, i32 0, i32 3, !dbg !7138
  %21 = load i32, i32* %type11, align 8, !dbg !7138
  %cmp12 = icmp eq i32 %21, 3, !dbg !7138
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !7140

if.then13:                                        ; preds = %lor.lhs.false, %if.end
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7141
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7143
  %24 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7144
  %az14 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %24, i32 0, i32 2, !dbg !7145
  %25 = load %struct.AZone*, %struct.AZone** %az14, align 8, !dbg !7145
  %type15 = getelementptr inbounds %struct.AZone, %struct.AZone* %25, i32 0, i32 3, !dbg !7146
  %26 = load i32, i32* %type15, align 8, !dbg !7146
  call void @actionzone_apply(%struct.bContext* %22, %struct.wmOperator* %23, i32 %26), !dbg !7147
  %27 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7148
  call void @actionzone_exit(%struct.wmOperator* %27), !dbg !7149
  store i32 4, i32* %retval, align 4, !dbg !7150
  br label %return, !dbg !7150

if.else:                                          ; preds = %lor.lhs.false
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7151
  %29 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7153
  %call16 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %28, %struct.wmOperator* %29), !dbg !7154
  store i32 1, i32* %retval, align 4, !dbg !7155
  br label %return, !dbg !7155

return:                                           ; preds = %if.else, %if.then13, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !7156
  ret i32 %30, !dbg !7156
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @actionzone_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !7157 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %sc = alloca %struct.bScreen*, align 8
  %sad = alloca %struct.sActionzoneData*, align 8
  %winsize_x = alloca i32, align 4
  %winsize_y = alloca i32, align 4
  %is_gesture = alloca i8, align 1
  %delta_x = alloca i32, align 4
  %delta_y = alloca i32, align 4
  %delta_min = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7158, metadata !DIExpression()), !dbg !7159
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7160, metadata !DIExpression()), !dbg !7161
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7162, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !7164, metadata !DIExpression()), !dbg !7165
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7166
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !7167
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !7165
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !7168, metadata !DIExpression()), !dbg !7169
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7170
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !7171
  store %struct.bScreen* %call1, %struct.bScreen** %sc, align 8, !dbg !7169
  call void @llvm.dbg.declare(metadata %struct.sActionzoneData** %sad, metadata !7172, metadata !DIExpression()), !dbg !7173
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7174
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 5, !dbg !7175
  %3 = load i8*, i8** %customdata, align 8, !dbg !7175
  %4 = bitcast i8* %3 to %struct.sActionzoneData*, !dbg !7174
  store %struct.sActionzoneData* %4, %struct.sActionzoneData** %sad, align 8, !dbg !7173
  call void @llvm.dbg.declare(metadata i32* %winsize_x, metadata !7176, metadata !DIExpression()), !dbg !7177
  %5 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7178
  %call2 = call i32 @WM_window_pixels_x(%struct.wmWindow* %5), !dbg !7179
  store i32 %call2, i32* %winsize_x, align 4, !dbg !7177
  call void @llvm.dbg.declare(metadata i32* %winsize_y, metadata !7180, metadata !DIExpression()), !dbg !7181
  %6 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7182
  %call3 = call i32 @WM_window_pixels_y(%struct.wmWindow* %6), !dbg !7183
  store i32 %call3, i32* %winsize_y, align 4, !dbg !7181
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7184
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 2, !dbg !7185
  %8 = load i16, i16* %type, align 8, !dbg !7185
  %conv = sext i16 %8 to i32, !dbg !7184
  switch i32 %conv, label %sw.epilog [
    i32 4, label %sw.bb
    i32 218, label %sw.bb82
    i32 1, label %sw.bb83
  ], !dbg !7186

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %is_gesture, metadata !7187, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.declare(metadata i32* %delta_x, metadata !7191, metadata !DIExpression()), !dbg !7192
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7193
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 4, !dbg !7194
  %10 = load i32, i32* %x, align 4, !dbg !7194
  %11 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7195
  %x4 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %11, i32 0, i32 3, !dbg !7196
  %12 = load i32, i32* %x4, align 8, !dbg !7196
  %sub = sub nsw i32 %10, %12, !dbg !7197
  store i32 %sub, i32* %delta_x, align 4, !dbg !7192
  call void @llvm.dbg.declare(metadata i32* %delta_y, metadata !7198, metadata !DIExpression()), !dbg !7199
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7200
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 5, !dbg !7201
  %14 = load i32, i32* %y, align 8, !dbg !7201
  %15 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7202
  %y5 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %15, i32 0, i32 4, !dbg !7203
  %16 = load i32, i32* %y5, align 4, !dbg !7203
  %sub6 = sub nsw i32 %14, %16, !dbg !7204
  store i32 %sub6, i32* %delta_y, align 4, !dbg !7199
  %17 = load i32, i32* %delta_y, align 4, !dbg !7205
  %18 = load i32, i32* %delta_x, align 4, !dbg !7207
  %cmp = icmp slt i32 %18, 0, !dbg !7207
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7207

cond.true:                                        ; preds = %sw.bb
  %19 = load i32, i32* %delta_x, align 4, !dbg !7207
  %sub8 = sub nsw i32 0, %19, !dbg !7207
  br label %cond.end, !dbg !7207

cond.false:                                       ; preds = %sw.bb
  %20 = load i32, i32* %delta_x, align 4, !dbg !7207
  br label %cond.end, !dbg !7207

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub8, %cond.true ], [ %20, %cond.false ], !dbg !7207
  %cmp9 = icmp sgt i32 %17, %cond, !dbg !7208
  br i1 %cmp9, label %if.then, label %if.else, !dbg !7209

if.then:                                          ; preds = %cond.end
  %21 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7210
  %gesture_dir = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %21, i32 0, i32 5, !dbg !7211
  store i32 110, i32* %gesture_dir, align 8, !dbg !7212
  br label %if.end38, !dbg !7210

if.else:                                          ; preds = %cond.end
  %22 = load i32, i32* %delta_x, align 4, !dbg !7213
  %23 = load i32, i32* %delta_y, align 4, !dbg !7215
  %cmp11 = icmp slt i32 %23, 0, !dbg !7215
  br i1 %cmp11, label %cond.true13, label %cond.false15, !dbg !7215

cond.true13:                                      ; preds = %if.else
  %24 = load i32, i32* %delta_y, align 4, !dbg !7215
  %sub14 = sub nsw i32 0, %24, !dbg !7215
  br label %cond.end16, !dbg !7215

cond.false15:                                     ; preds = %if.else
  %25 = load i32, i32* %delta_y, align 4, !dbg !7215
  br label %cond.end16, !dbg !7215

cond.end16:                                       ; preds = %cond.false15, %cond.true13
  %cond17 = phi i32 [ %sub14, %cond.true13 ], [ %25, %cond.false15 ], !dbg !7215
  %cmp18 = icmp sgt i32 %22, %cond17, !dbg !7216
  br i1 %cmp18, label %if.then20, label %if.else22, !dbg !7217

if.then20:                                        ; preds = %cond.end16
  %26 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7218
  %gesture_dir21 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %26, i32 0, i32 5, !dbg !7219
  store i32 101, i32* %gesture_dir21, align 8, !dbg !7220
  br label %if.end37, !dbg !7218

if.else22:                                        ; preds = %cond.end16
  %27 = load i32, i32* %delta_y, align 4, !dbg !7221
  %28 = load i32, i32* %delta_x, align 4, !dbg !7223
  %cmp23 = icmp slt i32 %28, 0, !dbg !7223
  br i1 %cmp23, label %cond.true25, label %cond.false27, !dbg !7223

cond.true25:                                      ; preds = %if.else22
  %29 = load i32, i32* %delta_x, align 4, !dbg !7223
  %sub26 = sub nsw i32 0, %29, !dbg !7223
  br label %cond.end28, !dbg !7223

cond.false27:                                     ; preds = %if.else22
  %30 = load i32, i32* %delta_x, align 4, !dbg !7223
  br label %cond.end28, !dbg !7223

cond.end28:                                       ; preds = %cond.false27, %cond.true25
  %cond29 = phi i32 [ %sub26, %cond.true25 ], [ %30, %cond.false27 ], !dbg !7223
  %sub30 = sub nsw i32 0, %cond29, !dbg !7224
  %cmp31 = icmp slt i32 %27, %sub30, !dbg !7225
  br i1 %cmp31, label %if.then33, label %if.else35, !dbg !7226

if.then33:                                        ; preds = %cond.end28
  %31 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7227
  %gesture_dir34 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %31, i32 0, i32 5, !dbg !7228
  store i32 115, i32* %gesture_dir34, align 8, !dbg !7229
  br label %if.end, !dbg !7227

if.else35:                                        ; preds = %cond.end28
  %32 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7230
  %gesture_dir36 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %32, i32 0, i32 5, !dbg !7231
  store i32 119, i32* %gesture_dir36, align 8, !dbg !7232
  br label %if.end

if.end:                                           ; preds = %if.else35, %if.then33
  br label %if.end37

if.end37:                                         ; preds = %if.end, %if.then20
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then
  %33 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7233
  %az = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %33, i32 0, i32 2, !dbg !7235
  %34 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !7235
  %type39 = getelementptr inbounds %struct.AZone, %struct.AZone* %34, i32 0, i32 3, !dbg !7236
  %35 = load i32, i32* %type39, align 8, !dbg !7236
  %cmp40 = icmp eq i32 %35, 1, !dbg !7237
  br i1 %cmp40, label %if.then42, label %if.else54, !dbg !7238

if.then42:                                        ; preds = %if.end38
  %36 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7239
  %sa1 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %36, i32 0, i32 0, !dbg !7241
  %37 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !7241
  %38 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7242
  %x43 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %38, i32 0, i32 4, !dbg !7243
  %call44 = call %struct.AZone* @is_in_area_actionzone(%struct.ScrArea* %37, i32* %x43), !dbg !7244
  %39 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7245
  %az45 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %39, i32 0, i32 2, !dbg !7246
  %40 = load %struct.AZone*, %struct.AZone** %az45, align 8, !dbg !7246
  %cmp46 = icmp ne %struct.AZone* %call44, %40, !dbg !7247
  br i1 %cmp46, label %land.rhs, label %land.end, !dbg !7248

land.rhs:                                         ; preds = %if.then42
  %41 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7249
  %42 = load i32, i32* %winsize_x, align 4, !dbg !7250
  %43 = load i32, i32* %winsize_y, align 4, !dbg !7251
  %44 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7252
  %x48 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %44, i32 0, i32 4, !dbg !7253
  %45 = load i32, i32* %x48, align 4, !dbg !7253
  %46 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7254
  %y49 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %46, i32 0, i32 5, !dbg !7255
  %47 = load i32, i32* %y49, align 8, !dbg !7255
  %call50 = call %struct.ScrEdge* @screen_find_active_scredge(%struct.bScreen* %41, i32 %42, i32 %43, i32 %45, i32 %47), !dbg !7256
  %cmp51 = icmp eq %struct.ScrEdge* %call50, null, !dbg !7257
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then42
  %48 = phi i1 [ false, %if.then42 ], [ %cmp51, %land.rhs ], !dbg !7258
  %land.ext = zext i1 %48 to i32, !dbg !7248
  %conv53 = trunc i32 %land.ext to i8, !dbg !7259
  store i8 %conv53, i8* %is_gesture, align 1, !dbg !7260
  br label %if.end74, !dbg !7261

if.else54:                                        ; preds = %if.end38
  call void @llvm.dbg.declare(metadata i32* %delta_min, metadata !7262, metadata !DIExpression()), !dbg !7264
  store i32 1, i32* %delta_min, align 4, !dbg !7264
  %49 = load i32, i32* %delta_x, align 4, !dbg !7265
  %cmp55 = icmp slt i32 %49, 0, !dbg !7265
  br i1 %cmp55, label %cond.true57, label %cond.false59, !dbg !7265

cond.true57:                                      ; preds = %if.else54
  %50 = load i32, i32* %delta_x, align 4, !dbg !7265
  %sub58 = sub nsw i32 0, %50, !dbg !7265
  br label %cond.end60, !dbg !7265

cond.false59:                                     ; preds = %if.else54
  %51 = load i32, i32* %delta_x, align 4, !dbg !7265
  br label %cond.end60, !dbg !7265

cond.end60:                                       ; preds = %cond.false59, %cond.true57
  %cond61 = phi i32 [ %sub58, %cond.true57 ], [ %51, %cond.false59 ], !dbg !7265
  %cmp62 = icmp sgt i32 %cond61, 1, !dbg !7266
  br i1 %cmp62, label %lor.end, label %lor.rhs, !dbg !7267

lor.rhs:                                          ; preds = %cond.end60
  %52 = load i32, i32* %delta_y, align 4, !dbg !7268
  %cmp64 = icmp slt i32 %52, 0, !dbg !7268
  br i1 %cmp64, label %cond.true66, label %cond.false68, !dbg !7268

cond.true66:                                      ; preds = %lor.rhs
  %53 = load i32, i32* %delta_y, align 4, !dbg !7268
  %sub67 = sub nsw i32 0, %53, !dbg !7268
  br label %cond.end69, !dbg !7268

cond.false68:                                     ; preds = %lor.rhs
  %54 = load i32, i32* %delta_y, align 4, !dbg !7268
  br label %cond.end69, !dbg !7268

cond.end69:                                       ; preds = %cond.false68, %cond.true66
  %cond70 = phi i32 [ %sub67, %cond.true66 ], [ %54, %cond.false68 ], !dbg !7268
  %cmp71 = icmp sgt i32 %cond70, 1, !dbg !7269
  br label %lor.end, !dbg !7267

lor.end:                                          ; preds = %cond.end69, %cond.end60
  %55 = phi i1 [ true, %cond.end60 ], [ %cmp71, %cond.end69 ]
  %lor.ext = zext i1 %55 to i32, !dbg !7267
  %conv73 = trunc i32 %lor.ext to i8, !dbg !7270
  store i8 %conv73, i8* %is_gesture, align 1, !dbg !7271
  br label %if.end74

if.end74:                                         ; preds = %lor.end, %land.end
  %56 = load i8, i8* %is_gesture, align 1, !dbg !7272
  %tobool = icmp ne i8 %56, 0, !dbg !7272
  br i1 %tobool, label %if.then75, label %if.end81, !dbg !7274

if.then75:                                        ; preds = %if.end74
  %57 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7275
  %58 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7277
  %x76 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %58, i32 0, i32 4, !dbg !7278
  %59 = load i32, i32* %x76, align 4, !dbg !7278
  %60 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7279
  %y77 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %60, i32 0, i32 5, !dbg !7280
  %61 = load i32, i32* %y77, align 8, !dbg !7280
  %call78 = call %struct.ScrArea* @screen_areahascursor(%struct.bScreen* %57, i32 %59, i32 %61), !dbg !7281
  %62 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7282
  %sa2 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %62, i32 0, i32 1, !dbg !7283
  store %struct.ScrArea* %call78, %struct.ScrArea** %sa2, align 8, !dbg !7284
  %63 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7285
  %64 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7286
  %65 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7287
  %az79 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %65, i32 0, i32 2, !dbg !7288
  %66 = load %struct.AZone*, %struct.AZone** %az79, align 8, !dbg !7288
  %type80 = getelementptr inbounds %struct.AZone, %struct.AZone* %66, i32 0, i32 3, !dbg !7289
  %67 = load i32, i32* %type80, align 8, !dbg !7289
  call void @actionzone_apply(%struct.bContext* %63, %struct.wmOperator* %64, i32 %67), !dbg !7290
  %68 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7291
  call void @actionzone_exit(%struct.wmOperator* %68), !dbg !7292
  store i32 4, i32* %retval, align 4, !dbg !7293
  br label %return, !dbg !7293

if.end81:                                         ; preds = %if.end74
  br label %sw.epilog, !dbg !7294

sw.bb82:                                          ; preds = %entry
  %69 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7295
  call void @actionzone_exit(%struct.wmOperator* %69), !dbg !7296
  store i32 2, i32* %retval, align 4, !dbg !7297
  br label %return, !dbg !7297

sw.bb83:                                          ; preds = %entry
  %70 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7298
  call void @actionzone_exit(%struct.wmOperator* %70), !dbg !7299
  store i32 2, i32* %retval, align 4, !dbg !7300
  br label %return, !dbg !7300

sw.epilog:                                        ; preds = %entry, %if.end81
  store i32 1, i32* %retval, align 4, !dbg !7301
  br label %return, !dbg !7301

return:                                           ; preds = %sw.epilog, %sw.bb83, %sw.bb82, %if.then75
  %71 = load i32, i32* %retval, align 4, !dbg !7302
  ret i32 %71, !dbg !7302
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @actionzone_area_poll(%struct.bContext* %C) #0 !dbg !7303 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %xy = alloca i32*, align 8
  %az = alloca %struct.AZone*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7304, metadata !DIExpression()), !dbg !7305
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !7306, metadata !DIExpression()), !dbg !7307
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7308
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !7309
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !7307
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !7310, metadata !DIExpression()), !dbg !7311
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7312
  %call1 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %1), !dbg !7313
  store %struct.ScrArea* %call1, %struct.ScrArea** %sa, align 8, !dbg !7311
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7314
  %tobool = icmp ne %struct.ScrArea* %2, null, !dbg !7314
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !7316

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7317
  %tobool2 = icmp ne %struct.wmWindow* %3, null, !dbg !7317
  br i1 %tobool2, label %land.lhs.true3, label %if.end10, !dbg !7318

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7319
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %4, i32 0, i32 21, !dbg !7320
  %5 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !7320
  %tobool4 = icmp ne %struct.wmEvent* %5, null, !dbg !7319
  br i1 %tobool4, label %if.then, label %if.end10, !dbg !7321

if.then:                                          ; preds = %land.lhs.true3
  call void @llvm.dbg.declare(metadata i32** %xy, metadata !7322, metadata !DIExpression()), !dbg !7324
  %6 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7325
  %eventstate5 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %6, i32 0, i32 21, !dbg !7326
  %7 = load %struct.wmEvent*, %struct.wmEvent** %eventstate5, align 8, !dbg !7326
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 4, !dbg !7327
  store i32* %x, i32** %xy, align 8, !dbg !7324
  call void @llvm.dbg.declare(metadata %struct.AZone** %az, metadata !7328, metadata !DIExpression()), !dbg !7329
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7330
  %actionzones = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %8, i32 0, i32 22, !dbg !7332
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %actionzones, i32 0, i32 0, !dbg !7333
  %9 = load i8*, i8** %first, align 8, !dbg !7333
  %10 = bitcast i8* %9 to %struct.AZone*, !dbg !7330
  store %struct.AZone* %10, %struct.AZone** %az, align 8, !dbg !7334
  br label %for.cond, !dbg !7335

for.cond:                                         ; preds = %for.inc, %if.then
  %11 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !7336
  %tobool6 = icmp ne %struct.AZone* %11, null, !dbg !7338
  br i1 %tobool6, label %for.body, label %for.end, !dbg !7338

for.body:                                         ; preds = %for.cond
  %12 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !7339
  %rect = getelementptr inbounds %struct.AZone, %struct.AZone* %12, i32 0, i32 9, !dbg !7341
  %13 = load i32*, i32** %xy, align 8, !dbg !7342
  %call7 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %rect, i32* %13), !dbg !7343
  %tobool8 = icmp ne i8 %call7, 0, !dbg !7343
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !7344

if.then9:                                         ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !7345
  br label %return, !dbg !7345

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7346

for.inc:                                          ; preds = %if.end
  %14 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !7347
  %next = getelementptr inbounds %struct.AZone, %struct.AZone* %14, i32 0, i32 0, !dbg !7348
  %15 = load %struct.AZone*, %struct.AZone** %next, align 8, !dbg !7348
  store %struct.AZone* %15, %struct.AZone** %az, align 8, !dbg !7349
  br label %for.cond, !dbg !7350, !llvm.loop !7351

for.end:                                          ; preds = %for.cond
  br label %if.end10, !dbg !7353

if.end10:                                         ; preds = %for.end, %land.lhs.true3, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !7354
  br label %return, !dbg !7354

return:                                           ; preds = %if.end10, %if.then9
  %16 = load i32, i32* %retval, align 4, !dbg !7355
  ret i32 %16, !dbg !7355
}

; Function Attrs: noinline nounwind uwtable
define internal void @actionzone_cancel(%struct.bContext* %UNUSED_C, %struct.wmOperator* %op) #0 !dbg !7356 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !7359, metadata !DIExpression()), !dbg !7360
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7361, metadata !DIExpression()), !dbg !7362
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7363
  call void @actionzone_exit(%struct.wmOperator* %0), !dbg !7364
  ret void, !dbg !7365
}

declare dso_local %struct.PropertyRNA* @RNA_def_int(i8*, i8*, i32, i32, i32, i8*, i8*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @actionzone_apply(%struct.bContext* %C, %struct.wmOperator* %op, i32 %type) #0 !dbg !7366 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %type.addr = alloca i32, align 4
  %event = alloca %struct.wmEvent, align 8
  %win = alloca %struct.wmWindow*, align 8
  %sad = alloca %struct.sActionzoneData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7369, metadata !DIExpression()), !dbg !7370
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7371, metadata !DIExpression()), !dbg !7372
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7373, metadata !DIExpression()), !dbg !7374
  call void @llvm.dbg.declare(metadata %struct.wmEvent* %event, metadata !7375, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !7377, metadata !DIExpression()), !dbg !7378
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7379
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !7380
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !7378
  call void @llvm.dbg.declare(metadata %struct.sActionzoneData** %sad, metadata !7381, metadata !DIExpression()), !dbg !7382
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7383
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 5, !dbg !7384
  %2 = load i8*, i8** %customdata, align 8, !dbg !7384
  %3 = bitcast i8* %2 to %struct.sActionzoneData*, !dbg !7383
  store %struct.sActionzoneData* %3, %struct.sActionzoneData** %sad, align 8, !dbg !7382
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7385
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !7386
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7386
  %call1 = call i32 @RNA_int_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0)), !dbg !7387
  %6 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !7388
  %modifier = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %6, i32 0, i32 6, !dbg !7389
  store i32 %call1, i32* %modifier, align 4, !dbg !7390
  %7 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7391
  call void @wm_event_init_from_window(%struct.wmWindow* %7, %struct.wmEvent* %event), !dbg !7392
  %8 = load i32, i32* %type.addr, align 4, !dbg !7393
  %cmp = icmp eq i32 %8, 1, !dbg !7395
  br i1 %cmp, label %if.then, label %if.else, !dbg !7396

if.then:                                          ; preds = %entry
  %type2 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7397
  store i16 20480, i16* %type2, align 8, !dbg !7398
  br label %if.end8, !dbg !7399

if.else:                                          ; preds = %entry
  %9 = load i32, i32* %type.addr, align 4, !dbg !7400
  %cmp3 = icmp eq i32 %9, 3, !dbg !7402
  br i1 %cmp3, label %if.then4, label %if.else6, !dbg !7403

if.then4:                                         ; preds = %if.else
  %type5 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7404
  store i16 20482, i16* %type5, align 8, !dbg !7405
  br label %if.end, !dbg !7406

if.else6:                                         ; preds = %if.else
  %type7 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7407
  store i16 20481, i16* %type7, align 8, !dbg !7408
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then4
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7409
  store i16 0, i16* %val, align 2, !dbg !7410
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7411
  %customdata9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 5, !dbg !7412
  %11 = load i8*, i8** %customdata9, align 8, !dbg !7412
  %customdata10 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 28, !dbg !7413
  store i8* %11, i8** %customdata10, align 8, !dbg !7414
  %customdatafree = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 26, !dbg !7415
  store i16 1, i16* %customdatafree, align 2, !dbg !7416
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7417
  %customdata11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 5, !dbg !7418
  store i8* null, i8** %customdata11, align 8, !dbg !7419
  %13 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7420
  call void @wm_event_add(%struct.wmWindow* %13, %struct.wmEvent* %event), !dbg !7421
  ret void, !dbg !7422
}

; Function Attrs: noinline nounwind uwtable
define internal void @actionzone_exit(%struct.wmOperator* %op) #0 !dbg !7423 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7426, metadata !DIExpression()), !dbg !7427
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7428
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !7430
  %1 = load i8*, i8** %customdata, align 8, !dbg !7430
  %tobool = icmp ne i8* %1, null, !dbg !7428
  br i1 %tobool, label %if.then, label %if.end, !dbg !7431

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7432
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7433
  %customdata1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !7434
  %4 = load i8*, i8** %customdata1, align 8, !dbg !7434
  call void %2(i8* %4), !dbg !7432
  br label %if.end, !dbg !7432

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7435
  %customdata2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 5, !dbg !7436
  store i8* null, i8** %customdata2, align 8, !dbg !7437
  ret void, !dbg !7438
}

declare dso_local %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @wm_event_init_from_window(%struct.wmWindow*, %struct.wmEvent*) #2

declare dso_local void @wm_event_add(%struct.wmWindow*, %struct.wmEvent*) #2

declare dso_local i32 @WM_window_pixels_x(%struct.wmWindow*) #2

declare dso_local i32 @WM_window_pixels_y(%struct.wmWindow*) #2

declare dso_local %struct.ScrEdge* @screen_find_active_scredge(%struct.bScreen*, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.ScrArea* @screen_areahascursor(%struct.bScreen* %scr, i32 %x, i32 %y) #0 !dbg !7439 {
entry:
  %scr.addr = alloca %struct.bScreen*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bScreen* %scr, %struct.bScreen** %scr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %scr.addr, metadata !7442, metadata !DIExpression()), !dbg !7443
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !7444, metadata !DIExpression()), !dbg !7445
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !7446, metadata !DIExpression()), !dbg !7447
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !7448, metadata !DIExpression()), !dbg !7449
  store %struct.ScrArea* null, %struct.ScrArea** %sa, align 8, !dbg !7449
  %0 = load %struct.bScreen*, %struct.bScreen** %scr.addr, align 8, !dbg !7450
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %0, i32 0, i32 3, !dbg !7451
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !7452
  %1 = load i8*, i8** %first, align 8, !dbg !7452
  %2 = bitcast i8* %1 to %struct.ScrArea*, !dbg !7450
  store %struct.ScrArea* %2, %struct.ScrArea** %sa, align 8, !dbg !7453
  br label %while.cond, !dbg !7454

while.cond:                                       ; preds = %if.end, %entry
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7455
  %tobool = icmp ne %struct.ScrArea* %3, null, !dbg !7454
  br i1 %tobool, label %while.body, label %while.end, !dbg !7454

while.body:                                       ; preds = %while.cond
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7456
  %totrct = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 7, !dbg !7459
  %5 = load i32, i32* %x.addr, align 4, !dbg !7460
  %6 = load i32, i32* %y.addr, align 4, !dbg !7461
  %call = call zeroext i8 @BLI_rcti_isect_pt(%struct.rcti* %totrct, i32 %5, i32 %6), !dbg !7462
  %tobool1 = icmp ne i8 %call, 0, !dbg !7462
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7463

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !7464

if.end:                                           ; preds = %while.body
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7465
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 0, !dbg !7466
  %8 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !7466
  store %struct.ScrArea* %8, %struct.ScrArea** %sa, align 8, !dbg !7467
  br label %while.cond, !dbg !7454, !llvm.loop !7468

while.end:                                        ; preds = %if.then, %while.cond
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7470
  ret %struct.ScrArea* %9, !dbg !7471
}

declare dso_local zeroext i8 @BLI_rcti_isect_pt(%struct.rcti*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @repeat_last_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !7472 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %lastop = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7475, metadata !DIExpression()), !dbg !7476
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7477, metadata !DIExpression()), !dbg !7478
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %lastop, metadata !7479, metadata !DIExpression()), !dbg !7480
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7481
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !7482
  %operators = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %call, i32 0, i32 7, !dbg !7483
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %operators, i32 0, i32 1, !dbg !7484
  %1 = load i8*, i8** %last, align 8, !dbg !7484
  %2 = bitcast i8* %1 to %struct.wmOperator*, !dbg !7482
  store %struct.wmOperator* %2, %struct.wmOperator** %lastop, align 8, !dbg !7480
  %3 = load %struct.wmOperator*, %struct.wmOperator** %lastop, align 8, !dbg !7485
  %tobool = icmp ne %struct.wmOperator* %3, null, !dbg !7485
  br i1 %tobool, label %if.then, label %if.end, !dbg !7487

if.then:                                          ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7488
  %5 = load %struct.wmOperator*, %struct.wmOperator** %lastop, align 8, !dbg !7489
  %call1 = call i32 @WM_operator_repeat(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !7490
  br label %if.end, !dbg !7490

if.end:                                           ; preds = %if.then, %entry
  ret i32 2, !dbg !7491
}

declare dso_local i32 @WM_operator_repeat(%struct.bContext*, %struct.wmOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @repeat_history_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !7492 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %lastop = alloca %struct.wmOperator*, align 8
  %pup = alloca %struct.uiPopupMenu*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %items = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7493, metadata !DIExpression()), !dbg !7494
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7495, metadata !DIExpression()), !dbg !7496
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !7499, metadata !DIExpression()), !dbg !7500
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7501
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !7502
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !7500
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %lastop, metadata !7503, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.declare(metadata %struct.uiPopupMenu** %pup, metadata !7505, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !7510, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.declare(metadata i32* %items, metadata !7512, metadata !DIExpression()), !dbg !7513
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7514, metadata !DIExpression()), !dbg !7515
  %1 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7516
  %operators = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %1, i32 0, i32 7, !dbg !7517
  %call1 = call i32 @BLI_countlist(%struct.ListBase* %operators), !dbg !7518
  store i32 %call1, i32* %items, align 4, !dbg !7519
  %2 = load i32, i32* %items, align 4, !dbg !7520
  %cmp = icmp eq i32 %2, 0, !dbg !7522
  br i1 %cmp, label %if.then, label %if.end, !dbg !7523

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7524
  br label %return, !dbg !7524

if.end:                                           ; preds = %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7525
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7526
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 4, !dbg !7527
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !7527
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !7528
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7528
  %call2 = call i8* @RNA_struct_ui_name(%struct.StructRNA* %6), !dbg !7529
  %call3 = call %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext* %3, i8* %call2, i32 0), !dbg !7530
  store %struct.uiPopupMenu* %call3, %struct.uiPopupMenu** %pup, align 8, !dbg !7531
  %7 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !7532
  %call4 = call %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu* %7), !dbg !7533
  store %struct.uiLayout* %call4, %struct.uiLayout** %layout, align 8, !dbg !7534
  %8 = load i32, i32* %items, align 4, !dbg !7535
  %sub = sub nsw i32 %8, 1, !dbg !7537
  store i32 %sub, i32* %i, align 4, !dbg !7538
  %9 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7539
  %operators5 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %9, i32 0, i32 7, !dbg !7540
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %operators5, i32 0, i32 1, !dbg !7541
  %10 = load i8*, i8** %last, align 8, !dbg !7541
  %11 = bitcast i8* %10 to %struct.wmOperator*, !dbg !7539
  store %struct.wmOperator* %11, %struct.wmOperator** %lastop, align 8, !dbg !7542
  br label %for.cond, !dbg !7543

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load %struct.wmOperator*, %struct.wmOperator** %lastop, align 8, !dbg !7544
  %tobool = icmp ne %struct.wmOperator* %12, null, !dbg !7546
  br i1 %tobool, label %for.body, label %for.end, !dbg !7546

for.body:                                         ; preds = %for.cond
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7547
  %14 = load %struct.wmOperator*, %struct.wmOperator** %lastop, align 8, !dbg !7549
  %call6 = call zeroext i8 @WM_operator_repeat_check(%struct.bContext* %13, %struct.wmOperator* %14), !dbg !7550
  %tobool7 = icmp ne i8 %call6, 0, !dbg !7550
  br i1 %tobool7, label %if.then8, label %if.end13, !dbg !7551

if.then8:                                         ; preds = %for.body
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7552
  %16 = load %struct.wmOperator*, %struct.wmOperator** %lastop, align 8, !dbg !7553
  %type9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 4, !dbg !7554
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type9, align 8, !dbg !7554
  %srna10 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 11, !dbg !7555
  %18 = load %struct.StructRNA*, %struct.StructRNA** %srna10, align 8, !dbg !7555
  %call11 = call i8* @RNA_struct_ui_name(%struct.StructRNA* %18), !dbg !7556
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7557
  %type12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %19, i32 0, i32 4, !dbg !7558
  %20 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type12, align 8, !dbg !7558
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %20, i32 0, i32 1, !dbg !7559
  %21 = load i8*, i8** %idname, align 8, !dbg !7559
  %22 = load i32, i32* %i, align 4, !dbg !7560
  call void @uiItemIntO(%struct.uiLayout* %15, i8* %call11, i32 0, i8* %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i32 %22), !dbg !7561
  br label %if.end13, !dbg !7561

if.end13:                                         ; preds = %if.then8, %for.body
  br label %for.inc, !dbg !7562

for.inc:                                          ; preds = %if.end13
  %23 = load %struct.wmOperator*, %struct.wmOperator** %lastop, align 8, !dbg !7563
  %prev = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %23, i32 0, i32 1, !dbg !7564
  %24 = load %struct.wmOperator*, %struct.wmOperator** %prev, align 8, !dbg !7564
  store %struct.wmOperator* %24, %struct.wmOperator** %lastop, align 8, !dbg !7565
  %25 = load i32, i32* %i, align 4, !dbg !7566
  %dec = add nsw i32 %25, -1, !dbg !7566
  store i32 %dec, i32* %i, align 4, !dbg !7566
  br label %for.cond, !dbg !7567, !llvm.loop !7568

for.end:                                          ; preds = %for.cond
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7570
  %27 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !7571
  call void @uiPupMenuEnd(%struct.bContext* %26, %struct.uiPopupMenu* %27), !dbg !7572
  store i32 32, i32* %retval, align 4, !dbg !7573
  br label %return, !dbg !7573

return:                                           ; preds = %for.end, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !7574
  ret i32 %28, !dbg !7574
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @repeat_history_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7575 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7576, metadata !DIExpression()), !dbg !7577
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7578, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !7580, metadata !DIExpression()), !dbg !7581
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7582
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !7583
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !7581
  %1 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7584
  %operators = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %1, i32 0, i32 7, !dbg !7585
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7586
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !7587
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7587
  %call1 = call i32 @RNA_int_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0)), !dbg !7588
  %call2 = call i8* @BLI_findlink(%struct.ListBase* %operators, i32 %call1), !dbg !7589
  %4 = bitcast i8* %call2 to %struct.wmOperator*, !dbg !7589
  store %struct.wmOperator* %4, %struct.wmOperator** %op.addr, align 8, !dbg !7590
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7591
  %tobool = icmp ne %struct.wmOperator* %5, null, !dbg !7591
  br i1 %tobool, label %if.then, label %if.end, !dbg !7593

if.then:                                          ; preds = %entry
  %6 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7594
  %operators3 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %6, i32 0, i32 7, !dbg !7596
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7597
  %8 = bitcast %struct.wmOperator* %7 to i8*, !dbg !7597
  call void @BLI_remlink(%struct.ListBase* %operators3, i8* %8), !dbg !7598
  %9 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !7599
  %operators4 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %9, i32 0, i32 7, !dbg !7600
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7601
  %11 = bitcast %struct.wmOperator* %10 to i8*, !dbg !7601
  call void @BLI_addtail(%struct.ListBase* %operators4, i8* %11), !dbg !7602
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7603
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7604
  %call5 = call i32 @WM_operator_repeat(%struct.bContext* %12, %struct.wmOperator* %13), !dbg !7605
  br label %if.end, !dbg !7606

if.end:                                           ; preds = %if.then, %entry
  ret i32 4, !dbg !7607
}

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

declare dso_local %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext*, i8*, i32) #2

declare dso_local i8* @RNA_struct_ui_name(%struct.StructRNA*) #2

declare dso_local %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu*) #2

declare dso_local zeroext i8 @WM_operator_repeat_check(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @uiItemIntO(%struct.uiLayout*, i8*, i32, i8*, i8*, i32) #2

declare dso_local void @uiPupMenuEnd(%struct.bContext*, %struct.uiPopupMenu*) #2

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @redo_last_invoke(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %UNUSED_event) #0 !dbg !7608 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %lastop = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7609, metadata !DIExpression()), !dbg !7610
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !7611, metadata !DIExpression()), !dbg !7612
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !7613, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %lastop, metadata !7615, metadata !DIExpression()), !dbg !7616
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7617
  %call = call %struct.wmOperator* @WM_operator_last_redo(%struct.bContext* %0), !dbg !7618
  store %struct.wmOperator* %call, %struct.wmOperator** %lastop, align 8, !dbg !7616
  %1 = load %struct.wmOperator*, %struct.wmOperator** %lastop, align 8, !dbg !7619
  %tobool = icmp ne %struct.wmOperator* %1, null, !dbg !7619
  br i1 %tobool, label %if.then, label %if.end, !dbg !7621

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7622
  %3 = load %struct.wmOperator*, %struct.wmOperator** %lastop, align 8, !dbg !7623
  %call1 = call i32 @WM_operator_redo_popup(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !7624
  br label %if.end, !dbg !7624

if.end:                                           ; preds = %if.then, %entry
  ret i32 2, !dbg !7625
}

declare dso_local %struct.wmOperator* @WM_operator_last_redo(%struct.bContext*) #2

declare dso_local i32 @WM_operator_redo_popup(%struct.bContext*, %struct.wmOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_move_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7626 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7627, metadata !DIExpression()), !dbg !7628
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7629, metadata !DIExpression()), !dbg !7630
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7631
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7633
  %call = call i32 @area_move_init(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !7634
  %tobool = icmp ne i32 %call, 0, !dbg !7634
  br i1 %tobool, label %if.end, label %if.then, !dbg !7635

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7636
  br label %return, !dbg !7636

if.end:                                           ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7637
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7638
  call void @area_move_apply(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !7639
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7640
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7641
  call void @area_move_exit(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !7642
  store i32 4, i32* %retval, align 4, !dbg !7643
  br label %return, !dbg !7643

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !7644
  ret i32 %6, !dbg !7644
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_move_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !7645 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7646, metadata !DIExpression()), !dbg !7647
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7648, metadata !DIExpression()), !dbg !7649
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7650, metadata !DIExpression()), !dbg !7651
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7652
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !7653
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7653
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7654
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 4, !dbg !7655
  %3 = load i32, i32* %x, align 4, !dbg !7655
  call void @RNA_int_set(%struct.PointerRNA* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80, i64 0, i64 0), i32 %3), !dbg !7656
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7657
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !7658
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !7658
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7659
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 5, !dbg !7660
  %7 = load i32, i32* %y, align 8, !dbg !7660
  call void @RNA_int_set(%struct.PointerRNA* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0), i32 %7), !dbg !7661
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7662
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7664
  %call = call i32 @area_move_init(%struct.bContext* %8, %struct.wmOperator* %9), !dbg !7665
  %tobool = icmp ne i32 %call, 0, !dbg !7665
  br i1 %tobool, label %if.end, label %if.then, !dbg !7666

if.then:                                          ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !7667
  br label %return, !dbg !7667

if.end:                                           ; preds = %entry
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7668
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7669
  %call2 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %10, %struct.wmOperator* %11), !dbg !7670
  store i32 1, i32* %retval, align 4, !dbg !7671
  br label %return, !dbg !7671

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7672
  ret i32 %12, !dbg !7672
}

; Function Attrs: noinline nounwind uwtable
define internal void @area_move_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7673 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7674, metadata !DIExpression()), !dbg !7675
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7676, metadata !DIExpression()), !dbg !7677
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7678
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !7679
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7679
  call void @RNA_int_set(%struct.PointerRNA* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 0), !dbg !7680
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7681
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7682
  call void @area_move_apply(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !7683
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7684
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7685
  call void @area_move_exit(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !7686
  ret void, !dbg !7687
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_move_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !7688 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %md = alloca %struct.sAreaMoveData*, align 8
  %delta = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7689, metadata !DIExpression()), !dbg !7690
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7691, metadata !DIExpression()), !dbg !7692
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7693, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.declare(metadata %struct.sAreaMoveData** %md, metadata !7695, metadata !DIExpression()), !dbg !7705
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7706
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !7707
  %1 = load i8*, i8** %customdata, align 8, !dbg !7707
  %2 = bitcast i8* %1 to %struct.sAreaMoveData*, !dbg !7706
  store %struct.sAreaMoveData* %2, %struct.sAreaMoveData** %md, align 8, !dbg !7705
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !7708, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7710, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7712, metadata !DIExpression()), !dbg !7713
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7714
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 2, !dbg !7715
  %4 = load i16, i16* %type, align 8, !dbg !7715
  %conv = sext i16 %4 to i32, !dbg !7714
  switch i32 %conv, label %sw.epilog19 [
    i32 4, label %sw.bb
    i32 20514, label %sw.bb11
  ], !dbg !7716

sw.bb:                                            ; preds = %entry
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7717
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !7720
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7720
  %call = call i32 @RNA_int_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80, i64 0, i64 0)), !dbg !7721
  store i32 %call, i32* %x, align 4, !dbg !7722
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7723
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !7724
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !7724
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0)), !dbg !7725
  store i32 %call2, i32* %y, align 4, !dbg !7726
  %9 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7727
  %dir = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %9, i32 0, i32 4, !dbg !7728
  %10 = load i8, i8* %dir, align 4, !dbg !7728
  %conv3 = zext i8 %10 to i32, !dbg !7727
  %cmp = icmp eq i32 %conv3, 118, !dbg !7729
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7730

cond.true:                                        ; preds = %sw.bb
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7731
  %x5 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 4, !dbg !7732
  %12 = load i32, i32* %x5, align 4, !dbg !7732
  %13 = load i32, i32* %x, align 4, !dbg !7733
  %sub = sub nsw i32 %12, %13, !dbg !7734
  br label %cond.end, !dbg !7730

cond.false:                                       ; preds = %sw.bb
  %14 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7735
  %y6 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %14, i32 0, i32 5, !dbg !7736
  %15 = load i32, i32* %y6, align 8, !dbg !7736
  %16 = load i32, i32* %y, align 4, !dbg !7737
  %sub7 = sub nsw i32 %15, %16, !dbg !7738
  br label %cond.end, !dbg !7730

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %sub7, %cond.false ], !dbg !7730
  store i32 %cond, i32* %delta, align 4, !dbg !7739
  %17 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7740
  %step = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %17, i32 0, i32 3, !dbg !7742
  %18 = load i32, i32* %step, align 4, !dbg !7742
  %tobool = icmp ne i32 %18, 0, !dbg !7740
  br i1 %tobool, label %if.then, label %if.end, !dbg !7743

if.then:                                          ; preds = %cond.end
  %19 = load i32, i32* %delta, align 4, !dbg !7744
  %20 = load i32, i32* %delta, align 4, !dbg !7745
  %21 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7746
  %step8 = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %21, i32 0, i32 3, !dbg !7747
  %22 = load i32, i32* %step8, align 4, !dbg !7747
  %rem = srem i32 %20, %22, !dbg !7748
  %sub9 = sub nsw i32 %19, %rem, !dbg !7749
  store i32 %sub9, i32* %delta, align 4, !dbg !7750
  br label %if.end, !dbg !7751

if.end:                                           ; preds = %if.then, %cond.end
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7752
  %ptr10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %23, i32 0, i32 7, !dbg !7753
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr10, align 8, !dbg !7753
  %25 = load i32, i32* %delta, align 4, !dbg !7754
  call void @RNA_int_set(%struct.PointerRNA* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i32 %25), !dbg !7755
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7756
  %27 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7757
  call void @area_move_apply(%struct.bContext* %26, %struct.wmOperator* %27), !dbg !7758
  br label %sw.epilog19, !dbg !7759

sw.bb11:                                          ; preds = %entry
  %28 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7760
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %28, i32 0, i32 3, !dbg !7762
  %29 = load i16, i16* %val, align 2, !dbg !7762
  %conv12 = sext i16 %29 to i32, !dbg !7760
  switch i32 %conv12, label %sw.epilog [
    i32 2, label %sw.bb13
    i32 1, label %sw.bb14
    i32 3, label %sw.bb15
    i32 4, label %sw.bb17
  ], !dbg !7763

sw.bb13:                                          ; preds = %sw.bb11
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7764
  %31 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7766
  call void @area_move_exit(%struct.bContext* %30, %struct.wmOperator* %31), !dbg !7767
  store i32 4, i32* %retval, align 4, !dbg !7768
  br label %return, !dbg !7768

sw.bb14:                                          ; preds = %sw.bb11
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7769
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7770
  call void @area_move_cancel(%struct.bContext* %32, %struct.wmOperator* %33), !dbg !7771
  store i32 2, i32* %retval, align 4, !dbg !7772
  br label %return, !dbg !7772

sw.bb15:                                          ; preds = %sw.bb11
  %34 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7773
  %step16 = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %34, i32 0, i32 3, !dbg !7774
  store i32 10, i32* %step16, align 4, !dbg !7775
  br label %sw.epilog, !dbg !7776

sw.bb17:                                          ; preds = %sw.bb11
  %35 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7777
  %step18 = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %35, i32 0, i32 3, !dbg !7778
  store i32 0, i32* %step18, align 4, !dbg !7779
  br label %sw.epilog, !dbg !7780

sw.epilog:                                        ; preds = %sw.bb11, %sw.bb17, %sw.bb15
  br label %sw.epilog19, !dbg !7781

sw.epilog19:                                      ; preds = %entry, %sw.epilog, %if.end
  store i32 1, i32* %retval, align 4, !dbg !7782
  br label %return, !dbg !7782

return:                                           ; preds = %sw.epilog19, %sw.bb14, %sw.bb13
  %36 = load i32, i32* %retval, align 4, !dbg !7783
  ret i32 %36, !dbg !7783
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_move_init(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7784 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sc = alloca %struct.bScreen*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %actedge = alloca %struct.ScrEdge*, align 8
  %md = alloca %struct.sAreaMoveData*, align 8
  %v1 = alloca %struct.ScrVert*, align 8
  %winsize_x = alloca i32, align 4
  %winsize_y = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7785, metadata !DIExpression()), !dbg !7786
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7787, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !7789, metadata !DIExpression()), !dbg !7790
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7791
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !7792
  store %struct.bScreen* %call, %struct.bScreen** %sc, align 8, !dbg !7790
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !7793, metadata !DIExpression()), !dbg !7794
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7795
  %call1 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %1), !dbg !7796
  store %struct.wmWindow* %call1, %struct.wmWindow** %win, align 8, !dbg !7794
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %actedge, metadata !7797, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.declare(metadata %struct.sAreaMoveData** %md, metadata !7799, metadata !DIExpression()), !dbg !7800
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %v1, metadata !7801, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.declare(metadata i32* %winsize_x, metadata !7803, metadata !DIExpression()), !dbg !7804
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7805
  %call2 = call i32 @WM_window_pixels_x(%struct.wmWindow* %2), !dbg !7806
  store i32 %call2, i32* %winsize_x, align 4, !dbg !7804
  call void @llvm.dbg.declare(metadata i32* %winsize_y, metadata !7807, metadata !DIExpression()), !dbg !7808
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7809
  %call3 = call i32 @WM_window_pixels_y(%struct.wmWindow* %3), !dbg !7810
  store i32 %call3, i32* %winsize_y, align 4, !dbg !7808
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7811, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7813, metadata !DIExpression()), !dbg !7814
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7815
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !7816
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7816
  %call4 = call i32 @RNA_int_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80, i64 0, i64 0)), !dbg !7817
  store i32 %call4, i32* %x, align 4, !dbg !7818
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7819
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !7820
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !7820
  %call6 = call i32 @RNA_int_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i64 0, i64 0)), !dbg !7821
  store i32 %call6, i32* %y, align 4, !dbg !7822
  %8 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7823
  %9 = load i32, i32* %winsize_x, align 4, !dbg !7824
  %10 = load i32, i32* %winsize_y, align 4, !dbg !7825
  %11 = load i32, i32* %x, align 4, !dbg !7826
  %12 = load i32, i32* %y, align 4, !dbg !7827
  %call7 = call %struct.ScrEdge* @screen_find_active_scredge(%struct.bScreen* %8, i32 %9, i32 %10, i32 %11, i32 %12), !dbg !7828
  store %struct.ScrEdge* %call7, %struct.ScrEdge** %actedge, align 8, !dbg !7829
  %13 = load %struct.ScrEdge*, %struct.ScrEdge** %actedge, align 8, !dbg !7830
  %cmp = icmp eq %struct.ScrEdge* %13, null, !dbg !7832
  br i1 %cmp, label %if.then, label %if.end, !dbg !7833

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7834
  br label %return, !dbg !7834

if.end:                                           ; preds = %entry
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7835
  %call8 = call i8* %14(i64 20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.85, i64 0, i64 0)), !dbg !7835
  %15 = bitcast i8* %call8 to %struct.sAreaMoveData*, !dbg !7835
  store %struct.sAreaMoveData* %15, %struct.sAreaMoveData** %md, align 8, !dbg !7836
  %16 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7837
  %17 = bitcast %struct.sAreaMoveData* %16 to i8*, !dbg !7837
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7838
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %18, i32 0, i32 5, !dbg !7839
  store i8* %17, i8** %customdata, align 8, !dbg !7840
  %19 = load %struct.ScrEdge*, %struct.ScrEdge** %actedge, align 8, !dbg !7841
  %call9 = call zeroext i8 @scredge_is_horizontal(%struct.ScrEdge* %19), !dbg !7842
  %conv = zext i8 %call9 to i32, !dbg !7842
  %tobool = icmp ne i32 %conv, 0, !dbg !7842
  %20 = zext i1 %tobool to i64, !dbg !7842
  %cond = select i1 %tobool, i32 104, i32 118, !dbg !7842
  %conv10 = trunc i32 %cond to i8, !dbg !7842
  %21 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7843
  %dir = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %21, i32 0, i32 4, !dbg !7844
  store i8 %conv10, i8* %dir, align 4, !dbg !7845
  %22 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7846
  %dir11 = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %22, i32 0, i32 4, !dbg !7848
  %23 = load i8, i8* %dir11, align 4, !dbg !7848
  %conv12 = zext i8 %23 to i32, !dbg !7846
  %cmp13 = icmp eq i32 %conv12, 104, !dbg !7849
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !7850

if.then15:                                        ; preds = %if.end
  %24 = load %struct.ScrEdge*, %struct.ScrEdge** %actedge, align 8, !dbg !7851
  %v116 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %24, i32 0, i32 2, !dbg !7852
  %25 = load %struct.ScrVert*, %struct.ScrVert** %v116, align 8, !dbg !7852
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %25, i32 0, i32 3, !dbg !7853
  %y17 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 1, !dbg !7854
  %26 = load i16, i16* %y17, align 2, !dbg !7854
  %conv18 = sext i16 %26 to i32, !dbg !7851
  %27 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7855
  %origval = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %27, i32 0, i32 2, !dbg !7856
  store i32 %conv18, i32* %origval, align 4, !dbg !7857
  br label %if.end24, !dbg !7855

if.else:                                          ; preds = %if.end
  %28 = load %struct.ScrEdge*, %struct.ScrEdge** %actedge, align 8, !dbg !7858
  %v119 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %28, i32 0, i32 2, !dbg !7859
  %29 = load %struct.ScrVert*, %struct.ScrVert** %v119, align 8, !dbg !7859
  %vec20 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %29, i32 0, i32 3, !dbg !7860
  %x21 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec20, i32 0, i32 0, !dbg !7861
  %30 = load i16, i16* %x21, align 8, !dbg !7861
  %conv22 = sext i16 %30 to i32, !dbg !7858
  %31 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7862
  %origval23 = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %31, i32 0, i32 2, !dbg !7863
  store i32 %conv22, i32* %origval23, align 4, !dbg !7864
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then15
  %32 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7865
  %33 = load %struct.ScrEdge*, %struct.ScrEdge** %actedge, align 8, !dbg !7866
  call void @select_connected_scredge(%struct.bScreen* %32, %struct.ScrEdge* %33), !dbg !7867
  %34 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7868
  %vertbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %34, i32 0, i32 1, !dbg !7870
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase, i32 0, i32 0, !dbg !7871
  %35 = load i8*, i8** %first, align 8, !dbg !7871
  %36 = bitcast i8* %35 to %struct.ScrVert*, !dbg !7868
  store %struct.ScrVert* %36, %struct.ScrVert** %v1, align 8, !dbg !7872
  br label %for.cond, !dbg !7873

for.cond:                                         ; preds = %for.inc, %if.end24
  %37 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !7874
  %tobool25 = icmp ne %struct.ScrVert* %37, null, !dbg !7876
  br i1 %tobool25, label %for.body, label %for.end, !dbg !7876

for.body:                                         ; preds = %for.cond
  %38 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !7877
  %flag = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %38, i32 0, i32 4, !dbg !7878
  %39 = load i16, i16* %flag, align 4, !dbg !7878
  %40 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !7879
  %editflag = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %40, i32 0, i32 5, !dbg !7880
  store i16 %39, i16* %editflag, align 2, !dbg !7881
  br label %for.inc, !dbg !7879

for.inc:                                          ; preds = %for.body
  %41 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !7882
  %next = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %41, i32 0, i32 0, !dbg !7883
  %42 = load %struct.ScrVert*, %struct.ScrVert** %next, align 8, !dbg !7883
  store %struct.ScrVert* %42, %struct.ScrVert** %v1, align 8, !dbg !7884
  br label %for.cond, !dbg !7885, !llvm.loop !7886

for.end:                                          ; preds = %for.cond
  %43 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7888
  %44 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7889
  %dir26 = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %44, i32 0, i32 4, !dbg !7890
  %45 = load i8, i8* %dir26, align 4, !dbg !7890
  %conv27 = zext i8 %45 to i32, !dbg !7889
  %46 = load i32, i32* %winsize_x, align 4, !dbg !7891
  %47 = load i32, i32* %winsize_y, align 4, !dbg !7892
  %48 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7893
  %bigger = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %48, i32 0, i32 0, !dbg !7894
  %49 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7895
  %smaller = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %49, i32 0, i32 1, !dbg !7896
  call void @area_move_set_limits(%struct.bScreen* %43, i32 %conv27, i32 %46, i32 %47, i32* %bigger, i32* %smaller), !dbg !7897
  store i32 1, i32* %retval, align 4, !dbg !7898
  br label %return, !dbg !7898

return:                                           ; preds = %for.end, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !7899
  ret i32 %50, !dbg !7899
}

; Function Attrs: noinline nounwind uwtable
define internal void @area_move_apply(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7900 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %md = alloca %struct.sAreaMoveData*, align 8
  %delta = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7901, metadata !DIExpression()), !dbg !7902
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7903, metadata !DIExpression()), !dbg !7904
  call void @llvm.dbg.declare(metadata %struct.sAreaMoveData** %md, metadata !7905, metadata !DIExpression()), !dbg !7906
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7907
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !7908
  %1 = load i8*, i8** %customdata, align 8, !dbg !7908
  %2 = bitcast i8* %1 to %struct.sAreaMoveData*, !dbg !7907
  store %struct.sAreaMoveData* %2, %struct.sAreaMoveData** %md, align 8, !dbg !7906
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !7909, metadata !DIExpression()), !dbg !7910
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7911
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !7912
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7912
  %call = call i32 @RNA_int_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)), !dbg !7913
  store i32 %call, i32* %delta, align 4, !dbg !7914
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7915
  %6 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7916
  %origval = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %6, i32 0, i32 2, !dbg !7917
  %7 = load i32, i32* %origval, align 4, !dbg !7917
  %8 = load i32, i32* %delta, align 4, !dbg !7918
  %9 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7919
  %dir = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %9, i32 0, i32 4, !dbg !7920
  %10 = load i8, i8* %dir, align 4, !dbg !7920
  %conv = zext i8 %10 to i32, !dbg !7919
  %11 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7921
  %bigger = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %11, i32 0, i32 0, !dbg !7922
  %12 = load i32, i32* %bigger, align 4, !dbg !7922
  %13 = load %struct.sAreaMoveData*, %struct.sAreaMoveData** %md, align 8, !dbg !7923
  %smaller = getelementptr inbounds %struct.sAreaMoveData, %struct.sAreaMoveData* %13, i32 0, i32 1, !dbg !7924
  %14 = load i32, i32* %smaller, align 4, !dbg !7924
  call void @area_move_apply_do(%struct.bContext* %5, i32 %7, i32 %8, i32 %conv, i32 %12, i32 %14), !dbg !7925
  ret void, !dbg !7926
}

; Function Attrs: noinline nounwind uwtable
define internal void @area_move_exit(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7927 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7928, metadata !DIExpression()), !dbg !7929
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7930, metadata !DIExpression()), !dbg !7931
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7932
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !7934
  %1 = load i8*, i8** %customdata, align 8, !dbg !7934
  %tobool = icmp ne i8* %1, null, !dbg !7932
  br i1 %tobool, label %if.then, label %if.end, !dbg !7935

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7936
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7937
  %customdata1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !7938
  %4 = load i8*, i8** %customdata1, align 8, !dbg !7938
  call void %2(i8* %4), !dbg !7936
  br label %if.end, !dbg !7936

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7939
  %customdata2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 5, !dbg !7940
  store i8* null, i8** %customdata2, align 8, !dbg !7941
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7942
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %6), !dbg !7943
  call void @removedouble_scrverts(%struct.bScreen* %call), !dbg !7944
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7945
  %call3 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %7), !dbg !7946
  call void @removedouble_scredges(%struct.bScreen* %call3), !dbg !7947
  ret void, !dbg !7948
}

declare dso_local zeroext i8 @scredge_is_horizontal(%struct.ScrEdge*) #2

declare dso_local void @select_connected_scredge(%struct.bScreen*, %struct.ScrEdge*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @area_move_set_limits(%struct.bScreen* %sc, i32 %dir, i32 %winsize_x, i32 %winsize_y, i32* %bigger, i32* %smaller) #0 !dbg !7949 {
entry:
  %sc.addr = alloca %struct.bScreen*, align 8
  %dir.addr = alloca i32, align 4
  %winsize_x.addr = alloca i32, align 4
  %winsize_y.addr = alloca i32, align 4
  %bigger.addr = alloca i32*, align 8
  %smaller.addr = alloca i32*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %areaminy = alloca i32, align 4
  %areamin = alloca i32, align 4
  %y1 = alloca i32, align 4
  %x1 = alloca i32, align 4
  store %struct.bScreen* %sc, %struct.bScreen** %sc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc.addr, metadata !7953, metadata !DIExpression()), !dbg !7954
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !7955, metadata !DIExpression()), !dbg !7956
  store i32 %winsize_x, i32* %winsize_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winsize_x.addr, metadata !7957, metadata !DIExpression()), !dbg !7958
  store i32 %winsize_y, i32* %winsize_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %winsize_y.addr, metadata !7959, metadata !DIExpression()), !dbg !7960
  store i32* %bigger, i32** %bigger.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bigger.addr, metadata !7961, metadata !DIExpression()), !dbg !7962
  store i32* %smaller, i32** %smaller.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %smaller.addr, metadata !7963, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !7965, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.declare(metadata i32* %areaminy, metadata !7967, metadata !DIExpression()), !dbg !7968
  %call = call i32 @ED_area_headersize(), !dbg !7969
  store i32 %call, i32* %areaminy, align 4, !dbg !7968
  call void @llvm.dbg.declare(metadata i32* %areamin, metadata !7970, metadata !DIExpression()), !dbg !7971
  %0 = load i32*, i32** %smaller.addr, align 8, !dbg !7972
  store i32 100000, i32* %0, align 4, !dbg !7973
  %1 = load i32*, i32** %bigger.addr, align 8, !dbg !7974
  store i32 100000, i32* %1, align 4, !dbg !7975
  %2 = load %struct.bScreen*, %struct.bScreen** %sc.addr, align 8, !dbg !7976
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %2, i32 0, i32 3, !dbg !7978
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !7979
  %3 = load i8*, i8** %first, align 8, !dbg !7979
  %4 = bitcast i8* %3 to %struct.ScrArea*, !dbg !7976
  store %struct.ScrArea* %4, %struct.ScrArea** %sa, align 8, !dbg !7980
  br label %for.cond, !dbg !7981

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7982
  %tobool = icmp ne %struct.ScrArea* %5, null, !dbg !7984
  br i1 %tobool, label %for.body, label %for.end, !dbg !7984

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %dir.addr, align 4, !dbg !7985
  %cmp = icmp eq i32 %6, 104, !dbg !7988
  br i1 %cmp, label %if.then, label %if.else47, !dbg !7989

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %y1, metadata !7990, metadata !DIExpression()), !dbg !7992
  %7 = load i32, i32* %areaminy, align 4, !dbg !7993
  store i32 %7, i32* %areamin, align 4, !dbg !7994
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7995
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %8, i32 0, i32 2, !dbg !7997
  %9 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !7997
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %9, i32 0, i32 3, !dbg !7998
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 1, !dbg !7999
  %10 = load i16, i16* %y, align 2, !dbg !7999
  %conv = sext i16 %10 to i32, !dbg !7995
  %cmp1 = icmp sgt i32 %conv, 0, !dbg !8000
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !8001

if.then3:                                         ; preds = %if.then
  %11 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8002
  %12 = load i32, i32* %areamin, align 4, !dbg !8003
  %conv4 = sitofp i32 %12 to float, !dbg !8003
  %add = fadd float %conv4, %11, !dbg !8003
  %conv5 = fptosi float %add to i32, !dbg !8003
  store i32 %conv5, i32* %areamin, align 4, !dbg !8003
  br label %if.end, !dbg !8004

if.end:                                           ; preds = %if.then3, %if.then
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8005
  %v2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 3, !dbg !8007
  %14 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !8007
  %vec6 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %14, i32 0, i32 3, !dbg !8008
  %y7 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec6, i32 0, i32 1, !dbg !8009
  %15 = load i16, i16* %y7, align 2, !dbg !8009
  %conv8 = sext i16 %15 to i32, !dbg !8005
  %16 = load i32, i32* %winsize_y.addr, align 4, !dbg !8010
  %sub = sub nsw i32 %16, 1, !dbg !8011
  %cmp9 = icmp slt i32 %conv8, %sub, !dbg !8012
  br i1 %cmp9, label %if.then11, label %if.end15, !dbg !8013

if.then11:                                        ; preds = %if.end
  %17 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8014
  %18 = load i32, i32* %areamin, align 4, !dbg !8015
  %conv12 = sitofp i32 %18 to float, !dbg !8015
  %add13 = fadd float %conv12, %17, !dbg !8015
  %conv14 = fptosi float %add13 to i32, !dbg !8015
  store i32 %conv14, i32* %areamin, align 4, !dbg !8015
  br label %if.end15, !dbg !8016

if.end15:                                         ; preds = %if.then11, %if.end
  %19 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8017
  %v216 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %19, i32 0, i32 3, !dbg !8018
  %20 = load %struct.ScrVert*, %struct.ScrVert** %v216, align 8, !dbg !8018
  %vec17 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %20, i32 0, i32 3, !dbg !8019
  %y18 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec17, i32 0, i32 1, !dbg !8020
  %21 = load i16, i16* %y18, align 2, !dbg !8020
  %conv19 = sext i16 %21 to i32, !dbg !8017
  %22 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8021
  %v120 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %22, i32 0, i32 2, !dbg !8022
  %23 = load %struct.ScrVert*, %struct.ScrVert** %v120, align 8, !dbg !8022
  %vec21 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %23, i32 0, i32 3, !dbg !8023
  %y22 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec21, i32 0, i32 1, !dbg !8024
  %24 = load i16, i16* %y22, align 2, !dbg !8024
  %conv23 = sext i16 %24 to i32, !dbg !8021
  %sub24 = sub nsw i32 %conv19, %conv23, !dbg !8025
  %add25 = add nsw i32 %sub24, 1, !dbg !8026
  %25 = load i32, i32* %areamin, align 4, !dbg !8027
  %sub26 = sub nsw i32 %add25, %25, !dbg !8028
  store i32 %sub26, i32* %y1, align 4, !dbg !8029
  %26 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8030
  %v127 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %26, i32 0, i32 2, !dbg !8032
  %27 = load %struct.ScrVert*, %struct.ScrVert** %v127, align 8, !dbg !8032
  %editflag = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %27, i32 0, i32 5, !dbg !8033
  %28 = load i16, i16* %editflag, align 2, !dbg !8033
  %conv28 = sext i16 %28 to i32, !dbg !8030
  %tobool29 = icmp ne i32 %conv28, 0, !dbg !8030
  br i1 %tobool29, label %land.lhs.true, label %if.else, !dbg !8034

land.lhs.true:                                    ; preds = %if.end15
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8035
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %29, i32 0, i32 5, !dbg !8036
  %30 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !8036
  %editflag30 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %30, i32 0, i32 5, !dbg !8037
  %31 = load i16, i16* %editflag30, align 2, !dbg !8037
  %conv31 = sext i16 %31 to i32, !dbg !8035
  %tobool32 = icmp ne i32 %conv31, 0, !dbg !8035
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !8038

if.then33:                                        ; preds = %land.lhs.true
  %32 = load i32*, i32** %bigger.addr, align 8, !dbg !8039
  %33 = load i32, i32* %32, align 4, !dbg !8040
  %34 = load i32, i32* %y1, align 4, !dbg !8041
  %call34 = call i32 @min_ii(i32 %33, i32 %34), !dbg !8042
  %35 = load i32*, i32** %bigger.addr, align 8, !dbg !8043
  store i32 %call34, i32* %35, align 4, !dbg !8044
  br label %if.end46, !dbg !8045

if.else:                                          ; preds = %land.lhs.true, %if.end15
  %36 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8046
  %v235 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %36, i32 0, i32 3, !dbg !8048
  %37 = load %struct.ScrVert*, %struct.ScrVert** %v235, align 8, !dbg !8048
  %editflag36 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %37, i32 0, i32 5, !dbg !8049
  %38 = load i16, i16* %editflag36, align 2, !dbg !8049
  %conv37 = sext i16 %38 to i32, !dbg !8046
  %tobool38 = icmp ne i32 %conv37, 0, !dbg !8046
  br i1 %tobool38, label %land.lhs.true39, label %if.end45, !dbg !8050

land.lhs.true39:                                  ; preds = %if.else
  %39 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8051
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %39, i32 0, i32 4, !dbg !8052
  %40 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !8052
  %editflag40 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %40, i32 0, i32 5, !dbg !8053
  %41 = load i16, i16* %editflag40, align 2, !dbg !8053
  %conv41 = sext i16 %41 to i32, !dbg !8051
  %tobool42 = icmp ne i32 %conv41, 0, !dbg !8051
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !8054

if.then43:                                        ; preds = %land.lhs.true39
  %42 = load i32*, i32** %smaller.addr, align 8, !dbg !8055
  %43 = load i32, i32* %42, align 4, !dbg !8056
  %44 = load i32, i32* %y1, align 4, !dbg !8057
  %call44 = call i32 @min_ii(i32 %43, i32 %44), !dbg !8058
  %45 = load i32*, i32** %smaller.addr, align 8, !dbg !8059
  store i32 %call44, i32* %45, align 4, !dbg !8060
  br label %if.end45, !dbg !8061

if.end45:                                         ; preds = %if.then43, %land.lhs.true39, %if.else
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then33
  br label %if.end106, !dbg !8062

if.else47:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %x1, metadata !8063, metadata !DIExpression()), !dbg !8065
  store i32 32, i32* %areamin, align 4, !dbg !8066
  %46 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8067
  %v148 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %46, i32 0, i32 2, !dbg !8069
  %47 = load %struct.ScrVert*, %struct.ScrVert** %v148, align 8, !dbg !8069
  %vec49 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %47, i32 0, i32 3, !dbg !8070
  %x = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec49, i32 0, i32 0, !dbg !8071
  %48 = load i16, i16* %x, align 8, !dbg !8071
  %conv50 = sext i16 %48 to i32, !dbg !8067
  %cmp51 = icmp sgt i32 %conv50, 0, !dbg !8072
  br i1 %cmp51, label %if.then53, label %if.end57, !dbg !8073

if.then53:                                        ; preds = %if.else47
  %49 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8074
  %50 = load i32, i32* %areamin, align 4, !dbg !8075
  %conv54 = sitofp i32 %50 to float, !dbg !8075
  %add55 = fadd float %conv54, %49, !dbg !8075
  %conv56 = fptosi float %add55 to i32, !dbg !8075
  store i32 %conv56, i32* %areamin, align 4, !dbg !8075
  br label %if.end57, !dbg !8076

if.end57:                                         ; preds = %if.then53, %if.else47
  %51 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8077
  %v458 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %51, i32 0, i32 5, !dbg !8079
  %52 = load %struct.ScrVert*, %struct.ScrVert** %v458, align 8, !dbg !8079
  %vec59 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %52, i32 0, i32 3, !dbg !8080
  %x60 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec59, i32 0, i32 0, !dbg !8081
  %53 = load i16, i16* %x60, align 8, !dbg !8081
  %conv61 = sext i16 %53 to i32, !dbg !8077
  %54 = load i32, i32* %winsize_x.addr, align 4, !dbg !8082
  %sub62 = sub nsw i32 %54, 1, !dbg !8083
  %cmp63 = icmp slt i32 %conv61, %sub62, !dbg !8084
  br i1 %cmp63, label %if.then65, label %if.end69, !dbg !8085

if.then65:                                        ; preds = %if.end57
  %55 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8086
  %56 = load i32, i32* %areamin, align 4, !dbg !8087
  %conv66 = sitofp i32 %56 to float, !dbg !8087
  %add67 = fadd float %conv66, %55, !dbg !8087
  %conv68 = fptosi float %add67 to i32, !dbg !8087
  store i32 %conv68, i32* %areamin, align 4, !dbg !8087
  br label %if.end69, !dbg !8088

if.end69:                                         ; preds = %if.then65, %if.end57
  %57 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8089
  %v470 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %57, i32 0, i32 5, !dbg !8090
  %58 = load %struct.ScrVert*, %struct.ScrVert** %v470, align 8, !dbg !8090
  %vec71 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %58, i32 0, i32 3, !dbg !8091
  %x72 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec71, i32 0, i32 0, !dbg !8092
  %59 = load i16, i16* %x72, align 8, !dbg !8092
  %conv73 = sext i16 %59 to i32, !dbg !8089
  %60 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8093
  %v174 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %60, i32 0, i32 2, !dbg !8094
  %61 = load %struct.ScrVert*, %struct.ScrVert** %v174, align 8, !dbg !8094
  %vec75 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %61, i32 0, i32 3, !dbg !8095
  %x76 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec75, i32 0, i32 0, !dbg !8096
  %62 = load i16, i16* %x76, align 8, !dbg !8096
  %conv77 = sext i16 %62 to i32, !dbg !8093
  %sub78 = sub nsw i32 %conv73, %conv77, !dbg !8097
  %add79 = add nsw i32 %sub78, 1, !dbg !8098
  %63 = load i32, i32* %areamin, align 4, !dbg !8099
  %sub80 = sub nsw i32 %add79, %63, !dbg !8100
  store i32 %sub80, i32* %x1, align 4, !dbg !8101
  %64 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8102
  %v181 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %64, i32 0, i32 2, !dbg !8104
  %65 = load %struct.ScrVert*, %struct.ScrVert** %v181, align 8, !dbg !8104
  %editflag82 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %65, i32 0, i32 5, !dbg !8105
  %66 = load i16, i16* %editflag82, align 2, !dbg !8105
  %conv83 = sext i16 %66 to i32, !dbg !8102
  %tobool84 = icmp ne i32 %conv83, 0, !dbg !8102
  br i1 %tobool84, label %land.lhs.true85, label %if.else92, !dbg !8106

land.lhs.true85:                                  ; preds = %if.end69
  %67 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8107
  %v286 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %67, i32 0, i32 3, !dbg !8108
  %68 = load %struct.ScrVert*, %struct.ScrVert** %v286, align 8, !dbg !8108
  %editflag87 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %68, i32 0, i32 5, !dbg !8109
  %69 = load i16, i16* %editflag87, align 2, !dbg !8109
  %conv88 = sext i16 %69 to i32, !dbg !8107
  %tobool89 = icmp ne i32 %conv88, 0, !dbg !8107
  br i1 %tobool89, label %if.then90, label %if.else92, !dbg !8110

if.then90:                                        ; preds = %land.lhs.true85
  %70 = load i32*, i32** %bigger.addr, align 8, !dbg !8111
  %71 = load i32, i32* %70, align 4, !dbg !8112
  %72 = load i32, i32* %x1, align 4, !dbg !8113
  %call91 = call i32 @min_ii(i32 %71, i32 %72), !dbg !8114
  %73 = load i32*, i32** %bigger.addr, align 8, !dbg !8115
  store i32 %call91, i32* %73, align 4, !dbg !8116
  br label %if.end105, !dbg !8117

if.else92:                                        ; preds = %land.lhs.true85, %if.end69
  %74 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8118
  %v393 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %74, i32 0, i32 4, !dbg !8120
  %75 = load %struct.ScrVert*, %struct.ScrVert** %v393, align 8, !dbg !8120
  %editflag94 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %75, i32 0, i32 5, !dbg !8121
  %76 = load i16, i16* %editflag94, align 2, !dbg !8121
  %conv95 = sext i16 %76 to i32, !dbg !8118
  %tobool96 = icmp ne i32 %conv95, 0, !dbg !8118
  br i1 %tobool96, label %land.lhs.true97, label %if.end104, !dbg !8122

land.lhs.true97:                                  ; preds = %if.else92
  %77 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8123
  %v498 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %77, i32 0, i32 5, !dbg !8124
  %78 = load %struct.ScrVert*, %struct.ScrVert** %v498, align 8, !dbg !8124
  %editflag99 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %78, i32 0, i32 5, !dbg !8125
  %79 = load i16, i16* %editflag99, align 2, !dbg !8125
  %conv100 = sext i16 %79 to i32, !dbg !8123
  %tobool101 = icmp ne i32 %conv100, 0, !dbg !8123
  br i1 %tobool101, label %if.then102, label %if.end104, !dbg !8126

if.then102:                                       ; preds = %land.lhs.true97
  %80 = load i32*, i32** %smaller.addr, align 8, !dbg !8127
  %81 = load i32, i32* %80, align 4, !dbg !8128
  %82 = load i32, i32* %x1, align 4, !dbg !8129
  %call103 = call i32 @min_ii(i32 %81, i32 %82), !dbg !8130
  %83 = load i32*, i32** %smaller.addr, align 8, !dbg !8131
  store i32 %call103, i32* %83, align 4, !dbg !8132
  br label %if.end104, !dbg !8133

if.end104:                                        ; preds = %if.then102, %land.lhs.true97, %if.else92
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then90
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.end46
  br label %for.inc, !dbg !8134

for.inc:                                          ; preds = %if.end106
  %84 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8135
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %84, i32 0, i32 0, !dbg !8136
  %85 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !8136
  store %struct.ScrArea* %85, %struct.ScrArea** %sa, align 8, !dbg !8137
  br label %for.cond, !dbg !8138, !llvm.loop !8139

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8141
}

declare dso_local i32 @ED_area_headersize() #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !8142 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8146, metadata !DIExpression()), !dbg !8147
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !8148, metadata !DIExpression()), !dbg !8149
  %0 = load i32, i32* %a.addr, align 4, !dbg !8150
  %1 = load i32, i32* %b.addr, align 4, !dbg !8151
  %cmp = icmp slt i32 %0, %1, !dbg !8152
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8153

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !8154
  br label %cond.end, !dbg !8153

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !8155
  br label %cond.end, !dbg !8153

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8153
  ret i32 %cond, !dbg !8156
}

; Function Attrs: noinline nounwind uwtable
define internal void @area_move_apply_do(%struct.bContext* %C, i32 %origval, i32 %delta, i32 %dir, i32 %bigger, i32 %smaller) #0 !dbg !8157 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %origval.addr = alloca i32, align 4
  %delta.addr = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %bigger.addr = alloca i32, align 4
  %smaller.addr = alloca i32, align 4
  %win = alloca %struct.wmWindow*, align 8
  %winsize_x = alloca i32, align 4
  %winsize_y = alloca i32, align 4
  %sc = alloca %struct.bScreen*, align 8
  %v1 = alloca %struct.ScrVert*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %doredraw = alloca i32, align 4
  %oldval = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8160, metadata !DIExpression()), !dbg !8161
  store i32 %origval, i32* %origval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %origval.addr, metadata !8162, metadata !DIExpression()), !dbg !8163
  store i32 %delta, i32* %delta.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %delta.addr, metadata !8164, metadata !DIExpression()), !dbg !8165
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !8166, metadata !DIExpression()), !dbg !8167
  store i32 %bigger, i32* %bigger.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bigger.addr, metadata !8168, metadata !DIExpression()), !dbg !8169
  store i32 %smaller, i32* %smaller.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %smaller.addr, metadata !8170, metadata !DIExpression()), !dbg !8171
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !8172, metadata !DIExpression()), !dbg !8173
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8174
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !8175
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !8173
  call void @llvm.dbg.declare(metadata i32* %winsize_x, metadata !8176, metadata !DIExpression()), !dbg !8177
  %1 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8178
  %call1 = call i32 @WM_window_pixels_x(%struct.wmWindow* %1), !dbg !8179
  store i32 %call1, i32* %winsize_x, align 4, !dbg !8177
  call void @llvm.dbg.declare(metadata i32* %winsize_y, metadata !8180, metadata !DIExpression()), !dbg !8181
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8182
  %call2 = call i32 @WM_window_pixels_y(%struct.wmWindow* %2), !dbg !8183
  store i32 %call2, i32* %winsize_y, align 4, !dbg !8181
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !8184, metadata !DIExpression()), !dbg !8185
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8186
  %call3 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %3), !dbg !8187
  store %struct.bScreen* %call3, %struct.bScreen** %sc, align 8, !dbg !8185
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %v1, metadata !8188, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !8190, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.declare(metadata i32* %doredraw, metadata !8192, metadata !DIExpression()), !dbg !8193
  store i32 0, i32* %doredraw, align 4, !dbg !8193
  call void @llvm.dbg.declare(metadata i32* %oldval, metadata !8194, metadata !DIExpression()), !dbg !8195
  %4 = load i32, i32* %delta.addr, align 4, !dbg !8196
  %5 = load i32, i32* %smaller.addr, align 4, !dbg !8196
  %sub = sub nsw i32 0, %5, !dbg !8196
  %cmp = icmp slt i32 %4, %sub, !dbg !8196
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8196

cond.true:                                        ; preds = %entry
  %6 = load i32, i32* %smaller.addr, align 4, !dbg !8196
  %sub4 = sub nsw i32 0, %6, !dbg !8196
  br label %cond.end8, !dbg !8196

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %delta.addr, align 4, !dbg !8196
  %8 = load i32, i32* %bigger.addr, align 4, !dbg !8196
  %cmp5 = icmp sgt i32 %7, %8, !dbg !8196
  br i1 %cmp5, label %cond.true6, label %cond.false7, !dbg !8196

cond.true6:                                       ; preds = %cond.false
  %9 = load i32, i32* %bigger.addr, align 4, !dbg !8196
  br label %cond.end, !dbg !8196

cond.false7:                                      ; preds = %cond.false
  %10 = load i32, i32* %delta.addr, align 4, !dbg !8196
  br label %cond.end, !dbg !8196

cond.end:                                         ; preds = %cond.false7, %cond.true6
  %cond = phi i32 [ %9, %cond.true6 ], [ %10, %cond.false7 ], !dbg !8196
  br label %cond.end8, !dbg !8196

cond.end8:                                        ; preds = %cond.end, %cond.true
  %cond9 = phi i32 [ %sub4, %cond.true ], [ %cond, %cond.end ], !dbg !8196
  store i32 %cond9, i32* %delta.addr, align 4, !dbg !8197
  %11 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8198
  %vertbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %11, i32 0, i32 1, !dbg !8200
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase, i32 0, i32 0, !dbg !8201
  %12 = load i8*, i8** %first, align 8, !dbg !8201
  %13 = bitcast i8* %12 to %struct.ScrVert*, !dbg !8198
  store %struct.ScrVert* %13, %struct.ScrVert** %v1, align 8, !dbg !8202
  br label %for.cond, !dbg !8203

for.cond:                                         ; preds = %for.inc, %cond.end8
  %14 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8204
  %tobool = icmp ne %struct.ScrVert* %14, null, !dbg !8206
  br i1 %tobool, label %for.body, label %for.end, !dbg !8206

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8207
  %editflag = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %15, i32 0, i32 5, !dbg !8210
  %16 = load i16, i16* %editflag, align 2, !dbg !8210
  %tobool10 = icmp ne i16 %16, 0, !dbg !8207
  br i1 %tobool10, label %if.then, label %if.end153, !dbg !8211

if.then:                                          ; preds = %for.body
  %17 = load i32, i32* %dir.addr, align 4, !dbg !8212
  %cmp11 = icmp eq i32 %17, 118, !dbg !8215
  br i1 %cmp11, label %land.lhs.true, label %if.end78, !dbg !8216

land.lhs.true:                                    ; preds = %if.then
  %18 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8217
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %18, i32 0, i32 3, !dbg !8218
  %x = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 0, !dbg !8219
  %19 = load i16, i16* %x, align 8, !dbg !8219
  %conv = sext i16 %19 to i32, !dbg !8217
  %cmp12 = icmp sgt i32 %conv, 0, !dbg !8220
  br i1 %cmp12, label %land.lhs.true14, label %if.end78, !dbg !8221

land.lhs.true14:                                  ; preds = %land.lhs.true
  %20 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8222
  %vec15 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %20, i32 0, i32 3, !dbg !8223
  %x16 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec15, i32 0, i32 0, !dbg !8224
  %21 = load i16, i16* %x16, align 8, !dbg !8224
  %conv17 = sext i16 %21 to i32, !dbg !8222
  %22 = load i32, i32* %winsize_x, align 4, !dbg !8225
  %sub18 = sub nsw i32 %22, 1, !dbg !8226
  %cmp19 = icmp slt i32 %conv17, %sub18, !dbg !8227
  br i1 %cmp19, label %if.then21, label %if.end78, !dbg !8228

if.then21:                                        ; preds = %land.lhs.true14
  %23 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8229
  %vec22 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %23, i32 0, i32 3, !dbg !8231
  %x23 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec22, i32 0, i32 0, !dbg !8232
  %24 = load i16, i16* %x23, align 8, !dbg !8232
  %conv24 = sext i16 %24 to i32, !dbg !8229
  store i32 %conv24, i32* %oldval, align 4, !dbg !8233
  %25 = load i32, i32* %origval.addr, align 4, !dbg !8234
  %26 = load i32, i32* %delta.addr, align 4, !dbg !8235
  %add = add nsw i32 %25, %26, !dbg !8236
  %conv25 = trunc i32 %add to i16, !dbg !8234
  %27 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8237
  %vec26 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %27, i32 0, i32 3, !dbg !8238
  %x27 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec26, i32 0, i32 0, !dbg !8239
  store i16 %conv25, i16* %x27, align 8, !dbg !8240
  %28 = load i32, i32* %delta.addr, align 4, !dbg !8241
  %29 = load i32, i32* %bigger.addr, align 4, !dbg !8243
  %cmp28 = icmp ne i32 %28, %29, !dbg !8244
  br i1 %cmp28, label %land.lhs.true30, label %if.end, !dbg !8245

land.lhs.true30:                                  ; preds = %if.then21
  %30 = load i32, i32* %delta.addr, align 4, !dbg !8246
  %31 = load i32, i32* %smaller.addr, align 4, !dbg !8247
  %sub31 = sub nsw i32 0, %31, !dbg !8248
  %cmp32 = icmp ne i32 %30, %sub31, !dbg !8249
  br i1 %cmp32, label %if.then34, label %if.end, !dbg !8250

if.then34:                                        ; preds = %land.lhs.true30
  %32 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8251
  %vec35 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %32, i32 0, i32 3, !dbg !8253
  %x36 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec35, i32 0, i32 0, !dbg !8254
  %33 = load i16, i16* %x36, align 8, !dbg !8254
  %conv37 = sext i16 %33 to i32, !dbg !8251
  %rem = srem i32 %conv37, 4, !dbg !8255
  %34 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8256
  %vec38 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %34, i32 0, i32 3, !dbg !8257
  %x39 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec38, i32 0, i32 0, !dbg !8258
  %35 = load i16, i16* %x39, align 8, !dbg !8259
  %conv40 = sext i16 %35 to i32, !dbg !8259
  %sub41 = sub nsw i32 %conv40, %rem, !dbg !8259
  %conv42 = trunc i32 %sub41 to i16, !dbg !8259
  store i16 %conv42, i16* %x39, align 8, !dbg !8259
  %36 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8260
  %vec43 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %36, i32 0, i32 3, !dbg !8260
  %x44 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec43, i32 0, i32 0, !dbg !8260
  %37 = load i16, i16* %x44, align 8, !dbg !8260
  %conv45 = sext i16 %37 to i32, !dbg !8260
  %38 = load i32, i32* %origval.addr, align 4, !dbg !8260
  %39 = load i32, i32* %smaller.addr, align 4, !dbg !8260
  %sub46 = sub nsw i32 %38, %39, !dbg !8260
  %cmp47 = icmp slt i32 %conv45, %sub46, !dbg !8260
  br i1 %cmp47, label %cond.true49, label %cond.false51, !dbg !8260

cond.true49:                                      ; preds = %if.then34
  %40 = load i32, i32* %origval.addr, align 4, !dbg !8260
  %41 = load i32, i32* %smaller.addr, align 4, !dbg !8260
  %sub50 = sub nsw i32 %40, %41, !dbg !8260
  br label %cond.end66, !dbg !8260

cond.false51:                                     ; preds = %if.then34
  %42 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8260
  %vec52 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %42, i32 0, i32 3, !dbg !8260
  %x53 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec52, i32 0, i32 0, !dbg !8260
  %43 = load i16, i16* %x53, align 8, !dbg !8260
  %conv54 = sext i16 %43 to i32, !dbg !8260
  %44 = load i32, i32* %origval.addr, align 4, !dbg !8260
  %45 = load i32, i32* %bigger.addr, align 4, !dbg !8260
  %add55 = add nsw i32 %44, %45, !dbg !8260
  %cmp56 = icmp sgt i32 %conv54, %add55, !dbg !8260
  br i1 %cmp56, label %cond.true58, label %cond.false60, !dbg !8260

cond.true58:                                      ; preds = %cond.false51
  %46 = load i32, i32* %origval.addr, align 4, !dbg !8260
  %47 = load i32, i32* %bigger.addr, align 4, !dbg !8260
  %add59 = add nsw i32 %46, %47, !dbg !8260
  br label %cond.end64, !dbg !8260

cond.false60:                                     ; preds = %cond.false51
  %48 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8260
  %vec61 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %48, i32 0, i32 3, !dbg !8260
  %x62 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec61, i32 0, i32 0, !dbg !8260
  %49 = load i16, i16* %x62, align 8, !dbg !8260
  %conv63 = sext i16 %49 to i32, !dbg !8260
  br label %cond.end64, !dbg !8260

cond.end64:                                       ; preds = %cond.false60, %cond.true58
  %cond65 = phi i32 [ %add59, %cond.true58 ], [ %conv63, %cond.false60 ], !dbg !8260
  br label %cond.end66, !dbg !8260

cond.end66:                                       ; preds = %cond.end64, %cond.true49
  %cond67 = phi i32 [ %sub50, %cond.true49 ], [ %cond65, %cond.end64 ], !dbg !8260
  %conv68 = trunc i32 %cond67 to i16, !dbg !8260
  %50 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8261
  %vec69 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %50, i32 0, i32 3, !dbg !8262
  %x70 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec69, i32 0, i32 0, !dbg !8263
  store i16 %conv68, i16* %x70, align 8, !dbg !8264
  br label %if.end, !dbg !8265

if.end:                                           ; preds = %cond.end66, %land.lhs.true30, %if.then21
  %51 = load i32, i32* %oldval, align 4, !dbg !8266
  %52 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8268
  %vec71 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %52, i32 0, i32 3, !dbg !8269
  %x72 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec71, i32 0, i32 0, !dbg !8270
  %53 = load i16, i16* %x72, align 8, !dbg !8270
  %conv73 = sext i16 %53 to i32, !dbg !8268
  %cmp74 = icmp ne i32 %51, %conv73, !dbg !8271
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !8272

if.then76:                                        ; preds = %if.end
  store i32 1, i32* %doredraw, align 4, !dbg !8273
  br label %if.end77, !dbg !8274

if.end77:                                         ; preds = %if.then76, %if.end
  br label %if.end78, !dbg !8275

if.end78:                                         ; preds = %if.end77, %land.lhs.true14, %land.lhs.true, %if.then
  %54 = load i32, i32* %dir.addr, align 4, !dbg !8276
  %cmp79 = icmp eq i32 %54, 104, !dbg !8278
  br i1 %cmp79, label %land.lhs.true81, label %if.end152, !dbg !8279

land.lhs.true81:                                  ; preds = %if.end78
  %55 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8280
  %vec82 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %55, i32 0, i32 3, !dbg !8281
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec82, i32 0, i32 1, !dbg !8282
  %56 = load i16, i16* %y, align 2, !dbg !8282
  %conv83 = sext i16 %56 to i32, !dbg !8280
  %cmp84 = icmp sgt i32 %conv83, 0, !dbg !8283
  br i1 %cmp84, label %land.lhs.true86, label %if.end152, !dbg !8284

land.lhs.true86:                                  ; preds = %land.lhs.true81
  %57 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8285
  %vec87 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %57, i32 0, i32 3, !dbg !8286
  %y88 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec87, i32 0, i32 1, !dbg !8287
  %58 = load i16, i16* %y88, align 2, !dbg !8287
  %conv89 = sext i16 %58 to i32, !dbg !8285
  %59 = load i32, i32* %winsize_y, align 4, !dbg !8288
  %sub90 = sub nsw i32 %59, 1, !dbg !8289
  %cmp91 = icmp slt i32 %conv89, %sub90, !dbg !8290
  br i1 %cmp91, label %if.then93, label %if.end152, !dbg !8291

if.then93:                                        ; preds = %land.lhs.true86
  %60 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8292
  %vec94 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %60, i32 0, i32 3, !dbg !8294
  %y95 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec94, i32 0, i32 1, !dbg !8295
  %61 = load i16, i16* %y95, align 2, !dbg !8295
  %conv96 = sext i16 %61 to i32, !dbg !8292
  store i32 %conv96, i32* %oldval, align 4, !dbg !8296
  %62 = load i32, i32* %origval.addr, align 4, !dbg !8297
  %63 = load i32, i32* %delta.addr, align 4, !dbg !8298
  %add97 = add nsw i32 %62, %63, !dbg !8299
  %conv98 = trunc i32 %add97 to i16, !dbg !8297
  %64 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8300
  %vec99 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %64, i32 0, i32 3, !dbg !8301
  %y100 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec99, i32 0, i32 1, !dbg !8302
  store i16 %conv98, i16* %y100, align 2, !dbg !8303
  %65 = load i32, i32* %delta.addr, align 4, !dbg !8304
  %66 = load i32, i32* %bigger.addr, align 4, !dbg !8306
  %cmp101 = icmp ne i32 %65, %66, !dbg !8307
  br i1 %cmp101, label %land.lhs.true103, label %if.end144, !dbg !8308

land.lhs.true103:                                 ; preds = %if.then93
  %67 = load i32, i32* %delta.addr, align 4, !dbg !8309
  %68 = load i32, i32* %smaller.addr, align 4, !dbg !8310
  %cmp104 = icmp ne i32 %67, %68, !dbg !8311
  br i1 %cmp104, label %if.then106, label %if.end144, !dbg !8312

if.then106:                                       ; preds = %land.lhs.true103
  %69 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8313
  %vec107 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %69, i32 0, i32 3, !dbg !8315
  %y108 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec107, i32 0, i32 1, !dbg !8316
  %70 = load i16, i16* %y108, align 2, !dbg !8316
  %conv109 = sext i16 %70 to i32, !dbg !8313
  %rem110 = srem i32 %conv109, 4, !dbg !8317
  %71 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8318
  %vec111 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %71, i32 0, i32 3, !dbg !8319
  %y112 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec111, i32 0, i32 1, !dbg !8320
  %72 = load i16, i16* %y112, align 2, !dbg !8321
  %conv113 = sext i16 %72 to i32, !dbg !8321
  %sub114 = sub nsw i32 %conv113, %rem110, !dbg !8321
  %conv115 = trunc i32 %sub114 to i16, !dbg !8321
  store i16 %conv115, i16* %y112, align 2, !dbg !8321
  %73 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8322
  %vec116 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %73, i32 0, i32 3, !dbg !8322
  %y117 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec116, i32 0, i32 1, !dbg !8322
  %74 = load i16, i16* %y117, align 2, !dbg !8322
  %conv118 = sext i16 %74 to i32, !dbg !8322
  %75 = load i32, i32* %origval.addr, align 4, !dbg !8322
  %76 = load i32, i32* %smaller.addr, align 4, !dbg !8322
  %sub119 = sub nsw i32 %75, %76, !dbg !8322
  %cmp120 = icmp slt i32 %conv118, %sub119, !dbg !8322
  br i1 %cmp120, label %cond.true122, label %cond.false124, !dbg !8322

cond.true122:                                     ; preds = %if.then106
  %77 = load i32, i32* %origval.addr, align 4, !dbg !8322
  %78 = load i32, i32* %smaller.addr, align 4, !dbg !8322
  %sub123 = sub nsw i32 %77, %78, !dbg !8322
  br label %cond.end139, !dbg !8322

cond.false124:                                    ; preds = %if.then106
  %79 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8322
  %vec125 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %79, i32 0, i32 3, !dbg !8322
  %y126 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec125, i32 0, i32 1, !dbg !8322
  %80 = load i16, i16* %y126, align 2, !dbg !8322
  %conv127 = sext i16 %80 to i32, !dbg !8322
  %81 = load i32, i32* %origval.addr, align 4, !dbg !8322
  %82 = load i32, i32* %bigger.addr, align 4, !dbg !8322
  %add128 = add nsw i32 %81, %82, !dbg !8322
  %cmp129 = icmp sgt i32 %conv127, %add128, !dbg !8322
  br i1 %cmp129, label %cond.true131, label %cond.false133, !dbg !8322

cond.true131:                                     ; preds = %cond.false124
  %83 = load i32, i32* %origval.addr, align 4, !dbg !8322
  %84 = load i32, i32* %bigger.addr, align 4, !dbg !8322
  %add132 = add nsw i32 %83, %84, !dbg !8322
  br label %cond.end137, !dbg !8322

cond.false133:                                    ; preds = %cond.false124
  %85 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8322
  %vec134 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %85, i32 0, i32 3, !dbg !8322
  %y135 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec134, i32 0, i32 1, !dbg !8322
  %86 = load i16, i16* %y135, align 2, !dbg !8322
  %conv136 = sext i16 %86 to i32, !dbg !8322
  br label %cond.end137, !dbg !8322

cond.end137:                                      ; preds = %cond.false133, %cond.true131
  %cond138 = phi i32 [ %add132, %cond.true131 ], [ %conv136, %cond.false133 ], !dbg !8322
  br label %cond.end139, !dbg !8322

cond.end139:                                      ; preds = %cond.end137, %cond.true122
  %cond140 = phi i32 [ %sub123, %cond.true122 ], [ %cond138, %cond.end137 ], !dbg !8322
  %conv141 = trunc i32 %cond140 to i16, !dbg !8322
  %87 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8323
  %vec142 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %87, i32 0, i32 3, !dbg !8324
  %y143 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec142, i32 0, i32 1, !dbg !8325
  store i16 %conv141, i16* %y143, align 2, !dbg !8326
  br label %if.end144, !dbg !8327

if.end144:                                        ; preds = %cond.end139, %land.lhs.true103, %if.then93
  %88 = load i32, i32* %oldval, align 4, !dbg !8328
  %89 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8330
  %vec145 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %89, i32 0, i32 3, !dbg !8331
  %y146 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec145, i32 0, i32 1, !dbg !8332
  %90 = load i16, i16* %y146, align 2, !dbg !8332
  %conv147 = sext i16 %90 to i32, !dbg !8330
  %cmp148 = icmp ne i32 %88, %conv147, !dbg !8333
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !8334

if.then150:                                       ; preds = %if.end144
  store i32 1, i32* %doredraw, align 4, !dbg !8335
  br label %if.end151, !dbg !8336

if.end151:                                        ; preds = %if.then150, %if.end144
  br label %if.end152, !dbg !8337

if.end152:                                        ; preds = %if.end151, %land.lhs.true86, %land.lhs.true81, %if.end78
  br label %if.end153, !dbg !8338

if.end153:                                        ; preds = %if.end152, %for.body
  br label %for.inc, !dbg !8339

for.inc:                                          ; preds = %if.end153
  %91 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8340
  %next = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %91, i32 0, i32 0, !dbg !8341
  %92 = load %struct.ScrVert*, %struct.ScrVert** %next, align 8, !dbg !8341
  store %struct.ScrVert* %92, %struct.ScrVert** %v1, align 8, !dbg !8342
  br label %for.cond, !dbg !8343, !llvm.loop !8344

for.end:                                          ; preds = %for.cond
  %93 = load i32, i32* %doredraw, align 4, !dbg !8346
  %tobool154 = icmp ne i32 %93, 0, !dbg !8346
  br i1 %tobool154, label %if.then155, label %if.end180, !dbg !8348

if.then155:                                       ; preds = %for.end
  %94 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8349
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %94, i32 0, i32 3, !dbg !8352
  %first156 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !8353
  %95 = load i8*, i8** %first156, align 8, !dbg !8353
  %96 = bitcast i8* %95 to %struct.ScrArea*, !dbg !8349
  store %struct.ScrArea* %96, %struct.ScrArea** %sa, align 8, !dbg !8354
  br label %for.cond157, !dbg !8355

for.cond157:                                      ; preds = %for.inc177, %if.then155
  %97 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8356
  %tobool158 = icmp ne %struct.ScrArea* %97, null, !dbg !8358
  br i1 %tobool158, label %for.body159, label %for.end179, !dbg !8358

for.body159:                                      ; preds = %for.cond157
  %98 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8359
  %v1160 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %98, i32 0, i32 2, !dbg !8362
  %99 = load %struct.ScrVert*, %struct.ScrVert** %v1160, align 8, !dbg !8362
  %editflag161 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %99, i32 0, i32 5, !dbg !8363
  %100 = load i16, i16* %editflag161, align 2, !dbg !8363
  %conv162 = sext i16 %100 to i32, !dbg !8359
  %tobool163 = icmp ne i32 %conv162, 0, !dbg !8359
  br i1 %tobool163, label %if.then175, label %lor.lhs.false, !dbg !8364

lor.lhs.false:                                    ; preds = %for.body159
  %101 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8365
  %v2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %101, i32 0, i32 3, !dbg !8366
  %102 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !8366
  %editflag164 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %102, i32 0, i32 5, !dbg !8367
  %103 = load i16, i16* %editflag164, align 2, !dbg !8367
  %conv165 = sext i16 %103 to i32, !dbg !8365
  %tobool166 = icmp ne i32 %conv165, 0, !dbg !8365
  br i1 %tobool166, label %if.then175, label %lor.lhs.false167, !dbg !8368

lor.lhs.false167:                                 ; preds = %lor.lhs.false
  %104 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8369
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %104, i32 0, i32 4, !dbg !8370
  %105 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !8370
  %editflag168 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %105, i32 0, i32 5, !dbg !8371
  %106 = load i16, i16* %editflag168, align 2, !dbg !8371
  %conv169 = sext i16 %106 to i32, !dbg !8369
  %tobool170 = icmp ne i32 %conv169, 0, !dbg !8369
  br i1 %tobool170, label %if.then175, label %lor.lhs.false171, !dbg !8372

lor.lhs.false171:                                 ; preds = %lor.lhs.false167
  %107 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8373
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %107, i32 0, i32 5, !dbg !8374
  %108 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !8374
  %editflag172 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %108, i32 0, i32 5, !dbg !8375
  %109 = load i16, i16* %editflag172, align 2, !dbg !8375
  %conv173 = sext i16 %109 to i32, !dbg !8373
  %tobool174 = icmp ne i32 %conv173, 0, !dbg !8373
  br i1 %tobool174, label %if.then175, label %if.end176, !dbg !8376

if.then175:                                       ; preds = %lor.lhs.false171, %lor.lhs.false167, %lor.lhs.false, %for.body159
  %110 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8377
  call void @ED_area_tag_redraw(%struct.ScrArea* %110), !dbg !8378
  br label %if.end176, !dbg !8378

if.end176:                                        ; preds = %if.then175, %lor.lhs.false171
  br label %for.inc177, !dbg !8379

for.inc177:                                       ; preds = %if.end176
  %111 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8380
  %next178 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %111, i32 0, i32 0, !dbg !8381
  %112 = load %struct.ScrArea*, %struct.ScrArea** %next178, align 8, !dbg !8381
  store %struct.ScrArea* %112, %struct.ScrArea** %sa, align 8, !dbg !8382
  br label %for.cond157, !dbg !8383, !llvm.loop !8384

for.end179:                                       ; preds = %for.cond157
  %113 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8386
  call void @WM_event_add_notifier(%struct.bContext* %113, i32 50331649, i8* null), !dbg !8387
  br label %if.end180, !dbg !8388

if.end180:                                        ; preds = %for.end179, %for.end
  ret void, !dbg !8389
}

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local void @removedouble_scrverts(%struct.bScreen*) #2

declare dso_local void @removedouble_scredges(%struct.bScreen*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_split_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8390 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8391, metadata !DIExpression()), !dbg !8392
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8393, metadata !DIExpression()), !dbg !8394
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8395
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8397
  %call = call i32 @area_split_init(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !8398
  %tobool = icmp ne i32 %call, 0, !dbg !8398
  br i1 %tobool, label %if.end, label %if.then, !dbg !8399

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !8400
  br label %return, !dbg !8400

if.end:                                           ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8401
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8402
  %call1 = call i32 @area_split_apply(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !8403
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8404
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8405
  call void @area_split_exit(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !8406
  store i32 4, i32* %retval, align 4, !dbg !8407
  br label %return, !dbg !8407

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !8408
  ret i32 %6, !dbg !8408
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_split_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !8409 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %sc = alloca %struct.bScreen*, align 8
  %sd = alloca %struct.sAreaSplitData*, align 8
  %winsize_x = alloca i32, align 4
  %winsize_y = alloca i32, align 4
  %dir = alloca i32, align 4
  %sad = alloca %struct.sActionzoneData*, align 8
  %actedge = alloca %struct.ScrEdge*, align 8
  %x62 = alloca i32, align 4
  %y63 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8410, metadata !DIExpression()), !dbg !8411
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8412, metadata !DIExpression()), !dbg !8413
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8414, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !8416, metadata !DIExpression()), !dbg !8417
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8418
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !8419
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !8417
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !8420, metadata !DIExpression()), !dbg !8421
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8422
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !8423
  store %struct.bScreen* %call1, %struct.bScreen** %sc, align 8, !dbg !8421
  call void @llvm.dbg.declare(metadata %struct.sAreaSplitData** %sd, metadata !8424, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.declare(metadata i32* %winsize_x, metadata !8426, metadata !DIExpression()), !dbg !8427
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8428
  %call2 = call i32 @WM_window_pixels_x(%struct.wmWindow* %2), !dbg !8429
  store i32 %call2, i32* %winsize_x, align 4, !dbg !8427
  call void @llvm.dbg.declare(metadata i32* %winsize_y, metadata !8430, metadata !DIExpression()), !dbg !8431
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !8432
  %call3 = call i32 @WM_window_pixels_y(%struct.wmWindow* %3), !dbg !8433
  store i32 %call3, i32* %winsize_y, align 4, !dbg !8431
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !8434, metadata !DIExpression()), !dbg !8435
  %4 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8436
  %state = getelementptr inbounds %struct.bScreen, %struct.bScreen* %4, i32 0, i32 9, !dbg !8438
  %5 = load i16, i16* %state, align 8, !dbg !8438
  %conv = sext i16 %5 to i32, !dbg !8436
  %cmp = icmp ne i32 %conv, 0, !dbg !8439
  br i1 %cmp, label %if.then, label %if.end, !dbg !8440

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !8441
  br label %return, !dbg !8441

if.end:                                           ; preds = %entry
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8442
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 2, !dbg !8444
  %7 = load i16, i16* %type, align 8, !dbg !8444
  %conv5 = sext i16 %7 to i32, !dbg !8442
  %cmp6 = icmp eq i32 %conv5, 20480, !dbg !8445
  br i1 %cmp6, label %if.then8, label %if.else61, !dbg !8446

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.sActionzoneData** %sad, metadata !8447, metadata !DIExpression()), !dbg !8449
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8450
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 28, !dbg !8451
  %9 = load i8*, i8** %customdata, align 8, !dbg !8451
  %10 = bitcast i8* %9 to %struct.sActionzoneData*, !dbg !8450
  store %struct.sActionzoneData* %10, %struct.sActionzoneData** %sad, align 8, !dbg !8449
  %11 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8452
  %cmp9 = icmp eq %struct.sActionzoneData* %11, null, !dbg !8454
  br i1 %cmp9, label %if.then13, label %lor.lhs.false, !dbg !8455

lor.lhs.false:                                    ; preds = %if.then8
  %12 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8456
  %modifier = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %12, i32 0, i32 6, !dbg !8457
  %13 = load i32, i32* %modifier, align 4, !dbg !8457
  %cmp11 = icmp sgt i32 %13, 0, !dbg !8458
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !8459

if.then13:                                        ; preds = %lor.lhs.false, %if.then8
  store i32 8, i32* %retval, align 4, !dbg !8460
  br label %return, !dbg !8460

if.end14:                                         ; preds = %lor.lhs.false
  %14 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8462
  %sa1 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %14, i32 0, i32 0, !dbg !8464
  %15 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !8464
  %cmp15 = icmp eq %struct.ScrArea* %15, null, !dbg !8465
  br i1 %cmp15, label %if.then20, label %lor.lhs.false17, !dbg !8466

lor.lhs.false17:                                  ; preds = %if.end14
  %16 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8467
  %az = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %16, i32 0, i32 2, !dbg !8468
  %17 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !8468
  %cmp18 = icmp eq %struct.AZone* %17, null, !dbg !8469
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !8470

if.then20:                                        ; preds = %lor.lhs.false17, %if.end14
  store i32 8, i32* %retval, align 4, !dbg !8471
  br label %return, !dbg !8471

if.end21:                                         ; preds = %lor.lhs.false17
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8472
  %call22 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %18), !dbg !8474
  %19 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8475
  %sa123 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %19, i32 0, i32 0, !dbg !8476
  %20 = load %struct.ScrArea*, %struct.ScrArea** %sa123, align 8, !dbg !8476
  %cmp24 = icmp ne %struct.ScrArea* %call22, %20, !dbg !8477
  br i1 %cmp24, label %if.then30, label %lor.lhs.false26, !dbg !8478

lor.lhs.false26:                                  ; preds = %if.end21
  %21 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8479
  %sa127 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %21, i32 0, i32 0, !dbg !8480
  %22 = load %struct.ScrArea*, %struct.ScrArea** %sa127, align 8, !dbg !8480
  %23 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8481
  %sa2 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %23, i32 0, i32 1, !dbg !8482
  %24 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !8482
  %cmp28 = icmp ne %struct.ScrArea* %22, %24, !dbg !8483
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !8484

if.then30:                                        ; preds = %lor.lhs.false26, %if.end21
  store i32 8, i32* %retval, align 4, !dbg !8485
  br label %return, !dbg !8485

if.end31:                                         ; preds = %lor.lhs.false26
  %25 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8486
  %gesture_dir = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %25, i32 0, i32 5, !dbg !8488
  %26 = load i32, i32* %gesture_dir, align 8, !dbg !8488
  %cmp32 = icmp eq i32 %26, 110, !dbg !8489
  br i1 %cmp32, label %if.then38, label %lor.lhs.false34, !dbg !8490

lor.lhs.false34:                                  ; preds = %if.end31
  %27 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8491
  %gesture_dir35 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %27, i32 0, i32 5, !dbg !8492
  %28 = load i32, i32* %gesture_dir35, align 8, !dbg !8492
  %cmp36 = icmp eq i32 %28, 115, !dbg !8493
  br i1 %cmp36, label %if.then38, label %if.else, !dbg !8494

if.then38:                                        ; preds = %lor.lhs.false34, %if.end31
  store i32 104, i32* %dir, align 4, !dbg !8495
  %29 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8497
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %29, i32 0, i32 7, !dbg !8498
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8498
  %31 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8499
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %31, i32 0, i32 4, !dbg !8500
  %32 = load i32, i32* %x, align 4, !dbg !8500
  %33 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8501
  %sa139 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %33, i32 0, i32 0, !dbg !8502
  %34 = load %struct.ScrArea*, %struct.ScrArea** %sa139, align 8, !dbg !8502
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %34, i32 0, i32 2, !dbg !8503
  %35 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !8503
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %35, i32 0, i32 3, !dbg !8504
  %x40 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 0, !dbg !8505
  %36 = load i16, i16* %x40, align 8, !dbg !8505
  %conv41 = sext i16 %36 to i32, !dbg !8501
  %sub = sub nsw i32 %32, %conv41, !dbg !8506
  %conv42 = sitofp i32 %sub to float, !dbg !8507
  %37 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8508
  %sa143 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %37, i32 0, i32 0, !dbg !8509
  %38 = load %struct.ScrArea*, %struct.ScrArea** %sa143, align 8, !dbg !8509
  %winx = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %38, i32 0, i32 10, !dbg !8510
  %39 = load i16, i16* %winx, align 2, !dbg !8510
  %conv44 = sitofp i16 %39 to float, !dbg !8511
  %div = fdiv float %conv42, %conv44, !dbg !8512
  call void @RNA_float_set(%struct.PointerRNA* %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i64 0, i64 0), float %div), !dbg !8513
  br label %if.end56, !dbg !8514

if.else:                                          ; preds = %lor.lhs.false34
  store i32 118, i32* %dir, align 4, !dbg !8515
  %40 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8517
  %ptr45 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %40, i32 0, i32 7, !dbg !8518
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr45, align 8, !dbg !8518
  %42 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8519
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %42, i32 0, i32 5, !dbg !8520
  %43 = load i32, i32* %y, align 8, !dbg !8520
  %44 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8521
  %sa146 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %44, i32 0, i32 0, !dbg !8522
  %45 = load %struct.ScrArea*, %struct.ScrArea** %sa146, align 8, !dbg !8522
  %v147 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %45, i32 0, i32 2, !dbg !8523
  %46 = load %struct.ScrVert*, %struct.ScrVert** %v147, align 8, !dbg !8523
  %vec48 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %46, i32 0, i32 3, !dbg !8524
  %y49 = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec48, i32 0, i32 1, !dbg !8525
  %47 = load i16, i16* %y49, align 2, !dbg !8525
  %conv50 = sext i16 %47 to i32, !dbg !8521
  %sub51 = sub nsw i32 %43, %conv50, !dbg !8526
  %conv52 = sitofp i32 %sub51 to float, !dbg !8527
  %48 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !8528
  %sa153 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %48, i32 0, i32 0, !dbg !8529
  %49 = load %struct.ScrArea*, %struct.ScrArea** %sa153, align 8, !dbg !8529
  %winy = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %49, i32 0, i32 11, !dbg !8530
  %50 = load i16, i16* %winy, align 4, !dbg !8530
  %conv54 = sitofp i16 %50 to float, !dbg !8531
  %div55 = fdiv float %conv52, %conv54, !dbg !8532
  call void @RNA_float_set(%struct.PointerRNA* %41, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i64 0, i64 0), float %div55), !dbg !8533
  br label %if.end56

if.end56:                                         ; preds = %if.else, %if.then38
  %51 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8534
  %ptr57 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %51, i32 0, i32 7, !dbg !8535
  %52 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr57, align 8, !dbg !8535
  %53 = load i32, i32* %dir, align 4, !dbg !8536
  call void @RNA_enum_set(%struct.PointerRNA* %52, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0), i32 %53), !dbg !8537
  %54 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8538
  %55 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8540
  %call58 = call i32 @area_split_init(%struct.bContext* %54, %struct.wmOperator* %55), !dbg !8541
  %tobool = icmp ne i32 %call58, 0, !dbg !8541
  br i1 %tobool, label %if.end60, label %if.then59, !dbg !8542

if.then59:                                        ; preds = %if.end56
  store i32 8, i32* %retval, align 4, !dbg !8543
  br label %return, !dbg !8543

if.end60:                                         ; preds = %if.end56
  br label %if.end95, !dbg !8544

if.else61:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %actedge, metadata !8545, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.declare(metadata i32* %x62, metadata !8548, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.declare(metadata i32* %y63, metadata !8550, metadata !DIExpression()), !dbg !8551
  %56 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8552
  %ptr64 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %56, i32 0, i32 7, !dbg !8554
  %57 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr64, align 8, !dbg !8554
  %call65 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %57, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0)), !dbg !8555
  %tobool66 = icmp ne i8 %call65, 0, !dbg !8555
  br i1 %tobool66, label %if.then67, label %if.else70, !dbg !8556

if.then67:                                        ; preds = %if.else61
  %58 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8557
  %ptr68 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %58, i32 0, i32 7, !dbg !8558
  %59 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr68, align 8, !dbg !8558
  %call69 = call i32 @RNA_int_get(%struct.PointerRNA* %59, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0)), !dbg !8559
  store i32 %call69, i32* %x62, align 4, !dbg !8560
  br label %if.end72, !dbg !8561

if.else70:                                        ; preds = %if.else61
  %60 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8562
  %x71 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %60, i32 0, i32 4, !dbg !8563
  %61 = load i32, i32* %x71, align 4, !dbg !8563
  store i32 %61, i32* %x62, align 4, !dbg !8564
  br label %if.end72

if.end72:                                         ; preds = %if.else70, %if.then67
  %62 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8565
  %ptr73 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %62, i32 0, i32 7, !dbg !8567
  %63 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr73, align 8, !dbg !8567
  %call74 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.94, i64 0, i64 0)), !dbg !8568
  %tobool75 = icmp ne i8 %call74, 0, !dbg !8568
  br i1 %tobool75, label %if.then76, label %if.else79, !dbg !8569

if.then76:                                        ; preds = %if.end72
  %64 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8570
  %ptr77 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %64, i32 0, i32 7, !dbg !8571
  %65 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr77, align 8, !dbg !8571
  %call78 = call i32 @RNA_int_get(%struct.PointerRNA* %65, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.94, i64 0, i64 0)), !dbg !8572
  store i32 %call78, i32* %y63, align 4, !dbg !8573
  br label %if.end81, !dbg !8574

if.else79:                                        ; preds = %if.end72
  %66 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8575
  %x80 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %66, i32 0, i32 4, !dbg !8576
  %67 = load i32, i32* %x80, align 4, !dbg !8576
  store i32 %67, i32* %y63, align 4, !dbg !8577
  br label %if.end81

if.end81:                                         ; preds = %if.else79, %if.then76
  %68 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8578
  %69 = load i32, i32* %winsize_x, align 4, !dbg !8579
  %70 = load i32, i32* %winsize_y, align 4, !dbg !8580
  %71 = load i32, i32* %x62, align 4, !dbg !8581
  %72 = load i32, i32* %y63, align 4, !dbg !8582
  %call82 = call %struct.ScrEdge* @screen_find_active_scredge(%struct.bScreen* %68, i32 %69, i32 %70, i32 %71, i32 %72), !dbg !8583
  store %struct.ScrEdge* %call82, %struct.ScrEdge** %actedge, align 8, !dbg !8584
  %73 = load %struct.ScrEdge*, %struct.ScrEdge** %actedge, align 8, !dbg !8585
  %cmp83 = icmp eq %struct.ScrEdge* %73, null, !dbg !8587
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !8588

if.then85:                                        ; preds = %if.end81
  store i32 2, i32* %retval, align 4, !dbg !8589
  br label %return, !dbg !8589

if.end86:                                         ; preds = %if.end81
  %74 = load %struct.ScrEdge*, %struct.ScrEdge** %actedge, align 8, !dbg !8590
  %call87 = call zeroext i8 @scredge_is_horizontal(%struct.ScrEdge* %74), !dbg !8591
  %conv88 = zext i8 %call87 to i32, !dbg !8591
  %tobool89 = icmp ne i32 %conv88, 0, !dbg !8591
  %75 = zext i1 %tobool89 to i64, !dbg !8591
  %cond = select i1 %tobool89, i32 118, i32 104, !dbg !8591
  store i32 %cond, i32* %dir, align 4, !dbg !8592
  %76 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8593
  %ptr90 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %76, i32 0, i32 7, !dbg !8594
  %77 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr90, align 8, !dbg !8594
  %78 = load i32, i32* %dir, align 4, !dbg !8595
  call void @RNA_enum_set(%struct.PointerRNA* %77, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0), i32 %78), !dbg !8596
  %79 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8597
  %80 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8599
  %call91 = call i32 @area_split_menu_init(%struct.bContext* %79, %struct.wmOperator* %80), !dbg !8600
  %tobool92 = icmp ne i32 %call91, 0, !dbg !8600
  br i1 %tobool92, label %if.end94, label %if.then93, !dbg !8601

if.then93:                                        ; preds = %if.end86
  store i32 2, i32* %retval, align 4, !dbg !8602
  br label %return, !dbg !8602

if.end94:                                         ; preds = %if.end86
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.end60
  %81 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8603
  %customdata96 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %81, i32 0, i32 5, !dbg !8604
  %82 = load i8*, i8** %customdata96, align 8, !dbg !8604
  %83 = bitcast i8* %82 to %struct.sAreaSplitData*, !dbg !8605
  store %struct.sAreaSplitData* %83, %struct.sAreaSplitData** %sd, align 8, !dbg !8606
  %84 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8607
  %x97 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %84, i32 0, i32 4, !dbg !8608
  %85 = load i32, i32* %x97, align 4, !dbg !8608
  %86 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8609
  %x98 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %86, i32 0, i32 0, !dbg !8610
  store i32 %85, i32* %x98, align 8, !dbg !8611
  %87 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8612
  %y99 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %87, i32 0, i32 5, !dbg !8613
  %88 = load i32, i32* %y99, align 8, !dbg !8613
  %89 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8614
  %y100 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %89, i32 0, i32 1, !dbg !8615
  store i32 %88, i32* %y100, align 4, !dbg !8616
  %90 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8617
  %type101 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %90, i32 0, i32 2, !dbg !8619
  %91 = load i16, i16* %type101, align 8, !dbg !8619
  %conv102 = sext i16 %91 to i32, !dbg !8617
  %cmp103 = icmp eq i32 %conv102, 20480, !dbg !8620
  br i1 %cmp103, label %if.then105, label %if.else111, !dbg !8621

if.then105:                                       ; preds = %if.end95
  %92 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8622
  %93 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8625
  %call106 = call i32 @area_split_apply(%struct.bContext* %92, %struct.wmOperator* %93), !dbg !8626
  %tobool107 = icmp ne i32 %call106, 0, !dbg !8626
  br i1 %tobool107, label %if.then108, label %if.end110, !dbg !8627

if.then108:                                       ; preds = %if.then105
  %94 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !8628
  %95 = load i32, i32* %dir, align 4, !dbg !8630
  %96 = load i32, i32* %winsize_x, align 4, !dbg !8631
  %97 = load i32, i32* %winsize_y, align 4, !dbg !8632
  %98 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8633
  %bigger = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %98, i32 0, i32 3, !dbg !8634
  %99 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8635
  %smaller = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %99, i32 0, i32 4, !dbg !8636
  call void @area_move_set_limits(%struct.bScreen* %94, i32 %95, i32 %96, i32 %97, i32* %bigger, i32* %smaller), !dbg !8637
  %100 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8638
  %101 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8639
  %call109 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %100, %struct.wmOperator* %101), !dbg !8640
  store i32 1, i32* %retval, align 4, !dbg !8641
  br label %return, !dbg !8641

if.end110:                                        ; preds = %if.then105
  br label %if.end113, !dbg !8642

if.else111:                                       ; preds = %if.end95
  %102 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8643
  %previewmode = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %102, i32 0, i32 8, !dbg !8645
  store i32 1, i32* %previewmode, align 8, !dbg !8646
  %103 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8647
  %104 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8648
  %call112 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %103, %struct.wmOperator* %104), !dbg !8649
  store i32 1, i32* %retval, align 4, !dbg !8650
  br label %return, !dbg !8650

if.end113:                                        ; preds = %if.end110
  store i32 8, i32* %retval, align 4, !dbg !8651
  br label %return, !dbg !8651

return:                                           ; preds = %if.end113, %if.else111, %if.then108, %if.then93, %if.then85, %if.then59, %if.then30, %if.then20, %if.then13, %if.then
  %105 = load i32, i32* %retval, align 4, !dbg !8652
  ret i32 %105, !dbg !8652
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_split_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !8653 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sd = alloca %struct.sAreaSplitData*, align 8
  %fac = alloca float, align 4
  %dir = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8654, metadata !DIExpression()), !dbg !8655
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8656, metadata !DIExpression()), !dbg !8657
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8658, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.declare(metadata %struct.sAreaSplitData** %sd, metadata !8660, metadata !DIExpression()), !dbg !8661
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8662
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !8663
  %1 = load i8*, i8** %customdata, align 8, !dbg !8663
  %2 = bitcast i8* %1 to %struct.sAreaSplitData*, !dbg !8664
  store %struct.sAreaSplitData* %2, %struct.sAreaSplitData** %sd, align 8, !dbg !8661
  call void @llvm.dbg.declare(metadata float* %fac, metadata !8665, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !8667, metadata !DIExpression()), !dbg !8668
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8669
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 2, !dbg !8670
  %4 = load i16, i16* %type, align 8, !dbg !8670
  %conv = sext i16 %4 to i32, !dbg !8669
  switch i32 %conv, label %sw.epilog [
    i32 4, label %sw.bb
    i32 1, label %sw.bb64
    i32 2, label %sw.bb76
    i32 219, label %sw.bb76
    i32 3, label %sw.bb120
    i32 218, label %sw.bb120
  ], !dbg !8671

sw.bb:                                            ; preds = %entry
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8672
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !8674
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8674
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0)), !dbg !8675
  store i32 %call, i32* %dir, align 4, !dbg !8676
  %7 = load i32, i32* %dir, align 4, !dbg !8677
  %cmp = icmp eq i32 %7, 118, !dbg !8678
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8679

cond.true:                                        ; preds = %sw.bb
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8680
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 4, !dbg !8681
  %9 = load i32, i32* %x, align 4, !dbg !8681
  %10 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8682
  %origval = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %10, i32 0, i32 2, !dbg !8683
  %11 = load i32, i32* %origval, align 8, !dbg !8683
  %sub = sub nsw i32 %9, %11, !dbg !8684
  br label %cond.end, !dbg !8679

cond.false:                                       ; preds = %sw.bb
  %12 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8685
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %12, i32 0, i32 5, !dbg !8686
  %13 = load i32, i32* %y, align 8, !dbg !8686
  %14 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8687
  %origval2 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %14, i32 0, i32 2, !dbg !8688
  %15 = load i32, i32* %origval2, align 8, !dbg !8688
  %sub3 = sub nsw i32 %13, %15, !dbg !8689
  br label %cond.end, !dbg !8679

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %sub3, %cond.false ], !dbg !8679
  %16 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8690
  %delta = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %16, i32 0, i32 5, !dbg !8691
  store i32 %cond, i32* %delta, align 4, !dbg !8692
  %17 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8693
  %previewmode = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %17, i32 0, i32 8, !dbg !8695
  %18 = load i32, i32* %previewmode, align 8, !dbg !8695
  %cmp4 = icmp eq i32 %18, 0, !dbg !8696
  br i1 %cmp4, label %if.then, label %if.else, !dbg !8697

if.then:                                          ; preds = %cond.end
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8698
  %20 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8699
  %origval6 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %20, i32 0, i32 2, !dbg !8700
  %21 = load i32, i32* %origval6, align 8, !dbg !8700
  %22 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8701
  %delta7 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %22, i32 0, i32 5, !dbg !8702
  %23 = load i32, i32* %delta7, align 4, !dbg !8702
  %24 = load i32, i32* %dir, align 4, !dbg !8703
  %25 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8704
  %bigger = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %25, i32 0, i32 3, !dbg !8705
  %26 = load i32, i32* %bigger, align 4, !dbg !8705
  %27 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8706
  %smaller = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %27, i32 0, i32 4, !dbg !8707
  %28 = load i32, i32* %smaller, align 8, !dbg !8707
  call void @area_move_apply_do(%struct.bContext* %19, i32 %21, i32 %23, i32 %24, i32 %26, i32 %28), !dbg !8708
  br label %if.end47, !dbg !8708

if.else:                                          ; preds = %cond.end
  %29 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8709
  %sarea = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %29, i32 0, i32 10, !dbg !8712
  %30 = load %struct.ScrArea*, %struct.ScrArea** %sarea, align 8, !dbg !8712
  %tobool = icmp ne %struct.ScrArea* %30, null, !dbg !8709
  br i1 %tobool, label %if.then8, label %if.end, !dbg !8713

if.then8:                                         ; preds = %if.else
  %31 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8714
  %sarea9 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %31, i32 0, i32 10, !dbg !8716
  %32 = load %struct.ScrArea*, %struct.ScrArea** %sarea9, align 8, !dbg !8716
  %flag = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %32, i32 0, i32 14, !dbg !8717
  %33 = load i16, i16* %flag, align 2, !dbg !8718
  %conv10 = sext i16 %33 to i32, !dbg !8718
  %and = and i32 %conv10, -49, !dbg !8718
  %conv11 = trunc i32 %and to i16, !dbg !8718
  store i16 %conv11, i16* %flag, align 2, !dbg !8718
  %34 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8719
  %sarea12 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %34, i32 0, i32 10, !dbg !8720
  %35 = load %struct.ScrArea*, %struct.ScrArea** %sarea12, align 8, !dbg !8720
  call void @ED_area_tag_redraw(%struct.ScrArea* %35), !dbg !8721
  br label %if.end, !dbg !8722

if.end:                                           ; preds = %if.then8, %if.else
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8723
  %call13 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %36), !dbg !8724
  %37 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8725
  %x14 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %37, i32 0, i32 4, !dbg !8726
  %38 = load i32, i32* %x14, align 4, !dbg !8726
  %39 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8727
  %y15 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %39, i32 0, i32 5, !dbg !8728
  %40 = load i32, i32* %y15, align 8, !dbg !8728
  %call16 = call %struct.ScrArea* @screen_areahascursor(%struct.bScreen* %call13, i32 %38, i32 %40), !dbg !8729
  %41 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8730
  %sarea17 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %41, i32 0, i32 10, !dbg !8731
  store %struct.ScrArea* %call16, %struct.ScrArea** %sarea17, align 8, !dbg !8732
  %42 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8733
  %sarea18 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %42, i32 0, i32 10, !dbg !8735
  %43 = load %struct.ScrArea*, %struct.ScrArea** %sarea18, align 8, !dbg !8735
  %tobool19 = icmp ne %struct.ScrArea* %43, null, !dbg !8733
  br i1 %tobool19, label %if.then20, label %if.end45, !dbg !8736

if.then20:                                        ; preds = %if.end
  %44 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8737
  %sarea21 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %44, i32 0, i32 10, !dbg !8739
  %45 = load %struct.ScrArea*, %struct.ScrArea** %sarea21, align 8, !dbg !8739
  call void @ED_area_tag_redraw(%struct.ScrArea* %45), !dbg !8740
  %46 = load i32, i32* %dir, align 4, !dbg !8741
  %cmp22 = icmp eq i32 %46, 118, !dbg !8743
  br i1 %cmp22, label %if.then24, label %if.else32, !dbg !8744

if.then24:                                        ; preds = %if.then20
  %47 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8745
  %sarea25 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %47, i32 0, i32 10, !dbg !8747
  %48 = load %struct.ScrArea*, %struct.ScrArea** %sarea25, align 8, !dbg !8747
  %winx = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %48, i32 0, i32 10, !dbg !8748
  %49 = load i16, i16* %winx, align 2, !dbg !8748
  %conv26 = sext i16 %49 to i32, !dbg !8745
  %50 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8749
  %origsize = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %50, i32 0, i32 7, !dbg !8750
  store i32 %conv26, i32* %origsize, align 4, !dbg !8751
  %51 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8752
  %sarea27 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %51, i32 0, i32 10, !dbg !8753
  %52 = load %struct.ScrArea*, %struct.ScrArea** %sarea27, align 8, !dbg !8753
  %totrct = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %52, i32 0, i32 7, !dbg !8754
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct, i32 0, i32 0, !dbg !8755
  %53 = load i32, i32* %xmin, align 8, !dbg !8755
  %54 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8756
  %origmin = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %54, i32 0, i32 6, !dbg !8757
  store i32 %53, i32* %origmin, align 8, !dbg !8758
  %55 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8759
  %sarea28 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %55, i32 0, i32 10, !dbg !8760
  %56 = load %struct.ScrArea*, %struct.ScrArea** %sarea28, align 8, !dbg !8760
  %flag29 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %56, i32 0, i32 14, !dbg !8761
  %57 = load i16, i16* %flag29, align 2, !dbg !8762
  %conv30 = sext i16 %57 to i32, !dbg !8762
  %or = or i32 %conv30, 32, !dbg !8762
  %conv31 = trunc i32 %or to i16, !dbg !8762
  store i16 %conv31, i16* %flag29, align 2, !dbg !8762
  br label %if.end44, !dbg !8763

if.else32:                                        ; preds = %if.then20
  %58 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8764
  %sarea33 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %58, i32 0, i32 10, !dbg !8766
  %59 = load %struct.ScrArea*, %struct.ScrArea** %sarea33, align 8, !dbg !8766
  %winy = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %59, i32 0, i32 11, !dbg !8767
  %60 = load i16, i16* %winy, align 4, !dbg !8767
  %conv34 = sext i16 %60 to i32, !dbg !8764
  %61 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8768
  %origsize35 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %61, i32 0, i32 7, !dbg !8769
  store i32 %conv34, i32* %origsize35, align 4, !dbg !8770
  %62 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8771
  %sarea36 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %62, i32 0, i32 10, !dbg !8772
  %63 = load %struct.ScrArea*, %struct.ScrArea** %sarea36, align 8, !dbg !8772
  %totrct37 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %63, i32 0, i32 7, !dbg !8773
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct37, i32 0, i32 2, !dbg !8774
  %64 = load i32, i32* %ymin, align 8, !dbg !8774
  %65 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8775
  %origmin38 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %65, i32 0, i32 6, !dbg !8776
  store i32 %64, i32* %origmin38, align 8, !dbg !8777
  %66 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8778
  %sarea39 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %66, i32 0, i32 10, !dbg !8779
  %67 = load %struct.ScrArea*, %struct.ScrArea** %sarea39, align 8, !dbg !8779
  %flag40 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %67, i32 0, i32 14, !dbg !8780
  %68 = load i16, i16* %flag40, align 2, !dbg !8781
  %conv41 = sext i16 %68 to i32, !dbg !8781
  %or42 = or i32 %conv41, 16, !dbg !8781
  %conv43 = trunc i32 %or42 to i16, !dbg !8781
  store i16 %conv43, i16* %flag40, align 2, !dbg !8781
  br label %if.end44

if.end44:                                         ; preds = %if.else32, %if.then24
  br label %if.end45, !dbg !8782

if.end45:                                         ; preds = %if.end44, %if.end
  %69 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8783
  %call46 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %69), !dbg !8784
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %call46, i32 0, i32 3, !dbg !8785
  %70 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !8785
  %do_draw = getelementptr inbounds %struct.bScreen, %struct.bScreen* %70, i32 0, i32 12, !dbg !8786
  store i16 1, i16* %do_draw, align 2, !dbg !8787
  br label %if.end47

if.end47:                                         ; preds = %if.end45, %if.then
  %71 = load i32, i32* %dir, align 4, !dbg !8788
  %cmp48 = icmp eq i32 %71, 118, !dbg !8789
  br i1 %cmp48, label %cond.true50, label %cond.false54, !dbg !8790

cond.true50:                                      ; preds = %if.end47
  %72 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8791
  %x51 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %72, i32 0, i32 4, !dbg !8792
  %73 = load i32, i32* %x51, align 4, !dbg !8792
  %74 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8793
  %origmin52 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %74, i32 0, i32 6, !dbg !8794
  %75 = load i32, i32* %origmin52, align 8, !dbg !8794
  %sub53 = sub nsw i32 %73, %75, !dbg !8795
  br label %cond.end58, !dbg !8790

cond.false54:                                     ; preds = %if.end47
  %76 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8796
  %y55 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %76, i32 0, i32 5, !dbg !8797
  %77 = load i32, i32* %y55, align 8, !dbg !8797
  %78 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8798
  %origmin56 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %78, i32 0, i32 6, !dbg !8799
  %79 = load i32, i32* %origmin56, align 8, !dbg !8799
  %sub57 = sub nsw i32 %77, %79, !dbg !8800
  br label %cond.end58, !dbg !8790

cond.end58:                                       ; preds = %cond.false54, %cond.true50
  %cond59 = phi i32 [ %sub53, %cond.true50 ], [ %sub57, %cond.false54 ], !dbg !8790
  %conv60 = sitofp i32 %cond59 to float, !dbg !8790
  store float %conv60, float* %fac, align 4, !dbg !8801
  %80 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8802
  %ptr61 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %80, i32 0, i32 7, !dbg !8803
  %81 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr61, align 8, !dbg !8803
  %82 = load float, float* %fac, align 4, !dbg !8804
  %83 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8805
  %origsize62 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %83, i32 0, i32 7, !dbg !8806
  %84 = load i32, i32* %origsize62, align 4, !dbg !8806
  %conv63 = sitofp i32 %84 to float, !dbg !8807
  %div = fdiv float %82, %conv63, !dbg !8808
  call void @RNA_float_set(%struct.PointerRNA* %81, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i64 0, i64 0), float %div), !dbg !8809
  br label %sw.epilog, !dbg !8810

sw.bb64:                                          ; preds = %entry
  %85 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8811
  %previewmode65 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %85, i32 0, i32 8, !dbg !8813
  %86 = load i32, i32* %previewmode65, align 8, !dbg !8813
  %tobool66 = icmp ne i32 %86, 0, !dbg !8811
  br i1 %tobool66, label %if.then67, label %if.else69, !dbg !8814

if.then67:                                        ; preds = %sw.bb64
  %87 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8815
  %88 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8817
  %call68 = call i32 @area_split_apply(%struct.bContext* %87, %struct.wmOperator* %88), !dbg !8818
  %89 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8819
  %90 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8820
  call void @area_split_exit(%struct.bContext* %89, %struct.wmOperator* %90), !dbg !8821
  store i32 4, i32* %retval, align 4, !dbg !8822
  br label %return, !dbg !8822

if.else69:                                        ; preds = %sw.bb64
  %91 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8823
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %91, i32 0, i32 3, !dbg !8826
  %92 = load i16, i16* %val, align 2, !dbg !8826
  %conv70 = sext i16 %92 to i32, !dbg !8823
  %cmp71 = icmp eq i32 %conv70, 2, !dbg !8827
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !8828

if.then73:                                        ; preds = %if.else69
  %93 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8829
  %94 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8831
  call void @area_split_exit(%struct.bContext* %93, %struct.wmOperator* %94), !dbg !8832
  store i32 4, i32* %retval, align 4, !dbg !8833
  br label %return, !dbg !8833

if.end74:                                         ; preds = %if.else69
  br label %if.end75

if.end75:                                         ; preds = %if.end74
  br label %sw.epilog, !dbg !8834

sw.bb76:                                          ; preds = %entry, %entry
  %95 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8835
  %previewmode77 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %95, i32 0, i32 8, !dbg !8837
  %96 = load i32, i32* %previewmode77, align 8, !dbg !8837
  %cmp78 = icmp eq i32 %96, 0, !dbg !8838
  br i1 %cmp78, label %if.then80, label %if.else81, !dbg !8839

if.then80:                                        ; preds = %sw.bb76
  br label %if.end119, !dbg !8840

if.else81:                                        ; preds = %sw.bb76
  %97 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8842
  %ptr82 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %97, i32 0, i32 7, !dbg !8844
  %98 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr82, align 8, !dbg !8844
  %call83 = call i32 @RNA_enum_get(%struct.PointerRNA* %98, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0)), !dbg !8845
  store i32 %call83, i32* %dir, align 4, !dbg !8846
  %99 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8847
  %val84 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %99, i32 0, i32 3, !dbg !8849
  %100 = load i16, i16* %val84, align 2, !dbg !8849
  %conv85 = sext i16 %100 to i32, !dbg !8847
  %cmp86 = icmp eq i32 %conv85, 1, !dbg !8850
  br i1 %cmp86, label %if.then88, label %if.end118, !dbg !8851

if.then88:                                        ; preds = %if.else81
  %101 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8852
  %sarea89 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %101, i32 0, i32 10, !dbg !8855
  %102 = load %struct.ScrArea*, %struct.ScrArea** %sarea89, align 8, !dbg !8855
  %tobool90 = icmp ne %struct.ScrArea* %102, null, !dbg !8852
  br i1 %tobool90, label %if.then91, label %if.end117, !dbg !8856

if.then91:                                        ; preds = %if.then88
  %103 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8857
  %sarea92 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %103, i32 0, i32 10, !dbg !8859
  %104 = load %struct.ScrArea*, %struct.ScrArea** %sarea92, align 8, !dbg !8859
  %flag93 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %104, i32 0, i32 14, !dbg !8860
  %105 = load i16, i16* %flag93, align 2, !dbg !8861
  %conv94 = sext i16 %105 to i32, !dbg !8861
  %and95 = and i32 %conv94, -49, !dbg !8861
  %conv96 = trunc i32 %and95 to i16, !dbg !8861
  store i16 %conv96, i16* %flag93, align 2, !dbg !8861
  %106 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8862
  %sarea97 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %106, i32 0, i32 10, !dbg !8863
  %107 = load %struct.ScrArea*, %struct.ScrArea** %sarea97, align 8, !dbg !8863
  call void @ED_area_tag_redraw(%struct.ScrArea* %107), !dbg !8864
  %108 = load i32, i32* %dir, align 4, !dbg !8865
  %cmp98 = icmp eq i32 %108, 118, !dbg !8867
  br i1 %cmp98, label %if.then100, label %if.else108, !dbg !8868

if.then100:                                       ; preds = %if.then91
  %109 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8869
  %ptr101 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %109, i32 0, i32 7, !dbg !8871
  %110 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr101, align 8, !dbg !8871
  call void @RNA_enum_set(%struct.PointerRNA* %110, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0), i32 104), !dbg !8872
  %111 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8873
  %sarea102 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %111, i32 0, i32 10, !dbg !8874
  %112 = load %struct.ScrArea*, %struct.ScrArea** %sarea102, align 8, !dbg !8874
  %flag103 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %112, i32 0, i32 14, !dbg !8875
  %113 = load i16, i16* %flag103, align 2, !dbg !8876
  %conv104 = sext i16 %113 to i32, !dbg !8876
  %or105 = or i32 %conv104, 16, !dbg !8876
  %conv106 = trunc i32 %or105 to i16, !dbg !8876
  store i16 %conv106, i16* %flag103, align 2, !dbg !8876
  %114 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8877
  %call107 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %114), !dbg !8878
  call void @WM_cursor_set(%struct.wmWindow* %call107, i32 1003), !dbg !8879
  br label %if.end116, !dbg !8880

if.else108:                                       ; preds = %if.then91
  %115 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8881
  %ptr109 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %115, i32 0, i32 7, !dbg !8883
  %116 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr109, align 8, !dbg !8883
  call void @RNA_enum_set(%struct.PointerRNA* %116, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0), i32 118), !dbg !8884
  %117 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8885
  %sarea110 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %117, i32 0, i32 10, !dbg !8886
  %118 = load %struct.ScrArea*, %struct.ScrArea** %sarea110, align 8, !dbg !8886
  %flag111 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %118, i32 0, i32 14, !dbg !8887
  %119 = load i16, i16* %flag111, align 2, !dbg !8888
  %conv112 = sext i16 %119 to i32, !dbg !8888
  %or113 = or i32 %conv112, 32, !dbg !8888
  %conv114 = trunc i32 %or113 to i16, !dbg !8888
  store i16 %conv114, i16* %flag111, align 2, !dbg !8888
  %120 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8889
  %call115 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %120), !dbg !8890
  call void @WM_cursor_set(%struct.wmWindow* %call115, i32 1004), !dbg !8891
  br label %if.end116

if.end116:                                        ; preds = %if.else108, %if.then100
  br label %if.end117, !dbg !8892

if.end117:                                        ; preds = %if.end116, %if.then88
  br label %if.end118, !dbg !8893

if.end118:                                        ; preds = %if.end117, %if.else81
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.then80
  br label %sw.epilog, !dbg !8894

sw.bb120:                                         ; preds = %entry, %entry
  %121 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8895
  %122 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8896
  call void @area_split_cancel(%struct.bContext* %121, %struct.wmOperator* %122), !dbg !8897
  store i32 2, i32* %retval, align 4, !dbg !8898
  br label %return, !dbg !8898

sw.epilog:                                        ; preds = %entry, %if.end119, %if.end75, %cond.end58
  store i32 1, i32* %retval, align 4, !dbg !8899
  br label %return, !dbg !8899

return:                                           ; preds = %sw.epilog, %sw.bb120, %if.then73, %if.then67
  %123 = load i32, i32* %retval, align 4, !dbg !8900
  ret i32 %123, !dbg !8900
}

; Function Attrs: noinline nounwind uwtable
define internal void @area_split_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8901 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sd = alloca %struct.sAreaSplitData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8902, metadata !DIExpression()), !dbg !8903
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8904, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.declare(metadata %struct.sAreaSplitData** %sd, metadata !8906, metadata !DIExpression()), !dbg !8907
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8908
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !8909
  %1 = load i8*, i8** %customdata, align 8, !dbg !8909
  %2 = bitcast i8* %1 to %struct.sAreaSplitData*, !dbg !8910
  store %struct.sAreaSplitData* %2, %struct.sAreaSplitData** %sd, align 8, !dbg !8907
  %3 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8911
  %previewmode = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %3, i32 0, i32 8, !dbg !8913
  %4 = load i32, i32* %previewmode, align 8, !dbg !8913
  %tobool = icmp ne i32 %4, 0, !dbg !8911
  br i1 %tobool, label %if.then, label %if.else, !dbg !8914

if.then:                                          ; preds = %entry
  br label %if.end9, !dbg !8915

if.else:                                          ; preds = %entry
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8917
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8920
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %6), !dbg !8921
  %7 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8922
  %sarea = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %7, i32 0, i32 10, !dbg !8923
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sarea, align 8, !dbg !8923
  %9 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8924
  %narea = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %9, i32 0, i32 11, !dbg !8925
  %10 = load %struct.ScrArea*, %struct.ScrArea** %narea, align 8, !dbg !8925
  %call1 = call i32 @screen_area_join(%struct.bContext* %5, %struct.bScreen* %call, %struct.ScrArea* %8, %struct.ScrArea* %10), !dbg !8926
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8926
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !8927

if.then3:                                         ; preds = %if.else
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8928
  %call4 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %11), !dbg !8931
  %12 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8932
  %narea5 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %12, i32 0, i32 11, !dbg !8933
  %13 = load %struct.ScrArea*, %struct.ScrArea** %narea5, align 8, !dbg !8933
  %cmp = icmp eq %struct.ScrArea* %call4, %13, !dbg !8934
  br i1 %cmp, label %if.then6, label %if.end, !dbg !8935

if.then6:                                         ; preds = %if.then3
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8936
  call void @CTX_wm_area_set(%struct.bContext* %14, %struct.ScrArea* null), !dbg !8938
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8939
  call void @CTX_wm_region_set(%struct.bContext* %15, %struct.ARegion* null), !dbg !8940
  br label %if.end, !dbg !8941

if.end:                                           ; preds = %if.then6, %if.then3
  %16 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !8942
  %narea7 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %16, i32 0, i32 11, !dbg !8943
  store %struct.ScrArea* null, %struct.ScrArea** %narea7, align 8, !dbg !8944
  br label %if.end8, !dbg !8945

if.end8:                                          ; preds = %if.end, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8946
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8947
  call void @area_split_exit(%struct.bContext* %17, %struct.wmOperator* %18), !dbg !8948
  ret void, !dbg !8949
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @screen_active_editable(%struct.bContext* %C) #0 !dbg !8950 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8951, metadata !DIExpression()), !dbg !8952
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8953
  %call = call i32 @ED_operator_screenactive(%struct.bContext* %0), !dbg !8955
  %tobool = icmp ne i32 %call, 0, !dbg !8955
  br i1 %tobool, label %if.then, label %if.end4, !dbg !8956

if.then:                                          ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8957
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !8960
  %state = getelementptr inbounds %struct.bScreen, %struct.bScreen* %call1, i32 0, i32 9, !dbg !8961
  %2 = load i16, i16* %state, align 8, !dbg !8961
  %conv = sext i16 %2 to i32, !dbg !8960
  %cmp = icmp ne i32 %conv, 0, !dbg !8962
  br i1 %cmp, label %if.then3, label %if.end, !dbg !8963

if.then3:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !8964
  br label %return, !dbg !8964

if.end:                                           ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !8965
  br label %return, !dbg !8965

if.end4:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8966
  br label %return, !dbg !8966

return:                                           ; preds = %if.end4, %if.end, %if.then3
  %3 = load i32, i32* %retval, align 4, !dbg !8967
  ret i32 %3, !dbg !8967
}

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_float(i8*, i8*, float, float, float, i8*, i8*, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_split_init(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8968 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %sd = alloca %struct.sAreaSplitData*, align 8
  %areaminy = alloca i32, align 4
  %dir = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8969, metadata !DIExpression()), !dbg !8970
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8971, metadata !DIExpression()), !dbg !8972
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !8973, metadata !DIExpression()), !dbg !8974
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8975
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !8976
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !8974
  call void @llvm.dbg.declare(metadata %struct.sAreaSplitData** %sd, metadata !8977, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.declare(metadata i32* %areaminy, metadata !8979, metadata !DIExpression()), !dbg !8980
  %call1 = call i32 @ED_area_headersize(), !dbg !8981
  %add = add nsw i32 %call1, 1, !dbg !8982
  store i32 %add, i32* %areaminy, align 4, !dbg !8980
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !8983, metadata !DIExpression()), !dbg !8984
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8985
  %cmp = icmp eq %struct.ScrArea* %1, null, !dbg !8987
  br i1 %cmp, label %if.then, label %if.end, !dbg !8988

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8989
  br label %return, !dbg !8989

if.end:                                           ; preds = %entry
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8990
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8991
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8991
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0)), !dbg !8992
  store i32 %call2, i32* %dir, align 4, !dbg !8993
  %4 = load i32, i32* %dir, align 4, !dbg !8994
  %cmp3 = icmp eq i32 %4, 118, !dbg !8996
  br i1 %cmp3, label %land.lhs.true, label %if.end7, !dbg !8997

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8998
  %winx = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 10, !dbg !8999
  %6 = load i16, i16* %winx, align 2, !dbg !8999
  %conv = sext i16 %6 to i32, !dbg !8998
  %cmp4 = icmp slt i32 %conv, 64, !dbg !9000
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !9001

if.then6:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !9002
  br label %return, !dbg !9002

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %7 = load i32, i32* %dir, align 4, !dbg !9003
  %cmp8 = icmp eq i32 %7, 104, !dbg !9005
  br i1 %cmp8, label %land.lhs.true10, label %if.end15, !dbg !9006

land.lhs.true10:                                  ; preds = %if.end7
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9007
  %winy = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %8, i32 0, i32 11, !dbg !9008
  %9 = load i16, i16* %winy, align 4, !dbg !9008
  %conv11 = sext i16 %9 to i32, !dbg !9007
  %10 = load i32, i32* %areaminy, align 4, !dbg !9009
  %mul = mul nsw i32 2, %10, !dbg !9010
  %cmp12 = icmp slt i32 %conv11, %mul, !dbg !9011
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !9012

if.then14:                                        ; preds = %land.lhs.true10
  store i32 0, i32* %retval, align 4, !dbg !9013
  br label %return, !dbg !9013

if.end15:                                         ; preds = %land.lhs.true10, %if.end7
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9014
  %call16 = call i8* %11(i64 64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i64 0, i64 0)), !dbg !9014
  %12 = bitcast i8* %call16 to %struct.sAreaSplitData*, !dbg !9015
  store %struct.sAreaSplitData* %12, %struct.sAreaSplitData** %sd, align 8, !dbg !9016
  %13 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9017
  %14 = bitcast %struct.sAreaSplitData* %13 to i8*, !dbg !9017
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9018
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 5, !dbg !9019
  store i8* %14, i8** %customdata, align 8, !dbg !9020
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9021
  %17 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9022
  %sarea = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %17, i32 0, i32 10, !dbg !9023
  store %struct.ScrArea* %16, %struct.ScrArea** %sarea, align 8, !dbg !9024
  %18 = load i32, i32* %dir, align 4, !dbg !9025
  %cmp17 = icmp eq i32 %18, 118, !dbg !9026
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !9025

cond.true:                                        ; preds = %if.end15
  %19 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9027
  %winx19 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %19, i32 0, i32 10, !dbg !9028
  %20 = load i16, i16* %winx19, align 2, !dbg !9028
  %conv20 = sext i16 %20 to i32, !dbg !9027
  br label %cond.end, !dbg !9025

cond.false:                                       ; preds = %if.end15
  %21 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9029
  %winy21 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %21, i32 0, i32 11, !dbg !9030
  %22 = load i16, i16* %winy21, align 4, !dbg !9030
  %conv22 = sext i16 %22 to i32, !dbg !9029
  br label %cond.end, !dbg !9025

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv20, %cond.true ], [ %conv22, %cond.false ], !dbg !9025
  %23 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9031
  %origsize = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %23, i32 0, i32 7, !dbg !9032
  store i32 %cond, i32* %origsize, align 4, !dbg !9033
  %24 = load i32, i32* %dir, align 4, !dbg !9034
  %cmp23 = icmp eq i32 %24, 118, !dbg !9035
  br i1 %cmp23, label %cond.true25, label %cond.false26, !dbg !9034

cond.true25:                                      ; preds = %cond.end
  %25 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9036
  %totrct = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %25, i32 0, i32 7, !dbg !9037
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct, i32 0, i32 0, !dbg !9038
  %26 = load i32, i32* %xmin, align 8, !dbg !9038
  br label %cond.end28, !dbg !9034

cond.false26:                                     ; preds = %cond.end
  %27 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9039
  %totrct27 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %27, i32 0, i32 7, !dbg !9040
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %totrct27, i32 0, i32 2, !dbg !9041
  %28 = load i32, i32* %ymin, align 8, !dbg !9041
  br label %cond.end28, !dbg !9034

cond.end28:                                       ; preds = %cond.false26, %cond.true25
  %cond29 = phi i32 [ %26, %cond.true25 ], [ %28, %cond.false26 ], !dbg !9034
  %29 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9042
  %origmin = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %29, i32 0, i32 6, !dbg !9043
  store i32 %cond29, i32* %origmin, align 8, !dbg !9044
  store i32 1, i32* %retval, align 4, !dbg !9045
  br label %return, !dbg !9045

return:                                           ; preds = %cond.end28, %if.then14, %if.then6, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !9046
  ret i32 %30, !dbg !9046
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_split_apply(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9047 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sc = alloca %struct.bScreen*, align 8
  %sd = alloca %struct.sAreaSplitData*, align 8
  %fac = alloca float, align 4
  %dir = alloca i32, align 4
  %sv = alloca %struct.ScrVert*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9048, metadata !DIExpression()), !dbg !9049
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9050, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !9052, metadata !DIExpression()), !dbg !9053
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9054
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !9055
  store %struct.bScreen* %call, %struct.bScreen** %sc, align 8, !dbg !9053
  call void @llvm.dbg.declare(metadata %struct.sAreaSplitData** %sd, metadata !9056, metadata !DIExpression()), !dbg !9057
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9058
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 5, !dbg !9059
  %2 = load i8*, i8** %customdata, align 8, !dbg !9059
  %3 = bitcast i8* %2 to %struct.sAreaSplitData*, !dbg !9060
  store %struct.sAreaSplitData* %3, %struct.sAreaSplitData** %sd, align 8, !dbg !9057
  call void @llvm.dbg.declare(metadata float* %fac, metadata !9061, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !9063, metadata !DIExpression()), !dbg !9064
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9065
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !9066
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9066
  %call1 = call float @RNA_float_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i64 0, i64 0)), !dbg !9067
  store float %call1, float* %fac, align 4, !dbg !9068
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9069
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !9070
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !9070
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0)), !dbg !9071
  store i32 %call3, i32* %dir, align 4, !dbg !9072
  %8 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !9073
  %9 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9074
  %sarea = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %9, i32 0, i32 10, !dbg !9075
  %10 = load %struct.ScrArea*, %struct.ScrArea** %sarea, align 8, !dbg !9075
  %11 = load i32, i32* %dir, align 4, !dbg !9076
  %conv = trunc i32 %11 to i8, !dbg !9076
  %12 = load float, float* %fac, align 4, !dbg !9077
  %call4 = call %struct.ScrArea* @area_split(%struct.bScreen* %8, %struct.ScrArea* %10, i8 zeroext %conv, float %12, i32 0), !dbg !9078
  %13 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9079
  %narea = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %13, i32 0, i32 11, !dbg !9080
  store %struct.ScrArea* %call4, %struct.ScrArea** %narea, align 8, !dbg !9081
  %14 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9082
  %narea5 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %14, i32 0, i32 11, !dbg !9084
  %15 = load %struct.ScrArea*, %struct.ScrArea** %narea5, align 8, !dbg !9084
  %tobool = icmp ne %struct.ScrArea* %15, null, !dbg !9082
  br i1 %tobool, label %if.then, label %if.end26, !dbg !9085

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sv, metadata !9086, metadata !DIExpression()), !dbg !9088
  %16 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !9089
  %17 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9090
  %sarea6 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %17, i32 0, i32 10, !dbg !9091
  %18 = load %struct.ScrArea*, %struct.ScrArea** %sarea6, align 8, !dbg !9091
  %19 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9092
  %narea7 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %19, i32 0, i32 11, !dbg !9093
  %20 = load %struct.ScrArea*, %struct.ScrArea** %narea7, align 8, !dbg !9093
  %call8 = call %struct.ScrEdge* @area_findsharededge(%struct.bScreen* %16, %struct.ScrArea* %18, %struct.ScrArea* %20), !dbg !9094
  %21 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9095
  %nedge = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %21, i32 0, i32 9, !dbg !9096
  store %struct.ScrEdge* %call8, %struct.ScrEdge** %nedge, align 8, !dbg !9097
  %22 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !9098
  %vertbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %22, i32 0, i32 1, !dbg !9100
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %vertbase, i32 0, i32 0, !dbg !9101
  %23 = load i8*, i8** %first, align 8, !dbg !9101
  %24 = bitcast i8* %23 to %struct.ScrVert*, !dbg !9098
  store %struct.ScrVert* %24, %struct.ScrVert** %sv, align 8, !dbg !9102
  br label %for.cond, !dbg !9103

for.cond:                                         ; preds = %for.inc, %if.then
  %25 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !9104
  %tobool9 = icmp ne %struct.ScrVert* %25, null, !dbg !9106
  br i1 %tobool9, label %for.body, label %for.end, !dbg !9106

for.body:                                         ; preds = %for.cond
  %26 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !9107
  %editflag = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %26, i32 0, i32 5, !dbg !9108
  store i16 0, i16* %editflag, align 2, !dbg !9109
  br label %for.inc, !dbg !9107

for.inc:                                          ; preds = %for.body
  %27 = load %struct.ScrVert*, %struct.ScrVert** %sv, align 8, !dbg !9110
  %next = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %27, i32 0, i32 0, !dbg !9111
  %28 = load %struct.ScrVert*, %struct.ScrVert** %next, align 8, !dbg !9111
  store %struct.ScrVert* %28, %struct.ScrVert** %sv, align 8, !dbg !9112
  br label %for.cond, !dbg !9113, !llvm.loop !9114

for.end:                                          ; preds = %for.cond
  %29 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9116
  %nedge10 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %29, i32 0, i32 9, !dbg !9117
  %30 = load %struct.ScrEdge*, %struct.ScrEdge** %nedge10, align 8, !dbg !9117
  %v1 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %30, i32 0, i32 2, !dbg !9118
  %31 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !9118
  %editflag11 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %31, i32 0, i32 5, !dbg !9119
  store i16 1, i16* %editflag11, align 2, !dbg !9120
  %32 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9121
  %nedge12 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %32, i32 0, i32 9, !dbg !9122
  %33 = load %struct.ScrEdge*, %struct.ScrEdge** %nedge12, align 8, !dbg !9122
  %v2 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %33, i32 0, i32 3, !dbg !9123
  %34 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !9123
  %editflag13 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %34, i32 0, i32 5, !dbg !9124
  store i16 1, i16* %editflag13, align 2, !dbg !9125
  %35 = load i32, i32* %dir, align 4, !dbg !9126
  %cmp = icmp eq i32 %35, 104, !dbg !9128
  br i1 %cmp, label %if.then15, label %if.else, !dbg !9129

if.then15:                                        ; preds = %for.end
  %36 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9130
  %nedge16 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %36, i32 0, i32 9, !dbg !9131
  %37 = load %struct.ScrEdge*, %struct.ScrEdge** %nedge16, align 8, !dbg !9131
  %v117 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %37, i32 0, i32 2, !dbg !9132
  %38 = load %struct.ScrVert*, %struct.ScrVert** %v117, align 8, !dbg !9132
  %vec = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %38, i32 0, i32 3, !dbg !9133
  %y = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec, i32 0, i32 1, !dbg !9134
  %39 = load i16, i16* %y, align 2, !dbg !9134
  %conv18 = sext i16 %39 to i32, !dbg !9130
  %40 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9135
  %origval = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %40, i32 0, i32 2, !dbg !9136
  store i32 %conv18, i32* %origval, align 8, !dbg !9137
  br label %if.end, !dbg !9135

if.else:                                          ; preds = %for.end
  %41 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9138
  %nedge19 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %41, i32 0, i32 9, !dbg !9139
  %42 = load %struct.ScrEdge*, %struct.ScrEdge** %nedge19, align 8, !dbg !9139
  %v120 = getelementptr inbounds %struct.ScrEdge, %struct.ScrEdge* %42, i32 0, i32 2, !dbg !9140
  %43 = load %struct.ScrVert*, %struct.ScrVert** %v120, align 8, !dbg !9140
  %vec21 = getelementptr inbounds %struct.ScrVert, %struct.ScrVert* %43, i32 0, i32 3, !dbg !9141
  %x = getelementptr inbounds %struct.vec2s, %struct.vec2s* %vec21, i32 0, i32 0, !dbg !9142
  %44 = load i16, i16* %x, align 8, !dbg !9142
  %conv22 = sext i16 %44 to i32, !dbg !9138
  %45 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9143
  %origval23 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %45, i32 0, i32 2, !dbg !9144
  store i32 %conv22, i32* %origval23, align 8, !dbg !9145
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then15
  %46 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9146
  %sarea24 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %46, i32 0, i32 10, !dbg !9147
  %47 = load %struct.ScrArea*, %struct.ScrArea** %sarea24, align 8, !dbg !9147
  call void @ED_area_tag_redraw(%struct.ScrArea* %47), !dbg !9148
  %48 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9149
  %narea25 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %48, i32 0, i32 11, !dbg !9150
  %49 = load %struct.ScrArea*, %struct.ScrArea** %narea25, align 8, !dbg !9150
  call void @ED_area_tag_redraw(%struct.ScrArea* %49), !dbg !9151
  %50 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9152
  call void @WM_event_add_notifier(%struct.bContext* %50, i32 50331649, i8* null), !dbg !9153
  store i32 1, i32* %retval, align 4, !dbg !9154
  br label %return, !dbg !9154

if.end26:                                         ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9155
  br label %return, !dbg !9155

return:                                           ; preds = %if.end26, %if.end
  %51 = load i32, i32* %retval, align 4, !dbg !9156
  ret i32 %51, !dbg !9156
}

; Function Attrs: noinline nounwind uwtable
define internal void @area_split_exit(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9157 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sd = alloca %struct.sAreaSplitData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9158, metadata !DIExpression()), !dbg !9159
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9160, metadata !DIExpression()), !dbg !9161
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9162
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !9164
  %1 = load i8*, i8** %customdata, align 8, !dbg !9164
  %tobool = icmp ne i8* %1, null, !dbg !9162
  br i1 %tobool, label %if.then, label %if.end17, !dbg !9165

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.sAreaSplitData** %sd, metadata !9166, metadata !DIExpression()), !dbg !9168
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9169
  %customdata1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 5, !dbg !9170
  %3 = load i8*, i8** %customdata1, align 8, !dbg !9170
  %4 = bitcast i8* %3 to %struct.sAreaSplitData*, !dbg !9171
  store %struct.sAreaSplitData* %4, %struct.sAreaSplitData** %sd, align 8, !dbg !9168
  %5 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9172
  %sarea = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %5, i32 0, i32 10, !dbg !9174
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sarea, align 8, !dbg !9174
  %tobool2 = icmp ne %struct.ScrArea* %6, null, !dbg !9172
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !9175

if.then3:                                         ; preds = %if.then
  %7 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9176
  %sarea4 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %7, i32 0, i32 10, !dbg !9177
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sarea4, align 8, !dbg !9177
  call void @ED_area_tag_redraw(%struct.ScrArea* %8), !dbg !9178
  br label %if.end, !dbg !9178

if.end:                                           ; preds = %if.then3, %if.then
  %9 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9179
  %narea = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %9, i32 0, i32 11, !dbg !9181
  %10 = load %struct.ScrArea*, %struct.ScrArea** %narea, align 8, !dbg !9181
  %tobool5 = icmp ne %struct.ScrArea* %10, null, !dbg !9179
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !9182

if.then6:                                         ; preds = %if.end
  %11 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9183
  %narea7 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %11, i32 0, i32 11, !dbg !9184
  %12 = load %struct.ScrArea*, %struct.ScrArea** %narea7, align 8, !dbg !9184
  call void @ED_area_tag_redraw(%struct.ScrArea* %12), !dbg !9185
  br label %if.end8, !dbg !9185

if.end8:                                          ; preds = %if.then6, %if.end
  %13 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9186
  %sarea9 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %13, i32 0, i32 10, !dbg !9188
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sarea9, align 8, !dbg !9188
  %tobool10 = icmp ne %struct.ScrArea* %14, null, !dbg !9186
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !9189

if.then11:                                        ; preds = %if.end8
  %15 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9190
  %sarea12 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %15, i32 0, i32 10, !dbg !9191
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sarea12, align 8, !dbg !9191
  %flag = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %16, i32 0, i32 14, !dbg !9192
  %17 = load i16, i16* %flag, align 2, !dbg !9193
  %conv = sext i16 %17 to i32, !dbg !9193
  %and = and i32 %conv, -49, !dbg !9193
  %conv13 = trunc i32 %and to i16, !dbg !9193
  store i16 %conv13, i16* %flag, align 2, !dbg !9193
  br label %if.end14, !dbg !9190

if.end14:                                         ; preds = %if.then11, %if.end8
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9194
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9195
  %customdata15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %19, i32 0, i32 5, !dbg !9196
  %20 = load i8*, i8** %customdata15, align 8, !dbg !9196
  call void %18(i8* %20), !dbg !9194
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9197
  %customdata16 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %21, i32 0, i32 5, !dbg !9198
  store i8* null, i8** %customdata16, align 8, !dbg !9199
  br label %if.end17, !dbg !9200

if.end17:                                         ; preds = %if.end14, %entry
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9201
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %22), !dbg !9202
  call void @WM_cursor_modal_restore(%struct.wmWindow* %call), !dbg !9203
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9204
  call void @WM_event_add_notifier(%struct.bContext* %23, i32 50331649, i8* null), !dbg !9205
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9206
  %call18 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %24), !dbg !9207
  call void @removedouble_scrverts(%struct.bScreen* %call18), !dbg !9208
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9209
  %call19 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %25), !dbg !9210
  call void @removedouble_scredges(%struct.bScreen* %call19), !dbg !9211
  ret void, !dbg !9212
}

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

declare dso_local float @RNA_float_get(%struct.PointerRNA*, i8*) #2

declare dso_local %struct.ScrArea* @area_split(%struct.bScreen*, %struct.ScrArea*, i8 zeroext, float, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.ScrEdge* @area_findsharededge(%struct.bScreen* %screen, %struct.ScrArea* %sa, %struct.ScrArea* %sb) #0 !dbg !9213 {
entry:
  %retval = alloca %struct.ScrEdge*, align 8
  %screen.addr = alloca %struct.bScreen*, align 8
  %sa.addr = alloca %struct.ScrArea*, align 8
  %sb.addr = alloca %struct.ScrArea*, align 8
  %sav1 = alloca %struct.ScrVert*, align 8
  %sav2 = alloca %struct.ScrVert*, align 8
  %sav3 = alloca %struct.ScrVert*, align 8
  %sav4 = alloca %struct.ScrVert*, align 8
  %sbv1 = alloca %struct.ScrVert*, align 8
  %sbv2 = alloca %struct.ScrVert*, align 8
  %sbv3 = alloca %struct.ScrVert*, align 8
  %sbv4 = alloca %struct.ScrVert*, align 8
  store %struct.bScreen* %screen, %struct.bScreen** %screen.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen.addr, metadata !9216, metadata !DIExpression()), !dbg !9217
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !9218, metadata !DIExpression()), !dbg !9219
  store %struct.ScrArea* %sb, %struct.ScrArea** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sb.addr, metadata !9220, metadata !DIExpression()), !dbg !9221
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sav1, metadata !9222, metadata !DIExpression()), !dbg !9223
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9224
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %0, i32 0, i32 2, !dbg !9225
  %1 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !9225
  store %struct.ScrVert* %1, %struct.ScrVert** %sav1, align 8, !dbg !9223
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sav2, metadata !9226, metadata !DIExpression()), !dbg !9227
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9228
  %v2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %2, i32 0, i32 3, !dbg !9229
  %3 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !9229
  store %struct.ScrVert* %3, %struct.ScrVert** %sav2, align 8, !dbg !9227
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sav3, metadata !9230, metadata !DIExpression()), !dbg !9231
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9232
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 4, !dbg !9233
  %5 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !9233
  store %struct.ScrVert* %5, %struct.ScrVert** %sav3, align 8, !dbg !9231
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sav4, metadata !9234, metadata !DIExpression()), !dbg !9235
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !9236
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 5, !dbg !9237
  %7 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !9237
  store %struct.ScrVert* %7, %struct.ScrVert** %sav4, align 8, !dbg !9235
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sbv1, metadata !9238, metadata !DIExpression()), !dbg !9239
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sb.addr, align 8, !dbg !9240
  %v11 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %8, i32 0, i32 2, !dbg !9241
  %9 = load %struct.ScrVert*, %struct.ScrVert** %v11, align 8, !dbg !9241
  store %struct.ScrVert* %9, %struct.ScrVert** %sbv1, align 8, !dbg !9239
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sbv2, metadata !9242, metadata !DIExpression()), !dbg !9243
  %10 = load %struct.ScrArea*, %struct.ScrArea** %sb.addr, align 8, !dbg !9244
  %v22 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %10, i32 0, i32 3, !dbg !9245
  %11 = load %struct.ScrVert*, %struct.ScrVert** %v22, align 8, !dbg !9245
  store %struct.ScrVert* %11, %struct.ScrVert** %sbv2, align 8, !dbg !9243
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sbv3, metadata !9246, metadata !DIExpression()), !dbg !9247
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sb.addr, align 8, !dbg !9248
  %v33 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %12, i32 0, i32 4, !dbg !9249
  %13 = load %struct.ScrVert*, %struct.ScrVert** %v33, align 8, !dbg !9249
  store %struct.ScrVert* %13, %struct.ScrVert** %sbv3, align 8, !dbg !9247
  call void @llvm.dbg.declare(metadata %struct.ScrVert** %sbv4, metadata !9250, metadata !DIExpression()), !dbg !9251
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sb.addr, align 8, !dbg !9252
  %v44 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %14, i32 0, i32 5, !dbg !9253
  %15 = load %struct.ScrVert*, %struct.ScrVert** %v44, align 8, !dbg !9253
  store %struct.ScrVert* %15, %struct.ScrVert** %sbv4, align 8, !dbg !9251
  %16 = load %struct.ScrVert*, %struct.ScrVert** %sav1, align 8, !dbg !9254
  %17 = load %struct.ScrVert*, %struct.ScrVert** %sbv4, align 8, !dbg !9256
  %cmp = icmp eq %struct.ScrVert* %16, %17, !dbg !9257
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9258

land.lhs.true:                                    ; preds = %entry
  %18 = load %struct.ScrVert*, %struct.ScrVert** %sav2, align 8, !dbg !9259
  %19 = load %struct.ScrVert*, %struct.ScrVert** %sbv3, align 8, !dbg !9260
  %cmp5 = icmp eq %struct.ScrVert* %18, %19, !dbg !9261
  br i1 %cmp5, label %if.then, label %if.else, !dbg !9262

if.then:                                          ; preds = %land.lhs.true
  %20 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !9263
  %21 = load %struct.ScrVert*, %struct.ScrVert** %sav1, align 8, !dbg !9265
  %22 = load %struct.ScrVert*, %struct.ScrVert** %sav2, align 8, !dbg !9266
  %call = call %struct.ScrEdge* @screen_findedge(%struct.bScreen* %20, %struct.ScrVert* %21, %struct.ScrVert* %22), !dbg !9267
  store %struct.ScrEdge* %call, %struct.ScrEdge** %retval, align 8, !dbg !9268
  br label %return, !dbg !9268

if.else:                                          ; preds = %land.lhs.true, %entry
  %23 = load %struct.ScrVert*, %struct.ScrVert** %sav2, align 8, !dbg !9269
  %24 = load %struct.ScrVert*, %struct.ScrVert** %sbv1, align 8, !dbg !9271
  %cmp6 = icmp eq %struct.ScrVert* %23, %24, !dbg !9272
  br i1 %cmp6, label %land.lhs.true7, label %if.else11, !dbg !9273

land.lhs.true7:                                   ; preds = %if.else
  %25 = load %struct.ScrVert*, %struct.ScrVert** %sav3, align 8, !dbg !9274
  %26 = load %struct.ScrVert*, %struct.ScrVert** %sbv4, align 8, !dbg !9275
  %cmp8 = icmp eq %struct.ScrVert* %25, %26, !dbg !9276
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !9277

if.then9:                                         ; preds = %land.lhs.true7
  %27 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !9278
  %28 = load %struct.ScrVert*, %struct.ScrVert** %sav2, align 8, !dbg !9280
  %29 = load %struct.ScrVert*, %struct.ScrVert** %sav3, align 8, !dbg !9281
  %call10 = call %struct.ScrEdge* @screen_findedge(%struct.bScreen* %27, %struct.ScrVert* %28, %struct.ScrVert* %29), !dbg !9282
  store %struct.ScrEdge* %call10, %struct.ScrEdge** %retval, align 8, !dbg !9283
  br label %return, !dbg !9283

if.else11:                                        ; preds = %land.lhs.true7, %if.else
  %30 = load %struct.ScrVert*, %struct.ScrVert** %sav3, align 8, !dbg !9284
  %31 = load %struct.ScrVert*, %struct.ScrVert** %sbv2, align 8, !dbg !9286
  %cmp12 = icmp eq %struct.ScrVert* %30, %31, !dbg !9287
  br i1 %cmp12, label %land.lhs.true13, label %if.else17, !dbg !9288

land.lhs.true13:                                  ; preds = %if.else11
  %32 = load %struct.ScrVert*, %struct.ScrVert** %sav4, align 8, !dbg !9289
  %33 = load %struct.ScrVert*, %struct.ScrVert** %sbv1, align 8, !dbg !9290
  %cmp14 = icmp eq %struct.ScrVert* %32, %33, !dbg !9291
  br i1 %cmp14, label %if.then15, label %if.else17, !dbg !9292

if.then15:                                        ; preds = %land.lhs.true13
  %34 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !9293
  %35 = load %struct.ScrVert*, %struct.ScrVert** %sav3, align 8, !dbg !9295
  %36 = load %struct.ScrVert*, %struct.ScrVert** %sav4, align 8, !dbg !9296
  %call16 = call %struct.ScrEdge* @screen_findedge(%struct.bScreen* %34, %struct.ScrVert* %35, %struct.ScrVert* %36), !dbg !9297
  store %struct.ScrEdge* %call16, %struct.ScrEdge** %retval, align 8, !dbg !9298
  br label %return, !dbg !9298

if.else17:                                        ; preds = %land.lhs.true13, %if.else11
  %37 = load %struct.ScrVert*, %struct.ScrVert** %sav1, align 8, !dbg !9299
  %38 = load %struct.ScrVert*, %struct.ScrVert** %sbv2, align 8, !dbg !9301
  %cmp18 = icmp eq %struct.ScrVert* %37, %38, !dbg !9302
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !9303

land.lhs.true19:                                  ; preds = %if.else17
  %39 = load %struct.ScrVert*, %struct.ScrVert** %sav4, align 8, !dbg !9304
  %40 = load %struct.ScrVert*, %struct.ScrVert** %sbv3, align 8, !dbg !9305
  %cmp20 = icmp eq %struct.ScrVert* %39, %40, !dbg !9306
  br i1 %cmp20, label %if.then21, label %if.end, !dbg !9307

if.then21:                                        ; preds = %land.lhs.true19
  %41 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !9308
  %42 = load %struct.ScrVert*, %struct.ScrVert** %sav1, align 8, !dbg !9310
  %43 = load %struct.ScrVert*, %struct.ScrVert** %sav4, align 8, !dbg !9311
  %call22 = call %struct.ScrEdge* @screen_findedge(%struct.bScreen* %41, %struct.ScrVert* %42, %struct.ScrVert* %43), !dbg !9312
  store %struct.ScrEdge* %call22, %struct.ScrEdge** %retval, align 8, !dbg !9313
  br label %return, !dbg !9313

if.end:                                           ; preds = %land.lhs.true19, %if.else17
  br label %if.end23

if.end23:                                         ; preds = %if.end
  br label %if.end24

if.end24:                                         ; preds = %if.end23
  br label %if.end25

if.end25:                                         ; preds = %if.end24
  store %struct.ScrEdge* null, %struct.ScrEdge** %retval, align 8, !dbg !9314
  br label %return, !dbg !9314

return:                                           ; preds = %if.end25, %if.then21, %if.then15, %if.then9, %if.then
  %44 = load %struct.ScrEdge*, %struct.ScrEdge** %retval, align 8, !dbg !9315
  ret %struct.ScrEdge* %44, !dbg !9315
}

declare dso_local %struct.ScrEdge* @screen_findedge(%struct.bScreen*, %struct.ScrVert*, %struct.ScrVert*) #2

declare dso_local void @WM_cursor_modal_restore(%struct.wmWindow*) #2

declare dso_local void @RNA_float_set(%struct.PointerRNA*, i8*, float) #2

declare dso_local void @RNA_enum_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_split_menu_init(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9316 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sd = alloca %struct.sAreaSplitData*, align 8
  %dir = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9317, metadata !DIExpression()), !dbg !9318
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9319, metadata !DIExpression()), !dbg !9320
  call void @llvm.dbg.declare(metadata %struct.sAreaSplitData** %sd, metadata !9321, metadata !DIExpression()), !dbg !9322
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9323
  %call = call i8* %0(i64 64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i64 0, i64 0)), !dbg !9323
  %1 = bitcast i8* %call to %struct.sAreaSplitData*, !dbg !9324
  store %struct.sAreaSplitData* %1, %struct.sAreaSplitData** %sd, align 8, !dbg !9325
  %2 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9326
  %3 = bitcast %struct.sAreaSplitData* %2 to i8*, !dbg !9326
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9327
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 5, !dbg !9328
  store i8* %3, i8** %customdata, align 8, !dbg !9329
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9330
  %call1 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %5), !dbg !9331
  %6 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9332
  %sarea = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %6, i32 0, i32 10, !dbg !9333
  store %struct.ScrArea* %call1, %struct.ScrArea** %sarea, align 8, !dbg !9334
  %7 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9335
  %sarea2 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %7, i32 0, i32 10, !dbg !9337
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sarea2, align 8, !dbg !9337
  %tobool = icmp ne %struct.ScrArea* %8, null, !dbg !9335
  br i1 %tobool, label %if.then, label %if.end12, !dbg !9338

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !9339, metadata !DIExpression()), !dbg !9341
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9342
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !9343
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9343
  %call3 = call i32 @RNA_enum_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0)), !dbg !9344
  store i32 %call3, i32* %dir, align 4, !dbg !9341
  %11 = load i32, i32* %dir, align 4, !dbg !9345
  %cmp = icmp eq i32 %11, 104, !dbg !9347
  br i1 %cmp, label %if.then4, label %if.else, !dbg !9348

if.then4:                                         ; preds = %if.then
  %12 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9349
  %sarea5 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %12, i32 0, i32 10, !dbg !9350
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sarea5, align 8, !dbg !9350
  %flag = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 14, !dbg !9351
  %14 = load i16, i16* %flag, align 2, !dbg !9352
  %conv = sext i16 %14 to i32, !dbg !9352
  %or = or i32 %conv, 16, !dbg !9352
  %conv6 = trunc i32 %or to i16, !dbg !9352
  store i16 %conv6, i16* %flag, align 2, !dbg !9352
  br label %if.end, !dbg !9349

if.else:                                          ; preds = %if.then
  %15 = load %struct.sAreaSplitData*, %struct.sAreaSplitData** %sd, align 8, !dbg !9353
  %sarea7 = getelementptr inbounds %struct.sAreaSplitData, %struct.sAreaSplitData* %15, i32 0, i32 10, !dbg !9354
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sarea7, align 8, !dbg !9354
  %flag8 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %16, i32 0, i32 14, !dbg !9355
  %17 = load i16, i16* %flag8, align 2, !dbg !9356
  %conv9 = sext i16 %17 to i32, !dbg !9356
  %or10 = or i32 %conv9, 32, !dbg !9356
  %conv11 = trunc i32 %or10 to i16, !dbg !9356
  store i16 %conv11, i16* %flag8, align 2, !dbg !9356
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end12, !dbg !9357

if.end12:                                         ; preds = %if.end, %entry
  ret i32 1, !dbg !9358
}

declare dso_local void @WM_cursor_set(%struct.wmWindow*, i32) #2

declare dso_local i32 @screen_area_join(%struct.bContext*, %struct.bScreen*, %struct.ScrArea*, %struct.ScrArea*) #2

declare dso_local void @CTX_wm_area_set(%struct.bContext*, %struct.ScrArea*) #2

declare dso_local void @CTX_wm_region_set(%struct.bContext*, %struct.ARegion*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_join_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9359 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9360, metadata !DIExpression()), !dbg !9361
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9362, metadata !DIExpression()), !dbg !9363
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9364
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9366
  %call = call i32 @area_join_init(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !9367
  %tobool = icmp ne i32 %call, 0, !dbg !9367
  br i1 %tobool, label %if.end, label %if.then, !dbg !9368

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !9369
  br label %return, !dbg !9369

if.end:                                           ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9370
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9371
  %call1 = call i32 @area_join_apply(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !9372
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9373
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9374
  call void @area_join_exit(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !9375
  store i32 4, i32* %retval, align 4, !dbg !9376
  br label %return, !dbg !9376

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9377
  ret i32 %6, !dbg !9377
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_join_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !9378 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sad = alloca %struct.sActionzoneData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9379, metadata !DIExpression()), !dbg !9380
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9381, metadata !DIExpression()), !dbg !9382
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !9383, metadata !DIExpression()), !dbg !9384
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9385
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 2, !dbg !9387
  %1 = load i16, i16* %type, align 8, !dbg !9387
  %conv = sext i16 %1 to i32, !dbg !9385
  %cmp = icmp eq i32 %conv, 20480, !dbg !9388
  br i1 %cmp, label %if.then, label %if.end25, !dbg !9389

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.sActionzoneData** %sad, metadata !9390, metadata !DIExpression()), !dbg !9392
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9393
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 28, !dbg !9394
  %3 = load i8*, i8** %customdata, align 8, !dbg !9394
  %4 = bitcast i8* %3 to %struct.sActionzoneData*, !dbg !9393
  store %struct.sActionzoneData* %4, %struct.sActionzoneData** %sad, align 8, !dbg !9392
  %5 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !9395
  %cmp2 = icmp eq %struct.sActionzoneData* %5, null, !dbg !9397
  br i1 %cmp2, label %if.then6, label %lor.lhs.false, !dbg !9398

lor.lhs.false:                                    ; preds = %if.then
  %6 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !9399
  %modifier = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %6, i32 0, i32 6, !dbg !9400
  %7 = load i32, i32* %modifier, align 4, !dbg !9400
  %cmp4 = icmp sgt i32 %7, 0, !dbg !9401
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !9402

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  store i32 8, i32* %retval, align 4, !dbg !9403
  br label %return, !dbg !9403

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !9405
  %sa1 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %8, i32 0, i32 0, !dbg !9407
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9407
  %cmp7 = icmp eq %struct.ScrArea* %9, null, !dbg !9408
  br i1 %cmp7, label %if.then12, label %lor.lhs.false9, !dbg !9409

lor.lhs.false9:                                   ; preds = %if.end
  %10 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !9410
  %sa2 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %10, i32 0, i32 1, !dbg !9411
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9411
  %cmp10 = icmp eq %struct.ScrArea* %11, null, !dbg !9412
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9413

if.then12:                                        ; preds = %lor.lhs.false9, %if.end
  store i32 8, i32* %retval, align 4, !dbg !9414
  br label %return, !dbg !9414

if.end13:                                         ; preds = %lor.lhs.false9
  %12 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !9415
  %sa114 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %12, i32 0, i32 0, !dbg !9417
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa114, align 8, !dbg !9417
  %14 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !9418
  %sa215 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %14, i32 0, i32 1, !dbg !9419
  %15 = load %struct.ScrArea*, %struct.ScrArea** %sa215, align 8, !dbg !9419
  %cmp16 = icmp eq %struct.ScrArea* %13, %15, !dbg !9420
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !9421

if.then18:                                        ; preds = %if.end13
  store i32 8, i32* %retval, align 4, !dbg !9422
  br label %return, !dbg !9422

if.end19:                                         ; preds = %if.end13
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9423
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 7, !dbg !9424
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9424
  %18 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !9425
  %x = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %18, i32 0, i32 3, !dbg !9426
  %19 = load i32, i32* %x, align 8, !dbg !9426
  call void @RNA_int_set(%struct.PointerRNA* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0), i32 %19), !dbg !9427
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9428
  %ptr20 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 7, !dbg !9429
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr20, align 8, !dbg !9429
  %22 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !9430
  %y = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %22, i32 0, i32 4, !dbg !9431
  %23 = load i32, i32* %y, align 4, !dbg !9431
  call void @RNA_int_set(%struct.PointerRNA* %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0), i32 %23), !dbg !9432
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9433
  %ptr21 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %24, i32 0, i32 7, !dbg !9434
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr21, align 8, !dbg !9434
  %26 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9435
  %x22 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %26, i32 0, i32 4, !dbg !9436
  %27 = load i32, i32* %x22, align 4, !dbg !9436
  call void @RNA_int_set(%struct.PointerRNA* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), i32 %27), !dbg !9437
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9438
  %ptr23 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %28, i32 0, i32 7, !dbg !9439
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr23, align 8, !dbg !9439
  %30 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9440
  %y24 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %30, i32 0, i32 5, !dbg !9441
  %31 = load i32, i32* %y24, align 8, !dbg !9441
  call void @RNA_int_set(%struct.PointerRNA* %29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0), i32 %31), !dbg !9442
  br label %if.end25, !dbg !9443

if.end25:                                         ; preds = %if.end19, %entry
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9444
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9446
  %call = call i32 @area_join_init(%struct.bContext* %32, %struct.wmOperator* %33), !dbg !9447
  %tobool = icmp ne i32 %call, 0, !dbg !9447
  br i1 %tobool, label %if.end27, label %if.then26, !dbg !9448

if.then26:                                        ; preds = %if.end25
  store i32 8, i32* %retval, align 4, !dbg !9449
  br label %return, !dbg !9449

if.end27:                                         ; preds = %if.end25
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9450
  %35 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9451
  %call28 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %34, %struct.wmOperator* %35), !dbg !9452
  store i32 1, i32* %retval, align 4, !dbg !9453
  br label %return, !dbg !9453

return:                                           ; preds = %if.end27, %if.then26, %if.then18, %if.then12, %if.then6
  %36 = load i32, i32* %retval, align 4, !dbg !9454
  ret i32 %36, !dbg !9454
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_join_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !9455 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sc = alloca %struct.bScreen*, align 8
  %jd = alloca %struct.sAreaJoinData*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %dir = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9456, metadata !DIExpression()), !dbg !9457
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9458, metadata !DIExpression()), !dbg !9459
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !9460, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !9462, metadata !DIExpression()), !dbg !9463
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9464
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !9465
  store %struct.bScreen* %call, %struct.bScreen** %sc, align 8, !dbg !9463
  call void @llvm.dbg.declare(metadata %struct.sAreaJoinData** %jd, metadata !9466, metadata !DIExpression()), !dbg !9467
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9468
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 5, !dbg !9469
  %2 = load i8*, i8** %customdata, align 8, !dbg !9469
  %3 = bitcast i8* %2 to %struct.sAreaJoinData*, !dbg !9470
  store %struct.sAreaJoinData* %3, %struct.sAreaJoinData** %jd, align 8, !dbg !9467
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9471
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 2, !dbg !9472
  %5 = load i16, i16* %type, align 8, !dbg !9472
  %conv = sext i16 %5 to i32, !dbg !9471
  switch i32 %conv, label %sw.epilog [
    i32 4, label %sw.bb
    i32 1, label %sw.bb153
    i32 3, label %sw.bb162
    i32 218, label %sw.bb162
  ], !dbg !9473

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !9474, metadata !DIExpression()), !dbg !9477
  %6 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !9478
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9479
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 4, !dbg !9480
  %8 = load i32, i32* %x, align 4, !dbg !9480
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9481
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 5, !dbg !9482
  %10 = load i32, i32* %y, align 8, !dbg !9482
  %call1 = call %struct.ScrArea* @screen_areahascursor(%struct.bScreen* %6, i32 %8, i32 %10), !dbg !9483
  store %struct.ScrArea* %call1, %struct.ScrArea** %sa, align 8, !dbg !9477
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !9484, metadata !DIExpression()), !dbg !9485
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9486
  %tobool = icmp ne %struct.ScrArea* %11, null, !dbg !9486
  br i1 %tobool, label %if.then, label %if.end152, !dbg !9488

if.then:                                          ; preds = %sw.bb
  %12 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9489
  %sa1 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %12, i32 0, i32 0, !dbg !9492
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9492
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9493
  %cmp = icmp ne %struct.ScrArea* %13, %14, !dbg !9494
  br i1 %cmp, label %if.then3, label %if.else76, !dbg !9495

if.then3:                                         ; preds = %if.then
  %15 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9496
  %sa14 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %15, i32 0, i32 0, !dbg !9498
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa14, align 8, !dbg !9498
  %17 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9499
  %call5 = call i32 @area_getorientation(%struct.ScrArea* %16, %struct.ScrArea* %17), !dbg !9500
  store i32 %call5, i32* %dir, align 4, !dbg !9501
  %18 = load i32, i32* %dir, align 4, !dbg !9502
  %cmp6 = icmp ne i32 %18, -1, !dbg !9504
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !9505

if.then8:                                         ; preds = %if.then3
  %19 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9506
  %sa2 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %19, i32 0, i32 1, !dbg !9509
  %20 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9509
  %tobool9 = icmp ne %struct.ScrArea* %20, null, !dbg !9506
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !9510

if.then10:                                        ; preds = %if.then8
  %21 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9511
  %sa211 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %21, i32 0, i32 1, !dbg !9512
  %22 = load %struct.ScrArea*, %struct.ScrArea** %sa211, align 8, !dbg !9512
  %flag = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %22, i32 0, i32 14, !dbg !9513
  %23 = load i16, i16* %flag, align 2, !dbg !9514
  %conv12 = sext i16 %23 to i32, !dbg !9514
  %and = and i32 %conv12, -3, !dbg !9514
  %conv13 = trunc i32 %and to i16, !dbg !9514
  store i16 %conv13, i16* %flag, align 2, !dbg !9514
  br label %if.end, !dbg !9511

if.end:                                           ; preds = %if.then10, %if.then8
  %24 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9515
  %25 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9516
  %sa214 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %25, i32 0, i32 1, !dbg !9517
  store %struct.ScrArea* %24, %struct.ScrArea** %sa214, align 8, !dbg !9518
  %26 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9519
  %sa215 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %26, i32 0, i32 1, !dbg !9520
  %27 = load %struct.ScrArea*, %struct.ScrArea** %sa215, align 8, !dbg !9520
  %flag16 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %27, i32 0, i32 14, !dbg !9521
  %28 = load i16, i16* %flag16, align 2, !dbg !9522
  %conv17 = sext i16 %28 to i32, !dbg !9522
  %or = or i32 %conv17, 2, !dbg !9522
  %conv18 = trunc i32 %or to i16, !dbg !9522
  store i16 %conv18, i16* %flag16, align 2, !dbg !9522
  br label %if.end75, !dbg !9523

if.else:                                          ; preds = %if.then3
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9524
  %30 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9526
  %sa219 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %30, i32 0, i32 1, !dbg !9527
  %31 = load %struct.ScrArea*, %struct.ScrArea** %sa219, align 8, !dbg !9527
  %call20 = call i32 @area_getorientation(%struct.ScrArea* %29, %struct.ScrArea* %31), !dbg !9528
  store i32 %call20, i32* %dir, align 4, !dbg !9529
  %32 = load i32, i32* %dir, align 4, !dbg !9530
  %cmp21 = icmp ne i32 %32, -1, !dbg !9532
  br i1 %cmp21, label %if.then23, label %if.else63, !dbg !9533

if.then23:                                        ; preds = %if.else
  %33 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9534
  %sa124 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %33, i32 0, i32 0, !dbg !9537
  %34 = load %struct.ScrArea*, %struct.ScrArea** %sa124, align 8, !dbg !9537
  %tobool25 = icmp ne %struct.ScrArea* %34, null, !dbg !9534
  br i1 %tobool25, label %if.then26, label %if.end32, !dbg !9538

if.then26:                                        ; preds = %if.then23
  %35 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9539
  %sa127 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %35, i32 0, i32 0, !dbg !9540
  %36 = load %struct.ScrArea*, %struct.ScrArea** %sa127, align 8, !dbg !9540
  %flag28 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %36, i32 0, i32 14, !dbg !9541
  %37 = load i16, i16* %flag28, align 2, !dbg !9542
  %conv29 = sext i16 %37 to i32, !dbg !9542
  %and30 = and i32 %conv29, -5, !dbg !9542
  %conv31 = trunc i32 %and30 to i16, !dbg !9542
  store i16 %conv31, i16* %flag28, align 2, !dbg !9542
  br label %if.end32, !dbg !9539

if.end32:                                         ; preds = %if.then26, %if.then23
  %38 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9543
  %sa233 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %38, i32 0, i32 1, !dbg !9545
  %39 = load %struct.ScrArea*, %struct.ScrArea** %sa233, align 8, !dbg !9545
  %tobool34 = icmp ne %struct.ScrArea* %39, null, !dbg !9543
  br i1 %tobool34, label %if.then35, label %if.end41, !dbg !9546

if.then35:                                        ; preds = %if.end32
  %40 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9547
  %sa236 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %40, i32 0, i32 1, !dbg !9548
  %41 = load %struct.ScrArea*, %struct.ScrArea** %sa236, align 8, !dbg !9548
  %flag37 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %41, i32 0, i32 14, !dbg !9549
  %42 = load i16, i16* %flag37, align 2, !dbg !9550
  %conv38 = sext i16 %42 to i32, !dbg !9550
  %and39 = and i32 %conv38, -3, !dbg !9550
  %conv40 = trunc i32 %and39 to i16, !dbg !9550
  store i16 %conv40, i16* %flag37, align 2, !dbg !9550
  br label %if.end41, !dbg !9547

if.end41:                                         ; preds = %if.then35, %if.end32
  %43 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9551
  %sa242 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %43, i32 0, i32 1, !dbg !9552
  %44 = load %struct.ScrArea*, %struct.ScrArea** %sa242, align 8, !dbg !9552
  %45 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9553
  %sa143 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %45, i32 0, i32 0, !dbg !9554
  store %struct.ScrArea* %44, %struct.ScrArea** %sa143, align 8, !dbg !9555
  %46 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9556
  %47 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9557
  %sa244 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %47, i32 0, i32 1, !dbg !9558
  store %struct.ScrArea* %46, %struct.ScrArea** %sa244, align 8, !dbg !9559
  %48 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9560
  %sa145 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %48, i32 0, i32 0, !dbg !9562
  %49 = load %struct.ScrArea*, %struct.ScrArea** %sa145, align 8, !dbg !9562
  %tobool46 = icmp ne %struct.ScrArea* %49, null, !dbg !9560
  br i1 %tobool46, label %if.then47, label %if.end53, !dbg !9563

if.then47:                                        ; preds = %if.end41
  %50 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9564
  %sa148 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %50, i32 0, i32 0, !dbg !9565
  %51 = load %struct.ScrArea*, %struct.ScrArea** %sa148, align 8, !dbg !9565
  %flag49 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %51, i32 0, i32 14, !dbg !9566
  %52 = load i16, i16* %flag49, align 2, !dbg !9567
  %conv50 = sext i16 %52 to i32, !dbg !9567
  %or51 = or i32 %conv50, 4, !dbg !9567
  %conv52 = trunc i32 %or51 to i16, !dbg !9567
  store i16 %conv52, i16* %flag49, align 2, !dbg !9567
  br label %if.end53, !dbg !9564

if.end53:                                         ; preds = %if.then47, %if.end41
  %53 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9568
  %sa254 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %53, i32 0, i32 1, !dbg !9570
  %54 = load %struct.ScrArea*, %struct.ScrArea** %sa254, align 8, !dbg !9570
  %tobool55 = icmp ne %struct.ScrArea* %54, null, !dbg !9568
  br i1 %tobool55, label %if.then56, label %if.end62, !dbg !9571

if.then56:                                        ; preds = %if.end53
  %55 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9572
  %sa257 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %55, i32 0, i32 1, !dbg !9573
  %56 = load %struct.ScrArea*, %struct.ScrArea** %sa257, align 8, !dbg !9573
  %flag58 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %56, i32 0, i32 14, !dbg !9574
  %57 = load i16, i16* %flag58, align 2, !dbg !9575
  %conv59 = sext i16 %57 to i32, !dbg !9575
  %or60 = or i32 %conv59, 2, !dbg !9575
  %conv61 = trunc i32 %or60 to i16, !dbg !9575
  store i16 %conv61, i16* %flag58, align 2, !dbg !9575
  br label %if.end62, !dbg !9572

if.end62:                                         ; preds = %if.then56, %if.end53
  br label %if.end74, !dbg !9576

if.else63:                                        ; preds = %if.else
  %58 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9577
  %sa264 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %58, i32 0, i32 1, !dbg !9580
  %59 = load %struct.ScrArea*, %struct.ScrArea** %sa264, align 8, !dbg !9580
  %tobool65 = icmp ne %struct.ScrArea* %59, null, !dbg !9577
  br i1 %tobool65, label %if.then66, label %if.end72, !dbg !9581

if.then66:                                        ; preds = %if.else63
  %60 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9582
  %sa267 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %60, i32 0, i32 1, !dbg !9583
  %61 = load %struct.ScrArea*, %struct.ScrArea** %sa267, align 8, !dbg !9583
  %flag68 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %61, i32 0, i32 14, !dbg !9584
  %62 = load i16, i16* %flag68, align 2, !dbg !9585
  %conv69 = sext i16 %62 to i32, !dbg !9585
  %and70 = and i32 %conv69, -3, !dbg !9585
  %conv71 = trunc i32 %and70 to i16, !dbg !9585
  store i16 %conv71, i16* %flag68, align 2, !dbg !9585
  br label %if.end72, !dbg !9582

if.end72:                                         ; preds = %if.then66, %if.else63
  %63 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9586
  %sa273 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %63, i32 0, i32 1, !dbg !9587
  store %struct.ScrArea* null, %struct.ScrArea** %sa273, align 8, !dbg !9588
  br label %if.end74

if.end74:                                         ; preds = %if.end72, %if.end62
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end
  %64 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9589
  call void @WM_event_add_notifier(%struct.bContext* %64, i32 33554432, i8* null), !dbg !9590
  br label %if.end151, !dbg !9591

if.else76:                                        ; preds = %if.then
  %65 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9592
  %sa277 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %65, i32 0, i32 1, !dbg !9595
  %66 = load %struct.ScrArea*, %struct.ScrArea** %sa277, align 8, !dbg !9595
  %cmp78 = icmp ne %struct.ScrArea* %66, null, !dbg !9596
  br i1 %cmp78, label %if.then80, label %if.else128, !dbg !9597

if.then80:                                        ; preds = %if.else76
  %67 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9598
  %sa181 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %67, i32 0, i32 0, !dbg !9601
  %68 = load %struct.ScrArea*, %struct.ScrArea** %sa181, align 8, !dbg !9601
  %tobool82 = icmp ne %struct.ScrArea* %68, null, !dbg !9598
  br i1 %tobool82, label %if.then83, label %if.end89, !dbg !9602

if.then83:                                        ; preds = %if.then80
  %69 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9603
  %sa184 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %69, i32 0, i32 0, !dbg !9604
  %70 = load %struct.ScrArea*, %struct.ScrArea** %sa184, align 8, !dbg !9604
  %flag85 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %70, i32 0, i32 14, !dbg !9605
  %71 = load i16, i16* %flag85, align 2, !dbg !9606
  %conv86 = sext i16 %71 to i32, !dbg !9606
  %and87 = and i32 %conv86, -5, !dbg !9606
  %conv88 = trunc i32 %and87 to i16, !dbg !9606
  store i16 %conv88, i16* %flag85, align 2, !dbg !9606
  br label %if.end89, !dbg !9603

if.end89:                                         ; preds = %if.then83, %if.then80
  %72 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9607
  %sa290 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %72, i32 0, i32 1, !dbg !9609
  %73 = load %struct.ScrArea*, %struct.ScrArea** %sa290, align 8, !dbg !9609
  %tobool91 = icmp ne %struct.ScrArea* %73, null, !dbg !9607
  br i1 %tobool91, label %if.then92, label %if.end98, !dbg !9610

if.then92:                                        ; preds = %if.end89
  %74 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9611
  %sa293 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %74, i32 0, i32 1, !dbg !9612
  %75 = load %struct.ScrArea*, %struct.ScrArea** %sa293, align 8, !dbg !9612
  %flag94 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %75, i32 0, i32 14, !dbg !9613
  %76 = load i16, i16* %flag94, align 2, !dbg !9614
  %conv95 = sext i16 %76 to i32, !dbg !9614
  %and96 = and i32 %conv95, -3, !dbg !9614
  %conv97 = trunc i32 %and96 to i16, !dbg !9614
  store i16 %conv97, i16* %flag94, align 2, !dbg !9614
  br label %if.end98, !dbg !9611

if.end98:                                         ; preds = %if.then92, %if.end89
  %77 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9615
  %sa299 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %77, i32 0, i32 1, !dbg !9616
  %78 = load %struct.ScrArea*, %struct.ScrArea** %sa299, align 8, !dbg !9616
  %79 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9617
  %sa1100 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %79, i32 0, i32 0, !dbg !9618
  store %struct.ScrArea* %78, %struct.ScrArea** %sa1100, align 8, !dbg !9619
  %80 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9620
  %81 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9621
  %sa2101 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %81, i32 0, i32 1, !dbg !9622
  store %struct.ScrArea* %80, %struct.ScrArea** %sa2101, align 8, !dbg !9623
  %82 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9624
  %sa1102 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %82, i32 0, i32 0, !dbg !9626
  %83 = load %struct.ScrArea*, %struct.ScrArea** %sa1102, align 8, !dbg !9626
  %tobool103 = icmp ne %struct.ScrArea* %83, null, !dbg !9624
  br i1 %tobool103, label %if.then104, label %if.end110, !dbg !9627

if.then104:                                       ; preds = %if.end98
  %84 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9628
  %sa1105 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %84, i32 0, i32 0, !dbg !9629
  %85 = load %struct.ScrArea*, %struct.ScrArea** %sa1105, align 8, !dbg !9629
  %flag106 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %85, i32 0, i32 14, !dbg !9630
  %86 = load i16, i16* %flag106, align 2, !dbg !9631
  %conv107 = sext i16 %86 to i32, !dbg !9631
  %or108 = or i32 %conv107, 4, !dbg !9631
  %conv109 = trunc i32 %or108 to i16, !dbg !9631
  store i16 %conv109, i16* %flag106, align 2, !dbg !9631
  br label %if.end110, !dbg !9628

if.end110:                                        ; preds = %if.then104, %if.end98
  %87 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9632
  %sa2111 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %87, i32 0, i32 1, !dbg !9634
  %88 = load %struct.ScrArea*, %struct.ScrArea** %sa2111, align 8, !dbg !9634
  %tobool112 = icmp ne %struct.ScrArea* %88, null, !dbg !9632
  br i1 %tobool112, label %if.then113, label %if.end119, !dbg !9635

if.then113:                                       ; preds = %if.end110
  %89 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9636
  %sa2114 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %89, i32 0, i32 1, !dbg !9637
  %90 = load %struct.ScrArea*, %struct.ScrArea** %sa2114, align 8, !dbg !9637
  %flag115 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %90, i32 0, i32 14, !dbg !9638
  %91 = load i16, i16* %flag115, align 2, !dbg !9639
  %conv116 = sext i16 %91 to i32, !dbg !9639
  %or117 = or i32 %conv116, 2, !dbg !9639
  %conv118 = trunc i32 %or117 to i16, !dbg !9639
  store i16 %conv118, i16* %flag115, align 2, !dbg !9639
  br label %if.end119, !dbg !9636

if.end119:                                        ; preds = %if.then113, %if.end110
  %92 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9640
  %sa1120 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %92, i32 0, i32 0, !dbg !9641
  %93 = load %struct.ScrArea*, %struct.ScrArea** %sa1120, align 8, !dbg !9641
  %94 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9642
  %sa2121 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %94, i32 0, i32 1, !dbg !9643
  %95 = load %struct.ScrArea*, %struct.ScrArea** %sa2121, align 8, !dbg !9643
  %call122 = call i32 @area_getorientation(%struct.ScrArea* %93, %struct.ScrArea* %95), !dbg !9644
  store i32 %call122, i32* %dir, align 4, !dbg !9645
  %96 = load i32, i32* %dir, align 4, !dbg !9646
  %cmp123 = icmp eq i32 %96, -1, !dbg !9648
  br i1 %cmp123, label %if.then125, label %if.end127, !dbg !9649

if.then125:                                       ; preds = %if.end119
  %call126 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.113, i64 0, i64 0)), !dbg !9650
  br label %if.end127, !dbg !9652

if.end127:                                        ; preds = %if.then125, %if.end119
  br label %if.end150, !dbg !9653

if.else128:                                       ; preds = %if.else76
  %97 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9654
  %sa1129 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %97, i32 0, i32 0, !dbg !9656
  %98 = load %struct.ScrArea*, %struct.ScrArea** %sa1129, align 8, !dbg !9656
  %99 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9657
  %call130 = call i32 @area_getorientation(%struct.ScrArea* %98, %struct.ScrArea* %99), !dbg !9658
  store i32 %call130, i32* %dir, align 4, !dbg !9659
  %100 = load i32, i32* %dir, align 4, !dbg !9660
  %cmp131 = icmp ne i32 %100, -1, !dbg !9662
  br i1 %cmp131, label %if.then133, label %if.end149, !dbg !9663

if.then133:                                       ; preds = %if.else128
  %101 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9664
  %sa2134 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %101, i32 0, i32 1, !dbg !9667
  %102 = load %struct.ScrArea*, %struct.ScrArea** %sa2134, align 8, !dbg !9667
  %tobool135 = icmp ne %struct.ScrArea* %102, null, !dbg !9664
  br i1 %tobool135, label %if.then136, label %if.end142, !dbg !9668

if.then136:                                       ; preds = %if.then133
  %103 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9669
  %sa2137 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %103, i32 0, i32 1, !dbg !9670
  %104 = load %struct.ScrArea*, %struct.ScrArea** %sa2137, align 8, !dbg !9670
  %flag138 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %104, i32 0, i32 14, !dbg !9671
  %105 = load i16, i16* %flag138, align 2, !dbg !9672
  %conv139 = sext i16 %105 to i32, !dbg !9672
  %and140 = and i32 %conv139, -3, !dbg !9672
  %conv141 = trunc i32 %and140 to i16, !dbg !9672
  store i16 %conv141, i16* %flag138, align 2, !dbg !9672
  br label %if.end142, !dbg !9669

if.end142:                                        ; preds = %if.then136, %if.then133
  %106 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9673
  %107 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9674
  %sa2143 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %107, i32 0, i32 1, !dbg !9675
  store %struct.ScrArea* %106, %struct.ScrArea** %sa2143, align 8, !dbg !9676
  %108 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9677
  %sa2144 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %108, i32 0, i32 1, !dbg !9678
  %109 = load %struct.ScrArea*, %struct.ScrArea** %sa2144, align 8, !dbg !9678
  %flag145 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %109, i32 0, i32 14, !dbg !9679
  %110 = load i16, i16* %flag145, align 2, !dbg !9680
  %conv146 = sext i16 %110 to i32, !dbg !9680
  %or147 = or i32 %conv146, 2, !dbg !9680
  %conv148 = trunc i32 %or147 to i16, !dbg !9680
  store i16 %conv148, i16* %flag145, align 2, !dbg !9680
  br label %if.end149, !dbg !9681

if.end149:                                        ; preds = %if.end142, %if.else128
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.end127
  %111 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9682
  call void @WM_event_add_notifier(%struct.bContext* %111, i32 33554432, i8* null), !dbg !9683
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.end75
  br label %if.end152, !dbg !9684

if.end152:                                        ; preds = %if.end151, %sw.bb
  br label %sw.epilog, !dbg !9685

sw.bb153:                                         ; preds = %entry
  %112 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9686
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %112, i32 0, i32 3, !dbg !9688
  %113 = load i16, i16* %val, align 2, !dbg !9688
  %conv154 = sext i16 %113 to i32, !dbg !9686
  %cmp155 = icmp eq i32 %conv154, 2, !dbg !9689
  br i1 %cmp155, label %if.then157, label %if.end161, !dbg !9690

if.then157:                                       ; preds = %sw.bb153
  %114 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9691
  %sa1158 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %114, i32 0, i32 0, !dbg !9693
  %115 = load %struct.ScrArea*, %struct.ScrArea** %sa1158, align 8, !dbg !9693
  call void @ED_area_tag_redraw(%struct.ScrArea* %115), !dbg !9694
  %116 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9695
  %sa2159 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %116, i32 0, i32 1, !dbg !9696
  %117 = load %struct.ScrArea*, %struct.ScrArea** %sa2159, align 8, !dbg !9696
  call void @ED_area_tag_redraw(%struct.ScrArea* %117), !dbg !9697
  %118 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9698
  %119 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9699
  %call160 = call i32 @area_join_apply(%struct.bContext* %118, %struct.wmOperator* %119), !dbg !9700
  %120 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9701
  call void @WM_event_add_notifier(%struct.bContext* %120, i32 50331649, i8* null), !dbg !9702
  %121 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9703
  %122 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9704
  call void @area_join_exit(%struct.bContext* %121, %struct.wmOperator* %122), !dbg !9705
  store i32 4, i32* %retval, align 4, !dbg !9706
  br label %return, !dbg !9706

if.end161:                                        ; preds = %sw.bb153
  br label %sw.epilog, !dbg !9707

sw.bb162:                                         ; preds = %entry, %entry
  %123 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9708
  %124 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9709
  call void @area_join_cancel(%struct.bContext* %123, %struct.wmOperator* %124), !dbg !9710
  store i32 2, i32* %retval, align 4, !dbg !9711
  br label %return, !dbg !9711

sw.epilog:                                        ; preds = %entry, %if.end161, %if.end152
  store i32 1, i32* %retval, align 4, !dbg !9712
  br label %return, !dbg !9712

return:                                           ; preds = %sw.epilog, %sw.bb162, %if.then157
  %125 = load i32, i32* %retval, align 4, !dbg !9713
  ret i32 %125, !dbg !9713
}

; Function Attrs: noinline nounwind uwtable
define internal void @area_join_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9714 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %jd = alloca %struct.sAreaJoinData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9715, metadata !DIExpression()), !dbg !9716
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9717, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.declare(metadata %struct.sAreaJoinData** %jd, metadata !9719, metadata !DIExpression()), !dbg !9720
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9721
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !9722
  %1 = load i8*, i8** %customdata, align 8, !dbg !9722
  %2 = bitcast i8* %1 to %struct.sAreaJoinData*, !dbg !9723
  store %struct.sAreaJoinData* %2, %struct.sAreaJoinData** %jd, align 8, !dbg !9720
  %3 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9724
  %sa1 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %3, i32 0, i32 0, !dbg !9726
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9726
  %tobool = icmp ne %struct.ScrArea* %4, null, !dbg !9724
  br i1 %tobool, label %if.then, label %if.end, !dbg !9727

if.then:                                          ; preds = %entry
  %5 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9728
  %sa11 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %5, i32 0, i32 0, !dbg !9730
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa11, align 8, !dbg !9730
  %flag = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 14, !dbg !9731
  %7 = load i16, i16* %flag, align 2, !dbg !9732
  %conv = sext i16 %7 to i32, !dbg !9732
  %and = and i32 %conv, -5, !dbg !9732
  %conv2 = trunc i32 %and to i16, !dbg !9732
  store i16 %conv2, i16* %flag, align 2, !dbg !9732
  %8 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9733
  %sa13 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %8, i32 0, i32 0, !dbg !9734
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa13, align 8, !dbg !9734
  %flag4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 14, !dbg !9735
  %10 = load i16, i16* %flag4, align 2, !dbg !9736
  %conv5 = sext i16 %10 to i32, !dbg !9736
  %and6 = and i32 %conv5, -3, !dbg !9736
  %conv7 = trunc i32 %and6 to i16, !dbg !9736
  store i16 %conv7, i16* %flag4, align 2, !dbg !9736
  br label %if.end, !dbg !9737

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9738
  %sa2 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %11, i32 0, i32 1, !dbg !9740
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9740
  %tobool8 = icmp ne %struct.ScrArea* %12, null, !dbg !9738
  br i1 %tobool8, label %if.then9, label %if.end20, !dbg !9741

if.then9:                                         ; preds = %if.end
  %13 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9742
  %sa210 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %13, i32 0, i32 1, !dbg !9744
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sa210, align 8, !dbg !9744
  %flag11 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %14, i32 0, i32 14, !dbg !9745
  %15 = load i16, i16* %flag11, align 2, !dbg !9746
  %conv12 = sext i16 %15 to i32, !dbg !9746
  %and13 = and i32 %conv12, -5, !dbg !9746
  %conv14 = trunc i32 %and13 to i16, !dbg !9746
  store i16 %conv14, i16* %flag11, align 2, !dbg !9746
  %16 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9747
  %sa215 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %16, i32 0, i32 1, !dbg !9748
  %17 = load %struct.ScrArea*, %struct.ScrArea** %sa215, align 8, !dbg !9748
  %flag16 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %17, i32 0, i32 14, !dbg !9749
  %18 = load i16, i16* %flag16, align 2, !dbg !9750
  %conv17 = sext i16 %18 to i32, !dbg !9750
  %and18 = and i32 %conv17, -3, !dbg !9750
  %conv19 = trunc i32 %and18 to i16, !dbg !9750
  store i16 %conv19, i16* %flag16, align 2, !dbg !9750
  br label %if.end20, !dbg !9751

if.end20:                                         ; preds = %if.then9, %if.end
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9752
  call void @WM_event_add_notifier(%struct.bContext* %19, i32 33554432, i8* null), !dbg !9753
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9754
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9755
  call void @area_join_exit(%struct.bContext* %20, %struct.wmOperator* %21), !dbg !9756
  ret void, !dbg !9757
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_join_init(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9758 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %sa1 = alloca %struct.ScrArea*, align 8
  %sa2 = alloca %struct.ScrArea*, align 8
  %jd = alloca %struct.sAreaJoinData*, align 8
  %x1 = alloca i32, align 4
  %y1 = alloca i32, align 4
  %x2 = alloca i32, align 4
  %y2 = alloca i32, align 4
  %shared = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9759, metadata !DIExpression()), !dbg !9760
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9761, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa1, metadata !9763, metadata !DIExpression()), !dbg !9764
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa2, metadata !9765, metadata !DIExpression()), !dbg !9766
  call void @llvm.dbg.declare(metadata %struct.sAreaJoinData** %jd, metadata !9767, metadata !DIExpression()), !dbg !9768
  store %struct.sAreaJoinData* null, %struct.sAreaJoinData** %jd, align 8, !dbg !9768
  call void @llvm.dbg.declare(metadata i32* %x1, metadata !9769, metadata !DIExpression()), !dbg !9770
  call void @llvm.dbg.declare(metadata i32* %y1, metadata !9771, metadata !DIExpression()), !dbg !9772
  call void @llvm.dbg.declare(metadata i32* %x2, metadata !9773, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.declare(metadata i32* %y2, metadata !9775, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.declare(metadata i32* %shared, metadata !9777, metadata !DIExpression()), !dbg !9778
  store i32 0, i32* %shared, align 4, !dbg !9778
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9779
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !9780
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9780
  %call = call i32 @RNA_int_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0)), !dbg !9781
  store i32 %call, i32* %x1, align 4, !dbg !9782
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9783
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9784
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !9784
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)), !dbg !9785
  store i32 %call2, i32* %y1, align 4, !dbg !9786
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9787
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !9788
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !9788
  %call4 = call i32 @RNA_int_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0)), !dbg !9789
  store i32 %call4, i32* %x2, align 4, !dbg !9790
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9791
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !9792
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !9792
  %call6 = call i32 @RNA_int_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0)), !dbg !9793
  store i32 %call6, i32* %y2, align 4, !dbg !9794
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9795
  %call7 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %8), !dbg !9796
  %9 = load i32, i32* %x1, align 4, !dbg !9797
  %10 = load i32, i32* %y1, align 4, !dbg !9798
  %call8 = call %struct.ScrArea* @screen_areahascursor(%struct.bScreen* %call7, i32 %9, i32 %10), !dbg !9799
  store %struct.ScrArea* %call8, %struct.ScrArea** %sa1, align 8, !dbg !9800
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9801
  %call9 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %11), !dbg !9802
  %12 = load i32, i32* %x2, align 4, !dbg !9803
  %13 = load i32, i32* %y2, align 4, !dbg !9804
  %call10 = call %struct.ScrArea* @screen_areahascursor(%struct.bScreen* %call9, i32 %12, i32 %13), !dbg !9805
  store %struct.ScrArea* %call10, %struct.ScrArea** %sa2, align 8, !dbg !9806
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9807
  %cmp = icmp eq %struct.ScrArea* %14, null, !dbg !9809
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9810

lor.lhs.false:                                    ; preds = %entry
  %15 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9811
  %cmp11 = icmp eq %struct.ScrArea* %15, null, !dbg !9812
  br i1 %cmp11, label %if.then, label %lor.lhs.false12, !dbg !9813

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9814
  %17 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9815
  %cmp13 = icmp eq %struct.ScrArea* %16, %17, !dbg !9816
  br i1 %cmp13, label %if.then, label %if.end, !dbg !9817

if.then:                                          ; preds = %lor.lhs.false12, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !9818
  br label %return, !dbg !9818

if.end:                                           ; preds = %lor.lhs.false12
  %18 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9819
  %v1 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %18, i32 0, i32 2, !dbg !9821
  %19 = load %struct.ScrVert*, %struct.ScrVert** %v1, align 8, !dbg !9821
  %20 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9822
  %v114 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %20, i32 0, i32 2, !dbg !9823
  %21 = load %struct.ScrVert*, %struct.ScrVert** %v114, align 8, !dbg !9823
  %cmp15 = icmp eq %struct.ScrVert* %19, %21, !dbg !9824
  br i1 %cmp15, label %if.then25, label %lor.lhs.false16, !dbg !9825

lor.lhs.false16:                                  ; preds = %if.end
  %22 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9826
  %v117 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %22, i32 0, i32 2, !dbg !9827
  %23 = load %struct.ScrVert*, %struct.ScrVert** %v117, align 8, !dbg !9827
  %24 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9828
  %v2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %24, i32 0, i32 3, !dbg !9829
  %25 = load %struct.ScrVert*, %struct.ScrVert** %v2, align 8, !dbg !9829
  %cmp18 = icmp eq %struct.ScrVert* %23, %25, !dbg !9830
  br i1 %cmp18, label %if.then25, label %lor.lhs.false19, !dbg !9831

lor.lhs.false19:                                  ; preds = %lor.lhs.false16
  %26 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9832
  %v120 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %26, i32 0, i32 2, !dbg !9833
  %27 = load %struct.ScrVert*, %struct.ScrVert** %v120, align 8, !dbg !9833
  %28 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9834
  %v3 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %28, i32 0, i32 4, !dbg !9835
  %29 = load %struct.ScrVert*, %struct.ScrVert** %v3, align 8, !dbg !9835
  %cmp21 = icmp eq %struct.ScrVert* %27, %29, !dbg !9836
  br i1 %cmp21, label %if.then25, label %lor.lhs.false22, !dbg !9837

lor.lhs.false22:                                  ; preds = %lor.lhs.false19
  %30 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9838
  %v123 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %30, i32 0, i32 2, !dbg !9839
  %31 = load %struct.ScrVert*, %struct.ScrVert** %v123, align 8, !dbg !9839
  %32 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9840
  %v4 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %32, i32 0, i32 5, !dbg !9841
  %33 = load %struct.ScrVert*, %struct.ScrVert** %v4, align 8, !dbg !9841
  %cmp24 = icmp eq %struct.ScrVert* %31, %33, !dbg !9842
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !9843

if.then25:                                        ; preds = %lor.lhs.false22, %lor.lhs.false19, %lor.lhs.false16, %if.end
  %34 = load i32, i32* %shared, align 4, !dbg !9844
  %inc = add nsw i32 %34, 1, !dbg !9844
  store i32 %inc, i32* %shared, align 4, !dbg !9844
  br label %if.end26, !dbg !9845

if.end26:                                         ; preds = %if.then25, %lor.lhs.false22
  %35 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9846
  %v227 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %35, i32 0, i32 3, !dbg !9848
  %36 = load %struct.ScrVert*, %struct.ScrVert** %v227, align 8, !dbg !9848
  %37 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9849
  %v128 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %37, i32 0, i32 2, !dbg !9850
  %38 = load %struct.ScrVert*, %struct.ScrVert** %v128, align 8, !dbg !9850
  %cmp29 = icmp eq %struct.ScrVert* %36, %38, !dbg !9851
  br i1 %cmp29, label %if.then42, label %lor.lhs.false30, !dbg !9852

lor.lhs.false30:                                  ; preds = %if.end26
  %39 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9853
  %v231 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %39, i32 0, i32 3, !dbg !9854
  %40 = load %struct.ScrVert*, %struct.ScrVert** %v231, align 8, !dbg !9854
  %41 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9855
  %v232 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %41, i32 0, i32 3, !dbg !9856
  %42 = load %struct.ScrVert*, %struct.ScrVert** %v232, align 8, !dbg !9856
  %cmp33 = icmp eq %struct.ScrVert* %40, %42, !dbg !9857
  br i1 %cmp33, label %if.then42, label %lor.lhs.false34, !dbg !9858

lor.lhs.false34:                                  ; preds = %lor.lhs.false30
  %43 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9859
  %v235 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %43, i32 0, i32 3, !dbg !9860
  %44 = load %struct.ScrVert*, %struct.ScrVert** %v235, align 8, !dbg !9860
  %45 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9861
  %v336 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %45, i32 0, i32 4, !dbg !9862
  %46 = load %struct.ScrVert*, %struct.ScrVert** %v336, align 8, !dbg !9862
  %cmp37 = icmp eq %struct.ScrVert* %44, %46, !dbg !9863
  br i1 %cmp37, label %if.then42, label %lor.lhs.false38, !dbg !9864

lor.lhs.false38:                                  ; preds = %lor.lhs.false34
  %47 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9865
  %v239 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %47, i32 0, i32 3, !dbg !9866
  %48 = load %struct.ScrVert*, %struct.ScrVert** %v239, align 8, !dbg !9866
  %49 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9867
  %v440 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %49, i32 0, i32 5, !dbg !9868
  %50 = load %struct.ScrVert*, %struct.ScrVert** %v440, align 8, !dbg !9868
  %cmp41 = icmp eq %struct.ScrVert* %48, %50, !dbg !9869
  br i1 %cmp41, label %if.then42, label %if.end44, !dbg !9870

if.then42:                                        ; preds = %lor.lhs.false38, %lor.lhs.false34, %lor.lhs.false30, %if.end26
  %51 = load i32, i32* %shared, align 4, !dbg !9871
  %inc43 = add nsw i32 %51, 1, !dbg !9871
  store i32 %inc43, i32* %shared, align 4, !dbg !9871
  br label %if.end44, !dbg !9872

if.end44:                                         ; preds = %if.then42, %lor.lhs.false38
  %52 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9873
  %v345 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %52, i32 0, i32 4, !dbg !9875
  %53 = load %struct.ScrVert*, %struct.ScrVert** %v345, align 8, !dbg !9875
  %54 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9876
  %v146 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %54, i32 0, i32 2, !dbg !9877
  %55 = load %struct.ScrVert*, %struct.ScrVert** %v146, align 8, !dbg !9877
  %cmp47 = icmp eq %struct.ScrVert* %53, %55, !dbg !9878
  br i1 %cmp47, label %if.then60, label %lor.lhs.false48, !dbg !9879

lor.lhs.false48:                                  ; preds = %if.end44
  %56 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9880
  %v349 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %56, i32 0, i32 4, !dbg !9881
  %57 = load %struct.ScrVert*, %struct.ScrVert** %v349, align 8, !dbg !9881
  %58 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9882
  %v250 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %58, i32 0, i32 3, !dbg !9883
  %59 = load %struct.ScrVert*, %struct.ScrVert** %v250, align 8, !dbg !9883
  %cmp51 = icmp eq %struct.ScrVert* %57, %59, !dbg !9884
  br i1 %cmp51, label %if.then60, label %lor.lhs.false52, !dbg !9885

lor.lhs.false52:                                  ; preds = %lor.lhs.false48
  %60 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9886
  %v353 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %60, i32 0, i32 4, !dbg !9887
  %61 = load %struct.ScrVert*, %struct.ScrVert** %v353, align 8, !dbg !9887
  %62 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9888
  %v354 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %62, i32 0, i32 4, !dbg !9889
  %63 = load %struct.ScrVert*, %struct.ScrVert** %v354, align 8, !dbg !9889
  %cmp55 = icmp eq %struct.ScrVert* %61, %63, !dbg !9890
  br i1 %cmp55, label %if.then60, label %lor.lhs.false56, !dbg !9891

lor.lhs.false56:                                  ; preds = %lor.lhs.false52
  %64 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9892
  %v357 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %64, i32 0, i32 4, !dbg !9893
  %65 = load %struct.ScrVert*, %struct.ScrVert** %v357, align 8, !dbg !9893
  %66 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9894
  %v458 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %66, i32 0, i32 5, !dbg !9895
  %67 = load %struct.ScrVert*, %struct.ScrVert** %v458, align 8, !dbg !9895
  %cmp59 = icmp eq %struct.ScrVert* %65, %67, !dbg !9896
  br i1 %cmp59, label %if.then60, label %if.end62, !dbg !9897

if.then60:                                        ; preds = %lor.lhs.false56, %lor.lhs.false52, %lor.lhs.false48, %if.end44
  %68 = load i32, i32* %shared, align 4, !dbg !9898
  %inc61 = add nsw i32 %68, 1, !dbg !9898
  store i32 %inc61, i32* %shared, align 4, !dbg !9898
  br label %if.end62, !dbg !9899

if.end62:                                         ; preds = %if.then60, %lor.lhs.false56
  %69 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9900
  %v463 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %69, i32 0, i32 5, !dbg !9902
  %70 = load %struct.ScrVert*, %struct.ScrVert** %v463, align 8, !dbg !9902
  %71 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9903
  %v164 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %71, i32 0, i32 2, !dbg !9904
  %72 = load %struct.ScrVert*, %struct.ScrVert** %v164, align 8, !dbg !9904
  %cmp65 = icmp eq %struct.ScrVert* %70, %72, !dbg !9905
  br i1 %cmp65, label %if.then78, label %lor.lhs.false66, !dbg !9906

lor.lhs.false66:                                  ; preds = %if.end62
  %73 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9907
  %v467 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %73, i32 0, i32 5, !dbg !9908
  %74 = load %struct.ScrVert*, %struct.ScrVert** %v467, align 8, !dbg !9908
  %75 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9909
  %v268 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %75, i32 0, i32 3, !dbg !9910
  %76 = load %struct.ScrVert*, %struct.ScrVert** %v268, align 8, !dbg !9910
  %cmp69 = icmp eq %struct.ScrVert* %74, %76, !dbg !9911
  br i1 %cmp69, label %if.then78, label %lor.lhs.false70, !dbg !9912

lor.lhs.false70:                                  ; preds = %lor.lhs.false66
  %77 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9913
  %v471 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %77, i32 0, i32 5, !dbg !9914
  %78 = load %struct.ScrVert*, %struct.ScrVert** %v471, align 8, !dbg !9914
  %79 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9915
  %v372 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %79, i32 0, i32 4, !dbg !9916
  %80 = load %struct.ScrVert*, %struct.ScrVert** %v372, align 8, !dbg !9916
  %cmp73 = icmp eq %struct.ScrVert* %78, %80, !dbg !9917
  br i1 %cmp73, label %if.then78, label %lor.lhs.false74, !dbg !9918

lor.lhs.false74:                                  ; preds = %lor.lhs.false70
  %81 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9919
  %v475 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %81, i32 0, i32 5, !dbg !9920
  %82 = load %struct.ScrVert*, %struct.ScrVert** %v475, align 8, !dbg !9920
  %83 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9921
  %v476 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %83, i32 0, i32 5, !dbg !9922
  %84 = load %struct.ScrVert*, %struct.ScrVert** %v476, align 8, !dbg !9922
  %cmp77 = icmp eq %struct.ScrVert* %82, %84, !dbg !9923
  br i1 %cmp77, label %if.then78, label %if.end80, !dbg !9924

if.then78:                                        ; preds = %lor.lhs.false74, %lor.lhs.false70, %lor.lhs.false66, %if.end62
  %85 = load i32, i32* %shared, align 4, !dbg !9925
  %inc79 = add nsw i32 %85, 1, !dbg !9925
  store i32 %inc79, i32* %shared, align 4, !dbg !9925
  br label %if.end80, !dbg !9926

if.end80:                                         ; preds = %if.then78, %lor.lhs.false74
  %86 = load i32, i32* %shared, align 4, !dbg !9927
  %cmp81 = icmp ne i32 %86, 2, !dbg !9929
  br i1 %cmp81, label %if.then82, label %if.end84, !dbg !9930

if.then82:                                        ; preds = %if.end80
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.111, i64 0, i64 0)), !dbg !9931
  store i32 0, i32* %retval, align 4, !dbg !9933
  br label %return, !dbg !9933

if.end84:                                         ; preds = %if.end80
  %87 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9934
  %call85 = call i8* %87(i64 24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i64 0, i64 0)), !dbg !9934
  %88 = bitcast i8* %call85 to %struct.sAreaJoinData*, !dbg !9935
  store %struct.sAreaJoinData* %88, %struct.sAreaJoinData** %jd, align 8, !dbg !9936
  %89 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9937
  %90 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9938
  %sa186 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %90, i32 0, i32 0, !dbg !9939
  store %struct.ScrArea* %89, %struct.ScrArea** %sa186, align 8, !dbg !9940
  %91 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9941
  %sa187 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %91, i32 0, i32 0, !dbg !9942
  %92 = load %struct.ScrArea*, %struct.ScrArea** %sa187, align 8, !dbg !9942
  %flag = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %92, i32 0, i32 14, !dbg !9943
  %93 = load i16, i16* %flag, align 2, !dbg !9944
  %conv = sext i16 %93 to i32, !dbg !9944
  %or = or i32 %conv, 4, !dbg !9944
  %conv88 = trunc i32 %or to i16, !dbg !9944
  store i16 %conv88, i16* %flag, align 2, !dbg !9944
  %94 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9945
  %95 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9946
  %sa289 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %95, i32 0, i32 1, !dbg !9947
  store %struct.ScrArea* %94, %struct.ScrArea** %sa289, align 8, !dbg !9948
  %96 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9949
  %sa290 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %96, i32 0, i32 1, !dbg !9950
  %97 = load %struct.ScrArea*, %struct.ScrArea** %sa290, align 8, !dbg !9950
  %flag91 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %97, i32 0, i32 14, !dbg !9951
  %98 = load i16, i16* %flag91, align 2, !dbg !9952
  %conv92 = sext i16 %98 to i32, !dbg !9952
  %or93 = or i32 %conv92, 2, !dbg !9952
  %conv94 = trunc i32 %or93 to i16, !dbg !9952
  store i16 %conv94, i16* %flag91, align 2, !dbg !9952
  %99 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9953
  %100 = bitcast %struct.sAreaJoinData* %99 to i8*, !dbg !9953
  %101 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9954
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %101, i32 0, i32 5, !dbg !9955
  store i8* %100, i8** %customdata, align 8, !dbg !9956
  store i32 1, i32* %retval, align 4, !dbg !9957
  br label %return, !dbg !9957

return:                                           ; preds = %if.end84, %if.then82, %if.then
  %102 = load i32, i32* %retval, align 4, !dbg !9958
  ret i32 %102, !dbg !9958
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_join_apply(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9959 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %jd = alloca %struct.sAreaJoinData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9960, metadata !DIExpression()), !dbg !9961
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9962, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.declare(metadata %struct.sAreaJoinData** %jd, metadata !9964, metadata !DIExpression()), !dbg !9965
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9966
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !9967
  %1 = load i8*, i8** %customdata, align 8, !dbg !9967
  %2 = bitcast i8* %1 to %struct.sAreaJoinData*, !dbg !9968
  store %struct.sAreaJoinData* %2, %struct.sAreaJoinData** %jd, align 8, !dbg !9965
  %3 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9969
  %tobool = icmp ne %struct.sAreaJoinData* %3, null, !dbg !9969
  br i1 %tobool, label %if.end, label %if.then, !dbg !9971

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9972
  br label %return, !dbg !9972

if.end:                                           ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9973
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9975
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %5), !dbg !9976
  %6 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9977
  %sa1 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %6, i32 0, i32 0, !dbg !9978
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !9978
  %8 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9979
  %sa2 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %8, i32 0, i32 1, !dbg !9980
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !9980
  %call1 = call i32 @screen_area_join(%struct.bContext* %4, %struct.bScreen* %call, %struct.ScrArea* %7, %struct.ScrArea* %9), !dbg !9981
  %tobool2 = icmp ne i32 %call1, 0, !dbg !9981
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !9982

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9983
  br label %return, !dbg !9983

if.end4:                                          ; preds = %if.end
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9985
  %call5 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %10), !dbg !9987
  %11 = load %struct.sAreaJoinData*, %struct.sAreaJoinData** %jd, align 8, !dbg !9988
  %sa26 = getelementptr inbounds %struct.sAreaJoinData, %struct.sAreaJoinData* %11, i32 0, i32 1, !dbg !9989
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sa26, align 8, !dbg !9989
  %cmp = icmp eq %struct.ScrArea* %call5, %12, !dbg !9990
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !9991

if.then7:                                         ; preds = %if.end4
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9992
  call void @CTX_wm_area_set(%struct.bContext* %13, %struct.ScrArea* null), !dbg !9994
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9995
  call void @CTX_wm_region_set(%struct.bContext* %14, %struct.ARegion* null), !dbg !9996
  br label %if.end8, !dbg !9997

if.end8:                                          ; preds = %if.then7, %if.end4
  store i32 1, i32* %retval, align 4, !dbg !9998
  br label %return, !dbg !9998

return:                                           ; preds = %if.end8, %if.then3, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !9999
  ret i32 %15, !dbg !9999
}

; Function Attrs: noinline nounwind uwtable
define internal void @area_join_exit(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10000 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10001, metadata !DIExpression()), !dbg !10002
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10003, metadata !DIExpression()), !dbg !10004
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10005
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !10007
  %1 = load i8*, i8** %customdata, align 8, !dbg !10007
  %tobool = icmp ne i8* %1, null, !dbg !10005
  br i1 %tobool, label %if.then, label %if.end, !dbg !10008

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10009
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10011
  %customdata1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !10012
  %4 = load i8*, i8** %customdata1, align 8, !dbg !10012
  call void %2(i8* %4), !dbg !10009
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10013
  %customdata2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 5, !dbg !10014
  store i8* null, i8** %customdata2, align 8, !dbg !10015
  br label %if.end, !dbg !10016

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10017
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %6), !dbg !10018
  call void @removedouble_scredges(%struct.bScreen* %call), !dbg !10019
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10020
  %call3 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %7), !dbg !10021
  call void @removenotused_scredges(%struct.bScreen* %call3), !dbg !10022
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10023
  %call4 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %8), !dbg !10024
  call void @removenotused_scrverts(%struct.bScreen* %call4), !dbg !10025
  ret void, !dbg !10026
}

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local void @removenotused_scredges(%struct.bScreen*) #2

declare dso_local void @removenotused_scrverts(%struct.bScreen*) #2

declare dso_local i32 @area_getorientation(%struct.ScrArea*, %struct.ScrArea*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @screen_area_options_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !10027 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %sc = alloca %struct.bScreen*, align 8
  %pup = alloca %struct.uiPopupMenu*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %ptr1 = alloca %struct.PointerRNA, align 8
  %ptr2 = alloca %struct.PointerRNA, align 8
  %actedge = alloca %struct.ScrEdge*, align 8
  %winsize_x = alloca i32, align 4
  %winsize_y = alloca i32, align 4
  %tmp = alloca %struct.PointerRNA, align 8
  %tmp17 = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10028, metadata !DIExpression()), !dbg !10029
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10030, metadata !DIExpression()), !dbg !10031
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !10032, metadata !DIExpression()), !dbg !10033
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !10034, metadata !DIExpression()), !dbg !10035
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10036
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !10037
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !10035
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !10038, metadata !DIExpression()), !dbg !10039
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10040
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !10041
  store %struct.bScreen* %call1, %struct.bScreen** %sc, align 8, !dbg !10039
  call void @llvm.dbg.declare(metadata %struct.uiPopupMenu** %pup, metadata !10042, metadata !DIExpression()), !dbg !10043
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !10044, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr1, metadata !10046, metadata !DIExpression()), !dbg !10048
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr2, metadata !10049, metadata !DIExpression()), !dbg !10050
  call void @llvm.dbg.declare(metadata %struct.ScrEdge** %actedge, metadata !10051, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.declare(metadata i32* %winsize_x, metadata !10053, metadata !DIExpression()), !dbg !10054
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !10055
  %call2 = call i32 @WM_window_pixels_x(%struct.wmWindow* %2), !dbg !10056
  store i32 %call2, i32* %winsize_x, align 4, !dbg !10054
  call void @llvm.dbg.declare(metadata i32* %winsize_y, metadata !10057, metadata !DIExpression()), !dbg !10058
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !10059
  %call3 = call i32 @WM_window_pixels_y(%struct.wmWindow* %3), !dbg !10060
  store i32 %call3, i32* %winsize_y, align 4, !dbg !10058
  %4 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !10061
  %5 = load i32, i32* %winsize_x, align 4, !dbg !10062
  %6 = load i32, i32* %winsize_y, align 4, !dbg !10063
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10064
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 4, !dbg !10065
  %8 = load i32, i32* %x, align 4, !dbg !10065
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10066
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 5, !dbg !10067
  %10 = load i32, i32* %y, align 8, !dbg !10067
  %call4 = call %struct.ScrEdge* @screen_find_active_scredge(%struct.bScreen* %4, i32 %5, i32 %6, i32 %8, i32 %10), !dbg !10068
  store %struct.ScrEdge* %call4, %struct.ScrEdge** %actedge, align 8, !dbg !10069
  %11 = load %struct.ScrEdge*, %struct.ScrEdge** %actedge, align 8, !dbg !10070
  %cmp = icmp eq %struct.ScrEdge* %11, null, !dbg !10072
  br i1 %cmp, label %if.then, label %if.end, !dbg !10073

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !10074
  br label %return, !dbg !10074

if.end:                                           ; preds = %entry
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10075
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10076
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 4, !dbg !10077
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !10077
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 11, !dbg !10078
  %15 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10078
  %call5 = call i8* @RNA_struct_ui_name(%struct.StructRNA* %15), !dbg !10079
  %call6 = call %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext* %12, i8* %call5, i32 0), !dbg !10080
  store %struct.uiPopupMenu* %call6, %struct.uiPopupMenu** %pup, align 8, !dbg !10081
  %16 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !10082
  %call7 = call %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu* %16), !dbg !10083
  store %struct.uiLayout* %call7, %struct.uiLayout** %layout, align 8, !dbg !10084
  call void @WM_operator_properties_create(%struct.PointerRNA* %ptr1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)), !dbg !10085
  %17 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10086
  %x8 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %17, i32 0, i32 4, !dbg !10087
  %18 = load i32, i32* %x8, align 4, !dbg !10087
  %add = add nsw i32 %18, 4, !dbg !10088
  call void @RNA_int_set(%struct.PointerRNA* %ptr1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0), i32 %add), !dbg !10089
  %19 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10090
  %y9 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %19, i32 0, i32 5, !dbg !10091
  %20 = load i32, i32* %y9, align 8, !dbg !10091
  %add10 = add nsw i32 %20, 4, !dbg !10092
  call void @RNA_int_set(%struct.PointerRNA* %ptr1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0), i32 %add10), !dbg !10093
  %21 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10094
  %x11 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %21, i32 0, i32 4, !dbg !10095
  %22 = load i32, i32* %x11, align 4, !dbg !10095
  %sub = sub nsw i32 %22, 4, !dbg !10096
  call void @RNA_int_set(%struct.PointerRNA* %ptr1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), i32 %sub), !dbg !10097
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10098
  %y12 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %23, i32 0, i32 5, !dbg !10099
  %24 = load i32, i32* %y12, align 8, !dbg !10099
  %sub13 = sub nsw i32 %24, 4, !dbg !10100
  call void @RNA_int_set(%struct.PointerRNA* %ptr1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i64 0, i64 0), i32 %sub13), !dbg !10101
  call void @WM_operator_properties_create(%struct.PointerRNA* %ptr2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0)), !dbg !10102
  %25 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10103
  %x14 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %25, i32 0, i32 4, !dbg !10104
  %26 = load i32, i32* %x14, align 4, !dbg !10104
  call void @RNA_int_set(%struct.PointerRNA* %ptr2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.92, i64 0, i64 0), i32 %26), !dbg !10105
  %27 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10106
  %y15 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %27, i32 0, i32 5, !dbg !10107
  %28 = load i32, i32* %y15, align 8, !dbg !10107
  call void @RNA_int_set(%struct.PointerRNA* %ptr2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.94, i64 0, i64 0), i32 %28), !dbg !10108
  %29 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !10109
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr2, i32 0, i32 2, !dbg !10110
  %30 = load i8*, i8** %data, align 8, !dbg !10110
  %31 = bitcast i8* %30 to %struct.IDProperty*, !dbg !10111
  call void @uiItemFullO(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %29, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i8* null, i32 0, %struct.IDProperty* %31, i32 0, i32 0), !dbg !10112
  %32 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !10113
  %data16 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr1, i32 0, i32 2, !dbg !10114
  %33 = load i8*, i8** %data16, align 8, !dbg !10114
  %34 = bitcast i8* %33 to %struct.IDProperty*, !dbg !10115
  call void @uiItemFullO(%struct.PointerRNA* sret %tmp17, %struct.uiLayout* %32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i8* null, i32 0, %struct.IDProperty* %34, i32 0, i32 0), !dbg !10116
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10117
  %36 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !10118
  call void @uiPupMenuEnd(%struct.bContext* %35, %struct.uiPopupMenu* %36), !dbg !10119
  store i32 32, i32* %retval, align 4, !dbg !10120
  br label %return, !dbg !10120

return:                                           ; preds = %if.end, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !10121
  ret i32 %37, !dbg !10121
}

declare dso_local void @WM_operator_properties_create(%struct.PointerRNA*, i8*) #2

declare dso_local void @uiItemFullO(%struct.PointerRNA* sret, %struct.uiLayout*, i8*, i8*, i32, %struct.IDProperty*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_dupli_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !10122 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %newwin = alloca %struct.wmWindow*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %newsc = alloca %struct.bScreen*, align 8
  %sc = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %rect = alloca %struct.rcti, align 4
  %sad = alloca %struct.sActionzoneData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10123, metadata !DIExpression()), !dbg !10124
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10125, metadata !DIExpression()), !dbg !10126
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !10127, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %newwin, metadata !10129, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !10131, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.declare(metadata %struct.bScreen** %newsc, metadata !10133, metadata !DIExpression()), !dbg !10134
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !10135, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !10137, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect, metadata !10139, metadata !DIExpression()), !dbg !10140
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10141
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !10142
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !10143
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10144
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !10145
  store %struct.bScreen* %call1, %struct.bScreen** %sc, align 8, !dbg !10146
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10147
  %call2 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %2), !dbg !10148
  store %struct.ScrArea* %call2, %struct.ScrArea** %sa, align 8, !dbg !10149
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10150
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 2, !dbg !10152
  %4 = load i16, i16* %type, align 8, !dbg !10152
  %conv = sext i16 %4 to i32, !dbg !10150
  %cmp = icmp eq i32 %conv, 20480, !dbg !10153
  br i1 %cmp, label %if.then, label %if.end7, !dbg !10154

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.sActionzoneData** %sad, metadata !10155, metadata !DIExpression()), !dbg !10157
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10158
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 28, !dbg !10159
  %6 = load i8*, i8** %customdata, align 8, !dbg !10159
  %7 = bitcast i8* %6 to %struct.sActionzoneData*, !dbg !10158
  store %struct.sActionzoneData* %7, %struct.sActionzoneData** %sad, align 8, !dbg !10157
  %8 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10160
  %cmp4 = icmp eq %struct.sActionzoneData* %8, null, !dbg !10162
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !10163

if.then6:                                         ; preds = %if.then
  store i32 8, i32* %retval, align 4, !dbg !10164
  br label %return, !dbg !10164

if.end:                                           ; preds = %if.then
  %9 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10165
  %sa1 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %9, i32 0, i32 0, !dbg !10166
  %10 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !10166
  store %struct.ScrArea* %10, %struct.ScrArea** %sa, align 8, !dbg !10167
  br label %if.end7, !dbg !10168

if.end7:                                          ; preds = %if.end, %entry
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !10169
  %totrct = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %11, i32 0, i32 7, !dbg !10170
  %12 = bitcast %struct.rcti* %rect to i8*, !dbg !10170
  %13 = bitcast %struct.rcti* %totrct to i8*, !dbg !10170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 8 %13, i64 16, i1 false), !dbg !10170
  %14 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !10171
  %posx = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %14, i32 0, i32 6, !dbg !10172
  %15 = load i16, i16* %posx, align 8, !dbg !10172
  %conv8 = sext i16 %15 to i32, !dbg !10171
  %16 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !10173
  %posy = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %16, i32 0, i32 7, !dbg !10174
  %17 = load i16, i16* %posy, align 2, !dbg !10174
  %conv9 = sext i16 %17 to i32, !dbg !10173
  call void @BLI_rcti_translate(%struct.rcti* %rect, i32 %conv8, i32 %conv9), !dbg !10175
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 0, !dbg !10176
  %18 = load i32, i32* %xmin, align 4, !dbg !10176
  %conv10 = sitofp i32 %18 to float, !dbg !10177
  %call11 = call i32 @BLI_rcti_size_x(%struct.rcti* %rect), !dbg !10178
  %conv12 = sitofp i32 %call11 to float, !dbg !10178
  %19 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !10179
  %div = fdiv float %conv12, %19, !dbg !10180
  %add = fadd float %conv10, %div, !dbg !10181
  %conv13 = fptosi float %add to i32, !dbg !10177
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 1, !dbg !10182
  store i32 %conv13, i32* %xmax, align 4, !dbg !10183
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 2, !dbg !10184
  %20 = load i32, i32* %ymin, align 4, !dbg !10184
  %conv14 = sitofp i32 %20 to float, !dbg !10185
  %call15 = call i32 @BLI_rcti_size_y(%struct.rcti* %rect), !dbg !10186
  %conv16 = sitofp i32 %call15 to float, !dbg !10186
  %21 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !10187
  %div17 = fdiv float %conv16, %21, !dbg !10188
  %add18 = fadd float %conv14, %div17, !dbg !10189
  %conv19 = fptosi float %add18 to i32, !dbg !10185
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 3, !dbg !10190
  store i32 %conv19, i32* %ymax, align 4, !dbg !10191
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10192
  %call20 = call %struct.wmWindow* @WM_window_open(%struct.bContext* %22, %struct.rcti* %rect), !dbg !10193
  store %struct.wmWindow* %call20, %struct.wmWindow** %newwin, align 8, !dbg !10194
  %23 = load %struct.wmWindow*, %struct.wmWindow** %newwin, align 8, !dbg !10195
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10196
  %call21 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %24), !dbg !10197
  %25 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !10198
  %id = getelementptr inbounds %struct.bScreen, %struct.bScreen* %25, i32 0, i32 0, !dbg !10199
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !10200
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !10198
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !10201
  %call22 = call %struct.bScreen* @ED_screen_add(%struct.wmWindow* %23, %struct.Scene* %call21, i8* %add.ptr), !dbg !10202
  store %struct.bScreen* %call22, %struct.bScreen** %newsc, align 8, !dbg !10203
  %26 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !10204
  %27 = load %struct.wmWindow*, %struct.wmWindow** %newwin, align 8, !dbg !10205
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %27, i32 0, i32 3, !dbg !10206
  store %struct.bScreen* %26, %struct.bScreen** %screen, align 8, !dbg !10207
  %28 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !10208
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %28, i32 0, i32 3, !dbg !10209
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !10210
  %29 = load i8*, i8** %first, align 8, !dbg !10210
  %30 = bitcast i8* %29 to %struct.ScrArea*, !dbg !10211
  %31 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !10212
  call void @ED_area_data_copy(%struct.ScrArea* %30, %struct.ScrArea* %31, i8 zeroext 1), !dbg !10213
  %32 = load %struct.bScreen*, %struct.bScreen** %newsc, align 8, !dbg !10214
  %areabase23 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %32, i32 0, i32 3, !dbg !10215
  %first24 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase23, i32 0, i32 0, !dbg !10216
  %33 = load i8*, i8** %first24, align 8, !dbg !10216
  %34 = bitcast i8* %33 to %struct.ScrArea*, !dbg !10217
  call void @ED_area_tag_redraw(%struct.ScrArea* %34), !dbg !10218
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10219
  call void @WM_event_add_notifier(%struct.bContext* %35, i32 50331649, i8* null), !dbg !10220
  %36 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10221
  %type25 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %36, i32 0, i32 2, !dbg !10223
  %37 = load i16, i16* %type25, align 8, !dbg !10223
  %conv26 = sext i16 %37 to i32, !dbg !10221
  %cmp27 = icmp eq i32 %conv26, 20480, !dbg !10224
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !10225

if.then29:                                        ; preds = %if.end7
  %38 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10226
  call void @actionzone_exit(%struct.wmOperator* %38), !dbg !10227
  br label %if.end30, !dbg !10227

if.end30:                                         ; preds = %if.then29, %if.end7
  store i32 4, i32* %retval, align 4, !dbg !10228
  br label %return, !dbg !10228

return:                                           ; preds = %if.end30, %if.then6
  %39 = load i32, i32* %retval, align 4, !dbg !10229
  ret i32 %39, !dbg !10229
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local void @BLI_rcti_translate(%struct.rcti*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_x(%struct.rcti* %rct) #0 !dbg !10230 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !10236, metadata !DIExpression()), !dbg !10237
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !10238
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 1, !dbg !10239
  %1 = load i32, i32* %xmax, align 4, !dbg !10239
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !10240
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 0, !dbg !10241
  %3 = load i32, i32* %xmin, align 4, !dbg !10241
  %sub = sub nsw i32 %1, %3, !dbg !10242
  ret i32 %sub, !dbg !10243
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_y(%struct.rcti* %rct) #0 !dbg !10244 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !10245, metadata !DIExpression()), !dbg !10246
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !10247
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 3, !dbg !10248
  %1 = load i32, i32* %ymax, align 4, !dbg !10248
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !10249
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 2, !dbg !10250
  %3 = load i32, i32* %ymin, align 4, !dbg !10250
  %sub = sub nsw i32 %1, %3, !dbg !10251
  ret i32 %sub, !dbg !10252
}

declare dso_local %struct.wmWindow* @WM_window_open(%struct.bContext*, %struct.rcti*) #2

declare dso_local %struct.bScreen* @ED_screen_add(%struct.wmWindow*, %struct.Scene*, i8*) #2

declare dso_local void @ED_area_data_copy(%struct.ScrArea*, %struct.ScrArea*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_swap_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !10253 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10254, metadata !DIExpression()), !dbg !10255
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10256, metadata !DIExpression()), !dbg !10257
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !10258, metadata !DIExpression()), !dbg !10259
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10260
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10262
  %call = call i32 @area_swap_init(%struct.wmOperator* %0, %struct.wmEvent* %1), !dbg !10263
  %tobool = icmp ne i32 %call, 0, !dbg !10263
  br i1 %tobool, label %if.end, label %if.then, !dbg !10264

if.then:                                          ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !10265
  br label %return, !dbg !10265

if.end:                                           ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10266
  %call1 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %2), !dbg !10267
  call void @WM_cursor_modal_set(%struct.wmWindow* %call1, i32 18), !dbg !10268
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10269
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10270
  %call2 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %3, %struct.wmOperator* %4), !dbg !10271
  store i32 1, i32* %retval, align 4, !dbg !10272
  br label %return, !dbg !10272

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10273
  ret i32 %5, !dbg !10273
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_swap_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !10274 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sad = alloca %struct.sActionzoneData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10275, metadata !DIExpression()), !dbg !10276
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10277, metadata !DIExpression()), !dbg !10278
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !10279, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.declare(metadata %struct.sActionzoneData** %sad, metadata !10281, metadata !DIExpression()), !dbg !10282
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10283
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !10284
  %1 = load i8*, i8** %customdata, align 8, !dbg !10284
  %2 = bitcast i8* %1 to %struct.sActionzoneData*, !dbg !10283
  store %struct.sActionzoneData* %2, %struct.sActionzoneData** %sad, align 8, !dbg !10282
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10285
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 2, !dbg !10286
  %4 = load i16, i16* %type, align 8, !dbg !10286
  %conv = sext i16 %4 to i32, !dbg !10285
  switch i32 %conv, label %sw.epilog [
    i32 4, label %sw.bb
    i32 1, label %sw.bb2
    i32 218, label %sw.bb15
  ], !dbg !10287

sw.bb:                                            ; preds = %entry
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10288
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %5), !dbg !10290
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10291
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 4, !dbg !10292
  %7 = load i32, i32* %x, align 4, !dbg !10292
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10293
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 5, !dbg !10294
  %9 = load i32, i32* %y, align 8, !dbg !10294
  %call1 = call %struct.ScrArea* @screen_areahascursor(%struct.bScreen* %call, i32 %7, i32 %9), !dbg !10295
  %10 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10296
  %sa2 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %10, i32 0, i32 1, !dbg !10297
  store %struct.ScrArea* %call1, %struct.ScrArea** %sa2, align 8, !dbg !10298
  br label %sw.epilog, !dbg !10299

sw.bb2:                                           ; preds = %entry
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10300
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 3, !dbg !10302
  %12 = load i16, i16* %val, align 2, !dbg !10302
  %conv3 = sext i16 %12 to i32, !dbg !10300
  %cmp = icmp eq i32 %conv3, 2, !dbg !10303
  br i1 %cmp, label %if.then, label %if.end14, !dbg !10304

if.then:                                          ; preds = %sw.bb2
  %13 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10305
  %sa25 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %13, i32 0, i32 1, !dbg !10308
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sa25, align 8, !dbg !10308
  %tobool = icmp ne %struct.ScrArea* %14, null, !dbg !10305
  br i1 %tobool, label %lor.lhs.false, label %if.then9, !dbg !10309

lor.lhs.false:                                    ; preds = %if.then
  %15 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10310
  %sa1 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %15, i32 0, i32 0, !dbg !10311
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !10311
  %17 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10312
  %sa26 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %17, i32 0, i32 1, !dbg !10313
  %18 = load %struct.ScrArea*, %struct.ScrArea** %sa26, align 8, !dbg !10313
  %cmp7 = icmp eq %struct.ScrArea* %16, %18, !dbg !10314
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !10315

if.then9:                                         ; preds = %lor.lhs.false, %if.then
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10316
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10318
  call void @area_swap_cancel(%struct.bContext* %19, %struct.wmOperator* %20), !dbg !10319
  store i32 2, i32* %retval, align 4, !dbg !10320
  br label %return, !dbg !10320

if.end:                                           ; preds = %lor.lhs.false
  %21 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10321
  %sa110 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %21, i32 0, i32 0, !dbg !10322
  %22 = load %struct.ScrArea*, %struct.ScrArea** %sa110, align 8, !dbg !10322
  call void @ED_area_tag_redraw(%struct.ScrArea* %22), !dbg !10323
  %23 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10324
  %sa211 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %23, i32 0, i32 1, !dbg !10325
  %24 = load %struct.ScrArea*, %struct.ScrArea** %sa211, align 8, !dbg !10325
  call void @ED_area_tag_redraw(%struct.ScrArea* %24), !dbg !10326
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10327
  %26 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10328
  %sa112 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %26, i32 0, i32 0, !dbg !10329
  %27 = load %struct.ScrArea*, %struct.ScrArea** %sa112, align 8, !dbg !10329
  %28 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10330
  %sa213 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %28, i32 0, i32 1, !dbg !10331
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa213, align 8, !dbg !10331
  call void @ED_area_swapspace(%struct.bContext* %25, %struct.ScrArea* %27, %struct.ScrArea* %29), !dbg !10332
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10333
  %31 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10334
  call void @area_swap_exit(%struct.bContext* %30, %struct.wmOperator* %31), !dbg !10335
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10336
  call void @WM_event_add_notifier(%struct.bContext* %32, i32 50331649, i8* null), !dbg !10337
  store i32 4, i32* %retval, align 4, !dbg !10338
  br label %return, !dbg !10338

if.end14:                                         ; preds = %sw.bb2
  br label %sw.epilog, !dbg !10339

sw.bb15:                                          ; preds = %entry
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10340
  %34 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10341
  call void @area_swap_cancel(%struct.bContext* %33, %struct.wmOperator* %34), !dbg !10342
  store i32 2, i32* %retval, align 4, !dbg !10343
  br label %return, !dbg !10343

sw.epilog:                                        ; preds = %entry, %if.end14, %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !10344
  br label %return, !dbg !10344

return:                                           ; preds = %sw.epilog, %sw.bb15, %if.end, %if.then9
  %35 = load i32, i32* %retval, align 4, !dbg !10345
  ret i32 %35, !dbg !10345
}

; Function Attrs: noinline nounwind uwtable
define internal void @area_swap_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10346 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10347, metadata !DIExpression()), !dbg !10348
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10349, metadata !DIExpression()), !dbg !10350
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10351
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10352
  call void @area_swap_exit(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !10353
  ret void, !dbg !10354
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_swap_init(%struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !10355 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sd = alloca %struct.sAreaSwapData*, align 8
  %sad = alloca %struct.sActionzoneData*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10358, metadata !DIExpression()), !dbg !10359
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !10360, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.declare(metadata %struct.sAreaSwapData** %sd, metadata !10362, metadata !DIExpression()), !dbg !10369
  store %struct.sAreaSwapData* null, %struct.sAreaSwapData** %sd, align 8, !dbg !10369
  call void @llvm.dbg.declare(metadata %struct.sActionzoneData** %sad, metadata !10370, metadata !DIExpression()), !dbg !10371
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10372
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 28, !dbg !10373
  %1 = load i8*, i8** %customdata, align 8, !dbg !10373
  %2 = bitcast i8* %1 to %struct.sActionzoneData*, !dbg !10372
  store %struct.sActionzoneData* %2, %struct.sActionzoneData** %sad, align 8, !dbg !10371
  %3 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10374
  %cmp = icmp eq %struct.sActionzoneData* %3, null, !dbg !10376
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10377

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10378
  %sa1 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %4, i32 0, i32 0, !dbg !10379
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !10379
  %cmp1 = icmp eq %struct.ScrArea* %5, null, !dbg !10380
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10381

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !10382
  br label %return, !dbg !10382

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10383
  %call = call i8* %6(i64 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.120, i64 0, i64 0)), !dbg !10383
  %7 = bitcast i8* %call to %struct.sAreaSwapData*, !dbg !10383
  store %struct.sAreaSwapData* %7, %struct.sAreaSwapData** %sd, align 8, !dbg !10384
  %8 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10385
  %sa12 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %8, i32 0, i32 0, !dbg !10386
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa12, align 8, !dbg !10386
  %10 = load %struct.sAreaSwapData*, %struct.sAreaSwapData** %sd, align 8, !dbg !10387
  %sa13 = getelementptr inbounds %struct.sAreaSwapData, %struct.sAreaSwapData* %10, i32 0, i32 0, !dbg !10388
  store %struct.ScrArea* %9, %struct.ScrArea** %sa13, align 8, !dbg !10389
  %11 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10390
  %sa2 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %11, i32 0, i32 1, !dbg !10391
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sa2, align 8, !dbg !10391
  %13 = load %struct.sAreaSwapData*, %struct.sAreaSwapData** %sd, align 8, !dbg !10392
  %sa24 = getelementptr inbounds %struct.sAreaSwapData, %struct.sAreaSwapData* %13, i32 0, i32 1, !dbg !10393
  store %struct.ScrArea* %12, %struct.ScrArea** %sa24, align 8, !dbg !10394
  %14 = load %struct.sAreaSwapData*, %struct.sAreaSwapData** %sd, align 8, !dbg !10395
  %15 = bitcast %struct.sAreaSwapData* %14 to i8*, !dbg !10395
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10396
  %customdata5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 5, !dbg !10397
  store i8* %15, i8** %customdata5, align 8, !dbg !10398
  store i32 1, i32* %retval, align 4, !dbg !10399
  br label %return, !dbg !10399

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !10400
  ret i32 %17, !dbg !10400
}

declare dso_local void @WM_cursor_modal_set(%struct.wmWindow*, i32) #2

declare dso_local void @ED_area_swapspace(%struct.bContext*, %struct.ScrArea*, %struct.ScrArea*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @area_swap_exit(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10401 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10402, metadata !DIExpression()), !dbg !10403
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10404, metadata !DIExpression()), !dbg !10405
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10406
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !10407
  call void @WM_cursor_modal_restore(%struct.wmWindow* %call), !dbg !10408
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10409
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 5, !dbg !10411
  %2 = load i8*, i8** %customdata, align 8, !dbg !10411
  %tobool = icmp ne i8* %2, null, !dbg !10409
  br i1 %tobool, label %if.then, label %if.end, !dbg !10412

if.then:                                          ; preds = %entry
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10413
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10414
  %customdata1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 5, !dbg !10415
  %5 = load i8*, i8** %customdata1, align 8, !dbg !10415
  call void %3(i8* %5), !dbg !10413
  br label %if.end, !dbg !10413

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10416
  %customdata2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 5, !dbg !10417
  store i8* null, i8** %customdata2, align 8, !dbg !10418
  ret void, !dbg !10419
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @region_quadview_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10420 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %arn = alloca %struct.ARegion*, align 8
  %ar_iter = alloca %struct.ARegion*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  %v3d_user = alloca %struct.View3D*, align 8
  %ar_user = alloca %struct.ARegion*, align 8
  %sw_ap = alloca i8*, align 8
  %rv3d_iter = alloca %struct.RegionView3D*, align 8
  %sa64 = alloca %struct.ScrArea*, align 8
  %newar = alloca %struct.ARegion*, align 8
  %count = alloca i32, align 4
  %v3d = alloca %struct.View3D*, align 8
  %index_qsplit = alloca i32, align 4
  %rv3d82 = alloca %struct.RegionView3D*, align 8
  %viewlock84 = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10421, metadata !DIExpression()), !dbg !10422
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10423, metadata !DIExpression()), !dbg !10424
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !10425, metadata !DIExpression()), !dbg !10426
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10427
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !10428
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !10426
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10429
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %1, i32 0, i32 8, !dbg !10431
  %2 = load i16, i16* %regiontype, align 2, !dbg !10431
  %conv = sext i16 %2 to i32, !dbg !10429
  %cmp = icmp ne i32 %conv, 0, !dbg !10432
  br i1 %cmp, label %if.then, label %if.else, !dbg !10433

if.then:                                          ; preds = %entry
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10434
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 8, !dbg !10436
  %4 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !10436
  call void @BKE_report(%struct.ReportList* %4, i32 32, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.123, i64 0, i64 0)), !dbg !10437
  br label %if.end104, !dbg !10438

if.else:                                          ; preds = %entry
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10439
  %alignment = getelementptr inbounds %struct.ARegion, %struct.ARegion* %5, i32 0, i32 9, !dbg !10441
  %6 = load i16, i16* %alignment, align 8, !dbg !10441
  %conv2 = sext i16 %6 to i32, !dbg !10439
  %cmp3 = icmp eq i32 %conv2, 8, !dbg !10442
  br i1 %cmp3, label %if.then5, label %if.else58, !dbg !10443

if.then5:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !10444, metadata !DIExpression()), !dbg !10446
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10447
  %call6 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %7), !dbg !10448
  store %struct.ScrArea* %call6, %struct.ScrArea** %sa, align 8, !dbg !10446
  call void @llvm.dbg.declare(metadata %struct.ARegion** %arn, metadata !10449, metadata !DIExpression()), !dbg !10450
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10451
  %alignment7 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 9, !dbg !10452
  store i16 0, i16* %alignment7, align 8, !dbg !10453
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !10454
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 8, !dbg !10456
  %10 = load i8, i8* %spacetype, align 8, !dbg !10456
  %conv8 = zext i8 %10 to i32, !dbg !10454
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !10457
  br i1 %cmp9, label %if.then11, label %if.end42, !dbg !10458

if.then11:                                        ; preds = %if.then5
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar_iter, metadata !10459, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !10462, metadata !DIExpression()), !dbg !10527
  %11 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10528
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %11, i32 0, i32 30, !dbg !10529
  %12 = load i8*, i8** %regiondata, align 8, !dbg !10529
  %13 = bitcast i8* %12 to %struct.RegionView3D*, !dbg !10528
  store %struct.RegionView3D* %13, %struct.RegionView3D** %rv3d, align 8, !dbg !10527
  %14 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10530
  %viewlock = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %14, i32 0, i32 27, !dbg !10532
  %15 = load i8, i8* %viewlock, align 1, !dbg !10532
  %tobool = icmp ne i8 %15, 0, !dbg !10530
  br i1 %tobool, label %if.then12, label %if.end25, !dbg !10533

if.then12:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d_user, metadata !10534, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar_user, metadata !10613, metadata !DIExpression()), !dbg !10614
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10615
  %call13 = call zeroext i8 @ED_view3d_context_user_region(%struct.bContext* %16, %struct.View3D** %v3d_user, %struct.ARegion** %ar_user), !dbg !10617
  %tobool14 = icmp ne i8 %call13, 0, !dbg !10617
  br i1 %tobool14, label %if.then15, label %if.end24, !dbg !10618

if.then15:                                        ; preds = %if.then12
  %17 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10619
  %18 = load %struct.ARegion*, %struct.ARegion** %ar_user, align 8, !dbg !10622
  %cmp16 = icmp ne %struct.ARegion* %17, %18, !dbg !10623
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !10624

if.then18:                                        ; preds = %if.then15
  call void @llvm.dbg.declare(metadata i8** %sw_ap, metadata !10625, metadata !DIExpression()), !dbg !10628
  %19 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10628
  %regiondata19 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %19, i32 0, i32 30, !dbg !10628
  %20 = load i8*, i8** %regiondata19, align 8, !dbg !10628
  store i8* %20, i8** %sw_ap, align 8, !dbg !10628
  %21 = load %struct.ARegion*, %struct.ARegion** %ar_user, align 8, !dbg !10628
  %regiondata20 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %21, i32 0, i32 30, !dbg !10628
  %22 = load i8*, i8** %regiondata20, align 8, !dbg !10628
  %23 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10628
  %regiondata21 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %23, i32 0, i32 30, !dbg !10628
  store i8* %22, i8** %regiondata21, align 8, !dbg !10628
  %24 = load i8*, i8** %sw_ap, align 8, !dbg !10628
  %25 = load %struct.ARegion*, %struct.ARegion** %ar_user, align 8, !dbg !10628
  %regiondata22 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %25, i32 0, i32 30, !dbg !10628
  store i8* %24, i8** %regiondata22, align 8, !dbg !10628
  %26 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10629
  %regiondata23 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %26, i32 0, i32 30, !dbg !10630
  %27 = load i8*, i8** %regiondata23, align 8, !dbg !10630
  %28 = bitcast i8* %27 to %struct.RegionView3D*, !dbg !10629
  store %struct.RegionView3D* %28, %struct.RegionView3D** %rv3d, align 8, !dbg !10631
  br label %if.end, !dbg !10632

if.end:                                           ; preds = %if.then18, %if.then15
  br label %if.end24, !dbg !10633

if.end24:                                         ; preds = %if.end, %if.then12
  br label %if.end25, !dbg !10634

if.end25:                                         ; preds = %if.end24, %if.then11
  %29 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10635
  %viewlock_quad = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %29, i32 0, i32 28, !dbg !10636
  store i8 -128, i8* %viewlock_quad, align 4, !dbg !10637
  %30 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10638
  %viewlock26 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %30, i32 0, i32 27, !dbg !10639
  store i8 0, i8* %viewlock26, align 1, !dbg !10640
  %31 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10641
  %rflag = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %31, i32 0, i32 32, !dbg !10642
  %32 = load i16, i16* %rflag, align 2, !dbg !10643
  %conv27 = sext i16 %32 to i32, !dbg !10643
  %and = and i32 %conv27, -5, !dbg !10643
  %conv28 = trunc i32 %and to i16, !dbg !10643
  store i16 %conv28, i16* %rflag, align 2, !dbg !10643
  %33 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !10644
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %33, i32 0, i32 20, !dbg !10646
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !10647
  %34 = load i8*, i8** %first, align 8, !dbg !10647
  %35 = bitcast i8* %34 to %struct.ARegion*, !dbg !10644
  store %struct.ARegion* %35, %struct.ARegion** %ar_iter, align 8, !dbg !10648
  br label %for.cond, !dbg !10649

for.cond:                                         ; preds = %for.inc, %if.end25
  %36 = load %struct.ARegion*, %struct.ARegion** %ar_iter, align 8, !dbg !10650
  %tobool29 = icmp ne %struct.ARegion* %36, null, !dbg !10652
  br i1 %tobool29, label %for.body, label %for.end, !dbg !10652

for.body:                                         ; preds = %for.cond
  %37 = load %struct.ARegion*, %struct.ARegion** %ar_iter, align 8, !dbg !10653
  %regiontype30 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %37, i32 0, i32 8, !dbg !10656
  %38 = load i16, i16* %regiontype30, align 2, !dbg !10656
  %conv31 = sext i16 %38 to i32, !dbg !10653
  %cmp32 = icmp eq i32 %conv31, 0, !dbg !10657
  br i1 %cmp32, label %if.then34, label %if.end41, !dbg !10658

if.then34:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d_iter, metadata !10659, metadata !DIExpression()), !dbg !10661
  %39 = load %struct.ARegion*, %struct.ARegion** %ar_iter, align 8, !dbg !10662
  %regiondata35 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %39, i32 0, i32 30, !dbg !10663
  %40 = load i8*, i8** %regiondata35, align 8, !dbg !10663
  %41 = bitcast i8* %40 to %struct.RegionView3D*, !dbg !10662
  store %struct.RegionView3D* %41, %struct.RegionView3D** %rv3d_iter, align 8, !dbg !10661
  %42 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d_iter, align 8, !dbg !10664
  %viewlock36 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %42, i32 0, i32 27, !dbg !10665
  %43 = load i8, i8* %viewlock36, align 1, !dbg !10665
  %conv37 = zext i8 %43 to i32, !dbg !10664
  %44 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10666
  %viewlock_quad38 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %44, i32 0, i32 28, !dbg !10667
  %45 = load i8, i8* %viewlock_quad38, align 4, !dbg !10668
  %conv39 = zext i8 %45 to i32, !dbg !10668
  %or = or i32 %conv39, %conv37, !dbg !10668
  %conv40 = trunc i32 %or to i8, !dbg !10668
  store i8 %conv40, i8* %viewlock_quad38, align 4, !dbg !10668
  br label %if.end41, !dbg !10669

if.end41:                                         ; preds = %if.then34, %for.body
  br label %for.inc, !dbg !10670

for.inc:                                          ; preds = %if.end41
  %46 = load %struct.ARegion*, %struct.ARegion** %ar_iter, align 8, !dbg !10671
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %46, i32 0, i32 0, !dbg !10672
  %47 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !10672
  store %struct.ARegion* %47, %struct.ARegion** %ar_iter, align 8, !dbg !10673
  br label %for.cond, !dbg !10674, !llvm.loop !10675

for.end:                                          ; preds = %for.cond
  br label %if.end42, !dbg !10677

if.end42:                                         ; preds = %for.end, %if.then5
  %48 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !10678
  %regionbase43 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %48, i32 0, i32 20, !dbg !10680
  %first44 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase43, i32 0, i32 0, !dbg !10681
  %49 = load i8*, i8** %first44, align 8, !dbg !10681
  %50 = bitcast i8* %49 to %struct.ARegion*, !dbg !10678
  store %struct.ARegion* %50, %struct.ARegion** %ar, align 8, !dbg !10682
  br label %for.cond45, !dbg !10683

for.cond45:                                       ; preds = %for.inc56, %if.end42
  %51 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10684
  %tobool46 = icmp ne %struct.ARegion* %51, null, !dbg !10686
  br i1 %tobool46, label %for.body47, label %for.end57, !dbg !10686

for.body47:                                       ; preds = %for.cond45
  %52 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10687
  %next48 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %52, i32 0, i32 0, !dbg !10689
  %53 = load %struct.ARegion*, %struct.ARegion** %next48, align 8, !dbg !10689
  store %struct.ARegion* %53, %struct.ARegion** %arn, align 8, !dbg !10690
  %54 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10691
  %alignment49 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %54, i32 0, i32 9, !dbg !10693
  %55 = load i16, i16* %alignment49, align 8, !dbg !10693
  %conv50 = sext i16 %55 to i32, !dbg !10691
  %cmp51 = icmp eq i32 %conv50, 8, !dbg !10694
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !10695

if.then53:                                        ; preds = %for.body47
  %56 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10696
  %57 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10698
  call void @ED_region_exit(%struct.bContext* %56, %struct.ARegion* %57), !dbg !10699
  %58 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !10700
  %type = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %58, i32 0, i32 18, !dbg !10701
  %59 = load %struct.SpaceType*, %struct.SpaceType** %type, align 8, !dbg !10701
  %60 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10702
  call void @BKE_area_region_free(%struct.SpaceType* %59, %struct.ARegion* %60), !dbg !10703
  %61 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !10704
  %regionbase54 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %61, i32 0, i32 20, !dbg !10705
  %62 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10706
  %63 = bitcast %struct.ARegion* %62 to i8*, !dbg !10706
  call void @BLI_remlink(%struct.ListBase* %regionbase54, i8* %63), !dbg !10707
  %64 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10708
  %65 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10709
  %66 = bitcast %struct.ARegion* %65 to i8*, !dbg !10709
  call void %64(i8* %66), !dbg !10708
  br label %if.end55, !dbg !10710

if.end55:                                         ; preds = %if.then53, %for.body47
  br label %for.inc56, !dbg !10711

for.inc56:                                        ; preds = %if.end55
  %67 = load %struct.ARegion*, %struct.ARegion** %arn, align 8, !dbg !10712
  store %struct.ARegion* %67, %struct.ARegion** %ar, align 8, !dbg !10713
  br label %for.cond45, !dbg !10714, !llvm.loop !10715

for.end57:                                        ; preds = %for.cond45
  %68 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !10717
  call void @ED_area_tag_redraw(%struct.ScrArea* %68), !dbg !10718
  %69 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10719
  call void @WM_event_add_notifier(%struct.bContext* %69, i32 50331649, i8* null), !dbg !10720
  br label %if.end103, !dbg !10721

if.else58:                                        ; preds = %if.else
  %70 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10722
  %next59 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %70, i32 0, i32 0, !dbg !10724
  %71 = load %struct.ARegion*, %struct.ARegion** %next59, align 8, !dbg !10724
  %tobool60 = icmp ne %struct.ARegion* %71, null, !dbg !10722
  br i1 %tobool60, label %if.then61, label %if.else63, !dbg !10725

if.then61:                                        ; preds = %if.else58
  %72 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10726
  %reports62 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %72, i32 0, i32 8, !dbg !10728
  %73 = load %struct.ReportList*, %struct.ReportList** %reports62, align 8, !dbg !10728
  call void @BKE_report(%struct.ReportList* %73, i32 32, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.124, i64 0, i64 0)), !dbg !10729
  br label %if.end102, !dbg !10730

if.else63:                                        ; preds = %if.else58
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa64, metadata !10731, metadata !DIExpression()), !dbg !10733
  %74 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10734
  %call65 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %74), !dbg !10735
  store %struct.ScrArea* %call65, %struct.ScrArea** %sa64, align 8, !dbg !10733
  call void @llvm.dbg.declare(metadata %struct.ARegion** %newar, metadata !10736, metadata !DIExpression()), !dbg !10737
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10738, metadata !DIExpression()), !dbg !10739
  %75 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10740
  %alignment66 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %75, i32 0, i32 9, !dbg !10741
  store i16 8, i16* %alignment66, align 8, !dbg !10742
  store i32 0, i32* %count, align 4, !dbg !10743
  br label %for.cond67, !dbg !10745

for.cond67:                                       ; preds = %for.inc74, %if.else63
  %76 = load i32, i32* %count, align 4, !dbg !10746
  %cmp68 = icmp slt i32 %76, 3, !dbg !10748
  br i1 %cmp68, label %for.body70, label %for.end75, !dbg !10749

for.body70:                                       ; preds = %for.cond67
  %77 = load %struct.ScrArea*, %struct.ScrArea** %sa64, align 8, !dbg !10750
  %type71 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %77, i32 0, i32 18, !dbg !10752
  %78 = load %struct.SpaceType*, %struct.SpaceType** %type71, align 8, !dbg !10752
  %79 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10753
  %call72 = call %struct.ARegion* @BKE_area_region_copy(%struct.SpaceType* %78, %struct.ARegion* %79), !dbg !10754
  store %struct.ARegion* %call72, %struct.ARegion** %newar, align 8, !dbg !10755
  %80 = load %struct.ScrArea*, %struct.ScrArea** %sa64, align 8, !dbg !10756
  %regionbase73 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %80, i32 0, i32 20, !dbg !10757
  %81 = load %struct.ARegion*, %struct.ARegion** %newar, align 8, !dbg !10758
  %82 = bitcast %struct.ARegion* %81 to i8*, !dbg !10758
  call void @BLI_addtail(%struct.ListBase* %regionbase73, i8* %82), !dbg !10759
  br label %for.inc74, !dbg !10760

for.inc74:                                        ; preds = %for.body70
  %83 = load i32, i32* %count, align 4, !dbg !10761
  %inc = add nsw i32 %83, 1, !dbg !10761
  store i32 %inc, i32* %count, align 4, !dbg !10761
  br label %for.cond67, !dbg !10762, !llvm.loop !10763

for.end75:                                        ; preds = %for.cond67
  %84 = load %struct.ScrArea*, %struct.ScrArea** %sa64, align 8, !dbg !10765
  %spacetype76 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %84, i32 0, i32 8, !dbg !10767
  %85 = load i8, i8* %spacetype76, align 8, !dbg !10767
  %conv77 = zext i8 %85 to i32, !dbg !10765
  %cmp78 = icmp eq i32 %conv77, 1, !dbg !10768
  br i1 %cmp78, label %if.then80, label %if.end101, !dbg !10769

if.then80:                                        ; preds = %for.end75
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !10770, metadata !DIExpression()), !dbg !10772
  %86 = load %struct.ScrArea*, %struct.ScrArea** %sa64, align 8, !dbg !10773
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %86, i32 0, i32 19, !dbg !10774
  %first81 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !10775
  %87 = load i8*, i8** %first81, align 8, !dbg !10775
  %88 = bitcast i8* %87 to %struct.View3D*, !dbg !10773
  store %struct.View3D* %88, %struct.View3D** %v3d, align 8, !dbg !10772
  call void @llvm.dbg.declare(metadata i32* %index_qsplit, metadata !10776, metadata !DIExpression()), !dbg !10777
  store i32 0, i32* %index_qsplit, align 4, !dbg !10777
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d82, metadata !10778, metadata !DIExpression()), !dbg !10779
  %89 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10780
  %regiondata83 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %89, i32 0, i32 30, !dbg !10781
  %90 = load i8*, i8** %regiondata83, align 8, !dbg !10781
  %91 = bitcast i8* %90 to %struct.RegionView3D*, !dbg !10780
  store %struct.RegionView3D* %91, %struct.RegionView3D** %rv3d82, align 8, !dbg !10779
  call void @llvm.dbg.declare(metadata i8* %viewlock84, metadata !10782, metadata !DIExpression()), !dbg !10783
  %92 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d82, align 8, !dbg !10784
  %viewlock_quad85 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %92, i32 0, i32 28, !dbg !10785
  %93 = load i8, i8* %viewlock_quad85, align 4, !dbg !10785
  %conv86 = zext i8 %93 to i32, !dbg !10784
  %and87 = and i32 %conv86, 128, !dbg !10786
  %tobool88 = icmp ne i32 %and87, 0, !dbg !10786
  br i1 %tobool88, label %cond.true, label %cond.false, !dbg !10787

cond.true:                                        ; preds = %if.then80
  %94 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d82, align 8, !dbg !10788
  %viewlock_quad89 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %94, i32 0, i32 28, !dbg !10789
  %95 = load i8, i8* %viewlock_quad89, align 4, !dbg !10789
  %conv90 = zext i8 %95 to i32, !dbg !10788
  %and91 = and i32 %conv90, -129, !dbg !10790
  br label %cond.end, !dbg !10787

cond.false:                                       ; preds = %if.then80
  br label %cond.end, !dbg !10787

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and91, %cond.true ], [ 1, %cond.false ], !dbg !10787
  %conv92 = trunc i32 %cond to i8, !dbg !10787
  store i8 %conv92, i8* %viewlock84, align 1, !dbg !10783
  %96 = load %struct.ScrArea*, %struct.ScrArea** %sa64, align 8, !dbg !10791
  %97 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10792
  %98 = load i8, i8* %viewlock84, align 1, !dbg !10793
  %99 = load i32, i32* %index_qsplit, align 4, !dbg !10794
  %inc93 = add nsw i32 %99, 1, !dbg !10794
  store i32 %inc93, i32* %index_qsplit, align 4, !dbg !10794
  %call94 = call zeroext i8 @ED_view3d_lock_view_from_index(i32 %99), !dbg !10795
  call void @region_quadview_init_rv3d(%struct.ScrArea* %96, %struct.ARegion* %97, i8 zeroext %98, i8 zeroext %call94, i8 zeroext 0), !dbg !10796
  %100 = load %struct.ScrArea*, %struct.ScrArea** %sa64, align 8, !dbg !10797
  %101 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10798
  %next95 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %101, i32 0, i32 0, !dbg !10799
  %102 = load %struct.ARegion*, %struct.ARegion** %next95, align 8, !dbg !10799
  store %struct.ARegion* %102, %struct.ARegion** %ar, align 8, !dbg !10800
  %103 = load i8, i8* %viewlock84, align 1, !dbg !10801
  %104 = load i32, i32* %index_qsplit, align 4, !dbg !10802
  %inc96 = add nsw i32 %104, 1, !dbg !10802
  store i32 %inc96, i32* %index_qsplit, align 4, !dbg !10802
  %call97 = call zeroext i8 @ED_view3d_lock_view_from_index(i32 %104), !dbg !10803
  call void @region_quadview_init_rv3d(%struct.ScrArea* %100, %struct.ARegion* %102, i8 zeroext %103, i8 zeroext %call97, i8 zeroext 0), !dbg !10804
  %105 = load %struct.ScrArea*, %struct.ScrArea** %sa64, align 8, !dbg !10805
  %106 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10806
  %next98 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %106, i32 0, i32 0, !dbg !10807
  %107 = load %struct.ARegion*, %struct.ARegion** %next98, align 8, !dbg !10807
  store %struct.ARegion* %107, %struct.ARegion** %ar, align 8, !dbg !10808
  %108 = load i8, i8* %viewlock84, align 1, !dbg !10809
  %109 = load i32, i32* %index_qsplit, align 4, !dbg !10810
  %inc99 = add nsw i32 %109, 1, !dbg !10810
  store i32 %inc99, i32* %index_qsplit, align 4, !dbg !10810
  %call100 = call zeroext i8 @ED_view3d_lock_view_from_index(i32 %109), !dbg !10811
  call void @region_quadview_init_rv3d(%struct.ScrArea* %105, %struct.ARegion* %107, i8 zeroext %108, i8 zeroext %call100, i8 zeroext 0), !dbg !10812
  %110 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !10813
  br label %if.end101, !dbg !10814

if.end101:                                        ; preds = %cond.end, %for.end75
  %111 = load %struct.ScrArea*, %struct.ScrArea** %sa64, align 8, !dbg !10815
  call void @ED_area_tag_redraw(%struct.ScrArea* %111), !dbg !10816
  %112 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10817
  call void @WM_event_add_notifier(%struct.bContext* %112, i32 50331649, i8* null), !dbg !10818
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then61
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %for.end57
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then
  ret i32 4, !dbg !10819
}

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

declare dso_local zeroext i8 @ED_view3d_context_user_region(%struct.bContext*, %struct.View3D**, %struct.ARegion**) #2

declare dso_local void @ED_region_exit(%struct.bContext*, %struct.ARegion*) #2

declare dso_local void @BKE_area_region_free(%struct.SpaceType*, %struct.ARegion*) #2

declare dso_local %struct.ARegion* @BKE_area_region_copy(%struct.SpaceType*, %struct.ARegion*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @region_quadview_init_rv3d(%struct.ScrArea* %sa, %struct.ARegion* %ar, i8 zeroext %viewlock, i8 zeroext %view, i8 zeroext %persp) #0 !dbg !10820 {
entry:
  %sa.addr = alloca %struct.ScrArea*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %viewlock.addr = alloca i8, align 1
  %view.addr = alloca i8, align 1
  %persp.addr = alloca i8, align 1
  %rv3d = alloca %struct.RegionView3D*, align 8
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !10823, metadata !DIExpression()), !dbg !10824
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !10825, metadata !DIExpression()), !dbg !10826
  store i8 %viewlock, i8* %viewlock.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %viewlock.addr, metadata !10827, metadata !DIExpression()), !dbg !10828
  store i8 %view, i8* %view.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %view.addr, metadata !10829, metadata !DIExpression()), !dbg !10830
  store i8 %persp, i8* %persp.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %persp.addr, metadata !10831, metadata !DIExpression()), !dbg !10832
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !10833, metadata !DIExpression()), !dbg !10834
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !10835
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 30, !dbg !10836
  %1 = load i8*, i8** %regiondata, align 8, !dbg !10836
  %2 = bitcast i8* %1 to %struct.RegionView3D*, !dbg !10835
  store %struct.RegionView3D* %2, %struct.RegionView3D** %rv3d, align 8, !dbg !10834
  %3 = load i8, i8* %persp.addr, align 1, !dbg !10837
  %conv = zext i8 %3 to i32, !dbg !10837
  %cmp = icmp eq i32 %conv, 2, !dbg !10839
  br i1 %cmp, label %if.then, label %if.end, !dbg !10840

if.then:                                          ; preds = %entry
  %4 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10841
  call void @ED_view3d_lastview_store(%struct.RegionView3D* %4), !dbg !10843
  br label %if.end, !dbg !10844

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8, i8* %viewlock.addr, align 1, !dbg !10845
  %6 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10846
  %viewlock2 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %6, i32 0, i32 27, !dbg !10847
  store i8 %5, i8* %viewlock2, align 1, !dbg !10848
  %7 = load i8, i8* %view.addr, align 1, !dbg !10849
  %8 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10850
  %view3 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %8, i32 0, i32 26, !dbg !10851
  store i8 %7, i8* %view3, align 2, !dbg !10852
  %9 = load i8, i8* %persp.addr, align 1, !dbg !10853
  %10 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10854
  %persp4 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %10, i32 0, i32 25, !dbg !10855
  store i8 %9, i8* %persp4, align 1, !dbg !10856
  %11 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10857
  %call = call zeroext i8 @ED_view3d_lock(%struct.RegionView3D* %11), !dbg !10858
  %12 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !10859
  call void @view3d_localview_update_rv3d(%struct.RegionView3D* %12), !dbg !10860
  %13 = load i8, i8* %viewlock.addr, align 1, !dbg !10861
  %conv5 = zext i8 %13 to i32, !dbg !10861
  %and = and i32 %conv5, 4, !dbg !10863
  %tobool = icmp ne i32 %and, 0, !dbg !10863
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !10864

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8, i8* %persp.addr, align 1, !dbg !10865
  %conv6 = zext i8 %14 to i32, !dbg !10865
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !10866
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !10867

if.then9:                                         ; preds = %land.lhs.true
  %15 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !10868
  %16 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !10870
  call void @ED_view3d_quadview_update(%struct.ScrArea* %15, %struct.ARegion* %16, i8 zeroext 1), !dbg !10871
  br label %if.end10, !dbg !10872

if.end10:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  ret void, !dbg !10873
}

declare dso_local zeroext i8 @ED_view3d_lock_view_from_index(i32) #2

declare dso_local void @ED_view3d_lastview_store(%struct.RegionView3D*) #2

declare dso_local zeroext i8 @ED_view3d_lock(%struct.RegionView3D*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @view3d_localview_update_rv3d(%struct.RegionView3D* %rv3d) #0 !dbg !10874 {
entry:
  %rv3d.addr = alloca %struct.RegionView3D*, align 8
  store %struct.RegionView3D* %rv3d, %struct.RegionView3D** %rv3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d.addr, metadata !10877, metadata !DIExpression()), !dbg !10878
  %0 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d.addr, align 8, !dbg !10879
  %localvd = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %0, i32 0, i32 10, !dbg !10881
  %1 = load %struct.RegionView3D*, %struct.RegionView3D** %localvd, align 8, !dbg !10881
  %tobool = icmp ne %struct.RegionView3D* %1, null, !dbg !10879
  br i1 %tobool, label %if.then, label %if.end, !dbg !10882

if.then:                                          ; preds = %entry
  %2 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d.addr, align 8, !dbg !10883
  %view = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %2, i32 0, i32 26, !dbg !10885
  %3 = load i8, i8* %view, align 2, !dbg !10885
  %4 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d.addr, align 8, !dbg !10886
  %localvd1 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %4, i32 0, i32 10, !dbg !10887
  %5 = load %struct.RegionView3D*, %struct.RegionView3D** %localvd1, align 8, !dbg !10887
  %view2 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %5, i32 0, i32 26, !dbg !10888
  store i8 %3, i8* %view2, align 2, !dbg !10889
  %6 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d.addr, align 8, !dbg !10890
  %persp = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %6, i32 0, i32 25, !dbg !10891
  %7 = load i8, i8* %persp, align 1, !dbg !10891
  %8 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d.addr, align 8, !dbg !10892
  %localvd3 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %8, i32 0, i32 10, !dbg !10893
  %9 = load %struct.RegionView3D*, %struct.RegionView3D** %localvd3, align 8, !dbg !10893
  %persp4 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %9, i32 0, i32 25, !dbg !10894
  store i8 %7, i8* %persp4, align 1, !dbg !10895
  %10 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d.addr, align 8, !dbg !10896
  %localvd5 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %10, i32 0, i32 10, !dbg !10897
  %11 = load %struct.RegionView3D*, %struct.RegionView3D** %localvd5, align 8, !dbg !10897
  %viewquat = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %11, i32 0, i32 17, !dbg !10898
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %viewquat, i64 0, i64 0, !dbg !10896
  %12 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d.addr, align 8, !dbg !10899
  %viewquat6 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %12, i32 0, i32 17, !dbg !10900
  %arraydecay7 = getelementptr inbounds [4 x float], [4 x float]* %viewquat6, i64 0, i64 0, !dbg !10899
  call void @copy_qt_qt(float* %arraydecay, float* %arraydecay7), !dbg !10901
  br label %if.end, !dbg !10902

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10903
}

declare dso_local void @ED_view3d_quadview_update(%struct.ScrArea*, %struct.ARegion*, i8 zeroext) #2

declare dso_local void @copy_qt_qt(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @region_scale_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !10904 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %sad = alloca %struct.sActionzoneData*, align 8
  %az = alloca %struct.AZone*, align 8
  %rmd = alloca %struct.RegionMoveData*, align 8
  %maxsize = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10905, metadata !DIExpression()), !dbg !10906
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10907, metadata !DIExpression()), !dbg !10908
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !10909, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.declare(metadata %struct.sActionzoneData** %sad, metadata !10911, metadata !DIExpression()), !dbg !10912
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10913
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 28, !dbg !10914
  %1 = load i8*, i8** %customdata, align 8, !dbg !10914
  %2 = bitcast i8* %1 to %struct.sActionzoneData*, !dbg !10913
  store %struct.sActionzoneData* %2, %struct.sActionzoneData** %sad, align 8, !dbg !10912
  call void @llvm.dbg.declare(metadata %struct.AZone** %az, metadata !10915, metadata !DIExpression()), !dbg !10916
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10917
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 2, !dbg !10919
  %4 = load i16, i16* %type, align 8, !dbg !10919
  %conv = sext i16 %4 to i32, !dbg !10917
  %cmp = icmp ne i32 %conv, 20481, !dbg !10920
  br i1 %cmp, label %if.then, label %if.end, !dbg !10921

if.then:                                          ; preds = %entry
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10922
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 8, !dbg !10924
  %6 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !10924
  call void @BKE_report(%struct.ReportList* %6, i32 32, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.127, i64 0, i64 0)), !dbg !10925
  store i32 2, i32* %retval, align 4, !dbg !10926
  br label %return, !dbg !10926

if.end:                                           ; preds = %entry
  %7 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10927
  %az2 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %7, i32 0, i32 2, !dbg !10928
  %8 = load %struct.AZone*, %struct.AZone** %az2, align 8, !dbg !10928
  store %struct.AZone* %8, %struct.AZone** %az, align 8, !dbg !10929
  %9 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !10930
  %ar = getelementptr inbounds %struct.AZone, %struct.AZone* %9, i32 0, i32 2, !dbg !10932
  %10 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !10932
  %tobool = icmp ne %struct.ARegion* %10, null, !dbg !10930
  br i1 %tobool, label %if.then3, label %if.end69, !dbg !10933

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.RegionMoveData** %rmd, metadata !10934, metadata !DIExpression()), !dbg !10950
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10951
  %call = call i8* %11(i64 56, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.128, i64 0, i64 0)), !dbg !10951
  %12 = bitcast i8* %call to %struct.RegionMoveData*, !dbg !10951
  store %struct.RegionMoveData* %12, %struct.RegionMoveData** %rmd, align 8, !dbg !10950
  call void @llvm.dbg.declare(metadata i32* %maxsize, metadata !10952, metadata !DIExpression()), !dbg !10953
  %13 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !10954
  %14 = bitcast %struct.RegionMoveData* %13 to i8*, !dbg !10954
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10955
  %customdata4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 5, !dbg !10956
  store i8* %14, i8** %customdata4, align 8, !dbg !10957
  %16 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !10958
  %17 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !10959
  %az5 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %17, i32 0, i32 0, !dbg !10960
  store %struct.AZone* %16, %struct.AZone** %az5, align 8, !dbg !10961
  %18 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !10962
  %ar6 = getelementptr inbounds %struct.AZone, %struct.AZone* %18, i32 0, i32 2, !dbg !10963
  %19 = load %struct.ARegion*, %struct.ARegion** %ar6, align 8, !dbg !10963
  %20 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !10964
  %ar7 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %20, i32 0, i32 1, !dbg !10965
  store %struct.ARegion* %19, %struct.ARegion** %ar7, align 8, !dbg !10966
  %21 = load %struct.sActionzoneData*, %struct.sActionzoneData** %sad, align 8, !dbg !10967
  %sa1 = getelementptr inbounds %struct.sActionzoneData, %struct.sActionzoneData* %21, i32 0, i32 0, !dbg !10968
  %22 = load %struct.ScrArea*, %struct.ScrArea** %sa1, align 8, !dbg !10968
  %23 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !10969
  %sa = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %23, i32 0, i32 2, !dbg !10970
  store %struct.ScrArea* %22, %struct.ScrArea** %sa, align 8, !dbg !10971
  %24 = load %struct.AZone*, %struct.AZone** %az, align 8, !dbg !10972
  %edge = getelementptr inbounds %struct.AZone, %struct.AZone* %24, i32 0, i32 4, !dbg !10973
  %25 = load i32, i32* %edge, align 4, !dbg !10973
  %26 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !10974
  %edge8 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %26, i32 0, i32 9, !dbg !10975
  store i32 %25, i32* %edge8, align 8, !dbg !10976
  %27 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10977
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %27, i32 0, i32 4, !dbg !10978
  %28 = load i32, i32* %x, align 4, !dbg !10978
  %29 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !10979
  %origx = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %29, i32 0, i32 6, !dbg !10980
  store i32 %28, i32* %origx, align 4, !dbg !10981
  %30 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10982
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %30, i32 0, i32 5, !dbg !10983
  %31 = load i32, i32* %y, align 8, !dbg !10983
  %32 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !10984
  %origy = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %32, i32 0, i32 7, !dbg !10985
  store i32 %31, i32* %origy, align 8, !dbg !10986
  %33 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !10987
  %sa9 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %33, i32 0, i32 2, !dbg !10988
  %34 = load %struct.ScrArea*, %struct.ScrArea** %sa9, align 8, !dbg !10988
  %35 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !10989
  %ar10 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %35, i32 0, i32 1, !dbg !10990
  %36 = load %struct.ARegion*, %struct.ARegion** %ar10, align 8, !dbg !10990
  %37 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !10991
  %edge11 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %37, i32 0, i32 9, !dbg !10992
  %38 = load i32, i32* %edge11, align 8, !dbg !10992
  %call12 = call i32 @area_max_regionsize(%struct.ScrArea* %34, %struct.ARegion* %36, i32 %38), !dbg !10993
  %39 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !10994
  %maxsize13 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %39, i32 0, i32 8, !dbg !10995
  store i32 %call12, i32* %maxsize13, align 4, !dbg !10996
  %40 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !10997
  %ar14 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %40, i32 0, i32 1, !dbg !10999
  %41 = load %struct.ARegion*, %struct.ARegion** %ar14, align 8, !dbg !10999
  %sizex = getelementptr inbounds %struct.ARegion, %struct.ARegion* %41, i32 0, i32 12, !dbg !11000
  %42 = load i16, i16* %sizex, align 8, !dbg !11000
  %conv15 = sext i16 %42 to i32, !dbg !10997
  %cmp16 = icmp eq i32 %conv15, 0, !dbg !11001
  br i1 %cmp16, label %if.then18, label %if.end22, !dbg !11002

if.then18:                                        ; preds = %if.then3
  %43 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11003
  %ar19 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %43, i32 0, i32 1, !dbg !11004
  %44 = load %struct.ARegion*, %struct.ARegion** %ar19, align 8, !dbg !11004
  %winx = getelementptr inbounds %struct.ARegion, %struct.ARegion* %44, i32 0, i32 5, !dbg !11005
  %45 = load i16, i16* %winx, align 8, !dbg !11005
  %46 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11006
  %ar20 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %46, i32 0, i32 1, !dbg !11007
  %47 = load %struct.ARegion*, %struct.ARegion** %ar20, align 8, !dbg !11007
  %sizex21 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %47, i32 0, i32 12, !dbg !11008
  store i16 %45, i16* %sizex21, align 8, !dbg !11009
  br label %if.end22, !dbg !11006

if.end22:                                         ; preds = %if.then18, %if.then3
  %48 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11010
  %ar23 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %48, i32 0, i32 1, !dbg !11012
  %49 = load %struct.ARegion*, %struct.ARegion** %ar23, align 8, !dbg !11012
  %sizey = getelementptr inbounds %struct.ARegion, %struct.ARegion* %49, i32 0, i32 13, !dbg !11013
  %50 = load i16, i16* %sizey, align 2, !dbg !11013
  %conv24 = sext i16 %50 to i32, !dbg !11010
  %cmp25 = icmp eq i32 %conv24, 0, !dbg !11014
  br i1 %cmp25, label %if.then27, label %if.end31, !dbg !11015

if.then27:                                        ; preds = %if.end22
  %51 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11016
  %ar28 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %51, i32 0, i32 1, !dbg !11017
  %52 = load %struct.ARegion*, %struct.ARegion** %ar28, align 8, !dbg !11017
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %52, i32 0, i32 6, !dbg !11018
  %53 = load i16, i16* %winy, align 2, !dbg !11018
  %54 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11019
  %ar29 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %54, i32 0, i32 1, !dbg !11020
  %55 = load %struct.ARegion*, %struct.ARegion** %ar29, align 8, !dbg !11020
  %sizey30 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %55, i32 0, i32 13, !dbg !11021
  store i16 %53, i16* %sizey30, align 2, !dbg !11022
  br label %if.end31, !dbg !11019

if.end31:                                         ; preds = %if.then27, %if.end22
  %56 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11023
  %edge32 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %56, i32 0, i32 9, !dbg !11025
  %57 = load i32, i32* %edge32, align 8, !dbg !11025
  %cmp33 = icmp eq i32 %57, 1, !dbg !11026
  br i1 %cmp33, label %if.then38, label %lor.lhs.false, !dbg !11027

lor.lhs.false:                                    ; preds = %if.end31
  %58 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11028
  %edge35 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %58, i32 0, i32 9, !dbg !11029
  %59 = load i32, i32* %edge35, align 8, !dbg !11029
  %cmp36 = icmp eq i32 %59, 0, !dbg !11030
  br i1 %cmp36, label %if.then38, label %if.else, !dbg !11031

if.then38:                                        ; preds = %lor.lhs.false, %if.end31
  %60 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11032
  %ar39 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %60, i32 0, i32 1, !dbg !11034
  %61 = load %struct.ARegion*, %struct.ARegion** %ar39, align 8, !dbg !11034
  %sizex40 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %61, i32 0, i32 12, !dbg !11035
  %62 = load i16, i16* %sizex40, align 8, !dbg !11035
  %conv41 = sext i16 %62 to i32, !dbg !11032
  %63 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11036
  %origval = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %63, i32 0, i32 5, !dbg !11037
  store i32 %conv41, i32* %origval, align 8, !dbg !11038
  br label %if.end46, !dbg !11039

if.else:                                          ; preds = %lor.lhs.false
  %64 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11040
  %ar42 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %64, i32 0, i32 1, !dbg !11042
  %65 = load %struct.ARegion*, %struct.ARegion** %ar42, align 8, !dbg !11042
  %sizey43 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %65, i32 0, i32 13, !dbg !11043
  %66 = load i16, i16* %sizey43, align 2, !dbg !11043
  %conv44 = sext i16 %66 to i32, !dbg !11040
  %67 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11044
  %origval45 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %67, i32 0, i32 5, !dbg !11045
  store i32 %conv44, i32* %origval45, align 8, !dbg !11046
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then38
  %68 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11047
  %ar47 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %68, i32 0, i32 1, !dbg !11049
  %69 = load %struct.ARegion*, %struct.ARegion** %ar47, align 8, !dbg !11049
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %69, i32 0, i32 8, !dbg !11050
  %70 = load i16, i16* %regiontype, align 2, !dbg !11050
  %conv48 = sext i16 %70 to i32, !dbg !11047
  %cmp49 = icmp eq i32 %conv48, 1, !dbg !11051
  br i1 %cmp49, label %if.then51, label %if.else53, !dbg !11052

if.then51:                                        ; preds = %if.end46
  %call52 = call i32 @ED_area_headersize(), !dbg !11053
  store i32 %call52, i32* %maxsize, align 4, !dbg !11054
  br label %if.end54, !dbg !11055

if.else53:                                        ; preds = %if.end46
  store i32 1000, i32* %maxsize, align 4, !dbg !11056
  br label %if.end54

if.end54:                                         ; preds = %if.else53, %if.then51
  %71 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11057
  %maxsize55 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %71, i32 0, i32 8, !dbg !11057
  %72 = load i32, i32* %maxsize55, align 4, !dbg !11057
  %cmp56 = icmp slt i32 %72, 0, !dbg !11057
  br i1 %cmp56, label %if.then58, label %if.else60, !dbg !11060

if.then58:                                        ; preds = %if.end54
  %73 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11057
  %maxsize59 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %73, i32 0, i32 8, !dbg !11057
  store i32 0, i32* %maxsize59, align 4, !dbg !11057
  br label %if.end67, !dbg !11057

if.else60:                                        ; preds = %if.end54
  %74 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11061
  %maxsize61 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %74, i32 0, i32 8, !dbg !11061
  %75 = load i32, i32* %maxsize61, align 4, !dbg !11061
  %76 = load i32, i32* %maxsize, align 4, !dbg !11061
  %cmp62 = icmp sgt i32 %75, %76, !dbg !11061
  br i1 %cmp62, label %if.then64, label %if.end66, !dbg !11057

if.then64:                                        ; preds = %if.else60
  %77 = load i32, i32* %maxsize, align 4, !dbg !11061
  %78 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11061
  %maxsize65 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %78, i32 0, i32 8, !dbg !11061
  store i32 %77, i32* %maxsize65, align 4, !dbg !11061
  br label %if.end66, !dbg !11061

if.end66:                                         ; preds = %if.then64, %if.else60
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then58
  %79 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11063
  %80 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11064
  %call68 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %79, %struct.wmOperator* %80), !dbg !11065
  store i32 1, i32* %retval, align 4, !dbg !11066
  br label %return, !dbg !11066

if.end69:                                         ; preds = %if.end
  store i32 4, i32* %retval, align 4, !dbg !11067
  br label %return, !dbg !11067

return:                                           ; preds = %if.end69, %if.end67, %if.then
  %81 = load i32, i32* %retval, align 4, !dbg !11068
  ret i32 %81, !dbg !11068
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @region_scale_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !11069 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %rmd = alloca %struct.RegionMoveData*, align 8
  %delta = alloca i32, align 4
  %maxsize60 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11070, metadata !DIExpression()), !dbg !11071
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11072, metadata !DIExpression()), !dbg !11073
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !11074, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.declare(metadata %struct.RegionMoveData** %rmd, metadata !11076, metadata !DIExpression()), !dbg !11077
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11078
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !11079
  %1 = load i8*, i8** %customdata, align 8, !dbg !11079
  %2 = bitcast i8* %1 to %struct.RegionMoveData*, !dbg !11078
  store %struct.RegionMoveData* %2, %struct.RegionMoveData** %rmd, align 8, !dbg !11077
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !11080, metadata !DIExpression()), !dbg !11081
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !11082
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 2, !dbg !11083
  %4 = load i16, i16* %type, align 8, !dbg !11083
  %conv = sext i16 %4 to i32, !dbg !11082
  switch i32 %conv, label %sw.epilog [
    i32 4, label %sw.bb
    i32 1, label %sw.bb142
    i32 218, label %sw.bb201
  ], !dbg !11084

sw.bb:                                            ; preds = %entry
  %5 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11085
  %edge = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %5, i32 0, i32 9, !dbg !11088
  %6 = load i32, i32* %edge, align 8, !dbg !11088
  %cmp = icmp eq i32 %6, 1, !dbg !11089
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11090

lor.lhs.false:                                    ; preds = %sw.bb
  %7 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11091
  %edge2 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %7, i32 0, i32 9, !dbg !11092
  %8 = load i32, i32* %edge2, align 8, !dbg !11092
  %cmp3 = icmp eq i32 %8, 0, !dbg !11093
  br i1 %cmp3, label %if.then, label %if.else59, !dbg !11094

if.then:                                          ; preds = %lor.lhs.false, %sw.bb
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !11095
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 4, !dbg !11097
  %10 = load i32, i32* %x, align 4, !dbg !11097
  %11 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11098
  %origx = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %11, i32 0, i32 6, !dbg !11099
  %12 = load i32, i32* %origx, align 4, !dbg !11099
  %sub = sub nsw i32 %10, %12, !dbg !11100
  store i32 %sub, i32* %delta, align 4, !dbg !11101
  %13 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11102
  %edge5 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %13, i32 0, i32 9, !dbg !11104
  %14 = load i32, i32* %edge5, align 8, !dbg !11104
  %cmp6 = icmp eq i32 %14, 1, !dbg !11105
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !11106

if.then8:                                         ; preds = %if.then
  %15 = load i32, i32* %delta, align 4, !dbg !11107
  %sub9 = sub nsw i32 0, %15, !dbg !11108
  store i32 %sub9, i32* %delta, align 4, !dbg !11109
  br label %if.end, !dbg !11110

if.end:                                           ; preds = %if.then8, %if.then
  %16 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11111
  %17 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !11111
  %conv10 = sitofp i32 %17 to float, !dbg !11111
  %mul = fmul float %16, %conv10, !dbg !11111
  %div = fdiv float %mul, 7.200000e+01, !dbg !11111
  %18 = load i32, i32* %delta, align 4, !dbg !11112
  %conv11 = sitofp i32 %18 to float, !dbg !11112
  %div12 = fdiv float %conv11, %div, !dbg !11112
  %conv13 = fptosi float %div12 to i32, !dbg !11112
  store i32 %conv13, i32* %delta, align 4, !dbg !11112
  %19 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11113
  %origval = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %19, i32 0, i32 5, !dbg !11114
  %20 = load i32, i32* %origval, align 8, !dbg !11114
  %21 = load i32, i32* %delta, align 4, !dbg !11115
  %add = add nsw i32 %20, %21, !dbg !11116
  %conv14 = trunc i32 %add to i16, !dbg !11113
  %22 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11117
  %ar = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %22, i32 0, i32 1, !dbg !11118
  %23 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11118
  %sizex = getelementptr inbounds %struct.ARegion, %struct.ARegion* %23, i32 0, i32 12, !dbg !11119
  store i16 %conv14, i16* %sizex, align 8, !dbg !11120
  %24 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11121
  %ar15 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %24, i32 0, i32 1, !dbg !11121
  %25 = load %struct.ARegion*, %struct.ARegion** %ar15, align 8, !dbg !11121
  %sizex16 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %25, i32 0, i32 12, !dbg !11121
  %26 = load i16, i16* %sizex16, align 8, !dbg !11121
  %conv17 = sext i16 %26 to i32, !dbg !11121
  %cmp18 = icmp slt i32 %conv17, 0, !dbg !11121
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !11124

if.then20:                                        ; preds = %if.end
  %27 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11121
  %ar21 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %27, i32 0, i32 1, !dbg !11121
  %28 = load %struct.ARegion*, %struct.ARegion** %ar21, align 8, !dbg !11121
  %sizex22 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %28, i32 0, i32 12, !dbg !11121
  store i16 0, i16* %sizex22, align 8, !dbg !11121
  br label %if.end34, !dbg !11121

if.else:                                          ; preds = %if.end
  %29 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11125
  %ar23 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %29, i32 0, i32 1, !dbg !11125
  %30 = load %struct.ARegion*, %struct.ARegion** %ar23, align 8, !dbg !11125
  %sizex24 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %30, i32 0, i32 12, !dbg !11125
  %31 = load i16, i16* %sizex24, align 8, !dbg !11125
  %conv25 = sext i16 %31 to i32, !dbg !11125
  %32 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11125
  %maxsize = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %32, i32 0, i32 8, !dbg !11125
  %33 = load i32, i32* %maxsize, align 4, !dbg !11125
  %cmp26 = icmp sgt i32 %conv25, %33, !dbg !11125
  br i1 %cmp26, label %if.then28, label %if.end33, !dbg !11121

if.then28:                                        ; preds = %if.else
  %34 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11125
  %maxsize29 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %34, i32 0, i32 8, !dbg !11125
  %35 = load i32, i32* %maxsize29, align 4, !dbg !11125
  %conv30 = trunc i32 %35 to i16, !dbg !11125
  %36 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11125
  %ar31 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %36, i32 0, i32 1, !dbg !11125
  %37 = load %struct.ARegion*, %struct.ARegion** %ar31, align 8, !dbg !11125
  %sizex32 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %37, i32 0, i32 12, !dbg !11125
  store i16 %conv30, i16* %sizex32, align 8, !dbg !11125
  br label %if.end33, !dbg !11125

if.end33:                                         ; preds = %if.then28, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then20
  %38 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11127
  %ar35 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %38, i32 0, i32 1, !dbg !11129
  %39 = load %struct.ARegion*, %struct.ARegion** %ar35, align 8, !dbg !11129
  %sizex36 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %39, i32 0, i32 12, !dbg !11130
  %40 = load i16, i16* %sizex36, align 8, !dbg !11130
  %conv37 = sext i16 %40 to i32, !dbg !11127
  %41 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11131
  %conv38 = sext i16 %41 to i32, !dbg !11131
  %cmp39 = icmp slt i32 %conv37, %conv38, !dbg !11132
  br i1 %cmp39, label %if.then41, label %if.else50, !dbg !11133

if.then41:                                        ; preds = %if.end34
  %42 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11134
  %origval42 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %42, i32 0, i32 5, !dbg !11136
  %43 = load i32, i32* %origval42, align 8, !dbg !11136
  %conv43 = trunc i32 %43 to i16, !dbg !11134
  %44 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11137
  %ar44 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %44, i32 0, i32 1, !dbg !11138
  %45 = load %struct.ARegion*, %struct.ARegion** %ar44, align 8, !dbg !11138
  %sizex45 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %45, i32 0, i32 12, !dbg !11139
  store i16 %conv43, i16* %sizex45, align 8, !dbg !11140
  %46 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11141
  %ar46 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %46, i32 0, i32 1, !dbg !11143
  %47 = load %struct.ARegion*, %struct.ARegion** %ar46, align 8, !dbg !11143
  %flag = getelementptr inbounds %struct.ARegion, %struct.ARegion* %47, i32 0, i32 10, !dbg !11144
  %48 = load i16, i16* %flag, align 2, !dbg !11144
  %conv47 = sext i16 %48 to i32, !dbg !11141
  %and = and i32 %conv47, 1, !dbg !11145
  %tobool = icmp ne i32 %and, 0, !dbg !11145
  br i1 %tobool, label %if.end49, label %if.then48, !dbg !11146

if.then48:                                        ; preds = %if.then41
  %49 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11147
  %50 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11148
  call void @region_scale_toggle_hidden(%struct.bContext* %49, %struct.RegionMoveData* %50), !dbg !11149
  br label %if.end49, !dbg !11149

if.end49:                                         ; preds = %if.then48, %if.then41
  br label %if.end58, !dbg !11150

if.else50:                                        ; preds = %if.end34
  %51 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11151
  %ar51 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %51, i32 0, i32 1, !dbg !11153
  %52 = load %struct.ARegion*, %struct.ARegion** %ar51, align 8, !dbg !11153
  %flag52 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %52, i32 0, i32 10, !dbg !11154
  %53 = load i16, i16* %flag52, align 2, !dbg !11154
  %conv53 = sext i16 %53 to i32, !dbg !11151
  %and54 = and i32 %conv53, 1, !dbg !11155
  %tobool55 = icmp ne i32 %and54, 0, !dbg !11155
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !11156

if.then56:                                        ; preds = %if.else50
  %54 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11157
  %55 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11158
  call void @region_scale_toggle_hidden(%struct.bContext* %54, %struct.RegionMoveData* %55), !dbg !11159
  br label %if.end57, !dbg !11159

if.end57:                                         ; preds = %if.then56, %if.else50
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end49
  br label %if.end141, !dbg !11160

if.else59:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %maxsize60, metadata !11161, metadata !DIExpression()), !dbg !11163
  %56 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11164
  %call = call i32 @region_scale_get_maxsize(%struct.RegionMoveData* %56), !dbg !11165
  store i32 %call, i32* %maxsize60, align 4, !dbg !11163
  %57 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !11166
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %57, i32 0, i32 5, !dbg !11167
  %58 = load i32, i32* %y, align 8, !dbg !11167
  %59 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11168
  %origy = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %59, i32 0, i32 7, !dbg !11169
  %60 = load i32, i32* %origy, align 8, !dbg !11169
  %sub61 = sub nsw i32 %58, %60, !dbg !11170
  store i32 %sub61, i32* %delta, align 4, !dbg !11171
  %61 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11172
  %edge62 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %61, i32 0, i32 9, !dbg !11174
  %62 = load i32, i32* %edge62, align 8, !dbg !11174
  %cmp63 = icmp eq i32 %62, 3, !dbg !11175
  br i1 %cmp63, label %if.then65, label %if.end67, !dbg !11176

if.then65:                                        ; preds = %if.else59
  %63 = load i32, i32* %delta, align 4, !dbg !11177
  %sub66 = sub nsw i32 0, %63, !dbg !11178
  store i32 %sub66, i32* %delta, align 4, !dbg !11179
  br label %if.end67, !dbg !11180

if.end67:                                         ; preds = %if.then65, %if.else59
  %64 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11181
  %65 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !11181
  %conv68 = sitofp i32 %65 to float, !dbg !11181
  %mul69 = fmul float %64, %conv68, !dbg !11181
  %div70 = fdiv float %mul69, 7.200000e+01, !dbg !11181
  %66 = load i32, i32* %delta, align 4, !dbg !11182
  %conv71 = sitofp i32 %66 to float, !dbg !11182
  %div72 = fdiv float %conv71, %div70, !dbg !11182
  %conv73 = fptosi float %div72 to i32, !dbg !11182
  store i32 %conv73, i32* %delta, align 4, !dbg !11182
  %67 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11183
  %origval74 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %67, i32 0, i32 5, !dbg !11184
  %68 = load i32, i32* %origval74, align 8, !dbg !11184
  %69 = load i32, i32* %delta, align 4, !dbg !11185
  %add75 = add nsw i32 %68, %69, !dbg !11186
  %conv76 = trunc i32 %add75 to i16, !dbg !11183
  %70 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11187
  %ar77 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %70, i32 0, i32 1, !dbg !11188
  %71 = load %struct.ARegion*, %struct.ARegion** %ar77, align 8, !dbg !11188
  %sizey = getelementptr inbounds %struct.ARegion, %struct.ARegion* %71, i32 0, i32 13, !dbg !11189
  store i16 %conv76, i16* %sizey, align 2, !dbg !11190
  %72 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11191
  %ar78 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %72, i32 0, i32 1, !dbg !11191
  %73 = load %struct.ARegion*, %struct.ARegion** %ar78, align 8, !dbg !11191
  %sizey79 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %73, i32 0, i32 13, !dbg !11191
  %74 = load i16, i16* %sizey79, align 2, !dbg !11191
  %conv80 = sext i16 %74 to i32, !dbg !11191
  %cmp81 = icmp slt i32 %conv80, 0, !dbg !11191
  br i1 %cmp81, label %if.then83, label %if.else86, !dbg !11194

if.then83:                                        ; preds = %if.end67
  %75 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11191
  %ar84 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %75, i32 0, i32 1, !dbg !11191
  %76 = load %struct.ARegion*, %struct.ARegion** %ar84, align 8, !dbg !11191
  %sizey85 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %76, i32 0, i32 13, !dbg !11191
  store i16 0, i16* %sizey85, align 2, !dbg !11191
  br label %if.end99, !dbg !11191

if.else86:                                        ; preds = %if.end67
  %77 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11195
  %ar87 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %77, i32 0, i32 1, !dbg !11195
  %78 = load %struct.ARegion*, %struct.ARegion** %ar87, align 8, !dbg !11195
  %sizey88 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %78, i32 0, i32 13, !dbg !11195
  %79 = load i16, i16* %sizey88, align 2, !dbg !11195
  %conv89 = sext i16 %79 to i32, !dbg !11195
  %80 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11195
  %maxsize90 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %80, i32 0, i32 8, !dbg !11195
  %81 = load i32, i32* %maxsize90, align 4, !dbg !11195
  %cmp91 = icmp sgt i32 %conv89, %81, !dbg !11195
  br i1 %cmp91, label %if.then93, label %if.end98, !dbg !11191

if.then93:                                        ; preds = %if.else86
  %82 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11195
  %maxsize94 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %82, i32 0, i32 8, !dbg !11195
  %83 = load i32, i32* %maxsize94, align 4, !dbg !11195
  %conv95 = trunc i32 %83 to i16, !dbg !11195
  %84 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11195
  %ar96 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %84, i32 0, i32 1, !dbg !11195
  %85 = load %struct.ARegion*, %struct.ARegion** %ar96, align 8, !dbg !11195
  %sizey97 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %85, i32 0, i32 13, !dbg !11195
  store i16 %conv95, i16* %sizey97, align 2, !dbg !11195
  br label %if.end98, !dbg !11195

if.end98:                                         ; preds = %if.then93, %if.else86
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then83
  %86 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11197
  %ar100 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %86, i32 0, i32 1, !dbg !11199
  %87 = load %struct.ARegion*, %struct.ARegion** %ar100, align 8, !dbg !11199
  %sizey101 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %87, i32 0, i32 13, !dbg !11200
  %88 = load i16, i16* %sizey101, align 2, !dbg !11200
  %conv102 = sext i16 %88 to i32, !dbg !11197
  %89 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11201
  %conv103 = sext i16 %89 to i32, !dbg !11201
  %div104 = sdiv i32 %conv103, 4, !dbg !11202
  %cmp105 = icmp slt i32 %conv102, %div104, !dbg !11203
  br i1 %cmp105, label %if.then107, label %if.else119, !dbg !11204

if.then107:                                       ; preds = %if.end99
  %90 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11205
  %origval108 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %90, i32 0, i32 5, !dbg !11207
  %91 = load i32, i32* %origval108, align 8, !dbg !11207
  %conv109 = trunc i32 %91 to i16, !dbg !11205
  %92 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11208
  %ar110 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %92, i32 0, i32 1, !dbg !11209
  %93 = load %struct.ARegion*, %struct.ARegion** %ar110, align 8, !dbg !11209
  %sizey111 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %93, i32 0, i32 13, !dbg !11210
  store i16 %conv109, i16* %sizey111, align 2, !dbg !11211
  %94 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11212
  %ar112 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %94, i32 0, i32 1, !dbg !11214
  %95 = load %struct.ARegion*, %struct.ARegion** %ar112, align 8, !dbg !11214
  %flag113 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %95, i32 0, i32 10, !dbg !11215
  %96 = load i16, i16* %flag113, align 2, !dbg !11215
  %conv114 = sext i16 %96 to i32, !dbg !11212
  %and115 = and i32 %conv114, 1, !dbg !11216
  %tobool116 = icmp ne i32 %and115, 0, !dbg !11216
  br i1 %tobool116, label %if.end118, label %if.then117, !dbg !11217

if.then117:                                       ; preds = %if.then107
  %97 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11218
  %98 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11219
  call void @region_scale_toggle_hidden(%struct.bContext* %97, %struct.RegionMoveData* %98), !dbg !11220
  br label %if.end118, !dbg !11220

if.end118:                                        ; preds = %if.then117, %if.then107
  br label %if.end140, !dbg !11221

if.else119:                                       ; preds = %if.end99
  %99 = load i32, i32* %maxsize60, align 4, !dbg !11222
  %cmp120 = icmp sgt i32 %99, 0, !dbg !11224
  br i1 %cmp120, label %land.lhs.true, label %if.else131, !dbg !11225

land.lhs.true:                                    ; preds = %if.else119
  %100 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11226
  %ar122 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %100, i32 0, i32 1, !dbg !11227
  %101 = load %struct.ARegion*, %struct.ARegion** %ar122, align 8, !dbg !11227
  %sizey123 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %101, i32 0, i32 13, !dbg !11228
  %102 = load i16, i16* %sizey123, align 2, !dbg !11228
  %conv124 = sext i16 %102 to i32, !dbg !11226
  %103 = load i32, i32* %maxsize60, align 4, !dbg !11229
  %cmp125 = icmp sgt i32 %conv124, %103, !dbg !11230
  br i1 %cmp125, label %if.then127, label %if.else131, !dbg !11231

if.then127:                                       ; preds = %land.lhs.true
  %104 = load i32, i32* %maxsize60, align 4, !dbg !11232
  %conv128 = trunc i32 %104 to i16, !dbg !11232
  %105 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11233
  %ar129 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %105, i32 0, i32 1, !dbg !11234
  %106 = load %struct.ARegion*, %struct.ARegion** %ar129, align 8, !dbg !11234
  %sizey130 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %106, i32 0, i32 13, !dbg !11235
  store i16 %conv128, i16* %sizey130, align 2, !dbg !11236
  br label %if.end139, !dbg !11233

if.else131:                                       ; preds = %land.lhs.true, %if.else119
  %107 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11237
  %ar132 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %107, i32 0, i32 1, !dbg !11239
  %108 = load %struct.ARegion*, %struct.ARegion** %ar132, align 8, !dbg !11239
  %flag133 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %108, i32 0, i32 10, !dbg !11240
  %109 = load i16, i16* %flag133, align 2, !dbg !11240
  %conv134 = sext i16 %109 to i32, !dbg !11237
  %and135 = and i32 %conv134, 1, !dbg !11241
  %tobool136 = icmp ne i32 %and135, 0, !dbg !11241
  br i1 %tobool136, label %if.then137, label %if.end138, !dbg !11242

if.then137:                                       ; preds = %if.else131
  %110 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11243
  %111 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11244
  call void @region_scale_toggle_hidden(%struct.bContext* %110, %struct.RegionMoveData* %111), !dbg !11245
  br label %if.end138, !dbg !11245

if.end138:                                        ; preds = %if.then137, %if.else131
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.then127
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.end118
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.end58
  %112 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11246
  %sa = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %112, i32 0, i32 2, !dbg !11247
  %113 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11247
  call void @ED_area_tag_redraw(%struct.ScrArea* %113), !dbg !11248
  %114 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11249
  call void @WM_event_add_notifier(%struct.bContext* %114, i32 50331649, i8* null), !dbg !11250
  br label %sw.epilog, !dbg !11251

sw.bb142:                                         ; preds = %entry
  %115 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !11252
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %115, i32 0, i32 3, !dbg !11254
  %116 = load i16, i16* %val, align 2, !dbg !11254
  %conv143 = sext i16 %116 to i32, !dbg !11252
  %cmp144 = icmp eq i32 %conv143, 2, !dbg !11255
  br i1 %cmp144, label %if.then146, label %if.end200, !dbg !11256

if.then146:                                       ; preds = %sw.bb142
  %117 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !11257
  %x147 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %117, i32 0, i32 4, !dbg !11257
  %118 = load i32, i32* %x147, align 4, !dbg !11257
  %119 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11257
  %origx148 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %119, i32 0, i32 6, !dbg !11257
  %120 = load i32, i32* %origx148, align 4, !dbg !11257
  %sub149 = sub nsw i32 %118, %120, !dbg !11257
  %cmp150 = icmp slt i32 %sub149, 0, !dbg !11257
  br i1 %cmp150, label %cond.true, label %cond.false, !dbg !11257

cond.true:                                        ; preds = %if.then146
  %121 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !11257
  %x152 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %121, i32 0, i32 4, !dbg !11257
  %122 = load i32, i32* %x152, align 4, !dbg !11257
  %123 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11257
  %origx153 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %123, i32 0, i32 6, !dbg !11257
  %124 = load i32, i32* %origx153, align 4, !dbg !11257
  %sub154 = sub nsw i32 %122, %124, !dbg !11257
  %sub155 = sub nsw i32 0, %sub154, !dbg !11257
  br label %cond.end, !dbg !11257

cond.false:                                       ; preds = %if.then146
  %125 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !11257
  %x156 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %125, i32 0, i32 4, !dbg !11257
  %126 = load i32, i32* %x156, align 4, !dbg !11257
  %127 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11257
  %origx157 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %127, i32 0, i32 6, !dbg !11257
  %128 = load i32, i32* %origx157, align 4, !dbg !11257
  %sub158 = sub nsw i32 %126, %128, !dbg !11257
  br label %cond.end, !dbg !11257

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub155, %cond.true ], [ %sub158, %cond.false ], !dbg !11257
  %cmp159 = icmp slt i32 %cond, 2, !dbg !11260
  br i1 %cmp159, label %land.lhs.true161, label %if.end197, !dbg !11261

land.lhs.true161:                                 ; preds = %cond.end
  %129 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !11262
  %y162 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %129, i32 0, i32 5, !dbg !11262
  %130 = load i32, i32* %y162, align 8, !dbg !11262
  %131 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11262
  %origy163 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %131, i32 0, i32 7, !dbg !11262
  %132 = load i32, i32* %origy163, align 8, !dbg !11262
  %sub164 = sub nsw i32 %130, %132, !dbg !11262
  %cmp165 = icmp slt i32 %sub164, 0, !dbg !11262
  br i1 %cmp165, label %cond.true167, label %cond.false172, !dbg !11262

cond.true167:                                     ; preds = %land.lhs.true161
  %133 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !11262
  %y168 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %133, i32 0, i32 5, !dbg !11262
  %134 = load i32, i32* %y168, align 8, !dbg !11262
  %135 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11262
  %origy169 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %135, i32 0, i32 7, !dbg !11262
  %136 = load i32, i32* %origy169, align 8, !dbg !11262
  %sub170 = sub nsw i32 %134, %136, !dbg !11262
  %sub171 = sub nsw i32 0, %sub170, !dbg !11262
  br label %cond.end176, !dbg !11262

cond.false172:                                    ; preds = %land.lhs.true161
  %137 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !11262
  %y173 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %137, i32 0, i32 5, !dbg !11262
  %138 = load i32, i32* %y173, align 8, !dbg !11262
  %139 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11262
  %origy174 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %139, i32 0, i32 7, !dbg !11262
  %140 = load i32, i32* %origy174, align 8, !dbg !11262
  %sub175 = sub nsw i32 %138, %140, !dbg !11262
  br label %cond.end176, !dbg !11262

cond.end176:                                      ; preds = %cond.false172, %cond.true167
  %cond177 = phi i32 [ %sub171, %cond.true167 ], [ %sub175, %cond.false172 ], !dbg !11262
  %cmp178 = icmp slt i32 %cond177, 2, !dbg !11263
  br i1 %cmp178, label %if.then180, label %if.end197, !dbg !11264

if.then180:                                       ; preds = %cond.end176
  %141 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11265
  %ar181 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %141, i32 0, i32 1, !dbg !11268
  %142 = load %struct.ARegion*, %struct.ARegion** %ar181, align 8, !dbg !11268
  %flag182 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %142, i32 0, i32 10, !dbg !11269
  %143 = load i16, i16* %flag182, align 2, !dbg !11269
  %conv183 = sext i16 %143 to i32, !dbg !11265
  %and184 = and i32 %conv183, 1, !dbg !11270
  %tobool185 = icmp ne i32 %and184, 0, !dbg !11270
  br i1 %tobool185, label %if.then186, label %if.else187, !dbg !11271

if.then186:                                       ; preds = %if.then180
  %144 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11272
  %145 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11274
  call void @region_scale_toggle_hidden(%struct.bContext* %144, %struct.RegionMoveData* %145), !dbg !11275
  br label %if.end195, !dbg !11276

if.else187:                                       ; preds = %if.then180
  %146 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11277
  %ar188 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %146, i32 0, i32 1, !dbg !11279
  %147 = load %struct.ARegion*, %struct.ARegion** %ar188, align 8, !dbg !11279
  %flag189 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %147, i32 0, i32 10, !dbg !11280
  %148 = load i16, i16* %flag189, align 2, !dbg !11280
  %conv190 = sext i16 %148 to i32, !dbg !11277
  %and191 = and i32 %conv190, 2, !dbg !11281
  %tobool192 = icmp ne i32 %and191, 0, !dbg !11281
  br i1 %tobool192, label %if.then193, label %if.end194, !dbg !11282

if.then193:                                       ; preds = %if.else187
  %149 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11283
  call void @region_scale_validate_size(%struct.RegionMoveData* %149), !dbg !11285
  br label %if.end194, !dbg !11286

if.end194:                                        ; preds = %if.then193, %if.else187
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %if.then186
  %150 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd, align 8, !dbg !11287
  %sa196 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %150, i32 0, i32 2, !dbg !11288
  %151 = load %struct.ScrArea*, %struct.ScrArea** %sa196, align 8, !dbg !11288
  call void @ED_area_tag_redraw(%struct.ScrArea* %151), !dbg !11289
  %152 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11290
  call void @WM_event_add_notifier(%struct.bContext* %152, i32 50331649, i8* null), !dbg !11291
  br label %if.end197, !dbg !11292

if.end197:                                        ; preds = %if.end195, %cond.end176, %cond.end
  %153 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11293
  %154 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11294
  %customdata198 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %154, i32 0, i32 5, !dbg !11295
  %155 = load i8*, i8** %customdata198, align 8, !dbg !11295
  call void %153(i8* %155), !dbg !11293
  %156 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11296
  %customdata199 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %156, i32 0, i32 5, !dbg !11297
  store i8* null, i8** %customdata199, align 8, !dbg !11298
  store i32 4, i32* %retval, align 4, !dbg !11299
  br label %return, !dbg !11299

if.end200:                                        ; preds = %sw.bb142
  br label %sw.epilog, !dbg !11300

sw.bb201:                                         ; preds = %entry
  br label %sw.epilog, !dbg !11301

sw.epilog:                                        ; preds = %entry, %sw.bb201, %if.end200, %if.end141
  store i32 1, i32* %retval, align 4, !dbg !11302
  br label %return, !dbg !11302

return:                                           ; preds = %sw.epilog, %if.end197
  %157 = load i32, i32* %retval, align 4, !dbg !11303
  ret i32 %157, !dbg !11303
}

; Function Attrs: noinline nounwind uwtable
define internal void @region_scale_cancel(%struct.bContext* %UNUSED_C, %struct.wmOperator* %op) #0 !dbg !11304 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !11305, metadata !DIExpression()), !dbg !11306
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11307, metadata !DIExpression()), !dbg !11308
  %0 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11309
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11310
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 5, !dbg !11311
  %2 = load i8*, i8** %customdata, align 8, !dbg !11311
  call void %0(i8* %2), !dbg !11309
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11312
  %customdata1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !11313
  store i8* null, i8** %customdata1, align 8, !dbg !11314
  ret void, !dbg !11315
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @area_max_regionsize(%struct.ScrArea* %sa, %struct.ARegion* %scalear, i32 %edge) #0 !dbg !11316 {
entry:
  %sa.addr = alloca %struct.ScrArea*, align 8
  %scalear.addr = alloca %struct.ARegion*, align 8
  %edge.addr = alloca i32, align 4
  %ar = alloca %struct.ARegion*, align 8
  %dist = alloca i32, align 4
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !11319, metadata !DIExpression()), !dbg !11320
  store %struct.ARegion* %scalear, %struct.ARegion** %scalear.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %scalear.addr, metadata !11321, metadata !DIExpression()), !dbg !11322
  store i32 %edge, i32* %edge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edge.addr, metadata !11323, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !11325, metadata !DIExpression()), !dbg !11326
  call void @llvm.dbg.declare(metadata i32* %dist, metadata !11327, metadata !DIExpression()), !dbg !11328
  %0 = load i32, i32* %edge.addr, align 4, !dbg !11329
  %cmp = icmp eq i32 %0, 0, !dbg !11331
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11332

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %edge.addr, align 4, !dbg !11333
  %cmp1 = icmp eq i32 %1, 1, !dbg !11334
  br i1 %cmp1, label %if.then, label %if.else, !dbg !11335

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !11336
  %totrct = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %2, i32 0, i32 7, !dbg !11338
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %totrct), !dbg !11339
  store i32 %call, i32* %dist, align 4, !dbg !11340
  br label %if.end, !dbg !11341

if.else:                                          ; preds = %lor.lhs.false
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !11342
  %totrct2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 7, !dbg !11344
  %call3 = call i32 @BLI_rcti_size_y(%struct.rcti* %totrct2), !dbg !11345
  store i32 %call3, i32* %dist, align 4, !dbg !11346
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !11347
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 20, !dbg !11349
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !11350
  %5 = load i8*, i8** %first, align 8, !dbg !11350
  %6 = bitcast i8* %5 to %struct.ARegion*, !dbg !11347
  store %struct.ARegion* %6, %struct.ARegion** %ar, align 8, !dbg !11351
  br label %for.cond, !dbg !11352

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11353
  %tobool = icmp ne %struct.ARegion* %7, null, !dbg !11355
  br i1 %tobool, label %for.body, label %for.end, !dbg !11355

for.body:                                         ; preds = %for.cond
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11356
  %9 = load %struct.ARegion*, %struct.ARegion** %scalear.addr, align 8, !dbg !11359
  %cmp4 = icmp eq %struct.ARegion* %8, %9, !dbg !11360
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11361

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !11362

if.end6:                                          ; preds = %for.body
  %10 = load %struct.ARegion*, %struct.ARegion** %scalear.addr, align 8, !dbg !11363
  %alignment = getelementptr inbounds %struct.ARegion, %struct.ARegion* %10, i32 0, i32 9, !dbg !11365
  %11 = load i16, i16* %alignment, align 8, !dbg !11365
  %conv = sext i16 %11 to i32, !dbg !11363
  %cmp7 = icmp eq i32 %conv, 1, !dbg !11366
  br i1 %cmp7, label %land.lhs.true, label %if.else15, !dbg !11367

land.lhs.true:                                    ; preds = %if.end6
  %12 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11368
  %alignment9 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %12, i32 0, i32 9, !dbg !11369
  %13 = load i16, i16* %alignment9, align 8, !dbg !11369
  %conv10 = sext i16 %13 to i32, !dbg !11368
  %cmp11 = icmp eq i32 %conv10, 2, !dbg !11370
  br i1 %cmp11, label %if.then13, label %if.else15, !dbg !11371

if.then13:                                        ; preds = %land.lhs.true
  %14 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11372
  %winy = getelementptr inbounds %struct.ARegion, %struct.ARegion* %14, i32 0, i32 6, !dbg !11373
  %15 = load i16, i16* %winy, align 2, !dbg !11373
  %conv14 = sext i16 %15 to i32, !dbg !11372
  %16 = load i32, i32* %dist, align 4, !dbg !11374
  %sub = sub nsw i32 %16, %conv14, !dbg !11374
  store i32 %sub, i32* %dist, align 4, !dbg !11374
  br label %if.end103, !dbg !11375

if.else15:                                        ; preds = %land.lhs.true, %if.end6
  %17 = load %struct.ARegion*, %struct.ARegion** %scalear.addr, align 8, !dbg !11376
  %alignment16 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %17, i32 0, i32 9, !dbg !11378
  %18 = load i16, i16* %alignment16, align 8, !dbg !11378
  %conv17 = sext i16 %18 to i32, !dbg !11376
  %cmp18 = icmp eq i32 %conv17, 2, !dbg !11379
  br i1 %cmp18, label %land.lhs.true20, label %if.else29, !dbg !11380

land.lhs.true20:                                  ; preds = %if.else15
  %19 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11381
  %alignment21 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %19, i32 0, i32 9, !dbg !11382
  %20 = load i16, i16* %alignment21, align 8, !dbg !11382
  %conv22 = sext i16 %20 to i32, !dbg !11381
  %cmp23 = icmp eq i32 %conv22, 1, !dbg !11383
  br i1 %cmp23, label %if.then25, label %if.else29, !dbg !11384

if.then25:                                        ; preds = %land.lhs.true20
  %21 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11385
  %winy26 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %21, i32 0, i32 6, !dbg !11386
  %22 = load i16, i16* %winy26, align 2, !dbg !11386
  %conv27 = sext i16 %22 to i32, !dbg !11385
  %23 = load i32, i32* %dist, align 4, !dbg !11387
  %sub28 = sub nsw i32 %23, %conv27, !dbg !11387
  store i32 %sub28, i32* %dist, align 4, !dbg !11387
  br label %if.end102, !dbg !11388

if.else29:                                        ; preds = %land.lhs.true20, %if.else15
  %24 = load %struct.ARegion*, %struct.ARegion** %scalear.addr, align 8, !dbg !11389
  %alignment30 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %24, i32 0, i32 9, !dbg !11391
  %25 = load i16, i16* %alignment30, align 8, !dbg !11391
  %conv31 = sext i16 %25 to i32, !dbg !11389
  %cmp32 = icmp eq i32 %conv31, 3, !dbg !11392
  br i1 %cmp32, label %land.lhs.true34, label %if.else42, !dbg !11393

land.lhs.true34:                                  ; preds = %if.else29
  %26 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11394
  %alignment35 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %26, i32 0, i32 9, !dbg !11395
  %27 = load i16, i16* %alignment35, align 8, !dbg !11395
  %conv36 = sext i16 %27 to i32, !dbg !11394
  %cmp37 = icmp eq i32 %conv36, 4, !dbg !11396
  br i1 %cmp37, label %if.then39, label %if.else42, !dbg !11397

if.then39:                                        ; preds = %land.lhs.true34
  %28 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11398
  %winx = getelementptr inbounds %struct.ARegion, %struct.ARegion* %28, i32 0, i32 5, !dbg !11399
  %29 = load i16, i16* %winx, align 8, !dbg !11399
  %conv40 = sext i16 %29 to i32, !dbg !11398
  %30 = load i32, i32* %dist, align 4, !dbg !11400
  %sub41 = sub nsw i32 %30, %conv40, !dbg !11400
  store i32 %sub41, i32* %dist, align 4, !dbg !11400
  br label %if.end101, !dbg !11401

if.else42:                                        ; preds = %land.lhs.true34, %if.else29
  %31 = load %struct.ARegion*, %struct.ARegion** %scalear.addr, align 8, !dbg !11402
  %alignment43 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %31, i32 0, i32 9, !dbg !11404
  %32 = load i16, i16* %alignment43, align 8, !dbg !11404
  %conv44 = sext i16 %32 to i32, !dbg !11402
  %cmp45 = icmp eq i32 %conv44, 4, !dbg !11405
  br i1 %cmp45, label %land.lhs.true47, label %if.else56, !dbg !11406

land.lhs.true47:                                  ; preds = %if.else42
  %33 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11407
  %alignment48 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %33, i32 0, i32 9, !dbg !11408
  %34 = load i16, i16* %alignment48, align 8, !dbg !11408
  %conv49 = sext i16 %34 to i32, !dbg !11407
  %cmp50 = icmp eq i32 %conv49, 3, !dbg !11409
  br i1 %cmp50, label %if.then52, label %if.else56, !dbg !11410

if.then52:                                        ; preds = %land.lhs.true47
  %35 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11411
  %winx53 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %35, i32 0, i32 5, !dbg !11412
  %36 = load i16, i16* %winx53, align 8, !dbg !11412
  %conv54 = sext i16 %36 to i32, !dbg !11411
  %37 = load i32, i32* %dist, align 4, !dbg !11413
  %sub55 = sub nsw i32 %37, %conv54, !dbg !11413
  store i32 %sub55, i32* %dist, align 4, !dbg !11413
  br label %if.end100, !dbg !11414

if.else56:                                        ; preds = %land.lhs.true47, %if.else42
  %38 = load i32, i32* %edge.addr, align 4, !dbg !11415
  %cmp57 = icmp eq i32 %38, 3, !dbg !11417
  br i1 %cmp57, label %land.lhs.true59, label %if.else76, !dbg !11418

land.lhs.true59:                                  ; preds = %if.else56
  %39 = load %struct.ARegion*, %struct.ARegion** %scalear.addr, align 8, !dbg !11419
  %alignment60 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %39, i32 0, i32 9, !dbg !11420
  %40 = load i16, i16* %alignment60, align 8, !dbg !11420
  %conv61 = sext i16 %40 to i32, !dbg !11419
  %and = and i32 %conv61, 1, !dbg !11421
  %tobool62 = icmp ne i32 %and, 0, !dbg !11421
  br i1 %tobool62, label %land.lhs.true63, label %if.else76, !dbg !11422

land.lhs.true63:                                  ; preds = %land.lhs.true59
  %41 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11423
  %alignment64 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %41, i32 0, i32 9, !dbg !11424
  %42 = load i16, i16* %alignment64, align 8, !dbg !11424
  %conv65 = sext i16 %42 to i32, !dbg !11423
  %cmp66 = icmp eq i32 %conv65, 1, !dbg !11425
  br i1 %cmp66, label %land.lhs.true68, label %if.else76, !dbg !11426

land.lhs.true68:                                  ; preds = %land.lhs.true63
  %43 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11427
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %43, i32 0, i32 8, !dbg !11428
  %44 = load i16, i16* %regiontype, align 2, !dbg !11428
  %conv69 = sext i16 %44 to i32, !dbg !11427
  %cmp70 = icmp eq i32 %conv69, 1, !dbg !11429
  br i1 %cmp70, label %if.then72, label %if.else76, !dbg !11430

if.then72:                                        ; preds = %land.lhs.true68
  %45 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11431
  %winy73 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %45, i32 0, i32 6, !dbg !11433
  %46 = load i16, i16* %winy73, align 2, !dbg !11433
  %conv74 = sext i16 %46 to i32, !dbg !11431
  %47 = load i32, i32* %dist, align 4, !dbg !11434
  %sub75 = sub nsw i32 %47, %conv74, !dbg !11434
  store i32 %sub75, i32* %dist, align 4, !dbg !11434
  br label %if.end99, !dbg !11435

if.else76:                                        ; preds = %land.lhs.true68, %land.lhs.true63, %land.lhs.true59, %if.else56
  %48 = load i32, i32* %edge.addr, align 4, !dbg !11436
  %cmp77 = icmp eq i32 %48, 2, !dbg !11438
  br i1 %cmp77, label %land.lhs.true79, label %if.end98, !dbg !11439

land.lhs.true79:                                  ; preds = %if.else76
  %49 = load %struct.ARegion*, %struct.ARegion** %scalear.addr, align 8, !dbg !11440
  %alignment80 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %49, i32 0, i32 9, !dbg !11441
  %50 = load i16, i16* %alignment80, align 8, !dbg !11441
  %conv81 = sext i16 %50 to i32, !dbg !11440
  %and82 = and i32 %conv81, 2, !dbg !11442
  %tobool83 = icmp ne i32 %and82, 0, !dbg !11442
  br i1 %tobool83, label %land.lhs.true84, label %if.end98, !dbg !11443

land.lhs.true84:                                  ; preds = %land.lhs.true79
  %51 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11444
  %alignment85 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %51, i32 0, i32 9, !dbg !11445
  %52 = load i16, i16* %alignment85, align 8, !dbg !11445
  %conv86 = sext i16 %52 to i32, !dbg !11444
  %cmp87 = icmp eq i32 %conv86, 2, !dbg !11446
  br i1 %cmp87, label %land.lhs.true89, label %if.end98, !dbg !11447

land.lhs.true89:                                  ; preds = %land.lhs.true84
  %53 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11448
  %regiontype90 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %53, i32 0, i32 8, !dbg !11449
  %54 = load i16, i16* %regiontype90, align 2, !dbg !11449
  %conv91 = sext i16 %54 to i32, !dbg !11448
  %cmp92 = icmp eq i32 %conv91, 1, !dbg !11450
  br i1 %cmp92, label %if.then94, label %if.end98, !dbg !11451

if.then94:                                        ; preds = %land.lhs.true89
  %55 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11452
  %winy95 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %55, i32 0, i32 6, !dbg !11454
  %56 = load i16, i16* %winy95, align 2, !dbg !11454
  %conv96 = sext i16 %56 to i32, !dbg !11452
  %57 = load i32, i32* %dist, align 4, !dbg !11455
  %sub97 = sub nsw i32 %57, %conv96, !dbg !11455
  store i32 %sub97, i32* %dist, align 4, !dbg !11455
  br label %if.end98, !dbg !11456

if.end98:                                         ; preds = %if.then94, %land.lhs.true89, %land.lhs.true84, %land.lhs.true79, %if.else76
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then72
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then52
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then39
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then25
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then13
  br label %for.inc, !dbg !11457

for.inc:                                          ; preds = %if.end103, %if.then5
  %58 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11458
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %58, i32 0, i32 0, !dbg !11459
  %59 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !11459
  store %struct.ARegion* %59, %struct.ARegion** %ar, align 8, !dbg !11460
  br label %for.cond, !dbg !11461, !llvm.loop !11462

for.end:                                          ; preds = %for.cond
  %60 = load i32, i32* %dist, align 4, !dbg !11464
  ret i32 %60, !dbg !11465
}

; Function Attrs: noinline nounwind uwtable
define internal void @region_scale_toggle_hidden(%struct.bContext* %C, %struct.RegionMoveData* %rmd) #0 !dbg !11466 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %rmd.addr = alloca %struct.RegionMoveData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11469, metadata !DIExpression()), !dbg !11470
  store %struct.RegionMoveData* %rmd, %struct.RegionMoveData** %rmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RegionMoveData** %rmd.addr, metadata !11471, metadata !DIExpression()), !dbg !11472
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11473
  %1 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11474
  %ar = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %1, i32 0, i32 1, !dbg !11475
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11475
  call void @region_toggle_hidden(%struct.bContext* %0, %struct.ARegion* %2, i8 zeroext 0), !dbg !11476
  %3 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11477
  call void @region_scale_validate_size(%struct.RegionMoveData* %3), !dbg !11478
  ret void, !dbg !11479
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @region_scale_get_maxsize(%struct.RegionMoveData* %rmd) #0 !dbg !11480 {
entry:
  %retval = alloca i32, align 4
  %rmd.addr = alloca %struct.RegionMoveData*, align 8
  %maxsize = alloca i32, align 4
  store %struct.RegionMoveData* %rmd, %struct.RegionMoveData** %rmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RegionMoveData** %rmd.addr, metadata !11483, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.declare(metadata i32* %maxsize, metadata !11485, metadata !DIExpression()), !dbg !11486
  store i32 0, i32* %maxsize, align 4, !dbg !11486
  %0 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11487
  %edge = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %0, i32 0, i32 9, !dbg !11489
  %1 = load i32, i32* %edge, align 8, !dbg !11489
  %cmp = icmp eq i32 %1, 1, !dbg !11490
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11491

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11492
  %edge1 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %2, i32 0, i32 9, !dbg !11493
  %3 = load i32, i32* %edge1, align 8, !dbg !11493
  %cmp2 = icmp eq i32 %3, 0, !dbg !11494
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11495

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11496
  %sa = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %4, i32 0, i32 2, !dbg !11498
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11498
  %winx = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 10, !dbg !11499
  %6 = load i16, i16* %winx, align 2, !dbg !11499
  %conv = sext i16 %6 to i32, !dbg !11496
  %conv3 = sitofp i32 %conv to float, !dbg !11496
  %7 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11500
  %8 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !11500
  %conv4 = sitofp i32 %8 to float, !dbg !11500
  %mul = fmul float %7, %conv4, !dbg !11500
  %div = fdiv float %mul, 7.200000e+01, !dbg !11500
  %div5 = fdiv float %conv3, %div, !dbg !11501
  %9 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11502
  %conv6 = sext i16 %9 to i32, !dbg !11502
  %conv7 = sitofp i32 %conv6 to float, !dbg !11502
  %sub = fsub float %div5, %conv7, !dbg !11503
  %conv8 = fptosi float %sub to i32, !dbg !11504
  store i32 %conv8, i32* %retval, align 4, !dbg !11505
  br label %return, !dbg !11505

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11506
  %ar = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %10, i32 0, i32 1, !dbg !11508
  %11 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11508
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %11, i32 0, i32 8, !dbg !11509
  %12 = load i16, i16* %regiontype, align 2, !dbg !11509
  %conv9 = sext i16 %12 to i32, !dbg !11506
  %cmp10 = icmp eq i32 %conv9, 6, !dbg !11510
  br i1 %cmp10, label %if.then12, label %if.end25, !dbg !11511

if.then12:                                        ; preds = %if.end
  %13 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11512
  %maxsize13 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %13, i32 0, i32 8, !dbg !11514
  %14 = load i32, i32* %maxsize13, align 4, !dbg !11514
  %15 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11515
  %sa14 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %15, i32 0, i32 2, !dbg !11516
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa14, align 8, !dbg !11516
  %headertype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %16, i32 0, i32 12, !dbg !11517
  %17 = load i16, i16* %headertype, align 2, !dbg !11517
  %conv15 = sext i16 %17 to i32, !dbg !11515
  %cmp16 = icmp eq i32 %conv15, 2, !dbg !11518
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !11519

cond.true:                                        ; preds = %if.then12
  %18 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11520
  %conv18 = sext i16 %18 to i32, !dbg !11520
  %mul19 = mul nsw i32 %conv18, 2, !dbg !11521
  br label %cond.end, !dbg !11519

cond.false:                                       ; preds = %if.then12
  %19 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11522
  %conv20 = sext i16 %19 to i32, !dbg !11522
  br label %cond.end, !dbg !11519

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul19, %cond.true ], [ %conv20, %cond.false ], !dbg !11519
  %sub21 = sub nsw i32 %14, %cond, !dbg !11523
  %20 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11524
  %conv22 = sext i16 %20 to i32, !dbg !11524
  %div23 = sdiv i32 %conv22, 4, !dbg !11525
  %sub24 = sub nsw i32 %sub21, %div23, !dbg !11526
  store i32 %sub24, i32* %maxsize, align 4, !dbg !11527
  br label %if.end25, !dbg !11528

if.end25:                                         ; preds = %cond.end, %if.end
  %21 = load i32, i32* %maxsize, align 4, !dbg !11529
  store i32 %21, i32* %retval, align 4, !dbg !11530
  br label %return, !dbg !11530

return:                                           ; preds = %if.end25, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !11531
  ret i32 %22, !dbg !11531
}

; Function Attrs: noinline nounwind uwtable
define internal void @region_scale_validate_size(%struct.RegionMoveData* %rmd) #0 !dbg !11532 {
entry:
  %rmd.addr = alloca %struct.RegionMoveData*, align 8
  %size = alloca i16*, align 8
  %maxsize = alloca i16, align 2
  store %struct.RegionMoveData* %rmd, %struct.RegionMoveData** %rmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RegionMoveData** %rmd.addr, metadata !11535, metadata !DIExpression()), !dbg !11536
  %0 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11537
  %ar = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %0, i32 0, i32 1, !dbg !11539
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11539
  %flag = getelementptr inbounds %struct.ARegion, %struct.ARegion* %1, i32 0, i32 10, !dbg !11540
  %2 = load i16, i16* %flag, align 2, !dbg !11540
  %conv = sext i16 %2 to i32, !dbg !11537
  %and = and i32 %conv, 1, !dbg !11541
  %cmp = icmp eq i32 %and, 0, !dbg !11542
  br i1 %cmp, label %if.then, label %if.end20, !dbg !11543

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16** %size, metadata !11544, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.declare(metadata i16* %maxsize, metadata !11548, metadata !DIExpression()), !dbg !11549
  store i16 -1, i16* %maxsize, align 2, !dbg !11549
  %3 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11550
  %edge = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %3, i32 0, i32 9, !dbg !11552
  %4 = load i32, i32* %edge, align 8, !dbg !11552
  %cmp2 = icmp eq i32 %4, 1, !dbg !11553
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !11554

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11555
  %edge4 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %5, i32 0, i32 9, !dbg !11556
  %6 = load i32, i32* %edge4, align 8, !dbg !11556
  %cmp5 = icmp eq i32 %6, 0, !dbg !11557
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !11558

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11559
  %ar8 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %7, i32 0, i32 1, !dbg !11560
  %8 = load %struct.ARegion*, %struct.ARegion** %ar8, align 8, !dbg !11560
  %sizex = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 12, !dbg !11561
  store i16* %sizex, i16** %size, align 8, !dbg !11562
  br label %if.end, !dbg !11563

if.else:                                          ; preds = %lor.lhs.false
  %9 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11564
  %ar9 = getelementptr inbounds %struct.RegionMoveData, %struct.RegionMoveData* %9, i32 0, i32 1, !dbg !11565
  %10 = load %struct.ARegion*, %struct.ARegion** %ar9, align 8, !dbg !11565
  %sizey = getelementptr inbounds %struct.ARegion, %struct.ARegion* %10, i32 0, i32 13, !dbg !11566
  store i16* %sizey, i16** %size, align 8, !dbg !11567
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %11 = load %struct.RegionMoveData*, %struct.RegionMoveData** %rmd.addr, align 8, !dbg !11568
  %call = call i32 @region_scale_get_maxsize(%struct.RegionMoveData* %11), !dbg !11569
  %conv10 = trunc i32 %call to i16, !dbg !11569
  store i16 %conv10, i16* %maxsize, align 2, !dbg !11570
  %12 = load i16*, i16** %size, align 8, !dbg !11571
  %13 = load i16, i16* %12, align 2, !dbg !11573
  %conv11 = sext i16 %13 to i32, !dbg !11573
  %14 = load i16, i16* %maxsize, align 2, !dbg !11574
  %conv12 = sext i16 %14 to i32, !dbg !11574
  %cmp13 = icmp sgt i32 %conv11, %conv12, !dbg !11575
  br i1 %cmp13, label %land.lhs.true, label %if.end19, !dbg !11576

land.lhs.true:                                    ; preds = %if.end
  %15 = load i16, i16* %maxsize, align 2, !dbg !11577
  %conv15 = sext i16 %15 to i32, !dbg !11577
  %cmp16 = icmp sgt i32 %conv15, 0, !dbg !11578
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !11579

if.then18:                                        ; preds = %land.lhs.true
  %16 = load i16, i16* %maxsize, align 2, !dbg !11580
  %17 = load i16*, i16** %size, align 8, !dbg !11581
  store i16 %16, i16* %17, align 2, !dbg !11582
  br label %if.end19, !dbg !11583

if.end19:                                         ; preds = %if.then18, %land.lhs.true, %if.end
  br label %if.end20, !dbg !11584

if.end20:                                         ; preds = %if.end19, %entry
  ret void, !dbg !11585
}

declare dso_local void @region_toggle_hidden(%struct.bContext*, %struct.ARegion*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @region_flip_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !11586 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11587, metadata !DIExpression()), !dbg !11588
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11589, metadata !DIExpression()), !dbg !11590
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !11591, metadata !DIExpression()), !dbg !11592
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11593
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !11594
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !11592
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11595
  %tobool = icmp ne %struct.ARegion* %1, null, !dbg !11595
  br i1 %tobool, label %if.end, label %if.then, !dbg !11597

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !11598
  br label %return, !dbg !11598

if.end:                                           ; preds = %entry
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11599
  %alignment = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 9, !dbg !11601
  %3 = load i16, i16* %alignment, align 8, !dbg !11601
  %conv = sext i16 %3 to i32, !dbg !11599
  %cmp = icmp eq i32 %conv, 1, !dbg !11602
  br i1 %cmp, label %if.then2, label %if.else, !dbg !11603

if.then2:                                         ; preds = %if.end
  %4 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11604
  %alignment3 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %4, i32 0, i32 9, !dbg !11605
  store i16 2, i16* %alignment3, align 8, !dbg !11606
  br label %if.end27, !dbg !11604

if.else:                                          ; preds = %if.end
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11607
  %alignment4 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %5, i32 0, i32 9, !dbg !11609
  %6 = load i16, i16* %alignment4, align 8, !dbg !11609
  %conv5 = sext i16 %6 to i32, !dbg !11607
  %cmp6 = icmp eq i32 %conv5, 2, !dbg !11610
  br i1 %cmp6, label %if.then8, label %if.else10, !dbg !11611

if.then8:                                         ; preds = %if.else
  %7 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11612
  %alignment9 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %7, i32 0, i32 9, !dbg !11613
  store i16 1, i16* %alignment9, align 8, !dbg !11614
  br label %if.end26, !dbg !11612

if.else10:                                        ; preds = %if.else
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11615
  %alignment11 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 9, !dbg !11617
  %9 = load i16, i16* %alignment11, align 8, !dbg !11617
  %conv12 = sext i16 %9 to i32, !dbg !11615
  %cmp13 = icmp eq i32 %conv12, 3, !dbg !11618
  br i1 %cmp13, label %if.then15, label %if.else17, !dbg !11619

if.then15:                                        ; preds = %if.else10
  %10 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11620
  %alignment16 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %10, i32 0, i32 9, !dbg !11621
  store i16 4, i16* %alignment16, align 8, !dbg !11622
  br label %if.end25, !dbg !11620

if.else17:                                        ; preds = %if.else10
  %11 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11623
  %alignment18 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %11, i32 0, i32 9, !dbg !11625
  %12 = load i16, i16* %alignment18, align 8, !dbg !11625
  %conv19 = sext i16 %12 to i32, !dbg !11623
  %cmp20 = icmp eq i32 %conv19, 4, !dbg !11626
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !11627

if.then22:                                        ; preds = %if.else17
  %13 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11628
  %alignment23 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %13, i32 0, i32 9, !dbg !11629
  store i16 3, i16* %alignment23, align 8, !dbg !11630
  br label %if.end24, !dbg !11628

if.end24:                                         ; preds = %if.then22, %if.else17
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then15
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then8
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then2
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11631
  %call28 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %14), !dbg !11632
  call void @ED_area_tag_redraw(%struct.ScrArea* %call28), !dbg !11633
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11634
  call void @WM_event_add_notifier(%struct.bContext* %15, i32 50331649, i8* null), !dbg !11635
  store i32 4, i32* %retval, align 4, !dbg !11636
  br label %return, !dbg !11636

return:                                           ; preds = %if.end27, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !11637
  ret i32 %16, !dbg !11637
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @header_flip_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !11638 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11639, metadata !DIExpression()), !dbg !11640
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11641, metadata !DIExpression()), !dbg !11642
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !11643, metadata !DIExpression()), !dbg !11644
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11645
  %call = call %struct.ARegion* @screen_find_region_type(%struct.bContext* %0, i32 1), !dbg !11646
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !11644
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11647
  %cmp = icmp eq %struct.ARegion* %1, null, !dbg !11649
  br i1 %cmp, label %if.then, label %if.end, !dbg !11650

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !11651
  br label %return, !dbg !11651

if.end:                                           ; preds = %entry
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11653
  %alignment = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 9, !dbg !11655
  %3 = load i16, i16* %alignment, align 8, !dbg !11655
  %conv = sext i16 %3 to i32, !dbg !11653
  %cmp1 = icmp eq i32 %conv, 1, !dbg !11656
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !11657

if.then3:                                         ; preds = %if.end
  %4 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11658
  %alignment4 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %4, i32 0, i32 9, !dbg !11659
  store i16 2, i16* %alignment4, align 8, !dbg !11660
  br label %if.end28, !dbg !11658

if.else:                                          ; preds = %if.end
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11661
  %alignment5 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %5, i32 0, i32 9, !dbg !11663
  %6 = load i16, i16* %alignment5, align 8, !dbg !11663
  %conv6 = sext i16 %6 to i32, !dbg !11661
  %cmp7 = icmp eq i32 %conv6, 2, !dbg !11664
  br i1 %cmp7, label %if.then9, label %if.else11, !dbg !11665

if.then9:                                         ; preds = %if.else
  %7 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11666
  %alignment10 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %7, i32 0, i32 9, !dbg !11667
  store i16 1, i16* %alignment10, align 8, !dbg !11668
  br label %if.end27, !dbg !11666

if.else11:                                        ; preds = %if.else
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11669
  %alignment12 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 9, !dbg !11671
  %9 = load i16, i16* %alignment12, align 8, !dbg !11671
  %conv13 = sext i16 %9 to i32, !dbg !11669
  %cmp14 = icmp eq i32 %conv13, 3, !dbg !11672
  br i1 %cmp14, label %if.then16, label %if.else18, !dbg !11673

if.then16:                                        ; preds = %if.else11
  %10 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11674
  %alignment17 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %10, i32 0, i32 9, !dbg !11675
  store i16 4, i16* %alignment17, align 8, !dbg !11676
  br label %if.end26, !dbg !11674

if.else18:                                        ; preds = %if.else11
  %11 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11677
  %alignment19 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %11, i32 0, i32 9, !dbg !11679
  %12 = load i16, i16* %alignment19, align 8, !dbg !11679
  %conv20 = sext i16 %12 to i32, !dbg !11677
  %cmp21 = icmp eq i32 %conv20, 4, !dbg !11680
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !11681

if.then23:                                        ; preds = %if.else18
  %13 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11682
  %alignment24 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %13, i32 0, i32 9, !dbg !11683
  store i16 3, i16* %alignment24, align 8, !dbg !11684
  br label %if.end25, !dbg !11682

if.end25:                                         ; preds = %if.then23, %if.else18
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then16
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then9
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then3
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11685
  %call29 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %14), !dbg !11686
  call void @ED_area_tag_redraw(%struct.ScrArea* %call29), !dbg !11687
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11688
  call void @WM_event_add_notifier(%struct.bContext* %15, i32 50331649, i8* null), !dbg !11689
  store i32 4, i32* %retval, align 4, !dbg !11690
  br label %return, !dbg !11690

return:                                           ; preds = %if.end28, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !11691
  ret i32 %16, !dbg !11691
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ARegion* @screen_find_region_type(%struct.bContext* %C, i32 %type) #0 !dbg !11692 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %type.addr = alloca i32, align 4
  %ar = alloca %struct.ARegion*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11695, metadata !DIExpression()), !dbg !11696
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11697, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !11699, metadata !DIExpression()), !dbg !11700
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11701
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !11702
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !11700
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11703
  %cmp = icmp eq %struct.ARegion* %1, null, !dbg !11705
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11706

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11707
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 8, !dbg !11708
  %3 = load i16, i16* %regiontype, align 2, !dbg !11708
  %conv = sext i16 %3 to i32, !dbg !11707
  %4 = load i32, i32* %type.addr, align 4, !dbg !11709
  %cmp1 = icmp ne i32 %conv, %4, !dbg !11710
  br i1 %cmp1, label %if.then, label %if.else, !dbg !11711

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !11712, metadata !DIExpression()), !dbg !11714
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11715
  %call3 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %5), !dbg !11716
  store %struct.ScrArea* %call3, %struct.ScrArea** %sa, align 8, !dbg !11714
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11717
  %7 = load i32, i32* %type.addr, align 4, !dbg !11718
  %call4 = call %struct.ARegion* @BKE_area_find_region_type(%struct.ScrArea* %6, i32 %7), !dbg !11719
  store %struct.ARegion* %call4, %struct.ARegion** %ar, align 8, !dbg !11720
  br label %if.end, !dbg !11721

if.else:                                          ; preds = %lor.lhs.false
  store %struct.ARegion* null, %struct.ARegion** %ar, align 8, !dbg !11722
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11724
  ret %struct.ARegion* %8, !dbg !11725
}

declare dso_local %struct.ARegion* @BKE_area_find_region_type(%struct.ScrArea*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @header_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !11726 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11727, metadata !DIExpression()), !dbg !11728
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11729, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !11731, metadata !DIExpression()), !dbg !11732
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11733
  %call = call %struct.ARegion* @screen_find_region_type(%struct.bContext* %0, i32 1), !dbg !11734
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !11732
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11735
  %cmp = icmp eq %struct.ARegion* %1, null, !dbg !11737
  br i1 %cmp, label %if.then, label %if.end, !dbg !11738

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !11739
  br label %return, !dbg !11739

if.end:                                           ; preds = %entry
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11741
  %flag = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 10, !dbg !11742
  %3 = load i16, i16* %flag, align 2, !dbg !11743
  %conv = sext i16 %3 to i32, !dbg !11743
  %xor = xor i32 %conv, 1, !dbg !11743
  %conv1 = trunc i32 %xor to i16, !dbg !11743
  store i16 %conv1, i16* %flag, align 2, !dbg !11743
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11744
  %call2 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %4), !dbg !11745
  call void @ED_area_tag_redraw(%struct.ScrArea* %call2), !dbg !11746
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11747
  call void @WM_event_add_notifier(%struct.bContext* %5, i32 50331649, i8* null), !dbg !11748
  store i32 4, i32* %retval, align 4, !dbg !11749
  br label %return, !dbg !11749

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !11750
  ret i32 %6, !dbg !11750
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @header_toggle_menus_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !11751 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11752, metadata !DIExpression()), !dbg !11753
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11754, metadata !DIExpression()), !dbg !11755
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !11756, metadata !DIExpression()), !dbg !11757
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11758
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !11759
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !11757
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11760
  %flag = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %1, i32 0, i32 14, !dbg !11761
  %2 = load i16, i16* %flag, align 2, !dbg !11761
  %conv = sext i16 %2 to i32, !dbg !11760
  %xor = xor i32 %conv, 1, !dbg !11762
  %conv1 = trunc i32 %xor to i16, !dbg !11760
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11763
  %flag2 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 14, !dbg !11764
  store i16 %conv1, i16* %flag2, align 2, !dbg !11765
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11766
  call void @ED_area_tag_redraw(%struct.ScrArea* %4), !dbg !11767
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11768
  call void @WM_event_add_notifier(%struct.bContext* %5, i32 50331649, i8* null), !dbg !11769
  ret i32 4, !dbg !11770
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @header_toolbox_invoke(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %UNUSED_event) #0 !dbg !11771 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %pup = alloca %struct.uiPopupMenu*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11772, metadata !DIExpression()), !dbg !11773
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11774, metadata !DIExpression()), !dbg !11775
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !11776, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.declare(metadata %struct.uiPopupMenu** %pup, metadata !11778, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !11780, metadata !DIExpression()), !dbg !11781
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11782
  %call = call %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i32 0), !dbg !11783
  store %struct.uiPopupMenu* %call, %struct.uiPopupMenu** %pup, align 8, !dbg !11784
  %1 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !11785
  %call1 = call %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu* %1), !dbg !11786
  store %struct.uiLayout* %call1, %struct.uiLayout** %layout, align 8, !dbg !11787
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11788
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !11789
  call void @ED_screens_header_tools_menu_create(%struct.bContext* %2, %struct.uiLayout* %3, i8* null), !dbg !11790
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11791
  %5 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !11792
  call void @uiPupMenuEnd(%struct.bContext* %4, %struct.uiPopupMenu* %5), !dbg !11793
  ret i32 32, !dbg !11794
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @screen_set_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !11795 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %screen = alloca %struct.bScreen*, align 8
  %screen_prev = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %tot = alloca i32, align 4
  %delta = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11796, metadata !DIExpression()), !dbg !11797
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11798, metadata !DIExpression()), !dbg !11799
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !11800, metadata !DIExpression()), !dbg !11860
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11861
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !11862
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !11860
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !11863, metadata !DIExpression()), !dbg !11864
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11865
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !11866
  store %struct.bScreen* %call1, %struct.bScreen** %screen, align 8, !dbg !11864
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen_prev, metadata !11867, metadata !DIExpression()), !dbg !11868
  %2 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !11869
  store %struct.bScreen* %2, %struct.bScreen** %screen_prev, align 8, !dbg !11868
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !11870, metadata !DIExpression()), !dbg !11871
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11872
  %call2 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %3), !dbg !11873
  store %struct.ScrArea* %call2, %struct.ScrArea** %sa, align 8, !dbg !11871
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !11874, metadata !DIExpression()), !dbg !11875
  %4 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !11876
  %screen3 = getelementptr inbounds %struct.Main, %struct.Main* %4, i32 0, i32 26, !dbg !11877
  %call4 = call i32 @BLI_countlist(%struct.ListBase* %screen3), !dbg !11878
  store i32 %call4, i32* %tot, align 4, !dbg !11875
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !11879, metadata !DIExpression()), !dbg !11880
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11881
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !11882
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !11882
  %call5 = call i32 @RNA_int_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)), !dbg !11883
  store i32 %call5, i32* %delta, align 4, !dbg !11880
  %7 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !11884
  %temp = getelementptr inbounds %struct.bScreen, %struct.bScreen* %7, i32 0, i32 10, !dbg !11886
  %8 = load i16, i16* %temp, align 2, !dbg !11886
  %tobool = icmp ne i16 %8, 0, !dbg !11884
  br i1 %tobool, label %if.then, label %if.end, !dbg !11887

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !11888
  br label %return, !dbg !11888

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %delta, align 4, !dbg !11889
  %cmp = icmp eq i32 %9, 1, !dbg !11891
  br i1 %cmp, label %if.then6, label %if.else, !dbg !11892

if.then6:                                         ; preds = %if.end
  br label %while.cond, !dbg !11893

while.cond:                                       ; preds = %if.end15, %if.then6
  %10 = load i32, i32* %tot, align 4, !dbg !11895
  %dec = add nsw i32 %10, -1, !dbg !11895
  store i32 %dec, i32* %tot, align 4, !dbg !11895
  %tobool7 = icmp ne i32 %10, 0, !dbg !11893
  br i1 %tobool7, label %while.body, label %while.end, !dbg !11893

while.body:                                       ; preds = %while.cond
  %11 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !11896
  %id = getelementptr inbounds %struct.bScreen, %struct.bScreen* %11, i32 0, i32 0, !dbg !11898
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !11899
  %12 = load i8*, i8** %next, align 8, !dbg !11899
  %13 = bitcast i8* %12 to %struct.bScreen*, !dbg !11896
  store %struct.bScreen* %13, %struct.bScreen** %screen, align 8, !dbg !11900
  %14 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !11901
  %cmp8 = icmp eq %struct.bScreen* %14, null, !dbg !11903
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !11904

if.then9:                                         ; preds = %while.body
  %15 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !11905
  %screen10 = getelementptr inbounds %struct.Main, %struct.Main* %15, i32 0, i32 26, !dbg !11906
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %screen10, i32 0, i32 0, !dbg !11907
  %16 = load i8*, i8** %first, align 8, !dbg !11907
  %17 = bitcast i8* %16 to %struct.bScreen*, !dbg !11905
  store %struct.bScreen* %17, %struct.bScreen** %screen, align 8, !dbg !11908
  br label %if.end11, !dbg !11909

if.end11:                                         ; preds = %if.then9, %while.body
  %18 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !11910
  %19 = load %struct.bScreen*, %struct.bScreen** %screen_prev, align 8, !dbg !11912
  %call12 = call zeroext i8 @screen_set_is_ok(%struct.bScreen* %18, %struct.bScreen* %19), !dbg !11913
  %tobool13 = icmp ne i8 %call12, 0, !dbg !11913
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !11914

if.then14:                                        ; preds = %if.end11
  br label %while.end, !dbg !11915

if.end15:                                         ; preds = %if.end11
  br label %while.cond, !dbg !11893, !llvm.loop !11917

while.end:                                        ; preds = %if.then14, %while.cond
  br label %if.end34, !dbg !11919

if.else:                                          ; preds = %if.end
  %20 = load i32, i32* %delta, align 4, !dbg !11920
  %cmp16 = icmp eq i32 %20, -1, !dbg !11922
  br i1 %cmp16, label %if.then17, label %if.else32, !dbg !11923

if.then17:                                        ; preds = %if.else
  br label %while.cond18, !dbg !11924

while.cond18:                                     ; preds = %if.end30, %if.then17
  %21 = load i32, i32* %tot, align 4, !dbg !11926
  %dec19 = add nsw i32 %21, -1, !dbg !11926
  store i32 %dec19, i32* %tot, align 4, !dbg !11926
  %tobool20 = icmp ne i32 %21, 0, !dbg !11924
  br i1 %tobool20, label %while.body21, label %while.end31, !dbg !11924

while.body21:                                     ; preds = %while.cond18
  %22 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !11927
  %id22 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %22, i32 0, i32 0, !dbg !11929
  %prev = getelementptr inbounds %struct.ID, %struct.ID* %id22, i32 0, i32 1, !dbg !11930
  %23 = load i8*, i8** %prev, align 8, !dbg !11930
  %24 = bitcast i8* %23 to %struct.bScreen*, !dbg !11927
  store %struct.bScreen* %24, %struct.bScreen** %screen, align 8, !dbg !11931
  %25 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !11932
  %cmp23 = icmp eq %struct.bScreen* %25, null, !dbg !11934
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !11935

if.then24:                                        ; preds = %while.body21
  %26 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !11936
  %screen25 = getelementptr inbounds %struct.Main, %struct.Main* %26, i32 0, i32 26, !dbg !11937
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %screen25, i32 0, i32 1, !dbg !11938
  %27 = load i8*, i8** %last, align 8, !dbg !11938
  %28 = bitcast i8* %27 to %struct.bScreen*, !dbg !11936
  store %struct.bScreen* %28, %struct.bScreen** %screen, align 8, !dbg !11939
  br label %if.end26, !dbg !11940

if.end26:                                         ; preds = %if.then24, %while.body21
  %29 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !11941
  %30 = load %struct.bScreen*, %struct.bScreen** %screen_prev, align 8, !dbg !11943
  %call27 = call zeroext i8 @screen_set_is_ok(%struct.bScreen* %29, %struct.bScreen* %30), !dbg !11944
  %tobool28 = icmp ne i8 %call27, 0, !dbg !11944
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !11945

if.then29:                                        ; preds = %if.end26
  br label %while.end31, !dbg !11946

if.end30:                                         ; preds = %if.end26
  br label %while.cond18, !dbg !11924, !llvm.loop !11948

while.end31:                                      ; preds = %if.then29, %while.cond18
  br label %if.end33, !dbg !11950

if.else32:                                        ; preds = %if.else
  store %struct.bScreen* null, %struct.bScreen** %screen, align 8, !dbg !11951
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %while.end31
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %while.end
  %31 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !11953
  %tobool35 = icmp ne %struct.bScreen* %31, null, !dbg !11953
  br i1 %tobool35, label %land.lhs.true, label %if.end43, !dbg !11955

land.lhs.true:                                    ; preds = %if.end34
  %32 = load %struct.bScreen*, %struct.bScreen** %screen_prev, align 8, !dbg !11956
  %33 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !11957
  %cmp36 = icmp ne %struct.bScreen* %32, %33, !dbg !11958
  br i1 %cmp36, label %if.then37, label %if.end43, !dbg !11959

if.then37:                                        ; preds = %land.lhs.true
  %34 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11960
  %tobool38 = icmp ne %struct.ScrArea* %34, null, !dbg !11960
  br i1 %tobool38, label %land.lhs.true39, label %if.end42, !dbg !11963

land.lhs.true39:                                  ; preds = %if.then37
  %35 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11964
  %full = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %35, i32 0, i32 6, !dbg !11965
  %36 = load %struct.bScreen*, %struct.bScreen** %full, align 8, !dbg !11965
  %tobool40 = icmp ne %struct.bScreen* %36, null, !dbg !11964
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !11966

if.then41:                                        ; preds = %land.lhs.true39
  %37 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11967
  %38 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11969
  call void @ED_screen_full_restore(%struct.bContext* %37, %struct.ScrArea* %38), !dbg !11970
  br label %if.end42, !dbg !11971

if.end42:                                         ; preds = %if.then41, %land.lhs.true39, %if.then37
  %39 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11972
  %40 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !11973
  call void @ED_screen_set(%struct.bContext* %39, %struct.bScreen* %40), !dbg !11974
  store i32 4, i32* %retval, align 4, !dbg !11975
  br label %return, !dbg !11975

if.end43:                                         ; preds = %land.lhs.true, %if.end34
  store i32 2, i32* %retval, align 4, !dbg !11976
  br label %return, !dbg !11976

return:                                           ; preds = %if.end43, %if.end42, %if.then
  %41 = load i32, i32* %retval, align 4, !dbg !11977
  ret i32 %41, !dbg !11977
}

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @screen_set_is_ok(%struct.bScreen* %screen, %struct.bScreen* %screen_prev) #0 !dbg !11978 {
entry:
  %screen.addr = alloca %struct.bScreen*, align 8
  %screen_prev.addr = alloca %struct.bScreen*, align 8
  store %struct.bScreen* %screen, %struct.bScreen** %screen.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen.addr, metadata !11981, metadata !DIExpression()), !dbg !11982
  store %struct.bScreen* %screen_prev, %struct.bScreen** %screen_prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen_prev.addr, metadata !11983, metadata !DIExpression()), !dbg !11984
  %0 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !11985
  %winid = getelementptr inbounds %struct.bScreen, %struct.bScreen* %0, i32 0, i32 11, !dbg !11986
  %1 = load i16, i16* %winid, align 4, !dbg !11986
  %conv = sext i16 %1 to i32, !dbg !11985
  %cmp = icmp eq i32 %conv, 0, !dbg !11987
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !11988

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !11989
  %state = getelementptr inbounds %struct.bScreen, %struct.bScreen* %2, i32 0, i32 9, !dbg !11990
  %3 = load i16, i16* %state, align 8, !dbg !11990
  %conv2 = sext i16 %3 to i32, !dbg !11989
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !11991
  br i1 %cmp3, label %land.lhs.true5, label %land.end, !dbg !11992

land.lhs.true5:                                   ; preds = %land.lhs.true
  %4 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !11993
  %5 = load %struct.bScreen*, %struct.bScreen** %screen_prev.addr, align 8, !dbg !11994
  %cmp6 = icmp ne %struct.bScreen* %4, %5, !dbg !11995
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !11996

land.rhs:                                         ; preds = %land.lhs.true5
  %6 = load %struct.bScreen*, %struct.bScreen** %screen.addr, align 8, !dbg !11997
  %id = getelementptr inbounds %struct.bScreen, %struct.bScreen* %6, i32 0, i32 0, !dbg !11998
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !11999
  %arrayidx = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 2, !dbg !11997
  %7 = load i8, i8* %arrayidx, align 2, !dbg !11997
  %conv8 = zext i8 %7 to i32, !dbg !11997
  %cmp9 = icmp ne i32 %conv8, 46, !dbg !12000
  br i1 %cmp9, label %lor.end, label %lor.rhs, !dbg !12001

lor.rhs:                                          ; preds = %land.rhs
  %8 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 22), align 4, !dbg !12002
  %and = and i32 %8, 65536, !dbg !12003
  %tobool = icmp ne i32 %and, 0, !dbg !12004
  %lnot = xor i1 %tobool, true, !dbg !12004
  br label %lor.end, !dbg !12001

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %9 = phi i1 [ true, %land.rhs ], [ %lnot, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %land.lhs.true5, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true5 ], [ false, %land.lhs.true ], [ false, %entry ], [ %9, %lor.end ], !dbg !12005
  %land.ext = zext i1 %10 to i32, !dbg !11996
  %conv11 = trunc i32 %land.ext to i8, !dbg !12006
  ret i8 %conv11, !dbg !12007
}

declare dso_local void @ED_screen_full_restore(%struct.bContext*, %struct.ScrArea*) #2

declare dso_local void @ED_screen_set(%struct.bContext*, %struct.bScreen*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @screen_maximize_area_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12008 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %screen = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %hide_panels = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12009, metadata !DIExpression()), !dbg !12010
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12011, metadata !DIExpression()), !dbg !12012
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !12013, metadata !DIExpression()), !dbg !12014
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12015
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !12016
  store %struct.bScreen* %call, %struct.bScreen** %screen, align 8, !dbg !12014
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !12017, metadata !DIExpression()), !dbg !12018
  store %struct.ScrArea* null, %struct.ScrArea** %sa, align 8, !dbg !12018
  call void @llvm.dbg.declare(metadata i8* %hide_panels, metadata !12019, metadata !DIExpression()), !dbg !12020
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12021
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !12022
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !12022
  %call1 = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i64 0, i64 0)), !dbg !12023
  %conv = trunc i32 %call1 to i8, !dbg !12023
  store i8 %conv, i8* %hide_panels, align 1, !dbg !12020
  %3 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !12024
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %3, i32 0, i32 3, !dbg !12026
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !12027
  %4 = load i8*, i8** %first, align 8, !dbg !12027
  %5 = bitcast i8* %4 to %struct.ScrArea*, !dbg !12024
  store %struct.ScrArea* %5, %struct.ScrArea** %sa, align 8, !dbg !12028
  br label %for.cond, !dbg !12029

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12030
  %tobool = icmp ne %struct.ScrArea* %6, null, !dbg !12032
  br i1 %tobool, label %for.body, label %for.end, !dbg !12032

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12033
  %full = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 6, !dbg !12036
  %8 = load %struct.bScreen*, %struct.bScreen** %full, align 8, !dbg !12036
  %tobool2 = icmp ne %struct.bScreen* %8, null, !dbg !12033
  br i1 %tobool2, label %if.then, label %if.end, !dbg !12037

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !12038

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12039

for.inc:                                          ; preds = %if.end
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12040
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 0, !dbg !12041
  %10 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !12041
  store %struct.ScrArea* %10, %struct.ScrArea** %sa, align 8, !dbg !12042
  br label %for.cond, !dbg !12043, !llvm.loop !12044

for.end:                                          ; preds = %if.then, %for.cond
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12046
  %cmp = icmp eq %struct.ScrArea* %11, null, !dbg !12048
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !12049

if.then4:                                         ; preds = %for.end
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12050
  %call5 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %12), !dbg !12052
  store %struct.ScrArea* %call5, %struct.ScrArea** %sa, align 8, !dbg !12053
  br label %if.end6, !dbg !12054

if.end6:                                          ; preds = %if.then4, %for.end
  %13 = load i8, i8* %hide_panels, align 1, !dbg !12055
  %tobool7 = icmp ne i8 %13, 0, !dbg !12055
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !12057

if.then8:                                         ; preds = %if.end6
  %14 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !12058
  %state = getelementptr inbounds %struct.bScreen, %struct.bScreen* %14, i32 0, i32 9, !dbg !12058
  %15 = load i16, i16* %state, align 8, !dbg !12058
  %conv9 = sext i16 %15 to i32, !dbg !12058
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !12058
  br i1 %cmp10, label %if.end17, label %lor.lhs.false, !dbg !12058

lor.lhs.false:                                    ; preds = %if.then8
  %16 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !12058
  %state12 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %16, i32 0, i32 9, !dbg !12058
  %17 = load i16, i16* %state12, align 8, !dbg !12058
  %conv13 = sext i16 %17 to i32, !dbg !12058
  %cmp14 = icmp eq i32 %conv13, 2, !dbg !12058
  br i1 %cmp14, label %if.end17, label %if.then16, !dbg !12061

if.then16:                                        ; preds = %lor.lhs.false
  store i32 2, i32* %retval, align 4, !dbg !12062
  br label %return, !dbg !12062

if.end17:                                         ; preds = %lor.lhs.false, %if.then8
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12064
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12065
  %call18 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %19), !dbg !12066
  %20 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12067
  %call19 = call %struct.ScrArea* @ED_screen_state_toggle(%struct.bContext* %18, %struct.wmWindow* %call18, %struct.ScrArea* %20, i16 signext 2), !dbg !12068
  br label %if.end33, !dbg !12069

if.else:                                          ; preds = %if.end6
  %21 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !12070
  %state20 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %21, i32 0, i32 9, !dbg !12070
  %22 = load i16, i16* %state20, align 8, !dbg !12070
  %conv21 = sext i16 %22 to i32, !dbg !12070
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !12070
  br i1 %cmp22, label %if.end30, label %lor.lhs.false24, !dbg !12070

lor.lhs.false24:                                  ; preds = %if.else
  %23 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !12070
  %state25 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %23, i32 0, i32 9, !dbg !12070
  %24 = load i16, i16* %state25, align 8, !dbg !12070
  %conv26 = sext i16 %24 to i32, !dbg !12070
  %cmp27 = icmp eq i32 %conv26, 1, !dbg !12070
  br i1 %cmp27, label %if.end30, label %if.then29, !dbg !12073

if.then29:                                        ; preds = %lor.lhs.false24
  store i32 2, i32* %retval, align 4, !dbg !12074
  br label %return, !dbg !12074

if.end30:                                         ; preds = %lor.lhs.false24, %if.else
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12076
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12077
  %call31 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %26), !dbg !12078
  %27 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12079
  %call32 = call %struct.ScrArea* @ED_screen_state_toggle(%struct.bContext* %25, %struct.wmWindow* %call31, %struct.ScrArea* %27, i16 signext 1), !dbg !12080
  br label %if.end33

if.end33:                                         ; preds = %if.end30, %if.end17
  store i32 4, i32* %retval, align 4, !dbg !12081
  br label %return, !dbg !12081

return:                                           ; preds = %if.end33, %if.then29, %if.then16
  %28 = load i32, i32* %retval, align 4, !dbg !12082
  ret i32 %28, !dbg !12082
}

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

declare dso_local void @RNA_def_property_flag(%struct.PropertyRNA*, i32) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local %struct.ScrArea* @ED_screen_state_toggle(%struct.bContext*, %struct.wmWindow*, %struct.ScrArea*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @fullscreen_back_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12083 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %screen = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12084, metadata !DIExpression()), !dbg !12085
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12086, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !12088, metadata !DIExpression()), !dbg !12089
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12090
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !12091
  store %struct.bScreen* %call, %struct.bScreen** %screen, align 8, !dbg !12089
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !12092, metadata !DIExpression()), !dbg !12093
  store %struct.ScrArea* null, %struct.ScrArea** %sa, align 8, !dbg !12093
  %1 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !12094
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %1, i32 0, i32 3, !dbg !12096
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !12097
  %2 = load i8*, i8** %first, align 8, !dbg !12097
  %3 = bitcast i8* %2 to %struct.ScrArea*, !dbg !12094
  store %struct.ScrArea* %3, %struct.ScrArea** %sa, align 8, !dbg !12098
  br label %for.cond, !dbg !12099

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12100
  %tobool = icmp ne %struct.ScrArea* %4, null, !dbg !12102
  br i1 %tobool, label %for.body, label %for.end, !dbg !12102

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12103
  %full = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 6, !dbg !12106
  %6 = load %struct.bScreen*, %struct.bScreen** %full, align 8, !dbg !12106
  %tobool1 = icmp ne %struct.bScreen* %6, null, !dbg !12103
  br i1 %tobool1, label %if.then, label %if.end, !dbg !12107

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !12108

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12109

for.inc:                                          ; preds = %if.end
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12110
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 0, !dbg !12111
  %8 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !12111
  store %struct.ScrArea* %8, %struct.ScrArea** %sa, align 8, !dbg !12112
  br label %for.cond, !dbg !12113, !llvm.loop !12114

for.end:                                          ; preds = %if.then, %for.cond
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12116
  %tobool2 = icmp ne %struct.ScrArea* %9, null, !dbg !12116
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !12118

if.then3:                                         ; preds = %for.end
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12119
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 8, !dbg !12121
  %11 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !12121
  call void @BKE_report(%struct.ReportList* %11, i32 32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.147, i64 0, i64 0)), !dbg !12122
  store i32 2, i32* %retval, align 4, !dbg !12123
  br label %return, !dbg !12123

if.end4:                                          ; preds = %for.end
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12124
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12125
  call void @ED_screen_full_restore(%struct.bContext* %12, %struct.ScrArea* %13), !dbg !12126
  store i32 4, i32* %retval, align 4, !dbg !12127
  br label %return, !dbg !12127

return:                                           ; preds = %if.end4, %if.then3
  %14 = load i32, i32* %retval, align 4, !dbg !12128
  ret i32 %14, !dbg !12128
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @spacedata_cleanup_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12129 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %screen = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %tot = alloca i32, align 4
  %sl = alloca %struct.SpaceLink*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12130, metadata !DIExpression()), !dbg !12131
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12132, metadata !DIExpression()), !dbg !12133
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !12134, metadata !DIExpression()), !dbg !12135
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12136
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !12137
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !12135
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !12138, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !12140, metadata !DIExpression()), !dbg !12141
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !12142, metadata !DIExpression()), !dbg !12143
  store i32 0, i32* %tot, align 4, !dbg !12143
  %1 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !12144
  %screen1 = getelementptr inbounds %struct.Main, %struct.Main* %1, i32 0, i32 26, !dbg !12146
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %screen1, i32 0, i32 0, !dbg !12147
  %2 = load i8*, i8** %first, align 8, !dbg !12147
  %3 = bitcast i8* %2 to %struct.bScreen*, !dbg !12144
  store %struct.bScreen* %3, %struct.bScreen** %screen, align 8, !dbg !12148
  br label %for.cond, !dbg !12149

for.cond:                                         ; preds = %for.inc15, %entry
  %4 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !12150
  %tobool = icmp ne %struct.bScreen* %4, null, !dbg !12152
  br i1 %tobool, label %for.body, label %for.end17, !dbg !12152

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !12153
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %5, i32 0, i32 3, !dbg !12156
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !12157
  %6 = load i8*, i8** %first2, align 8, !dbg !12157
  %7 = bitcast i8* %6 to %struct.ScrArea*, !dbg !12153
  store %struct.ScrArea* %7, %struct.ScrArea** %sa, align 8, !dbg !12158
  br label %for.cond3, !dbg !12159

for.cond3:                                        ; preds = %for.inc, %for.body
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12160
  %tobool4 = icmp ne %struct.ScrArea* %8, null, !dbg !12162
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !12162

for.body5:                                        ; preds = %for.cond3
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12163
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 19, !dbg !12166
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !12167
  %10 = load i8*, i8** %first6, align 8, !dbg !12167
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12168
  %spacedata7 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %11, i32 0, i32 19, !dbg !12169
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata7, i32 0, i32 1, !dbg !12170
  %12 = load i8*, i8** %last, align 8, !dbg !12170
  %cmp = icmp ne i8* %10, %12, !dbg !12171
  br i1 %cmp, label %if.then, label %if.end, !dbg !12172

if.then:                                          ; preds = %for.body5
  call void @llvm.dbg.declare(metadata %struct.SpaceLink** %sl, metadata !12173, metadata !DIExpression()), !dbg !12175
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12176
  %spacedata8 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 19, !dbg !12177
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata8, i32 0, i32 0, !dbg !12178
  %14 = load i8*, i8** %first9, align 8, !dbg !12178
  %15 = bitcast i8* %14 to %struct.SpaceLink*, !dbg !12176
  store %struct.SpaceLink* %15, %struct.SpaceLink** %sl, align 8, !dbg !12175
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12179
  %spacedata10 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %16, i32 0, i32 19, !dbg !12180
  %17 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !12181
  %18 = bitcast %struct.SpaceLink* %17 to i8*, !dbg !12181
  call void @BLI_remlink(%struct.ListBase* %spacedata10, i8* %18), !dbg !12182
  %19 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12183
  %spacedata11 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %19, i32 0, i32 19, !dbg !12184
  %call12 = call i32 @BLI_countlist(%struct.ListBase* %spacedata11), !dbg !12185
  %20 = load i32, i32* %tot, align 4, !dbg !12186
  %add = add nsw i32 %20, %call12, !dbg !12186
  store i32 %add, i32* %tot, align 4, !dbg !12186
  %21 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12187
  %spacedata13 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %21, i32 0, i32 19, !dbg !12188
  call void @BKE_spacedata_freelist(%struct.ListBase* %spacedata13), !dbg !12189
  %22 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12190
  %spacedata14 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %22, i32 0, i32 19, !dbg !12191
  %23 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !12192
  %24 = bitcast %struct.SpaceLink* %23 to i8*, !dbg !12192
  call void @BLI_addtail(%struct.ListBase* %spacedata14, i8* %24), !dbg !12193
  br label %if.end, !dbg !12194

if.end:                                           ; preds = %if.then, %for.body5
  br label %for.inc, !dbg !12195

for.inc:                                          ; preds = %if.end
  %25 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !12196
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %25, i32 0, i32 0, !dbg !12197
  %26 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !12197
  store %struct.ScrArea* %26, %struct.ScrArea** %sa, align 8, !dbg !12198
  br label %for.cond3, !dbg !12199, !llvm.loop !12200

for.end:                                          ; preds = %for.cond3
  br label %for.inc15, !dbg !12202

for.inc15:                                        ; preds = %for.end
  %27 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !12203
  %id = getelementptr inbounds %struct.bScreen, %struct.bScreen* %27, i32 0, i32 0, !dbg !12204
  %next16 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !12205
  %28 = load i8*, i8** %next16, align 8, !dbg !12205
  %29 = bitcast i8* %28 to %struct.bScreen*, !dbg !12203
  store %struct.bScreen* %29, %struct.bScreen** %screen, align 8, !dbg !12206
  br label %for.cond, !dbg !12207, !llvm.loop !12208

for.end17:                                        ; preds = %for.cond
  %30 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12210
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %30, i32 0, i32 8, !dbg !12211
  %31 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !12211
  %32 = load i32, i32* %tot, align 4, !dbg !12212
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %31, i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.151, i64 0, i64 0), i32 %32), !dbg !12213
  ret i32 4, !dbg !12214
}

declare dso_local i32 @WM_operator_winactive(%struct.bContext*) #2

declare dso_local void @BKE_spacedata_freelist(%struct.ListBase*) #2

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @userpref_show_invoke(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %event) #0 !dbg !12215 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %rect = alloca %struct.rcti, align 4
  %sizex = alloca i32, align 4
  %sizey = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12216, metadata !DIExpression()), !dbg !12217
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !12218, metadata !DIExpression()), !dbg !12219
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !12220, metadata !DIExpression()), !dbg !12221
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !12222, metadata !DIExpression()), !dbg !12223
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12224
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !12225
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !12223
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect, metadata !12226, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.declare(metadata i32* %sizex, metadata !12228, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.declare(metadata i32* %sizey, metadata !12230, metadata !DIExpression()), !dbg !12231
  %1 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !12232
  %conv = sitofp i32 %1 to float, !dbg !12232
  %div = fdiv float %conv, 7.200000e+01, !dbg !12232
  %mul = fmul float 8.000000e+02, %div, !dbg !12233
  %conv1 = fptosi float %mul to i32, !dbg !12234
  store i32 %conv1, i32* %sizex, align 4, !dbg !12235
  %2 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !12236
  %conv2 = sitofp i32 %2 to float, !dbg !12236
  %div3 = fdiv float %conv2, 7.200000e+01, !dbg !12236
  %mul4 = fmul float 4.800000e+02, %div3, !dbg !12237
  %conv5 = fptosi float %mul4 to i32, !dbg !12238
  store i32 %conv5, i32* %sizey, align 4, !dbg !12239
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12240
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 4, !dbg !12241
  %4 = load i32, i32* %x, align 4, !dbg !12241
  %conv6 = sitofp i32 %4 to float, !dbg !12240
  %5 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !12242
  %div7 = fdiv float %conv6, %5, !dbg !12243
  %6 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !12244
  %posx = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %6, i32 0, i32 6, !dbg !12245
  %7 = load i16, i16* %posx, align 8, !dbg !12245
  %conv8 = sext i16 %7 to i32, !dbg !12244
  %conv9 = sitofp i32 %conv8 to float, !dbg !12244
  %add = fadd float %div7, %conv9, !dbg !12246
  %8 = load i32, i32* %sizex, align 4, !dbg !12247
  %div10 = sdiv i32 %8, 2, !dbg !12248
  %conv11 = sitofp i32 %div10 to float, !dbg !12247
  %sub = fsub float %add, %conv11, !dbg !12249
  %conv12 = fptosi float %sub to i32, !dbg !12250
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 0, !dbg !12251
  store i32 %conv12, i32* %xmin, align 4, !dbg !12252
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12253
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 5, !dbg !12254
  %10 = load i32, i32* %y, align 8, !dbg !12254
  %conv13 = sitofp i32 %10 to float, !dbg !12253
  %11 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !12255
  %div14 = fdiv float %conv13, %11, !dbg !12256
  %12 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !12257
  %posy = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %12, i32 0, i32 7, !dbg !12258
  %13 = load i16, i16* %posy, align 2, !dbg !12258
  %conv15 = sext i16 %13 to i32, !dbg !12257
  %conv16 = sitofp i32 %conv15 to float, !dbg !12257
  %add17 = fadd float %div14, %conv16, !dbg !12259
  %14 = load i32, i32* %sizey, align 4, !dbg !12260
  %div18 = sdiv i32 %14, 2, !dbg !12261
  %conv19 = sitofp i32 %div18 to float, !dbg !12260
  %sub20 = fsub float %add17, %conv19, !dbg !12262
  %conv21 = fptosi float %sub20 to i32, !dbg !12263
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 2, !dbg !12264
  store i32 %conv21, i32* %ymin, align 4, !dbg !12265
  %xmin22 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 0, !dbg !12266
  %15 = load i32, i32* %xmin22, align 4, !dbg !12266
  %16 = load i32, i32* %sizex, align 4, !dbg !12267
  %add23 = add nsw i32 %15, %16, !dbg !12268
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 1, !dbg !12269
  store i32 %add23, i32* %xmax, align 4, !dbg !12270
  %ymin24 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 2, !dbg !12271
  %17 = load i32, i32* %ymin24, align 4, !dbg !12271
  %18 = load i32, i32* %sizey, align 4, !dbg !12272
  %add25 = add nsw i32 %17, %18, !dbg !12273
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 3, !dbg !12274
  store i32 %add25, i32* %ymax, align 4, !dbg !12275
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12276
  call void @WM_window_open_temp(%struct.bContext* %19, %struct.rcti* %rect, i32 1), !dbg !12277
  ret i32 4, !dbg !12278
}

declare dso_local void @WM_window_open_temp(%struct.bContext*, %struct.rcti*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @region_blend_invoke(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %event) #0 !dbg !12279 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %rgi = alloca %struct.RegionAlphaInfo*, align 8
  %timer = alloca %struct.wmTimer*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12280, metadata !DIExpression()), !dbg !12281
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !12282, metadata !DIExpression()), !dbg !12283
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !12284, metadata !DIExpression()), !dbg !12285
  call void @llvm.dbg.declare(metadata %struct.RegionAlphaInfo** %rgi, metadata !12286, metadata !DIExpression()), !dbg !12287
  call void @llvm.dbg.declare(metadata %struct.wmTimer** %timer, metadata !12288, metadata !DIExpression()), !dbg !12289
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12290
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 28, !dbg !12291
  %1 = load i8*, i8** %customdata, align 8, !dbg !12291
  %2 = bitcast i8* %1 to %struct.wmTimer*, !dbg !12290
  store %struct.wmTimer* %2, %struct.wmTimer** %timer, align 8, !dbg !12289
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12292
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 2, !dbg !12294
  %4 = load i16, i16* %type, align 8, !dbg !12294
  %conv = sext i16 %4 to i32, !dbg !12292
  %cmp = icmp ne i32 %conv, 279, !dbg !12295
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12296

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.wmTimer*, %struct.wmTimer** %timer, align 8, !dbg !12297
  %cmp2 = icmp eq %struct.wmTimer* %5, null, !dbg !12298
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12299

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 8, i32* %retval, align 4, !dbg !12300
  br label %return, !dbg !12300

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.wmTimer*, %struct.wmTimer** %timer, align 8, !dbg !12301
  %customdata4 = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %6, i32 0, i32 5, !dbg !12302
  %7 = load i8*, i8** %customdata4, align 8, !dbg !12302
  %8 = bitcast i8* %7 to %struct.RegionAlphaInfo*, !dbg !12301
  store %struct.RegionAlphaInfo* %8, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !12303
  %9 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !12304
  %ar = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %9, i32 0, i32 1, !dbg !12305
  %10 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !12305
  call void @ED_region_tag_redraw(%struct.ARegion* %10), !dbg !12306
  %11 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !12307
  %child_ar = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %11, i32 0, i32 2, !dbg !12309
  %12 = load %struct.ARegion*, %struct.ARegion** %child_ar, align 8, !dbg !12309
  %tobool = icmp ne %struct.ARegion* %12, null, !dbg !12307
  br i1 %tobool, label %if.then5, label %if.end7, !dbg !12310

if.then5:                                         ; preds = %if.end
  %13 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !12311
  %child_ar6 = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %13, i32 0, i32 2, !dbg !12312
  %14 = load %struct.ARegion*, %struct.ARegion** %child_ar6, align 8, !dbg !12312
  call void @ED_region_tag_redraw(%struct.ARegion* %14), !dbg !12313
  br label %if.end7, !dbg !12313

if.end7:                                          ; preds = %if.then5, %if.end
  %15 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !12314
  %ar8 = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %15, i32 0, i32 1, !dbg !12316
  %16 = load %struct.ARegion*, %struct.ARegion** %ar8, align 8, !dbg !12316
  %regiontimer = getelementptr inbounds %struct.ARegion, %struct.ARegion* %16, i32 0, i32 28, !dbg !12317
  %17 = load %struct.wmTimer*, %struct.wmTimer** %regiontimer, align 8, !dbg !12317
  %duration = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %17, i32 0, i32 6, !dbg !12318
  %18 = load double, double* %duration, align 8, !dbg !12318
  %cmp9 = fcmp ogt double %18, 0x3FC99999A0000000, !dbg !12319
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !12320

if.then11:                                        ; preds = %if.end7
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12321
  %20 = load %struct.RegionAlphaInfo*, %struct.RegionAlphaInfo** %rgi, align 8, !dbg !12323
  %ar12 = getelementptr inbounds %struct.RegionAlphaInfo, %struct.RegionAlphaInfo* %20, i32 0, i32 1, !dbg !12324
  %21 = load %struct.ARegion*, %struct.ARegion** %ar12, align 8, !dbg !12324
  call void @region_blend_end(%struct.bContext* %19, %struct.ARegion* %21, i8 zeroext 0), !dbg !12325
  store i32 12, i32* %retval, align 4, !dbg !12326
  br label %return, !dbg !12326

if.end13:                                         ; preds = %if.end7
  store i32 12, i32* %retval, align 4, !dbg !12327
  br label %return, !dbg !12327

return:                                           ; preds = %if.end13, %if.then11, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !12328
  ret i32 %22, !dbg !12328
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @frame_offset_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12329 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %delta = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12330, metadata !DIExpression()), !dbg !12331
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12332, metadata !DIExpression()), !dbg !12333
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !12334, metadata !DIExpression()), !dbg !12335
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12336
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !12337
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !12335
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !12338, metadata !DIExpression()), !dbg !12339
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12340
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !12341
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !12339
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !12342, metadata !DIExpression()), !dbg !12343
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12344
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !12345
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !12345
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)), !dbg !12346
  store i32 %call2, i32* %delta, align 4, !dbg !12347
  %4 = load i32, i32* %delta, align 4, !dbg !12348
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12349
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 22, !dbg !12349
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !12349
  %6 = load i32, i32* %cfra, align 8, !dbg !12350
  %add = add nsw i32 %6, %4, !dbg !12350
  store i32 %add, i32* %cfra, align 8, !dbg !12350
  %7 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !12351
  %and = and i32 %7, 16777216, !dbg !12351
  %tobool = icmp ne i32 %and, 0, !dbg !12351
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !12351

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12351
  %r3 = getelementptr inbounds %struct.Scene, %struct.Scene* %8, i32 0, i32 22, !dbg !12351
  %cfra4 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r3, i32 0, i32 5, !dbg !12351
  %9 = load i32, i32* %cfra4, align 8, !dbg !12351
  %cmp = icmp slt i32 %9, 0, !dbg !12351
  br i1 %cmp, label %if.then, label %if.end, !dbg !12354

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12351
  %r5 = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 22, !dbg !12351
  %cfra6 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r5, i32 0, i32 5, !dbg !12351
  store i32 0, i32* %cfra6, align 8, !dbg !12351
  br label %if.end, !dbg !12351

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %11 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12355
  %r7 = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 22, !dbg !12355
  %subframe = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r7, i32 0, i32 8, !dbg !12355
  store float 0.000000e+00, float* %subframe, align 4, !dbg !12356
  %12 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !12357
  %13 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12358
  call void @sound_seek_scene(%struct.Main* %12, %struct.Scene* %13), !dbg !12359
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12360
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12361
  %16 = bitcast %struct.Scene* %15 to i8*, !dbg !12361
  call void @WM_event_add_notifier(%struct.bContext* %14, i32 67305472, i8* %16), !dbg !12362
  ret i32 4, !dbg !12363
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ED_operator_screenactive_norender(%struct.bContext* %C) #0 !dbg !12364 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12365, metadata !DIExpression()), !dbg !12366
  %0 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 13), align 2, !dbg !12367
  %tobool = icmp ne i8 %0, 0, !dbg !12369
  br i1 %tobool, label %if.then, label %if.end, !dbg !12370

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12371
  br label %return, !dbg !12371

if.end:                                           ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12372
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %1), !dbg !12374
  %cmp = icmp eq %struct.wmWindow* %call, null, !dbg !12375
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12376

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12377
  br label %return, !dbg !12377

if.end2:                                          ; preds = %if.end
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12378
  %call3 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %2), !dbg !12380
  %cmp4 = icmp eq %struct.bScreen* %call3, null, !dbg !12381
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12382

if.then5:                                         ; preds = %if.end2
  store i32 0, i32* %retval, align 4, !dbg !12383
  br label %return, !dbg !12383

if.end6:                                          ; preds = %if.end2
  store i32 1, i32* %retval, align 4, !dbg !12384
  br label %return, !dbg !12384

return:                                           ; preds = %if.end6, %if.then5, %if.then1, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !12385
  ret i32 %3, !dbg !12385
}

declare dso_local void @sound_seek_scene(%struct.Main*, %struct.Scene*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @frame_jump_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12386 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %animtimer = alloca %struct.wmTimer*, align 8
  %sad = alloca %struct.ScreenAnimData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12387, metadata !DIExpression()), !dbg !12388
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12389, metadata !DIExpression()), !dbg !12390
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !12391, metadata !DIExpression()), !dbg !12392
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12393
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !12394
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !12392
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !12395, metadata !DIExpression()), !dbg !12396
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12397
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !12398
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !12396
  call void @llvm.dbg.declare(metadata %struct.wmTimer** %animtimer, metadata !12399, metadata !DIExpression()), !dbg !12400
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12401
  %call2 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %2), !dbg !12402
  %animtimer3 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %call2, i32 0, i32 21, !dbg !12403
  %3 = load %struct.wmTimer*, %struct.wmTimer** %animtimer3, align 8, !dbg !12403
  store %struct.wmTimer* %3, %struct.wmTimer** %animtimer, align 8, !dbg !12400
  %4 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !12404
  %tobool = icmp ne %struct.wmTimer* %4, null, !dbg !12404
  br i1 %tobool, label %if.then, label %if.else25, !dbg !12406

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ScreenAnimData** %sad, metadata !12407, metadata !DIExpression()), !dbg !12409
  %5 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !12410
  %customdata = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %5, i32 0, i32 5, !dbg !12411
  %6 = load i8*, i8** %customdata, align 8, !dbg !12411
  %7 = bitcast i8* %6 to %struct.ScreenAnimData*, !dbg !12410
  store %struct.ScreenAnimData* %7, %struct.ScreenAnimData** %sad, align 8, !dbg !12409
  %8 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12412
  %flag = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %8, i32 0, i32 3, !dbg !12413
  %9 = load i16, i16* %flag, align 4, !dbg !12414
  %conv = sext i16 %9 to i32, !dbg !12414
  %or = or i32 %conv, 16, !dbg !12414
  %conv4 = trunc i32 %or to i16, !dbg !12414
  store i16 %conv4, i16* %flag, align 4, !dbg !12414
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12415
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !12417
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !12417
  %call5 = call i32 @RNA_boolean_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0)), !dbg !12418
  %tobool6 = icmp ne i32 %call5, 0, !dbg !12418
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !12419

if.then7:                                         ; preds = %if.then
  %12 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12420
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %12, i32 0, i32 22, !dbg !12420
  %flag8 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 13, !dbg !12420
  %13 = load i16, i16* %flag8, align 8, !dbg !12420
  %conv9 = sext i16 %13 to i32, !dbg !12420
  %and = and i32 %conv9, 1, !dbg !12420
  %tobool10 = icmp ne i32 %and, 0, !dbg !12420
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !12420

cond.true:                                        ; preds = %if.then7
  %14 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12420
  %r11 = getelementptr inbounds %struct.Scene, %struct.Scene* %14, i32 0, i32 22, !dbg !12420
  %pefra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r11, i32 0, i32 10, !dbg !12420
  %15 = load i32, i32* %pefra, align 4, !dbg !12420
  br label %cond.end, !dbg !12420

cond.false:                                       ; preds = %if.then7
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12420
  %r12 = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 22, !dbg !12420
  %efra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r12, i32 0, i32 7, !dbg !12420
  %17 = load i32, i32* %efra, align 8, !dbg !12420
  br label %cond.end, !dbg !12420

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %17, %cond.false ], !dbg !12420
  %18 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12421
  %nextfra = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %18, i32 0, i32 5, !dbg !12422
  store i32 %cond, i32* %nextfra, align 4, !dbg !12423
  br label %if.end, !dbg !12421

if.else:                                          ; preds = %if.then
  %19 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12424
  %r13 = getelementptr inbounds %struct.Scene, %struct.Scene* %19, i32 0, i32 22, !dbg !12424
  %flag14 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r13, i32 0, i32 13, !dbg !12424
  %20 = load i16, i16* %flag14, align 8, !dbg !12424
  %conv15 = sext i16 %20 to i32, !dbg !12424
  %and16 = and i32 %conv15, 1, !dbg !12424
  %tobool17 = icmp ne i32 %and16, 0, !dbg !12424
  br i1 %tobool17, label %cond.true18, label %cond.false20, !dbg !12424

cond.true18:                                      ; preds = %if.else
  %21 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12424
  %r19 = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 22, !dbg !12424
  %psfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r19, i32 0, i32 9, !dbg !12424
  %22 = load i32, i32* %psfra, align 8, !dbg !12424
  br label %cond.end22, !dbg !12424

cond.false20:                                     ; preds = %if.else
  %23 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12424
  %r21 = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 22, !dbg !12424
  %sfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r21, i32 0, i32 6, !dbg !12424
  %24 = load i32, i32* %sfra, align 4, !dbg !12424
  br label %cond.end22, !dbg !12424

cond.end22:                                       ; preds = %cond.false20, %cond.true18
  %cond23 = phi i32 [ %22, %cond.true18 ], [ %24, %cond.false20 ], !dbg !12424
  %25 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12425
  %nextfra24 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %25, i32 0, i32 5, !dbg !12426
  store i32 %cond23, i32* %nextfra24, align 4, !dbg !12427
  br label %if.end

if.end:                                           ; preds = %cond.end22, %cond.end
  br label %if.end61, !dbg !12428

if.else25:                                        ; preds = %entry
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12429
  %ptr26 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %26, i32 0, i32 7, !dbg !12432
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr26, align 8, !dbg !12432
  %call27 = call i32 @RNA_boolean_get(%struct.PointerRNA* %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0)), !dbg !12433
  %tobool28 = icmp ne i32 %call27, 0, !dbg !12433
  br i1 %tobool28, label %if.then29, label %if.else44, !dbg !12434

if.then29:                                        ; preds = %if.else25
  %28 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12435
  %r30 = getelementptr inbounds %struct.Scene, %struct.Scene* %28, i32 0, i32 22, !dbg !12435
  %flag31 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r30, i32 0, i32 13, !dbg !12435
  %29 = load i16, i16* %flag31, align 8, !dbg !12435
  %conv32 = sext i16 %29 to i32, !dbg !12435
  %and33 = and i32 %conv32, 1, !dbg !12435
  %tobool34 = icmp ne i32 %and33, 0, !dbg !12435
  br i1 %tobool34, label %cond.true35, label %cond.false38, !dbg !12435

cond.true35:                                      ; preds = %if.then29
  %30 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12435
  %r36 = getelementptr inbounds %struct.Scene, %struct.Scene* %30, i32 0, i32 22, !dbg !12435
  %pefra37 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r36, i32 0, i32 10, !dbg !12435
  %31 = load i32, i32* %pefra37, align 4, !dbg !12435
  br label %cond.end41, !dbg !12435

cond.false38:                                     ; preds = %if.then29
  %32 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12435
  %r39 = getelementptr inbounds %struct.Scene, %struct.Scene* %32, i32 0, i32 22, !dbg !12435
  %efra40 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r39, i32 0, i32 7, !dbg !12435
  %33 = load i32, i32* %efra40, align 8, !dbg !12435
  br label %cond.end41, !dbg !12435

cond.end41:                                       ; preds = %cond.false38, %cond.true35
  %cond42 = phi i32 [ %31, %cond.true35 ], [ %33, %cond.false38 ], !dbg !12435
  %34 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12436
  %r43 = getelementptr inbounds %struct.Scene, %struct.Scene* %34, i32 0, i32 22, !dbg !12436
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r43, i32 0, i32 5, !dbg !12436
  store i32 %cond42, i32* %cfra, align 8, !dbg !12437
  br label %if.end60, !dbg !12436

if.else44:                                        ; preds = %if.else25
  %35 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12438
  %r45 = getelementptr inbounds %struct.Scene, %struct.Scene* %35, i32 0, i32 22, !dbg !12438
  %flag46 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r45, i32 0, i32 13, !dbg !12438
  %36 = load i16, i16* %flag46, align 8, !dbg !12438
  %conv47 = sext i16 %36 to i32, !dbg !12438
  %and48 = and i32 %conv47, 1, !dbg !12438
  %tobool49 = icmp ne i32 %and48, 0, !dbg !12438
  br i1 %tobool49, label %cond.true50, label %cond.false53, !dbg !12438

cond.true50:                                      ; preds = %if.else44
  %37 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12438
  %r51 = getelementptr inbounds %struct.Scene, %struct.Scene* %37, i32 0, i32 22, !dbg !12438
  %psfra52 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r51, i32 0, i32 9, !dbg !12438
  %38 = load i32, i32* %psfra52, align 8, !dbg !12438
  br label %cond.end56, !dbg !12438

cond.false53:                                     ; preds = %if.else44
  %39 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12438
  %r54 = getelementptr inbounds %struct.Scene, %struct.Scene* %39, i32 0, i32 22, !dbg !12438
  %sfra55 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r54, i32 0, i32 6, !dbg !12438
  %40 = load i32, i32* %sfra55, align 4, !dbg !12438
  br label %cond.end56, !dbg !12438

cond.end56:                                       ; preds = %cond.false53, %cond.true50
  %cond57 = phi i32 [ %38, %cond.true50 ], [ %40, %cond.false53 ], !dbg !12438
  %41 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12439
  %r58 = getelementptr inbounds %struct.Scene, %struct.Scene* %41, i32 0, i32 22, !dbg !12439
  %cfra59 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r58, i32 0, i32 5, !dbg !12439
  store i32 %cond57, i32* %cfra59, align 8, !dbg !12440
  br label %if.end60

if.end60:                                         ; preds = %cond.end56, %cond.end41
  %42 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !12441
  %43 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12442
  call void @sound_seek_scene(%struct.Main* %42, %struct.Scene* %43), !dbg !12443
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12444
  %45 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12445
  %46 = bitcast %struct.Scene* %45 to i8*, !dbg !12445
  call void @WM_event_add_notifier(%struct.bContext* %44, i32 67305472, i8* %46), !dbg !12446
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end
  ret i32 4, !dbg !12447
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @keyframe_jump_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12448 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %ads = alloca %struct.bDopeSheet, align 8
  %keys = alloca %struct.DLRBT_Tree, align 8
  %ak = alloca %struct.ActKeyColumn*, align 8
  %cfra = alloca float, align 4
  %next = alloca i8, align 1
  %done = alloca i8, align 1
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12449, metadata !DIExpression()), !dbg !12450
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12451, metadata !DIExpression()), !dbg !12452
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !12453, metadata !DIExpression()), !dbg !12454
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12455
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !12456
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !12454
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !12457, metadata !DIExpression()), !dbg !12458
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12459
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !12460
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !12458
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !12461, metadata !DIExpression()), !dbg !12462
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12463
  %call2 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %2), !dbg !12464
  store %struct.Object* %call2, %struct.Object** %ob, align 8, !dbg !12462
  call void @llvm.dbg.declare(metadata %struct.bDopeSheet* %ads, metadata !12465, metadata !DIExpression()), !dbg !12477
  %3 = bitcast %struct.bDopeSheet* %ads to i8*, !dbg !12477
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 112, i1 false), !dbg !12477
  call void @llvm.dbg.declare(metadata %struct.DLRBT_Tree* %keys, metadata !12478, metadata !DIExpression()), !dbg !12486
  call void @llvm.dbg.declare(metadata %struct.ActKeyColumn** %ak, metadata !12487, metadata !DIExpression()), !dbg !12488
  call void @llvm.dbg.declare(metadata float* %cfra, metadata !12489, metadata !DIExpression()), !dbg !12490
  call void @llvm.dbg.declare(metadata i8* %next, metadata !12491, metadata !DIExpression()), !dbg !12492
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12493
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !12494
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !12494
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0)), !dbg !12495
  %conv = trunc i32 %call3 to i8, !dbg !12495
  store i8 %conv, i8* %next, align 1, !dbg !12492
  call void @llvm.dbg.declare(metadata i8* %done, metadata !12496, metadata !DIExpression()), !dbg !12497
  store i8 0, i8* %done, align 1, !dbg !12497
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12498
  %cmp = icmp eq %struct.Scene* %6, null, !dbg !12500
  br i1 %cmp, label %if.then, label %if.end, !dbg !12501

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !12502
  br label %return, !dbg !12502

if.end:                                           ; preds = %entry
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12503
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %7, i32 0, i32 22, !dbg !12503
  %cfra5 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !12503
  %8 = load i32, i32* %cfra5, align 8, !dbg !12503
  %conv6 = sitofp i32 %8 to float, !dbg !12504
  store float %conv6, float* %cfra, align 4, !dbg !12505
  call void @BLI_dlrbTree_init(%struct.DLRBT_Tree* %keys), !dbg !12506
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12507
  %flag = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 15, !dbg !12509
  %10 = load i16, i16* %flag, align 4, !dbg !12509
  %conv7 = sext i16 %10 to i32, !dbg !12507
  %and = and i32 %conv7, 4, !dbg !12510
  %cmp8 = icmp eq i32 %and, 0, !dbg !12511
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !12512

if.then10:                                        ; preds = %if.end
  %filterflag = getelementptr inbounds %struct.bDopeSheet, %struct.bDopeSheet* %ads, i32 0, i32 4, !dbg !12513
  %11 = load i32, i32* %filterflag, align 8, !dbg !12515
  %or = or i32 %11, 1, !dbg !12515
  store i32 %or, i32* %filterflag, align 8, !dbg !12515
  br label %if.end11, !dbg !12516

if.end11:                                         ; preds = %if.then10, %if.end
  %12 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12517
  call void @scene_to_keylist(%struct.bDopeSheet* %ads, %struct.Scene* %12, %struct.DLRBT_Tree* %keys, %struct.DLRBT_Tree* null), !dbg !12518
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12519
  %tobool = icmp ne %struct.Object* %13, null, !dbg !12519
  br i1 %tobool, label %if.then12, label %if.end13, !dbg !12521

if.then12:                                        ; preds = %if.end11
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12522
  call void @ob_to_keylist(%struct.bDopeSheet* %ads, %struct.Object* %14, %struct.DLRBT_Tree* %keys, %struct.DLRBT_Tree* null), !dbg !12523
  br label %if.end13, !dbg !12523

if.end13:                                         ; preds = %if.then12, %if.end11
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !12524, metadata !DIExpression()), !dbg !12528
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12529
  %call14 = call %struct.Mask* @CTX_data_edit_mask(%struct.bContext* %15), !dbg !12530
  store %struct.Mask* %call14, %struct.Mask** %mask, align 8, !dbg !12528
  %16 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !12531
  %tobool15 = icmp ne %struct.Mask* %16, null, !dbg !12531
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !12533

if.then16:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !12534, metadata !DIExpression()), !dbg !12613
  %17 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !12614
  %call17 = call %struct.MaskLayer* @BKE_mask_layer_active(%struct.Mask* %17), !dbg !12615
  store %struct.MaskLayer* %call17, %struct.MaskLayer** %masklay, align 8, !dbg !12613
  %18 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !12616
  call void @mask_to_keylist(%struct.bDopeSheet* %ads, %struct.MaskLayer* %18, %struct.DLRBT_Tree* %keys), !dbg !12617
  br label %if.end18, !dbg !12618

if.end18:                                         ; preds = %if.then16, %if.end13
  call void @BLI_dlrbTree_linkedlist_sync(%struct.DLRBT_Tree* %keys), !dbg !12619
  br label %do.body, !dbg !12620

do.body:                                          ; preds = %land.end, %if.end18
  %19 = load i8, i8* %next, align 1, !dbg !12621
  %tobool19 = icmp ne i8 %19, 0, !dbg !12621
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !12624

if.then20:                                        ; preds = %do.body
  %20 = bitcast float* %cfra to i8*, !dbg !12625
  %call21 = call %struct.DLRBT_Node* @BLI_dlrbTree_search_next(%struct.DLRBT_Tree* %keys, i16 (i8*, i8*)* @compare_ak_cfraPtr, i8* %20), !dbg !12626
  %21 = bitcast %struct.DLRBT_Node* %call21 to %struct.ActKeyColumn*, !dbg !12627
  store %struct.ActKeyColumn* %21, %struct.ActKeyColumn** %ak, align 8, !dbg !12628
  br label %if.end23, !dbg !12629

if.else:                                          ; preds = %do.body
  %22 = bitcast float* %cfra to i8*, !dbg !12630
  %call22 = call %struct.DLRBT_Node* @BLI_dlrbTree_search_prev(%struct.DLRBT_Tree* %keys, i16 (i8*, i8*)* @compare_ak_cfraPtr, i8* %22), !dbg !12631
  %23 = bitcast %struct.DLRBT_Node* %call22 to %struct.ActKeyColumn*, !dbg !12632
  store %struct.ActKeyColumn* %23, %struct.ActKeyColumn** %ak, align 8, !dbg !12633
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then20
  %24 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !12634
  %tobool24 = icmp ne %struct.ActKeyColumn* %24, null, !dbg !12634
  br i1 %tobool24, label %if.then25, label %if.end40, !dbg !12636

if.then25:                                        ; preds = %if.end23
  %25 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12637
  %r26 = getelementptr inbounds %struct.Scene, %struct.Scene* %25, i32 0, i32 22, !dbg !12637
  %cfra27 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r26, i32 0, i32 5, !dbg !12637
  %26 = load i32, i32* %cfra27, align 8, !dbg !12637
  %27 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !12640
  %cfra28 = getelementptr inbounds %struct.ActKeyColumn, %struct.ActKeyColumn* %27, i32 0, i32 8, !dbg !12641
  %28 = load float, float* %cfra28, align 4, !dbg !12641
  %conv29 = fptosi float %28 to i32, !dbg !12642
  %cmp30 = icmp ne i32 %26, %conv29, !dbg !12643
  br i1 %cmp30, label %if.then32, label %if.else37, !dbg !12644

if.then32:                                        ; preds = %if.then25
  %29 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !12645
  %cfra33 = getelementptr inbounds %struct.ActKeyColumn, %struct.ActKeyColumn* %29, i32 0, i32 8, !dbg !12647
  %30 = load float, float* %cfra33, align 4, !dbg !12647
  %conv34 = fptosi float %30 to i32, !dbg !12648
  %31 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12649
  %r35 = getelementptr inbounds %struct.Scene, %struct.Scene* %31, i32 0, i32 22, !dbg !12649
  %cfra36 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r35, i32 0, i32 5, !dbg !12649
  store i32 %conv34, i32* %cfra36, align 8, !dbg !12650
  store i8 1, i8* %done, align 1, !dbg !12651
  br label %if.end39, !dbg !12652

if.else37:                                        ; preds = %if.then25
  %32 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !12653
  %cfra38 = getelementptr inbounds %struct.ActKeyColumn, %struct.ActKeyColumn* %32, i32 0, i32 8, !dbg !12655
  %33 = load float, float* %cfra38, align 4, !dbg !12655
  store float %33, float* %cfra, align 4, !dbg !12656
  br label %if.end39

if.end39:                                         ; preds = %if.else37, %if.then32
  br label %if.end40, !dbg !12657

if.end40:                                         ; preds = %if.end39, %if.end23
  br label %do.cond, !dbg !12658

do.cond:                                          ; preds = %if.end40
  %34 = load %struct.ActKeyColumn*, %struct.ActKeyColumn** %ak, align 8, !dbg !12659
  %cmp41 = icmp ne %struct.ActKeyColumn* %34, null, !dbg !12660
  br i1 %cmp41, label %land.rhs, label %land.end, !dbg !12661

land.rhs:                                         ; preds = %do.cond
  %35 = load i8, i8* %done, align 1, !dbg !12662
  %conv43 = zext i8 %35 to i32, !dbg !12662
  %cmp44 = icmp eq i32 %conv43, 0, !dbg !12663
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %36 = phi i1 [ false, %do.cond ], [ %cmp44, %land.rhs ], !dbg !12664
  br i1 %36, label %do.body, label %do.end, !dbg !12658, !llvm.loop !12665

do.end:                                           ; preds = %land.end
  call void @BLI_dlrbTree_free(%struct.DLRBT_Tree* %keys), !dbg !12667
  %37 = load i8, i8* %done, align 1, !dbg !12668
  %conv46 = zext i8 %37 to i32, !dbg !12668
  %cmp47 = icmp eq i32 %conv46, 0, !dbg !12670
  br i1 %cmp47, label %if.then49, label %if.else50, !dbg !12671

if.then49:                                        ; preds = %do.end
  %38 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12672
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %38, i32 0, i32 8, !dbg !12674
  %39 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !12674
  call void @BKE_report(%struct.ReportList* %39, i32 2, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.165, i64 0, i64 0)), !dbg !12675
  store i32 2, i32* %retval, align 4, !dbg !12676
  br label %return, !dbg !12676

if.else50:                                        ; preds = %do.end
  %40 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !12677
  %41 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12679
  call void @sound_seek_scene(%struct.Main* %40, %struct.Scene* %41), !dbg !12680
  %42 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12681
  %43 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12682
  %44 = bitcast %struct.Scene* %43 to i8*, !dbg !12682
  call void @WM_event_add_notifier(%struct.bContext* %42, i32 67305472, i8* %44), !dbg !12683
  store i32 4, i32* %retval, align 4, !dbg !12684
  br label %return, !dbg !12684

return:                                           ; preds = %if.else50, %if.then49, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !12685
  ret i32 %45, !dbg !12685
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local void @BLI_dlrbTree_init(%struct.DLRBT_Tree*) #2

declare dso_local void @scene_to_keylist(%struct.bDopeSheet*, %struct.Scene*, %struct.DLRBT_Tree*, %struct.DLRBT_Tree*) #2

declare dso_local void @ob_to_keylist(%struct.bDopeSheet*, %struct.Object*, %struct.DLRBT_Tree*, %struct.DLRBT_Tree*) #2

declare dso_local %struct.Mask* @CTX_data_edit_mask(%struct.bContext*) #2

declare dso_local %struct.MaskLayer* @BKE_mask_layer_active(%struct.Mask*) #2

declare dso_local void @mask_to_keylist(%struct.bDopeSheet*, %struct.MaskLayer*, %struct.DLRBT_Tree*) #2

declare dso_local void @BLI_dlrbTree_linkedlist_sync(%struct.DLRBT_Tree*) #2

declare dso_local %struct.DLRBT_Node* @BLI_dlrbTree_search_next(%struct.DLRBT_Tree*, i16 (i8*, i8*)*, i8*) #2

declare dso_local signext i16 @compare_ak_cfraPtr(i8*, i8*) #2

declare dso_local %struct.DLRBT_Node* @BLI_dlrbTree_search_prev(%struct.DLRBT_Tree*, i16 (i8*, i8*)*, i8*) #2

declare dso_local void @BLI_dlrbTree_free(%struct.DLRBT_Tree*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @marker_jump_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12686 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %marker = alloca %struct.TimeMarker*, align 8
  %closest = alloca i32, align 4
  %next = alloca i8, align 1
  %found = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12687, metadata !DIExpression()), !dbg !12688
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12689, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !12691, metadata !DIExpression()), !dbg !12692
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12693
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !12694
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !12692
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !12695, metadata !DIExpression()), !dbg !12696
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12697
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !12698
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !12696
  call void @llvm.dbg.declare(metadata %struct.TimeMarker** %marker, metadata !12699, metadata !DIExpression()), !dbg !12711
  call void @llvm.dbg.declare(metadata i32* %closest, metadata !12712, metadata !DIExpression()), !dbg !12713
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12714
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 22, !dbg !12714
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !12714
  %3 = load i32, i32* %cfra, align 8, !dbg !12714
  store i32 %3, i32* %closest, align 4, !dbg !12713
  call void @llvm.dbg.declare(metadata i8* %next, metadata !12715, metadata !DIExpression()), !dbg !12716
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12717
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !12718
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !12718
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0)), !dbg !12719
  %conv = trunc i32 %call2 to i8, !dbg !12719
  store i8 %conv, i8* %next, align 1, !dbg !12716
  call void @llvm.dbg.declare(metadata i8* %found, metadata !12720, metadata !DIExpression()), !dbg !12721
  store i8 0, i8* %found, align 1, !dbg !12721
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12722
  %markers = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 24, !dbg !12724
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %markers, i32 0, i32 0, !dbg !12725
  %7 = load i8*, i8** %first, align 8, !dbg !12725
  %8 = bitcast i8* %7 to %struct.TimeMarker*, !dbg !12722
  store %struct.TimeMarker* %8, %struct.TimeMarker** %marker, align 8, !dbg !12726
  br label %for.cond, !dbg !12727

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !12728
  %tobool = icmp ne %struct.TimeMarker* %9, null, !dbg !12730
  br i1 %tobool, label %for.body, label %for.end, !dbg !12730

for.body:                                         ; preds = %for.cond
  %10 = load i8, i8* %next, align 1, !dbg !12731
  %tobool3 = icmp ne i8 %10, 0, !dbg !12731
  br i1 %tobool3, label %if.then, label %if.else, !dbg !12734

if.then:                                          ; preds = %for.body
  %11 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !12735
  %frame = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %11, i32 0, i32 2, !dbg !12738
  %12 = load i32, i32* %frame, align 8, !dbg !12738
  %13 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12739
  %r4 = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 22, !dbg !12739
  %cfra5 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r4, i32 0, i32 5, !dbg !12739
  %14 = load i32, i32* %cfra5, align 8, !dbg !12739
  %cmp = icmp sgt i32 %12, %14, !dbg !12740
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !12741

land.lhs.true:                                    ; preds = %if.then
  %15 = load i8, i8* %found, align 1, !dbg !12742
  %tobool7 = icmp ne i8 %15, 0, !dbg !12742
  br i1 %tobool7, label %lor.lhs.false, label %if.then11, !dbg !12743

lor.lhs.false:                                    ; preds = %land.lhs.true
  %16 = load i32, i32* %closest, align 4, !dbg !12744
  %17 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !12745
  %frame8 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %17, i32 0, i32 2, !dbg !12746
  %18 = load i32, i32* %frame8, align 8, !dbg !12746
  %cmp9 = icmp sgt i32 %16, %18, !dbg !12747
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !12748

if.then11:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %19 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !12749
  %frame12 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %19, i32 0, i32 2, !dbg !12751
  %20 = load i32, i32* %frame12, align 8, !dbg !12751
  store i32 %20, i32* %closest, align 4, !dbg !12752
  store i8 1, i8* %found, align 1, !dbg !12753
  br label %if.end, !dbg !12754

if.end:                                           ; preds = %if.then11, %lor.lhs.false, %if.then
  br label %if.end27, !dbg !12755

if.else:                                          ; preds = %for.body
  %21 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !12756
  %frame13 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %21, i32 0, i32 2, !dbg !12759
  %22 = load i32, i32* %frame13, align 8, !dbg !12759
  %23 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12760
  %r14 = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 22, !dbg !12760
  %cfra15 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r14, i32 0, i32 5, !dbg !12760
  %24 = load i32, i32* %cfra15, align 8, !dbg !12760
  %cmp16 = icmp slt i32 %22, %24, !dbg !12761
  br i1 %cmp16, label %land.lhs.true18, label %if.end26, !dbg !12762

land.lhs.true18:                                  ; preds = %if.else
  %25 = load i8, i8* %found, align 1, !dbg !12763
  %tobool19 = icmp ne i8 %25, 0, !dbg !12763
  br i1 %tobool19, label %lor.lhs.false20, label %if.then24, !dbg !12764

lor.lhs.false20:                                  ; preds = %land.lhs.true18
  %26 = load i32, i32* %closest, align 4, !dbg !12765
  %27 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !12766
  %frame21 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %27, i32 0, i32 2, !dbg !12767
  %28 = load i32, i32* %frame21, align 8, !dbg !12767
  %cmp22 = icmp slt i32 %26, %28, !dbg !12768
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !12769

if.then24:                                        ; preds = %lor.lhs.false20, %land.lhs.true18
  %29 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !12770
  %frame25 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %29, i32 0, i32 2, !dbg !12772
  %30 = load i32, i32* %frame25, align 8, !dbg !12772
  store i32 %30, i32* %closest, align 4, !dbg !12773
  store i8 1, i8* %found, align 1, !dbg !12774
  br label %if.end26, !dbg !12775

if.end26:                                         ; preds = %if.then24, %lor.lhs.false20, %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  br label %for.inc, !dbg !12776

for.inc:                                          ; preds = %if.end27
  %31 = load %struct.TimeMarker*, %struct.TimeMarker** %marker, align 8, !dbg !12777
  %next28 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %31, i32 0, i32 0, !dbg !12778
  %32 = load %struct.TimeMarker*, %struct.TimeMarker** %next28, align 8, !dbg !12778
  store %struct.TimeMarker* %32, %struct.TimeMarker** %marker, align 8, !dbg !12779
  br label %for.cond, !dbg !12780, !llvm.loop !12781

for.end:                                          ; preds = %for.cond
  %33 = load i8, i8* %found, align 1, !dbg !12783
  %tobool29 = icmp ne i8 %33, 0, !dbg !12783
  br i1 %tobool29, label %if.else31, label %if.then30, !dbg !12785

if.then30:                                        ; preds = %for.end
  %34 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12786
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %34, i32 0, i32 8, !dbg !12788
  %35 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !12788
  call void @BKE_report(%struct.ReportList* %35, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.170, i64 0, i64 0)), !dbg !12789
  store i32 2, i32* %retval, align 4, !dbg !12790
  br label %return, !dbg !12790

if.else31:                                        ; preds = %for.end
  %36 = load i32, i32* %closest, align 4, !dbg !12791
  %37 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12793
  %r32 = getelementptr inbounds %struct.Scene, %struct.Scene* %37, i32 0, i32 22, !dbg !12793
  %cfra33 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r32, i32 0, i32 5, !dbg !12793
  store i32 %36, i32* %cfra33, align 8, !dbg !12794
  %38 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !12795
  %39 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12796
  call void @sound_seek_scene(%struct.Main* %38, %struct.Scene* %39), !dbg !12797
  %40 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12798
  %41 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12799
  %42 = bitcast %struct.Scene* %41 to i8*, !dbg !12799
  call void @WM_event_add_notifier(%struct.bContext* %40, i32 67305472, i8* %42), !dbg !12800
  store i32 4, i32* %retval, align 4, !dbg !12801
  br label %return, !dbg !12801

return:                                           ; preds = %if.else31, %if.then30
  %43 = load i32, i32* %retval, align 4, !dbg !12802
  ret i32 %43, !dbg !12802
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @screen_animation_step(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %event) #0 !dbg !12803 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %screen = alloca %struct.bScreen*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %wt = alloca %struct.wmTimer*, align 8
  %sad = alloca %struct.ScreenAnimData*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %window = alloca %struct.wmWindow*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %sync = alloca i32, align 4
  %time = alloca float, align 4
  %step = alloca i32, align 4
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12804, metadata !DIExpression()), !dbg !12805
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !12806, metadata !DIExpression()), !dbg !12807
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !12808, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !12810, metadata !DIExpression()), !dbg !12811
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12812
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !12813
  store %struct.bScreen* %call, %struct.bScreen** %screen, align 8, !dbg !12811
  %1 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !12814
  %animtimer = getelementptr inbounds %struct.bScreen, %struct.bScreen* %1, i32 0, i32 21, !dbg !12816
  %2 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !12816
  %tobool = icmp ne %struct.wmTimer* %2, null, !dbg !12814
  br i1 %tobool, label %land.lhs.true, label %if.end204, !dbg !12817

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !12818
  %animtimer1 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %3, i32 0, i32 21, !dbg !12819
  %4 = load %struct.wmTimer*, %struct.wmTimer** %animtimer1, align 8, !dbg !12819
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12820
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 28, !dbg !12821
  %6 = load i8*, i8** %customdata, align 8, !dbg !12821
  %7 = bitcast i8* %6 to %struct.wmTimer*, !dbg !12820
  %cmp = icmp eq %struct.wmTimer* %4, %7, !dbg !12822
  br i1 %cmp, label %if.then, label %if.end204, !dbg !12823

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !12824, metadata !DIExpression()), !dbg !12826
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12827
  %call2 = call %struct.Main* @CTX_data_main(%struct.bContext* %8), !dbg !12828
  store %struct.Main* %call2, %struct.Main** %bmain, align 8, !dbg !12826
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !12829, metadata !DIExpression()), !dbg !12830
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12831
  %call3 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %9), !dbg !12832
  store %struct.Scene* %call3, %struct.Scene** %scene, align 8, !dbg !12830
  call void @llvm.dbg.declare(metadata %struct.wmTimer** %wt, metadata !12833, metadata !DIExpression()), !dbg !12834
  %10 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !12835
  %animtimer4 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %10, i32 0, i32 21, !dbg !12836
  %11 = load %struct.wmTimer*, %struct.wmTimer** %animtimer4, align 8, !dbg !12836
  store %struct.wmTimer* %11, %struct.wmTimer** %wt, align 8, !dbg !12834
  call void @llvm.dbg.declare(metadata %struct.ScreenAnimData** %sad, metadata !12837, metadata !DIExpression()), !dbg !12838
  %12 = load %struct.wmTimer*, %struct.wmTimer** %wt, align 8, !dbg !12839
  %customdata5 = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %12, i32 0, i32 5, !dbg !12840
  %13 = load i8*, i8** %customdata5, align 8, !dbg !12840
  %14 = bitcast i8* %13 to %struct.ScreenAnimData*, !dbg !12839
  store %struct.ScreenAnimData* %14, %struct.ScreenAnimData** %sad, align 8, !dbg !12838
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !12841, metadata !DIExpression()), !dbg !12842
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12843
  %call6 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %15), !dbg !12844
  store %struct.wmWindowManager* %call6, %struct.wmWindowManager** %wm, align 8, !dbg !12842
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window, metadata !12845, metadata !DIExpression()), !dbg !12846
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !12847, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !12849, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.declare(metadata float* %time, metadata !12851, metadata !DIExpression()), !dbg !12852
  %16 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12853
  %flag = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %16, i32 0, i32 3, !dbg !12855
  %17 = load i16, i16* %flag, align 4, !dbg !12855
  %conv = sext i16 %17 to i32, !dbg !12853
  %and = and i32 %conv, 4, !dbg !12856
  %tobool7 = icmp ne i32 %and, 0, !dbg !12856
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !12857

if.then8:                                         ; preds = %if.then
  store i32 1, i32* %sync, align 4, !dbg !12858
  br label %if.end18, !dbg !12859

if.else:                                          ; preds = %if.then
  %18 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12860
  %flag9 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %18, i32 0, i32 3, !dbg !12862
  %19 = load i16, i16* %flag9, align 4, !dbg !12862
  %conv10 = sext i16 %19 to i32, !dbg !12860
  %and11 = and i32 %conv10, 8, !dbg !12863
  %tobool12 = icmp ne i32 %and11, 0, !dbg !12863
  br i1 %tobool12, label %if.then13, label %if.else14, !dbg !12864

if.then13:                                        ; preds = %if.else
  store i32 0, i32* %sync, align 4, !dbg !12865
  br label %if.end, !dbg !12866

if.else14:                                        ; preds = %if.else
  %20 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12867
  %flag15 = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 15, !dbg !12868
  %21 = load i16, i16* %flag15, align 4, !dbg !12868
  %conv16 = sext i16 %21 to i32, !dbg !12867
  %and17 = and i32 %conv16, 8, !dbg !12869
  store i32 %and17, i32* %sync, align 4, !dbg !12870
  br label %if.end

if.end:                                           ; preds = %if.else14, %if.then13
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then8
  %22 = load i32, i32* %sync, align 4, !dbg !12871
  %tobool19 = icmp ne i32 %22, 0, !dbg !12871
  br i1 %tobool19, label %if.then20, label %if.else37, !dbg !12873

if.then20:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i32* %step, metadata !12874, metadata !DIExpression()), !dbg !12876
  %23 = load %struct.wmTimer*, %struct.wmTimer** %wt, align 8, !dbg !12877
  %duration = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %23, i32 0, i32 6, !dbg !12878
  %24 = load double, double* %duration, align 8, !dbg !12878
  %25 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12879
  %last_duration = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %25, i32 0, i32 6, !dbg !12880
  %26 = load double, double* %last_duration, align 8, !dbg !12880
  %sub = fsub double %24, %26, !dbg !12881
  %27 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12882
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %27, i32 0, i32 22, !dbg !12882
  %frs_sec = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 55, !dbg !12882
  %28 = load i16, i16* %frs_sec, align 4, !dbg !12882
  %conv21 = sitofp i16 %28 to double, !dbg !12882
  %29 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12882
  %r22 = getelementptr inbounds %struct.Scene, %struct.Scene* %29, i32 0, i32 22, !dbg !12882
  %frs_sec_base = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r22, i32 0, i32 65, !dbg !12882
  %30 = load float, float* %frs_sec_base, align 4, !dbg !12882
  %conv23 = fpext float %30 to double, !dbg !12882
  %div = fdiv double %conv21, %conv23, !dbg !12882
  %mul = fmul double %sub, %div, !dbg !12883
  %31 = call double @llvm.floor.f64(double %mul), !dbg !12884
  %conv24 = fptosi double %31 to i32, !dbg !12884
  %call25 = call i32 @max_ii(i32 1, i32 %conv24), !dbg !12885
  store i32 %call25, i32* %step, align 4, !dbg !12876
  %32 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12886
  %flag26 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %32, i32 0, i32 3, !dbg !12888
  %33 = load i16, i16* %flag26, align 4, !dbg !12888
  %conv27 = sext i16 %33 to i32, !dbg !12886
  %and28 = and i32 %conv27, 1, !dbg !12889
  %tobool29 = icmp ne i32 %and28, 0, !dbg !12889
  br i1 %tobool29, label %if.then30, label %if.else33, !dbg !12890

if.then30:                                        ; preds = %if.then20
  %34 = load i32, i32* %step, align 4, !dbg !12891
  %35 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12892
  %r31 = getelementptr inbounds %struct.Scene, %struct.Scene* %35, i32 0, i32 22, !dbg !12893
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r31, i32 0, i32 5, !dbg !12894
  %36 = load i32, i32* %cfra, align 8, !dbg !12895
  %sub32 = sub nsw i32 %36, %34, !dbg !12895
  store i32 %sub32, i32* %cfra, align 8, !dbg !12895
  br label %if.end36, !dbg !12892

if.else33:                                        ; preds = %if.then20
  %37 = load i32, i32* %step, align 4, !dbg !12896
  %38 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12897
  %r34 = getelementptr inbounds %struct.Scene, %struct.Scene* %38, i32 0, i32 22, !dbg !12898
  %cfra35 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r34, i32 0, i32 5, !dbg !12899
  %39 = load i32, i32* %cfra35, align 8, !dbg !12900
  %add = add nsw i32 %39, %37, !dbg !12900
  store i32 %add, i32* %cfra35, align 8, !dbg !12900
  br label %if.end36

if.end36:                                         ; preds = %if.else33, %if.then30
  br label %if.end49, !dbg !12901

if.else37:                                        ; preds = %if.end18
  %40 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12902
  %flag38 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %40, i32 0, i32 3, !dbg !12905
  %41 = load i16, i16* %flag38, align 4, !dbg !12905
  %conv39 = sext i16 %41 to i32, !dbg !12902
  %and40 = and i32 %conv39, 1, !dbg !12906
  %tobool41 = icmp ne i32 %and40, 0, !dbg !12906
  br i1 %tobool41, label %if.then42, label %if.else45, !dbg !12907

if.then42:                                        ; preds = %if.else37
  %42 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12908
  %r43 = getelementptr inbounds %struct.Scene, %struct.Scene* %42, i32 0, i32 22, !dbg !12909
  %cfra44 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r43, i32 0, i32 5, !dbg !12910
  %43 = load i32, i32* %cfra44, align 8, !dbg !12911
  %dec = add nsw i32 %43, -1, !dbg !12911
  store i32 %dec, i32* %cfra44, align 8, !dbg !12911
  br label %if.end48, !dbg !12908

if.else45:                                        ; preds = %if.else37
  %44 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12912
  %r46 = getelementptr inbounds %struct.Scene, %struct.Scene* %44, i32 0, i32 22, !dbg !12913
  %cfra47 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r46, i32 0, i32 5, !dbg !12914
  %45 = load i32, i32* %cfra47, align 8, !dbg !12915
  %inc = add nsw i32 %45, 1, !dbg !12915
  store i32 %inc, i32* %cfra47, align 8, !dbg !12915
  br label %if.end48

if.end48:                                         ; preds = %if.else45, %if.then42
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end36
  %46 = load %struct.wmTimer*, %struct.wmTimer** %wt, align 8, !dbg !12916
  %duration50 = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %46, i32 0, i32 6, !dbg !12917
  %47 = load double, double* %duration50, align 8, !dbg !12917
  %48 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12918
  %last_duration51 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %48, i32 0, i32 6, !dbg !12919
  store double %47, double* %last_duration51, align 8, !dbg !12920
  %49 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12921
  %flag52 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %49, i32 0, i32 3, !dbg !12922
  %50 = load i16, i16* %flag52, align 4, !dbg !12923
  %conv53 = sext i16 %50 to i32, !dbg !12923
  %and54 = and i32 %conv53, -3, !dbg !12923
  %conv55 = trunc i32 %and54 to i16, !dbg !12923
  store i16 %conv55, i16* %flag52, align 4, !dbg !12923
  %51 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12924
  %flag56 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %51, i32 0, i32 3, !dbg !12926
  %52 = load i16, i16* %flag56, align 4, !dbg !12926
  %conv57 = sext i16 %52 to i32, !dbg !12924
  %and58 = and i32 %conv57, 1, !dbg !12927
  %tobool59 = icmp ne i32 %and58, 0, !dbg !12927
  br i1 %tobool59, label %if.then60, label %if.else96, !dbg !12928

if.then60:                                        ; preds = %if.end49
  %53 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12929
  %r61 = getelementptr inbounds %struct.Scene, %struct.Scene* %53, i32 0, i32 22, !dbg !12929
  %flag62 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r61, i32 0, i32 13, !dbg !12929
  %54 = load i16, i16* %flag62, align 8, !dbg !12929
  %conv63 = sext i16 %54 to i32, !dbg !12929
  %and64 = and i32 %conv63, 1, !dbg !12929
  %tobool65 = icmp ne i32 %and64, 0, !dbg !12929
  br i1 %tobool65, label %if.then66, label %if.else80, !dbg !12932

if.then66:                                        ; preds = %if.then60
  %55 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12933
  %r67 = getelementptr inbounds %struct.Scene, %struct.Scene* %55, i32 0, i32 22, !dbg !12936
  %cfra68 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r67, i32 0, i32 5, !dbg !12937
  %56 = load i32, i32* %cfra68, align 8, !dbg !12937
  %57 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12938
  %r69 = getelementptr inbounds %struct.Scene, %struct.Scene* %57, i32 0, i32 22, !dbg !12939
  %psfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r69, i32 0, i32 9, !dbg !12940
  %58 = load i32, i32* %psfra, align 8, !dbg !12940
  %cmp70 = icmp slt i32 %56, %58, !dbg !12941
  br i1 %cmp70, label %if.then72, label %if.end79, !dbg !12942

if.then72:                                        ; preds = %if.then66
  %59 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12943
  %r73 = getelementptr inbounds %struct.Scene, %struct.Scene* %59, i32 0, i32 22, !dbg !12945
  %pefra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r73, i32 0, i32 10, !dbg !12946
  %60 = load i32, i32* %pefra, align 4, !dbg !12946
  %61 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12947
  %r74 = getelementptr inbounds %struct.Scene, %struct.Scene* %61, i32 0, i32 22, !dbg !12948
  %cfra75 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r74, i32 0, i32 5, !dbg !12949
  store i32 %60, i32* %cfra75, align 8, !dbg !12950
  %62 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12951
  %flag76 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %62, i32 0, i32 3, !dbg !12952
  %63 = load i16, i16* %flag76, align 4, !dbg !12953
  %conv77 = sext i16 %63 to i32, !dbg !12953
  %or = or i32 %conv77, 2, !dbg !12953
  %conv78 = trunc i32 %or to i16, !dbg !12953
  store i16 %conv78, i16* %flag76, align 4, !dbg !12953
  br label %if.end79, !dbg !12954

if.end79:                                         ; preds = %if.then72, %if.then66
  br label %if.end95, !dbg !12955

if.else80:                                        ; preds = %if.then60
  %64 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12956
  %r81 = getelementptr inbounds %struct.Scene, %struct.Scene* %64, i32 0, i32 22, !dbg !12959
  %cfra82 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r81, i32 0, i32 5, !dbg !12960
  %65 = load i32, i32* %cfra82, align 8, !dbg !12960
  %66 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12961
  %r83 = getelementptr inbounds %struct.Scene, %struct.Scene* %66, i32 0, i32 22, !dbg !12962
  %sfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r83, i32 0, i32 6, !dbg !12963
  %67 = load i32, i32* %sfra, align 4, !dbg !12963
  %cmp84 = icmp slt i32 %65, %67, !dbg !12964
  br i1 %cmp84, label %if.then86, label %if.end94, !dbg !12965

if.then86:                                        ; preds = %if.else80
  %68 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12966
  %r87 = getelementptr inbounds %struct.Scene, %struct.Scene* %68, i32 0, i32 22, !dbg !12968
  %efra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r87, i32 0, i32 7, !dbg !12969
  %69 = load i32, i32* %efra, align 8, !dbg !12969
  %70 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12970
  %r88 = getelementptr inbounds %struct.Scene, %struct.Scene* %70, i32 0, i32 22, !dbg !12971
  %cfra89 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r88, i32 0, i32 5, !dbg !12972
  store i32 %69, i32* %cfra89, align 8, !dbg !12973
  %71 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !12974
  %flag90 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %71, i32 0, i32 3, !dbg !12975
  %72 = load i16, i16* %flag90, align 4, !dbg !12976
  %conv91 = sext i16 %72 to i32, !dbg !12976
  %or92 = or i32 %conv91, 2, !dbg !12976
  %conv93 = trunc i32 %or92 to i16, !dbg !12976
  store i16 %conv93, i16* %flag90, align 4, !dbg !12976
  br label %if.end94, !dbg !12977

if.end94:                                         ; preds = %if.then86, %if.else80
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.end79
  br label %if.end137, !dbg !12978

if.else96:                                        ; preds = %if.end49
  %73 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12979
  %r97 = getelementptr inbounds %struct.Scene, %struct.Scene* %73, i32 0, i32 22, !dbg !12979
  %flag98 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r97, i32 0, i32 13, !dbg !12979
  %74 = load i16, i16* %flag98, align 8, !dbg !12979
  %conv99 = sext i16 %74 to i32, !dbg !12979
  %and100 = and i32 %conv99, 1, !dbg !12979
  %tobool101 = icmp ne i32 %and100, 0, !dbg !12979
  br i1 %tobool101, label %if.then102, label %if.else119, !dbg !12982

if.then102:                                       ; preds = %if.else96
  %75 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12983
  %r103 = getelementptr inbounds %struct.Scene, %struct.Scene* %75, i32 0, i32 22, !dbg !12986
  %cfra104 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r103, i32 0, i32 5, !dbg !12987
  %76 = load i32, i32* %cfra104, align 8, !dbg !12987
  %77 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12988
  %r105 = getelementptr inbounds %struct.Scene, %struct.Scene* %77, i32 0, i32 22, !dbg !12989
  %pefra106 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r105, i32 0, i32 10, !dbg !12990
  %78 = load i32, i32* %pefra106, align 4, !dbg !12990
  %cmp107 = icmp sgt i32 %76, %78, !dbg !12991
  br i1 %cmp107, label %if.then109, label %if.end118, !dbg !12992

if.then109:                                       ; preds = %if.then102
  %79 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12993
  %r110 = getelementptr inbounds %struct.Scene, %struct.Scene* %79, i32 0, i32 22, !dbg !12995
  %psfra111 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r110, i32 0, i32 9, !dbg !12996
  %80 = load i32, i32* %psfra111, align 8, !dbg !12996
  %81 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12997
  %r112 = getelementptr inbounds %struct.Scene, %struct.Scene* %81, i32 0, i32 22, !dbg !12998
  %cfra113 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r112, i32 0, i32 5, !dbg !12999
  store i32 %80, i32* %cfra113, align 8, !dbg !13000
  %82 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !13001
  %flag114 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %82, i32 0, i32 3, !dbg !13002
  %83 = load i16, i16* %flag114, align 4, !dbg !13003
  %conv115 = sext i16 %83 to i32, !dbg !13003
  %or116 = or i32 %conv115, 2, !dbg !13003
  %conv117 = trunc i32 %or116 to i16, !dbg !13003
  store i16 %conv117, i16* %flag114, align 4, !dbg !13003
  br label %if.end118, !dbg !13004

if.end118:                                        ; preds = %if.then109, %if.then102
  br label %if.end136, !dbg !13005

if.else119:                                       ; preds = %if.else96
  %84 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13006
  %r120 = getelementptr inbounds %struct.Scene, %struct.Scene* %84, i32 0, i32 22, !dbg !13009
  %cfra121 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r120, i32 0, i32 5, !dbg !13010
  %85 = load i32, i32* %cfra121, align 8, !dbg !13010
  %86 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13011
  %r122 = getelementptr inbounds %struct.Scene, %struct.Scene* %86, i32 0, i32 22, !dbg !13012
  %efra123 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r122, i32 0, i32 7, !dbg !13013
  %87 = load i32, i32* %efra123, align 8, !dbg !13013
  %cmp124 = icmp sgt i32 %85, %87, !dbg !13014
  br i1 %cmp124, label %if.then126, label %if.end135, !dbg !13015

if.then126:                                       ; preds = %if.else119
  %88 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13016
  %r127 = getelementptr inbounds %struct.Scene, %struct.Scene* %88, i32 0, i32 22, !dbg !13018
  %sfra128 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r127, i32 0, i32 6, !dbg !13019
  %89 = load i32, i32* %sfra128, align 4, !dbg !13019
  %90 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13020
  %r129 = getelementptr inbounds %struct.Scene, %struct.Scene* %90, i32 0, i32 22, !dbg !13021
  %cfra130 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r129, i32 0, i32 5, !dbg !13022
  store i32 %89, i32* %cfra130, align 8, !dbg !13023
  %91 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !13024
  %flag131 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %91, i32 0, i32 3, !dbg !13025
  %92 = load i16, i16* %flag131, align 4, !dbg !13026
  %conv132 = sext i16 %92 to i32, !dbg !13026
  %or133 = or i32 %conv132, 2, !dbg !13026
  %conv134 = trunc i32 %or133 to i16, !dbg !13026
  store i16 %conv134, i16* %flag131, align 4, !dbg !13026
  br label %if.end135, !dbg !13027

if.end135:                                        ; preds = %if.then126, %if.else119
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.end118
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end95
  %93 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !13028
  %flag138 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %93, i32 0, i32 3, !dbg !13030
  %94 = load i16, i16* %flag138, align 4, !dbg !13030
  %conv139 = sext i16 %94 to i32, !dbg !13028
  %and140 = and i32 %conv139, 16, !dbg !13031
  %tobool141 = icmp ne i32 %and140, 0, !dbg !13031
  br i1 %tobool141, label %if.then142, label %if.end153, !dbg !13032

if.then142:                                       ; preds = %if.end137
  %95 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !13033
  %nextfra = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %95, i32 0, i32 5, !dbg !13035
  %96 = load i32, i32* %nextfra, align 4, !dbg !13035
  %97 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13036
  %r143 = getelementptr inbounds %struct.Scene, %struct.Scene* %97, i32 0, i32 22, !dbg !13037
  %cfra144 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r143, i32 0, i32 5, !dbg !13038
  store i32 %96, i32* %cfra144, align 8, !dbg !13039
  %98 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !13040
  %flag145 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %98, i32 0, i32 3, !dbg !13041
  %99 = load i16, i16* %flag145, align 4, !dbg !13042
  %conv146 = sext i16 %99 to i32, !dbg !13042
  %and147 = and i32 %conv146, -17, !dbg !13042
  %conv148 = trunc i32 %and147 to i16, !dbg !13042
  store i16 %conv148, i16* %flag145, align 4, !dbg !13042
  %100 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !13043
  %flag149 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %100, i32 0, i32 3, !dbg !13044
  %101 = load i16, i16* %flag149, align 4, !dbg !13045
  %conv150 = sext i16 %101 to i32, !dbg !13045
  %or151 = or i32 %conv150, 2, !dbg !13045
  %conv152 = trunc i32 %or151 to i16, !dbg !13045
  store i16 %conv152, i16* %flag149, align 4, !dbg !13045
  br label %if.end153, !dbg !13046

if.end153:                                        ; preds = %if.then142, %if.end137
  %102 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !13047
  %flag154 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %102, i32 0, i32 3, !dbg !13049
  %103 = load i16, i16* %flag154, align 4, !dbg !13049
  %conv155 = sext i16 %103 to i32, !dbg !13047
  %and156 = and i32 %conv155, 2, !dbg !13050
  %tobool157 = icmp ne i32 %and156, 0, !dbg !13050
  br i1 %tobool157, label %if.then158, label %if.end159, !dbg !13051

if.then158:                                       ; preds = %if.end153
  %104 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !13052
  %105 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13053
  call void @sound_seek_scene(%struct.Main* %104, %struct.Scene* %105), !dbg !13054
  br label %if.end159, !dbg !13054

if.end159:                                        ; preds = %if.then158, %if.end153
  %106 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !13055
  %107 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13056
  call void @ED_update_for_newframe(%struct.Main* %106, %struct.Scene* %107, i32 1), !dbg !13057
  %108 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !13058
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %108, i32 0, i32 3, !dbg !13060
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !13061
  %109 = load i8*, i8** %first, align 8, !dbg !13061
  %110 = bitcast i8* %109 to %struct.wmWindow*, !dbg !13058
  store %struct.wmWindow* %110, %struct.wmWindow** %window, align 8, !dbg !13062
  br label %for.cond, !dbg !13063

for.cond:                                         ; preds = %for.inc193, %if.end159
  %111 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !13064
  %tobool160 = icmp ne %struct.wmWindow* %111, null, !dbg !13066
  br i1 %tobool160, label %for.body, label %for.end195, !dbg !13066

for.body:                                         ; preds = %for.cond
  %112 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !13067
  %screen161 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %112, i32 0, i32 3, !dbg !13070
  %113 = load %struct.bScreen*, %struct.bScreen** %screen161, align 8, !dbg !13070
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %113, i32 0, i32 3, !dbg !13071
  %first162 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !13072
  %114 = load i8*, i8** %first162, align 8, !dbg !13072
  %115 = bitcast i8* %114 to %struct.ScrArea*, !dbg !13067
  store %struct.ScrArea* %115, %struct.ScrArea** %sa, align 8, !dbg !13073
  br label %for.cond163, !dbg !13074

for.cond163:                                      ; preds = %for.inc190, %for.body
  %116 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !13075
  %tobool164 = icmp ne %struct.ScrArea* %116, null, !dbg !13077
  br i1 %tobool164, label %for.body165, label %for.end192, !dbg !13077

for.body165:                                      ; preds = %for.cond163
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !13078, metadata !DIExpression()), !dbg !13080
  %117 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !13081
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %117, i32 0, i32 20, !dbg !13083
  %first166 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !13084
  %118 = load i8*, i8** %first166, align 8, !dbg !13084
  %119 = bitcast i8* %118 to %struct.ARegion*, !dbg !13081
  store %struct.ARegion* %119, %struct.ARegion** %ar, align 8, !dbg !13085
  br label %for.cond167, !dbg !13086

for.cond167:                                      ; preds = %for.inc, %for.body165
  %120 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !13087
  %tobool168 = icmp ne %struct.ARegion* %120, null, !dbg !13089
  br i1 %tobool168, label %for.body169, label %for.end, !dbg !13089

for.body169:                                      ; preds = %for.cond167
  %121 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !13090
  %122 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !13093
  %ar170 = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %122, i32 0, i32 0, !dbg !13094
  %123 = load %struct.ARegion*, %struct.ARegion** %ar170, align 8, !dbg !13094
  %cmp171 = icmp eq %struct.ARegion* %121, %123, !dbg !13095
  br i1 %cmp171, label %if.then173, label %if.else174, !dbg !13096

if.then173:                                       ; preds = %for.body169
  %124 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !13097
  call void @ED_region_tag_redraw(%struct.ARegion* %124), !dbg !13099
  br label %if.end182, !dbg !13100

if.else174:                                       ; preds = %for.body169
  %125 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !13101
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %125, i32 0, i32 8, !dbg !13103
  %126 = load i8, i8* %spacetype, align 8, !dbg !13103
  %conv175 = zext i8 %126 to i32, !dbg !13101
  %127 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !13104
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %127, i32 0, i32 8, !dbg !13105
  %128 = load i16, i16* %regiontype, align 2, !dbg !13105
  %conv176 = sext i16 %128 to i32, !dbg !13104
  %129 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !13106
  %redraws = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %129, i32 0, i32 1, !dbg !13107
  %130 = load i16, i16* %redraws, align 8, !dbg !13107
  %conv177 = sext i16 %130 to i32, !dbg !13106
  %call178 = call i32 @match_region_with_redraws(i32 %conv175, i32 %conv176, i32 %conv177), !dbg !13108
  %tobool179 = icmp ne i32 %call178, 0, !dbg !13108
  br i1 %tobool179, label %if.then180, label %if.end181, !dbg !13109

if.then180:                                       ; preds = %if.else174
  %131 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !13110
  call void @ED_region_tag_redraw(%struct.ARegion* %131), !dbg !13112
  br label %if.end181, !dbg !13113

if.end181:                                        ; preds = %if.then180, %if.else174
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.then173
  br label %for.inc, !dbg !13114

for.inc:                                          ; preds = %if.end182
  %132 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !13115
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %132, i32 0, i32 0, !dbg !13116
  %133 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !13116
  store %struct.ARegion* %133, %struct.ARegion** %ar, align 8, !dbg !13117
  br label %for.cond167, !dbg !13118, !llvm.loop !13119

for.end:                                          ; preds = %for.cond167
  %134 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !13121
  %spacetype183 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %134, i32 0, i32 8, !dbg !13123
  %135 = load i8, i8* %spacetype183, align 8, !dbg !13123
  %conv184 = zext i8 %135 to i32, !dbg !13121
  %136 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !13124
  %refresh = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %136, i32 0, i32 2, !dbg !13125
  %137 = load i16, i16* %refresh, align 2, !dbg !13125
  %conv185 = sext i16 %137 to i32, !dbg !13124
  %call186 = call i32 @match_area_with_refresh(i32 %conv184, i32 %conv185), !dbg !13126
  %tobool187 = icmp ne i32 %call186, 0, !dbg !13126
  br i1 %tobool187, label %if.then188, label %if.end189, !dbg !13127

if.then188:                                       ; preds = %for.end
  %138 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !13128
  call void @ED_area_tag_refresh(%struct.ScrArea* %138), !dbg !13129
  br label %if.end189, !dbg !13129

if.end189:                                        ; preds = %if.then188, %for.end
  br label %for.inc190, !dbg !13130

for.inc190:                                       ; preds = %if.end189
  %139 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !13131
  %next191 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %139, i32 0, i32 0, !dbg !13132
  %140 = load %struct.ScrArea*, %struct.ScrArea** %next191, align 8, !dbg !13132
  store %struct.ScrArea* %140, %struct.ScrArea** %sa, align 8, !dbg !13133
  br label %for.cond163, !dbg !13134, !llvm.loop !13135

for.end192:                                       ; preds = %for.cond163
  br label %for.inc193, !dbg !13137

for.inc193:                                       ; preds = %for.end192
  %141 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !13138
  %next194 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %141, i32 0, i32 0, !dbg !13139
  %142 = load %struct.wmWindow*, %struct.wmWindow** %next194, align 8, !dbg !13139
  store %struct.wmWindow* %142, %struct.wmWindow** %window, align 8, !dbg !13140
  br label %for.cond, !dbg !13141, !llvm.loop !13142

for.end195:                                       ; preds = %for.cond
  %143 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13144
  call void @ED_refresh_viewport_fps(%struct.bContext* %143), !dbg !13145
  %144 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13146
  %r196 = getelementptr inbounds %struct.Scene, %struct.Scene* %144, i32 0, i32 22, !dbg !13146
  %frs_sec197 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r196, i32 0, i32 55, !dbg !13146
  %145 = load i16, i16* %frs_sec197, align 4, !dbg !13146
  %conv198 = sitofp i16 %145 to double, !dbg !13146
  %146 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13146
  %r199 = getelementptr inbounds %struct.Scene, %struct.Scene* %146, i32 0, i32 22, !dbg !13146
  %frs_sec_base200 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r199, i32 0, i32 65, !dbg !13146
  %147 = load float, float* %frs_sec_base200, align 4, !dbg !13146
  %conv201 = fpext float %147 to double, !dbg !13146
  %div202 = fdiv double %conv198, %conv201, !dbg !13146
  %div203 = fdiv double 1.000000e+00, %div202, !dbg !13147
  %148 = load %struct.wmTimer*, %struct.wmTimer** %wt, align 8, !dbg !13148
  %timestep = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %148, i32 0, i32 3, !dbg !13149
  store double %div203, double* %timestep, align 8, !dbg !13150
  store i32 4, i32* %retval, align 4, !dbg !13151
  br label %return, !dbg !13151

if.end204:                                        ; preds = %land.lhs.true, %entry
  store i32 8, i32* %retval, align 4, !dbg !13152
  br label %return, !dbg !13152

return:                                           ; preds = %if.end204, %for.end195
  %149 = load i32, i32* %retval, align 4, !dbg !13153
  ret i32 %149, !dbg !13153
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !13154 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !13155, metadata !DIExpression()), !dbg !13156
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13157, metadata !DIExpression()), !dbg !13158
  %0 = load i32, i32* %b.addr, align 4, !dbg !13159
  %1 = load i32, i32* %a.addr, align 4, !dbg !13160
  %cmp = icmp slt i32 %0, %1, !dbg !13161
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13162

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !13163
  br label %cond.end, !dbg !13162

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !13164
  br label %cond.end, !dbg !13162

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !13162
  ret i32 %cond, !dbg !13165
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

declare dso_local void @ED_update_for_newframe(%struct.Main*, %struct.Scene*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @match_region_with_redraws(i32 %spacetype, i32 %regiontype, i32 %redraws) #0 !dbg !13166 {
entry:
  %retval = alloca i32, align 4
  %spacetype.addr = alloca i32, align 4
  %regiontype.addr = alloca i32, align 4
  %redraws.addr = alloca i32, align 4
  store i32 %spacetype, i32* %spacetype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spacetype.addr, metadata !13169, metadata !DIExpression()), !dbg !13170
  store i32 %regiontype, i32* %regiontype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regiontype.addr, metadata !13171, metadata !DIExpression()), !dbg !13172
  store i32 %redraws, i32* %redraws.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %redraws.addr, metadata !13173, metadata !DIExpression()), !dbg !13174
  %0 = load i32, i32* %regiontype.addr, align 4, !dbg !13175
  %cmp = icmp eq i32 %0, 0, !dbg !13177
  br i1 %cmp, label %if.then, label %if.else, !dbg !13178

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %spacetype.addr, align 4, !dbg !13179
  switch i32 %1, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 12, label %sw.bb2
    i32 13, label %sw.bb2
    i32 15, label %sw.bb7
    i32 4, label %sw.bb12
    i32 8, label %sw.bb17
    i32 16, label %sw.bb22
    i32 6, label %sw.bb27
    i32 20, label %sw.bb32
  ], !dbg !13181

sw.bb:                                            ; preds = %if.then
  %2 = load i32, i32* %redraws.addr, align 4, !dbg !13182
  %and = and i32 %2, 2, !dbg !13185
  %tobool = icmp ne i32 %and, 0, !dbg !13185
  br i1 %tobool, label %if.then1, label %if.end, !dbg !13186

if.then1:                                         ; preds = %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !13187
  br label %return, !dbg !13187

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !13188

sw.bb2:                                           ; preds = %if.then, %if.then, %if.then
  %3 = load i32, i32* %redraws.addr, align 4, !dbg !13189
  %and3 = and i32 %3, 4, !dbg !13191
  %tobool4 = icmp ne i32 %and3, 0, !dbg !13191
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !13192

if.then5:                                         ; preds = %sw.bb2
  store i32 1, i32* %retval, align 4, !dbg !13193
  br label %return, !dbg !13193

if.end6:                                          ; preds = %sw.bb2
  br label %sw.epilog, !dbg !13194

sw.bb7:                                           ; preds = %if.then
  %4 = load i32, i32* %redraws.addr, align 4, !dbg !13195
  %and8 = and i32 %4, 7, !dbg !13197
  %tobool9 = icmp ne i32 %and8, 0, !dbg !13197
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !13198

if.then10:                                        ; preds = %sw.bb7
  store i32 1, i32* %retval, align 4, !dbg !13199
  br label %return, !dbg !13199

if.end11:                                         ; preds = %sw.bb7
  br label %sw.epilog, !dbg !13200

sw.bb12:                                          ; preds = %if.then
  %5 = load i32, i32* %redraws.addr, align 4, !dbg !13201
  %and13 = and i32 %5, 8, !dbg !13203
  %tobool14 = icmp ne i32 %and13, 0, !dbg !13203
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !13204

if.then15:                                        ; preds = %sw.bb12
  store i32 1, i32* %retval, align 4, !dbg !13205
  br label %return, !dbg !13205

if.end16:                                         ; preds = %sw.bb12
  br label %sw.epilog, !dbg !13206

sw.bb17:                                          ; preds = %if.then
  %6 = load i32, i32* %redraws.addr, align 4, !dbg !13207
  %and18 = and i32 %6, 36, !dbg !13209
  %tobool19 = icmp ne i32 %and18, 0, !dbg !13209
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !13210

if.then20:                                        ; preds = %sw.bb17
  store i32 1, i32* %retval, align 4, !dbg !13211
  br label %return, !dbg !13211

if.end21:                                         ; preds = %sw.bb17
  br label %sw.epilog, !dbg !13212

sw.bb22:                                          ; preds = %if.then
  %7 = load i32, i32* %redraws.addr, align 4, !dbg !13213
  %and23 = and i32 %7, 256, !dbg !13215
  %tobool24 = icmp ne i32 %and23, 0, !dbg !13215
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !13216

if.then25:                                        ; preds = %sw.bb22
  store i32 1, i32* %retval, align 4, !dbg !13217
  br label %return, !dbg !13217

if.end26:                                         ; preds = %sw.bb22
  br label %sw.epilog, !dbg !13218

sw.bb27:                                          ; preds = %if.then
  %8 = load i32, i32* %redraws.addr, align 4, !dbg !13219
  %and28 = and i32 %8, 64, !dbg !13221
  %tobool29 = icmp ne i32 %and28, 0, !dbg !13221
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !13222

if.then30:                                        ; preds = %sw.bb27
  store i32 1, i32* %retval, align 4, !dbg !13223
  br label %return, !dbg !13223

if.end31:                                         ; preds = %sw.bb27
  br label %sw.epilog, !dbg !13224

sw.bb32:                                          ; preds = %if.then
  %9 = load i32, i32* %redraws.addr, align 4, !dbg !13225
  %and33 = and i32 %9, 512, !dbg !13227
  %tobool34 = icmp ne i32 %and33, 0, !dbg !13227
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !13228

if.then35:                                        ; preds = %sw.bb32
  store i32 1, i32* %retval, align 4, !dbg !13229
  br label %return, !dbg !13229

if.end36:                                         ; preds = %sw.bb32
  br label %sw.epilog, !dbg !13230

sw.epilog:                                        ; preds = %if.then, %if.end36, %if.end31, %if.end26, %if.end21, %if.end16, %if.end11, %if.end6, %if.end
  br label %if.end75, !dbg !13231

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %regiontype.addr, align 4, !dbg !13232
  %cmp37 = icmp eq i32 %10, 2, !dbg !13234
  br i1 %cmp37, label %if.then38, label %if.else45, !dbg !13235

if.then38:                                        ; preds = %if.else
  %11 = load i32, i32* %spacetype.addr, align 4, !dbg !13236
  switch i32 %11, label %sw.epilog44 [
    i32 2, label %sw.bb39
    i32 12, label %sw.bb39
    i32 13, label %sw.bb39
  ], !dbg !13238

sw.bb39:                                          ; preds = %if.then38, %if.then38, %if.then38
  %12 = load i32, i32* %redraws.addr, align 4, !dbg !13239
  %and40 = and i32 %12, 4, !dbg !13242
  %tobool41 = icmp ne i32 %and40, 0, !dbg !13242
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !13243

if.then42:                                        ; preds = %sw.bb39
  store i32 1, i32* %retval, align 4, !dbg !13244
  br label %return, !dbg !13244

if.end43:                                         ; preds = %sw.bb39
  br label %sw.epilog44, !dbg !13245

sw.epilog44:                                      ; preds = %if.then38, %if.end43
  br label %if.end74, !dbg !13246

if.else45:                                        ; preds = %if.else
  %13 = load i32, i32* %regiontype.addr, align 4, !dbg !13247
  %cmp46 = icmp eq i32 %13, 4, !dbg !13249
  br i1 %cmp46, label %if.then47, label %if.else55, !dbg !13250

if.then47:                                        ; preds = %if.else45
  %14 = load i32, i32* %spacetype.addr, align 4, !dbg !13251
  %cmp48 = icmp eq i32 %14, 20, !dbg !13254
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !13255

if.then49:                                        ; preds = %if.then47
  store i32 1, i32* %retval, align 4, !dbg !13256
  br label %return, !dbg !13256

if.end50:                                         ; preds = %if.then47
  %15 = load i32, i32* %redraws.addr, align 4, !dbg !13258
  %and51 = and i32 %15, 8, !dbg !13260
  %tobool52 = icmp ne i32 %and51, 0, !dbg !13260
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !13261

if.then53:                                        ; preds = %if.end50
  store i32 1, i32* %retval, align 4, !dbg !13262
  br label %return, !dbg !13262

if.end54:                                         ; preds = %if.end50
  br label %if.end73, !dbg !13263

if.else55:                                        ; preds = %if.else45
  %16 = load i32, i32* %regiontype.addr, align 4, !dbg !13264
  %cmp56 = icmp eq i32 %16, 1, !dbg !13266
  br i1 %cmp56, label %if.then57, label %if.else61, !dbg !13267

if.then57:                                        ; preds = %if.else55
  %17 = load i32, i32* %spacetype.addr, align 4, !dbg !13268
  %cmp58 = icmp eq i32 %17, 15, !dbg !13271
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !13272

if.then59:                                        ; preds = %if.then57
  store i32 1, i32* %retval, align 4, !dbg !13273
  br label %return, !dbg !13273

if.end60:                                         ; preds = %if.then57
  br label %if.end72, !dbg !13274

if.else61:                                        ; preds = %if.else55
  %18 = load i32, i32* %regiontype.addr, align 4, !dbg !13275
  %cmp62 = icmp eq i32 %18, 7, !dbg !13277
  br i1 %cmp62, label %if.then63, label %if.end71, !dbg !13278

if.then63:                                        ; preds = %if.else61
  %19 = load i32, i32* %spacetype.addr, align 4, !dbg !13279
  switch i32 %19, label %sw.epilog70 [
    i32 8, label %sw.bb64
    i32 20, label %sw.bb69
  ], !dbg !13281

sw.bb64:                                          ; preds = %if.then63
  %20 = load i32, i32* %redraws.addr, align 4, !dbg !13282
  %and65 = and i32 %20, 36, !dbg !13285
  %tobool66 = icmp ne i32 %and65, 0, !dbg !13285
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !13286

if.then67:                                        ; preds = %sw.bb64
  store i32 1, i32* %retval, align 4, !dbg !13287
  br label %return, !dbg !13287

if.end68:                                         ; preds = %sw.bb64
  br label %sw.epilog70, !dbg !13288

sw.bb69:                                          ; preds = %if.then63
  store i32 1, i32* %retval, align 4, !dbg !13289
  br label %return, !dbg !13289

sw.epilog70:                                      ; preds = %if.then63, %if.end68
  br label %if.end71, !dbg !13290

if.end71:                                         ; preds = %sw.epilog70, %if.else61
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.end60
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.end54
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %sw.epilog44
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !13291
  br label %return, !dbg !13291

return:                                           ; preds = %if.end75, %sw.bb69, %if.then67, %if.then59, %if.then53, %if.then49, %if.then42, %if.then35, %if.then30, %if.then25, %if.then20, %if.then15, %if.then10, %if.then5, %if.then1
  %21 = load i32, i32* %retval, align 4, !dbg !13292
  ret i32 %21, !dbg !13292
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @match_area_with_refresh(i32 %spacetype, i32 %refresh) #0 !dbg !13293 {
entry:
  %retval = alloca i32, align 4
  %spacetype.addr = alloca i32, align 4
  %refresh.addr = alloca i32, align 4
  store i32 %spacetype, i32* %spacetype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spacetype.addr, metadata !13294, metadata !DIExpression()), !dbg !13295
  store i32 %refresh, i32* %refresh.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %refresh.addr, metadata !13296, metadata !DIExpression()), !dbg !13297
  %0 = load i32, i32* %spacetype.addr, align 4, !dbg !13298
  switch i32 %0, label %sw.epilog [
    i32 15, label %sw.bb
  ], !dbg !13299

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %refresh.addr, align 4, !dbg !13300
  %and = and i32 %1, 15, !dbg !13303
  %tobool = icmp ne i32 %and, 0, !dbg !13303
  br i1 %tobool, label %if.then, label %if.end, !dbg !13304

if.then:                                          ; preds = %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !13305
  br label %return, !dbg !13305

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !13306

sw.epilog:                                        ; preds = %entry, %if.end
  store i32 0, i32* %retval, align 4, !dbg !13307
  br label %return, !dbg !13307

return:                                           ; preds = %sw.epilog, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !13308
  ret i32 %2, !dbg !13308
}

declare dso_local void @ED_area_tag_refresh(%struct.ScrArea*) #2

declare dso_local void @ED_refresh_viewport_fps(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @screen_animation_play_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !13309 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %mode = alloca i32, align 4
  %sync = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13310, metadata !DIExpression()), !dbg !13311
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !13312, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !13314, metadata !DIExpression()), !dbg !13315
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13316
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !13317
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !13317
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0)), !dbg !13318
  %tobool = icmp ne i32 %call, 0, !dbg !13319
  %2 = zext i1 %tobool to i64, !dbg !13319
  %cond = select i1 %tobool, i32 -1, i32 1, !dbg !13319
  store i32 %cond, i32* %mode, align 4, !dbg !13315
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !13320, metadata !DIExpression()), !dbg !13321
  store i32 -1, i32* %sync, align 4, !dbg !13321
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13322
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !13324
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !13324
  %call2 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i64 0, i64 0)), !dbg !13325
  %tobool3 = icmp ne i8 %call2, 0, !dbg !13325
  br i1 %tobool3, label %if.then, label %if.end, !dbg !13326

if.then:                                          ; preds = %entry
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13327
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !13328
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !13328
  %call5 = call i32 @RNA_boolean_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i64 0, i64 0)), !dbg !13329
  store i32 %call5, i32* %sync, align 4, !dbg !13330
  br label %if.end, !dbg !13331

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13332
  %8 = load i32, i32* %sync, align 4, !dbg !13333
  %9 = load i32, i32* %mode, align 4, !dbg !13334
  %call6 = call i32 @ED_screen_animation_play(%struct.bContext* %7, i32 %8, i32 %9), !dbg !13335
  ret i32 %call6, !dbg !13336
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @screen_animation_cancel_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !13337 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %screen = alloca %struct.bScreen*, align 8
  %sad = alloca %struct.ScreenAnimData*, align 8
  %scene = alloca %struct.Scene*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13338, metadata !DIExpression()), !dbg !13339
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !13340, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !13342, metadata !DIExpression()), !dbg !13343
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13344
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !13345
  %call1 = call %struct.bScreen* @ED_screen_animation_playing(%struct.wmWindowManager* %call), !dbg !13346
  store %struct.bScreen* %call1, %struct.bScreen** %screen, align 8, !dbg !13343
  %1 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !13347
  %tobool = icmp ne %struct.bScreen* %1, null, !dbg !13347
  br i1 %tobool, label %if.then, label %if.end7, !dbg !13349

if.then:                                          ; preds = %entry
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13350
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !13353
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !13353
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.182, i64 0, i64 0)), !dbg !13354
  %tobool3 = icmp ne i32 %call2, 0, !dbg !13354
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !13355

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.ScreenAnimData** %sad, metadata !13356, metadata !DIExpression()), !dbg !13358
  %4 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !13359
  %animtimer = getelementptr inbounds %struct.bScreen, %struct.bScreen* %4, i32 0, i32 21, !dbg !13360
  %5 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !13360
  %customdata = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %5, i32 0, i32 5, !dbg !13361
  %6 = load i8*, i8** %customdata, align 8, !dbg !13361
  %7 = bitcast i8* %6 to %struct.ScreenAnimData*, !dbg !13359
  store %struct.ScreenAnimData* %7, %struct.ScreenAnimData** %sad, align 8, !dbg !13358
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !13362, metadata !DIExpression()), !dbg !13363
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13364
  %call5 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %8), !dbg !13365
  store %struct.Scene* %call5, %struct.Scene** %scene, align 8, !dbg !13363
  %9 = load %struct.ScreenAnimData*, %struct.ScreenAnimData** %sad, align 8, !dbg !13366
  %sfra = getelementptr inbounds %struct.ScreenAnimData, %struct.ScreenAnimData* %9, i32 0, i32 4, !dbg !13367
  %10 = load i32, i32* %sfra, align 8, !dbg !13367
  %11 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13368
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 22, !dbg !13369
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !13370
  store i32 %10, i32* %cfra, align 8, !dbg !13371
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13372
  %13 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13373
  %14 = bitcast %struct.Scene* %13 to i8*, !dbg !13373
  call void @WM_event_add_notifier(%struct.bContext* %12, i32 67305472, i8* %14), !dbg !13374
  br label %if.end, !dbg !13375

if.end:                                           ; preds = %if.then4, %if.then
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13376
  %call6 = call i32 @ED_screen_animation_play(%struct.bContext* %15, i32 0, i32 0), !dbg !13377
  br label %if.end7, !dbg !13378

if.end7:                                          ; preds = %if.end, %entry
  ret i32 8, !dbg !13379
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @screen_new_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !13380 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %sc = alloca %struct.bScreen*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13381, metadata !DIExpression()), !dbg !13382
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !13383, metadata !DIExpression()), !dbg !13384
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !13385, metadata !DIExpression()), !dbg !13386
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13387
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !13388
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !13386
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !13389, metadata !DIExpression()), !dbg !13390
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13391
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %1), !dbg !13392
  store %struct.bScreen* %call1, %struct.bScreen** %sc, align 8, !dbg !13390
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !13393
  %3 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !13394
  %call2 = call %struct.bScreen* @ED_screen_duplicate(%struct.wmWindow* %2, %struct.bScreen* %3), !dbg !13395
  store %struct.bScreen* %call2, %struct.bScreen** %sc, align 8, !dbg !13396
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13397
  %5 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !13398
  %6 = bitcast %struct.bScreen* %5 to i8*, !dbg !13398
  call void @WM_event_add_notifier(%struct.bContext* %4, i32 50397184, i8* %6), !dbg !13399
  ret i32 4, !dbg !13400
}

declare dso_local %struct.bScreen* @ED_screen_duplicate(%struct.wmWindow*, %struct.bScreen*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @screen_delete_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !13401 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %sc = alloca %struct.bScreen*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13402, metadata !DIExpression()), !dbg !13403
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !13404, metadata !DIExpression()), !dbg !13405
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !13406, metadata !DIExpression()), !dbg !13407
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13408
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !13409
  store %struct.bScreen* %call, %struct.bScreen** %sc, align 8, !dbg !13407
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13410
  %2 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !13411
  %3 = bitcast %struct.bScreen* %2 to i8*, !dbg !13411
  call void @WM_event_add_notifier(%struct.bContext* %1, i32 50462720, i8* %3), !dbg !13412
  ret i32 4, !dbg !13413
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @scene_new_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !13414 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %newscene = alloca %struct.Scene*, align 8
  %scene = alloca %struct.Scene*, align 8
  %bmain = alloca %struct.Main*, align 8
  %type = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13415, metadata !DIExpression()), !dbg !13416
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !13417, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.declare(metadata %struct.Scene** %newscene, metadata !13419, metadata !DIExpression()), !dbg !13420
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !13421, metadata !DIExpression()), !dbg !13422
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13423
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !13424
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !13422
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !13425, metadata !DIExpression()), !dbg !13426
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13427
  %call1 = call %struct.Main* @CTX_data_main(%struct.bContext* %1), !dbg !13428
  store %struct.Main* %call1, %struct.Main** %bmain, align 8, !dbg !13426
  call void @llvm.dbg.declare(metadata i32* %type, metadata !13429, metadata !DIExpression()), !dbg !13430
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13431
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !13432
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !13432
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.209, i64 0, i64 0)), !dbg !13433
  store i32 %call2, i32* %type, align 4, !dbg !13430
  %4 = load i32, i32* %type, align 4, !dbg !13434
  %cmp = icmp eq i32 %4, 0, !dbg !13436
  br i1 %cmp, label %if.then, label %if.else, !dbg !13437

if.then:                                          ; preds = %entry
  %5 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !13438
  %call3 = call %struct.Scene* @BKE_scene_add(%struct.Main* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.211, i64 0, i64 0)), !dbg !13440
  store %struct.Scene* %call3, %struct.Scene** %newscene, align 8, !dbg !13441
  br label %if.end12, !dbg !13442

if.else:                                          ; preds = %entry
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13443
  %7 = load i32, i32* %type, align 4, !dbg !13445
  %call4 = call %struct.Scene* @BKE_scene_copy(%struct.Scene* %6, i32 %7), !dbg !13446
  store %struct.Scene* %call4, %struct.Scene** %newscene, align 8, !dbg !13447
  %8 = load i32, i32* %type, align 4, !dbg !13448
  %cmp5 = icmp eq i32 %8, 3, !dbg !13450
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !13451

if.then6:                                         ; preds = %if.else
  %9 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !13452
  %10 = load %struct.Scene*, %struct.Scene** %newscene, align 8, !dbg !13454
  call void @ED_object_single_users(%struct.Main* %9, %struct.Scene* %10, i8 zeroext 0, i8 zeroext 1), !dbg !13455
  br label %if.end11, !dbg !13456

if.else7:                                         ; preds = %if.else
  %11 = load i32, i32* %type, align 4, !dbg !13457
  %cmp8 = icmp eq i32 %11, 4, !dbg !13459
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !13460

if.then9:                                         ; preds = %if.else7
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13461
  %call10 = call zeroext i8 @ED_editors_flush_edits(%struct.bContext* %12, i8 zeroext 0), !dbg !13463
  %13 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !13464
  %14 = load %struct.Scene*, %struct.Scene** %newscene, align 8, !dbg !13465
  call void @ED_object_single_users(%struct.Main* %13, %struct.Scene* %14, i8 zeroext 1, i8 zeroext 1), !dbg !13466
  br label %if.end, !dbg !13467

if.end:                                           ; preds = %if.then9, %if.else7
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then6
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13468
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13469
  %call13 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %16), !dbg !13470
  %17 = load %struct.Scene*, %struct.Scene** %newscene, align 8, !dbg !13471
  call void @ED_screen_set_scene(%struct.bContext* %15, %struct.bScreen* %call13, %struct.Scene* %17), !dbg !13472
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13473
  %19 = load %struct.Scene*, %struct.Scene** %newscene, align 8, !dbg !13474
  %20 = bitcast %struct.Scene* %19 to i8*, !dbg !13474
  call void @WM_event_add_notifier(%struct.bContext* %18, i32 67174400, i8* %20), !dbg !13475
  ret i32 4, !dbg !13476
}

declare dso_local i32 @WM_menu_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local %struct.Scene* @BKE_scene_add(%struct.Main*, i8*) #2

declare dso_local %struct.Scene* @BKE_scene_copy(%struct.Scene*, i32) #2

declare dso_local void @ED_object_single_users(%struct.Main*, %struct.Scene*, i8 zeroext, i8 zeroext) #2

declare dso_local zeroext i8 @ED_editors_flush_edits(%struct.bContext*, i8 zeroext) #2

declare dso_local void @ED_screen_set_scene(%struct.bContext*, %struct.bScreen*, %struct.Scene*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @scene_delete_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !13477 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !13478, metadata !DIExpression()), !dbg !13479
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !13480, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !13482, metadata !DIExpression()), !dbg !13483
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13484
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !13485
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !13483
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13486
  %2 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13487
  call void @ED_screen_delete_scene(%struct.bContext* %1, %struct.Scene* %2), !dbg !13488
  %3 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !13489
  %and = and i32 %3, 1, !dbg !13491
  %tobool = icmp ne i32 %and, 0, !dbg !13491
  br i1 %tobool, label %if.then, label %if.end, !dbg !13492

if.then:                                          ; preds = %entry
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13493
  %5 = bitcast %struct.Scene* %4 to i8*, !dbg !13494
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.215, i64 0, i64 0), i8* %5), !dbg !13495
  br label %if.end, !dbg !13495

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !13496
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13497
  %8 = bitcast %struct.Scene* %7 to i8*, !dbg !13497
  call void @WM_event_add_notifier(%struct.bContext* %6, i32 67108868, i8* %8), !dbg !13498
  ret i32 4, !dbg !13499
}

declare dso_local void @ED_screen_delete_scene(%struct.bContext*, %struct.Scene*) #2

declare dso_local void @RNA_string_set(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local %struct.wmKeyMap* @WM_modalkeymap_add(%struct.wmKeyConfig*, i8*, %struct.EnumPropertyItem*) #2

declare dso_local %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap*, i32, i32, i32, i32, i32) #2

declare dso_local void @WM_modalkeymap_assign(%struct.wmKeyMap*, i8*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3727, !3728, !3729}
!llvm.ident = !{!3730}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "prop_direction_items", scope: !2, file: !3, line: 1761, type: !3726, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1389, globals: !3585, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/screen/screen_ops.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !17, !42, !55, !66, !72, !78, !86, !93, !100, !950, !959, !1160, !1165, !1171, !1184, !1199, !1219, !1229, !1240, !1272, !1306, !1328, !1335, !1367, !1377}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ObjectMode", file: !6, line: 666, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "OB_MODE_OBJECT", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "OB_MODE_EDIT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "OB_MODE_SCULPT", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "OB_MODE_VERTEX_PAINT", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "OB_MODE_WEIGHT_PAINT", value: 8, isUnsigned: true)
!14 = !DIEnumerator(name: "OB_MODE_TEXTURE_PAINT", value: 16, isUnsigned: true)
!15 = !DIEnumerator(name: "OB_MODE_PARTICLE_EDIT", value: 32, isUnsigned: true)
!16 = !DIEnumerator(name: "OB_MODE_POSE", value: 64, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !18, line: 1163, baseType: !7, size: 32, elements: !19)
!18 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41}
!20 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!23 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!24 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!25 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!26 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!27 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!28 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!29 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!30 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!31 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!32 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!33 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!34 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!35 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!36 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!37 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!38 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!39 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!40 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!41 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 339, baseType: !7, size: 32, elements: !43)
!43 = !{!44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54}
!44 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!45 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!46 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!47 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!48 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!49 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!50 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!51 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!52 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!53 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!54 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !56, line: 94, baseType: !7, size: 32, elements: !57)
!56 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!57 = !{!58, !59, !60, !61, !62, !63, !64, !65}
!58 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!59 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!60 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!61 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!62 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!63 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!64 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!65 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !56, line: 116, baseType: !7, size: 32, elements: !67)
!67 = !{!68, !69, !70, !71}
!68 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!71 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !56, line: 131, baseType: !7, size: 32, elements: !73)
!73 = !{!74, !75, !76, !77}
!74 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!75 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!76 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!77 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !56, line: 123, baseType: !7, size: 32, elements: !79)
!79 = !{!80, !81, !82, !83, !84, !85}
!80 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!81 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!82 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!83 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!84 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!85 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !56, line: 182, baseType: !7, size: 32, elements: !87)
!87 = !{!88, !89, !90, !91, !92}
!88 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!92 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !94, line: 78, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "blender/source/blender/editors/include/ED_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!95 = !{!96, !97, !98, !99}
!96 = !DIEnumerator(name: "AE_RIGHT_TO_TOPLEFT", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "AE_LEFT_TO_TOPRIGHT", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "AE_TOP_TO_BOTTOMRIGHT", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "AE_BOTTOM_TO_TOPLEFT", value: 3, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !101, line: 40, baseType: !7, size: 32, elements: !102)
!101 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!102 = !{!103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949}
!103 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!105 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!106 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!107 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!108 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!109 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!110 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!111 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!112 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!113 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!114 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!115 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!116 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!117 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!118 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!119 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!120 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!121 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!122 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!123 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!124 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!125 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!126 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!127 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!128 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!129 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!130 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!131 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!132 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!133 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!134 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!135 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!136 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!137 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!138 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!139 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!140 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!141 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!142 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!143 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!144 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!145 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!146 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!147 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!148 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!149 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!150 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!151 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!152 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!153 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!154 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!155 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!156 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!157 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!158 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!159 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!160 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!161 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!162 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!163 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!164 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!165 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!166 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!167 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!168 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!169 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!170 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!171 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!172 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!173 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!174 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!175 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!176 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!177 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!178 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!179 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!180 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!181 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!182 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!183 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!184 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!185 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!186 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!187 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!188 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!189 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!190 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!191 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!192 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!193 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!194 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!195 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!196 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!197 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!198 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!199 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!200 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!201 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!202 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!203 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!204 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!205 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!206 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!207 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!208 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!209 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!210 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!211 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!212 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!213 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!214 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!215 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!216 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!217 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!218 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!219 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!220 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!221 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!222 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!223 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!224 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!225 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!226 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!227 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!228 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!229 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!230 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!231 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!232 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!233 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!234 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!235 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!236 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!237 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!238 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!239 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!240 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!241 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!242 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!243 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!244 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!245 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!246 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!247 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!248 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!249 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!250 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!251 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!252 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!253 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!254 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!255 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!256 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!257 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!258 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!259 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!260 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!261 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!262 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!263 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!264 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!265 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!266 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!267 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!268 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!269 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!270 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!271 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!272 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!273 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!274 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!275 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!276 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!277 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!278 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!279 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!280 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!281 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!282 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!283 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!284 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!285 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!286 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!287 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!288 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!289 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!290 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!291 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!292 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!293 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!294 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!295 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!296 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!297 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!298 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!299 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!300 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!301 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!302 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!303 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!304 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!305 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!306 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!307 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!308 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!309 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!310 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!311 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!312 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!313 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!314 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!315 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!316 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!317 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!318 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!319 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!320 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!321 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!322 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!323 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!324 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!325 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!326 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!327 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!328 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!329 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!330 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!331 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!332 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!333 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!334 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!335 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!336 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!337 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!338 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!339 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!340 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!341 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!342 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!343 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!344 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!345 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!346 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!347 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!348 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!349 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!350 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!351 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!352 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!353 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!354 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!355 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!356 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!357 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!358 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!359 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!360 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!361 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!362 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!363 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!364 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!365 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!366 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!367 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!368 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!369 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!370 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!371 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!372 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!373 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!374 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!375 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!376 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!377 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!378 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!379 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!380 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!381 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!382 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!383 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!384 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!385 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!386 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!387 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!388 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!389 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!390 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!391 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!392 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!393 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!394 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!395 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!396 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!397 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!398 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!399 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!400 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!401 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!402 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!403 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!404 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!405 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!406 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!407 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!408 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!409 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!410 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!411 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!412 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!413 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!414 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!415 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!416 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!417 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!418 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!419 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!420 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!421 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!422 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!423 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!424 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!425 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!426 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!427 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!428 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!429 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!430 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!431 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!432 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!433 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!434 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!435 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!436 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!437 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!438 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!439 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!440 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!441 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!442 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!443 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!444 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!445 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!446 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!447 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!448 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!449 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!450 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!451 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!452 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!453 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!454 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!455 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!456 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!457 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!458 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!459 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!460 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!461 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!462 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!463 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!464 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!465 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!466 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!467 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!468 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!469 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!470 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!471 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!472 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!473 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!474 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!475 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!476 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!477 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!478 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!479 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!480 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!481 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!482 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!483 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!484 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!485 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!486 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!487 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!488 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!489 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!490 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!491 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!492 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!493 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!494 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!495 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!496 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!497 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!498 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!499 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!500 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!501 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!502 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!503 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!504 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!505 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!506 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!507 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!508 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!509 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!510 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!511 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!512 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!513 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!514 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!515 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!516 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!517 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!518 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!519 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!520 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!521 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!522 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!523 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!524 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!525 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!526 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!527 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!528 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!529 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!530 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!531 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!532 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!533 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!534 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!535 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!536 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!537 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!538 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!539 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!540 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!541 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!542 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!543 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!544 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!545 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!546 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!547 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!548 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!549 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!550 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!551 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!552 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!553 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!554 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!555 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!556 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!557 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!558 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!559 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!560 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!561 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!562 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!563 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!564 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!565 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!566 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!567 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!568 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!569 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!570 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!571 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!572 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!573 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!574 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!575 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!576 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!577 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!578 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!579 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!580 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!581 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!582 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!583 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!584 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!585 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!586 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!587 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!588 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!589 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!590 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!591 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!592 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!593 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!594 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!595 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!596 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!597 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!598 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!599 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!600 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!601 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!602 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!603 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!604 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!605 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!606 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!607 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!608 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!609 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!610 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!611 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!612 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!613 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!614 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!615 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!616 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!617 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!618 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!619 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!620 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!621 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!622 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!623 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!624 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!625 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!626 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!627 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!628 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!629 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!630 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!631 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!632 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!633 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!634 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!635 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!636 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!637 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!638 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!639 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!640 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!641 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!642 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!643 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!644 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!645 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!646 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!647 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!648 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!649 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!650 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!651 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!652 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!653 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!654 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!655 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!656 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!657 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!658 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!659 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!660 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!661 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!662 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!663 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!664 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!665 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!666 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!667 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!668 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!669 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!670 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!671 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!672 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!673 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!899 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!900 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!901 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!902 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!903 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!904 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!905 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!906 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!907 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!908 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!909 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!910 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!911 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!912 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!913 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!914 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!915 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!916 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!917 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!918 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!919 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!920 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!921 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!922 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!923 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!924 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!925 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!926 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!927 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!928 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!929 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!930 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!931 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!932 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!933 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!934 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!935 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!936 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!937 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!938 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!939 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!940 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!941 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!942 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!943 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!944 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!945 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!946 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!947 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!948 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!949 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!950 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 351, baseType: !7, size: 32, elements: !952)
!951 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!952 = !{!953, !954, !955, !956, !957, !958}
!953 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!954 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!955 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!956 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!957 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!958 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!959 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !960, line: 54, baseType: !7, size: 32, elements: !961)
!960 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!961 = !{!962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159}
!962 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!963 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!964 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!965 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!966 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!967 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!968 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!969 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!970 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!971 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!972 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!973 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!974 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!975 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!976 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!977 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!978 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!979 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!980 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!981 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!982 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!983 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!984 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!985 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!986 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!987 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!988 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!989 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!990 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!991 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!992 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!993 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!994 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!995 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!996 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!997 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!998 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!999 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!1000 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!1001 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!1002 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!1003 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!1004 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!1005 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!1006 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!1007 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!1008 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!1009 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!1010 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!1011 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!1012 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!1013 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!1014 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!1015 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!1016 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!1017 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!1018 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!1019 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!1020 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!1021 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!1022 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!1023 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!1024 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!1025 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!1026 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!1027 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!1028 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!1029 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!1030 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!1031 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!1032 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!1033 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!1034 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!1035 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!1036 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!1037 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!1038 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!1039 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!1040 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!1041 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!1042 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!1043 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!1044 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!1045 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!1046 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!1047 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!1048 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!1049 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!1050 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!1051 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!1052 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!1053 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!1054 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!1055 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!1056 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!1057 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!1058 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!1059 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!1060 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!1061 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!1062 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!1063 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!1064 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!1065 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!1066 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!1067 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!1068 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!1069 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!1070 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!1071 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!1072 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!1073 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!1074 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!1075 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!1076 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!1077 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!1078 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!1079 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!1080 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!1081 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!1082 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!1083 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!1084 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!1085 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!1086 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!1087 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!1088 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!1089 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!1090 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!1091 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!1092 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!1093 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!1094 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!1095 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!1096 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!1097 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!1098 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!1099 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!1100 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!1101 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!1102 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!1103 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!1104 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!1105 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!1106 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!1107 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!1108 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!1109 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!1110 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!1111 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!1112 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!1113 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!1114 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!1115 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!1116 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!1117 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!1118 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!1119 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!1120 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!1121 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!1122 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!1123 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!1124 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!1125 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!1126 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!1127 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!1128 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!1129 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!1130 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!1131 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!1132 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!1133 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!1134 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!1135 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!1136 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!1137 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!1138 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!1139 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!1140 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!1141 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!1142 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!1143 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!1144 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!1145 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!1146 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!1147 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!1148 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!1149 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!1150 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!1151 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!1152 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!1153 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!1154 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!1155 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!1156 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!1157 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!1158 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!1159 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!1160 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 619, baseType: !7, size: 32, elements: !1161)
!1161 = !{!1162, !1163, !1164}
!1162 = !DIEnumerator(name: "OB_RESTRICT_VIEW", value: 1, isUnsigned: true)
!1163 = !DIEnumerator(name: "OB_RESTRICT_SELECT", value: 2, isUnsigned: true)
!1164 = !DIEnumerator(name: "OB_RESTRICT_RENDER", value: 4, isUnsigned: true)
!1165 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1166, line: 292, baseType: !7, size: 32, elements: !1167)
!1166 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1167 = !{!1168, !1169, !1170}
!1168 = !DIEnumerator(name: "SCREENNORMAL", value: 0, isUnsigned: true)
!1169 = !DIEnumerator(name: "SCREENMAXIMIZED", value: 1, isUnsigned: true)
!1170 = !DIEnumerator(name: "SCREENFULL", value: 2, isUnsigned: true)
!1171 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1172, line: 43, baseType: !7, size: 32, elements: !1173)
!1172 = !DIFile(filename: "blender/source/blender/windowmanager/wm_cursors.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1173 = !{!1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183}
!1174 = !DIEnumerator(name: "CURSOR_FACESEL", value: 1000, isUnsigned: true)
!1175 = !DIEnumerator(name: "CURSOR_WAIT", value: 1001, isUnsigned: true)
!1176 = !DIEnumerator(name: "CURSOR_EDIT", value: 1002, isUnsigned: true)
!1177 = !DIEnumerator(name: "CURSOR_X_MOVE", value: 1003, isUnsigned: true)
!1178 = !DIEnumerator(name: "CURSOR_Y_MOVE", value: 1004, isUnsigned: true)
!1179 = !DIEnumerator(name: "CURSOR_HELP", value: 1005, isUnsigned: true)
!1180 = !DIEnumerator(name: "CURSOR_STD", value: 1006, isUnsigned: true)
!1181 = !DIEnumerator(name: "CURSOR_NONE", value: 1007, isUnsigned: true)
!1182 = !DIEnumerator(name: "CURSOR_PENCIL", value: 1008, isUnsigned: true)
!1183 = !DIEnumerator(name: "CURSOR_COPY", value: 1009, isUnsigned: true)
!1184 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1185, line: 141, baseType: !7, size: 32, elements: !1186)
!1185 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1186 = !{!1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198}
!1187 = !DIEnumerator(name: "WM_OP_INVOKE_DEFAULT", value: 0, isUnsigned: true)
!1188 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_WIN", value: 1, isUnsigned: true)
!1189 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_CHANNELS", value: 2, isUnsigned: true)
!1190 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_PREVIEW", value: 3, isUnsigned: true)
!1191 = !DIEnumerator(name: "WM_OP_INVOKE_AREA", value: 4, isUnsigned: true)
!1192 = !DIEnumerator(name: "WM_OP_INVOKE_SCREEN", value: 5, isUnsigned: true)
!1193 = !DIEnumerator(name: "WM_OP_EXEC_DEFAULT", value: 6, isUnsigned: true)
!1194 = !DIEnumerator(name: "WM_OP_EXEC_REGION_WIN", value: 7, isUnsigned: true)
!1195 = !DIEnumerator(name: "WM_OP_EXEC_REGION_CHANNELS", value: 8, isUnsigned: true)
!1196 = !DIEnumerator(name: "WM_OP_EXEC_REGION_PREVIEW", value: 9, isUnsigned: true)
!1197 = !DIEnumerator(name: "WM_OP_EXEC_AREA", value: 10, isUnsigned: true)
!1198 = !DIEnumerator(name: "WM_OP_EXEC_SCREEN", value: 11, isUnsigned: true)
!1199 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1172, line: 82, baseType: !7, size: 32, elements: !1200)
!1200 = !{!1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218}
!1201 = !DIEnumerator(name: "BC_NW_ARROWCURSOR", value: 2, isUnsigned: true)
!1202 = !DIEnumerator(name: "BC_NS_ARROWCURSOR", value: 3, isUnsigned: true)
!1203 = !DIEnumerator(name: "BC_EW_ARROWCURSOR", value: 4, isUnsigned: true)
!1204 = !DIEnumerator(name: "BC_WAITCURSOR", value: 5, isUnsigned: true)
!1205 = !DIEnumerator(name: "BC_CROSSCURSOR", value: 6, isUnsigned: true)
!1206 = !DIEnumerator(name: "BC_EDITCROSSCURSOR", value: 7, isUnsigned: true)
!1207 = !DIEnumerator(name: "BC_BOXSELCURSOR", value: 8, isUnsigned: true)
!1208 = !DIEnumerator(name: "BC_KNIFECURSOR", value: 9, isUnsigned: true)
!1209 = !DIEnumerator(name: "BC_VLOOPCURSOR", value: 10, isUnsigned: true)
!1210 = !DIEnumerator(name: "BC_TEXTEDITCURSOR", value: 11, isUnsigned: true)
!1211 = !DIEnumerator(name: "BC_PAINTBRUSHCURSOR", value: 12, isUnsigned: true)
!1212 = !DIEnumerator(name: "BC_HANDCURSOR", value: 13, isUnsigned: true)
!1213 = !DIEnumerator(name: "BC_NSEW_SCROLLCURSOR", value: 14, isUnsigned: true)
!1214 = !DIEnumerator(name: "BC_NS_SCROLLCURSOR", value: 15, isUnsigned: true)
!1215 = !DIEnumerator(name: "BC_EW_SCROLLCURSOR", value: 16, isUnsigned: true)
!1216 = !DIEnumerator(name: "BC_EYEDROPPER_CURSOR", value: 17, isUnsigned: true)
!1217 = !DIEnumerator(name: "BC_SWAPAREA_CURSOR", value: 18, isUnsigned: true)
!1218 = !DIEnumerator(name: "BC_NUMCURSORS", value: 19, isUnsigned: true)
!1219 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1166, line: 361, baseType: !7, size: 32, elements: !1220)
!1220 = !{!1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228}
!1221 = !DIEnumerator(name: "RGN_TYPE_WINDOW", value: 0, isUnsigned: true)
!1222 = !DIEnumerator(name: "RGN_TYPE_HEADER", value: 1, isUnsigned: true)
!1223 = !DIEnumerator(name: "RGN_TYPE_CHANNELS", value: 2, isUnsigned: true)
!1224 = !DIEnumerator(name: "RGN_TYPE_TEMPORARY", value: 3, isUnsigned: true)
!1225 = !DIEnumerator(name: "RGN_TYPE_UI", value: 4, isUnsigned: true)
!1226 = !DIEnumerator(name: "RGN_TYPE_TOOLS", value: 5, isUnsigned: true)
!1227 = !DIEnumerator(name: "RGN_TYPE_TOOL_PROPS", value: 6, isUnsigned: true)
!1228 = !DIEnumerator(name: "RGN_TYPE_PREVIEW", value: 7, isUnsigned: true)
!1229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !951, line: 67, baseType: !7, size: 32, elements: !1230)
!1230 = !{!1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239}
!1231 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!1232 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!1233 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!1234 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!1235 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!1236 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!1237 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!1238 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!1239 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!1240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserpref_UI_Flag", file: !1241, line: 630, baseType: !1242, size: 32, elements: !1243)
!1241 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1242 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1243 = !{!1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271}
!1244 = !DIEnumerator(name: "USER_WHEELZOOMDIR", value: 4)
!1245 = !DIEnumerator(name: "USER_FILTERFILEEXTS", value: 8)
!1246 = !DIEnumerator(name: "USER_DRAWVIEWINFO", value: 16)
!1247 = !DIEnumerator(name: "USER_PLAINMENUS", value: 32)
!1248 = !DIEnumerator(name: "USER_ALLWINCODECS", value: 256)
!1249 = !DIEnumerator(name: "USER_MENUOPENAUTO", value: 512)
!1250 = !DIEnumerator(name: "USER_ZBUF_CURSOR", value: 1024)
!1251 = !DIEnumerator(name: "USER_AUTOPERSP", value: 2048)
!1252 = !DIEnumerator(name: "USER_LOCKAROUND", value: 4096)
!1253 = !DIEnumerator(name: "USER_GLOBALUNDO", value: 8192)
!1254 = !DIEnumerator(name: "USER_ORBIT_SELECTION", value: 16384)
!1255 = !DIEnumerator(name: "USER_ZBUF_ORBIT", value: 32768)
!1256 = !DIEnumerator(name: "USER_HIDE_DOT", value: 65536)
!1257 = !DIEnumerator(name: "USER_SHOW_ROTVIEWICON", value: 131072)
!1258 = !DIEnumerator(name: "USER_SHOW_VIEWPORTNAME", value: 262144)
!1259 = !DIEnumerator(name: "USER_CAM_LOCK_NO_PARENT", value: 524288)
!1260 = !DIEnumerator(name: "USER_ZOOM_TO_MOUSEPOS", value: 1048576)
!1261 = !DIEnumerator(name: "USER_SHOW_FPS", value: 2097152)
!1262 = !DIEnumerator(name: "USER_MMB_PASTE", value: 4194304)
!1263 = !DIEnumerator(name: "USER_MENUFIXEDORDER", value: 8388608)
!1264 = !DIEnumerator(name: "USER_CONTINUOUS_MOUSE", value: 16777216)
!1265 = !DIEnumerator(name: "USER_ZOOM_INVERT", value: 33554432)
!1266 = !DIEnumerator(name: "USER_ZOOM_HORIZ", value: 67108864)
!1267 = !DIEnumerator(name: "USER_SPLASH_DISABLE", value: 134217728)
!1268 = !DIEnumerator(name: "USER_HIDE_RECENT", value: 268435456)
!1269 = !DIEnumerator(name: "USER_SHOW_THUMBNAILS", value: 536870912)
!1270 = !DIEnumerator(name: "USER_QUIT_PROMPT", value: 1073741824)
!1271 = !DIEnumerator(name: "USER_HIDE_SYSTEM_BOOKMARKS", value: -2147483648)
!1272 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !1273, line: 151, baseType: !7, size: 32, elements: !1274)
!1273 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1274 = !{!1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305}
!1275 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!1276 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!1277 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!1278 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!1279 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!1280 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!1281 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!1282 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!1283 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!1284 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!1285 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!1286 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!1287 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!1288 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!1289 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!1290 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!1291 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!1292 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!1293 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!1294 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!1295 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!1296 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!1297 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!1298 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!1299 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!1300 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!1301 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!1302 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!1303 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!1304 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!1305 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!1306 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserPref_Flag", file: !1241, line: 569, baseType: !7, size: 32, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327}
!1308 = !DIEnumerator(name: "USER_AUTOSAVE", value: 1, isUnsigned: true)
!1309 = !DIEnumerator(name: "USER_SCENEGLOBAL", value: 16, isUnsigned: true)
!1310 = !DIEnumerator(name: "USER_TRACKBALL", value: 32, isUnsigned: true)
!1311 = !DIEnumerator(name: "USER_MAT_ON_OB", value: 256, isUnsigned: true)
!1312 = !DIEnumerator(name: "USER_TOOLTIPS", value: 2048, isUnsigned: true)
!1313 = !DIEnumerator(name: "USER_TWOBUTTONMOUSE", value: 4096, isUnsigned: true)
!1314 = !DIEnumerator(name: "USER_NONUMPAD", value: 8192, isUnsigned: true)
!1315 = !DIEnumerator(name: "USER_LMOUSESELECT", value: 16384, isUnsigned: true)
!1316 = !DIEnumerator(name: "USER_FILECOMPRESS", value: 32768, isUnsigned: true)
!1317 = !DIEnumerator(name: "USER_SAVE_PREVIEWS", value: 65536, isUnsigned: true)
!1318 = !DIEnumerator(name: "USER_CUSTOM_RANGE", value: 131072, isUnsigned: true)
!1319 = !DIEnumerator(name: "USER_ADD_EDITMODE", value: 262144, isUnsigned: true)
!1320 = !DIEnumerator(name: "USER_ADD_VIEWALIGNED", value: 524288, isUnsigned: true)
!1321 = !DIEnumerator(name: "USER_RELPATHS", value: 1048576, isUnsigned: true)
!1322 = !DIEnumerator(name: "USER_RELEASECONFIRM", value: 2097152, isUnsigned: true)
!1323 = !DIEnumerator(name: "USER_SCRIPT_AUTOEXEC_DISABLE", value: 4194304, isUnsigned: true)
!1324 = !DIEnumerator(name: "USER_FILENOUI", value: 8388608, isUnsigned: true)
!1325 = !DIEnumerator(name: "USER_NONEGFRAMES", value: 16777216, isUnsigned: true)
!1326 = !DIEnumerator(name: "USER_TXT_TABSTOSPACES_DISABLE", value: 33554432, isUnsigned: true)
!1327 = !DIEnumerator(name: "USER_TOOLTIPS_PYTHON", value: 67108864, isUnsigned: true)
!1328 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !94, line: 48, baseType: !7, size: 32, elements: !1329)
!1329 = !{!1330, !1331, !1332, !1333, !1334}
!1330 = !DIEnumerator(name: "ANIMPLAY_FLAG_REVERSE", value: 1, isUnsigned: true)
!1331 = !DIEnumerator(name: "ANIMPLAY_FLAG_JUMPED", value: 2, isUnsigned: true)
!1332 = !DIEnumerator(name: "ANIMPLAY_FLAG_SYNC", value: 4, isUnsigned: true)
!1333 = !DIEnumerator(name: "ANIMPLAY_FLAG_NO_SYNC", value: 8, isUnsigned: true)
!1334 = !DIEnumerator(name: "ANIMPLAY_FLAG_USE_NEXT_FRAME", value: 16, isUnsigned: true)
!1335 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eDopeSheet_FilterFlag", file: !1336, line: 535, baseType: !7, size: 32, elements: !1337)
!1336 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1337 = !{!1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366}
!1338 = !DIEnumerator(name: "ADS_FILTER_ONLYSEL", value: 1, isUnsigned: true)
!1339 = !DIEnumerator(name: "ADS_FILTER_ONLYDRIVERS", value: 2, isUnsigned: true)
!1340 = !DIEnumerator(name: "ADS_FILTER_ONLYNLA", value: 4, isUnsigned: true)
!1341 = !DIEnumerator(name: "ADS_FILTER_SELEDIT", value: 8, isUnsigned: true)
!1342 = !DIEnumerator(name: "ADS_FILTER_SUMMARY", value: 16, isUnsigned: true)
!1343 = !DIEnumerator(name: "ADS_FILTER_ONLYOBGROUP", value: 32, isUnsigned: true)
!1344 = !DIEnumerator(name: "ADS_FILTER_NOSHAPEKEYS", value: 64, isUnsigned: true)
!1345 = !DIEnumerator(name: "ADS_FILTER_NOMESH", value: 128, isUnsigned: true)
!1346 = !DIEnumerator(name: "ADS_FILTER_NOOBJ", value: 256, isUnsigned: true)
!1347 = !DIEnumerator(name: "ADS_FILTER_NOLAT", value: 512, isUnsigned: true)
!1348 = !DIEnumerator(name: "ADS_FILTER_NOCAM", value: 1024, isUnsigned: true)
!1349 = !DIEnumerator(name: "ADS_FILTER_NOMAT", value: 2048, isUnsigned: true)
!1350 = !DIEnumerator(name: "ADS_FILTER_NOLAM", value: 4096, isUnsigned: true)
!1351 = !DIEnumerator(name: "ADS_FILTER_NOCUR", value: 8192, isUnsigned: true)
!1352 = !DIEnumerator(name: "ADS_FILTER_NOWOR", value: 16384, isUnsigned: true)
!1353 = !DIEnumerator(name: "ADS_FILTER_NOSCE", value: 32768, isUnsigned: true)
!1354 = !DIEnumerator(name: "ADS_FILTER_NOPART", value: 65536, isUnsigned: true)
!1355 = !DIEnumerator(name: "ADS_FILTER_NOMBA", value: 131072, isUnsigned: true)
!1356 = !DIEnumerator(name: "ADS_FILTER_NOARM", value: 262144, isUnsigned: true)
!1357 = !DIEnumerator(name: "ADS_FILTER_NONTREE", value: 524288, isUnsigned: true)
!1358 = !DIEnumerator(name: "ADS_FILTER_NOTEX", value: 1048576, isUnsigned: true)
!1359 = !DIEnumerator(name: "ADS_FILTER_NOSPK", value: 2097152, isUnsigned: true)
!1360 = !DIEnumerator(name: "ADS_FILTER_NOLINESTYLE", value: 4194304, isUnsigned: true)
!1361 = !DIEnumerator(name: "ADS_FILTER_NOMODIFIERS", value: 8388608, isUnsigned: true)
!1362 = !DIEnumerator(name: "ADS_FILTER_NLA_NOACT", value: 33554432, isUnsigned: true)
!1363 = !DIEnumerator(name: "ADS_FILTER_INCL_HIDDEN", value: 67108864, isUnsigned: true)
!1364 = !DIEnumerator(name: "ADS_FILTER_BY_FCU_NAME", value: 134217728, isUnsigned: true)
!1365 = !DIEnumerator(name: "ADS_FILTER_ONLY_ERRORS", value: 268435456, isUnsigned: true)
!1366 = !DIEnumerator(name: "ADS_FILTER_NOOBDATA", value: 10828800, isUnsigned: true)
!1367 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eScreen_Redraws_Flag", file: !18, line: 453, baseType: !7, size: 32, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376}
!1369 = !DIEnumerator(name: "TIME_REGION", value: 1, isUnsigned: true)
!1370 = !DIEnumerator(name: "TIME_ALL_3D_WIN", value: 2, isUnsigned: true)
!1371 = !DIEnumerator(name: "TIME_ALL_ANIM_WIN", value: 4, isUnsigned: true)
!1372 = !DIEnumerator(name: "TIME_ALL_BUTS_WIN", value: 8, isUnsigned: true)
!1373 = !DIEnumerator(name: "TIME_SEQ", value: 32, isUnsigned: true)
!1374 = !DIEnumerator(name: "TIME_ALL_IMAGE_WIN", value: 64, isUnsigned: true)
!1375 = !DIEnumerator(name: "TIME_NODES", value: 256, isUnsigned: true)
!1376 = !DIEnumerator(name: "TIME_CLIPS", value: 512, isUnsigned: true)
!1377 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1378, line: 123, baseType: !7, size: 32, elements: !1379)
!1378 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1379 = !{!1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388}
!1380 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!1381 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!1382 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!1383 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!1384 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!1385 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!1386 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!1387 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!1388 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!1389 = !{!1390, !1391, !1413, !1475, !1580, !3145, !3193, !1407, !3243, !3561, !3286, !1242, !3374, !3568}
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !18, line: 91, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !18, line: 85, size: 448, elements: !1394)
!1394 = !{!1395, !1397, !1398, !1405, !1406, !1408}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1393, file: !18, line: 86, baseType: !1396, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1393, file: !18, line: 86, baseType: !1396, size: 64, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1393, file: !18, line: 87, baseType: !1399, size: 128, offset: 128)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !1400, line: 71, baseType: !1401)
!1400 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !1400, line: 69, size: 128, elements: !1402)
!1402 = !{!1403, !1404}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1401, file: !1400, line: 70, baseType: !1390, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1401, file: !1400, line: 70, baseType: !1390, size: 64, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !1393, file: !18, line: 88, baseType: !1242, size: 32, offset: 256)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !1393, file: !18, line: 89, baseType: !1407, size: 32, offset: 288)
!1407 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !1393, file: !18, line: 90, baseType: !1409, size: 128, offset: 320)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 128, elements: !1411)
!1410 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1411 = !{!1412}
!1412 = !DISubrange(count: 8)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1415, line: 130, baseType: !1416)
!1415 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1415, line: 117, size: 960, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1422, !1441, !1445, !1446, !1447, !1448, !1449}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1416, file: !1415, line: 118, baseType: !1390, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1416, file: !1415, line: 118, baseType: !1390, size: 64, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1416, file: !1415, line: 119, baseType: !1421, size: 64, offset: 128)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1416, file: !1415, line: 120, baseType: !1423, size: 64, offset: 192)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1415, line: 136, size: 17600, elements: !1425)
!1425 = !{!1426, !1427, !1428, !1431, !1436, !1437, !1438}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1424, file: !1415, line: 137, baseType: !1414, size: 960)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1424, file: !1415, line: 138, baseType: !1413, size: 64, offset: 960)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1424, file: !1415, line: 139, baseType: !1429, size: 64, offset: 1024)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1415, line: 43, flags: DIFlagFwdDecl)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1424, file: !1415, line: 140, baseType: !1432, size: 8192, offset: 1088)
!1432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 8192, elements: !1434)
!1433 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1434 = !{!1435}
!1435 = !DISubrange(count: 1024)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1424, file: !1415, line: 141, baseType: !1432, size: 8192, offset: 9280)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1424, file: !1415, line: 148, baseType: !1423, size: 64, offset: 17472)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1424, file: !1415, line: 150, baseType: !1439, size: 64, offset: 17536)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1415, line: 45, flags: DIFlagFwdDecl)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1416, file: !1415, line: 121, baseType: !1442, size: 528, offset: 256)
!1442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 528, elements: !1443)
!1443 = !{!1444}
!1444 = !DISubrange(count: 66)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1416, file: !1415, line: 126, baseType: !1410, size: 16, offset: 784)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1416, file: !1415, line: 127, baseType: !1242, size: 32, offset: 800)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1416, file: !1415, line: 128, baseType: !1242, size: 32, offset: 832)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1416, file: !1415, line: 128, baseType: !1242, size: 32, offset: 864)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1416, file: !1415, line: 129, baseType: !1450, size: 64, offset: 896)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1415, line: 75, baseType: !1452)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1415, line: 62, size: 1024, elements: !1453)
!1453 = !{!1454, !1456, !1457, !1458, !1459, !1460, !1464, !1465, !1473, !1474}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1452, file: !1415, line: 63, baseType: !1455, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1452, file: !1415, line: 63, baseType: !1455, size: 64, offset: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1452, file: !1415, line: 64, baseType: !1433, size: 8, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1452, file: !1415, line: 64, baseType: !1433, size: 8, offset: 136)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1452, file: !1415, line: 65, baseType: !1410, size: 16, offset: 144)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1452, file: !1415, line: 66, baseType: !1461, size: 512, offset: 160)
!1461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 512, elements: !1462)
!1462 = !{!1463}
!1463 = !DISubrange(count: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1452, file: !1415, line: 67, baseType: !1242, size: 32, offset: 672)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1452, file: !1415, line: 69, baseType: !1466, size: 256, offset: 704)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1415, line: 60, baseType: !1467)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1415, line: 48, size: 256, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1472}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1467, file: !1415, line: 49, baseType: !1390, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1467, file: !1415, line: 58, baseType: !1399, size: 128, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1467, file: !1415, line: 59, baseType: !1242, size: 32, offset: 192)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1467, file: !1415, line: 59, baseType: !1242, size: 32, offset: 224)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1452, file: !1415, line: 70, baseType: !1242, size: 32, offset: 960)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1452, file: !1415, line: 74, baseType: !1242, size: 32, offset: 992)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !1477, line: 114, baseType: !1478)
!1477 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !1477, line: 78, size: 2048, elements: !1479)
!1479 = !{!1480, !1481, !1484, !1485, !1486, !1488, !1533, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1478, file: !1477, line: 79, baseType: !1414, size: 960)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1478, file: !1477, line: 80, baseType: !1482, size: 64, offset: 960)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !1477, line: 37, flags: DIFlagFwdDecl)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !1478, file: !1477, line: 82, baseType: !1399, size: 128, offset: 1024)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !1478, file: !1477, line: 83, baseType: !1399, size: 128, offset: 1152)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !1478, file: !1477, line: 84, baseType: !1487, size: 64, offset: 1280)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !1478, file: !1477, line: 92, baseType: !1489, size: 64, offset: 1344)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !1477, line: 76, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !1477, line: 48, size: 2624, elements: !1492)
!1492 = !{!1493, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1505, !1506, !1509, !1510, !1511, !1512, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1491, file: !1477, line: 49, baseType: !1494, size: 64)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1491, file: !1477, line: 49, baseType: !1494, size: 64, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1491, file: !1477, line: 50, baseType: !1450, size: 64, offset: 128)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1491, file: !1477, line: 51, baseType: !1494, size: 64, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !1491, file: !1477, line: 52, baseType: !1399, size: 128, offset: 256)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1491, file: !1477, line: 53, baseType: !1461, size: 512, offset: 384)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !1491, file: !1477, line: 55, baseType: !1407, size: 32, offset: 896)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1491, file: !1477, line: 56, baseType: !1502, size: 96, offset: 928)
!1502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 96, elements: !1503)
!1503 = !{!1504}
!1504 = !DISubrange(count: 3)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1491, file: !1477, line: 57, baseType: !1502, size: 96, offset: 1024)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !1491, file: !1477, line: 58, baseType: !1507, size: 288, offset: 1120)
!1507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 288, elements: !1508)
!1508 = !{!1504, !1504}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1491, file: !1477, line: 60, baseType: !1242, size: 32, offset: 1408)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !1491, file: !1477, line: 62, baseType: !1502, size: 96, offset: 1440)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !1491, file: !1477, line: 63, baseType: !1502, size: 96, offset: 1536)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !1491, file: !1477, line: 64, baseType: !1513, size: 512, offset: 1632)
!1513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 512, elements: !1514)
!1514 = !{!1515, !1515}
!1515 = !DISubrange(count: 4)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !1491, file: !1477, line: 65, baseType: !1407, size: 32, offset: 2144)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1491, file: !1477, line: 67, baseType: !1407, size: 32, offset: 2176)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1491, file: !1477, line: 67, baseType: !1407, size: 32, offset: 2208)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !1491, file: !1477, line: 68, baseType: !1407, size: 32, offset: 2240)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1491, file: !1477, line: 68, baseType: !1407, size: 32, offset: 2272)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !1491, file: !1477, line: 68, baseType: !1407, size: 32, offset: 2304)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !1491, file: !1477, line: 69, baseType: !1407, size: 32, offset: 2336)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !1491, file: !1477, line: 69, baseType: !1407, size: 32, offset: 2368)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !1491, file: !1477, line: 70, baseType: !1407, size: 32, offset: 2400)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !1491, file: !1477, line: 70, baseType: !1407, size: 32, offset: 2432)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1491, file: !1477, line: 72, baseType: !1502, size: 96, offset: 2464)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1491, file: !1477, line: 73, baseType: !1242, size: 32, offset: 2560)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !1491, file: !1477, line: 74, baseType: !1410, size: 16, offset: 2592)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1491, file: !1477, line: 75, baseType: !1530, size: 16, offset: 2608)
!1530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 16, elements: !1531)
!1531 = !{!1532}
!1532 = !DISubrange(count: 1)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !1478, file: !1477, line: 93, baseType: !1534, size: 64, offset: 1408)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !1536, line: 56, size: 1472, elements: !1537)
!1536 = !DIFile(filename: "blender/source/blender/editors/include/ED_armature.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1535, file: !1536, line: 57, baseType: !1534, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1535, file: !1536, line: 57, baseType: !1534, size: 64, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1535, file: !1536, line: 58, baseType: !1455, size: 64, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1535, file: !1536, line: 59, baseType: !1534, size: 64, offset: 192)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1535, file: !1536, line: 62, baseType: !1390, size: 64, offset: 256)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1535, file: !1536, line: 64, baseType: !1461, size: 512, offset: 320)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !1535, file: !1536, line: 65, baseType: !1407, size: 32, offset: 832)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1535, file: !1536, line: 70, baseType: !1502, size: 96, offset: 864)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1535, file: !1536, line: 71, baseType: !1502, size: 96, offset: 960)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1535, file: !1536, line: 75, baseType: !1242, size: 32, offset: 1056)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1535, file: !1536, line: 76, baseType: !1242, size: 32, offset: 1088)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1535, file: !1536, line: 78, baseType: !1407, size: 32, offset: 1120)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1535, file: !1536, line: 78, baseType: !1407, size: 32, offset: 1152)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !1535, file: !1536, line: 79, baseType: !1407, size: 32, offset: 1184)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1535, file: !1536, line: 79, baseType: !1407, size: 32, offset: 1216)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !1535, file: !1536, line: 79, baseType: !1407, size: 32, offset: 1248)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !1535, file: !1536, line: 80, baseType: !1407, size: 32, offset: 1280)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !1535, file: !1536, line: 80, baseType: !1407, size: 32, offset: 1312)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !1535, file: !1536, line: 81, baseType: !1407, size: 32, offset: 1344)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !1535, file: !1536, line: 81, baseType: !1407, size: 32, offset: 1376)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "oldlength", scope: !1535, file: !1536, line: 83, baseType: !1407, size: 32, offset: 1408)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !1535, file: !1536, line: 85, baseType: !1410, size: 16, offset: 1440)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !1478, file: !1477, line: 95, baseType: !1390, size: 64, offset: 1472)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1478, file: !1477, line: 97, baseType: !1242, size: 32, offset: 1536)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !1478, file: !1477, line: 98, baseType: !1242, size: 32, offset: 1568)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !1478, file: !1477, line: 99, baseType: !1242, size: 32, offset: 1600)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1478, file: !1477, line: 100, baseType: !1242, size: 32, offset: 1632)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !1478, file: !1477, line: 101, baseType: !1410, size: 16, offset: 1664)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !1478, file: !1477, line: 102, baseType: !1410, size: 16, offset: 1680)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !1478, file: !1477, line: 104, baseType: !7, size: 32, offset: 1696)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1478, file: !1477, line: 105, baseType: !7, size: 32, offset: 1728)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !1478, file: !1477, line: 105, baseType: !7, size: 32, offset: 1760)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !1478, file: !1477, line: 108, baseType: !1410, size: 16, offset: 1792)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !1478, file: !1477, line: 108, baseType: !1410, size: 16, offset: 1808)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !1478, file: !1477, line: 109, baseType: !1410, size: 16, offset: 1824)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !1478, file: !1477, line: 109, baseType: !1410, size: 16, offset: 1840)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !1478, file: !1477, line: 110, baseType: !1242, size: 32, offset: 1856)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !1478, file: !1477, line: 110, baseType: !1242, size: 32, offset: 1888)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !1478, file: !1477, line: 111, baseType: !1242, size: 32, offset: 1920)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !1478, file: !1477, line: 111, baseType: !1242, size: 32, offset: 1952)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !1478, file: !1477, line: 112, baseType: !1242, size: 32, offset: 1984)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !1478, file: !1477, line: 112, baseType: !1242, size: 32, offset: 2016)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !1582, line: 273, baseType: !1583)
!1582 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !1582, line: 193, size: 4224, elements: !1584)
!1584 = !{!1585, !1586, !1587, !1596, !1597, !1610, !3060, !3061, !3062, !3063, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3112, !3113, !3116, !3117, !3118, !3119, !3127, !3128, !3129, !3138, !3139, !3140, !3141, !3142, !3143, !3144}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1583, file: !1582, line: 194, baseType: !1414, size: 960)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1583, file: !1582, line: 195, baseType: !1482, size: 64, offset: 960)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1583, file: !1582, line: 197, baseType: !1588, size: 64, offset: 1024)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !6, line: 97, size: 832, elements: !1590)
!1590 = !{!1591, !1594, !1595}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1589, file: !6, line: 98, baseType: !1592, size: 768)
!1592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 768, elements: !1593)
!1593 = !{!1412, !1504}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1589, file: !6, line: 99, baseType: !1242, size: 32, offset: 768)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1589, file: !6, line: 99, baseType: !1242, size: 32, offset: 800)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !1583, file: !1582, line: 199, baseType: !1399, size: 128, offset: 1088)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !1583, file: !1582, line: 201, baseType: !1598, size: 64, offset: 1216)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !1582, line: 191, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !1582, line: 180, size: 256, elements: !1601)
!1601 = !{!1602, !1603, !1606, !1607}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !1600, file: !1582, line: 182, baseType: !1399, size: 128)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !1600, file: !1582, line: 185, baseType: !1604, size: 64, offset: 128)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1336, line: 47, flags: DIFlagFwdDecl)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1600, file: !1582, line: 188, baseType: !1242, size: 32, offset: 192)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1600, file: !1582, line: 190, baseType: !1608, size: 32, offset: 224)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 32, elements: !1609)
!1609 = !{!1515}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !1583, file: !1582, line: 203, baseType: !1611, size: 64, offset: 1280)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !6, line: 115, size: 11392, elements: !1613)
!1613 = !{!1614, !1615, !1616, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1634, !1635, !1648, !1649, !1688, !1689, !1692, !1693, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1719, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1807, !1810, !1813, !1814, !1815, !1816, !1817, !1820, !1823, !1826, !1827, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1842, !1845, !1849, !3048, !3049}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1612, file: !6, line: 116, baseType: !1414, size: 960)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1612, file: !6, line: 117, baseType: !1482, size: 64, offset: 960)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1612, file: !6, line: 119, baseType: !1617, size: 64, offset: 1024)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !6, line: 57, flags: DIFlagFwdDecl)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1612, file: !6, line: 121, baseType: !1410, size: 16, offset: 1088)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !1612, file: !6, line: 121, baseType: !1410, size: 16, offset: 1104)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !1612, file: !6, line: 122, baseType: !1242, size: 32, offset: 1120)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !1612, file: !6, line: 122, baseType: !1242, size: 32, offset: 1152)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !1612, file: !6, line: 122, baseType: !1242, size: 32, offset: 1184)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !1612, file: !6, line: 123, baseType: !1461, size: 512, offset: 1216)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1612, file: !6, line: 124, baseType: !1611, size: 64, offset: 1728)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !1612, file: !6, line: 124, baseType: !1611, size: 64, offset: 1792)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1612, file: !6, line: 127, baseType: !1611, size: 64, offset: 1856)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !1612, file: !6, line: 127, baseType: !1611, size: 64, offset: 1920)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !1612, file: !6, line: 127, baseType: !1611, size: 64, offset: 1984)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1612, file: !6, line: 128, baseType: !1631, size: 64, offset: 2048)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !1633, line: 40, flags: DIFlagFwdDecl)
!1633 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lattice_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1612, file: !6, line: 130, baseType: !1588, size: 64, offset: 2112)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1612, file: !6, line: 131, baseType: !1636, size: 64, offset: 2176)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !1336, line: 486, size: 1600, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1637, file: !1336, line: 487, baseType: !1414, size: 960)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !1637, file: !1336, line: 489, baseType: !1399, size: 128, offset: 960)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1637, file: !1336, line: 490, baseType: !1399, size: 128, offset: 1088)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1637, file: !1336, line: 491, baseType: !1399, size: 128, offset: 1216)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1637, file: !1336, line: 492, baseType: !1399, size: 128, offset: 1344)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1637, file: !1336, line: 494, baseType: !1242, size: 32, offset: 1472)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !1637, file: !1336, line: 495, baseType: !1242, size: 32, offset: 1504)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !1637, file: !1336, line: 497, baseType: !1242, size: 32, offset: 1536)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1637, file: !1336, line: 498, baseType: !1242, size: 32, offset: 1568)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !1612, file: !6, line: 132, baseType: !1636, size: 64, offset: 2240)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !1612, file: !6, line: 133, baseType: !1650, size: 64, offset: 2304)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !1336, line: 334, size: 1728, elements: !1652)
!1652 = !{!1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1687}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1651, file: !1336, line: 335, baseType: !1399, size: 128)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !1651, file: !1336, line: 336, baseType: !1604, size: 64, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1651, file: !1336, line: 338, baseType: !1410, size: 16, offset: 192)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1651, file: !1336, line: 338, baseType: !1410, size: 16, offset: 208)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !1651, file: !1336, line: 339, baseType: !7, size: 32, offset: 224)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1651, file: !1336, line: 340, baseType: !1242, size: 32, offset: 256)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1651, file: !1336, line: 342, baseType: !1407, size: 32, offset: 288)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !1651, file: !1336, line: 343, baseType: !1502, size: 96, offset: 320)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !1651, file: !1336, line: 344, baseType: !1502, size: 96, offset: 416)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !1651, file: !1336, line: 347, baseType: !1399, size: 128, offset: 512)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !1651, file: !1336, line: 349, baseType: !1242, size: 32, offset: 640)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !1651, file: !1336, line: 350, baseType: !1242, size: 32, offset: 672)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !1651, file: !1336, line: 351, baseType: !1390, size: 64, offset: 704)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !1651, file: !1336, line: 352, baseType: !1390, size: 64, offset: 768)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1651, file: !1336, line: 354, baseType: !1668, size: 384, offset: 832)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !1336, line: 116, baseType: !1669)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !1336, line: 94, size: 384, elements: !1670)
!1670 = !{!1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !1669, file: !1336, line: 96, baseType: !1242, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !1669, file: !1336, line: 96, baseType: !1242, size: 32, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !1669, file: !1336, line: 97, baseType: !1242, size: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !1669, file: !1336, line: 97, baseType: !1242, size: 32, offset: 96)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !1669, file: !1336, line: 99, baseType: !1410, size: 16, offset: 128)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !1669, file: !1336, line: 100, baseType: !1410, size: 16, offset: 144)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !1669, file: !1336, line: 102, baseType: !1410, size: 16, offset: 160)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1669, file: !1336, line: 105, baseType: !1410, size: 16, offset: 176)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !1669, file: !1336, line: 108, baseType: !1410, size: 16, offset: 192)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !1669, file: !1336, line: 109, baseType: !1410, size: 16, offset: 208)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !1669, file: !1336, line: 111, baseType: !1410, size: 16, offset: 224)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !1669, file: !1336, line: 112, baseType: !1410, size: 16, offset: 240)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !1669, file: !1336, line: 114, baseType: !1242, size: 32, offset: 256)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !1669, file: !1336, line: 114, baseType: !1242, size: 32, offset: 288)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !1669, file: !1336, line: 115, baseType: !1242, size: 32, offset: 320)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !1669, file: !1336, line: 115, baseType: !1242, size: 32, offset: 352)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !1651, file: !1336, line: 355, baseType: !1461, size: 512, offset: 1216)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1612, file: !6, line: 134, baseType: !1390, size: 64, offset: 2368)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1612, file: !6, line: 136, baseType: !1690, size: 64, offset: 2432)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !6, line: 58, flags: DIFlagFwdDecl)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1612, file: !6, line: 138, baseType: !1668, size: 384, offset: 2496)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !1612, file: !6, line: 139, baseType: !1694, size: 64, offset: 2880)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !1336, line: 80, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !1336, line: 72, size: 192, elements: !1697)
!1697 = !{!1698, !1705, !1706, !1707, !1708}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1696, file: !1336, line: 73, baseType: !1699, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !1336, line: 59, baseType: !1701)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !1336, line: 56, size: 128, elements: !1702)
!1702 = !{!1703, !1704}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1701, file: !1336, line: 57, baseType: !1502, size: 96)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1701, file: !1336, line: 58, baseType: !1242, size: 32, offset: 96)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1696, file: !1336, line: 74, baseType: !1242, size: 32, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1696, file: !1336, line: 76, baseType: !1242, size: 32, offset: 96)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1696, file: !1336, line: 77, baseType: !1242, size: 32, offset: 128)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1696, file: !1336, line: 79, baseType: !1242, size: 32, offset: 160)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !1612, file: !6, line: 141, baseType: !1399, size: 128, offset: 2944)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !1612, file: !6, line: 142, baseType: !1399, size: 128, offset: 3072)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !1612, file: !6, line: 143, baseType: !1399, size: 128, offset: 3200)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1612, file: !6, line: 144, baseType: !1399, size: 128, offset: 3328)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1612, file: !6, line: 146, baseType: !1242, size: 32, offset: 3456)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !1612, file: !6, line: 147, baseType: !1242, size: 32, offset: 3488)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1612, file: !6, line: 150, baseType: !1716, size: 64, offset: 3520)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !6, line: 50, flags: DIFlagFwdDecl)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !1612, file: !6, line: 151, baseType: !1720, size: 64, offset: 3584)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1612, file: !6, line: 152, baseType: !1242, size: 32, offset: 3648)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !1612, file: !6, line: 153, baseType: !1242, size: 32, offset: 3680)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1612, file: !6, line: 156, baseType: !1502, size: 96, offset: 3712)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !1612, file: !6, line: 156, baseType: !1502, size: 96, offset: 3808)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !1612, file: !6, line: 156, baseType: !1502, size: 96, offset: 3904)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1612, file: !6, line: 157, baseType: !1502, size: 96, offset: 4000)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !1612, file: !6, line: 158, baseType: !1502, size: 96, offset: 4096)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !1612, file: !6, line: 159, baseType: !1502, size: 96, offset: 4192)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1612, file: !6, line: 160, baseType: !1502, size: 96, offset: 4288)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !1612, file: !6, line: 160, baseType: !1502, size: 96, offset: 4384)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1612, file: !6, line: 161, baseType: !1732, size: 128, offset: 4480)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 128, elements: !1609)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !1612, file: !6, line: 161, baseType: !1732, size: 128, offset: 4608)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !1612, file: !6, line: 162, baseType: !1502, size: 96, offset: 4736)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !1612, file: !6, line: 162, baseType: !1502, size: 96, offset: 4832)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !1612, file: !6, line: 163, baseType: !1407, size: 32, offset: 4928)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !1612, file: !6, line: 163, baseType: !1407, size: 32, offset: 4960)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !1612, file: !6, line: 164, baseType: !1513, size: 512, offset: 4992)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !1612, file: !6, line: 165, baseType: !1513, size: 512, offset: 5504)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !1612, file: !6, line: 166, baseType: !1513, size: 512, offset: 6016)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1612, file: !6, line: 167, baseType: !1513, size: 512, offset: 6528)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !1612, file: !6, line: 176, baseType: !1513, size: 512, offset: 7040)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1612, file: !6, line: 178, baseType: !7, size: 32, offset: 7552)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1612, file: !6, line: 180, baseType: !1410, size: 16, offset: 7584)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !1612, file: !6, line: 181, baseType: !1410, size: 16, offset: 7600)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !1612, file: !6, line: 183, baseType: !1410, size: 16, offset: 7616)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !1612, file: !6, line: 183, baseType: !1410, size: 16, offset: 7632)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !1612, file: !6, line: 184, baseType: !1410, size: 16, offset: 7648)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !1612, file: !6, line: 184, baseType: !1410, size: 16, offset: 7664)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !1612, file: !6, line: 185, baseType: !1410, size: 16, offset: 7680)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !1612, file: !6, line: 186, baseType: !1410, size: 16, offset: 7696)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !1612, file: !6, line: 187, baseType: !1410, size: 16, offset: 7712)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !1612, file: !6, line: 188, baseType: !1433, size: 8, offset: 7728)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !1612, file: !6, line: 189, baseType: !1433, size: 8, offset: 7736)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !1612, file: !6, line: 192, baseType: !1242, size: 32, offset: 7744)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !1612, file: !6, line: 192, baseType: !1242, size: 32, offset: 7776)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !1612, file: !6, line: 192, baseType: !1242, size: 32, offset: 7808)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !1612, file: !6, line: 192, baseType: !1242, size: 32, offset: 7840)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1612, file: !6, line: 194, baseType: !1242, size: 32, offset: 7872)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1612, file: !6, line: 202, baseType: !1407, size: 32, offset: 7904)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !1612, file: !6, line: 202, baseType: !1407, size: 32, offset: 7936)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !1612, file: !6, line: 202, baseType: !1407, size: 32, offset: 7968)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !1612, file: !6, line: 211, baseType: !1407, size: 32, offset: 8000)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !1612, file: !6, line: 212, baseType: !1407, size: 32, offset: 8032)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1612, file: !6, line: 213, baseType: !1407, size: 32, offset: 8064)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !1612, file: !6, line: 214, baseType: !1407, size: 32, offset: 8096)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !1612, file: !6, line: 215, baseType: !1407, size: 32, offset: 8128)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !1612, file: !6, line: 216, baseType: !1407, size: 32, offset: 8160)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !1612, file: !6, line: 219, baseType: !1407, size: 32, offset: 8192)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !1612, file: !6, line: 220, baseType: !1407, size: 32, offset: 8224)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !1612, file: !6, line: 221, baseType: !1407, size: 32, offset: 8256)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !1612, file: !6, line: 224, baseType: !1773, size: 16, offset: 8288)
!1773 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !1612, file: !6, line: 224, baseType: !1773, size: 16, offset: 8304)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !1612, file: !6, line: 226, baseType: !1410, size: 16, offset: 8320)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !1612, file: !6, line: 228, baseType: !1433, size: 8, offset: 8336)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !1612, file: !6, line: 229, baseType: !1433, size: 8, offset: 8344)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !1612, file: !6, line: 231, baseType: !1410, size: 16, offset: 8352)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1612, file: !6, line: 232, baseType: !1433, size: 8, offset: 8368)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !1612, file: !6, line: 233, baseType: !1433, size: 8, offset: 8376)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !1612, file: !6, line: 234, baseType: !1407, size: 32, offset: 8384)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !1612, file: !6, line: 235, baseType: !1407, size: 32, offset: 8416)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1612, file: !6, line: 237, baseType: !1399, size: 128, offset: 8448)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !1612, file: !6, line: 238, baseType: !1399, size: 128, offset: 8576)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !1612, file: !6, line: 239, baseType: !1399, size: 128, offset: 8704)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !1612, file: !6, line: 240, baseType: !1399, size: 128, offset: 8832)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1612, file: !6, line: 242, baseType: !1407, size: 32, offset: 8960)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1612, file: !6, line: 244, baseType: !1410, size: 16, offset: 8992)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !1612, file: !6, line: 245, baseType: !1773, size: 16, offset: 9008)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1612, file: !6, line: 246, baseType: !1732, size: 128, offset: 9024)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !1612, file: !6, line: 248, baseType: !1242, size: 32, offset: 9152)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !1612, file: !6, line: 249, baseType: !1242, size: 32, offset: 9184)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !1612, file: !6, line: 251, baseType: !1794, size: 64, offset: 9216)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !6, line: 251, flags: DIFlagFwdDecl)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !1612, file: !6, line: 253, baseType: !1433, size: 8, offset: 9280)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1612, file: !6, line: 254, baseType: !1433, size: 8, offset: 9288)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !1612, file: !6, line: 255, baseType: !1410, size: 16, offset: 9296)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !1612, file: !6, line: 256, baseType: !1502, size: 96, offset: 9312)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !1612, file: !6, line: 258, baseType: !1399, size: 128, offset: 9408)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !1612, file: !6, line: 259, baseType: !1399, size: 128, offset: 9536)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !1612, file: !6, line: 260, baseType: !1399, size: 128, offset: 9664)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !1612, file: !6, line: 261, baseType: !1399, size: 128, offset: 9792)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1612, file: !6, line: 263, baseType: !1805, size: 64, offset: 9920)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !6, line: 52, flags: DIFlagFwdDecl)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1612, file: !6, line: 264, baseType: !1808, size: 64, offset: 9984)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !6, line: 53, flags: DIFlagFwdDecl)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !1612, file: !6, line: 265, baseType: !1811, size: 64, offset: 10048)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !1336, line: 46, flags: DIFlagFwdDecl)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !1612, file: !6, line: 267, baseType: !1433, size: 8, offset: 10112)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !1612, file: !6, line: 268, baseType: !1433, size: 8, offset: 10120)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1612, file: !6, line: 269, baseType: !1410, size: 16, offset: 10128)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !1612, file: !6, line: 270, baseType: !1407, size: 32, offset: 10144)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !1612, file: !6, line: 272, baseType: !1818, size: 64, offset: 10176)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !6, line: 54, flags: DIFlagFwdDecl)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !1612, file: !6, line: 275, baseType: !1821, size: 64, offset: 10240)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !6, line: 275, flags: DIFlagFwdDecl)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !1612, file: !6, line: 277, baseType: !1824, size: 64, offset: 10304)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 56, flags: DIFlagFwdDecl)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !1612, file: !6, line: 277, baseType: !1824, size: 64, offset: 10368)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !1612, file: !6, line: 278, baseType: !1828, size: 64, offset: 10432)
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1829, line: 27, baseType: !1830)
!1829 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1831, line: 45, baseType: !1832)
!1831 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1832 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1612, file: !6, line: 279, baseType: !1828, size: 64, offset: 10496)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1612, file: !6, line: 280, baseType: !7, size: 32, offset: 10560)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !1612, file: !6, line: 281, baseType: !7, size: 32, offset: 10592)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !1612, file: !6, line: 283, baseType: !1399, size: 128, offset: 10624)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !1612, file: !6, line: 284, baseType: !1399, size: 128, offset: 10752)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !1612, file: !6, line: 285, baseType: !1487, size: 64, offset: 10880)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !1612, file: !6, line: 287, baseType: !1840, size: 64, offset: 10944)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !6, line: 59, flags: DIFlagFwdDecl)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !1612, file: !6, line: 288, baseType: !1843, size: 64, offset: 11008)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !6, line: 288, flags: DIFlagFwdDecl)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !1612, file: !6, line: 290, baseType: !1846, size: 64, offset: 11072)
!1846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 64, elements: !1847)
!1847 = !{!1848}
!1848 = !DISubrange(count: 2)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1612, file: !6, line: 291, baseType: !1850, size: 64, offset: 11136)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1852, line: 65, baseType: !1853)
!1852 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1852, line: 50, size: 320, elements: !1854)
!1854 = !{!1855, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1853, file: !1852, line: 51, baseType: !1856, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1858, line: 1216, size: 39680, elements: !1859)
!1858 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1859 = !{!1860, !1861, !1862, !1863, !1866, !1867, !1868, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1892, !1965, !2403, !2618, !2621, !2910, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2932, !2933, !2934, !2935, !2936, !2944, !3011, !3018, !3019, !3026, !3027, !3028, !3029, !3030, !3031, !3032}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1857, file: !1858, line: 1217, baseType: !1414, size: 960)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1857, file: !1858, line: 1218, baseType: !1482, size: 64, offset: 960)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1857, file: !1858, line: 1220, baseType: !1611, size: 64, offset: 1024)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1857, file: !1858, line: 1221, baseType: !1864, size: 64, offset: 1088)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1858, line: 52, flags: DIFlagFwdDecl)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1857, file: !1858, line: 1223, baseType: !1856, size: 64, offset: 1152)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1857, file: !1858, line: 1225, baseType: !1399, size: 128, offset: 1216)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1857, file: !1858, line: 1226, baseType: !1869, size: 64, offset: 1344)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1858, line: 69, size: 320, elements: !1871)
!1871 = !{!1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1870, file: !1858, line: 70, baseType: !1869, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1870, file: !1858, line: 70, baseType: !1869, size: 64, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1870, file: !1858, line: 71, baseType: !7, size: 32, offset: 128)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1870, file: !1858, line: 71, baseType: !7, size: 32, offset: 160)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1870, file: !1858, line: 72, baseType: !1242, size: 32, offset: 192)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1870, file: !1858, line: 73, baseType: !1410, size: 16, offset: 224)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1870, file: !1858, line: 73, baseType: !1410, size: 16, offset: 240)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1870, file: !1858, line: 74, baseType: !1611, size: 64, offset: 256)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1857, file: !1858, line: 1227, baseType: !1611, size: 64, offset: 1408)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1857, file: !1858, line: 1229, baseType: !1502, size: 96, offset: 1472)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1857, file: !1858, line: 1230, baseType: !1502, size: 96, offset: 1568)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1857, file: !1858, line: 1231, baseType: !1502, size: 96, offset: 1664)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1857, file: !1858, line: 1231, baseType: !1502, size: 96, offset: 1760)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1857, file: !1858, line: 1233, baseType: !7, size: 32, offset: 1856)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1857, file: !1858, line: 1234, baseType: !1242, size: 32, offset: 1888)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1857, file: !1858, line: 1235, baseType: !7, size: 32, offset: 1920)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1857, file: !1858, line: 1237, baseType: !1410, size: 16, offset: 1952)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1857, file: !1858, line: 1239, baseType: !1433, size: 8, offset: 1968)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1857, file: !1858, line: 1240, baseType: !1891, size: 8, offset: 1976)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 8, elements: !1531)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1857, file: !1858, line: 1242, baseType: !1893, size: 64, offset: 1984)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1895, line: 328, size: 3456, elements: !1896)
!1895 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1896 = !{!1897, !1898, !1899, !1902, !1903, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1931, !1932, !1933, !1936, !1941, !1942, !1945, !1949, !1953, !1957, !1961, !1962, !1963, !1964}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1894, file: !1895, line: 329, baseType: !1414, size: 960)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1894, file: !1895, line: 330, baseType: !1482, size: 64, offset: 960)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1894, file: !1895, line: 332, baseType: !1900, size: 64, offset: 1024)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1895, line: 332, flags: DIFlagFwdDecl)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1894, file: !1895, line: 333, baseType: !1461, size: 512, offset: 1088)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1894, file: !1895, line: 335, baseType: !1904, size: 64, offset: 1600)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !1895, line: 335, flags: DIFlagFwdDecl)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1894, file: !1895, line: 337, baseType: !1690, size: 64, offset: 1664)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1894, file: !1895, line: 338, baseType: !1846, size: 64, offset: 1728)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1894, file: !1895, line: 340, baseType: !1399, size: 128, offset: 1792)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1894, file: !1895, line: 340, baseType: !1399, size: 128, offset: 1920)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1894, file: !1895, line: 342, baseType: !1242, size: 32, offset: 2048)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1894, file: !1895, line: 342, baseType: !1242, size: 32, offset: 2080)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1894, file: !1895, line: 343, baseType: !1242, size: 32, offset: 2112)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1894, file: !1895, line: 345, baseType: !1242, size: 32, offset: 2144)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1894, file: !1895, line: 346, baseType: !1242, size: 32, offset: 2176)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1894, file: !1895, line: 347, baseType: !1410, size: 16, offset: 2208)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1894, file: !1895, line: 348, baseType: !1410, size: 16, offset: 2224)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1894, file: !1895, line: 349, baseType: !1242, size: 32, offset: 2240)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1894, file: !1895, line: 351, baseType: !1242, size: 32, offset: 2272)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1894, file: !1895, line: 353, baseType: !1410, size: 16, offset: 2304)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1894, file: !1895, line: 354, baseType: !1410, size: 16, offset: 2320)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1894, file: !1895, line: 355, baseType: !1242, size: 32, offset: 2336)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1894, file: !1895, line: 357, baseType: !1923, size: 128, offset: 2368)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1924, line: 95, baseType: !1925)
!1924 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1924, line: 92, size: 128, elements: !1926)
!1926 = !{!1927, !1928, !1929, !1930}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1925, file: !1924, line: 93, baseType: !1407, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1925, file: !1924, line: 93, baseType: !1407, size: 32, offset: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1925, file: !1924, line: 94, baseType: !1407, size: 32, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1925, file: !1924, line: 94, baseType: !1407, size: 32, offset: 96)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1894, file: !1895, line: 363, baseType: !1399, size: 128, offset: 2496)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1894, file: !1895, line: 363, baseType: !1399, size: 128, offset: 2624)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1894, file: !1895, line: 368, baseType: !1934, size: 64, offset: 2752)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1895, line: 48, flags: DIFlagFwdDecl)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1894, file: !1895, line: 372, baseType: !1937, size: 32, offset: 2816)
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1895, line: 274, baseType: !1938)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1895, line: 271, size: 32, elements: !1939)
!1939 = !{!1940}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1938, file: !1895, line: 273, baseType: !7, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1894, file: !1895, line: 373, baseType: !1242, size: 32, offset: 2848)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1894, file: !1895, line: 382, baseType: !1943, size: 64, offset: 2880)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1895, line: 46, flags: DIFlagFwdDecl)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1894, file: !1895, line: 385, baseType: !1946, size: 64, offset: 2944)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{null, !1390, !1407}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1894, file: !1895, line: 386, baseType: !1950, size: 64, offset: 3008)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 64)
!1951 = !DISubroutineType(types: !1952)
!1952 = !{null, !1390, !1720}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1894, file: !1895, line: 387, baseType: !1954, size: 64, offset: 3072)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DISubroutineType(types: !1956)
!1956 = !{!1242, !1390}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1894, file: !1895, line: 388, baseType: !1958, size: 64, offset: 3136)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DISubroutineType(types: !1960)
!1960 = !{null, !1390}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1894, file: !1895, line: 389, baseType: !1390, size: 64, offset: 3200)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1894, file: !1895, line: 389, baseType: !1390, size: 64, offset: 3264)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1894, file: !1895, line: 389, baseType: !1390, size: 64, offset: 3328)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1894, file: !1895, line: 389, baseType: !1390, size: 64, offset: 3392)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1857, file: !1858, line: 1244, baseType: !1966, size: 64, offset: 2048)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1968, line: 200, size: 17024, elements: !1969)
!1968 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1969 = !{!1970, !1971, !1972, !1973, !2396, !2397, !2398, !2399, !2400, !2401, !2402}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1967, file: !1968, line: 201, baseType: !1487, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1967, file: !1968, line: 202, baseType: !1399, size: 128, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1967, file: !1968, line: 203, baseType: !1399, size: 128, offset: 192)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1967, file: !1968, line: 206, baseType: !1974, size: 64, offset: 320)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1968, line: 190, baseType: !1976)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1968, line: 126, size: 2816, elements: !1977)
!1977 = !{!1978, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2076, !2077, !2078, !2079, !2356, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2395}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1976, file: !1968, line: 127, baseType: !1979, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1976, file: !1968, line: 127, baseType: !1979, size: 64, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1976, file: !1968, line: 128, baseType: !1390, size: 64, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1976, file: !1968, line: 129, baseType: !1390, size: 64, offset: 192)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1976, file: !1968, line: 130, baseType: !1461, size: 512, offset: 256)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1976, file: !1968, line: 132, baseType: !1242, size: 32, offset: 768)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1976, file: !1968, line: 132, baseType: !1242, size: 32, offset: 800)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1976, file: !1968, line: 133, baseType: !1242, size: 32, offset: 832)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1976, file: !1968, line: 134, baseType: !1242, size: 32, offset: 864)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1976, file: !1968, line: 134, baseType: !1242, size: 32, offset: 896)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1976, file: !1968, line: 134, baseType: !1242, size: 32, offset: 928)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1976, file: !1968, line: 135, baseType: !1242, size: 32, offset: 960)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1976, file: !1968, line: 135, baseType: !1242, size: 32, offset: 992)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1976, file: !1968, line: 136, baseType: !1242, size: 32, offset: 1024)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1976, file: !1968, line: 136, baseType: !1242, size: 32, offset: 1056)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1976, file: !1968, line: 137, baseType: !1242, size: 32, offset: 1088)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1976, file: !1968, line: 137, baseType: !1242, size: 32, offset: 1120)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1976, file: !1968, line: 138, baseType: !1407, size: 32, offset: 1152)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1976, file: !1968, line: 139, baseType: !1407, size: 32, offset: 1184)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1976, file: !1968, line: 139, baseType: !1407, size: 32, offset: 1216)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1976, file: !1968, line: 141, baseType: !1410, size: 16, offset: 1248)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1976, file: !1968, line: 142, baseType: !1410, size: 16, offset: 1264)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1976, file: !1968, line: 143, baseType: !1242, size: 32, offset: 1280)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1976, file: !1968, line: 144, baseType: !1242, size: 32, offset: 1312)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1976, file: !1968, line: 146, baseType: !2004, size: 64, offset: 1344)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1968, line: 114, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1968, line: 99, size: 7232, elements: !2007)
!2007 = !{!2008, !2010, !2011, !2012, !2013, !2014, !2015, !2026, !2030, !2044, !2053, !2060, !2070}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2006, file: !1968, line: 100, baseType: !2009, size: 64)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2006, file: !1968, line: 100, baseType: !2009, size: 64, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !2006, file: !1968, line: 101, baseType: !1242, size: 32, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2006, file: !1968, line: 101, baseType: !1242, size: 32, offset: 160)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !2006, file: !1968, line: 102, baseType: !1242, size: 32, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !2006, file: !1968, line: 102, baseType: !1242, size: 32, offset: 224)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !2006, file: !1968, line: 103, baseType: !2016, size: 64, offset: 256)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1968, line: 59, baseType: !2018)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1968, line: 56, size: 2112, elements: !2019)
!2019 = !{!2020, !2024, !2025}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2018, file: !1968, line: 57, baseType: !2021, size: 2048)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 2048, elements: !2022)
!2022 = !{!2023}
!2023 = !DISubrange(count: 256)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !2018, file: !1968, line: 58, baseType: !1242, size: 32, offset: 2048)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !2018, file: !1968, line: 58, baseType: !1242, size: 32, offset: 2080)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2006, file: !1968, line: 106, baseType: !2027, size: 6144, offset: 320)
!2027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 6144, elements: !2028)
!2028 = !{!2029}
!2029 = !DISubrange(count: 768)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2006, file: !1968, line: 107, baseType: !2031, size: 64, offset: 6464)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1968, line: 97, baseType: !2033)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1968, line: 83, size: 8320, elements: !2034)
!2034 = !{!2035, !2036, !2037, !2040, !2041, !2042, !2043}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2033, file: !1968, line: 84, baseType: !2027, size: 6144)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2033, file: !1968, line: 87, baseType: !2021, size: 2048, offset: 6144)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2033, file: !1968, line: 88, baseType: !2038, size: 64, offset: 8192)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1852, line: 41, flags: DIFlagFwdDecl)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2033, file: !1968, line: 90, baseType: !1410, size: 16, offset: 8256)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2033, file: !1968, line: 92, baseType: !1410, size: 16, offset: 8272)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !2033, file: !1968, line: 93, baseType: !1410, size: 16, offset: 8288)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !2033, file: !1968, line: 95, baseType: !1410, size: 16, offset: 8304)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !2006, file: !1968, line: 108, baseType: !2045, size: 64, offset: 6528)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1968, line: 66, baseType: !2047)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1968, line: 61, size: 128, elements: !2048)
!2048 = !{!2049, !2050, !2051, !2052}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !2047, file: !1968, line: 62, baseType: !1242, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !2047, file: !1968, line: 63, baseType: !1242, size: 32, offset: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2047, file: !1968, line: 64, baseType: !1242, size: 32, offset: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2047, file: !1968, line: 65, baseType: !1242, size: 32, offset: 96)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !2006, file: !1968, line: 109, baseType: !2054, size: 64, offset: 6592)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1968, line: 71, baseType: !2056)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1968, line: 68, size: 64, elements: !2057)
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !2056, file: !1968, line: 69, baseType: !1242, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !2056, file: !1968, line: 70, baseType: !1242, size: 32, offset: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !2006, file: !1968, line: 110, baseType: !2061, size: 64, offset: 6656)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1968, line: 81, baseType: !2063)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1968, line: 73, size: 352, elements: !2064)
!2064 = !{!2065, !2066, !2067, !2068, !2069}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !2063, file: !1968, line: 74, baseType: !1502, size: 96)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2063, file: !1968, line: 75, baseType: !1502, size: 96, offset: 96)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2063, file: !1968, line: 76, baseType: !1502, size: 96, offset: 192)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2063, file: !1968, line: 77, baseType: !1242, size: 32, offset: 288)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2063, file: !1968, line: 78, baseType: !1242, size: 32, offset: 320)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2006, file: !1968, line: 113, baseType: !2071, size: 512, offset: 6720)
!2071 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !2072, line: 182, baseType: !2073)
!2072 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !2072, line: 180, size: 512, elements: !2074)
!2074 = !{!2075}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2073, file: !2072, line: 181, baseType: !1461, size: 512)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1976, file: !1968, line: 148, baseType: !1631, size: 64, offset: 1408)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1976, file: !1968, line: 151, baseType: !1856, size: 64, offset: 1472)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1976, file: !1968, line: 152, baseType: !1611, size: 64, offset: 1536)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1976, file: !1968, line: 153, baseType: !2080, size: 64, offset: 1600)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !2082, line: 64, size: 19136, elements: !2083)
!2082 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2083 = !{!2084, !2085, !2086, !2087, !2088, !2089, !2091, !2092, !2093, !2094, !2097, !2098, !2342, !2343, !2351, !2352, !2353, !2354, !2355}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2081, file: !2082, line: 65, baseType: !1414, size: 960)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2081, file: !2082, line: 66, baseType: !1482, size: 64, offset: 960)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2081, file: !2082, line: 68, baseType: !1432, size: 8192, offset: 1024)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2081, file: !2082, line: 70, baseType: !1242, size: 32, offset: 9216)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2081, file: !2082, line: 71, baseType: !1242, size: 32, offset: 9248)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2081, file: !2082, line: 72, baseType: !2090, size: 64, offset: 9280)
!2090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1242, size: 64, elements: !1847)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2081, file: !2082, line: 74, baseType: !1407, size: 32, offset: 9344)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2081, file: !2082, line: 74, baseType: !1407, size: 32, offset: 9376)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2081, file: !2082, line: 76, baseType: !2038, size: 64, offset: 9408)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2081, file: !2082, line: 77, baseType: !2095, size: 64, offset: 9472)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !2082, line: 77, flags: DIFlagFwdDecl)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2081, file: !2082, line: 78, baseType: !1690, size: 64, offset: 9536)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !2081, file: !2082, line: 80, baseType: !2099, size: 2624, offset: 9600)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !2100, line: 340, size: 2624, elements: !2101)
!2100 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2101 = !{!2102, !2130, !2148, !2149, !2150, !2165, !2223, !2224, !2322, !2323, !2324, !2325, !2331}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !2099, file: !2100, line: 341, baseType: !2103, size: 576)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !2100, line: 251, baseType: !2104)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !2100, line: 207, size: 576, elements: !2105)
!2105 = !{!2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2104, file: !2100, line: 208, baseType: !1242, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !2104, file: !2100, line: 211, baseType: !1410, size: 16, offset: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !2104, file: !2100, line: 212, baseType: !1410, size: 16, offset: 48)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !2104, file: !2100, line: 213, baseType: !1407, size: 32, offset: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !2104, file: !2100, line: 214, baseType: !1410, size: 16, offset: 96)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !2104, file: !2100, line: 215, baseType: !1410, size: 16, offset: 112)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !2104, file: !2100, line: 216, baseType: !1410, size: 16, offset: 128)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !2104, file: !2100, line: 217, baseType: !1410, size: 16, offset: 144)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !2104, file: !2100, line: 218, baseType: !1410, size: 16, offset: 160)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !2104, file: !2100, line: 219, baseType: !1410, size: 16, offset: 176)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !2104, file: !2100, line: 220, baseType: !1407, size: 32, offset: 192)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !2104, file: !2100, line: 222, baseType: !1410, size: 16, offset: 224)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !2104, file: !2100, line: 225, baseType: !1410, size: 16, offset: 240)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !2104, file: !2100, line: 228, baseType: !1242, size: 32, offset: 256)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !2104, file: !2100, line: 229, baseType: !1242, size: 32, offset: 288)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !2104, file: !2100, line: 233, baseType: !1242, size: 32, offset: 320)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !2104, file: !2100, line: 236, baseType: !1410, size: 16, offset: 352)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2104, file: !2100, line: 236, baseType: !1410, size: 16, offset: 368)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2104, file: !2100, line: 241, baseType: !1407, size: 32, offset: 384)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !2104, file: !2100, line: 244, baseType: !1242, size: 32, offset: 416)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !2104, file: !2100, line: 244, baseType: !1242, size: 32, offset: 448)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !2104, file: !2100, line: 245, baseType: !1407, size: 32, offset: 480)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !2104, file: !2100, line: 248, baseType: !1407, size: 32, offset: 512)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2104, file: !2100, line: 250, baseType: !1242, size: 32, offset: 544)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2099, file: !2100, line: 342, baseType: !2131, size: 448, offset: 576)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !2100, line: 79, baseType: !2132)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !2100, line: 61, size: 448, elements: !2133)
!2133 = !{!2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !2132, file: !2100, line: 62, baseType: !1390, size: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !2132, file: !2100, line: 64, baseType: !1410, size: 16, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2132, file: !2100, line: 65, baseType: !1410, size: 16, offset: 80)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !2132, file: !2100, line: 67, baseType: !1407, size: 32, offset: 96)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !2132, file: !2100, line: 68, baseType: !1407, size: 32, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !2132, file: !2100, line: 69, baseType: !1407, size: 32, offset: 160)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2132, file: !2100, line: 70, baseType: !1410, size: 16, offset: 192)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2132, file: !2100, line: 71, baseType: !1410, size: 16, offset: 208)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !2132, file: !2100, line: 72, baseType: !1846, size: 64, offset: 224)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2132, file: !2100, line: 75, baseType: !1407, size: 32, offset: 288)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !2132, file: !2100, line: 75, baseType: !1407, size: 32, offset: 320)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !2132, file: !2100, line: 75, baseType: !1407, size: 32, offset: 352)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !2132, file: !2100, line: 78, baseType: !1407, size: 32, offset: 384)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !2132, file: !2100, line: 78, baseType: !1407, size: 32, offset: 416)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !2099, file: !2100, line: 343, baseType: !1399, size: 128, offset: 1024)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !2099, file: !2100, line: 344, baseType: !1399, size: 128, offset: 1152)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !2099, file: !2100, line: 345, baseType: !2151, size: 192, offset: 1280)
!2151 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !2100, line: 278, baseType: !2152)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !2100, line: 270, size: 192, elements: !2153)
!2153 = !{!2154, !2155, !2156, !2157, !2158}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2152, file: !2100, line: 271, baseType: !1242, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2152, file: !2100, line: 273, baseType: !1407, size: 32, offset: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !2152, file: !2100, line: 275, baseType: !1242, size: 32, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !2152, file: !2100, line: 276, baseType: !1242, size: 32, offset: 96)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !2152, file: !2100, line: 277, baseType: !2159, size: 64, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !2100, line: 55, size: 576, elements: !2161)
!2161 = !{!2162, !2163, !2164}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2160, file: !2100, line: 56, baseType: !1242, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2160, file: !2100, line: 57, baseType: !1407, size: 32, offset: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2160, file: !2100, line: 58, baseType: !1513, size: 512, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !2099, file: !2100, line: 346, baseType: !2166, size: 384, offset: 1472)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !2100, line: 268, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !2100, line: 253, size: 384, elements: !2168)
!2168 = !{!2169, !2170, !2171, !2172, !2173, !2217, !2218, !2219, !2220, !2221, !2222}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2167, file: !2100, line: 254, baseType: !1242, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !2167, file: !2100, line: 255, baseType: !1242, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2167, file: !2100, line: 255, baseType: !1242, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !2167, file: !2100, line: 258, baseType: !1407, size: 32, offset: 96)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !2167, file: !2100, line: 259, baseType: !2174, size: 64, offset: 128)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !2100, line: 164, baseType: !2176)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !2100, line: 108, size: 1664, elements: !2177)
!2177 = !{!2178, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2176, file: !2100, line: 109, baseType: !2179, size: 64)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2176, file: !2100, line: 109, baseType: !2179, size: 64, offset: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2176, file: !2100, line: 111, baseType: !1461, size: 512, offset: 128)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !2176, file: !2100, line: 119, baseType: !1846, size: 64, offset: 640)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !2176, file: !2100, line: 119, baseType: !1846, size: 64, offset: 704)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2176, file: !2100, line: 125, baseType: !1846, size: 64, offset: 768)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2176, file: !2100, line: 125, baseType: !1846, size: 64, offset: 832)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2176, file: !2100, line: 127, baseType: !1846, size: 64, offset: 896)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2176, file: !2100, line: 130, baseType: !1242, size: 32, offset: 960)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2176, file: !2100, line: 131, baseType: !1242, size: 32, offset: 992)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2176, file: !2100, line: 132, baseType: !2190, size: 64, offset: 1024)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !2100, line: 106, baseType: !2192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !2100, line: 81, size: 512, elements: !2193)
!2193 = !{!2194, !2195, !2198, !2199, !2200, !2201}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2192, file: !2100, line: 82, baseType: !1846, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !2192, file: !2100, line: 97, baseType: !2196, size: 256, offset: 64)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 256, elements: !2197)
!2197 = !{!1515, !1848}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2192, file: !2100, line: 102, baseType: !1846, size: 64, offset: 320)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2192, file: !2100, line: 102, baseType: !1846, size: 64, offset: 384)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2192, file: !2100, line: 104, baseType: !1242, size: 32, offset: 448)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2192, file: !2100, line: 105, baseType: !1242, size: 32, offset: 480)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !2176, file: !2100, line: 135, baseType: !1502, size: 96, offset: 1088)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2176, file: !2100, line: 136, baseType: !1407, size: 32, offset: 1184)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2176, file: !2100, line: 139, baseType: !1242, size: 32, offset: 1216)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !2176, file: !2100, line: 139, baseType: !1242, size: 32, offset: 1248)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !2176, file: !2100, line: 139, baseType: !1242, size: 32, offset: 1280)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2176, file: !2100, line: 140, baseType: !1502, size: 96, offset: 1312)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !2176, file: !2100, line: 143, baseType: !1410, size: 16, offset: 1408)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2176, file: !2100, line: 144, baseType: !1410, size: 16, offset: 1424)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !2176, file: !2100, line: 145, baseType: !1410, size: 16, offset: 1440)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !2176, file: !2100, line: 148, baseType: !1410, size: 16, offset: 1456)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !2176, file: !2100, line: 149, baseType: !1242, size: 32, offset: 1472)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !2176, file: !2100, line: 150, baseType: !1407, size: 32, offset: 1504)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2176, file: !2100, line: 152, baseType: !1690, size: 64, offset: 1536)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2176, file: !2100, line: 163, baseType: !1407, size: 32, offset: 1600)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2176, file: !2100, line: 163, baseType: !1407, size: 32, offset: 1632)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !2167, file: !2100, line: 261, baseType: !1407, size: 32, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !2167, file: !2100, line: 261, baseType: !1407, size: 32, offset: 224)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !2167, file: !2100, line: 261, baseType: !1407, size: 32, offset: 256)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2167, file: !2100, line: 263, baseType: !1242, size: 32, offset: 288)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2167, file: !2100, line: 266, baseType: !1242, size: 32, offset: 320)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2167, file: !2100, line: 267, baseType: !1407, size: 32, offset: 352)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2099, file: !2100, line: 347, baseType: !2174, size: 64, offset: 1856)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !2099, file: !2100, line: 348, baseType: !2225, size: 64, offset: 1920)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !2100, line: 205, baseType: !2227)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !2100, line: 186, size: 1024, elements: !2228)
!2228 = !{!2229, !2231, !2232, !2233, !2235, !2236, !2237, !2245, !2246, !2247, !2320, !2321}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2227, file: !2100, line: 187, baseType: !2230, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2227, file: !2100, line: 187, baseType: !2230, size: 64, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2227, file: !2100, line: 189, baseType: !1461, size: 512, offset: 128)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !2227, file: !2100, line: 191, baseType: !2234, size: 64, offset: 640)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !2227, file: !2100, line: 193, baseType: !1242, size: 32, offset: 704)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2227, file: !2100, line: 193, baseType: !1242, size: 32, offset: 736)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2227, file: !2100, line: 195, baseType: !2238, size: 64, offset: 768)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !2100, line: 184, baseType: !2240)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !2100, line: 166, size: 320, elements: !2241)
!2241 = !{!2242, !2243, !2244}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !2240, file: !2100, line: 180, baseType: !2196, size: 256)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2240, file: !2100, line: 182, baseType: !1242, size: 32, offset: 256)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2240, file: !2100, line: 183, baseType: !1242, size: 32, offset: 288)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2227, file: !2100, line: 196, baseType: !1242, size: 32, offset: 832)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2227, file: !2100, line: 198, baseType: !1242, size: 32, offset: 864)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2227, file: !2100, line: 200, baseType: !2248, size: 64, offset: 896)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1852, line: 77, size: 15424, elements: !2250)
!2250 = !{!2251, !2252, !2253, !2256, !2259, !2260, !2263, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2281, !2282, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2314}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2249, file: !1852, line: 78, baseType: !1414, size: 960)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2249, file: !1852, line: 80, baseType: !1432, size: 8192, offset: 960)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2249, file: !1852, line: 82, baseType: !2254, size: 64, offset: 9152)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2255 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1852, line: 43, flags: DIFlagFwdDecl)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2249, file: !1852, line: 83, baseType: !2257, size: 64, offset: 9216)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !1415, line: 46, flags: DIFlagFwdDecl)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2249, file: !1852, line: 86, baseType: !2038, size: 64, offset: 9280)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !2249, file: !1852, line: 87, baseType: !2261, size: 64, offset: 9344)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1852, line: 44, flags: DIFlagFwdDecl)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !2249, file: !1852, line: 89, baseType: !2264, size: 512, offset: 9408)
!2264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2261, size: 512, elements: !1411)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !2249, file: !1852, line: 90, baseType: !1410, size: 16, offset: 9920)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !2249, file: !1852, line: 90, baseType: !1410, size: 16, offset: 9936)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2249, file: !1852, line: 92, baseType: !1410, size: 16, offset: 9952)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2249, file: !1852, line: 92, baseType: !1410, size: 16, offset: 9968)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2249, file: !1852, line: 93, baseType: !1410, size: 16, offset: 9984)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2249, file: !1852, line: 93, baseType: !1410, size: 16, offset: 10000)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2249, file: !1852, line: 94, baseType: !1242, size: 32, offset: 10016)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !2249, file: !1852, line: 97, baseType: !1410, size: 16, offset: 10048)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !2249, file: !1852, line: 97, baseType: !1410, size: 16, offset: 10064)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !2249, file: !1852, line: 98, baseType: !1410, size: 16, offset: 10080)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !2249, file: !1852, line: 98, baseType: !1410, size: 16, offset: 10096)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !2249, file: !1852, line: 99, baseType: !1410, size: 16, offset: 10112)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !2249, file: !1852, line: 99, baseType: !1410, size: 16, offset: 10128)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !2249, file: !1852, line: 100, baseType: !7, size: 32, offset: 10144)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !2249, file: !1852, line: 101, baseType: !2280, size: 64, offset: 10176)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !2249, file: !1852, line: 103, baseType: !1439, size: 64, offset: 10240)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2249, file: !1852, line: 104, baseType: !2283, size: 64, offset: 10304)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !1415, line: 159, size: 448, elements: !2285)
!2285 = !{!2286, !2288, !2289, !2291, !2292, !2294}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2284, file: !1415, line: 161, baseType: !2287, size: 64)
!2287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1847)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2284, file: !1415, line: 162, baseType: !2287, size: 64, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2284, file: !1415, line: 163, baseType: !2290, size: 32, offset: 128)
!2290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 32, elements: !1847)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2284, file: !1415, line: 164, baseType: !2290, size: 32, offset: 160)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !2284, file: !1415, line: 165, baseType: !2293, size: 128, offset: 192)
!2293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2280, size: 128, elements: !1847)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2284, file: !1415, line: 166, baseType: !2295, size: 128, offset: 320)
!2295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 128, elements: !1847)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !2249, file: !1852, line: 107, baseType: !1407, size: 32, offset: 10368)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !2249, file: !1852, line: 108, baseType: !1242, size: 32, offset: 10400)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !2249, file: !1852, line: 109, baseType: !1410, size: 16, offset: 10432)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2249, file: !1852, line: 110, baseType: !1410, size: 16, offset: 10448)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !2249, file: !1852, line: 113, baseType: !1242, size: 32, offset: 10464)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !2249, file: !1852, line: 113, baseType: !1242, size: 32, offset: 10496)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !2249, file: !1852, line: 114, baseType: !1433, size: 8, offset: 10528)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !2249, file: !1852, line: 114, baseType: !1433, size: 8, offset: 10536)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !2249, file: !1852, line: 115, baseType: !1410, size: 16, offset: 10544)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !2249, file: !1852, line: 116, baseType: !1732, size: 128, offset: 10560)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2249, file: !1852, line: 119, baseType: !1407, size: 32, offset: 10688)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2249, file: !1852, line: 119, baseType: !1407, size: 32, offset: 10720)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2249, file: !1852, line: 122, baseType: !2071, size: 512, offset: 10752)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !2249, file: !1852, line: 123, baseType: !1433, size: 8, offset: 11264)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2249, file: !1852, line: 125, baseType: !2311, size: 56, offset: 11272)
!2311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 56, elements: !2312)
!2312 = !{!2313}
!2313 = !DISubrange(count: 7)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !2249, file: !1852, line: 126, baseType: !2315, size: 4096, offset: 11328)
!2315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2316, size: 4096, elements: !1411)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1852, line: 69, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1852, line: 67, size: 512, elements: !2318)
!2318 = !{!2319}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2317, file: !1852, line: 68, baseType: !1461, size: 512)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !2227, file: !2100, line: 201, baseType: !1407, size: 32, offset: 960)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2227, file: !2100, line: 204, baseType: !1242, size: 32, offset: 992)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2099, file: !2100, line: 350, baseType: !1399, size: 128, offset: 1984)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !2099, file: !2100, line: 351, baseType: !1242, size: 32, offset: 2112)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !2099, file: !2100, line: 351, baseType: !1242, size: 32, offset: 2144)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2099, file: !2100, line: 353, baseType: !2326, size: 64, offset: 2176)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !2100, line: 297, baseType: !2328)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !2100, line: 295, size: 2048, elements: !2329)
!2329 = !{!2330}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !2328, file: !2100, line: 296, baseType: !2021, size: 2048)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !2099, file: !2100, line: 355, baseType: !2332, size: 384, offset: 2240)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !2100, line: 338, baseType: !2333)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !2100, line: 322, size: 384, elements: !2334)
!2334 = !{!2335, !2336, !2337, !2338, !2339, !2340, !2341}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2333, file: !2100, line: 323, baseType: !1242, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !2333, file: !2100, line: 325, baseType: !1410, size: 16, offset: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2333, file: !2100, line: 326, baseType: !1410, size: 16, offset: 48)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !2333, file: !2100, line: 331, baseType: !1399, size: 128, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2333, file: !2100, line: 334, baseType: !1399, size: 128, offset: 192)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !2333, file: !2100, line: 335, baseType: !1242, size: 32, offset: 320)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2333, file: !2100, line: 337, baseType: !1242, size: 32, offset: 352)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !2081, file: !2082, line: 81, baseType: !1390, size: 64, offset: 12224)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2081, file: !2082, line: 85, baseType: !2344, size: 6208, offset: 12288)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !2082, line: 55, size: 6208, elements: !2345)
!2345 = !{!2346, !2347, !2348, !2349, !2350}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2344, file: !2082, line: 56, baseType: !2027, size: 6144)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2344, file: !2082, line: 58, baseType: !1410, size: 16, offset: 6144)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2344, file: !2082, line: 59, baseType: !1410, size: 16, offset: 6160)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !2344, file: !2082, line: 60, baseType: !1410, size: 16, offset: 6176)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !2344, file: !2082, line: 61, baseType: !1410, size: 16, offset: 6192)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2081, file: !2082, line: 86, baseType: !1242, size: 32, offset: 18496)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2081, file: !2082, line: 88, baseType: !1242, size: 32, offset: 18528)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2081, file: !2082, line: 90, baseType: !1242, size: 32, offset: 18560)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2081, file: !2082, line: 94, baseType: !1242, size: 32, offset: 18592)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2081, file: !2082, line: 100, baseType: !2071, size: 512, offset: 18624)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1976, file: !1968, line: 154, baseType: !2357, size: 64, offset: 1664)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !2359, line: 46, size: 1344, elements: !2360)
!2359 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mask_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2360 = !{!2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2358, file: !2359, line: 47, baseType: !1414, size: 960)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2358, file: !2359, line: 48, baseType: !1482, size: 64, offset: 960)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "masklayers", scope: !2358, file: !2359, line: 49, baseType: !1399, size: 128, offset: 1024)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_act", scope: !2358, file: !2359, line: 50, baseType: !1242, size: 32, offset: 1152)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_tot", scope: !2358, file: !2359, line: 51, baseType: !1242, size: 32, offset: 1184)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2358, file: !2359, line: 53, baseType: !1242, size: 32, offset: 1216)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2358, file: !2359, line: 53, baseType: !1242, size: 32, offset: 1248)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2358, file: !2359, line: 55, baseType: !1242, size: 32, offset: 1280)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2358, file: !2359, line: 56, baseType: !1242, size: 32, offset: 1312)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1976, file: !1968, line: 156, baseType: !2038, size: 64, offset: 1728)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1976, file: !1968, line: 158, baseType: !1407, size: 32, offset: 1792)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1976, file: !1968, line: 159, baseType: !1407, size: 32, offset: 1824)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1976, file: !1968, line: 162, baseType: !1979, size: 64, offset: 1856)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1976, file: !1968, line: 162, baseType: !1979, size: 64, offset: 1920)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1976, file: !1968, line: 162, baseType: !1979, size: 64, offset: 1984)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1976, file: !1968, line: 164, baseType: !1399, size: 128, offset: 2048)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1976, file: !1968, line: 166, baseType: !2378, size: 64, offset: 2176)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !2380, line: 39, flags: DIFlagFwdDecl)
!2380 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_sound.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1976, file: !1968, line: 167, baseType: !1390, size: 64, offset: 2240)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1976, file: !1968, line: 168, baseType: !1407, size: 32, offset: 2304)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1976, file: !1968, line: 170, baseType: !1407, size: 32, offset: 2336)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1976, file: !1968, line: 170, baseType: !1407, size: 32, offset: 2368)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1976, file: !1968, line: 171, baseType: !1407, size: 32, offset: 2400)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1976, file: !1968, line: 173, baseType: !1390, size: 64, offset: 2432)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1976, file: !1968, line: 175, baseType: !1242, size: 32, offset: 2496)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1976, file: !1968, line: 176, baseType: !1242, size: 32, offset: 2528)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1976, file: !1968, line: 179, baseType: !1242, size: 32, offset: 2560)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1976, file: !1968, line: 180, baseType: !1407, size: 32, offset: 2592)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1976, file: !1968, line: 183, baseType: !1242, size: 32, offset: 2624)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1976, file: !1968, line: 185, baseType: !1433, size: 8, offset: 2656)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1976, file: !1968, line: 186, baseType: !2394, size: 24, offset: 2664)
!2394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 24, elements: !1503)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1976, file: !1968, line: 189, baseType: !1399, size: 128, offset: 2688)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1967, file: !1968, line: 207, baseType: !1432, size: 8192, offset: 384)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1967, file: !1968, line: 208, baseType: !1432, size: 8192, offset: 8576)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1967, file: !1968, line: 210, baseType: !1242, size: 32, offset: 16768)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1967, file: !1968, line: 210, baseType: !1242, size: 32, offset: 16800)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1967, file: !1968, line: 211, baseType: !1242, size: 32, offset: 16832)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1967, file: !1968, line: 211, baseType: !1242, size: 32, offset: 16864)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1967, file: !1968, line: 212, baseType: !1923, size: 128, offset: 16896)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1857, file: !1858, line: 1246, baseType: !2404, size: 64, offset: 2112)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1858, line: 1067, size: 5184, elements: !2406)
!2406 = !{!2407, !2437, !2438, !2453, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2475, !2491, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2601}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2405, file: !1858, line: 1068, baseType: !2408, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1858, line: 934, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1858, line: 925, size: 576, elements: !2411)
!2411 = !{!2412, !2429, !2430, !2431, !2432, !2433, !2436}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2410, file: !1858, line: 926, baseType: !2413, size: 320)
!2413 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1858, line: 830, baseType: !2414)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1858, line: 813, size: 320, elements: !2415)
!2415 = !{!2416, !2419, !2422, !2423, !2426, !2427, !2428}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2414, file: !1858, line: 814, baseType: !2417, size: 64)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1858, line: 51, flags: DIFlagFwdDecl)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2414, file: !1858, line: 815, baseType: !2420, size: 64, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1858, line: 815, flags: DIFlagFwdDecl)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2414, file: !1858, line: 818, baseType: !1390, size: 64, offset: 128)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2414, file: !1858, line: 819, baseType: !2424, size: 32, offset: 192)
!2424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2425, size: 32, elements: !1609)
!2425 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2414, file: !1858, line: 822, baseType: !1242, size: 32, offset: 224)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2414, file: !1858, line: 826, baseType: !1242, size: 32, offset: 256)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2414, file: !1858, line: 829, baseType: !1242, size: 32, offset: 288)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2410, file: !1858, line: 928, baseType: !1410, size: 16, offset: 320)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2410, file: !1858, line: 928, baseType: !1410, size: 16, offset: 336)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2410, file: !1858, line: 929, baseType: !1242, size: 32, offset: 352)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2410, file: !1858, line: 930, baseType: !2280, size: 64, offset: 384)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2410, file: !1858, line: 931, baseType: !2434, size: 64, offset: 448)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!2435 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1633, line: 42, flags: DIFlagFwdDecl)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2410, file: !1858, line: 933, baseType: !1390, size: 64, offset: 512)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2405, file: !1858, line: 1069, baseType: !2408, size: 64, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2405, file: !1858, line: 1070, baseType: !2439, size: 64, offset: 128)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1858, line: 916, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1858, line: 891, size: 704, elements: !2442)
!2442 = !{!2443, !2444, !2445, !2447, !2448, !2449, !2450, !2451, !2452}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2441, file: !1858, line: 892, baseType: !2413, size: 320)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2441, file: !1858, line: 896, baseType: !1242, size: 32, offset: 320)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2441, file: !1858, line: 900, baseType: !2446, size: 96, offset: 352)
!2446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1242, size: 96, elements: !1503)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2441, file: !1858, line: 903, baseType: !1407, size: 32, offset: 448)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2441, file: !1858, line: 906, baseType: !1242, size: 32, offset: 480)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2441, file: !1858, line: 909, baseType: !1407, size: 32, offset: 512)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2441, file: !1858, line: 912, baseType: !1407, size: 32, offset: 544)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2441, file: !1858, line: 914, baseType: !1611, size: 64, offset: 576)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2441, file: !1858, line: 915, baseType: !1390, size: 64, offset: 640)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2405, file: !1858, line: 1071, baseType: !2454, size: 64, offset: 192)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1858, line: 920, baseType: !2456)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1858, line: 918, size: 320, elements: !2457)
!2457 = !{!2458}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2456, file: !1858, line: 919, baseType: !2413, size: 320)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2405, file: !1858, line: 1075, baseType: !1407, size: 32, offset: 256)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2405, file: !1858, line: 1077, baseType: !1407, size: 32, offset: 288)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2405, file: !1858, line: 1078, baseType: !1407, size: 32, offset: 320)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2405, file: !1858, line: 1079, baseType: !1410, size: 16, offset: 352)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2405, file: !1858, line: 1082, baseType: !1410, size: 16, offset: 368)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2405, file: !1858, line: 1085, baseType: !1433, size: 8, offset: 384)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2405, file: !1858, line: 1086, baseType: !1433, size: 8, offset: 392)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2405, file: !1858, line: 1087, baseType: !1433, size: 8, offset: 400)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2405, file: !1858, line: 1088, baseType: !1433, size: 8, offset: 408)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2405, file: !1858, line: 1090, baseType: !1407, size: 32, offset: 416)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2405, file: !1858, line: 1093, baseType: !1410, size: 16, offset: 448)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2405, file: !1858, line: 1096, baseType: !1433, size: 8, offset: 464)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2405, file: !1858, line: 1098, baseType: !2472, size: 40, offset: 472)
!2472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 40, elements: !2473)
!2473 = !{!2474}
!2474 = !DISubrange(count: 5)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2405, file: !1858, line: 1101, baseType: !2476, size: 832, offset: 512)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1858, line: 836, size: 832, elements: !2477)
!2477 = !{!2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2476, file: !1858, line: 837, baseType: !2413, size: 320)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2476, file: !1858, line: 839, baseType: !1410, size: 16, offset: 320)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2476, file: !1858, line: 839, baseType: !1410, size: 16, offset: 336)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2476, file: !1858, line: 842, baseType: !1410, size: 16, offset: 352)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2476, file: !1858, line: 842, baseType: !1410, size: 16, offset: 368)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2476, file: !1858, line: 843, baseType: !2290, size: 32, offset: 384)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2476, file: !1858, line: 845, baseType: !1242, size: 32, offset: 416)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2476, file: !1858, line: 847, baseType: !1390, size: 64, offset: 448)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2476, file: !1858, line: 848, baseType: !2248, size: 64, offset: 512)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2476, file: !1858, line: 849, baseType: !2248, size: 64, offset: 576)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2476, file: !1858, line: 850, baseType: !2248, size: 64, offset: 640)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2476, file: !1858, line: 851, baseType: !1502, size: 96, offset: 704)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2476, file: !1858, line: 852, baseType: !1407, size: 32, offset: 800)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2405, file: !1858, line: 1104, baseType: !2492, size: 1344, offset: 1344)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1858, line: 867, size: 1344, elements: !2493)
!2493 = !{!2494, !2495, !2496, !2497, !2498, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2492, file: !1858, line: 868, baseType: !1410, size: 16)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2492, file: !1858, line: 869, baseType: !1410, size: 16, offset: 16)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2492, file: !1858, line: 870, baseType: !1410, size: 16, offset: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2492, file: !1858, line: 871, baseType: !1410, size: 16, offset: 48)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2492, file: !1858, line: 873, baseType: !2499, size: 896, offset: 64)
!2499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2500, size: 896, elements: !2312)
!2500 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1858, line: 864, baseType: !2501)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1858, line: 859, size: 128, elements: !2502)
!2502 = !{!2503, !2504, !2505, !2506, !2507, !2508}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2501, file: !1858, line: 860, baseType: !1410, size: 16)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2501, file: !1858, line: 861, baseType: !1410, size: 16, offset: 16)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2501, file: !1858, line: 861, baseType: !1410, size: 16, offset: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2501, file: !1858, line: 861, baseType: !1410, size: 16, offset: 48)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2501, file: !1858, line: 862, baseType: !1242, size: 32, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2501, file: !1858, line: 863, baseType: !1407, size: 32, offset: 96)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2492, file: !1858, line: 874, baseType: !1390, size: 64, offset: 960)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2492, file: !1858, line: 876, baseType: !1407, size: 32, offset: 1024)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2492, file: !1858, line: 876, baseType: !1407, size: 32, offset: 1056)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2492, file: !1858, line: 878, baseType: !1242, size: 32, offset: 1088)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2492, file: !1858, line: 879, baseType: !1242, size: 32, offset: 1120)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2492, file: !1858, line: 881, baseType: !1242, size: 32, offset: 1152)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2492, file: !1858, line: 881, baseType: !1242, size: 32, offset: 1184)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2492, file: !1858, line: 883, baseType: !1856, size: 64, offset: 1216)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2492, file: !1858, line: 884, baseType: !1611, size: 64, offset: 1280)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2405, file: !1858, line: 1107, baseType: !1407, size: 32, offset: 2688)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2405, file: !1858, line: 1110, baseType: !1407, size: 32, offset: 2720)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2405, file: !1858, line: 1113, baseType: !1410, size: 16, offset: 2752)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2405, file: !1858, line: 1113, baseType: !1410, size: 16, offset: 2768)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2405, file: !1858, line: 1116, baseType: !1433, size: 8, offset: 2784)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2405, file: !1858, line: 1117, baseType: !1891, size: 8, offset: 2792)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2405, file: !1858, line: 1120, baseType: !1410, size: 16, offset: 2800)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2405, file: !1858, line: 1121, baseType: !1407, size: 32, offset: 2816)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2405, file: !1858, line: 1122, baseType: !1407, size: 32, offset: 2848)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2405, file: !1858, line: 1123, baseType: !1407, size: 32, offset: 2880)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2405, file: !1858, line: 1124, baseType: !1407, size: 32, offset: 2912)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2405, file: !1858, line: 1125, baseType: !1407, size: 32, offset: 2944)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2405, file: !1858, line: 1126, baseType: !1407, size: 32, offset: 2976)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2405, file: !1858, line: 1127, baseType: !1407, size: 32, offset: 3008)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2405, file: !1858, line: 1128, baseType: !1407, size: 32, offset: 3040)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2405, file: !1858, line: 1129, baseType: !1407, size: 32, offset: 3072)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2405, file: !1858, line: 1130, baseType: !1407, size: 32, offset: 3104)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2405, file: !1858, line: 1131, baseType: !1410, size: 16, offset: 3136)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2405, file: !1858, line: 1132, baseType: !1433, size: 8, offset: 3152)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2405, file: !1858, line: 1133, baseType: !1433, size: 8, offset: 3160)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2405, file: !1858, line: 1134, baseType: !2394, size: 24, offset: 3168)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2405, file: !1858, line: 1135, baseType: !1433, size: 8, offset: 3192)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2405, file: !1858, line: 1138, baseType: !1611, size: 64, offset: 3200)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2405, file: !1858, line: 1139, baseType: !1433, size: 8, offset: 3264)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2405, file: !1858, line: 1140, baseType: !1433, size: 8, offset: 3272)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2405, file: !1858, line: 1141, baseType: !1433, size: 8, offset: 3280)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2405, file: !1858, line: 1142, baseType: !1433, size: 8, offset: 3288)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2405, file: !1858, line: 1143, baseType: !1433, size: 8, offset: 3296)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2405, file: !1858, line: 1144, baseType: !2547, size: 64, offset: 3304)
!2547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 64, elements: !1411)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2405, file: !1858, line: 1145, baseType: !2547, size: 64, offset: 3368)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2405, file: !1858, line: 1148, baseType: !1433, size: 8, offset: 3432)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2405, file: !1858, line: 1149, baseType: !1433, size: 8, offset: 3440)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2405, file: !1858, line: 1152, baseType: !1433, size: 8, offset: 3448)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2405, file: !1858, line: 1152, baseType: !1433, size: 8, offset: 3456)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2405, file: !1858, line: 1153, baseType: !1433, size: 8, offset: 3464)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2405, file: !1858, line: 1154, baseType: !1410, size: 16, offset: 3472)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2405, file: !1858, line: 1154, baseType: !1410, size: 16, offset: 3488)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2405, file: !1858, line: 1155, baseType: !1410, size: 16, offset: 3504)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2405, file: !1858, line: 1155, baseType: !1410, size: 16, offset: 3520)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2405, file: !1858, line: 1156, baseType: !1433, size: 8, offset: 3536)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2405, file: !1858, line: 1157, baseType: !1433, size: 8, offset: 3544)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2405, file: !1858, line: 1159, baseType: !1433, size: 8, offset: 3552)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2405, file: !1858, line: 1160, baseType: !1433, size: 8, offset: 3560)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2405, file: !1858, line: 1161, baseType: !1433, size: 8, offset: 3568)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2405, file: !1858, line: 1162, baseType: !1433, size: 8, offset: 3576)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2405, file: !1858, line: 1165, baseType: !1242, size: 32, offset: 3584)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2405, file: !1858, line: 1166, baseType: !1242, size: 32, offset: 3616)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2405, file: !1858, line: 1167, baseType: !1242, size: 32, offset: 3648)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2405, file: !1858, line: 1168, baseType: !1242, size: 32, offset: 3680)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2405, file: !1858, line: 1171, baseType: !1410, size: 16, offset: 3712)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2405, file: !1858, line: 1171, baseType: !1410, size: 16, offset: 3728)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2405, file: !1858, line: 1172, baseType: !1242, size: 32, offset: 3744)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2405, file: !1858, line: 1173, baseType: !1407, size: 32, offset: 3776)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2405, file: !1858, line: 1174, baseType: !1407, size: 32, offset: 3808)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2405, file: !1858, line: 1177, baseType: !2574, size: 1024, offset: 3840)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1858, line: 963, size: 1024, elements: !2575)
!2575 = !{!2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2599, !2600}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2574, file: !1858, line: 965, baseType: !1242, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2574, file: !1858, line: 968, baseType: !1407, size: 32, offset: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2574, file: !1858, line: 971, baseType: !1407, size: 32, offset: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2574, file: !1858, line: 974, baseType: !1407, size: 32, offset: 96)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2574, file: !1858, line: 977, baseType: !1502, size: 96, offset: 128)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2574, file: !1858, line: 979, baseType: !1502, size: 96, offset: 224)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2574, file: !1858, line: 982, baseType: !1242, size: 32, offset: 320)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2574, file: !1858, line: 987, baseType: !1846, size: 64, offset: 352)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2574, file: !1858, line: 989, baseType: !1407, size: 32, offset: 416)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2574, file: !1858, line: 994, baseType: !1242, size: 32, offset: 448)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2574, file: !1858, line: 995, baseType: !1242, size: 32, offset: 480)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2574, file: !1858, line: 997, baseType: !1433, size: 8, offset: 512)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2574, file: !1858, line: 998, baseType: !2311, size: 56, offset: 520)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2574, file: !1858, line: 1000, baseType: !1407, size: 32, offset: 576)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2574, file: !1858, line: 1003, baseType: !1846, size: 64, offset: 608)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2574, file: !1858, line: 1006, baseType: !1242, size: 32, offset: 672)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2574, file: !1858, line: 1009, baseType: !1407, size: 32, offset: 704)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2574, file: !1858, line: 1012, baseType: !1846, size: 64, offset: 736)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2574, file: !1858, line: 1015, baseType: !1846, size: 64, offset: 800)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2574, file: !1858, line: 1018, baseType: !1242, size: 32, offset: 864)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2574, file: !1858, line: 1019, baseType: !2597, size: 64, offset: 896)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1858, line: 63, flags: DIFlagFwdDecl)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2574, file: !1858, line: 1023, baseType: !1407, size: 32, offset: 960)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2574, file: !1858, line: 1024, baseType: !1242, size: 32, offset: 992)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2405, file: !1858, line: 1179, baseType: !2602, size: 320, offset: 4864)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1858, line: 1043, size: 320, elements: !2603)
!2603 = !{!2604, !2605, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2602, file: !1858, line: 1044, baseType: !1433, size: 8)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2602, file: !1858, line: 1045, baseType: !2606, size: 16, offset: 8)
!2606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 16, elements: !1847)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2602, file: !1858, line: 1048, baseType: !1433, size: 8, offset: 24)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2602, file: !1858, line: 1049, baseType: !1407, size: 32, offset: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2602, file: !1858, line: 1049, baseType: !1407, size: 32, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2602, file: !1858, line: 1052, baseType: !1407, size: 32, offset: 96)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2602, file: !1858, line: 1052, baseType: !1407, size: 32, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2602, file: !1858, line: 1053, baseType: !1433, size: 8, offset: 160)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2602, file: !1858, line: 1054, baseType: !2394, size: 24, offset: 168)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2602, file: !1858, line: 1057, baseType: !1407, size: 32, offset: 192)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2602, file: !1858, line: 1057, baseType: !1407, size: 32, offset: 224)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2602, file: !1858, line: 1060, baseType: !1407, size: 32, offset: 256)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2602, file: !1858, line: 1060, baseType: !1407, size: 32, offset: 288)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1857, file: !1858, line: 1247, baseType: !2619, size: 64, offset: 2176)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1858, line: 60, flags: DIFlagFwdDecl)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1857, file: !1858, line: 1251, baseType: !2622, size: 31872, offset: 2240)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1858, line: 403, size: 31872, elements: !2623)
!2623 = !{!2624, !2699, !2719, !2728, !2748, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2886, !2887, !2888, !2892, !2908, !2909}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2622, file: !1858, line: 404, baseType: !2625, size: 1984)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1858, line: 259, size: 1984, elements: !2626)
!2626 = !{!2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2644, !2694}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2625, file: !1858, line: 260, baseType: !1433, size: 8)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2625, file: !1858, line: 263, baseType: !1433, size: 8, offset: 8)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2625, file: !1858, line: 266, baseType: !1433, size: 8, offset: 16)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2625, file: !1858, line: 267, baseType: !1433, size: 8, offset: 24)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2625, file: !1858, line: 269, baseType: !1433, size: 8, offset: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2625, file: !1858, line: 270, baseType: !1433, size: 8, offset: 40)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2625, file: !1858, line: 276, baseType: !1433, size: 8, offset: 48)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2625, file: !1858, line: 279, baseType: !1433, size: 8, offset: 56)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2625, file: !1858, line: 280, baseType: !1410, size: 16, offset: 64)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2625, file: !1858, line: 280, baseType: !1410, size: 16, offset: 80)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2625, file: !1858, line: 281, baseType: !1407, size: 32, offset: 96)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2625, file: !1858, line: 284, baseType: !1433, size: 8, offset: 128)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2625, file: !1858, line: 285, baseType: !1433, size: 8, offset: 136)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2625, file: !1858, line: 287, baseType: !2641, size: 48, offset: 144)
!2641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 48, elements: !2642)
!2642 = !{!2643}
!2643 = !DISubrange(count: 6)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2625, file: !1858, line: 290, baseType: !2645, size: 1280, offset: 192)
!2645 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !2072, line: 174, baseType: !2646)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !2072, line: 166, size: 1280, elements: !2647)
!2647 = !{!2648, !2649, !2650, !2651, !2652, !2653, !2654, !2693}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2646, file: !2072, line: 167, baseType: !1242, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2646, file: !2072, line: 167, baseType: !1242, size: 32, offset: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2646, file: !2072, line: 168, baseType: !1461, size: 512, offset: 64)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2646, file: !2072, line: 169, baseType: !1461, size: 512, offset: 576)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2646, file: !2072, line: 170, baseType: !1407, size: 32, offset: 1088)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2646, file: !2072, line: 171, baseType: !1407, size: 32, offset: 1120)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2646, file: !2072, line: 172, baseType: !2655, size: 64, offset: 1152)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !2072, line: 72, size: 3072, elements: !2657)
!2657 = !{!2658, !2659, !2660, !2661, !2662, !2663, !2664, !2689, !2690, !2691, !2692}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2656, file: !2072, line: 73, baseType: !1242, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2656, file: !2072, line: 73, baseType: !1242, size: 32, offset: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2656, file: !2072, line: 74, baseType: !1242, size: 32, offset: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2656, file: !2072, line: 75, baseType: !1242, size: 32, offset: 96)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2656, file: !2072, line: 77, baseType: !1923, size: 128, offset: 128)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2656, file: !2072, line: 77, baseType: !1923, size: 128, offset: 256)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2656, file: !2072, line: 79, baseType: !2665, size: 2304, offset: 384)
!2665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2666, size: 2304, elements: !1609)
!2666 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !2072, line: 67, baseType: !2667)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !2072, line: 55, size: 576, elements: !2668)
!2668 = !{!2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2685, !2686, !2687, !2688}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2667, file: !2072, line: 56, baseType: !1410, size: 16)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2667, file: !2072, line: 56, baseType: !1410, size: 16, offset: 16)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2667, file: !2072, line: 58, baseType: !1407, size: 32, offset: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2667, file: !2072, line: 59, baseType: !1407, size: 32, offset: 64)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2667, file: !2072, line: 59, baseType: !1407, size: 32, offset: 96)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2667, file: !2072, line: 60, baseType: !1846, size: 64, offset: 128)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2667, file: !2072, line: 60, baseType: !1846, size: 64, offset: 192)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2667, file: !2072, line: 61, baseType: !2677, size: 64, offset: 256)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !2072, line: 47, baseType: !2679)
!2679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !2072, line: 44, size: 96, elements: !2680)
!2680 = !{!2681, !2682, !2683, !2684}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2679, file: !2072, line: 45, baseType: !1407, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2679, file: !2072, line: 45, baseType: !1407, size: 32, offset: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2679, file: !2072, line: 46, baseType: !1410, size: 16, offset: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2679, file: !2072, line: 46, baseType: !1410, size: 16, offset: 80)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2667, file: !2072, line: 62, baseType: !2677, size: 64, offset: 320)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2667, file: !2072, line: 64, baseType: !2677, size: 64, offset: 384)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2667, file: !2072, line: 65, baseType: !1846, size: 64, offset: 448)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2667, file: !2072, line: 66, baseType: !1846, size: 64, offset: 512)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2656, file: !2072, line: 80, baseType: !1502, size: 96, offset: 2688)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2656, file: !2072, line: 80, baseType: !1502, size: 96, offset: 2784)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2656, file: !2072, line: 81, baseType: !1502, size: 96, offset: 2880)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2656, file: !2072, line: 83, baseType: !1502, size: 96, offset: 2976)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2646, file: !2072, line: 173, baseType: !1390, size: 64, offset: 1216)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2625, file: !1858, line: 291, baseType: !2695, size: 512, offset: 1472)
!2695 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !2072, line: 178, baseType: !2696)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !2072, line: 176, size: 512, elements: !2697)
!2697 = !{!2698}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2696, file: !2072, line: 177, baseType: !1461, size: 512)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2622, file: !1858, line: 406, baseType: !2700, size: 64, offset: 1984)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1858, line: 80, size: 1472, elements: !2702)
!2702 = !{!2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2701, file: !1858, line: 81, baseType: !1390, size: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2701, file: !1858, line: 82, baseType: !1390, size: 64, offset: 64)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2701, file: !1858, line: 83, baseType: !7, size: 32, offset: 128)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2701, file: !1858, line: 84, baseType: !7, size: 32, offset: 160)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2701, file: !1858, line: 86, baseType: !7, size: 32, offset: 192)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2701, file: !1858, line: 87, baseType: !7, size: 32, offset: 224)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2701, file: !1858, line: 88, baseType: !7, size: 32, offset: 256)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2701, file: !1858, line: 89, baseType: !7, size: 32, offset: 288)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2701, file: !1858, line: 90, baseType: !7, size: 32, offset: 320)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2701, file: !1858, line: 91, baseType: !7, size: 32, offset: 352)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2701, file: !1858, line: 92, baseType: !7, size: 32, offset: 384)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2701, file: !1858, line: 93, baseType: !7, size: 32, offset: 416)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2701, file: !1858, line: 95, baseType: !2716, size: 1024, offset: 448)
!2716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 1024, elements: !2717)
!2717 = !{!2718}
!2718 = !DISubrange(count: 128)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2622, file: !1858, line: 407, baseType: !2720, size: 64, offset: 2048)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1858, line: 98, size: 1216, elements: !2722)
!2722 = !{!2723, !2724, !2725, !2726, !2727}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2721, file: !1858, line: 100, baseType: !1390, size: 64)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2721, file: !1858, line: 101, baseType: !1390, size: 64, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2721, file: !1858, line: 103, baseType: !7, size: 32, offset: 128)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2721, file: !1858, line: 104, baseType: !7, size: 32, offset: 160)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2721, file: !1858, line: 106, baseType: !2716, size: 1024, offset: 192)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2622, file: !1858, line: 408, baseType: !2729, size: 512, offset: 2112)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1858, line: 109, size: 512, elements: !2730)
!2730 = !{!2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2729, file: !1858, line: 111, baseType: !1242, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2729, file: !1858, line: 112, baseType: !1242, size: 32, offset: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2729, file: !1858, line: 115, baseType: !1242, size: 32, offset: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2729, file: !1858, line: 116, baseType: !1242, size: 32, offset: 96)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2729, file: !1858, line: 117, baseType: !1242, size: 32, offset: 128)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2729, file: !1858, line: 118, baseType: !1242, size: 32, offset: 160)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2729, file: !1858, line: 119, baseType: !1242, size: 32, offset: 192)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2729, file: !1858, line: 120, baseType: !1242, size: 32, offset: 224)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2729, file: !1858, line: 121, baseType: !1242, size: 32, offset: 256)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2729, file: !1858, line: 122, baseType: !1242, size: 32, offset: 288)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2729, file: !1858, line: 125, baseType: !1242, size: 32, offset: 320)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2729, file: !1858, line: 126, baseType: !1242, size: 32, offset: 352)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2729, file: !1858, line: 127, baseType: !1410, size: 16, offset: 384)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2729, file: !1858, line: 128, baseType: !1410, size: 16, offset: 400)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2729, file: !1858, line: 129, baseType: !1242, size: 32, offset: 416)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2729, file: !1858, line: 130, baseType: !1242, size: 32, offset: 448)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2729, file: !1858, line: 131, baseType: !1242, size: 32, offset: 480)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2622, file: !1858, line: 409, baseType: !2749, size: 576, offset: 2624)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1858, line: 134, size: 576, elements: !2750)
!2750 = !{!2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2749, file: !1858, line: 135, baseType: !1242, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2749, file: !1858, line: 136, baseType: !1242, size: 32, offset: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2749, file: !1858, line: 137, baseType: !1242, size: 32, offset: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2749, file: !1858, line: 138, baseType: !1242, size: 32, offset: 96)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2749, file: !1858, line: 139, baseType: !1242, size: 32, offset: 128)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2749, file: !1858, line: 140, baseType: !1242, size: 32, offset: 160)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2749, file: !1858, line: 141, baseType: !1242, size: 32, offset: 192)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2749, file: !1858, line: 142, baseType: !1242, size: 32, offset: 224)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2749, file: !1858, line: 143, baseType: !1407, size: 32, offset: 256)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2749, file: !1858, line: 144, baseType: !1242, size: 32, offset: 288)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2749, file: !1858, line: 145, baseType: !1242, size: 32, offset: 320)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2749, file: !1858, line: 147, baseType: !1242, size: 32, offset: 352)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2749, file: !1858, line: 148, baseType: !1242, size: 32, offset: 384)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2749, file: !1858, line: 149, baseType: !1242, size: 32, offset: 416)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2749, file: !1858, line: 150, baseType: !1242, size: 32, offset: 448)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2749, file: !1858, line: 151, baseType: !1242, size: 32, offset: 480)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2749, file: !1858, line: 152, baseType: !1450, size: 64, offset: 512)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2622, file: !1858, line: 411, baseType: !1242, size: 32, offset: 3200)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2622, file: !1858, line: 411, baseType: !1242, size: 32, offset: 3232)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2622, file: !1858, line: 411, baseType: !1242, size: 32, offset: 3264)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2622, file: !1858, line: 412, baseType: !1407, size: 32, offset: 3296)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2622, file: !1858, line: 413, baseType: !1242, size: 32, offset: 3328)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2622, file: !1858, line: 413, baseType: !1242, size: 32, offset: 3360)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2622, file: !1858, line: 415, baseType: !1242, size: 32, offset: 3392)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2622, file: !1858, line: 415, baseType: !1242, size: 32, offset: 3424)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2622, file: !1858, line: 416, baseType: !1410, size: 16, offset: 3456)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2622, file: !1858, line: 416, baseType: !1410, size: 16, offset: 3472)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2622, file: !1858, line: 418, baseType: !1407, size: 32, offset: 3488)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2622, file: !1858, line: 418, baseType: !1407, size: 32, offset: 3520)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2622, file: !1858, line: 421, baseType: !1407, size: 32, offset: 3552)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2622, file: !1858, line: 421, baseType: !1407, size: 32, offset: 3584)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2622, file: !1858, line: 421, baseType: !1407, size: 32, offset: 3616)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2622, file: !1858, line: 425, baseType: !1410, size: 16, offset: 3648)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2622, file: !1858, line: 425, baseType: !1410, size: 16, offset: 3664)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2622, file: !1858, line: 425, baseType: !1410, size: 16, offset: 3680)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2622, file: !1858, line: 426, baseType: !1410, size: 16, offset: 3696)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2622, file: !1858, line: 428, baseType: !1410, size: 16, offset: 3712)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2622, file: !1858, line: 428, baseType: !1410, size: 16, offset: 3728)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2622, file: !1858, line: 431, baseType: !1242, size: 32, offset: 3744)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2622, file: !1858, line: 433, baseType: !1410, size: 16, offset: 3776)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2622, file: !1858, line: 435, baseType: !1410, size: 16, offset: 3792)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2622, file: !1858, line: 437, baseType: !1410, size: 16, offset: 3808)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2622, file: !1858, line: 439, baseType: !1410, size: 16, offset: 3824)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2622, file: !1858, line: 441, baseType: !1410, size: 16, offset: 3840)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2622, file: !1858, line: 443, baseType: !1410, size: 16, offset: 3856)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2622, file: !1858, line: 449, baseType: !1242, size: 32, offset: 3872)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2622, file: !1858, line: 453, baseType: !1242, size: 32, offset: 3904)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2622, file: !1858, line: 458, baseType: !1410, size: 16, offset: 3936)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2622, file: !1858, line: 462, baseType: !1410, size: 16, offset: 3952)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2622, file: !1858, line: 467, baseType: !1242, size: 32, offset: 3968)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2622, file: !1858, line: 467, baseType: !1242, size: 32, offset: 4000)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2622, file: !1858, line: 469, baseType: !1410, size: 16, offset: 4032)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2622, file: !1858, line: 469, baseType: !1410, size: 16, offset: 4048)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2622, file: !1858, line: 469, baseType: !1410, size: 16, offset: 4064)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2622, file: !1858, line: 469, baseType: !1410, size: 16, offset: 4080)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2622, file: !1858, line: 474, baseType: !1410, size: 16, offset: 4096)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2622, file: !1858, line: 475, baseType: !1433, size: 8, offset: 4112)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2622, file: !1858, line: 476, baseType: !1433, size: 8, offset: 4120)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2622, file: !1858, line: 481, baseType: !1242, size: 32, offset: 4128)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2622, file: !1858, line: 486, baseType: !1242, size: 32, offset: 4160)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2622, file: !1858, line: 491, baseType: !1242, size: 32, offset: 4192)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2622, file: !1858, line: 496, baseType: !1410, size: 16, offset: 4224)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2622, file: !1858, line: 498, baseType: !1410, size: 16, offset: 4240)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2622, file: !1858, line: 501, baseType: !1410, size: 16, offset: 4256)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2622, file: !1858, line: 502, baseType: !1410, size: 16, offset: 4272)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2622, file: !1858, line: 508, baseType: !1410, size: 16, offset: 4288)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2622, file: !1858, line: 513, baseType: !1410, size: 16, offset: 4304)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2622, file: !1858, line: 515, baseType: !1410, size: 16, offset: 4320)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2622, file: !1858, line: 515, baseType: !1410, size: 16, offset: 4336)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2622, file: !1858, line: 519, baseType: !1923, size: 128, offset: 4352)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2622, file: !1858, line: 519, baseType: !1923, size: 128, offset: 4480)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2622, file: !1858, line: 520, baseType: !2823, size: 128, offset: 4608)
!2823 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1924, line: 89, baseType: !2824)
!2824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1924, line: 86, size: 128, elements: !2825)
!2825 = !{!2826, !2827, !2828, !2829}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2824, file: !1924, line: 87, baseType: !1242, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2824, file: !1924, line: 87, baseType: !1242, size: 32, offset: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2824, file: !1924, line: 88, baseType: !1242, size: 32, offset: 64)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2824, file: !1924, line: 88, baseType: !1242, size: 32, offset: 96)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2622, file: !1858, line: 523, baseType: !1399, size: 128, offset: 4736)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2622, file: !1858, line: 524, baseType: !1410, size: 16, offset: 4864)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2622, file: !1858, line: 527, baseType: !1410, size: 16, offset: 4880)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2622, file: !1858, line: 532, baseType: !1407, size: 32, offset: 4896)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2622, file: !1858, line: 532, baseType: !1407, size: 32, offset: 4928)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2622, file: !1858, line: 534, baseType: !1407, size: 32, offset: 4960)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2622, file: !1858, line: 538, baseType: !1407, size: 32, offset: 4992)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2622, file: !1858, line: 542, baseType: !1242, size: 32, offset: 5024)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2622, file: !1858, line: 545, baseType: !1407, size: 32, offset: 5056)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2622, file: !1858, line: 545, baseType: !1407, size: 32, offset: 5088)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2622, file: !1858, line: 545, baseType: !1407, size: 32, offset: 5120)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2622, file: !1858, line: 548, baseType: !1407, size: 32, offset: 5152)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2622, file: !1858, line: 551, baseType: !1410, size: 16, offset: 5184)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2622, file: !1858, line: 551, baseType: !1410, size: 16, offset: 5200)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2622, file: !1858, line: 551, baseType: !1410, size: 16, offset: 5216)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2622, file: !1858, line: 551, baseType: !1410, size: 16, offset: 5232)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2622, file: !1858, line: 552, baseType: !1410, size: 16, offset: 5248)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2622, file: !1858, line: 552, baseType: !1410, size: 16, offset: 5264)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2622, file: !1858, line: 553, baseType: !1407, size: 32, offset: 5280)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2622, file: !1858, line: 553, baseType: !1407, size: 32, offset: 5312)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2622, file: !1858, line: 554, baseType: !1410, size: 16, offset: 5344)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2622, file: !1858, line: 554, baseType: !1410, size: 16, offset: 5360)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2622, file: !1858, line: 555, baseType: !1407, size: 32, offset: 5376)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2622, file: !1858, line: 555, baseType: !1407, size: 32, offset: 5408)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2622, file: !1858, line: 558, baseType: !1432, size: 8192, offset: 5440)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2622, file: !1858, line: 561, baseType: !1242, size: 32, offset: 13632)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2622, file: !1858, line: 562, baseType: !1410, size: 16, offset: 13664)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2622, file: !1858, line: 562, baseType: !1410, size: 16, offset: 13680)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2622, file: !1858, line: 565, baseType: !2027, size: 6144, offset: 13696)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2622, file: !1858, line: 568, baseType: !1732, size: 128, offset: 19840)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2622, file: !1858, line: 569, baseType: !1732, size: 128, offset: 19968)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2622, file: !1858, line: 572, baseType: !1433, size: 8, offset: 20096)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2622, file: !1858, line: 573, baseType: !1433, size: 8, offset: 20104)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2622, file: !1858, line: 574, baseType: !1433, size: 8, offset: 20112)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2622, file: !1858, line: 575, baseType: !2472, size: 40, offset: 20120)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2622, file: !1858, line: 578, baseType: !1242, size: 32, offset: 20160)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2622, file: !1858, line: 579, baseType: !1410, size: 16, offset: 20192)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2622, file: !1858, line: 580, baseType: !1410, size: 16, offset: 20208)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2622, file: !1858, line: 581, baseType: !1407, size: 32, offset: 20224)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2622, file: !1858, line: 582, baseType: !1407, size: 32, offset: 20256)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2622, file: !1858, line: 585, baseType: !1410, size: 16, offset: 20288)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2622, file: !1858, line: 585, baseType: !1410, size: 16, offset: 20304)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2622, file: !1858, line: 586, baseType: !1407, size: 32, offset: 20320)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2622, file: !1858, line: 589, baseType: !1410, size: 16, offset: 20352)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2622, file: !1858, line: 589, baseType: !1410, size: 16, offset: 20368)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2622, file: !1858, line: 590, baseType: !1242, size: 32, offset: 20384)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2622, file: !1858, line: 593, baseType: !1410, size: 16, offset: 20416)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2622, file: !1858, line: 593, baseType: !1410, size: 16, offset: 20432)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2622, file: !1858, line: 594, baseType: !1410, size: 16, offset: 20448)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2622, file: !1858, line: 594, baseType: !1410, size: 16, offset: 20464)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2622, file: !1858, line: 595, baseType: !1407, size: 32, offset: 20480)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2622, file: !1858, line: 596, baseType: !1407, size: 32, offset: 20512)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2622, file: !1858, line: 597, baseType: !2883, size: 64, offset: 20544)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64)
!2884 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2885, line: 44, flags: DIFlagFwdDecl)
!2885 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2622, file: !1858, line: 600, baseType: !1242, size: 32, offset: 20608)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2622, file: !1858, line: 601, baseType: !1407, size: 32, offset: 20640)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2622, file: !1858, line: 604, baseType: !2889, size: 256, offset: 20672)
!2889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 256, elements: !2890)
!2890 = !{!2891}
!2891 = !DISubrange(count: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2622, file: !1858, line: 607, baseType: !2893, size: 10880, offset: 20928)
!2893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1858, line: 364, size: 10880, elements: !2894)
!2894 = !{!2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2893, file: !1858, line: 365, baseType: !2625, size: 1984)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2893, file: !1858, line: 367, baseType: !1432, size: 8192, offset: 1984)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2893, file: !1858, line: 369, baseType: !1410, size: 16, offset: 10176)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2893, file: !1858, line: 369, baseType: !1410, size: 16, offset: 10192)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2893, file: !1858, line: 370, baseType: !1410, size: 16, offset: 10208)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2893, file: !1858, line: 370, baseType: !1410, size: 16, offset: 10224)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2893, file: !1858, line: 372, baseType: !1407, size: 32, offset: 10240)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2893, file: !1858, line: 373, baseType: !1407, size: 32, offset: 10272)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2893, file: !1858, line: 375, baseType: !2394, size: 24, offset: 10304)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2893, file: !1858, line: 376, baseType: !1433, size: 8, offset: 10328)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2893, file: !1858, line: 378, baseType: !1433, size: 8, offset: 10336)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2893, file: !1858, line: 379, baseType: !2394, size: 24, offset: 10344)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2893, file: !1858, line: 381, baseType: !1461, size: 512, offset: 10368)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2622, file: !1858, line: 609, baseType: !1242, size: 32, offset: 31808)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2622, file: !1858, line: 610, baseType: !1242, size: 32, offset: 31840)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1857, file: !1858, line: 1252, baseType: !2911, size: 256, offset: 34112)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1858, line: 158, size: 256, elements: !2912)
!2912 = !{!2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2911, file: !1858, line: 159, baseType: !1242, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2911, file: !1858, line: 160, baseType: !1407, size: 32, offset: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2911, file: !1858, line: 161, baseType: !1407, size: 32, offset: 64)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2911, file: !1858, line: 162, baseType: !1407, size: 32, offset: 96)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2911, file: !1858, line: 163, baseType: !1242, size: 32, offset: 128)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2911, file: !1858, line: 164, baseType: !1410, size: 16, offset: 160)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2911, file: !1858, line: 165, baseType: !1410, size: 16, offset: 176)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2911, file: !1858, line: 166, baseType: !1407, size: 32, offset: 192)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2911, file: !1858, line: 167, baseType: !1407, size: 32, offset: 224)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1857, file: !1858, line: 1254, baseType: !1399, size: 128, offset: 34368)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1857, file: !1858, line: 1255, baseType: !1399, size: 128, offset: 34496)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1857, file: !1858, line: 1257, baseType: !1390, size: 64, offset: 34624)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1857, file: !1858, line: 1258, baseType: !1390, size: 64, offset: 34688)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1857, file: !1858, line: 1259, baseType: !1390, size: 64, offset: 34752)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1857, file: !1858, line: 1260, baseType: !1390, size: 64, offset: 34816)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1857, file: !1858, line: 1262, baseType: !1390, size: 64, offset: 34880)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1857, file: !1858, line: 1265, baseType: !2930, size: 64, offset: 34944)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1858, line: 1265, flags: DIFlagFwdDecl)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1857, file: !1858, line: 1266, baseType: !1410, size: 16, offset: 35008)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1857, file: !1858, line: 1267, baseType: !1410, size: 16, offset: 35024)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1857, file: !1858, line: 1270, baseType: !1242, size: 32, offset: 35040)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1857, file: !1858, line: 1271, baseType: !1399, size: 128, offset: 35072)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1857, file: !1858, line: 1274, baseType: !2937, size: 128, offset: 35200)
!2937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1858, line: 650, size: 128, elements: !2938)
!2938 = !{!2939, !2940, !2941, !2942, !2943}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2937, file: !1858, line: 651, baseType: !1502, size: 96)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2937, file: !1858, line: 652, baseType: !1433, size: 8, offset: 96)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2937, file: !1858, line: 652, baseType: !1433, size: 8, offset: 104)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2937, file: !1858, line: 652, baseType: !1433, size: 8, offset: 112)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2937, file: !1858, line: 652, baseType: !1433, size: 8, offset: 120)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1857, file: !1858, line: 1275, baseType: !2945, size: 1472, offset: 35328)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1858, line: 676, size: 1472, elements: !2946)
!2946 = !{!2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2959, !2969, !2970, !2971, !2972, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2945, file: !1858, line: 679, baseType: !2937, size: 128)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2945, file: !1858, line: 680, baseType: !1410, size: 16, offset: 128)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2945, file: !1858, line: 680, baseType: !1410, size: 16, offset: 144)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2945, file: !1858, line: 680, baseType: !1410, size: 16, offset: 160)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2945, file: !1858, line: 680, baseType: !1410, size: 16, offset: 176)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2945, file: !1858, line: 681, baseType: !1410, size: 16, offset: 192)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2945, file: !1858, line: 681, baseType: !1410, size: 16, offset: 208)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2945, file: !1858, line: 681, baseType: !1410, size: 16, offset: 224)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2945, file: !1858, line: 681, baseType: !1410, size: 16, offset: 240)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2945, file: !1858, line: 682, baseType: !1410, size: 16, offset: 256)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2945, file: !1858, line: 682, baseType: !2958, size: 48, offset: 272)
!2958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 48, elements: !1503)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2945, file: !1858, line: 685, baseType: !2960, size: 192, offset: 320)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1858, line: 633, size: 192, elements: !2961)
!2961 = !{!2962, !2963, !2964, !2965, !2966, !2967, !2968}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2960, file: !1858, line: 634, baseType: !1410, size: 16)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2960, file: !1858, line: 634, baseType: !1410, size: 16, offset: 16)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2960, file: !1858, line: 635, baseType: !1410, size: 16, offset: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2960, file: !1858, line: 635, baseType: !1410, size: 16, offset: 48)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2960, file: !1858, line: 636, baseType: !1407, size: 32, offset: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2960, file: !1858, line: 636, baseType: !1407, size: 32, offset: 96)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2960, file: !1858, line: 637, baseType: !2883, size: 64, offset: 128)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2945, file: !1858, line: 686, baseType: !1410, size: 16, offset: 512)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2945, file: !1858, line: 686, baseType: !1410, size: 16, offset: 528)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2945, file: !1858, line: 687, baseType: !1407, size: 32, offset: 544)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2945, file: !1858, line: 688, baseType: !2973, size: 448, offset: 576)
!2973 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1858, line: 674, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1858, line: 659, size: 448, elements: !2975)
!2975 = !{!2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2974, file: !1858, line: 660, baseType: !1407, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2974, file: !1858, line: 661, baseType: !1407, size: 32, offset: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2974, file: !1858, line: 662, baseType: !1407, size: 32, offset: 64)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2974, file: !1858, line: 663, baseType: !1407, size: 32, offset: 96)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2974, file: !1858, line: 664, baseType: !1407, size: 32, offset: 128)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2974, file: !1858, line: 665, baseType: !1407, size: 32, offset: 160)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2974, file: !1858, line: 666, baseType: !1407, size: 32, offset: 192)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2974, file: !1858, line: 667, baseType: !1407, size: 32, offset: 224)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2974, file: !1858, line: 668, baseType: !1407, size: 32, offset: 256)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2974, file: !1858, line: 669, baseType: !1407, size: 32, offset: 288)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2974, file: !1858, line: 670, baseType: !1242, size: 32, offset: 320)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2974, file: !1858, line: 671, baseType: !1407, size: 32, offset: 352)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2974, file: !1858, line: 672, baseType: !1407, size: 32, offset: 384)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2974, file: !1858, line: 673, baseType: !1410, size: 16, offset: 416)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2974, file: !1858, line: 673, baseType: !1410, size: 16, offset: 432)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2945, file: !1858, line: 692, baseType: !1407, size: 32, offset: 1024)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2945, file: !1858, line: 697, baseType: !1407, size: 32, offset: 1056)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2945, file: !1858, line: 703, baseType: !1242, size: 32, offset: 1088)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2945, file: !1858, line: 704, baseType: !1410, size: 16, offset: 1120)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2945, file: !1858, line: 704, baseType: !1410, size: 16, offset: 1136)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2945, file: !1858, line: 705, baseType: !1410, size: 16, offset: 1152)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2945, file: !1858, line: 706, baseType: !1410, size: 16, offset: 1168)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2945, file: !1858, line: 707, baseType: !1410, size: 16, offset: 1184)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2945, file: !1858, line: 708, baseType: !1410, size: 16, offset: 1200)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2945, file: !1858, line: 709, baseType: !1410, size: 16, offset: 1216)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2945, file: !1858, line: 709, baseType: !1410, size: 16, offset: 1232)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2945, file: !1858, line: 709, baseType: !1410, size: 16, offset: 1248)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2945, file: !1858, line: 709, baseType: !1410, size: 16, offset: 1264)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2945, file: !1858, line: 710, baseType: !1410, size: 16, offset: 1280)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2945, file: !1858, line: 711, baseType: !1410, size: 16, offset: 1296)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2945, file: !1858, line: 712, baseType: !1407, size: 32, offset: 1312)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2945, file: !1858, line: 713, baseType: !1407, size: 32, offset: 1344)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2945, file: !1858, line: 713, baseType: !1407, size: 32, offset: 1376)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2945, file: !1858, line: 713, baseType: !1407, size: 32, offset: 1408)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2945, file: !1858, line: 713, baseType: !1407, size: 32, offset: 1440)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1857, file: !1858, line: 1278, baseType: !3012, size: 64, offset: 36800)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1858, line: 1197, size: 64, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !3012, file: !1858, line: 1199, baseType: !1407, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !3012, file: !1858, line: 1200, baseType: !1433, size: 8, offset: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !3012, file: !1858, line: 1201, baseType: !1433, size: 8, offset: 40)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3012, file: !1858, line: 1202, baseType: !1410, size: 16, offset: 48)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1857, file: !1858, line: 1281, baseType: !1690, size: 64, offset: 36864)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1857, file: !1858, line: 1284, baseType: !3020, size: 192, offset: 36928)
!3020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1858, line: 1208, size: 192, elements: !3021)
!3021 = !{!3022, !3023, !3024, !3025}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3020, file: !1858, line: 1209, baseType: !1502, size: 96)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3020, file: !1858, line: 1210, baseType: !1242, size: 32, offset: 96)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !3020, file: !1858, line: 1210, baseType: !1242, size: 32, offset: 128)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3020, file: !1858, line: 1210, baseType: !1242, size: 32, offset: 160)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1857, file: !1858, line: 1287, baseType: !2080, size: 64, offset: 37120)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1857, file: !1858, line: 1289, baseType: !1828, size: 64, offset: 37184)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1857, file: !1858, line: 1290, baseType: !1828, size: 64, offset: 37248)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1857, file: !1858, line: 1293, baseType: !2645, size: 1280, offset: 37312)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1857, file: !1858, line: 1294, baseType: !2695, size: 512, offset: 38592)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1857, file: !1858, line: 1295, baseType: !2071, size: 512, offset: 39104)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1857, file: !1858, line: 1298, baseType: !3033, size: 64, offset: 39616)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1858, line: 1298, flags: DIFlagFwdDecl)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1853, file: !1852, line: 53, baseType: !1242, size: 32, offset: 64)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1853, file: !1852, line: 54, baseType: !1242, size: 32, offset: 96)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1853, file: !1852, line: 55, baseType: !1242, size: 32, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1853, file: !1852, line: 55, baseType: !1242, size: 32, offset: 160)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1853, file: !1852, line: 56, baseType: !1433, size: 8, offset: 192)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1853, file: !1852, line: 56, baseType: !1433, size: 8, offset: 200)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1853, file: !1852, line: 57, baseType: !1433, size: 8, offset: 208)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1853, file: !1852, line: 57, baseType: !1433, size: 8, offset: 216)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1853, file: !1852, line: 59, baseType: !1410, size: 16, offset: 224)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1853, file: !1852, line: 59, baseType: !1410, size: 16, offset: 240)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1853, file: !1852, line: 59, baseType: !1410, size: 16, offset: 256)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1853, file: !1852, line: 61, baseType: !1410, size: 16, offset: 272)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1853, file: !1852, line: 63, baseType: !1242, size: 32, offset: 288)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !1612, file: !6, line: 293, baseType: !1399, size: 128, offset: 11200)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !1612, file: !6, line: 294, baseType: !3050, size: 64, offset: 11328)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !6, line: 113, baseType: !3052)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !6, line: 108, size: 256, elements: !3053)
!3053 = !{!3054, !3056, !3057, !3058, !3059}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3052, file: !6, line: 109, baseType: !3055, size: 64)
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3052, file: !6, line: 109, baseType: !3055, size: 64, offset: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3052, file: !6, line: 110, baseType: !1611, size: 64, offset: 128)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3052, file: !6, line: 111, baseType: !1242, size: 32, offset: 192)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !3052, file: !6, line: 112, baseType: !1407, size: 32, offset: 224)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !1583, file: !1582, line: 203, baseType: !1611, size: 64, offset: 1344)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !1583, file: !1582, line: 203, baseType: !1611, size: 64, offset: 1408)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1583, file: !1582, line: 204, baseType: !1631, size: 64, offset: 1472)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1583, file: !1582, line: 205, baseType: !3064, size: 64, offset: 1536)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !1633, line: 41, flags: DIFlagFwdDecl)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1583, file: !1582, line: 206, baseType: !1716, size: 64, offset: 1600)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1583, file: !1582, line: 209, baseType: !1502, size: 96, offset: 1664)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1583, file: !1582, line: 210, baseType: !1502, size: 96, offset: 1760)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1583, file: !1582, line: 211, baseType: !1502, size: 96, offset: 1856)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1583, file: !1582, line: 213, baseType: !1410, size: 16, offset: 1952)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1583, file: !1582, line: 215, baseType: !1410, size: 16, offset: 1968)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !1583, file: !1582, line: 216, baseType: !1410, size: 16, offset: 1984)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !1583, file: !1582, line: 216, baseType: !1410, size: 16, offset: 2000)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !1583, file: !1582, line: 217, baseType: !1407, size: 32, offset: 2016)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !1583, file: !1582, line: 217, baseType: !1407, size: 32, offset: 2048)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !1583, file: !1582, line: 219, baseType: !1242, size: 32, offset: 2080)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !1583, file: !1582, line: 220, baseType: !1410, size: 16, offset: 2112)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1583, file: !1582, line: 220, baseType: !1410, size: 16, offset: 2128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1583, file: !1582, line: 221, baseType: !1242, size: 32, offset: 2144)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1583, file: !1582, line: 222, baseType: !1407, size: 32, offset: 2176)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !1583, file: !1582, line: 222, baseType: !1407, size: 32, offset: 2208)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !1583, file: !1582, line: 222, baseType: !1407, size: 32, offset: 2240)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !1583, file: !1582, line: 225, baseType: !1410, size: 16, offset: 2272)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !1583, file: !1582, line: 225, baseType: !1410, size: 16, offset: 2288)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !1583, file: !1582, line: 226, baseType: !1410, size: 16, offset: 2304)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !1583, file: !1582, line: 226, baseType: !1410, size: 16, offset: 2320)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !1583, file: !1582, line: 229, baseType: !1242, size: 32, offset: 2336)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !1583, file: !1582, line: 231, baseType: !1242, size: 32, offset: 2368)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1583, file: !1582, line: 233, baseType: !1608, size: 32, offset: 2400)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !1583, file: !1582, line: 236, baseType: !1410, size: 16, offset: 2432)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !1583, file: !1582, line: 237, baseType: !1433, size: 8, offset: 2448)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1583, file: !1582, line: 237, baseType: !1433, size: 8, offset: 2456)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !1583, file: !1582, line: 238, baseType: !1407, size: 32, offset: 2464)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !1583, file: !1582, line: 238, baseType: !1407, size: 32, offset: 2496)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !1583, file: !1582, line: 238, baseType: !1407, size: 32, offset: 2528)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !1583, file: !1582, line: 238, baseType: !1407, size: 32, offset: 2560)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !1583, file: !1582, line: 238, baseType: !1407, size: 32, offset: 2592)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !1583, file: !1582, line: 238, baseType: !1407, size: 32, offset: 2624)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !1583, file: !1582, line: 238, baseType: !1407, size: 32, offset: 2656)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !1583, file: !1582, line: 239, baseType: !1407, size: 32, offset: 2688)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !1583, file: !1582, line: 239, baseType: !1407, size: 32, offset: 2720)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !1583, file: !1582, line: 240, baseType: !1407, size: 32, offset: 2752)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1583, file: !1582, line: 244, baseType: !1242, size: 32, offset: 2784)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !1583, file: !1582, line: 245, baseType: !1242, size: 32, offset: 2816)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !1583, file: !1582, line: 245, baseType: !1242, size: 32, offset: 2848)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !1583, file: !1582, line: 248, baseType: !1242, size: 32, offset: 2880)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1583, file: !1582, line: 249, baseType: !1242, size: 32, offset: 2912)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1583, file: !1582, line: 250, baseType: !1720, size: 64, offset: 2944)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !1583, file: !1582, line: 251, baseType: !3110, size: 64, offset: 3008)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64)
!3111 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !1582, line: 50, flags: DIFlagFwdDecl)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !1583, file: !1582, line: 253, baseType: !1461, size: 512, offset: 3072)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !1583, file: !1582, line: 254, baseType: !3114, size: 64, offset: 3584)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !1582, line: 47, flags: DIFlagFwdDecl)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !1583, file: !1582, line: 255, baseType: !3114, size: 64, offset: 3648)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !1583, file: !1582, line: 256, baseType: !3114, size: 64, offset: 3712)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !1583, file: !1582, line: 257, baseType: !3114, size: 64, offset: 3776)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !1583, file: !1582, line: 259, baseType: !3120, size: 64, offset: 3840)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !1582, line: 176, size: 128, elements: !3122)
!3122 = !{!3123, !3124, !3125, !3126}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3121, file: !1582, line: 177, baseType: !1407, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3121, file: !1582, line: 177, baseType: !1407, size: 32, offset: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3121, file: !1582, line: 177, baseType: !1407, size: 32, offset: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !3121, file: !1582, line: 177, baseType: !1407, size: 32, offset: 96)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !1583, file: !1582, line: 260, baseType: !1242, size: 32, offset: 3904)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !1583, file: !1582, line: 260, baseType: !1242, size: 32, offset: 3936)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !1583, file: !1582, line: 262, baseType: !3130, size: 64, offset: 3968)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !1582, line: 168, size: 64, elements: !3132)
!3132 = !{!3133, !3134, !3135, !3136, !3137}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !3131, file: !1582, line: 169, baseType: !1410, size: 16)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3131, file: !1582, line: 170, baseType: !1410, size: 16, offset: 16)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3131, file: !1582, line: 171, baseType: !1433, size: 8, offset: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3131, file: !1582, line: 172, baseType: !1433, size: 8, offset: 40)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3131, file: !1582, line: 173, baseType: !1410, size: 16, offset: 48)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !1583, file: !1582, line: 263, baseType: !3131, size: 64, offset: 4032)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1583, file: !1582, line: 267, baseType: !1407, size: 32, offset: 4096)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !1583, file: !1582, line: 268, baseType: !1407, size: 32, offset: 4128)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !1583, file: !1582, line: 268, baseType: !1407, size: 32, offset: 4160)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !1583, file: !1582, line: 269, baseType: !1433, size: 8, offset: 4192)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !1583, file: !1582, line: 269, baseType: !1433, size: 8, offset: 4200)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1583, file: !1582, line: 271, baseType: !2606, size: 16, offset: 4208)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 64)
!3146 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lattice", file: !1633, line: 72, baseType: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lattice", file: !1633, line: 52, size: 2240, elements: !3148)
!3148 = !{!3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3181, !3182, !3183, !3184, !3185}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3147, file: !1633, line: 53, baseType: !1414, size: 960)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3147, file: !1633, line: 54, baseType: !1482, size: 64, offset: 960)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !3147, file: !1633, line: 56, baseType: !1410, size: 16, offset: 1024)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !3147, file: !1633, line: 56, baseType: !1410, size: 16, offset: 1040)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "pntsw", scope: !3147, file: !1633, line: 56, baseType: !1410, size: 16, offset: 1056)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3147, file: !1633, line: 56, baseType: !1410, size: 16, offset: 1072)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "opntsu", scope: !3147, file: !1633, line: 57, baseType: !1410, size: 16, offset: 1088)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "opntsv", scope: !3147, file: !1633, line: 57, baseType: !1410, size: 16, offset: 1104)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "opntsw", scope: !3147, file: !1633, line: 57, baseType: !1410, size: 16, offset: 1120)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3147, file: !1633, line: 57, baseType: !1410, size: 16, offset: 1136)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "typeu", scope: !3147, file: !1633, line: 58, baseType: !1433, size: 8, offset: 1152)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "typev", scope: !3147, file: !1633, line: 58, baseType: !1433, size: 8, offset: 1160)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "typew", scope: !3147, file: !1633, line: 58, baseType: !1433, size: 8, offset: 1168)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3147, file: !1633, line: 58, baseType: !1433, size: 8, offset: 1176)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "actbp", scope: !3147, file: !1633, line: 59, baseType: !1242, size: 32, offset: 1184)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "fu", scope: !3147, file: !1633, line: 61, baseType: !1407, size: 32, offset: 1216)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !3147, file: !1633, line: 61, baseType: !1407, size: 32, offset: 1248)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !3147, file: !1633, line: 61, baseType: !1407, size: 32, offset: 1280)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "du", scope: !3147, file: !1633, line: 61, baseType: !1407, size: 32, offset: 1312)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "dv", scope: !3147, file: !1633, line: 61, baseType: !1407, size: 32, offset: 1344)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !3147, file: !1633, line: 61, baseType: !1407, size: 32, offset: 1376)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !3147, file: !1633, line: 63, baseType: !3171, size: 64, offset: 1408)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !1582, line: 136, size: 288, elements: !3173)
!3173 = !{!3174, !3175, !3176, !3177, !3178, !3179, !3180}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3172, file: !1582, line: 137, baseType: !1732, size: 128)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !3172, file: !1582, line: 138, baseType: !1407, size: 32, offset: 128)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3172, file: !1582, line: 138, baseType: !1407, size: 32, offset: 160)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !3172, file: !1582, line: 139, baseType: !1410, size: 16, offset: 192)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !3172, file: !1582, line: 139, baseType: !1410, size: 16, offset: 208)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3172, file: !1582, line: 140, baseType: !1407, size: 32, offset: 224)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3172, file: !1582, line: 140, baseType: !1407, size: 32, offset: 256)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3147, file: !1633, line: 65, baseType: !1631, size: 64, offset: 1472)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3147, file: !1633, line: 66, baseType: !3064, size: 64, offset: 1536)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !3147, file: !1633, line: 68, baseType: !2434, size: 64, offset: 1600)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !3147, file: !1633, line: 69, baseType: !1461, size: 512, offset: 1664)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "editlatt", scope: !3147, file: !1633, line: 71, baseType: !3186, size: 64, offset: 2176)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditLatt", file: !1633, line: 44, size: 128, elements: !3188)
!3188 = !{!3189, !3191, !3192}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !3187, file: !1633, line: 45, baseType: !3190, size: 64)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !3187, file: !1633, line: 47, baseType: !1242, size: 32, offset: 64)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3187, file: !1633, line: 49, baseType: !1608, size: 32, offset: 96)
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = !DIDerivedType(tag: DW_TAG_typedef, name: "MetaBall", file: !3195, line: 95, baseType: !3196)
!3195 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meta_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MetaBall", file: !3195, line: 64, size: 1984, elements: !3197)
!3197 = !{!3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3196, file: !3195, line: 65, baseType: !1414, size: 960)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3196, file: !3195, line: 66, baseType: !1482, size: 64, offset: 960)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !3196, file: !3195, line: 68, baseType: !1399, size: 128, offset: 1024)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !3196, file: !3195, line: 69, baseType: !1399, size: 128, offset: 1152)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "editelems", scope: !3196, file: !3195, line: 70, baseType: !1487, size: 64, offset: 1280)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3196, file: !3195, line: 71, baseType: !1631, size: 64, offset: 1344)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3196, file: !3195, line: 74, baseType: !1716, size: 64, offset: 1408)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3196, file: !3195, line: 76, baseType: !1433, size: 8, offset: 1472)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !3196, file: !3195, line: 76, baseType: !1433, size: 8, offset: 1480)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !3196, file: !3195, line: 77, baseType: !1410, size: 16, offset: 1488)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !3196, file: !3195, line: 78, baseType: !1410, size: 16, offset: 1504)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3196, file: !3195, line: 78, baseType: !1410, size: 16, offset: 1520)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3196, file: !3195, line: 81, baseType: !1502, size: 96, offset: 1536)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3196, file: !3195, line: 82, baseType: !1502, size: 96, offset: 1632)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3196, file: !3195, line: 83, baseType: !1502, size: 96, offset: 1728)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "wiresize", scope: !3196, file: !3195, line: 85, baseType: !1407, size: 32, offset: 1824)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "rendersize", scope: !3196, file: !3195, line: 85, baseType: !1407, size: 32, offset: 1856)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "thresh", scope: !3196, file: !3195, line: 90, baseType: !1407, size: 32, offset: 1888)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "lastelem", scope: !3196, file: !3195, line: 94, baseType: !3217, size: 64, offset: 1920)
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_typedef, name: "MetaElem", file: !3195, line: 62, baseType: !3219)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MetaElem", file: !3195, line: 44, size: 832, elements: !3220)
!3220 = !{!3221, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3242}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3219, file: !3195, line: 45, baseType: !3222, size: 64)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3219, file: !3195, line: 45, baseType: !3222, size: 64, offset: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3219, file: !3195, line: 47, baseType: !1588, size: 64, offset: 128)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3219, file: !3195, line: 49, baseType: !1410, size: 16, offset: 192)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3219, file: !3195, line: 49, baseType: !1410, size: 16, offset: 208)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "selcol1", scope: !3219, file: !3195, line: 49, baseType: !1410, size: 16, offset: 224)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "selcol2", scope: !3219, file: !3195, line: 49, baseType: !1410, size: 16, offset: 240)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3219, file: !3195, line: 50, baseType: !1407, size: 32, offset: 256)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3219, file: !3195, line: 50, baseType: !1407, size: 32, offset: 288)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !3219, file: !3195, line: 50, baseType: !1407, size: 32, offset: 320)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !3219, file: !3195, line: 51, baseType: !1732, size: 128, offset: 352)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "expx", scope: !3219, file: !3195, line: 52, baseType: !1407, size: 32, offset: 480)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "expy", scope: !3219, file: !3195, line: 53, baseType: !1407, size: 32, offset: 512)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "expz", scope: !3219, file: !3195, line: 54, baseType: !1407, size: 32, offset: 544)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !3219, file: !3195, line: 55, baseType: !1407, size: 32, offset: 576)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "rad2", scope: !3219, file: !3195, line: 56, baseType: !1407, size: 32, offset: 608)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3219, file: !3195, line: 57, baseType: !1407, size: 32, offset: 640)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3219, file: !3195, line: 58, baseType: !1407, size: 32, offset: 672)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3219, file: !3195, line: 60, baseType: !3241, size: 64, offset: 704)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3219, file: !3195, line: 60, baseType: !3241, size: 64, offset: 768)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = !DIDerivedType(tag: DW_TAG_typedef, name: "sAreaSplitData", file: !3, line: 1384, baseType: !3245)
!3245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sAreaSplitData", file: !3, line: 1371, size: 512, elements: !3246)
!3246 = !{!3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3285, !3560}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3245, file: !3, line: 1372, baseType: !1242, size: 32)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3245, file: !3, line: 1372, baseType: !1242, size: 32, offset: 32)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "origval", scope: !3245, file: !3, line: 1374, baseType: !1242, size: 32, offset: 64)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "bigger", scope: !3245, file: !3, line: 1375, baseType: !1242, size: 32, offset: 96)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "smaller", scope: !3245, file: !3, line: 1375, baseType: !1242, size: 32, offset: 128)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3245, file: !3, line: 1376, baseType: !1242, size: 32, offset: 160)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "origmin", scope: !3245, file: !3, line: 1377, baseType: !1242, size: 32, offset: 192)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "origsize", scope: !3245, file: !3, line: 1377, baseType: !1242, size: 32, offset: 224)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "previewmode", scope: !3245, file: !3, line: 1378, baseType: !1242, size: 32, offset: 256)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "nedge", scope: !3245, file: !3, line: 1380, baseType: !3257, size: 64, offset: 320)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrEdge", file: !1166, line: 95, baseType: !3259)
!3259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrEdge", file: !1166, line: 89, size: 320, elements: !3260)
!3260 = !{!3261, !3263, !3264, !3281, !3282, !3283, !3284}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3259, file: !1166, line: 90, baseType: !3262, size: 64)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3259, file: !1166, line: 90, baseType: !3262, size: 64, offset: 64)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3259, file: !1166, line: 91, baseType: !3265, size: 64, offset: 128)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !1166, line: 87, baseType: !3267)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !1166, line: 82, size: 256, elements: !3268)
!3268 = !{!3269, !3271, !3272, !3273, !3279, !3280}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3267, file: !1166, line: 83, baseType: !3270, size: 64)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3267, file: !1166, line: 83, baseType: !3270, size: 64, offset: 64)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !3267, file: !1166, line: 83, baseType: !3270, size: 64, offset: 128)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3267, file: !1166, line: 84, baseType: !3274, size: 32, offset: 192)
!3274 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !1924, line: 43, baseType: !3275)
!3275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !1924, line: 41, size: 32, elements: !3276)
!3276 = !{!3277, !3278}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3275, file: !1924, line: 42, baseType: !1410, size: 16)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3275, file: !1924, line: 42, baseType: !1410, size: 16, offset: 16)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3267, file: !1166, line: 86, baseType: !1410, size: 16, offset: 224)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3267, file: !1166, line: 86, baseType: !1410, size: 16, offset: 240)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3259, file: !1166, line: 91, baseType: !3265, size: 64, offset: 192)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !3259, file: !1166, line: 92, baseType: !1410, size: 16, offset: 256)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3259, file: !1166, line: 93, baseType: !1410, size: 16, offset: 272)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3259, file: !1166, line: 94, baseType: !1242, size: 32, offset: 288)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "sarea", scope: !3245, file: !3, line: 1381, baseType: !3286, size: 64, offset: 384)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !1166, line: 228, baseType: !3288)
!3288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !1166, line: 203, size: 1280, elements: !3289)
!3289 = !{!3290, !3292, !3293, !3294, !3295, !3296, !3297, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3556, !3557, !3558, !3559}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3288, file: !1166, line: 204, baseType: !3291, size: 64)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3288, size: 64)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3288, file: !1166, line: 204, baseType: !3291, size: 64, offset: 64)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3288, file: !1166, line: 206, baseType: !3265, size: 64, offset: 128)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3288, file: !1166, line: 206, baseType: !3265, size: 64, offset: 192)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3288, file: !1166, line: 206, baseType: !3265, size: 64, offset: 256)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3288, file: !1166, line: 206, baseType: !3265, size: 64, offset: 320)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !3288, file: !1166, line: 207, baseType: !3298, size: 64, offset: 384)
!3298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3299, size: 64)
!3299 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !1166, line: 80, baseType: !3300)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !1166, line: 49, size: 1984, elements: !3301)
!3301 = !{!3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3432}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3300, file: !1166, line: 50, baseType: !1414, size: 960)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !3300, file: !1166, line: 52, baseType: !1399, size: 128, offset: 960)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !3300, file: !1166, line: 53, baseType: !1399, size: 128, offset: 1088)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !3300, file: !1166, line: 54, baseType: !1399, size: 128, offset: 1216)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3300, file: !1166, line: 55, baseType: !1399, size: 128, offset: 1344)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3300, file: !1166, line: 57, baseType: !1856, size: 64, offset: 1472)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !3300, file: !1166, line: 58, baseType: !1856, size: 64, offset: 1536)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !3300, file: !1166, line: 60, baseType: !1242, size: 32, offset: 1600)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3300, file: !1166, line: 61, baseType: !1242, size: 32, offset: 1632)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3300, file: !1166, line: 63, baseType: !1410, size: 16, offset: 1664)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3300, file: !1166, line: 64, baseType: !1410, size: 16, offset: 1680)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3300, file: !1166, line: 65, baseType: !1410, size: 16, offset: 1696)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3300, file: !1166, line: 66, baseType: !1410, size: 16, offset: 1712)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3300, file: !1166, line: 67, baseType: !1410, size: 16, offset: 1728)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !3300, file: !1166, line: 68, baseType: !1410, size: 16, offset: 1744)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !3300, file: !1166, line: 69, baseType: !1410, size: 16, offset: 1760)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !3300, file: !1166, line: 70, baseType: !1410, size: 16, offset: 1776)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3300, file: !1166, line: 71, baseType: !1410, size: 16, offset: 1792)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !3300, file: !1166, line: 73, baseType: !1410, size: 16, offset: 1808)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !3300, file: !1166, line: 74, baseType: !1410, size: 16, offset: 1824)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3300, file: !1166, line: 76, baseType: !1410, size: 16, offset: 1840)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !3300, file: !1166, line: 78, baseType: !3324, size: 64, offset: 1856)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !1185, line: 490, size: 768, elements: !3326)
!3326 = !{!3327, !3328, !3329, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3325, file: !1185, line: 491, baseType: !3324, size: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3325, file: !1185, line: 491, baseType: !3324, size: 64, offset: 64)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !3325, file: !1185, line: 493, baseType: !3330, size: 64, offset: 128)
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3331, size: 64)
!3331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !951, line: 169, size: 2048, elements: !3332)
!3332 = !{!3333, !3334, !3335, !3336, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3398, !3401, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422}
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3331, file: !951, line: 170, baseType: !3330, size: 64)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3331, file: !951, line: 170, baseType: !3330, size: 64, offset: 64)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !3331, file: !951, line: 172, baseType: !1390, size: 64, offset: 128)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3331, file: !951, line: 174, baseType: !3337, size: 64, offset: 192)
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !3331, file: !951, line: 175, baseType: !3337, size: 64, offset: 256)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !3331, file: !951, line: 176, baseType: !1461, size: 512, offset: 320)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !3331, file: !951, line: 178, baseType: !1410, size: 16, offset: 832)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !3331, file: !951, line: 178, baseType: !1410, size: 16, offset: 848)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3331, file: !951, line: 178, baseType: !1410, size: 16, offset: 864)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3331, file: !951, line: 178, baseType: !1410, size: 16, offset: 880)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !3331, file: !951, line: 179, baseType: !1410, size: 16, offset: 896)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !3331, file: !951, line: 180, baseType: !1410, size: 16, offset: 912)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3331, file: !951, line: 181, baseType: !1410, size: 16, offset: 928)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3331, file: !951, line: 182, baseType: !1410, size: 16, offset: 944)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !3331, file: !951, line: 183, baseType: !1410, size: 16, offset: 960)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !3331, file: !951, line: 184, baseType: !1410, size: 16, offset: 976)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !3331, file: !951, line: 185, baseType: !1410, size: 16, offset: 992)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !3331, file: !951, line: 186, baseType: !1410, size: 16, offset: 1008)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3331, file: !951, line: 188, baseType: !1242, size: 32, offset: 1024)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !3331, file: !951, line: 190, baseType: !1410, size: 16, offset: 1056)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !3331, file: !951, line: 191, baseType: !1410, size: 16, offset: 1072)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !3331, file: !951, line: 194, baseType: !3356, size: 64, offset: 1088)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !1185, line: 421, size: 960, elements: !3358)
!3358 = !{!3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3386, !3394, !3395, !3396, !3397}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3357, file: !1185, line: 422, baseType: !3356, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3357, file: !1185, line: 422, baseType: !3356, size: 64, offset: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3357, file: !1185, line: 424, baseType: !1410, size: 16, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3357, file: !1185, line: 425, baseType: !1410, size: 16, offset: 144)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3357, file: !1185, line: 426, baseType: !1242, size: 32, offset: 160)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3357, file: !1185, line: 426, baseType: !1242, size: 32, offset: 192)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !3357, file: !1185, line: 427, baseType: !2090, size: 64, offset: 224)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !3357, file: !1185, line: 428, baseType: !2641, size: 48, offset: 288)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !3357, file: !1185, line: 431, baseType: !1433, size: 8, offset: 336)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3357, file: !1185, line: 432, baseType: !1433, size: 8, offset: 344)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !3357, file: !1185, line: 435, baseType: !1410, size: 16, offset: 352)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !3357, file: !1185, line: 436, baseType: !1410, size: 16, offset: 368)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !3357, file: !1185, line: 437, baseType: !1242, size: 32, offset: 384)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !3357, file: !1185, line: 437, baseType: !1242, size: 32, offset: 416)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !3357, file: !1185, line: 438, baseType: !3374, size: 64, offset: 448)
!3374 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !3357, file: !1185, line: 439, baseType: !1242, size: 32, offset: 512)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !3357, file: !1185, line: 439, baseType: !1242, size: 32, offset: 544)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3357, file: !1185, line: 442, baseType: !1410, size: 16, offset: 576)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !3357, file: !1185, line: 442, baseType: !1410, size: 16, offset: 592)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !3357, file: !1185, line: 442, baseType: !1410, size: 16, offset: 608)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !3357, file: !1185, line: 442, baseType: !1410, size: 16, offset: 624)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !3357, file: !1185, line: 443, baseType: !1410, size: 16, offset: 640)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !3357, file: !1185, line: 446, baseType: !1410, size: 16, offset: 656)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !3357, file: !1185, line: 449, baseType: !3384, size: 64, offset: 704)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1433)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !3357, file: !1185, line: 452, baseType: !3387, size: 64, offset: 768)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !1185, line: 463, size: 128, elements: !3389)
!3389 = !{!3390, !3391, !3392, !3393}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !3388, file: !1185, line: 464, baseType: !1242, size: 32)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !3388, file: !1185, line: 465, baseType: !1407, size: 32, offset: 32)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !3388, file: !1185, line: 466, baseType: !1407, size: 32, offset: 64)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !3388, file: !1185, line: 467, baseType: !1407, size: 32, offset: 96)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !3357, file: !1185, line: 455, baseType: !1410, size: 16, offset: 832)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !3357, file: !1185, line: 456, baseType: !1410, size: 16, offset: 848)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3357, file: !1185, line: 457, baseType: !1242, size: 32, offset: 864)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3357, file: !1185, line: 458, baseType: !1390, size: 64, offset: 896)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !3331, file: !951, line: 196, baseType: !3399, size: 64, offset: 1152)
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3400, size: 64)
!3400 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !951, line: 55, flags: DIFlagFwdDecl)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !3331, file: !951, line: 198, baseType: !3402, size: 64, offset: 1216)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !1185, line: 398, size: 448, elements: !3404)
!3404 = !{!3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3403, file: !1185, line: 399, baseType: !3402, size: 64)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3403, file: !1185, line: 399, baseType: !3402, size: 64, offset: 64)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3403, file: !1185, line: 400, baseType: !1242, size: 32, offset: 128)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3403, file: !1185, line: 401, baseType: !1242, size: 32, offset: 160)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3403, file: !1185, line: 402, baseType: !1242, size: 32, offset: 192)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3403, file: !1185, line: 403, baseType: !1242, size: 32, offset: 224)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3403, file: !1185, line: 404, baseType: !1242, size: 32, offset: 256)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3403, file: !1185, line: 405, baseType: !1242, size: 32, offset: 288)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3403, file: !1185, line: 407, baseType: !1390, size: 64, offset: 320)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !3403, file: !1185, line: 414, baseType: !1390, size: 64, offset: 384)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !3331, file: !951, line: 200, baseType: !1242, size: 32, offset: 1280)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !3331, file: !951, line: 200, baseType: !1242, size: 32, offset: 1312)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !3331, file: !951, line: 201, baseType: !1390, size: 64, offset: 1344)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3331, file: !951, line: 203, baseType: !1399, size: 128, offset: 1408)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3331, file: !951, line: 204, baseType: !1399, size: 128, offset: 1536)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !3331, file: !951, line: 205, baseType: !1399, size: 128, offset: 1664)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !3331, file: !951, line: 207, baseType: !1399, size: 128, offset: 1792)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !3331, file: !951, line: 208, baseType: !1399, size: 128, offset: 1920)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !3325, file: !1185, line: 495, baseType: !3374, size: 64, offset: 192)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3325, file: !1185, line: 496, baseType: !1242, size: 32, offset: 256)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3325, file: !1185, line: 497, baseType: !1390, size: 64, offset: 320)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3325, file: !1185, line: 499, baseType: !3374, size: 64, offset: 384)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3325, file: !1185, line: 500, baseType: !3374, size: 64, offset: 448)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !3325, file: !1185, line: 502, baseType: !3374, size: 64, offset: 512)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !3325, file: !1185, line: 503, baseType: !3374, size: 64, offset: 576)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3325, file: !1185, line: 504, baseType: !3374, size: 64, offset: 640)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !3325, file: !1185, line: 505, baseType: !1242, size: 32, offset: 704)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3300, file: !1166, line: 79, baseType: !1390, size: 64, offset: 1920)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !3288, file: !1166, line: 209, baseType: !2823, size: 128, offset: 448)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3288, file: !1166, line: 211, baseType: !1433, size: 8, offset: 576)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !3288, file: !1166, line: 211, baseType: !1433, size: 8, offset: 584)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3288, file: !1166, line: 212, baseType: !1410, size: 16, offset: 592)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3288, file: !1166, line: 212, baseType: !1410, size: 16, offset: 608)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !3288, file: !1166, line: 214, baseType: !1410, size: 16, offset: 624)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3288, file: !1166, line: 215, baseType: !1410, size: 16, offset: 640)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3288, file: !1166, line: 216, baseType: !1410, size: 16, offset: 656)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !3288, file: !1166, line: 217, baseType: !1410, size: 16, offset: 672)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3288, file: !1166, line: 219, baseType: !1433, size: 8, offset: 688)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3288, file: !1166, line: 219, baseType: !1433, size: 8, offset: 696)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3288, file: !1166, line: 221, baseType: !3445, size: 64, offset: 704)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !3447, line: 66, size: 1728, elements: !3448)
!3447 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_screen.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3448 = !{!3449, !3450, !3451, !3452, !3453, !3454, !3461, !3465, !3511, !3512, !3529, !3533, !3537, !3541, !3545, !3546, !3553, !3554, !3555}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3446, file: !3447, line: 67, baseType: !3445, size: 64)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3446, file: !3447, line: 67, baseType: !3445, size: 64, offset: 64)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3446, file: !3447, line: 69, baseType: !1461, size: 512, offset: 128)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3446, file: !3447, line: 70, baseType: !1242, size: 32, offset: 640)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "iconid", scope: !3446, file: !3447, line: 71, baseType: !1242, size: 32, offset: 672)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "new", scope: !3446, file: !3447, line: 74, baseType: !3455, size: 64, offset: 704)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DISubroutineType(types: !3457)
!3457 = !{!1396, !3458}
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3460)
!3460 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !1273, line: 44, flags: DIFlagFwdDecl)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3446, file: !3447, line: 76, baseType: !3462, size: 64, offset: 768)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{null, !1396}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3446, file: !3447, line: 79, baseType: !3466, size: 64, offset: 832)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{null, !3469, !3291}
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !951, line: 128, size: 2816, elements: !3471)
!3471 = !{!3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3490, !3491, !3492, !3493, !3494, !3505, !3506, !3507, !3508, !3509, !3510}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3470, file: !951, line: 129, baseType: !1414, size: 960)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !3470, file: !951, line: 131, baseType: !3330, size: 64, offset: 960)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !3470, file: !951, line: 131, baseType: !3330, size: 64, offset: 1024)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !3470, file: !951, line: 132, baseType: !1399, size: 128, offset: 1088)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3470, file: !951, line: 134, baseType: !1242, size: 32, offset: 1216)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !3470, file: !951, line: 135, baseType: !1410, size: 16, offset: 1248)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !3470, file: !951, line: 136, baseType: !1410, size: 16, offset: 1264)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !3470, file: !951, line: 138, baseType: !1399, size: 128, offset: 1280)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3470, file: !951, line: 140, baseType: !1399, size: 128, offset: 1408)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3470, file: !951, line: 142, baseType: !3482, size: 320, offset: 1536)
!3482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !951, line: 106, size: 320, elements: !3483)
!3483 = !{!3484, !3485, !3486, !3487, !3488, !3489}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3482, file: !951, line: 107, baseType: !1399, size: 128)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !3482, file: !951, line: 108, baseType: !1242, size: 32, offset: 128)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !3482, file: !951, line: 109, baseType: !1242, size: 32, offset: 160)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3482, file: !951, line: 110, baseType: !1242, size: 32, offset: 192)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3482, file: !951, line: 110, baseType: !1242, size: 32, offset: 224)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !3482, file: !951, line: 111, baseType: !3324, size: 64, offset: 256)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !3470, file: !951, line: 144, baseType: !1399, size: 128, offset: 1856)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !3470, file: !951, line: 146, baseType: !1399, size: 128, offset: 1984)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !3470, file: !951, line: 148, baseType: !1399, size: 128, offset: 2112)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !3470, file: !951, line: 150, baseType: !1399, size: 128, offset: 2240)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !3470, file: !951, line: 151, baseType: !3495, size: 64, offset: 2368)
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3496, size: 64)
!3496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !951, line: 310, size: 1344, elements: !3497)
!3497 = !{!3498, !3499, !3500, !3501, !3502, !3503, !3504}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3496, file: !951, line: 311, baseType: !3495, size: 64)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3496, file: !951, line: 311, baseType: !3495, size: 64, offset: 64)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3496, file: !951, line: 313, baseType: !1461, size: 512, offset: 128)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !3496, file: !951, line: 314, baseType: !1461, size: 512, offset: 640)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !3496, file: !951, line: 316, baseType: !1399, size: 128, offset: 1152)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !3496, file: !951, line: 317, baseType: !1242, size: 32, offset: 1280)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3496, file: !951, line: 317, baseType: !1242, size: 32, offset: 1312)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !3470, file: !951, line: 152, baseType: !3495, size: 64, offset: 2432)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !3470, file: !951, line: 153, baseType: !3495, size: 64, offset: 2496)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !3470, file: !951, line: 155, baseType: !1399, size: 128, offset: 2560)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !3470, file: !951, line: 156, baseType: !3324, size: 64, offset: 2688)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !3470, file: !951, line: 158, baseType: !1433, size: 8, offset: 2752)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !3470, file: !951, line: 159, baseType: !2311, size: 56, offset: 2760)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !3446, file: !3447, line: 81, baseType: !3466, size: 64, offset: 896)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !3446, file: !3447, line: 83, baseType: !3513, size: 64, offset: 960)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DISubroutineType(types: !3515)
!3515 = !{null, !3337, !3291, !3516}
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmNotifier", file: !1185, line: 195, size: 512, elements: !3518)
!3518 = !{!3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3517, file: !1185, line: 196, baseType: !3516, size: 64)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3517, file: !1185, line: 196, baseType: !3516, size: 64, offset: 64)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3517, file: !1185, line: 198, baseType: !3469, size: 64, offset: 128)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !3517, file: !1185, line: 199, baseType: !3330, size: 64, offset: 192)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3517, file: !1185, line: 201, baseType: !1242, size: 32, offset: 256)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !3517, file: !1185, line: 202, baseType: !7, size: 32, offset: 288)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3517, file: !1185, line: 202, baseType: !7, size: 32, offset: 320)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !3517, file: !1185, line: 202, baseType: !7, size: 32, offset: 352)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3517, file: !1185, line: 202, baseType: !7, size: 32, offset: 384)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !3517, file: !1185, line: 204, baseType: !1390, size: 64, offset: 448)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !3446, file: !3447, line: 86, baseType: !3530, size: 64, offset: 1024)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DISubroutineType(types: !3532)
!3532 = !{null, !3458, !3291}
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !3446, file: !3447, line: 89, baseType: !3534, size: 64, offset: 1088)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!1396, !1396}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !3446, file: !3447, line: 92, baseType: !3538, size: 64, offset: 1152)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = !DISubroutineType(types: !3540)
!3540 = !{null}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !3446, file: !3447, line: 94, baseType: !3542, size: 64, offset: 1216)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{null, !3495}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "dropboxes", scope: !3446, file: !3447, line: 96, baseType: !3538, size: 64, offset: 1280)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3446, file: !3447, line: 99, baseType: !3547, size: 64, offset: 1344)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = !DISubroutineType(types: !3549)
!3549 = !{!1242, !3458, !3384, !3550}
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContextDataResult", file: !3552, line: 71, flags: DIFlagFwdDecl)
!3552 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "regiontypes", scope: !3446, file: !3447, line: 102, baseType: !1399, size: 128, offset: 1408)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "toolshelf", scope: !3446, file: !3447, line: 105, baseType: !1399, size: 128, offset: 1536)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !3446, file: !3447, line: 110, baseType: !1242, size: 32, offset: 1664)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !3288, file: !1166, line: 223, baseType: !1399, size: 128, offset: 768)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3288, file: !1166, line: 224, baseType: !1399, size: 128, offset: 896)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3288, file: !1166, line: 225, baseType: !1399, size: 128, offset: 1024)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !3288, file: !1166, line: 227, baseType: !1399, size: 128, offset: 1152)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "narea", scope: !3245, file: !3, line: 1382, baseType: !3286, size: 64, offset: 448)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sAreaJoinData", file: !3, line: 2463, baseType: !3563)
!3563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sAreaJoinData", file: !3, line: 2458, size: 192, elements: !3564)
!3564 = !{!3565, !3566, !3567}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "sa1", scope: !3563, file: !3, line: 2459, baseType: !3286, size: 64)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "sa2", scope: !3563, file: !3, line: 2460, baseType: !3286, size: 64, offset: 64)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "scr", scope: !3563, file: !3, line: 2461, baseType: !3286, size: 64, offset: 128)
!3568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 64)
!3569 = !DIDerivedType(tag: DW_TAG_typedef, name: "ActKeyColumn", file: !3570, line: 70, baseType: !3571)
!3570 = !DIFile(filename: "blender/source/blender/editors/include/ED_keyframes_draw.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ActKeyColumn", file: !3570, line: 53, size: 448, elements: !3572)
!3572 = !{!3573, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3571, file: !3570, line: 55, baseType: !3574, size: 64)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3571, file: !3570, line: 55, baseType: !3574, size: 64, offset: 64)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !3571, file: !3570, line: 58, baseType: !3574, size: 64, offset: 128)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !3571, file: !3570, line: 58, baseType: !3574, size: 64, offset: 192)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3571, file: !3570, line: 59, baseType: !3574, size: 64, offset: 256)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "tree_col", scope: !3571, file: !3570, line: 60, baseType: !1433, size: 8, offset: 320)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "key_type", scope: !3571, file: !3570, line: 63, baseType: !1433, size: 8, offset: 328)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "sel", scope: !3571, file: !3570, line: 64, baseType: !1410, size: 16, offset: 336)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !3571, file: !3570, line: 65, baseType: !1407, size: 32, offset: 352)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !3571, file: !3570, line: 68, baseType: !1410, size: 16, offset: 384)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "totcurve", scope: !3571, file: !3570, line: 69, baseType: !1410, size: 16, offset: 400)
!3585 = !{!0, !3586, !3718}
!3586 = !DIGlobalVariableExpression(var: !3587, expr: !DIExpression())
!3587 = distinct !DIGlobalVariable(name: "type_items", scope: !3588, file: !3, line: 3844, type: !3709, isLocal: true, isDefinition: true)
!3588 = distinct !DISubprogram(name: "SCENE_OT_new", scope: !3, file: !3, line: 3842, type: !3589, scopeLine: 3843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3589 = !DISubroutineType(types: !3590)
!3590 = !{null, !3591}
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!3592 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !1185, line: 568, baseType: !3593)
!3593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !1185, line: 508, size: 1536, elements: !3594)
!3594 = !{!3595, !3596, !3597, !3598, !3599, !3634, !3638, !3644, !3648, !3649, !3653, !3654, !3655, !3656, !3660, !3661, !3676, !3677, !3681, !3707}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3593, file: !1185, line: 509, baseType: !3384, size: 64)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3593, file: !1185, line: 510, baseType: !3384, size: 64, offset: 64)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !3593, file: !1185, line: 511, baseType: !3384, size: 64, offset: 128)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3593, file: !1185, line: 512, baseType: !3384, size: 64, offset: 192)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3593, file: !1185, line: 518, baseType: !3600, size: 64, offset: 256)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 64)
!3601 = !DISubroutineType(types: !3602)
!3602 = !{!1242, !3603, !3604}
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !951, line: 328, size: 1344, elements: !3606)
!3606 = !{!3607, !3608, !3609, !3610, !3611, !3613, !3614, !3615, !3625, !3627, !3628, !3629, !3632, !3633}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3605, file: !951, line: 329, baseType: !3604, size: 64)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3605, file: !951, line: 329, baseType: !3604, size: 64, offset: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3605, file: !951, line: 332, baseType: !1461, size: 512, offset: 128)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3605, file: !951, line: 333, baseType: !1450, size: 64, offset: 640)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3605, file: !951, line: 336, baseType: !3612, size: 64, offset: 704)
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3605, file: !951, line: 337, baseType: !1390, size: 64, offset: 768)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !3605, file: !951, line: 338, baseType: !1390, size: 64, offset: 832)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3605, file: !951, line: 340, baseType: !3616, size: 64, offset: 896)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !1273, line: 55, size: 192, elements: !3618)
!3618 = !{!3619, !3623, !3624}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3617, file: !1273, line: 58, baseType: !3620, size: 64)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3617, file: !1273, line: 56, size: 64, elements: !3621)
!3621 = !{!3622}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3620, file: !1273, line: 57, baseType: !1390, size: 64)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3617, file: !1273, line: 60, baseType: !1904, size: 64, offset: 64)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3617, file: !1273, line: 61, baseType: !1390, size: 64, offset: 128)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3605, file: !951, line: 341, baseType: !3626, size: 64, offset: 960)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3605, file: !951, line: 343, baseType: !1399, size: 128, offset: 1024)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !3605, file: !951, line: 344, baseType: !3604, size: 64, offset: 1152)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !3605, file: !951, line: 345, baseType: !3630, size: 64, offset: 1216)
!3630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3631, size: 64)
!3631 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !951, line: 61, flags: DIFlagFwdDecl)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3605, file: !951, line: 346, baseType: !1410, size: 16, offset: 1280)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3605, file: !951, line: 346, baseType: !2958, size: 48, offset: 1296)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3593, file: !1185, line: 524, baseType: !3635, size: 64, offset: 320)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{!2425, !3603, !3604}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !3593, file: !1185, line: 530, baseType: !3639, size: 64, offset: 384)
!3639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3640, size: 64)
!3640 = !DISubroutineType(types: !3641)
!3641 = !{!1242, !3603, !3604, !3642}
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3357)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3593, file: !1185, line: 531, baseType: !3645, size: 64, offset: 448)
!3645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3646, size: 64)
!3646 = !DISubroutineType(types: !3647)
!3647 = !{null, !3603, !3604}
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !3593, file: !1185, line: 532, baseType: !3639, size: 64, offset: 512)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3593, file: !1185, line: 536, baseType: !3650, size: 64, offset: 576)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{!1242, !3603}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !3593, file: !1185, line: 539, baseType: !3645, size: 64, offset: 640)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3593, file: !1185, line: 542, baseType: !1904, size: 64, offset: 704)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !3593, file: !1185, line: 545, baseType: !1455, size: 64, offset: 768)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3593, file: !1185, line: 549, baseType: !3657, size: 64, offset: 832)
!3657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3658, size: 64)
!3658 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !1273, line: 333, baseType: !3659)
!3659 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !1273, line: 39, flags: DIFlagFwdDecl)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3593, file: !1185, line: 552, baseType: !1399, size: 128, offset: 896)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !3593, file: !1185, line: 555, baseType: !3662, size: 64, offset: 1024)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !951, line: 281, size: 1088, elements: !3664)
!3664 = !{!3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3663, file: !951, line: 282, baseType: !3662, size: 64)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3663, file: !951, line: 282, baseType: !3662, size: 64, offset: 64)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3663, file: !951, line: 284, baseType: !1399, size: 128, offset: 128)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !3663, file: !951, line: 285, baseType: !1399, size: 128, offset: 256)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3663, file: !951, line: 287, baseType: !1461, size: 512, offset: 384)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3663, file: !951, line: 288, baseType: !1410, size: 16, offset: 896)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !3663, file: !951, line: 289, baseType: !1410, size: 16, offset: 912)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3663, file: !951, line: 291, baseType: !1410, size: 16, offset: 928)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !3663, file: !951, line: 292, baseType: !1410, size: 16, offset: 944)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3663, file: !951, line: 295, baseType: !3650, size: 64, offset: 960)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !3663, file: !951, line: 296, baseType: !1390, size: 64, offset: 1024)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !3593, file: !1185, line: 559, baseType: !1390, size: 64, offset: 1088)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !3593, file: !1185, line: 560, baseType: !3678, size: 64, offset: 1152)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 64)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{!1242, !3603, !3612}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3593, file: !1185, line: 563, baseType: !3682, size: 256, offset: 1216)
!3682 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !1273, line: 436, baseType: !3683)
!3683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !1273, line: 430, size: 256, elements: !3684)
!3684 = !{!3685, !3686, !3689, !3705}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3683, file: !1273, line: 431, baseType: !1390, size: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3683, file: !1273, line: 432, baseType: !3687, size: 64, offset: 64)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 64)
!3688 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !1273, line: 417, baseType: !1905)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !3683, file: !1273, line: 433, baseType: !3690, size: 64, offset: 128)
!3690 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !1273, line: 408, baseType: !3691)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{!1242, !3603, !3616, !3694, !3696}
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !1273, line: 38, flags: DIFlagFwdDecl)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !1273, line: 348, baseType: !3698)
!3698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !1273, line: 337, size: 256, elements: !3699)
!3699 = !{!3700, !3701, !3702, !3703, !3704}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3698, file: !1273, line: 339, baseType: !1390, size: 64)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3698, file: !1273, line: 342, baseType: !3694, size: 64, offset: 64)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !3698, file: !1273, line: 345, baseType: !1242, size: 32, offset: 128)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !3698, file: !1273, line: 347, baseType: !1242, size: 32, offset: 160)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !3698, file: !1273, line: 347, baseType: !1242, size: 32, offset: 192)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3683, file: !1273, line: 434, baseType: !3706, size: 64, offset: 192)
!3706 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !1273, line: 409, baseType: !1958)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3593, file: !1185, line: 566, baseType: !1410, size: 16, offset: 1472)
!3708 = !{}
!3709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3710, size: 1920, elements: !2642)
!3710 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !1273, line: 308, baseType: !3711)
!3711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !1273, line: 302, size: 320, elements: !3712)
!3712 = !{!3713, !3714, !3715, !3716, !3717}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3711, file: !1273, line: 303, baseType: !1242, size: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !3711, file: !1273, line: 304, baseType: !3384, size: 64, offset: 64)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !3711, file: !1273, line: 305, baseType: !1242, size: 32, offset: 128)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3711, file: !1273, line: 306, baseType: !3384, size: 64, offset: 192)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3711, file: !1273, line: 307, baseType: !3384, size: 64, offset: 256)
!3718 = !DIGlobalVariableExpression(var: !3719, expr: !DIExpression())
!3719 = distinct !DIGlobalVariable(name: "modal_items", scope: !3720, file: !3, line: 4102, type: !3725, isLocal: true, isDefinition: true)
!3720 = distinct !DISubprogram(name: "keymap_modal_set", scope: !3, file: !3, line: 4100, type: !3721, scopeLine: 4101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3721 = !DISubroutineType(types: !3722)
!3722 = !{null, !3723}
!3723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3724, size: 64)
!3724 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyConfig", file: !951, line: 318, baseType: !3496)
!3725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3710, size: 1600, elements: !2473)
!3726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3710, size: 960, elements: !1503)
!3727 = !{i32 7, !"Dwarf Version", i32 4}
!3728 = !{i32 2, !"Debug Info Version", i32 3}
!3729 = !{i32 1, !"wchar_size", i32 4}
!3730 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3731 = distinct !DISubprogram(name: "ED_operator_regionactive", scope: !3, file: !3, line: 95, type: !3732, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!1242, !3734}
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !3552, line: 69, baseType: !3460)
!3736 = !DILocalVariable(name: "C", arg: 1, scope: !3731, file: !3, line: 95, type: !3734)
!3737 = !DILocation(line: 95, column: 40, scope: !3731)
!3738 = !DILocation(line: 97, column: 20, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 97, column: 6)
!3740 = !DILocation(line: 97, column: 6, scope: !3739)
!3741 = !DILocation(line: 97, column: 23, scope: !3739)
!3742 = !DILocation(line: 97, column: 6, scope: !3731)
!3743 = !DILocation(line: 97, column: 32, scope: !3739)
!3744 = !DILocation(line: 98, column: 20, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 98, column: 6)
!3746 = !DILocation(line: 98, column: 6, scope: !3745)
!3747 = !DILocation(line: 98, column: 23, scope: !3745)
!3748 = !DILocation(line: 98, column: 6, scope: !3731)
!3749 = !DILocation(line: 98, column: 32, scope: !3745)
!3750 = !DILocation(line: 99, column: 20, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 99, column: 6)
!3752 = !DILocation(line: 99, column: 6, scope: !3751)
!3753 = !DILocation(line: 99, column: 23, scope: !3751)
!3754 = !DILocation(line: 99, column: 6, scope: !3731)
!3755 = !DILocation(line: 99, column: 32, scope: !3751)
!3756 = !DILocation(line: 100, column: 2, scope: !3731)
!3757 = !DILocation(line: 101, column: 1, scope: !3731)
!3758 = distinct !DISubprogram(name: "ED_operator_areaactive", scope: !3, file: !3, line: 103, type: !3732, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3759 = !DILocalVariable(name: "C", arg: 1, scope: !3758, file: !3, line: 103, type: !3734)
!3760 = !DILocation(line: 103, column: 38, scope: !3758)
!3761 = !DILocation(line: 105, column: 20, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 105, column: 6)
!3763 = !DILocation(line: 105, column: 6, scope: !3762)
!3764 = !DILocation(line: 105, column: 23, scope: !3762)
!3765 = !DILocation(line: 105, column: 6, scope: !3758)
!3766 = !DILocation(line: 105, column: 32, scope: !3762)
!3767 = !DILocation(line: 106, column: 20, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 106, column: 6)
!3769 = !DILocation(line: 106, column: 6, scope: !3768)
!3770 = !DILocation(line: 106, column: 23, scope: !3768)
!3771 = !DILocation(line: 106, column: 6, scope: !3758)
!3772 = !DILocation(line: 106, column: 32, scope: !3768)
!3773 = !DILocation(line: 107, column: 18, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 107, column: 6)
!3775 = !DILocation(line: 107, column: 6, scope: !3774)
!3776 = !DILocation(line: 107, column: 21, scope: !3774)
!3777 = !DILocation(line: 107, column: 6, scope: !3758)
!3778 = !DILocation(line: 107, column: 30, scope: !3774)
!3779 = !DILocation(line: 108, column: 2, scope: !3758)
!3780 = !DILocation(line: 109, column: 1, scope: !3758)
!3781 = distinct !DISubprogram(name: "ED_operator_screenactive", scope: !3, file: !3, line: 111, type: !3732, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3782 = !DILocalVariable(name: "C", arg: 1, scope: !3781, file: !3, line: 111, type: !3734)
!3783 = !DILocation(line: 111, column: 40, scope: !3781)
!3784 = !DILocation(line: 113, column: 20, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 113, column: 6)
!3786 = !DILocation(line: 113, column: 6, scope: !3785)
!3787 = !DILocation(line: 113, column: 23, scope: !3785)
!3788 = !DILocation(line: 113, column: 6, scope: !3781)
!3789 = !DILocation(line: 113, column: 32, scope: !3785)
!3790 = !DILocation(line: 114, column: 20, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 114, column: 6)
!3792 = !DILocation(line: 114, column: 6, scope: !3791)
!3793 = !DILocation(line: 114, column: 23, scope: !3791)
!3794 = !DILocation(line: 114, column: 6, scope: !3781)
!3795 = !DILocation(line: 114, column: 32, scope: !3791)
!3796 = !DILocation(line: 115, column: 2, scope: !3781)
!3797 = !DILocation(line: 116, column: 1, scope: !3781)
!3798 = distinct !DISubprogram(name: "ED_operator_screen_mainwinactive", scope: !3, file: !3, line: 158, type: !3732, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3799 = !DILocalVariable(name: "C", arg: 1, scope: !3798, file: !3, line: 158, type: !3734)
!3800 = !DILocation(line: 158, column: 48, scope: !3798)
!3801 = !DILocalVariable(name: "screen", scope: !3798, file: !3, line: 160, type: !3298)
!3802 = !DILocation(line: 160, column: 11, scope: !3798)
!3803 = !DILocation(line: 161, column: 20, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 161, column: 6)
!3805 = !DILocation(line: 161, column: 6, scope: !3804)
!3806 = !DILocation(line: 161, column: 23, scope: !3804)
!3807 = !DILocation(line: 161, column: 6, scope: !3798)
!3808 = !DILocation(line: 161, column: 32, scope: !3804)
!3809 = !DILocation(line: 162, column: 25, scope: !3798)
!3810 = !DILocation(line: 162, column: 11, scope: !3798)
!3811 = !DILocation(line: 162, column: 9, scope: !3798)
!3812 = !DILocation(line: 163, column: 6, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 163, column: 6)
!3814 = !DILocation(line: 163, column: 13, scope: !3813)
!3815 = !DILocation(line: 163, column: 6, scope: !3798)
!3816 = !DILocation(line: 163, column: 22, scope: !3813)
!3817 = !DILocation(line: 164, column: 6, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 164, column: 6)
!3819 = !DILocation(line: 164, column: 14, scope: !3818)
!3820 = !DILocation(line: 164, column: 30, scope: !3818)
!3821 = !DILocation(line: 164, column: 38, scope: !3818)
!3822 = !DILocation(line: 164, column: 27, scope: !3818)
!3823 = !DILocation(line: 164, column: 6, scope: !3798)
!3824 = !DILocation(line: 164, column: 47, scope: !3818)
!3825 = !DILocation(line: 165, column: 2, scope: !3798)
!3826 = !DILocation(line: 166, column: 1, scope: !3798)
!3827 = distinct !DISubprogram(name: "ED_operator_scene_editable", scope: !3, file: !3, line: 168, type: !3732, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3828 = !DILocalVariable(name: "C", arg: 1, scope: !3827, file: !3, line: 168, type: !3734)
!3829 = !DILocation(line: 168, column: 42, scope: !3827)
!3830 = !DILocalVariable(name: "scene", scope: !3827, file: !3, line: 170, type: !3831)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1858, line: 1299, baseType: !1857)
!3833 = !DILocation(line: 170, column: 9, scope: !3827)
!3834 = !DILocation(line: 170, column: 32, scope: !3827)
!3835 = !DILocation(line: 170, column: 17, scope: !3827)
!3836 = !DILocation(line: 171, column: 6, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3827, file: !3, line: 171, column: 6)
!3838 = !DILocation(line: 171, column: 12, scope: !3837)
!3839 = !DILocation(line: 171, column: 15, scope: !3837)
!3840 = !DILocation(line: 171, column: 22, scope: !3837)
!3841 = !DILocation(line: 171, column: 25, scope: !3837)
!3842 = !DILocation(line: 171, column: 29, scope: !3837)
!3843 = !DILocation(line: 171, column: 6, scope: !3827)
!3844 = !DILocation(line: 172, column: 3, scope: !3837)
!3845 = !DILocation(line: 173, column: 2, scope: !3827)
!3846 = !DILocation(line: 174, column: 1, scope: !3827)
!3847 = distinct !DISubprogram(name: "ED_operator_objectmode", scope: !3, file: !3, line: 176, type: !3732, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3848 = !DILocalVariable(name: "C", arg: 1, scope: !3847, file: !3, line: 176, type: !3734)
!3849 = !DILocation(line: 176, column: 38, scope: !3847)
!3850 = !DILocalVariable(name: "scene", scope: !3847, file: !3, line: 178, type: !3831)
!3851 = !DILocation(line: 178, column: 9, scope: !3847)
!3852 = !DILocation(line: 178, column: 32, scope: !3847)
!3853 = !DILocation(line: 178, column: 17, scope: !3847)
!3854 = !DILocalVariable(name: "obact", scope: !3847, file: !3, line: 179, type: !3855)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !6, line: 295, baseType: !1612)
!3857 = !DILocation(line: 179, column: 10, scope: !3847)
!3858 = !DILocation(line: 179, column: 41, scope: !3847)
!3859 = !DILocation(line: 179, column: 18, scope: !3847)
!3860 = !DILocation(line: 181, column: 6, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 181, column: 6)
!3862 = !DILocation(line: 181, column: 12, scope: !3861)
!3863 = !DILocation(line: 181, column: 20, scope: !3861)
!3864 = !DILocation(line: 181, column: 23, scope: !3861)
!3865 = !DILocation(line: 181, column: 30, scope: !3861)
!3866 = !DILocation(line: 181, column: 33, scope: !3861)
!3867 = !DILocation(line: 181, column: 6, scope: !3847)
!3868 = !DILocation(line: 182, column: 3, scope: !3861)
!3869 = !DILocation(line: 183, column: 27, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 183, column: 6)
!3871 = !DILocation(line: 183, column: 6, scope: !3870)
!3872 = !DILocation(line: 183, column: 6, scope: !3847)
!3873 = !DILocation(line: 184, column: 3, scope: !3870)
!3874 = !DILocation(line: 187, column: 6, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 187, column: 6)
!3876 = !DILocation(line: 187, column: 12, scope: !3875)
!3877 = !DILocation(line: 187, column: 16, scope: !3875)
!3878 = !DILocation(line: 187, column: 23, scope: !3875)
!3879 = !DILocation(line: 187, column: 28, scope: !3875)
!3880 = !DILocation(line: 187, column: 6, scope: !3847)
!3881 = !DILocation(line: 188, column: 3, scope: !3875)
!3882 = !DILocation(line: 190, column: 2, scope: !3847)
!3883 = !DILocation(line: 191, column: 1, scope: !3847)
!3884 = distinct !DISubprogram(name: "ED_operator_view3d_active", scope: !3, file: !3, line: 203, type: !3732, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3885 = !DILocalVariable(name: "C", arg: 1, scope: !3884, file: !3, line: 203, type: !3734)
!3886 = !DILocation(line: 203, column: 41, scope: !3884)
!3887 = !DILocation(line: 205, column: 27, scope: !3884)
!3888 = !DILocation(line: 205, column: 9, scope: !3884)
!3889 = !DILocation(line: 205, column: 2, scope: !3884)
!3890 = distinct !DISubprogram(name: "ed_spacetype_test", scope: !3, file: !3, line: 194, type: !3891, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{!2425, !3734, !1242}
!3893 = !DILocalVariable(name: "C", arg: 1, scope: !3890, file: !3, line: 194, type: !3734)
!3894 = !DILocation(line: 194, column: 41, scope: !3890)
!3895 = !DILocalVariable(name: "type", arg: 2, scope: !3890, file: !3, line: 194, type: !1242)
!3896 = !DILocation(line: 194, column: 48, scope: !3890)
!3897 = !DILocation(line: 196, column: 29, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 196, column: 6)
!3899 = !DILocation(line: 196, column: 6, scope: !3898)
!3900 = !DILocation(line: 196, column: 6, scope: !3890)
!3901 = !DILocalVariable(name: "sl", scope: !3902, file: !3, line: 197, type: !1391)
!3902 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 196, column: 33)
!3903 = !DILocation(line: 197, column: 14, scope: !3902)
!3904 = !DILocation(line: 197, column: 50, scope: !3902)
!3905 = !DILocation(line: 197, column: 32, scope: !3902)
!3906 = !DILocation(line: 198, column: 10, scope: !3902)
!3907 = !DILocation(line: 198, column: 13, scope: !3902)
!3908 = !DILocation(line: 198, column: 17, scope: !3902)
!3909 = !DILocation(line: 198, column: 21, scope: !3902)
!3910 = !DILocation(line: 198, column: 34, scope: !3902)
!3911 = !DILocation(line: 198, column: 31, scope: !3902)
!3912 = !DILocation(line: 0, scope: !3902)
!3913 = !DILocation(line: 198, column: 3, scope: !3902)
!3914 = !DILocation(line: 200, column: 2, scope: !3890)
!3915 = !DILocation(line: 201, column: 1, scope: !3890)
!3916 = distinct !DISubprogram(name: "ED_operator_region_view3d_active", scope: !3, file: !3, line: 208, type: !3732, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3917 = !DILocalVariable(name: "C", arg: 1, scope: !3916, file: !3, line: 208, type: !3734)
!3918 = !DILocation(line: 208, column: 48, scope: !3916)
!3919 = !DILocation(line: 210, column: 27, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 210, column: 6)
!3921 = !DILocation(line: 210, column: 6, scope: !3920)
!3922 = !DILocation(line: 210, column: 6, scope: !3916)
!3923 = !DILocation(line: 211, column: 3, scope: !3920)
!3924 = !DILocation(line: 213, column: 31, scope: !3916)
!3925 = !DILocation(line: 213, column: 2, scope: !3916)
!3926 = !DILocation(line: 214, column: 2, scope: !3916)
!3927 = !DILocation(line: 215, column: 1, scope: !3916)
!3928 = distinct !DISubprogram(name: "ED_operator_animview_active", scope: !3, file: !3, line: 218, type: !3732, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3929 = !DILocalVariable(name: "C", arg: 1, scope: !3928, file: !3, line: 218, type: !3734)
!3930 = !DILocation(line: 218, column: 43, scope: !3928)
!3931 = !DILocation(line: 220, column: 29, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 220, column: 6)
!3933 = !DILocation(line: 220, column: 6, scope: !3932)
!3934 = !DILocation(line: 220, column: 6, scope: !3928)
!3935 = !DILocalVariable(name: "sl", scope: !3936, file: !3, line: 221, type: !1391)
!3936 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 220, column: 33)
!3937 = !DILocation(line: 221, column: 14, scope: !3936)
!3938 = !DILocation(line: 221, column: 50, scope: !3936)
!3939 = !DILocation(line: 221, column: 32, scope: !3936)
!3940 = !DILocation(line: 222, column: 7, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 222, column: 7)
!3942 = !DILocation(line: 222, column: 10, scope: !3941)
!3943 = !DILocation(line: 222, column: 14, scope: !3941)
!3944 = !DILocation(line: 222, column: 7, scope: !3936)
!3945 = !DILocation(line: 223, column: 4, scope: !3941)
!3946 = !DILocation(line: 224, column: 2, scope: !3936)
!3947 = !DILocation(line: 226, column: 31, scope: !3928)
!3948 = !DILocation(line: 226, column: 2, scope: !3928)
!3949 = !DILocation(line: 227, column: 2, scope: !3928)
!3950 = !DILocation(line: 228, column: 1, scope: !3928)
!3951 = distinct !DISubprogram(name: "ED_operator_timeline_active", scope: !3, file: !3, line: 230, type: !3732, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3952 = !DILocalVariable(name: "C", arg: 1, scope: !3951, file: !3, line: 230, type: !3734)
!3953 = !DILocation(line: 230, column: 43, scope: !3951)
!3954 = !DILocation(line: 232, column: 27, scope: !3951)
!3955 = !DILocation(line: 232, column: 9, scope: !3951)
!3956 = !DILocation(line: 232, column: 2, scope: !3951)
!3957 = distinct !DISubprogram(name: "ED_operator_outliner_active", scope: !3, file: !3, line: 235, type: !3732, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3958 = !DILocalVariable(name: "C", arg: 1, scope: !3957, file: !3, line: 235, type: !3734)
!3959 = !DILocation(line: 235, column: 43, scope: !3957)
!3960 = !DILocation(line: 237, column: 27, scope: !3957)
!3961 = !DILocation(line: 237, column: 9, scope: !3957)
!3962 = !DILocation(line: 237, column: 2, scope: !3957)
!3963 = distinct !DISubprogram(name: "ED_operator_outliner_active_no_editobject", scope: !3, file: !3, line: 240, type: !3732, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3964 = !DILocalVariable(name: "C", arg: 1, scope: !3963, file: !3, line: 240, type: !3734)
!3965 = !DILocation(line: 240, column: 57, scope: !3963)
!3966 = !DILocation(line: 242, column: 24, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 242, column: 6)
!3968 = !DILocation(line: 242, column: 6, scope: !3967)
!3969 = !DILocation(line: 242, column: 6, scope: !3963)
!3970 = !DILocalVariable(name: "ob", scope: !3971, file: !3, line: 243, type: !3855)
!3971 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 242, column: 44)
!3972 = !DILocation(line: 243, column: 11, scope: !3971)
!3973 = !DILocation(line: 243, column: 41, scope: !3971)
!3974 = !DILocation(line: 243, column: 16, scope: !3971)
!3975 = !DILocalVariable(name: "obedit", scope: !3971, file: !3, line: 244, type: !3855)
!3976 = !DILocation(line: 244, column: 11, scope: !3971)
!3977 = !DILocation(line: 244, column: 41, scope: !3971)
!3978 = !DILocation(line: 244, column: 20, scope: !3971)
!3979 = !DILocation(line: 245, column: 7, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 245, column: 7)
!3981 = !DILocation(line: 245, column: 10, scope: !3980)
!3982 = !DILocation(line: 245, column: 13, scope: !3980)
!3983 = !DILocation(line: 245, column: 19, scope: !3980)
!3984 = !DILocation(line: 245, column: 16, scope: !3980)
!3985 = !DILocation(line: 245, column: 7, scope: !3971)
!3986 = !DILocation(line: 246, column: 4, scope: !3980)
!3987 = !DILocation(line: 248, column: 4, scope: !3980)
!3988 = !DILocation(line: 250, column: 2, scope: !3963)
!3989 = !DILocation(line: 251, column: 1, scope: !3963)
!3990 = distinct !DISubprogram(name: "ED_operator_file_active", scope: !3, file: !3, line: 253, type: !3732, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3991 = !DILocalVariable(name: "C", arg: 1, scope: !3990, file: !3, line: 253, type: !3734)
!3992 = !DILocation(line: 253, column: 39, scope: !3990)
!3993 = !DILocation(line: 255, column: 27, scope: !3990)
!3994 = !DILocation(line: 255, column: 9, scope: !3990)
!3995 = !DILocation(line: 255, column: 2, scope: !3990)
!3996 = distinct !DISubprogram(name: "ED_operator_action_active", scope: !3, file: !3, line: 258, type: !3732, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!3997 = !DILocalVariable(name: "C", arg: 1, scope: !3996, file: !3, line: 258, type: !3734)
!3998 = !DILocation(line: 258, column: 41, scope: !3996)
!3999 = !DILocation(line: 260, column: 27, scope: !3996)
!4000 = !DILocation(line: 260, column: 9, scope: !3996)
!4001 = !DILocation(line: 260, column: 2, scope: !3996)
!4002 = distinct !DISubprogram(name: "ED_operator_buttons_active", scope: !3, file: !3, line: 263, type: !3732, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4003 = !DILocalVariable(name: "C", arg: 1, scope: !4002, file: !3, line: 263, type: !3734)
!4004 = !DILocation(line: 263, column: 42, scope: !4002)
!4005 = !DILocation(line: 265, column: 27, scope: !4002)
!4006 = !DILocation(line: 265, column: 9, scope: !4002)
!4007 = !DILocation(line: 265, column: 2, scope: !4002)
!4008 = distinct !DISubprogram(name: "ED_operator_node_active", scope: !3, file: !3, line: 268, type: !3732, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4009 = !DILocalVariable(name: "C", arg: 1, scope: !4008, file: !3, line: 268, type: !3734)
!4010 = !DILocation(line: 268, column: 39, scope: !4008)
!4011 = !DILocalVariable(name: "snode", scope: !4008, file: !3, line: 270, type: !4012)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceNode", file: !18, line: 963, baseType: !4014)
!4014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !18, line: 925, size: 3200, elements: !4015)
!4015 = !{!4016, !4017, !4018, !4019, !4020, !4021, !4022, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4014, file: !18, line: 926, baseType: !1391, size: 64)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4014, file: !18, line: 926, baseType: !1391, size: 64, offset: 64)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4014, file: !18, line: 927, baseType: !1399, size: 128, offset: 128)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4014, file: !18, line: 928, baseType: !1242, size: 32, offset: 256)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4014, file: !18, line: 929, baseType: !1407, size: 32, offset: 288)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4014, file: !18, line: 930, baseType: !1409, size: 128, offset: 320)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !4014, file: !18, line: 932, baseType: !4023, size: 1280, offset: 448)
!4023 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !4024, line: 71, baseType: !4025)
!4024 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !4024, line: 40, size: 1280, elements: !4026)
!4026 = !{!4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4054}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !4025, file: !4024, line: 41, baseType: !1923, size: 128)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !4025, file: !4024, line: 41, baseType: !1923, size: 128, offset: 128)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !4025, file: !4024, line: 42, baseType: !2823, size: 128, offset: 256)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !4025, file: !4024, line: 42, baseType: !2823, size: 128, offset: 384)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4025, file: !4024, line: 43, baseType: !2823, size: 128, offset: 512)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !4025, file: !4024, line: 45, baseType: !1846, size: 64, offset: 640)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4025, file: !4024, line: 45, baseType: !1846, size: 64, offset: 704)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !4025, file: !4024, line: 46, baseType: !1407, size: 32, offset: 768)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !4025, file: !4024, line: 46, baseType: !1407, size: 32, offset: 800)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !4025, file: !4024, line: 48, baseType: !1410, size: 16, offset: 832)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !4025, file: !4024, line: 49, baseType: !1410, size: 16, offset: 848)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !4025, file: !4024, line: 51, baseType: !1410, size: 16, offset: 864)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !4025, file: !4024, line: 52, baseType: !1410, size: 16, offset: 880)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !4025, file: !4024, line: 53, baseType: !1410, size: 16, offset: 896)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4025, file: !4024, line: 55, baseType: !1410, size: 16, offset: 912)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4025, file: !4024, line: 56, baseType: !1410, size: 16, offset: 928)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !4025, file: !4024, line: 58, baseType: !1410, size: 16, offset: 944)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !4025, file: !4024, line: 58, baseType: !1410, size: 16, offset: 960)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !4025, file: !4024, line: 59, baseType: !1410, size: 16, offset: 976)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !4025, file: !4024, line: 59, baseType: !1410, size: 16, offset: 992)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4025, file: !4024, line: 61, baseType: !1410, size: 16, offset: 1008)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !4025, file: !4024, line: 63, baseType: !3241, size: 64, offset: 1024)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !4025, file: !4024, line: 64, baseType: !1242, size: 32, offset: 1088)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !4025, file: !4024, line: 65, baseType: !1242, size: 32, offset: 1120)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !4025, file: !4024, line: 68, baseType: !4052, size: 64, offset: 1152)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4053 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !4024, line: 68, flags: DIFlagFwdDecl)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !4025, file: !4024, line: 69, baseType: !3324, size: 64, offset: 1216)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4014, file: !18, line: 934, baseType: !1421, size: 64, offset: 1728)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !4014, file: !18, line: 934, baseType: !1421, size: 64, offset: 1792)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4014, file: !18, line: 935, baseType: !1410, size: 16, offset: 1856)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !4014, file: !18, line: 935, baseType: !1410, size: 16, offset: 1872)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !4014, file: !18, line: 936, baseType: !1407, size: 32, offset: 1888)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4014, file: !18, line: 936, baseType: !1407, size: 32, offset: 1920)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !4014, file: !18, line: 938, baseType: !1407, size: 32, offset: 1952)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !4014, file: !18, line: 938, baseType: !1407, size: 32, offset: 1984)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !4014, file: !18, line: 939, baseType: !1407, size: 32, offset: 2016)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4014, file: !18, line: 940, baseType: !1846, size: 64, offset: 2048)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "treepath", scope: !4014, file: !18, line: 947, baseType: !1399, size: 128, offset: 2112)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !4014, file: !18, line: 949, baseType: !1893, size: 64, offset: 2240)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "edittree", scope: !4014, file: !18, line: 949, baseType: !1893, size: 64, offset: 2304)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "tree_idname", scope: !4014, file: !18, line: 952, baseType: !1461, size: 512, offset: 2368)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "treetype", scope: !4014, file: !18, line: 953, baseType: !1242, size: 32, offset: 2880)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !4014, file: !18, line: 954, baseType: !1242, size: 32, offset: 2912)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "texfrom", scope: !4014, file: !18, line: 956, baseType: !1410, size: 16, offset: 2944)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "shaderfrom", scope: !4014, file: !18, line: 957, baseType: !1410, size: 16, offset: 2960)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !4014, file: !18, line: 958, baseType: !1410, size: 16, offset: 2976)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !4014, file: !18, line: 959, baseType: !1410, size: 16, offset: 2992)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "linkdrag", scope: !4014, file: !18, line: 960, baseType: !1399, size: 128, offset: 3008)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !4014, file: !18, line: 962, baseType: !1690, size: 64, offset: 3136)
!4077 = !DILocation(line: 270, column: 13, scope: !4008)
!4078 = !DILocation(line: 270, column: 39, scope: !4008)
!4079 = !DILocation(line: 270, column: 21, scope: !4008)
!4080 = !DILocation(line: 272, column: 6, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 272, column: 6)
!4082 = !DILocation(line: 272, column: 12, scope: !4081)
!4083 = !DILocation(line: 272, column: 15, scope: !4081)
!4084 = !DILocation(line: 272, column: 22, scope: !4081)
!4085 = !DILocation(line: 272, column: 6, scope: !4008)
!4086 = !DILocation(line: 273, column: 3, scope: !4081)
!4087 = !DILocation(line: 275, column: 2, scope: !4008)
!4088 = !DILocation(line: 276, column: 1, scope: !4008)
!4089 = distinct !DISubprogram(name: "ED_operator_node_editable", scope: !3, file: !3, line: 278, type: !3732, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4090 = !DILocalVariable(name: "C", arg: 1, scope: !4089, file: !3, line: 278, type: !3734)
!4091 = !DILocation(line: 278, column: 41, scope: !4089)
!4092 = !DILocalVariable(name: "snode", scope: !4089, file: !3, line: 280, type: !4012)
!4093 = !DILocation(line: 280, column: 13, scope: !4089)
!4094 = !DILocation(line: 280, column: 39, scope: !4089)
!4095 = !DILocation(line: 280, column: 21, scope: !4089)
!4096 = !DILocation(line: 282, column: 6, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 282, column: 6)
!4098 = !DILocation(line: 282, column: 12, scope: !4097)
!4099 = !DILocation(line: 282, column: 15, scope: !4097)
!4100 = !DILocation(line: 282, column: 22, scope: !4097)
!4101 = !DILocation(line: 282, column: 31, scope: !4097)
!4102 = !DILocation(line: 282, column: 34, scope: !4097)
!4103 = !DILocation(line: 282, column: 41, scope: !4097)
!4104 = !DILocation(line: 282, column: 51, scope: !4097)
!4105 = !DILocation(line: 282, column: 54, scope: !4097)
!4106 = !DILocation(line: 282, column: 58, scope: !4097)
!4107 = !DILocation(line: 282, column: 6, scope: !4089)
!4108 = !DILocation(line: 283, column: 3, scope: !4097)
!4109 = !DILocation(line: 285, column: 2, scope: !4089)
!4110 = !DILocation(line: 286, column: 1, scope: !4089)
!4111 = distinct !DISubprogram(name: "ED_operator_graphedit_active", scope: !3, file: !3, line: 288, type: !3732, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4112 = !DILocalVariable(name: "C", arg: 1, scope: !4111, file: !3, line: 288, type: !3734)
!4113 = !DILocation(line: 288, column: 44, scope: !4111)
!4114 = !DILocation(line: 290, column: 27, scope: !4111)
!4115 = !DILocation(line: 290, column: 9, scope: !4111)
!4116 = !DILocation(line: 290, column: 2, scope: !4111)
!4117 = distinct !DISubprogram(name: "ED_operator_sequencer_active", scope: !3, file: !3, line: 293, type: !3732, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4118 = !DILocalVariable(name: "C", arg: 1, scope: !4117, file: !3, line: 293, type: !3734)
!4119 = !DILocation(line: 293, column: 44, scope: !4117)
!4120 = !DILocation(line: 295, column: 27, scope: !4117)
!4121 = !DILocation(line: 295, column: 9, scope: !4117)
!4122 = !DILocation(line: 295, column: 2, scope: !4117)
!4123 = distinct !DISubprogram(name: "ED_operator_sequencer_active_editable", scope: !3, file: !3, line: 298, type: !3732, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4124 = !DILocalVariable(name: "C", arg: 1, scope: !4123, file: !3, line: 298, type: !3734)
!4125 = !DILocation(line: 298, column: 53, scope: !4123)
!4126 = !DILocation(line: 300, column: 27, scope: !4123)
!4127 = !DILocation(line: 300, column: 9, scope: !4123)
!4128 = !DILocation(line: 300, column: 41, scope: !4123)
!4129 = !DILocation(line: 300, column: 71, scope: !4123)
!4130 = !DILocation(line: 300, column: 44, scope: !4123)
!4131 = !DILocation(line: 0, scope: !4123)
!4132 = !DILocation(line: 300, column: 2, scope: !4123)
!4133 = distinct !DISubprogram(name: "ED_operator_image_active", scope: !3, file: !3, line: 303, type: !3732, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4134 = !DILocalVariable(name: "C", arg: 1, scope: !4133, file: !3, line: 303, type: !3734)
!4135 = !DILocation(line: 303, column: 40, scope: !4133)
!4136 = !DILocation(line: 305, column: 27, scope: !4133)
!4137 = !DILocation(line: 305, column: 9, scope: !4133)
!4138 = !DILocation(line: 305, column: 2, scope: !4133)
!4139 = distinct !DISubprogram(name: "ED_operator_nla_active", scope: !3, file: !3, line: 308, type: !3732, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4140 = !DILocalVariable(name: "C", arg: 1, scope: !4139, file: !3, line: 308, type: !3734)
!4141 = !DILocation(line: 308, column: 38, scope: !4139)
!4142 = !DILocation(line: 310, column: 27, scope: !4139)
!4143 = !DILocation(line: 310, column: 9, scope: !4139)
!4144 = !DILocation(line: 310, column: 2, scope: !4139)
!4145 = distinct !DISubprogram(name: "ED_operator_logic_active", scope: !3, file: !3, line: 313, type: !3732, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4146 = !DILocalVariable(name: "C", arg: 1, scope: !4145, file: !3, line: 313, type: !3734)
!4147 = !DILocation(line: 313, column: 40, scope: !4145)
!4148 = !DILocation(line: 315, column: 27, scope: !4145)
!4149 = !DILocation(line: 315, column: 9, scope: !4145)
!4150 = !DILocation(line: 315, column: 2, scope: !4145)
!4151 = distinct !DISubprogram(name: "ED_operator_info_active", scope: !3, file: !3, line: 318, type: !3732, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4152 = !DILocalVariable(name: "C", arg: 1, scope: !4151, file: !3, line: 318, type: !3734)
!4153 = !DILocation(line: 318, column: 39, scope: !4151)
!4154 = !DILocation(line: 320, column: 27, scope: !4151)
!4155 = !DILocation(line: 320, column: 9, scope: !4151)
!4156 = !DILocation(line: 320, column: 2, scope: !4151)
!4157 = distinct !DISubprogram(name: "ED_operator_console_active", scope: !3, file: !3, line: 324, type: !3732, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4158 = !DILocalVariable(name: "C", arg: 1, scope: !4157, file: !3, line: 324, type: !3734)
!4159 = !DILocation(line: 324, column: 42, scope: !4157)
!4160 = !DILocation(line: 326, column: 27, scope: !4157)
!4161 = !DILocation(line: 326, column: 9, scope: !4157)
!4162 = !DILocation(line: 326, column: 2, scope: !4157)
!4163 = distinct !DISubprogram(name: "ED_operator_object_active", scope: !3, file: !3, line: 335, type: !3732, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4164 = !DILocalVariable(name: "C", arg: 1, scope: !4163, file: !3, line: 335, type: !3734)
!4165 = !DILocation(line: 335, column: 41, scope: !4163)
!4166 = !DILocalVariable(name: "ob", scope: !4163, file: !3, line: 337, type: !3855)
!4167 = !DILocation(line: 337, column: 10, scope: !4163)
!4168 = !DILocation(line: 337, column: 40, scope: !4163)
!4169 = !DILocation(line: 337, column: 15, scope: !4163)
!4170 = !DILocation(line: 338, column: 11, scope: !4163)
!4171 = !DILocation(line: 338, column: 14, scope: !4163)
!4172 = !DILocation(line: 338, column: 23, scope: !4163)
!4173 = !DILocation(line: 338, column: 44, scope: !4163)
!4174 = !DILocation(line: 338, column: 27, scope: !4163)
!4175 = !DILocation(line: 338, column: 26, scope: !4163)
!4176 = !DILocation(line: 0, scope: !4163)
!4177 = !DILocation(line: 338, column: 2, scope: !4163)
!4178 = distinct !DISubprogram(name: "ed_object_hidden", scope: !3, file: !3, line: 329, type: !4179, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4179 = !DISubroutineType(types: !4180)
!4180 = !{!1242, !3855}
!4181 = !DILocalVariable(name: "ob", arg: 1, scope: !4178, file: !3, line: 329, type: !3855)
!4182 = !DILocation(line: 329, column: 37, scope: !4178)
!4183 = !DILocation(line: 332, column: 11, scope: !4178)
!4184 = !DILocation(line: 332, column: 15, scope: !4178)
!4185 = !DILocation(line: 332, column: 28, scope: !4178)
!4186 = !DILocation(line: 332, column: 48, scope: !4178)
!4187 = !DILocation(line: 332, column: 53, scope: !4178)
!4188 = !DILocation(line: 332, column: 57, scope: !4178)
!4189 = !DILocation(line: 332, column: 62, scope: !4178)
!4190 = !DILocation(line: 332, column: 51, scope: !4178)
!4191 = !DILocation(line: 0, scope: !4178)
!4192 = !DILocation(line: 332, column: 2, scope: !4178)
!4193 = distinct !DISubprogram(name: "ED_operator_object_active_editable", scope: !3, file: !3, line: 341, type: !3732, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4194 = !DILocalVariable(name: "C", arg: 1, scope: !4193, file: !3, line: 341, type: !3734)
!4195 = !DILocation(line: 341, column: 50, scope: !4193)
!4196 = !DILocalVariable(name: "ob", scope: !4193, file: !3, line: 343, type: !3855)
!4197 = !DILocation(line: 343, column: 10, scope: !4193)
!4198 = !DILocation(line: 343, column: 40, scope: !4193)
!4199 = !DILocation(line: 343, column: 15, scope: !4193)
!4200 = !DILocation(line: 344, column: 11, scope: !4193)
!4201 = !DILocation(line: 344, column: 14, scope: !4193)
!4202 = !DILocation(line: 344, column: 23, scope: !4193)
!4203 = !DILocation(line: 344, column: 28, scope: !4193)
!4204 = !DILocation(line: 344, column: 32, scope: !4193)
!4205 = !DILocation(line: 344, column: 35, scope: !4193)
!4206 = !DILocation(line: 344, column: 27, scope: !4193)
!4207 = !DILocation(line: 344, column: 40, scope: !4193)
!4208 = !DILocation(line: 344, column: 61, scope: !4193)
!4209 = !DILocation(line: 344, column: 44, scope: !4193)
!4210 = !DILocation(line: 344, column: 43, scope: !4193)
!4211 = !DILocation(line: 0, scope: !4193)
!4212 = !DILocation(line: 344, column: 2, scope: !4193)
!4213 = distinct !DISubprogram(name: "ED_operator_object_active_editable_mesh", scope: !3, file: !3, line: 347, type: !3732, scopeLine: 348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4214 = !DILocalVariable(name: "C", arg: 1, scope: !4213, file: !3, line: 347, type: !3734)
!4215 = !DILocation(line: 347, column: 55, scope: !4213)
!4216 = !DILocalVariable(name: "ob", scope: !4213, file: !3, line: 349, type: !3855)
!4217 = !DILocation(line: 349, column: 10, scope: !4213)
!4218 = !DILocation(line: 349, column: 40, scope: !4213)
!4219 = !DILocation(line: 349, column: 15, scope: !4213)
!4220 = !DILocation(line: 350, column: 11, scope: !4213)
!4221 = !DILocation(line: 350, column: 14, scope: !4213)
!4222 = !DILocation(line: 350, column: 23, scope: !4213)
!4223 = !DILocation(line: 350, column: 28, scope: !4213)
!4224 = !DILocation(line: 350, column: 32, scope: !4213)
!4225 = !DILocation(line: 350, column: 35, scope: !4213)
!4226 = !DILocation(line: 350, column: 27, scope: !4213)
!4227 = !DILocation(line: 350, column: 40, scope: !4213)
!4228 = !DILocation(line: 350, column: 61, scope: !4213)
!4229 = !DILocation(line: 350, column: 44, scope: !4213)
!4230 = !DILocation(line: 350, column: 65, scope: !4213)
!4231 = !DILocation(line: 351, column: 11, scope: !4213)
!4232 = !DILocation(line: 351, column: 15, scope: !4213)
!4233 = !DILocation(line: 351, column: 20, scope: !4213)
!4234 = !DILocation(line: 351, column: 32, scope: !4213)
!4235 = !DILocation(line: 351, column: 44, scope: !4213)
!4236 = !DILocation(line: 351, column: 48, scope: !4213)
!4237 = !DILocation(line: 351, column: 38, scope: !4213)
!4238 = !DILocation(line: 351, column: 55, scope: !4213)
!4239 = !DILocation(line: 351, column: 35, scope: !4213)
!4240 = !DILocation(line: 0, scope: !4213)
!4241 = !DILocation(line: 350, column: 2, scope: !4213)
!4242 = distinct !DISubprogram(name: "ED_operator_object_active_editable_font", scope: !3, file: !3, line: 354, type: !3732, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4243 = !DILocalVariable(name: "C", arg: 1, scope: !4242, file: !3, line: 354, type: !3734)
!4244 = !DILocation(line: 354, column: 55, scope: !4242)
!4245 = !DILocalVariable(name: "ob", scope: !4242, file: !3, line: 356, type: !3855)
!4246 = !DILocation(line: 356, column: 10, scope: !4242)
!4247 = !DILocation(line: 356, column: 40, scope: !4242)
!4248 = !DILocation(line: 356, column: 15, scope: !4242)
!4249 = !DILocation(line: 357, column: 11, scope: !4242)
!4250 = !DILocation(line: 357, column: 14, scope: !4242)
!4251 = !DILocation(line: 357, column: 23, scope: !4242)
!4252 = !DILocation(line: 357, column: 28, scope: !4242)
!4253 = !DILocation(line: 357, column: 32, scope: !4242)
!4254 = !DILocation(line: 357, column: 35, scope: !4242)
!4255 = !DILocation(line: 357, column: 27, scope: !4242)
!4256 = !DILocation(line: 357, column: 40, scope: !4242)
!4257 = !DILocation(line: 357, column: 61, scope: !4242)
!4258 = !DILocation(line: 357, column: 44, scope: !4242)
!4259 = !DILocation(line: 357, column: 65, scope: !4242)
!4260 = !DILocation(line: 358, column: 11, scope: !4242)
!4261 = !DILocation(line: 358, column: 15, scope: !4242)
!4262 = !DILocation(line: 358, column: 20, scope: !4242)
!4263 = !DILocation(line: 0, scope: !4242)
!4264 = !DILocation(line: 357, column: 2, scope: !4242)
!4265 = distinct !DISubprogram(name: "ED_operator_editmesh", scope: !3, file: !3, line: 361, type: !3732, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4266 = !DILocalVariable(name: "C", arg: 1, scope: !4265, file: !3, line: 361, type: !3734)
!4267 = !DILocation(line: 361, column: 36, scope: !4265)
!4268 = !DILocalVariable(name: "obedit", scope: !4265, file: !3, line: 363, type: !3855)
!4269 = !DILocation(line: 363, column: 10, scope: !4265)
!4270 = !DILocation(line: 363, column: 40, scope: !4265)
!4271 = !DILocation(line: 363, column: 19, scope: !4265)
!4272 = !DILocation(line: 364, column: 6, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 364, column: 6)
!4274 = !DILocation(line: 364, column: 13, scope: !4273)
!4275 = !DILocation(line: 364, column: 16, scope: !4273)
!4276 = !DILocation(line: 364, column: 24, scope: !4273)
!4277 = !DILocation(line: 364, column: 29, scope: !4273)
!4278 = !DILocation(line: 364, column: 6, scope: !4265)
!4279 = !DILocation(line: 365, column: 43, scope: !4273)
!4280 = !DILocation(line: 365, column: 18, scope: !4273)
!4281 = !DILocation(line: 365, column: 15, scope: !4273)
!4282 = !DILocation(line: 365, column: 3, scope: !4273)
!4283 = !DILocation(line: 366, column: 2, scope: !4265)
!4284 = !DILocation(line: 367, column: 1, scope: !4265)
!4285 = distinct !DISubprogram(name: "ED_operator_editmesh_view3d", scope: !3, file: !3, line: 369, type: !3732, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4286 = !DILocalVariable(name: "C", arg: 1, scope: !4285, file: !3, line: 369, type: !3734)
!4287 = !DILocation(line: 369, column: 43, scope: !4285)
!4288 = !DILocation(line: 371, column: 30, scope: !4285)
!4289 = !DILocation(line: 371, column: 9, scope: !4285)
!4290 = !DILocation(line: 371, column: 33, scope: !4285)
!4291 = !DILocation(line: 371, column: 62, scope: !4285)
!4292 = !DILocation(line: 371, column: 36, scope: !4285)
!4293 = !DILocation(line: 0, scope: !4285)
!4294 = !DILocation(line: 371, column: 2, scope: !4285)
!4295 = distinct !DISubprogram(name: "ED_operator_editmesh_region_view3d", scope: !3, file: !3, line: 374, type: !3732, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4296 = !DILocalVariable(name: "C", arg: 1, scope: !4295, file: !3, line: 374, type: !3734)
!4297 = !DILocation(line: 374, column: 50, scope: !4295)
!4298 = !DILocation(line: 376, column: 27, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 376, column: 6)
!4300 = !DILocation(line: 376, column: 6, scope: !4299)
!4301 = !DILocation(line: 376, column: 30, scope: !4299)
!4302 = !DILocation(line: 376, column: 54, scope: !4299)
!4303 = !DILocation(line: 376, column: 33, scope: !4299)
!4304 = !DILocation(line: 376, column: 6, scope: !4295)
!4305 = !DILocation(line: 377, column: 3, scope: !4299)
!4306 = !DILocation(line: 379, column: 31, scope: !4295)
!4307 = !DILocation(line: 379, column: 2, scope: !4295)
!4308 = !DILocation(line: 380, column: 2, scope: !4295)
!4309 = !DILocation(line: 381, column: 1, scope: !4295)
!4310 = distinct !DISubprogram(name: "ED_operator_editarmature", scope: !3, file: !3, line: 383, type: !3732, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4311 = !DILocalVariable(name: "C", arg: 1, scope: !4310, file: !3, line: 383, type: !3734)
!4312 = !DILocation(line: 383, column: 40, scope: !4310)
!4313 = !DILocalVariable(name: "obedit", scope: !4310, file: !3, line: 385, type: !3855)
!4314 = !DILocation(line: 385, column: 10, scope: !4310)
!4315 = !DILocation(line: 385, column: 40, scope: !4310)
!4316 = !DILocation(line: 385, column: 19, scope: !4310)
!4317 = !DILocation(line: 386, column: 6, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 386, column: 6)
!4319 = !DILocation(line: 386, column: 13, scope: !4318)
!4320 = !DILocation(line: 386, column: 16, scope: !4318)
!4321 = !DILocation(line: 386, column: 24, scope: !4318)
!4322 = !DILocation(line: 386, column: 29, scope: !4318)
!4323 = !DILocation(line: 386, column: 6, scope: !4310)
!4324 = !DILocation(line: 387, column: 32, scope: !4318)
!4325 = !DILocation(line: 387, column: 40, scope: !4318)
!4326 = !DILocation(line: 387, column: 19, scope: !4318)
!4327 = !DILocation(line: 387, column: 47, scope: !4318)
!4328 = !DILocation(line: 387, column: 15, scope: !4318)
!4329 = !DILocation(line: 387, column: 3, scope: !4318)
!4330 = !DILocation(line: 388, column: 2, scope: !4310)
!4331 = !DILocation(line: 389, column: 1, scope: !4310)
!4332 = distinct !DISubprogram(name: "ED_operator_posemode_exclusive", scope: !3, file: !3, line: 398, type: !3732, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4333 = !DILocalVariable(name: "C", arg: 1, scope: !4332, file: !3, line: 398, type: !3734)
!4334 = !DILocation(line: 398, column: 46, scope: !4332)
!4335 = !DILocalVariable(name: "obact", scope: !4332, file: !3, line: 400, type: !3855)
!4336 = !DILocation(line: 400, column: 10, scope: !4332)
!4337 = !DILocation(line: 400, column: 41, scope: !4332)
!4338 = !DILocation(line: 400, column: 18, scope: !4332)
!4339 = !DILocation(line: 402, column: 6, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 402, column: 6)
!4341 = !DILocation(line: 402, column: 12, scope: !4340)
!4342 = !DILocation(line: 402, column: 17, scope: !4340)
!4343 = !DILocation(line: 402, column: 24, scope: !4340)
!4344 = !DILocation(line: 402, column: 29, scope: !4340)
!4345 = !DILocation(line: 402, column: 6, scope: !4332)
!4346 = !DILocalVariable(name: "obpose", scope: !4347, file: !3, line: 403, type: !3855)
!4347 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 402, column: 46)
!4348 = !DILocation(line: 403, column: 11, scope: !4347)
!4349 = !DILocation(line: 404, column: 46, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 404, column: 7)
!4351 = !DILocation(line: 404, column: 17, scope: !4350)
!4352 = !DILocation(line: 404, column: 15, scope: !4350)
!4353 = !DILocation(line: 404, column: 7, scope: !4347)
!4354 = !DILocation(line: 405, column: 8, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 405, column: 8)
!4356 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 404, column: 55)
!4357 = !DILocation(line: 405, column: 17, scope: !4355)
!4358 = !DILocation(line: 405, column: 14, scope: !4355)
!4359 = !DILocation(line: 405, column: 8, scope: !4356)
!4360 = !DILocation(line: 406, column: 5, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4355, file: !3, line: 405, column: 25)
!4362 = !DILocation(line: 408, column: 3, scope: !4356)
!4363 = !DILocation(line: 409, column: 2, scope: !4347)
!4364 = !DILocation(line: 411, column: 2, scope: !4332)
!4365 = !DILocation(line: 412, column: 1, scope: !4332)
!4366 = distinct !DISubprogram(name: "ED_operator_posemode_context", scope: !3, file: !3, line: 416, type: !3732, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4367 = !DILocalVariable(name: "C", arg: 1, scope: !4366, file: !3, line: 416, type: !3734)
!4368 = !DILocation(line: 416, column: 44, scope: !4366)
!4369 = !DILocalVariable(name: "obpose", scope: !4366, file: !3, line: 418, type: !3855)
!4370 = !DILocation(line: 418, column: 10, scope: !4366)
!4371 = !DILocation(line: 418, column: 47, scope: !4366)
!4372 = !DILocation(line: 418, column: 19, scope: !4366)
!4373 = !DILocation(line: 420, column: 6, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 420, column: 6)
!4375 = !DILocation(line: 420, column: 13, scope: !4374)
!4376 = !DILocation(line: 420, column: 18, scope: !4374)
!4377 = !DILocation(line: 420, column: 26, scope: !4374)
!4378 = !DILocation(line: 420, column: 31, scope: !4374)
!4379 = !DILocation(line: 420, column: 6, scope: !4366)
!4380 = !DILocation(line: 421, column: 37, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 421, column: 7)
!4382 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 420, column: 48)
!4383 = !DILocation(line: 421, column: 7, scope: !4381)
!4384 = !DILocation(line: 421, column: 7, scope: !4382)
!4385 = !DILocation(line: 422, column: 4, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 421, column: 46)
!4387 = !DILocation(line: 424, column: 2, scope: !4382)
!4388 = !DILocation(line: 426, column: 2, scope: !4366)
!4389 = !DILocation(line: 427, column: 1, scope: !4366)
!4390 = distinct !DISubprogram(name: "ED_operator_posemode", scope: !3, file: !3, line: 429, type: !3732, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4391 = !DILocalVariable(name: "C", arg: 1, scope: !4390, file: !3, line: 429, type: !3734)
!4392 = !DILocation(line: 429, column: 36, scope: !4390)
!4393 = !DILocalVariable(name: "obact", scope: !4390, file: !3, line: 431, type: !3855)
!4394 = !DILocation(line: 431, column: 10, scope: !4390)
!4395 = !DILocation(line: 431, column: 41, scope: !4390)
!4396 = !DILocation(line: 431, column: 18, scope: !4390)
!4397 = !DILocation(line: 433, column: 6, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4390, file: !3, line: 433, column: 6)
!4399 = !DILocation(line: 433, column: 12, scope: !4398)
!4400 = !DILocation(line: 433, column: 17, scope: !4398)
!4401 = !DILocation(line: 433, column: 24, scope: !4398)
!4402 = !DILocation(line: 433, column: 29, scope: !4398)
!4403 = !DILocation(line: 433, column: 6, scope: !4390)
!4404 = !DILocalVariable(name: "obpose", scope: !4405, file: !3, line: 434, type: !3855)
!4405 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 433, column: 46)
!4406 = !DILocation(line: 434, column: 11, scope: !4405)
!4407 = !DILocation(line: 435, column: 46, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 435, column: 7)
!4409 = !DILocation(line: 435, column: 17, scope: !4408)
!4410 = !DILocation(line: 435, column: 15, scope: !4408)
!4411 = !DILocation(line: 435, column: 7, scope: !4405)
!4412 = !DILocation(line: 436, column: 9, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 436, column: 8)
!4414 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 435, column: 55)
!4415 = !DILocation(line: 436, column: 18, scope: !4413)
!4416 = !DILocation(line: 436, column: 15, scope: !4413)
!4417 = !DILocation(line: 436, column: 26, scope: !4413)
!4418 = !DILocation(line: 436, column: 30, scope: !4413)
!4419 = !DILocation(line: 436, column: 37, scope: !4413)
!4420 = !DILocation(line: 436, column: 42, scope: !4413)
!4421 = !DILocation(line: 436, column: 8, scope: !4414)
!4422 = !DILocation(line: 437, column: 5, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 436, column: 67)
!4424 = !DILocation(line: 439, column: 3, scope: !4414)
!4425 = !DILocation(line: 440, column: 2, scope: !4405)
!4426 = !DILocation(line: 442, column: 2, scope: !4390)
!4427 = !DILocation(line: 443, column: 1, scope: !4390)
!4428 = distinct !DISubprogram(name: "ED_operator_uvedit", scope: !3, file: !3, line: 446, type: !3732, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4429 = !DILocalVariable(name: "C", arg: 1, scope: !4428, file: !3, line: 446, type: !3734)
!4430 = !DILocation(line: 446, column: 34, scope: !4428)
!4431 = !DILocalVariable(name: "sima", scope: !4428, file: !3, line: 448, type: !4432)
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 64)
!4433 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceImage", file: !18, line: 743, baseType: !4434)
!4434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceImage", file: !18, line: 710, size: 84672, elements: !4435)
!4435 = !{!4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502}
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4434, file: !18, line: 711, baseType: !1391, size: 64)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4434, file: !18, line: 711, baseType: !1391, size: 64, offset: 64)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4434, file: !18, line: 712, baseType: !1399, size: 128, offset: 128)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4434, file: !18, line: 713, baseType: !1242, size: 32, offset: 256)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4434, file: !18, line: 715, baseType: !1242, size: 32, offset: 288)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !4434, file: !18, line: 717, baseType: !2248, size: 64, offset: 320)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !4434, file: !18, line: 718, baseType: !1853, size: 320, offset: 384)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "cumap", scope: !4434, file: !18, line: 720, baseType: !2655, size: 64, offset: 704)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !4434, file: !18, line: 722, baseType: !4445, size: 42112, offset: 768)
!4445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scopes", file: !2072, line: 138, size: 42112, elements: !4446)
!4446 = !{!4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4460, !4479, !4480, !4481, !4482, !4483, !4484}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !4445, file: !2072, line: 139, baseType: !1242, size: 32)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "sample_full", scope: !4445, file: !2072, line: 140, baseType: !1242, size: 32, offset: 32)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "sample_lines", scope: !4445, file: !2072, line: 141, baseType: !1242, size: 32, offset: 64)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !4445, file: !2072, line: 142, baseType: !1407, size: 32, offset: 96)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_mode", scope: !4445, file: !2072, line: 143, baseType: !1242, size: 32, offset: 128)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_alpha", scope: !4445, file: !2072, line: 144, baseType: !1407, size: 32, offset: 160)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_yfac", scope: !4445, file: !2072, line: 145, baseType: !1407, size: 32, offset: 192)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_height", scope: !4445, file: !2072, line: 146, baseType: !1242, size: 32, offset: 224)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_alpha", scope: !4445, file: !2072, line: 147, baseType: !1407, size: 32, offset: 256)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_height", scope: !4445, file: !2072, line: 148, baseType: !1242, size: 32, offset: 288)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "minmax", scope: !4445, file: !2072, line: 149, baseType: !4458, size: 192, offset: 320)
!4458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 192, elements: !4459)
!4459 = !{!1504, !1848}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !4445, file: !2072, line: 150, baseType: !4461, size: 41280, offset: 512)
!4461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Histogram", file: !2072, line: 118, size: 41280, elements: !4462)
!4462 = !{!4463, !4464, !4465, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !4461, file: !2072, line: 119, baseType: !1242, size: 32)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !4461, file: !2072, line: 120, baseType: !1242, size: 32, offset: 32)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "data_luma", scope: !4461, file: !2072, line: 121, baseType: !4466, size: 8192, offset: 64)
!4466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 8192, elements: !2022)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !4461, file: !2072, line: 122, baseType: !4466, size: 8192, offset: 8256)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !4461, file: !2072, line: 123, baseType: !4466, size: 8192, offset: 16448)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !4461, file: !2072, line: 124, baseType: !4466, size: 8192, offset: 24640)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "data_a", scope: !4461, file: !2072, line: 125, baseType: !4466, size: 8192, offset: 32832)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !4461, file: !2072, line: 126, baseType: !1407, size: 32, offset: 41024)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !4461, file: !2072, line: 126, baseType: !1407, size: 32, offset: 41056)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4461, file: !2072, line: 127, baseType: !1410, size: 16, offset: 41088)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4461, file: !2072, line: 128, baseType: !1410, size: 16, offset: 41104)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4461, file: !2072, line: 129, baseType: !1242, size: 32, offset: 41120)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4461, file: !2072, line: 133, baseType: !4477, size: 128, offset: 41152)
!4477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 128, elements: !4478)
!4478 = !{!1848, !1848}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_1", scope: !4445, file: !2072, line: 151, baseType: !3241, size: 64, offset: 41792)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_2", scope: !4445, file: !2072, line: 152, baseType: !3241, size: 64, offset: 41856)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_3", scope: !4445, file: !2072, line: 153, baseType: !3241, size: 64, offset: 41920)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope", scope: !4445, file: !2072, line: 154, baseType: !3241, size: 64, offset: 41984)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_tot", scope: !4445, file: !2072, line: 155, baseType: !1242, size: 32, offset: 42048)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4445, file: !2072, line: 156, baseType: !1242, size: 32, offset: 42080)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "sample_line_hist", scope: !4434, file: !18, line: 723, baseType: !4461, size: 41280, offset: 42880)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !4434, file: !18, line: 725, baseType: !1690, size: 64, offset: 84160)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4434, file: !18, line: 727, baseType: !1846, size: 64, offset: 84224)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !4434, file: !18, line: 728, baseType: !1407, size: 32, offset: 84288)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !4434, file: !18, line: 728, baseType: !1407, size: 32, offset: 84320)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !4434, file: !18, line: 729, baseType: !1407, size: 32, offset: 84352)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "centx", scope: !4434, file: !18, line: 730, baseType: !1407, size: 32, offset: 84384)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "centy", scope: !4434, file: !18, line: 730, baseType: !1407, size: 32, offset: 84416)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4434, file: !18, line: 732, baseType: !1433, size: 8, offset: 84448)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4434, file: !18, line: 733, baseType: !1433, size: 8, offset: 84456)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4434, file: !18, line: 734, baseType: !1410, size: 16, offset: 84464)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "curtile", scope: !4434, file: !18, line: 735, baseType: !1410, size: 16, offset: 84480)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4434, file: !18, line: 736, baseType: !1410, size: 16, offset: 84496)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uv", scope: !4434, file: !18, line: 737, baseType: !1433, size: 8, offset: 84512)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "sticky", scope: !4434, file: !18, line: 738, baseType: !1433, size: 8, offset: 84520)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uvstretch", scope: !4434, file: !18, line: 739, baseType: !1433, size: 8, offset: 84528)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4434, file: !18, line: 740, baseType: !1433, size: 8, offset: 84536)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !4434, file: !18, line: 742, baseType: !4503, size: 128, offset: 84544)
!4503 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpaceInfo", file: !18, line: 554, baseType: !4504)
!4504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpaceInfo", file: !18, line: 545, size: 128, elements: !4505)
!4505 = !{!4506, !4507, !4508, !4509, !4510}
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4504, file: !18, line: 548, baseType: !2357, size: 64)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "draw_flag", scope: !4504, file: !18, line: 550, baseType: !1433, size: 8, offset: 64)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "draw_type", scope: !4504, file: !18, line: 551, baseType: !1433, size: 8, offset: 72)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_mode", scope: !4504, file: !18, line: 552, baseType: !1433, size: 8, offset: 80)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !4504, file: !18, line: 553, baseType: !2472, size: 40, offset: 88)
!4511 = !DILocation(line: 448, column: 14, scope: !4428)
!4512 = !DILocation(line: 448, column: 40, scope: !4428)
!4513 = !DILocation(line: 448, column: 21, scope: !4428)
!4514 = !DILocalVariable(name: "obedit", scope: !4428, file: !3, line: 449, type: !3855)
!4515 = !DILocation(line: 449, column: 10, scope: !4428)
!4516 = !DILocation(line: 449, column: 40, scope: !4428)
!4517 = !DILocation(line: 449, column: 19, scope: !4428)
!4518 = !DILocation(line: 450, column: 36, scope: !4428)
!4519 = !DILocation(line: 450, column: 42, scope: !4428)
!4520 = !DILocation(line: 450, column: 9, scope: !4428)
!4521 = !DILocation(line: 450, column: 2, scope: !4428)
!4522 = distinct !DISubprogram(name: "ED_operator_uvedit_space_image", scope: !3, file: !3, line: 453, type: !3732, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4523 = !DILocalVariable(name: "C", arg: 1, scope: !4522, file: !3, line: 453, type: !3734)
!4524 = !DILocation(line: 453, column: 46, scope: !4522)
!4525 = !DILocalVariable(name: "sima", scope: !4522, file: !3, line: 455, type: !4432)
!4526 = !DILocation(line: 455, column: 14, scope: !4522)
!4527 = !DILocation(line: 455, column: 40, scope: !4522)
!4528 = !DILocation(line: 455, column: 21, scope: !4522)
!4529 = !DILocalVariable(name: "obedit", scope: !4522, file: !3, line: 456, type: !3855)
!4530 = !DILocation(line: 456, column: 10, scope: !4522)
!4531 = !DILocation(line: 456, column: 40, scope: !4522)
!4532 = !DILocation(line: 456, column: 19, scope: !4522)
!4533 = !DILocation(line: 457, column: 9, scope: !4522)
!4534 = !DILocation(line: 457, column: 14, scope: !4522)
!4535 = !DILocation(line: 457, column: 44, scope: !4522)
!4536 = !DILocation(line: 457, column: 50, scope: !4522)
!4537 = !DILocation(line: 457, column: 17, scope: !4522)
!4538 = !DILocation(line: 0, scope: !4522)
!4539 = !DILocation(line: 457, column: 2, scope: !4522)
!4540 = distinct !DISubprogram(name: "ED_operator_uvmap", scope: !3, file: !3, line: 460, type: !3732, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4541 = !DILocalVariable(name: "C", arg: 1, scope: !4540, file: !3, line: 460, type: !3734)
!4542 = !DILocation(line: 460, column: 33, scope: !4540)
!4543 = !DILocalVariable(name: "obedit", scope: !4540, file: !3, line: 462, type: !3855)
!4544 = !DILocation(line: 462, column: 10, scope: !4540)
!4545 = !DILocation(line: 462, column: 40, scope: !4540)
!4546 = !DILocation(line: 462, column: 19, scope: !4540)
!4547 = !DILocalVariable(name: "em", scope: !4540, file: !3, line: 463, type: !4548)
!4548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4549, size: 64)
!4549 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !4550, line: 83, baseType: !4551)
!4550 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !4550, line: 54, size: 896, elements: !4552)
!4552 = !{!4553, !4745, !4747, !4748, !4751, !4752, !4753, !4754, !4757, !4759, !4760, !4761, !4762, !4763, !4764, !4765}
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !4551, file: !4550, line: 55, baseType: !4554, size: 64)
!4554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4555, size: 64)
!4555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !4556, line: 186, size: 8064, elements: !4557)
!4556 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4557 = !{!4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4571, !4572, !4573, !4574, !4635, !4639, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4701, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !4555, file: !4556, line: 187, baseType: !1242, size: 32)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !4555, file: !4556, line: 187, baseType: !1242, size: 32, offset: 32)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !4555, file: !4556, line: 187, baseType: !1242, size: 32, offset: 64)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !4555, file: !4556, line: 187, baseType: !1242, size: 32, offset: 96)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !4555, file: !4556, line: 188, baseType: !1242, size: 32, offset: 128)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !4555, file: !4556, line: 188, baseType: !1242, size: 32, offset: 160)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !4555, file: !4556, line: 188, baseType: !1242, size: 32, offset: 192)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !4555, file: !4556, line: 193, baseType: !1433, size: 8, offset: 224)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !4555, file: !4556, line: 197, baseType: !1433, size: 8, offset: 232)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !4555, file: !4556, line: 201, baseType: !4568, size: 64, offset: 256)
!4568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4569, size: 64)
!4569 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !4570, line: 71, flags: DIFlagFwdDecl)
!4570 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !4555, file: !4556, line: 201, baseType: !4568, size: 64, offset: 320)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !4555, file: !4556, line: 201, baseType: !4568, size: 64, offset: 384)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !4555, file: !4556, line: 201, baseType: !4568, size: 64, offset: 448)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4555, file: !4556, line: 208, baseType: !4575, size: 64, offset: 512)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4577, size: 64)
!4577 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !4556, line: 103, baseType: !4578)
!4578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !4556, line: 90, size: 448, elements: !4579)
!4579 = !{!4580, !4589, !4594, !4595, !4596}
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4578, file: !4556, line: 91, baseType: !4581, size: 128)
!4581 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !4556, line: 82, baseType: !4582)
!4582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !4556, line: 64, size: 128, elements: !4583)
!4583 = !{!4584, !4585, !4586, !4587, !4588}
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4582, file: !4556, line: 65, baseType: !1390, size: 64)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4582, file: !4556, line: 66, baseType: !1242, size: 32, offset: 64)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !4582, file: !4556, line: 73, baseType: !1433, size: 8, offset: 96)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !4582, file: !4556, line: 74, baseType: !1433, size: 8, offset: 104)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !4582, file: !4556, line: 80, baseType: !1433, size: 8, offset: 112)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !4578, file: !4556, line: 92, baseType: !4590, size: 64, offset: 128)
!4590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4591, size: 64)
!4591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !4556, line: 180, size: 16, elements: !4592)
!4592 = !{!4593}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !4591, file: !4556, line: 181, baseType: !1410, size: 16)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4578, file: !4556, line: 94, baseType: !1502, size: 96, offset: 192)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !4578, file: !4556, line: 95, baseType: !1502, size: 96, offset: 288)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !4578, file: !4556, line: 102, baseType: !4597, size: 64, offset: 384)
!4597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4598, size: 64)
!4598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !4556, line: 110, size: 640, elements: !4599)
!4599 = !{!4600, !4601, !4602, !4604, !4605, !4628, !4634}
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4598, file: !4556, line: 111, baseType: !4581, size: 128)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !4598, file: !4556, line: 112, baseType: !4590, size: 64, offset: 128)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4598, file: !4556, line: 114, baseType: !4603, size: 64, offset: 192)
!4603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4578, size: 64)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4598, file: !4556, line: 114, baseType: !4603, size: 64, offset: 256)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4598, file: !4556, line: 118, baseType: !4606, size: 64, offset: 320)
!4606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4607, size: 64)
!4607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !4556, line: 125, size: 576, elements: !4608)
!4608 = !{!4609, !4610, !4611, !4612, !4624, !4625, !4626, !4627}
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4607, file: !4556, line: 126, baseType: !4581, size: 128)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !4607, file: !4556, line: 129, baseType: !4603, size: 64, offset: 128)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !4607, file: !4556, line: 130, baseType: !4597, size: 64, offset: 192)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !4607, file: !4556, line: 131, baseType: !4613, size: 64, offset: 256)
!4613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4614, size: 64)
!4614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !4556, line: 164, size: 448, elements: !4615)
!4615 = !{!4616, !4617, !4618, !4621, !4622, !4623}
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4614, file: !4556, line: 165, baseType: !4581, size: 128)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !4614, file: !4556, line: 166, baseType: !4590, size: 64, offset: 128)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4614, file: !4556, line: 172, baseType: !4619, size: 64, offset: 192)
!4619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4620, size: 64)
!4620 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !4556, line: 140, baseType: !4607)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4614, file: !4556, line: 174, baseType: !1242, size: 32, offset: 256)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !4614, file: !4556, line: 175, baseType: !1502, size: 96, offset: 288)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !4614, file: !4556, line: 176, baseType: !1410, size: 16, offset: 384)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !4607, file: !4556, line: 135, baseType: !4606, size: 64, offset: 320)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !4607, file: !4556, line: 135, baseType: !4606, size: 64, offset: 384)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4607, file: !4556, line: 139, baseType: !4606, size: 64, offset: 448)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4607, file: !4556, line: 139, baseType: !4606, size: 64, offset: 512)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !4598, file: !4556, line: 122, baseType: !4629, size: 128, offset: 384)
!4629 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !4556, line: 108, baseType: !4630)
!4630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !4556, line: 106, size: 128, elements: !4631)
!4631 = !{!4632, !4633}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4630, file: !4556, line: 107, baseType: !4597, size: 64)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4630, file: !4556, line: 107, baseType: !4597, size: 64, offset: 64)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !4598, file: !4556, line: 122, baseType: !4629, size: 128, offset: 512)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !4555, file: !4556, line: 209, baseType: !4636, size: 64, offset: 576)
!4636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4637, size: 64)
!4637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4638, size: 64)
!4638 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !4556, line: 123, baseType: !4598)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !4555, file: !4556, line: 210, baseType: !4640, size: 64, offset: 640)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 64)
!4641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 64)
!4642 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !4556, line: 178, baseType: !4614)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !4555, file: !4556, line: 213, baseType: !1242, size: 32, offset: 704)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !4555, file: !4556, line: 214, baseType: !1242, size: 32, offset: 736)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !4555, file: !4556, line: 215, baseType: !1242, size: 32, offset: 768)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !4555, file: !4556, line: 218, baseType: !4568, size: 64, offset: 832)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !4555, file: !4556, line: 218, baseType: !4568, size: 64, offset: 896)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !4555, file: !4556, line: 218, baseType: !4568, size: 64, offset: 960)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !4555, file: !4556, line: 220, baseType: !1242, size: 32, offset: 1024)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !4555, file: !4556, line: 221, baseType: !4651, size: 64, offset: 1088)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !56, line: 190, size: 10496, elements: !4653)
!4653 = !{!4654, !4687, !4688, !4694, !4697, !4698, !4700}
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !4652, file: !56, line: 191, baseType: !4655, size: 5120)
!4655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4656, size: 5120, elements: !4685)
!4656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !56, line: 147, size: 320, elements: !4657)
!4657 = !{!4658, !4659, !4661, !4671, !4672}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !4656, file: !56, line: 148, baseType: !3384, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !4656, file: !56, line: 149, baseType: !4660, size: 32, offset: 64)
!4660 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !56, line: 112, baseType: !55)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !4656, file: !56, line: 150, baseType: !4662, size: 32, offset: 96)
!4662 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !56, line: 142, baseType: !4663)
!4663 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !56, line: 138, size: 32, elements: !4664)
!4664 = !{!4665, !4667, !4669}
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4663, file: !56, line: 139, baseType: !4666, size: 32)
!4666 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !56, line: 122, baseType: !66)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4663, file: !56, line: 140, baseType: !4668, size: 32)
!4668 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !56, line: 136, baseType: !72)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4663, file: !56, line: 141, baseType: !4670, size: 32)
!4670 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !56, line: 130, baseType: !78)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4656, file: !56, line: 152, baseType: !1242, size: 32, offset: 128)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4656, file: !56, line: 162, baseType: !4673, size: 128, offset: 192)
!4673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4656, file: !56, line: 155, size: 128, elements: !4674)
!4674 = !{!4675, !4676, !4677, !4678, !4679, !4681}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !4673, file: !56, line: 156, baseType: !1242, size: 32)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !4673, file: !56, line: 157, baseType: !1407, size: 32)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4673, file: !56, line: 158, baseType: !1390, size: 64)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4673, file: !56, line: 159, baseType: !1502, size: 96)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4673, file: !56, line: 160, baseType: !4680, size: 64)
!4680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !4673, file: !56, line: 161, baseType: !4682, size: 64)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !4684, line: 48, baseType: !1605)
!4684 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4685 = !{!4686}
!4686 = !DISubrange(count: 16)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !4652, file: !56, line: 192, baseType: !4655, size: 5120, offset: 5120)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !4652, file: !56, line: 193, baseType: !4689, size: 64, offset: 10240)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{null, !4692, !4651}
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4693, size: 64)
!4693 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !4556, line: 246, baseType: !4555)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !4652, file: !56, line: 194, baseType: !4695, size: 64, offset: 10304)
!4695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!4696 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !56, line: 194, flags: DIFlagFwdDecl)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4652, file: !56, line: 195, baseType: !1242, size: 32, offset: 10368)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !4652, file: !56, line: 196, baseType: !4699, size: 32, offset: 10400)
!4699 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !56, line: 188, baseType: !86)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4652, file: !56, line: 197, baseType: !1242, size: 32, offset: 10432)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4555, file: !4556, line: 223, baseType: !4702, size: 1600, offset: 1152)
!4702 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !4570, line: 73, baseType: !4703)
!4703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !4570, line: 64, size: 1600, elements: !4704)
!4704 = !{!4705, !4720, !4724, !4725, !4726, !4727, !4728}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !4703, file: !4570, line: 65, baseType: !4706, size: 64)
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4707, size: 64)
!4707 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !4570, line: 53, baseType: !4708)
!4708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !4570, line: 42, size: 832, elements: !4709)
!4709 = !{!4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4708, file: !4570, line: 43, baseType: !1242, size: 32)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4708, file: !4570, line: 44, baseType: !1242, size: 32, offset: 32)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4708, file: !4570, line: 45, baseType: !1242, size: 32, offset: 64)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4708, file: !4570, line: 46, baseType: !1242, size: 32, offset: 96)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !4708, file: !4570, line: 47, baseType: !1242, size: 32, offset: 128)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !4708, file: !4570, line: 48, baseType: !1242, size: 32, offset: 160)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !4708, file: !4570, line: 49, baseType: !1242, size: 32, offset: 192)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4708, file: !4570, line: 50, baseType: !1242, size: 32, offset: 224)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4708, file: !4570, line: 51, baseType: !1461, size: 512, offset: 256)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4708, file: !4570, line: 52, baseType: !1390, size: 64, offset: 768)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !4703, file: !4570, line: 66, baseType: !4721, size: 1312, offset: 64)
!4721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1242, size: 1312, elements: !4722)
!4722 = !{!4723}
!4723 = !DISubrange(count: 41)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !4703, file: !4570, line: 69, baseType: !1242, size: 32, offset: 1376)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !4703, file: !4570, line: 69, baseType: !1242, size: 32, offset: 1408)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !4703, file: !4570, line: 70, baseType: !1242, size: 32, offset: 1440)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !4703, file: !4570, line: 71, baseType: !4568, size: 64, offset: 1472)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !4703, file: !4570, line: 72, baseType: !4729, size: 64, offset: 1536)
!4729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4730, size: 64)
!4730 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !4570, line: 59, baseType: !4731)
!4731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !4570, line: 57, size: 8192, elements: !4732)
!4732 = !{!4733}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !4731, file: !4570, line: 58, baseType: !1432, size: 8192)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !4555, file: !4556, line: 223, baseType: !4702, size: 1600, offset: 2752)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !4555, file: !4556, line: 223, baseType: !4702, size: 1600, offset: 4352)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !4555, file: !4556, line: 223, baseType: !4702, size: 1600, offset: 5952)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !4555, file: !4556, line: 233, baseType: !1410, size: 16, offset: 7552)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !4555, file: !4556, line: 236, baseType: !1242, size: 32, offset: 7584)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !4555, file: !4556, line: 238, baseType: !1242, size: 32, offset: 7616)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !4555, file: !4556, line: 238, baseType: !1242, size: 32, offset: 7648)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !4555, file: !4556, line: 239, baseType: !1399, size: 128, offset: 7680)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !4555, file: !4556, line: 241, baseType: !4641, size: 64, offset: 7808)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !4555, file: !4556, line: 243, baseType: !1399, size: 128, offset: 7872)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !4555, file: !4556, line: 245, baseType: !1390, size: 64, offset: 8000)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !4551, file: !4550, line: 58, baseType: !4746, size: 64, offset: 64)
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4551, size: 64)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !4551, file: !4550, line: 59, baseType: !1242, size: 32, offset: 128)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !4551, file: !4550, line: 63, baseType: !4749, size: 64, offset: 192)
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 64)
!4750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4606, size: 192, elements: !1503)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !4551, file: !4550, line: 64, baseType: !1242, size: 32, offset: 256)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !4551, file: !4550, line: 67, baseType: !1824, size: 64, offset: 320)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !4551, file: !4550, line: 67, baseType: !1824, size: 64, offset: 384)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !4551, file: !4550, line: 68, baseType: !4755, size: 64, offset: 448)
!4755 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !4756, line: 48, baseType: !1828)
!4756 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !4551, file: !4550, line: 69, baseType: !4758, size: 64, offset: 512)
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !4551, file: !4550, line: 70, baseType: !1242, size: 32, offset: 576)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !4551, file: !4550, line: 71, baseType: !4758, size: 64, offset: 640)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !4551, file: !4550, line: 72, baseType: !1242, size: 32, offset: 704)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !4551, file: !4550, line: 75, baseType: !1410, size: 16, offset: 736)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !4551, file: !4550, line: 76, baseType: !1410, size: 16, offset: 752)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !4551, file: !4550, line: 79, baseType: !1611, size: 64, offset: 768)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !4551, file: !4550, line: 82, baseType: !1242, size: 32, offset: 832)
!4766 = !DILocation(line: 463, column: 14, scope: !4540)
!4767 = !DILocation(line: 465, column: 6, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 465, column: 6)
!4769 = !DILocation(line: 465, column: 13, scope: !4768)
!4770 = !DILocation(line: 465, column: 16, scope: !4768)
!4771 = !DILocation(line: 465, column: 24, scope: !4768)
!4772 = !DILocation(line: 465, column: 29, scope: !4768)
!4773 = !DILocation(line: 465, column: 6, scope: !4540)
!4774 = !DILocation(line: 466, column: 33, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 465, column: 41)
!4776 = !DILocation(line: 466, column: 8, scope: !4775)
!4777 = !DILocation(line: 466, column: 6, scope: !4775)
!4778 = !DILocation(line: 467, column: 2, scope: !4775)
!4779 = !DILocation(line: 469, column: 6, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 469, column: 6)
!4781 = !DILocation(line: 469, column: 9, scope: !4780)
!4782 = !DILocation(line: 469, column: 13, scope: !4780)
!4783 = !DILocation(line: 469, column: 17, scope: !4780)
!4784 = !DILocation(line: 469, column: 21, scope: !4780)
!4785 = !DILocation(line: 469, column: 12, scope: !4780)
!4786 = !DILocation(line: 469, column: 6, scope: !4540)
!4787 = !DILocation(line: 470, column: 3, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 469, column: 31)
!4789 = !DILocation(line: 473, column: 2, scope: !4540)
!4790 = !DILocation(line: 474, column: 1, scope: !4540)
!4791 = distinct !DISubprogram(name: "ED_operator_editsurfcurve", scope: !3, file: !3, line: 476, type: !3732, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4792 = !DILocalVariable(name: "C", arg: 1, scope: !4791, file: !3, line: 476, type: !3734)
!4793 = !DILocation(line: 476, column: 41, scope: !4791)
!4794 = !DILocalVariable(name: "obedit", scope: !4791, file: !3, line: 478, type: !3855)
!4795 = !DILocation(line: 478, column: 10, scope: !4791)
!4796 = !DILocation(line: 478, column: 40, scope: !4791)
!4797 = !DILocation(line: 478, column: 19, scope: !4791)
!4798 = !DILocation(line: 479, column: 6, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 479, column: 6)
!4800 = !DILocation(line: 479, column: 13, scope: !4799)
!4801 = !DILocation(line: 479, column: 16, scope: !4799)
!4802 = !DILocation(line: 479, column: 6, scope: !4791)
!4803 = !DILocation(line: 480, column: 28, scope: !4799)
!4804 = !DILocation(line: 480, column: 36, scope: !4799)
!4805 = !DILocation(line: 480, column: 19, scope: !4799)
!4806 = !DILocation(line: 480, column: 43, scope: !4799)
!4807 = !DILocation(line: 480, column: 15, scope: !4799)
!4808 = !DILocation(line: 480, column: 3, scope: !4799)
!4809 = !DILocation(line: 481, column: 2, scope: !4791)
!4810 = !DILocation(line: 482, column: 1, scope: !4791)
!4811 = distinct !DISubprogram(name: "ED_operator_editsurfcurve_region_view3d", scope: !3, file: !3, line: 484, type: !3732, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4812 = !DILocalVariable(name: "C", arg: 1, scope: !4811, file: !3, line: 484, type: !3734)
!4813 = !DILocation(line: 484, column: 55, scope: !4811)
!4814 = !DILocation(line: 486, column: 32, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 486, column: 6)
!4816 = !DILocation(line: 486, column: 6, scope: !4815)
!4817 = !DILocation(line: 486, column: 35, scope: !4815)
!4818 = !DILocation(line: 486, column: 59, scope: !4815)
!4819 = !DILocation(line: 486, column: 38, scope: !4815)
!4820 = !DILocation(line: 486, column: 6, scope: !4811)
!4821 = !DILocation(line: 487, column: 3, scope: !4815)
!4822 = !DILocation(line: 489, column: 31, scope: !4811)
!4823 = !DILocation(line: 489, column: 2, scope: !4811)
!4824 = !DILocation(line: 490, column: 2, scope: !4811)
!4825 = !DILocation(line: 491, column: 1, scope: !4811)
!4826 = distinct !DISubprogram(name: "ED_operator_editcurve", scope: !3, file: !3, line: 493, type: !3732, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4827 = !DILocalVariable(name: "C", arg: 1, scope: !4826, file: !3, line: 493, type: !3734)
!4828 = !DILocation(line: 493, column: 37, scope: !4826)
!4829 = !DILocalVariable(name: "obedit", scope: !4826, file: !3, line: 495, type: !3855)
!4830 = !DILocation(line: 495, column: 10, scope: !4826)
!4831 = !DILocation(line: 495, column: 40, scope: !4826)
!4832 = !DILocation(line: 495, column: 19, scope: !4826)
!4833 = !DILocation(line: 496, column: 6, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 496, column: 6)
!4835 = !DILocation(line: 496, column: 13, scope: !4834)
!4836 = !DILocation(line: 496, column: 16, scope: !4834)
!4837 = !DILocation(line: 496, column: 24, scope: !4834)
!4838 = !DILocation(line: 496, column: 29, scope: !4834)
!4839 = !DILocation(line: 496, column: 6, scope: !4826)
!4840 = !DILocation(line: 497, column: 28, scope: !4834)
!4841 = !DILocation(line: 497, column: 36, scope: !4834)
!4842 = !DILocation(line: 497, column: 19, scope: !4834)
!4843 = !DILocation(line: 497, column: 43, scope: !4834)
!4844 = !DILocation(line: 497, column: 15, scope: !4834)
!4845 = !DILocation(line: 497, column: 3, scope: !4834)
!4846 = !DILocation(line: 498, column: 2, scope: !4826)
!4847 = !DILocation(line: 499, column: 1, scope: !4826)
!4848 = distinct !DISubprogram(name: "ED_operator_editcurve_3d", scope: !3, file: !3, line: 501, type: !3732, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4849 = !DILocalVariable(name: "C", arg: 1, scope: !4848, file: !3, line: 501, type: !3734)
!4850 = !DILocation(line: 501, column: 40, scope: !4848)
!4851 = !DILocalVariable(name: "obedit", scope: !4848, file: !3, line: 503, type: !3855)
!4852 = !DILocation(line: 503, column: 10, scope: !4848)
!4853 = !DILocation(line: 503, column: 40, scope: !4848)
!4854 = !DILocation(line: 503, column: 19, scope: !4848)
!4855 = !DILocation(line: 504, column: 6, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 504, column: 6)
!4857 = !DILocation(line: 504, column: 13, scope: !4856)
!4858 = !DILocation(line: 504, column: 16, scope: !4856)
!4859 = !DILocation(line: 504, column: 24, scope: !4856)
!4860 = !DILocation(line: 504, column: 29, scope: !4856)
!4861 = !DILocation(line: 504, column: 6, scope: !4848)
!4862 = !DILocalVariable(name: "cu", scope: !4863, file: !3, line: 505, type: !1580)
!4863 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 504, column: 42)
!4864 = !DILocation(line: 505, column: 10, scope: !4863)
!4865 = !DILocation(line: 505, column: 24, scope: !4863)
!4866 = !DILocation(line: 505, column: 32, scope: !4863)
!4867 = !DILocation(line: 505, column: 15, scope: !4863)
!4868 = !DILocation(line: 507, column: 11, scope: !4863)
!4869 = !DILocation(line: 507, column: 15, scope: !4863)
!4870 = !DILocation(line: 507, column: 20, scope: !4863)
!4871 = !DILocation(line: 507, column: 29, scope: !4863)
!4872 = !DILocation(line: 507, column: 41, scope: !4863)
!4873 = !DILocation(line: 507, column: 45, scope: !4863)
!4874 = !DILocation(line: 507, column: 38, scope: !4863)
!4875 = !DILocation(line: 0, scope: !4863)
!4876 = !DILocation(line: 507, column: 3, scope: !4863)
!4877 = !DILocation(line: 509, column: 2, scope: !4848)
!4878 = !DILocation(line: 510, column: 1, scope: !4848)
!4879 = distinct !DISubprogram(name: "ED_operator_editsurf", scope: !3, file: !3, line: 512, type: !3732, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4880 = !DILocalVariable(name: "C", arg: 1, scope: !4879, file: !3, line: 512, type: !3734)
!4881 = !DILocation(line: 512, column: 36, scope: !4879)
!4882 = !DILocalVariable(name: "obedit", scope: !4879, file: !3, line: 514, type: !3855)
!4883 = !DILocation(line: 514, column: 10, scope: !4879)
!4884 = !DILocation(line: 514, column: 40, scope: !4879)
!4885 = !DILocation(line: 514, column: 19, scope: !4879)
!4886 = !DILocation(line: 515, column: 6, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 515, column: 6)
!4888 = !DILocation(line: 515, column: 13, scope: !4887)
!4889 = !DILocation(line: 515, column: 16, scope: !4887)
!4890 = !DILocation(line: 515, column: 24, scope: !4887)
!4891 = !DILocation(line: 515, column: 29, scope: !4887)
!4892 = !DILocation(line: 515, column: 6, scope: !4879)
!4893 = !DILocation(line: 516, column: 28, scope: !4887)
!4894 = !DILocation(line: 516, column: 36, scope: !4887)
!4895 = !DILocation(line: 516, column: 19, scope: !4887)
!4896 = !DILocation(line: 516, column: 43, scope: !4887)
!4897 = !DILocation(line: 516, column: 15, scope: !4887)
!4898 = !DILocation(line: 516, column: 3, scope: !4887)
!4899 = !DILocation(line: 517, column: 2, scope: !4879)
!4900 = !DILocation(line: 518, column: 1, scope: !4879)
!4901 = distinct !DISubprogram(name: "ED_operator_editfont", scope: !3, file: !3, line: 520, type: !3732, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4902 = !DILocalVariable(name: "C", arg: 1, scope: !4901, file: !3, line: 520, type: !3734)
!4903 = !DILocation(line: 520, column: 36, scope: !4901)
!4904 = !DILocalVariable(name: "obedit", scope: !4901, file: !3, line: 522, type: !3855)
!4905 = !DILocation(line: 522, column: 10, scope: !4901)
!4906 = !DILocation(line: 522, column: 40, scope: !4901)
!4907 = !DILocation(line: 522, column: 19, scope: !4901)
!4908 = !DILocation(line: 523, column: 6, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 523, column: 6)
!4910 = !DILocation(line: 523, column: 13, scope: !4909)
!4911 = !DILocation(line: 523, column: 16, scope: !4909)
!4912 = !DILocation(line: 523, column: 24, scope: !4909)
!4913 = !DILocation(line: 523, column: 29, scope: !4909)
!4914 = !DILocation(line: 523, column: 6, scope: !4901)
!4915 = !DILocation(line: 524, column: 28, scope: !4909)
!4916 = !DILocation(line: 524, column: 36, scope: !4909)
!4917 = !DILocation(line: 524, column: 19, scope: !4909)
!4918 = !DILocation(line: 524, column: 43, scope: !4909)
!4919 = !DILocation(line: 524, column: 15, scope: !4909)
!4920 = !DILocation(line: 524, column: 3, scope: !4909)
!4921 = !DILocation(line: 525, column: 2, scope: !4901)
!4922 = !DILocation(line: 526, column: 1, scope: !4901)
!4923 = distinct !DISubprogram(name: "ED_operator_editlattice", scope: !3, file: !3, line: 528, type: !3732, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4924 = !DILocalVariable(name: "C", arg: 1, scope: !4923, file: !3, line: 528, type: !3734)
!4925 = !DILocation(line: 528, column: 39, scope: !4923)
!4926 = !DILocalVariable(name: "obedit", scope: !4923, file: !3, line: 530, type: !3855)
!4927 = !DILocation(line: 530, column: 10, scope: !4923)
!4928 = !DILocation(line: 530, column: 40, scope: !4923)
!4929 = !DILocation(line: 530, column: 19, scope: !4923)
!4930 = !DILocation(line: 531, column: 6, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4923, file: !3, line: 531, column: 6)
!4932 = !DILocation(line: 531, column: 13, scope: !4931)
!4933 = !DILocation(line: 531, column: 16, scope: !4931)
!4934 = !DILocation(line: 531, column: 24, scope: !4931)
!4935 = !DILocation(line: 531, column: 29, scope: !4931)
!4936 = !DILocation(line: 531, column: 6, scope: !4923)
!4937 = !DILocation(line: 532, column: 30, scope: !4931)
!4938 = !DILocation(line: 532, column: 38, scope: !4931)
!4939 = !DILocation(line: 532, column: 19, scope: !4931)
!4940 = !DILocation(line: 532, column: 45, scope: !4931)
!4941 = !DILocation(line: 532, column: 15, scope: !4931)
!4942 = !DILocation(line: 532, column: 3, scope: !4931)
!4943 = !DILocation(line: 533, column: 2, scope: !4923)
!4944 = !DILocation(line: 534, column: 1, scope: !4923)
!4945 = distinct !DISubprogram(name: "ED_operator_editmball", scope: !3, file: !3, line: 536, type: !3732, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4946 = !DILocalVariable(name: "C", arg: 1, scope: !4945, file: !3, line: 536, type: !3734)
!4947 = !DILocation(line: 536, column: 37, scope: !4945)
!4948 = !DILocalVariable(name: "obedit", scope: !4945, file: !3, line: 538, type: !3855)
!4949 = !DILocation(line: 538, column: 10, scope: !4945)
!4950 = !DILocation(line: 538, column: 40, scope: !4945)
!4951 = !DILocation(line: 538, column: 19, scope: !4945)
!4952 = !DILocation(line: 539, column: 6, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 539, column: 6)
!4954 = !DILocation(line: 539, column: 13, scope: !4953)
!4955 = !DILocation(line: 539, column: 16, scope: !4953)
!4956 = !DILocation(line: 539, column: 24, scope: !4953)
!4957 = !DILocation(line: 539, column: 29, scope: !4953)
!4958 = !DILocation(line: 539, column: 6, scope: !4945)
!4959 = !DILocation(line: 540, column: 31, scope: !4953)
!4960 = !DILocation(line: 540, column: 39, scope: !4953)
!4961 = !DILocation(line: 540, column: 19, scope: !4953)
!4962 = !DILocation(line: 540, column: 46, scope: !4953)
!4963 = !DILocation(line: 540, column: 15, scope: !4953)
!4964 = !DILocation(line: 540, column: 3, scope: !4953)
!4965 = !DILocation(line: 541, column: 2, scope: !4945)
!4966 = !DILocation(line: 542, column: 1, scope: !4945)
!4967 = distinct !DISubprogram(name: "ED_operator_mask", scope: !3, file: !3, line: 544, type: !3732, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!4968 = !DILocalVariable(name: "C", arg: 1, scope: !4967, file: !3, line: 544, type: !3734)
!4969 = !DILocation(line: 544, column: 32, scope: !4967)
!4970 = !DILocalVariable(name: "sa", scope: !4967, file: !3, line: 546, type: !3286)
!4971 = !DILocation(line: 546, column: 11, scope: !4967)
!4972 = !DILocation(line: 546, column: 28, scope: !4967)
!4973 = !DILocation(line: 546, column: 16, scope: !4967)
!4974 = !DILocation(line: 547, column: 6, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 547, column: 6)
!4976 = !DILocation(line: 547, column: 9, scope: !4975)
!4977 = !DILocation(line: 547, column: 12, scope: !4975)
!4978 = !DILocation(line: 547, column: 16, scope: !4975)
!4979 = !DILocation(line: 547, column: 26, scope: !4975)
!4980 = !DILocation(line: 547, column: 6, scope: !4967)
!4981 = !DILocation(line: 548, column: 11, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 547, column: 33)
!4983 = !DILocation(line: 548, column: 15, scope: !4982)
!4984 = !DILocation(line: 548, column: 3, scope: !4982)
!4985 = !DILocalVariable(name: "sc", scope: !4986, file: !3, line: 551, type: !4988)
!4986 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 550, column: 4)
!4987 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 548, column: 26)
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4989, size: 64)
!4989 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceClip", file: !18, line: 1110, baseType: !4990)
!4990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceClip", file: !18, line: 1074, size: 3264, elements: !4991)
!4991 = !{!4992, !4993, !4994, !4995, !4996, !4997, !4998, !4999, !5000, !5001, !5007, !5008, !5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5040, !5041, !5042, !5043, !5044, !5045}
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4990, file: !18, line: 1075, baseType: !1391, size: 64)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4990, file: !18, line: 1075, baseType: !1391, size: 64, offset: 64)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4990, file: !18, line: 1076, baseType: !1399, size: 128, offset: 128)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4990, file: !18, line: 1077, baseType: !1242, size: 32, offset: 256)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !4990, file: !18, line: 1079, baseType: !1407, size: 32, offset: 288)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !4990, file: !18, line: 1079, baseType: !1407, size: 32, offset: 320)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "xlockof", scope: !4990, file: !18, line: 1080, baseType: !1407, size: 32, offset: 352)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "ylockof", scope: !4990, file: !18, line: 1080, baseType: !1407, size: 32, offset: 384)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !4990, file: !18, line: 1081, baseType: !1407, size: 32, offset: 416)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !4990, file: !18, line: 1083, baseType: !5002, size: 64, offset: 448)
!5002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !2082, line: 50, size: 64, elements: !5003)
!5003 = !{!5004, !5005, !5006}
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !5002, file: !2082, line: 51, baseType: !1242, size: 32)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !5002, file: !2082, line: 52, baseType: !1410, size: 16, offset: 32)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !5002, file: !2082, line: 52, baseType: !1410, size: 16, offset: 48)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !4990, file: !18, line: 1084, baseType: !2080, size: 64, offset: 512)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !4990, file: !18, line: 1085, baseType: !5009, size: 1088, offset: 576)
!5009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipScopes", file: !2082, line: 103, size: 1088, elements: !5010)
!5010 = !{!5011, !5012, !5013, !5014, !5015, !5016, !5017, !5020, !5021, !5022, !5023, !5024, !5025, !5026, !5028}
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !5009, file: !2082, line: 104, baseType: !1410, size: 16)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "use_track_mask", scope: !5009, file: !2082, line: 105, baseType: !1410, size: 16, offset: 16)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "track_preview_height", scope: !5009, file: !2082, line: 106, baseType: !1242, size: 32, offset: 32)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "frame_width", scope: !5009, file: !2082, line: 107, baseType: !1242, size: 32, offset: 64)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "frame_height", scope: !5009, file: !2082, line: 107, baseType: !1242, size: 32, offset: 96)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "undist_marker", scope: !5009, file: !2082, line: 108, baseType: !2192, size: 512, offset: 128)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "track_search", scope: !5009, file: !2082, line: 109, baseType: !5018, size: 64, offset: 640)
!5018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5019, size: 64)
!5019 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !2072, line: 136, flags: DIFlagFwdDecl)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "track_preview", scope: !5009, file: !2082, line: 110, baseType: !5018, size: 64, offset: 704)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "track_pos", scope: !5009, file: !2082, line: 111, baseType: !1846, size: 64, offset: 768)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "track_disabled", scope: !5009, file: !2082, line: 112, baseType: !1410, size: 16, offset: 832)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "track_locked", scope: !5009, file: !2082, line: 113, baseType: !1410, size: 16, offset: 848)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !5009, file: !2082, line: 114, baseType: !1242, size: 32, offset: 864)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !5009, file: !2082, line: 115, baseType: !2179, size: 64, offset: 896)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "marker", scope: !5009, file: !2082, line: 116, baseType: !5027, size: 64, offset: 960)
!5027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "slide_scale", scope: !5009, file: !2082, line: 117, baseType: !1846, size: 64, offset: 1024)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4990, file: !18, line: 1087, baseType: !1242, size: 32, offset: 1664)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4990, file: !18, line: 1088, baseType: !1410, size: 16, offset: 1696)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !4990, file: !18, line: 1089, baseType: !1410, size: 16, offset: 1712)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "path_length", scope: !4990, file: !18, line: 1091, baseType: !1242, size: 32, offset: 1728)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !4990, file: !18, line: 1094, baseType: !1846, size: 64, offset: 1760)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !4990, file: !18, line: 1094, baseType: !1407, size: 32, offset: 1824)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !4990, file: !18, line: 1094, baseType: !1407, size: 32, offset: 1856)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4990, file: !18, line: 1095, baseType: !1242, size: 32, offset: 1888)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "stabmat", scope: !4990, file: !18, line: 1096, baseType: !1513, size: 512, offset: 1920)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "unistabmat", scope: !4990, file: !18, line: 1096, baseType: !1513, size: 512, offset: 2432)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "postproc_flag", scope: !4990, file: !18, line: 1100, baseType: !1242, size: 32, offset: 2944)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_src", scope: !4990, file: !18, line: 1103, baseType: !1410, size: 16, offset: 2976)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4990, file: !18, line: 1103, baseType: !1410, size: 16, offset: 2992)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4990, file: !18, line: 1105, baseType: !1242, size: 32, offset: 3008)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !4990, file: !18, line: 1105, baseType: !1242, size: 32, offset: 3040)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4990, file: !18, line: 1107, baseType: !1846, size: 64, offset: 3072)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !4990, file: !18, line: 1109, baseType: !4503, size: 128, offset: 3136)
!5046 = !DILocation(line: 551, column: 16, scope: !4986)
!5047 = !DILocation(line: 551, column: 21, scope: !4986)
!5048 = !DILocation(line: 551, column: 25, scope: !4986)
!5049 = !DILocation(line: 551, column: 35, scope: !4986)
!5050 = !DILocation(line: 552, column: 46, scope: !4986)
!5051 = !DILocation(line: 552, column: 12, scope: !4986)
!5052 = !DILocation(line: 552, column: 5, scope: !4986)
!5053 = !DILocalVariable(name: "sseq", scope: !5054, file: !3, line: 556, type: !5055)
!5054 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 555, column: 4)
!5055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5056, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceSeq", file: !18, line: 504, baseType: !5057)
!5057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceSeq", file: !18, line: 481, size: 2432, elements: !5058)
!5058 = !{!5059, !5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075, !5076, !5077}
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5057, file: !18, line: 482, baseType: !1391, size: 64)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5057, file: !18, line: 482, baseType: !1391, size: 64, offset: 64)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !5057, file: !18, line: 483, baseType: !1399, size: 128, offset: 128)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !5057, file: !18, line: 484, baseType: !1242, size: 32, offset: 256)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !5057, file: !18, line: 485, baseType: !1407, size: 32, offset: 288)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !5057, file: !18, line: 487, baseType: !1409, size: 128, offset: 320)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !5057, file: !18, line: 489, baseType: !4023, size: 1280, offset: 448)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !5057, file: !18, line: 491, baseType: !1407, size: 32, offset: 1728)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !5057, file: !18, line: 491, baseType: !1407, size: 32, offset: 1760)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "mainb", scope: !5057, file: !18, line: 492, baseType: !1410, size: 16, offset: 1792)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !5057, file: !18, line: 493, baseType: !1410, size: 16, offset: 1808)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "chanshown", scope: !5057, file: !18, line: 494, baseType: !1410, size: 16, offset: 1824)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "zebra", scope: !5057, file: !18, line: 495, baseType: !1410, size: 16, offset: 1840)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5057, file: !18, line: 496, baseType: !1242, size: 32, offset: 1856)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !5057, file: !18, line: 497, baseType: !1407, size: 32, offset: 1888)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !5057, file: !18, line: 498, baseType: !1242, size: 32, offset: 1920)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_type", scope: !5057, file: !18, line: 499, baseType: !1242, size: 32, offset: 1952)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !5057, file: !18, line: 501, baseType: !1690, size: 64, offset: 1984)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !5057, file: !18, line: 503, baseType: !5078, size: 384, offset: 2048)
!5078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SequencerScopes", file: !1968, line: 305, size: 384, elements: !5079)
!5079 = !{!5080, !5081, !5082, !5083, !5084, !5085}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "reference_ibuf", scope: !5078, file: !1968, line: 306, baseType: !5018, size: 64)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "zebra_ibuf", scope: !5078, file: !1968, line: 308, baseType: !5018, size: 64, offset: 64)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_ibuf", scope: !5078, file: !1968, line: 309, baseType: !5018, size: 64, offset: 128)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "sep_waveform_ibuf", scope: !5078, file: !1968, line: 310, baseType: !5018, size: 64, offset: 192)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "vector_ibuf", scope: !5078, file: !1968, line: 311, baseType: !5018, size: 64, offset: 256)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "histogram_ibuf", scope: !5078, file: !1968, line: 312, baseType: !5018, size: 64, offset: 320)
!5086 = !DILocation(line: 556, column: 15, scope: !5054)
!5087 = !DILocation(line: 556, column: 22, scope: !5054)
!5088 = !DILocation(line: 556, column: 26, scope: !5054)
!5089 = !DILocation(line: 556, column: 36, scope: !5054)
!5090 = !DILocalVariable(name: "scene", scope: !5054, file: !3, line: 557, type: !3831)
!5091 = !DILocation(line: 557, column: 12, scope: !5054)
!5092 = !DILocation(line: 557, column: 35, scope: !5054)
!5093 = !DILocation(line: 557, column: 20, scope: !5054)
!5094 = !DILocation(line: 558, column: 51, scope: !5054)
!5095 = !DILocation(line: 558, column: 57, scope: !5054)
!5096 = !DILocation(line: 558, column: 12, scope: !5054)
!5097 = !DILocation(line: 558, column: 5, scope: !5054)
!5098 = !DILocalVariable(name: "sima", scope: !5099, file: !3, line: 562, type: !4432)
!5099 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 561, column: 4)
!5100 = !DILocation(line: 562, column: 17, scope: !5099)
!5101 = !DILocation(line: 562, column: 24, scope: !5099)
!5102 = !DILocation(line: 562, column: 28, scope: !5099)
!5103 = !DILocation(line: 562, column: 38, scope: !5099)
!5104 = !DILocalVariable(name: "scene", scope: !5099, file: !3, line: 563, type: !3831)
!5105 = !DILocation(line: 563, column: 12, scope: !5099)
!5106 = !DILocation(line: 563, column: 35, scope: !5099)
!5107 = !DILocation(line: 563, column: 20, scope: !5099)
!5108 = !DILocation(line: 564, column: 47, scope: !5099)
!5109 = !DILocation(line: 564, column: 54, scope: !5099)
!5110 = !DILocation(line: 564, column: 12, scope: !5099)
!5111 = !DILocation(line: 564, column: 5, scope: !5099)
!5112 = !DILocation(line: 567, column: 2, scope: !4982)
!5113 = !DILocation(line: 569, column: 2, scope: !4967)
!5114 = !DILocation(line: 570, column: 1, scope: !4967)
!5115 = distinct !DISubprogram(name: "is_in_area_actionzone", scope: !3, file: !3, line: 650, type: !5116, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!5118, !3286, !5214}
!5118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5119, size: 64)
!5119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AZone", file: !94, line: 86, size: 512, elements: !5120)
!5120 = !{!5121, !5122, !5123, !5205, !5206, !5208, !5209, !5210, !5211, !5212, !5213}
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5119, file: !94, line: 87, baseType: !5118, size: 64)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5119, file: !94, line: 87, baseType: !5118, size: 64, offset: 64)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !5119, file: !94, line: 88, baseType: !5124, size: 64, offset: 128)
!5124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5125, size: 64)
!5125 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !1166, line: 267, baseType: !5126)
!5126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !1166, line: 230, size: 3072, elements: !5127)
!5127 = !{!5128, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137, !5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5149, !5195, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5126, file: !1166, line: 231, baseType: !5129, size: 64)
!5129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5126, file: !1166, line: 231, baseType: !5129, size: 64, offset: 64)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !5126, file: !1166, line: 233, baseType: !4023, size: 1280, offset: 128)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !5126, file: !1166, line: 234, baseType: !2823, size: 128, offset: 1408)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !5126, file: !1166, line: 235, baseType: !2823, size: 128, offset: 1536)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !5126, file: !1166, line: 236, baseType: !1410, size: 16, offset: 1664)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !5126, file: !1166, line: 236, baseType: !1410, size: 16, offset: 1680)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !5126, file: !1166, line: 238, baseType: !1410, size: 16, offset: 1696)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !5126, file: !1166, line: 239, baseType: !1410, size: 16, offset: 1712)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !5126, file: !1166, line: 240, baseType: !1410, size: 16, offset: 1728)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5126, file: !1166, line: 241, baseType: !1410, size: 16, offset: 1744)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !5126, file: !1166, line: 243, baseType: !1407, size: 32, offset: 1760)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !5126, file: !1166, line: 244, baseType: !1410, size: 16, offset: 1792)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !5126, file: !1166, line: 244, baseType: !1410, size: 16, offset: 1808)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !5126, file: !1166, line: 246, baseType: !1410, size: 16, offset: 1824)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !5126, file: !1166, line: 247, baseType: !1410, size: 16, offset: 1840)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !5126, file: !1166, line: 248, baseType: !1410, size: 16, offset: 1856)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !5126, file: !1166, line: 249, baseType: !1410, size: 16, offset: 1872)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !5126, file: !1166, line: 250, baseType: !1410, size: 16, offset: 1888)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5126, file: !1166, line: 251, baseType: !1410, size: 16, offset: 1904)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5126, file: !1166, line: 253, baseType: !5150, size: 64, offset: 1920)
!5150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5151, size: 64)
!5151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !3447, line: 116, size: 1472, elements: !5152)
!5152 = !{!5153, !5154, !5155, !5156, !5160, !5161, !5165, !5169, !5173, !5177, !5178, !5179, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194}
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5151, file: !3447, line: 117, baseType: !5150, size: 64)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5151, file: !3447, line: 117, baseType: !5150, size: 64, offset: 64)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !5151, file: !3447, line: 119, baseType: !1242, size: 32, offset: 128)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5151, file: !3447, line: 122, baseType: !5157, size: 64, offset: 192)
!5157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5158, size: 64)
!5158 = !DISubroutineType(types: !5159)
!5159 = !{null, !3469, !5129}
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !5151, file: !3447, line: 124, baseType: !5157, size: 64, offset: 256)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !5151, file: !3447, line: 126, baseType: !5162, size: 64, offset: 320)
!5162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5163, size: 64)
!5163 = !DISubroutineType(types: !5164)
!5164 = !{null, !3458, !5129}
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !5151, file: !3447, line: 128, baseType: !5166, size: 64, offset: 384)
!5166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 64)
!5167 = !DISubroutineType(types: !5168)
!5168 = !{null, !3337, !3291, !5129, !3516}
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5151, file: !3447, line: 130, baseType: !5170, size: 64, offset: 448)
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 64)
!5171 = !DISubroutineType(types: !5172)
!5172 = !{null, !5129}
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !5151, file: !3447, line: 133, baseType: !5174, size: 64, offset: 512)
!5174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5175, size: 64)
!5175 = !DISubroutineType(types: !5176)
!5176 = !{!1390, !1390}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !5151, file: !3447, line: 137, baseType: !3538, size: 64, offset: 576)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !5151, file: !3447, line: 139, baseType: !3542, size: 64, offset: 640)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !5151, file: !3447, line: 141, baseType: !5180, size: 64, offset: 704)
!5180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5181, size: 64)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{null, !3330, !3291, !5129}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !5151, file: !3447, line: 144, baseType: !3547, size: 64, offset: 768)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "drawcalls", scope: !5151, file: !3447, line: 147, baseType: !1399, size: 128, offset: 832)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "paneltypes", scope: !5151, file: !3447, line: 150, baseType: !1399, size: 128, offset: 960)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "headertypes", scope: !5151, file: !3447, line: 153, baseType: !1399, size: 128, offset: 1088)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "minsizex", scope: !5151, file: !3447, line: 156, baseType: !1242, size: 32, offset: 1216)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "minsizey", scope: !5151, file: !3447, line: 156, baseType: !1242, size: 32, offset: 1248)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizex", scope: !5151, file: !3447, line: 158, baseType: !1242, size: 32, offset: 1280)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizey", scope: !5151, file: !3447, line: 158, baseType: !1242, size: 32, offset: 1312)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !5151, file: !3447, line: 160, baseType: !1242, size: 32, offset: 1344)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "do_lock", scope: !5151, file: !3447, line: 162, baseType: !1410, size: 16, offset: 1376)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5151, file: !3447, line: 162, baseType: !1410, size: 16, offset: 1392)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "event_cursor", scope: !5151, file: !3447, line: 164, baseType: !1410, size: 16, offset: 1408)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !5126, file: !1166, line: 255, baseType: !1399, size: 128, offset: 1984)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !5126, file: !1166, line: 256, baseType: !1399, size: 128, offset: 2112)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !5126, file: !1166, line: 257, baseType: !1399, size: 128, offset: 2240)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !5126, file: !1166, line: 258, baseType: !1399, size: 128, offset: 2368)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !5126, file: !1166, line: 259, baseType: !1399, size: 128, offset: 2496)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !5126, file: !1166, line: 260, baseType: !1399, size: 128, offset: 2624)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !5126, file: !1166, line: 261, baseType: !1399, size: 128, offset: 2752)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !5126, file: !1166, line: 263, baseType: !3324, size: 64, offset: 2880)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !5126, file: !1166, line: 265, baseType: !1720, size: 64, offset: 2944)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !5126, file: !1166, line: 266, baseType: !1390, size: 64, offset: 3008)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5119, file: !94, line: 89, baseType: !1242, size: 32, offset: 192)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !5119, file: !94, line: 91, baseType: !5207, size: 32, offset: 224)
!5207 = !DIDerivedType(tag: DW_TAG_typedef, name: "AZEdge", file: !94, line: 83, baseType: !93)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !5119, file: !94, line: 93, baseType: !1410, size: 16, offset: 256)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !5119, file: !94, line: 93, baseType: !1410, size: 16, offset: 272)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !5119, file: !94, line: 93, baseType: !1410, size: 16, offset: 288)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !5119, file: !94, line: 93, baseType: !1410, size: 16, offset: 304)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !5119, file: !94, line: 95, baseType: !2823, size: 128, offset: 320)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5119, file: !94, line: 97, baseType: !1407, size: 32, offset: 448)
!5214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5215, size: 64)
!5215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1242)
!5216 = !DILocalVariable(name: "sa", arg: 1, scope: !5115, file: !3, line: 650, type: !3286)
!5217 = !DILocation(line: 650, column: 39, scope: !5115)
!5218 = !DILocalVariable(name: "xy", arg: 2, scope: !5115, file: !3, line: 650, type: !5214)
!5219 = !DILocation(line: 650, column: 53, scope: !5115)
!5220 = !DILocalVariable(name: "az", scope: !5115, file: !3, line: 652, type: !5221)
!5221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5222, size: 64)
!5222 = !DIDerivedType(tag: DW_TAG_typedef, name: "AZone", file: !94, line: 98, baseType: !5119)
!5223 = !DILocation(line: 652, column: 9, scope: !5115)
!5224 = !DILocation(line: 654, column: 12, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5115, file: !3, line: 654, column: 2)
!5226 = !DILocation(line: 654, column: 16, scope: !5225)
!5227 = !DILocation(line: 654, column: 28, scope: !5225)
!5228 = !DILocation(line: 654, column: 10, scope: !5225)
!5229 = !DILocation(line: 654, column: 7, scope: !5225)
!5230 = !DILocation(line: 654, column: 35, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 654, column: 2)
!5232 = !DILocation(line: 654, column: 2, scope: !5225)
!5233 = !DILocation(line: 655, column: 28, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 655, column: 7)
!5235 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 654, column: 54)
!5236 = !DILocation(line: 655, column: 32, scope: !5234)
!5237 = !DILocation(line: 655, column: 38, scope: !5234)
!5238 = !DILocation(line: 655, column: 7, scope: !5234)
!5239 = !DILocation(line: 655, column: 7, scope: !5235)
!5240 = !DILocation(line: 656, column: 8, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 656, column: 8)
!5242 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 655, column: 43)
!5243 = !DILocation(line: 656, column: 12, scope: !5241)
!5244 = !DILocation(line: 656, column: 17, scope: !5241)
!5245 = !DILocation(line: 656, column: 8, scope: !5242)
!5246 = !DILocalVariable(name: "radius", scope: !5247, file: !3, line: 658, type: !1242)
!5247 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 656, column: 32)
!5248 = !DILocation(line: 658, column: 9, scope: !5247)
!5249 = !DILocation(line: 658, column: 19, scope: !5247)
!5250 = !DILocation(line: 658, column: 27, scope: !5247)
!5251 = !DILocation(line: 658, column: 31, scope: !5247)
!5252 = !DILocation(line: 658, column: 25, scope: !5247)
!5253 = !DILocation(line: 658, column: 38, scope: !5247)
!5254 = !DILocation(line: 658, column: 46, scope: !5247)
!5255 = !DILocation(line: 658, column: 50, scope: !5247)
!5256 = !DILocation(line: 658, column: 44, scope: !5247)
!5257 = !DILocation(line: 658, column: 35, scope: !5247)
!5258 = !DILocation(line: 658, column: 57, scope: !5247)
!5259 = !DILocation(line: 658, column: 65, scope: !5247)
!5260 = !DILocation(line: 658, column: 69, scope: !5247)
!5261 = !DILocation(line: 658, column: 63, scope: !5247)
!5262 = !DILocation(line: 658, column: 76, scope: !5247)
!5263 = !DILocation(line: 658, column: 84, scope: !5247)
!5264 = !DILocation(line: 658, column: 88, scope: !5247)
!5265 = !DILocation(line: 658, column: 82, scope: !5247)
!5266 = !DILocation(line: 658, column: 73, scope: !5247)
!5267 = !DILocation(line: 658, column: 54, scope: !5247)
!5268 = !DILocation(line: 660, column: 9, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 660, column: 9)
!5270 = !DILocation(line: 660, column: 19, scope: !5269)
!5271 = !DILocation(line: 660, column: 31, scope: !5269)
!5272 = !DILocation(line: 660, column: 29, scope: !5269)
!5273 = !DILocation(line: 660, column: 16, scope: !5269)
!5274 = !DILocation(line: 660, column: 9, scope: !5247)
!5275 = !DILocation(line: 661, column: 6, scope: !5269)
!5276 = !DILocation(line: 662, column: 4, scope: !5247)
!5277 = !DILocation(line: 663, column: 13, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 663, column: 13)
!5279 = !DILocation(line: 663, column: 17, scope: !5278)
!5280 = !DILocation(line: 663, column: 22, scope: !5278)
!5281 = !DILocation(line: 663, column: 13, scope: !5241)
!5282 = !DILocation(line: 664, column: 5, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 663, column: 39)
!5284 = !DILocation(line: 666, column: 13, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 666, column: 13)
!5286 = !DILocation(line: 666, column: 17, scope: !5285)
!5287 = !DILocation(line: 666, column: 22, scope: !5285)
!5288 = !DILocation(line: 666, column: 13, scope: !5278)
!5289 = !DILocalVariable(name: "mouse_radius", scope: !5290, file: !3, line: 667, type: !1242)
!5290 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 666, column: 43)
!5291 = !DILocation(line: 667, column: 9, scope: !5290)
!5292 = !DILocalVariable(name: "spot_radius", scope: !5290, file: !3, line: 667, type: !1242)
!5293 = !DILocation(line: 667, column: 23, scope: !5290)
!5294 = !DILocalVariable(name: "fadein_radius", scope: !5290, file: !3, line: 667, type: !1242)
!5295 = !DILocation(line: 667, column: 36, scope: !5290)
!5296 = !DILocalVariable(name: "fadeout_radius", scope: !5290, file: !3, line: 667, type: !1242)
!5297 = !DILocation(line: 667, column: 51, scope: !5290)
!5298 = !DILocalVariable(name: "click_rect", scope: !5290, file: !3, line: 668, type: !2823)
!5299 = !DILocation(line: 668, column: 10, scope: !5290)
!5300 = !DILocation(line: 670, column: 45, scope: !5290)
!5301 = !DILocation(line: 670, column: 49, scope: !5290)
!5302 = !DILocation(line: 670, column: 53, scope: !5290)
!5303 = !DILocation(line: 670, column: 57, scope: !5290)
!5304 = !DILocation(line: 670, column: 61, scope: !5290)
!5305 = !DILocation(line: 670, column: 65, scope: !5290)
!5306 = !DILocation(line: 670, column: 69, scope: !5290)
!5307 = !DILocation(line: 670, column: 73, scope: !5290)
!5308 = !DILocation(line: 670, column: 5, scope: !5290)
!5309 = !DILocation(line: 672, column: 42, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 672, column: 9)
!5311 = !DILocation(line: 672, column: 9, scope: !5310)
!5312 = !DILocation(line: 672, column: 9, scope: !5290)
!5313 = !DILocation(line: 673, column: 6, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 672, column: 47)
!5315 = !DILocation(line: 673, column: 10, scope: !5314)
!5316 = !DILocation(line: 673, column: 16, scope: !5314)
!5317 = !DILocation(line: 674, column: 5, scope: !5314)
!5318 = !DILocation(line: 676, column: 22, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 675, column: 10)
!5320 = !DILocation(line: 676, column: 30, scope: !5319)
!5321 = !DILocation(line: 676, column: 34, scope: !5319)
!5322 = !DILocation(line: 676, column: 28, scope: !5319)
!5323 = !DILocation(line: 676, column: 41, scope: !5319)
!5324 = !DILocation(line: 676, column: 49, scope: !5319)
!5325 = !DILocation(line: 676, column: 53, scope: !5319)
!5326 = !DILocation(line: 676, column: 47, scope: !5319)
!5327 = !DILocation(line: 676, column: 38, scope: !5319)
!5328 = !DILocation(line: 676, column: 60, scope: !5319)
!5329 = !DILocation(line: 676, column: 68, scope: !5319)
!5330 = !DILocation(line: 676, column: 72, scope: !5319)
!5331 = !DILocation(line: 676, column: 66, scope: !5319)
!5332 = !DILocation(line: 676, column: 79, scope: !5319)
!5333 = !DILocation(line: 676, column: 87, scope: !5319)
!5334 = !DILocation(line: 676, column: 91, scope: !5319)
!5335 = !DILocation(line: 676, column: 85, scope: !5319)
!5336 = !DILocation(line: 676, column: 76, scope: !5319)
!5337 = !DILocation(line: 676, column: 57, scope: !5319)
!5338 = !DILocation(line: 676, column: 19, scope: !5319)
!5339 = !DILocation(line: 677, column: 20, scope: !5319)
!5340 = !DILocation(line: 677, column: 32, scope: !5319)
!5341 = !DILocation(line: 677, column: 30, scope: !5319)
!5342 = !DILocation(line: 677, column: 18, scope: !5319)
!5343 = !DILocation(line: 678, column: 22, scope: !5319)
!5344 = !DILocation(line: 678, column: 36, scope: !5319)
!5345 = !DILocation(line: 678, column: 34, scope: !5319)
!5346 = !DILocation(line: 678, column: 20, scope: !5319)
!5347 = !DILocation(line: 679, column: 23, scope: !5319)
!5348 = !DILocation(line: 679, column: 38, scope: !5319)
!5349 = !DILocation(line: 679, column: 36, scope: !5319)
!5350 = !DILocation(line: 679, column: 21, scope: !5319)
!5351 = !DILocation(line: 681, column: 10, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 681, column: 10)
!5353 = !DILocation(line: 681, column: 25, scope: !5352)
!5354 = !DILocation(line: 681, column: 23, scope: !5352)
!5355 = !DILocation(line: 681, column: 10, scope: !5319)
!5356 = !DILocation(line: 682, column: 7, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 681, column: 38)
!5358 = !DILocation(line: 682, column: 11, scope: !5357)
!5359 = !DILocation(line: 682, column: 17, scope: !5357)
!5360 = !DILocation(line: 683, column: 6, scope: !5357)
!5361 = !DILocation(line: 684, column: 15, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 684, column: 15)
!5363 = !DILocation(line: 684, column: 30, scope: !5362)
!5364 = !DILocation(line: 684, column: 28, scope: !5362)
!5365 = !DILocation(line: 684, column: 15, scope: !5352)
!5366 = !DILocation(line: 685, column: 7, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 684, column: 45)
!5368 = !DILocation(line: 685, column: 11, scope: !5367)
!5369 = !DILocation(line: 685, column: 17, scope: !5367)
!5370 = !DILocation(line: 686, column: 6, scope: !5367)
!5371 = !DILocation(line: 687, column: 15, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 687, column: 15)
!5373 = !DILocation(line: 687, column: 30, scope: !5372)
!5374 = !DILocation(line: 687, column: 28, scope: !5372)
!5375 = !DILocation(line: 687, column: 15, scope: !5362)
!5376 = !DILocation(line: 688, column: 35, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 687, column: 46)
!5378 = !DILocation(line: 688, column: 50, scope: !5377)
!5379 = !DILocation(line: 688, column: 48, scope: !5377)
!5380 = !DILocation(line: 688, column: 27, scope: !5377)
!5381 = !DILocation(line: 688, column: 77, scope: !5377)
!5382 = !DILocation(line: 688, column: 94, scope: !5377)
!5383 = !DILocation(line: 688, column: 92, scope: !5377)
!5384 = !DILocation(line: 688, column: 69, scope: !5377)
!5385 = !DILocation(line: 688, column: 66, scope: !5377)
!5386 = !DILocation(line: 688, column: 24, scope: !5377)
!5387 = !DILocation(line: 688, column: 7, scope: !5377)
!5388 = !DILocation(line: 688, column: 11, scope: !5377)
!5389 = !DILocation(line: 688, column: 17, scope: !5377)
!5390 = !DILocation(line: 689, column: 6, scope: !5377)
!5391 = !DILocation(line: 691, column: 7, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 690, column: 11)
!5393 = !DILocation(line: 691, column: 11, scope: !5392)
!5394 = !DILocation(line: 691, column: 17, scope: !5392)
!5395 = !DILocation(line: 695, column: 9, scope: !5319)
!5396 = !DILocation(line: 699, column: 24, scope: !5290)
!5397 = !DILocation(line: 699, column: 5, scope: !5290)
!5398 = !DILocation(line: 700, column: 5, scope: !5290)
!5399 = !DILocation(line: 702, column: 3, scope: !5242)
!5400 = !DILocation(line: 703, column: 2, scope: !5235)
!5401 = !DILocation(line: 654, column: 44, scope: !5231)
!5402 = !DILocation(line: 654, column: 48, scope: !5231)
!5403 = !DILocation(line: 654, column: 42, scope: !5231)
!5404 = !DILocation(line: 654, column: 2, scope: !5231)
!5405 = distinct !{!5405, !5232, !5406}
!5406 = !DILocation(line: 703, column: 2, scope: !5225)
!5407 = !DILocation(line: 705, column: 9, scope: !5115)
!5408 = !DILocation(line: 705, column: 2, scope: !5115)
!5409 = distinct !DISubprogram(name: "fullscreen_click_rcti_init", scope: !3, file: !3, line: 633, type: !5410, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5410 = !DISubroutineType(types: !5411)
!5411 = !{null, !5412, !5413, !5413, !5413, !5413}
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!5413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1410)
!5414 = !DILocalVariable(name: "rect", arg: 1, scope: !5409, file: !3, line: 633, type: !5412)
!5415 = !DILocation(line: 633, column: 46, scope: !5409)
!5416 = !DILocalVariable(name: "x1", arg: 2, scope: !5409, file: !3, line: 633, type: !5413)
!5417 = !DILocation(line: 633, column: 64, scope: !5409)
!5418 = !DILocalVariable(name: "y1", arg: 3, scope: !5409, file: !3, line: 633, type: !5413)
!5419 = !DILocation(line: 633, column: 80, scope: !5409)
!5420 = !DILocalVariable(name: "x2", arg: 4, scope: !5409, file: !3, line: 633, type: !5413)
!5421 = !DILocation(line: 633, column: 96, scope: !5409)
!5422 = !DILocalVariable(name: "y2", arg: 5, scope: !5409, file: !3, line: 633, type: !5413)
!5423 = !DILocation(line: 633, column: 112, scope: !5409)
!5424 = !DILocalVariable(name: "x", scope: !5409, file: !3, line: 635, type: !1242)
!5425 = !DILocation(line: 635, column: 6, scope: !5409)
!5426 = !DILocation(line: 635, column: 10, scope: !5409)
!5427 = !DILocation(line: 635, column: 24, scope: !5409)
!5428 = !DILocation(line: 635, column: 16, scope: !5409)
!5429 = !DILocation(line: 635, column: 29, scope: !5409)
!5430 = !DILocation(line: 635, column: 27, scope: !5409)
!5431 = !DILocation(line: 635, column: 33, scope: !5409)
!5432 = !DILocation(line: 635, column: 42, scope: !5409)
!5433 = !DILocation(line: 635, column: 40, scope: !5409)
!5434 = !DILocation(line: 635, column: 13, scope: !5409)
!5435 = !DILocalVariable(name: "y", scope: !5409, file: !3, line: 636, type: !1242)
!5436 = !DILocation(line: 636, column: 6, scope: !5409)
!5437 = !DILocation(line: 636, column: 10, scope: !5409)
!5438 = !DILocation(line: 636, column: 24, scope: !5409)
!5439 = !DILocation(line: 636, column: 16, scope: !5409)
!5440 = !DILocation(line: 636, column: 29, scope: !5409)
!5441 = !DILocation(line: 636, column: 27, scope: !5409)
!5442 = !DILocation(line: 636, column: 33, scope: !5409)
!5443 = !DILocation(line: 636, column: 42, scope: !5409)
!5444 = !DILocation(line: 636, column: 40, scope: !5409)
!5445 = !DILocation(line: 636, column: 13, scope: !5409)
!5446 = !DILocalVariable(name: "icon_size", scope: !5409, file: !3, line: 637, type: !1407)
!5447 = !DILocation(line: 637, column: 8, scope: !5409)
!5448 = !DILocation(line: 637, column: 20, scope: !5409)
!5449 = !DILocation(line: 637, column: 43, scope: !5409)
!5450 = !DILocation(line: 637, column: 41, scope: !5409)
!5451 = !DILocation(line: 637, column: 37, scope: !5409)
!5452 = !DILocation(line: 640, column: 15, scope: !5409)
!5453 = !DILocation(line: 640, column: 13, scope: !5409)
!5454 = !DILocation(line: 640, column: 4, scope: !5409)
!5455 = !DILocation(line: 641, column: 15, scope: !5409)
!5456 = !DILocation(line: 641, column: 13, scope: !5409)
!5457 = !DILocation(line: 641, column: 4, scope: !5409)
!5458 = !DILocation(line: 644, column: 7, scope: !5409)
!5459 = !DILocation(line: 644, column: 4, scope: !5409)
!5460 = !DILocation(line: 645, column: 7, scope: !5409)
!5461 = !DILocation(line: 645, column: 4, scope: !5409)
!5462 = !DILocation(line: 647, column: 16, scope: !5409)
!5463 = !DILocation(line: 647, column: 22, scope: !5409)
!5464 = !DILocation(line: 647, column: 25, scope: !5409)
!5465 = !DILocation(line: 647, column: 29, scope: !5409)
!5466 = !DILocation(line: 647, column: 27, scope: !5409)
!5467 = !DILocation(line: 647, column: 40, scope: !5409)
!5468 = !DILocation(line: 647, column: 43, scope: !5409)
!5469 = !DILocation(line: 647, column: 47, scope: !5409)
!5470 = !DILocation(line: 647, column: 45, scope: !5409)
!5471 = !DILocation(line: 647, column: 2, scope: !5409)
!5472 = !DILocation(line: 648, column: 1, scope: !5409)
!5473 = distinct !DISubprogram(name: "ED_screens_header_tools_menu_create", scope: !3, file: !3, line: 3227, type: !5474, scopeLine: 3228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5474 = !DISubroutineType(types: !5475)
!5475 = !{null, !3734, !5476, !1390}
!5476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!5477 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayout", file: !5478, line: 85, baseType: !3631)
!5478 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5479 = !DILocalVariable(name: "C", arg: 1, scope: !5473, file: !3, line: 3227, type: !3734)
!5480 = !DILocation(line: 3227, column: 52, scope: !5473)
!5481 = !DILocalVariable(name: "layout", arg: 2, scope: !5473, file: !3, line: 3227, type: !5476)
!5482 = !DILocation(line: 3227, column: 65, scope: !5473)
!5483 = !DILocalVariable(name: "UNUSED_arg", arg: 3, scope: !5473, file: !3, line: 3227, type: !1390)
!5484 = !DILocation(line: 3227, column: 79, scope: !5473)
!5485 = !DILocalVariable(name: "sa", scope: !5473, file: !3, line: 3229, type: !3286)
!5486 = !DILocation(line: 3229, column: 11, scope: !5473)
!5487 = !DILocation(line: 3229, column: 28, scope: !5473)
!5488 = !DILocation(line: 3229, column: 16, scope: !5473)
!5489 = !DILocalVariable(name: "ar", scope: !5473, file: !3, line: 3230, type: !5124)
!5490 = !DILocation(line: 3230, column: 11, scope: !5473)
!5491 = !DILocation(line: 3230, column: 30, scope: !5473)
!5492 = !DILocation(line: 3230, column: 16, scope: !5473)
!5493 = !DILocation(line: 3233, column: 6, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 3233, column: 6)
!5495 = !DILocation(line: 3233, column: 10, scope: !5494)
!5496 = !DILocation(line: 3233, column: 20, scope: !5494)
!5497 = !DILocation(line: 3233, column: 6, scope: !5473)
!5498 = !DILocation(line: 3234, column: 11, scope: !5494)
!5499 = !DILocation(line: 3234, column: 3, scope: !5494)
!5500 = !DILocation(line: 3236, column: 11, scope: !5494)
!5501 = !DILocation(line: 3236, column: 3, scope: !5494)
!5502 = !DILocation(line: 3238, column: 10, scope: !5473)
!5503 = !DILocation(line: 3239, column: 11, scope: !5473)
!5504 = !DILocation(line: 3239, column: 15, scope: !5473)
!5505 = !DILocation(line: 3239, column: 20, scope: !5473)
!5506 = !DILocation(line: 3239, column: 10, scope: !5473)
!5507 = !DILocation(line: 3238, column: 2, scope: !5473)
!5508 = !DILocation(line: 3242, column: 10, scope: !5473)
!5509 = !DILocation(line: 3242, column: 2, scope: !5473)
!5510 = !DILocation(line: 3245, column: 6, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 3245, column: 6)
!5512 = !DILocation(line: 3245, column: 10, scope: !5511)
!5513 = !DILocation(line: 3245, column: 20, scope: !5511)
!5514 = !DILocation(line: 3245, column: 6, scope: !5473)
!5515 = !DILocation(line: 3246, column: 7, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 3246, column: 7)
!5517 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 3245, column: 35)
!5518 = !DILocation(line: 3246, column: 11, scope: !5516)
!5519 = !DILocation(line: 3246, column: 7, scope: !5517)
!5520 = !DILocation(line: 3247, column: 12, scope: !5516)
!5521 = !DILocation(line: 3247, column: 4, scope: !5516)
!5522 = !DILocation(line: 3249, column: 12, scope: !5516)
!5523 = !DILocation(line: 3249, column: 4, scope: !5516)
!5524 = !DILocation(line: 3250, column: 2, scope: !5517)
!5525 = !DILocation(line: 3251, column: 1, scope: !5473)
!5526 = distinct !DISubprogram(name: "ED_screen_animation_playing", scope: !3, file: !3, line: 3527, type: !5527, scopeLine: 3528, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5527 = !DISubroutineType(types: !5528)
!5528 = !{!3298, !5529}
!5529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5530, size: 64)
!5530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5531)
!5531 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindowManager", file: !951, line: 160, baseType: !3470)
!5532 = !DILocalVariable(name: "wm", arg: 1, scope: !5526, file: !3, line: 3527, type: !5529)
!5533 = !DILocation(line: 3527, column: 61, scope: !5526)
!5534 = !DILocalVariable(name: "window", scope: !5526, file: !3, line: 3529, type: !5535)
!5535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5536, size: 64)
!5536 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !951, line: 209, baseType: !3331)
!5537 = !DILocation(line: 3529, column: 12, scope: !5526)
!5538 = !DILocation(line: 3531, column: 16, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 3531, column: 2)
!5540 = !DILocation(line: 3531, column: 20, scope: !5539)
!5541 = !DILocation(line: 3531, column: 28, scope: !5539)
!5542 = !DILocation(line: 3531, column: 14, scope: !5539)
!5543 = !DILocation(line: 3531, column: 7, scope: !5539)
!5544 = !DILocation(line: 3531, column: 35, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 3531, column: 2)
!5546 = !DILocation(line: 3531, column: 2, scope: !5539)
!5547 = !DILocation(line: 3532, column: 7, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 3532, column: 7)
!5549 = !DILocation(line: 3532, column: 15, scope: !5548)
!5550 = !DILocation(line: 3532, column: 23, scope: !5548)
!5551 = !DILocation(line: 3532, column: 7, scope: !5545)
!5552 = !DILocation(line: 3533, column: 11, scope: !5548)
!5553 = !DILocation(line: 3533, column: 19, scope: !5548)
!5554 = !DILocation(line: 3533, column: 4, scope: !5548)
!5555 = !DILocation(line: 3531, column: 52, scope: !5545)
!5556 = !DILocation(line: 3531, column: 60, scope: !5545)
!5557 = !DILocation(line: 3531, column: 50, scope: !5545)
!5558 = !DILocation(line: 3531, column: 2, scope: !5545)
!5559 = distinct !{!5559, !5546, !5560}
!5560 = !DILocation(line: 3533, column: 19, scope: !5539)
!5561 = !DILocation(line: 3535, column: 2, scope: !5526)
!5562 = !DILocation(line: 3536, column: 1, scope: !5526)
!5563 = distinct !DISubprogram(name: "ED_screen_animation_play", scope: !3, file: !3, line: 3539, type: !5564, scopeLine: 3540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5564 = !DISubroutineType(types: !5565)
!5565 = !{!1242, !3734, !1242, !1242}
!5566 = !DILocalVariable(name: "C", arg: 1, scope: !5563, file: !3, line: 3539, type: !3734)
!5567 = !DILocation(line: 3539, column: 40, scope: !5563)
!5568 = !DILocalVariable(name: "sync", arg: 2, scope: !5563, file: !3, line: 3539, type: !1242)
!5569 = !DILocation(line: 3539, column: 47, scope: !5563)
!5570 = !DILocalVariable(name: "mode", arg: 3, scope: !5563, file: !3, line: 3539, type: !1242)
!5571 = !DILocation(line: 3539, column: 57, scope: !5563)
!5572 = !DILocalVariable(name: "screen", scope: !5563, file: !3, line: 3541, type: !3298)
!5573 = !DILocation(line: 3541, column: 11, scope: !5563)
!5574 = !DILocation(line: 3541, column: 34, scope: !5563)
!5575 = !DILocation(line: 3541, column: 20, scope: !5563)
!5576 = !DILocalVariable(name: "scene", scope: !5563, file: !3, line: 3542, type: !3831)
!5577 = !DILocation(line: 3542, column: 9, scope: !5563)
!5578 = !DILocation(line: 3542, column: 32, scope: !5563)
!5579 = !DILocation(line: 3542, column: 17, scope: !5563)
!5580 = !DILocation(line: 3544, column: 49, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 3544, column: 6)
!5582 = !DILocation(line: 3544, column: 34, scope: !5581)
!5583 = !DILocation(line: 3544, column: 6, scope: !5581)
!5584 = !DILocation(line: 3544, column: 6, scope: !5563)
!5585 = !DILocation(line: 3546, column: 29, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 3544, column: 54)
!5587 = !DILocation(line: 3546, column: 3, scope: !5586)
!5588 = !DILocation(line: 3547, column: 20, scope: !5586)
!5589 = !DILocation(line: 3547, column: 3, scope: !5586)
!5590 = !DILocation(line: 3548, column: 2, scope: !5586)
!5591 = !DILocalVariable(name: "refresh", scope: !5592, file: !3, line: 3550, type: !1242)
!5592 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 3549, column: 7)
!5593 = !DILocation(line: 3550, column: 7, scope: !5592)
!5594 = !DILocation(line: 3552, column: 7, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 3552, column: 7)
!5596 = !DILocation(line: 3552, column: 12, scope: !5595)
!5597 = !DILocation(line: 3552, column: 7, scope: !5592)
!5598 = !DILocation(line: 3553, column: 21, scope: !5595)
!5599 = !DILocation(line: 3553, column: 4, scope: !5595)
!5600 = !DILocation(line: 3555, column: 29, scope: !5592)
!5601 = !DILocation(line: 3555, column: 32, scope: !5592)
!5602 = !DILocation(line: 3555, column: 40, scope: !5592)
!5603 = !DILocation(line: 3555, column: 54, scope: !5592)
!5604 = !DILocation(line: 3555, column: 63, scope: !5592)
!5605 = !DILocation(line: 3555, column: 69, scope: !5592)
!5606 = !DILocation(line: 3555, column: 3, scope: !5592)
!5607 = !DILocation(line: 3557, column: 7, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 3557, column: 7)
!5609 = !DILocation(line: 3557, column: 15, scope: !5608)
!5610 = !DILocation(line: 3557, column: 7, scope: !5592)
!5611 = !DILocalVariable(name: "wt", scope: !5612, file: !3, line: 3558, type: !5613)
!5612 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 3557, column: 26)
!5613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5614, size: 64)
!5614 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmTimer", file: !1185, line: 506, baseType: !3325)
!5615 = !DILocation(line: 3558, column: 13, scope: !5612)
!5616 = !DILocation(line: 3558, column: 18, scope: !5612)
!5617 = !DILocation(line: 3558, column: 26, scope: !5612)
!5618 = !DILocalVariable(name: "sad", scope: !5612, file: !3, line: 3559, type: !5619)
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5620, size: 64)
!5620 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScreenAnimData", file: !94, line: 45, baseType: !5621)
!5621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScreenAnimData", file: !94, line: 37, size: 256, elements: !5622)
!5622 = !{!5623, !5624, !5625, !5626, !5627, !5628, !5629}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !5621, file: !94, line: 38, baseType: !5124, size: 64)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "redraws", scope: !5621, file: !94, line: 39, baseType: !1410, size: 16, offset: 64)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !5621, file: !94, line: 40, baseType: !1410, size: 16, offset: 80)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5621, file: !94, line: 41, baseType: !1410, size: 16, offset: 96)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !5621, file: !94, line: 42, baseType: !1242, size: 32, offset: 128)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "nextfra", scope: !5621, file: !94, line: 43, baseType: !1242, size: 32, offset: 160)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "last_duration", scope: !5621, file: !94, line: 44, baseType: !3374, size: 64, offset: 192)
!5630 = !DILocation(line: 3559, column: 20, scope: !5612)
!5631 = !DILocation(line: 3559, column: 26, scope: !5612)
!5632 = !DILocation(line: 3559, column: 30, scope: !5612)
!5633 = !DILocation(line: 3561, column: 28, scope: !5612)
!5634 = !DILocation(line: 3561, column: 14, scope: !5612)
!5635 = !DILocation(line: 3561, column: 4, scope: !5612)
!5636 = !DILocation(line: 3561, column: 9, scope: !5612)
!5637 = !DILocation(line: 3561, column: 12, scope: !5612)
!5638 = !DILocation(line: 3562, column: 3, scope: !5612)
!5639 = !DILocation(line: 3565, column: 2, scope: !5563)
!5640 = distinct !DISubprogram(name: "ED_region_blend_factor", scope: !3, file: !3, line: 3913, type: !5641, scopeLine: 3914, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5641 = !DISubroutineType(types: !5642)
!5642 = !{!1407, !5124}
!5643 = !DILocalVariable(name: "ar", arg: 1, scope: !5640, file: !3, line: 3913, type: !5124)
!5644 = !DILocation(line: 3913, column: 39, scope: !5640)
!5645 = !DILocation(line: 3916, column: 6, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5640, file: !3, line: 3916, column: 6)
!5647 = !DILocation(line: 3916, column: 10, scope: !5646)
!5648 = !DILocation(line: 3916, column: 22, scope: !5646)
!5649 = !DILocation(line: 3916, column: 30, scope: !5646)
!5650 = !DILocation(line: 3916, column: 34, scope: !5646)
!5651 = !DILocation(line: 3916, column: 38, scope: !5646)
!5652 = !DILocation(line: 3916, column: 48, scope: !5646)
!5653 = !DILocation(line: 3916, column: 66, scope: !5646)
!5654 = !DILocation(line: 3916, column: 69, scope: !5646)
!5655 = !DILocation(line: 3916, column: 73, scope: !5646)
!5656 = !DILocation(line: 3916, column: 6, scope: !5640)
!5657 = !DILocation(line: 3917, column: 8, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 3916, column: 79)
!5659 = !DILocation(line: 3917, column: 12, scope: !5658)
!5660 = !DILocation(line: 3917, column: 6, scope: !5658)
!5661 = !DILocation(line: 3918, column: 2, scope: !5658)
!5662 = !DILocation(line: 3920, column: 6, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5640, file: !3, line: 3920, column: 6)
!5664 = !DILocation(line: 3920, column: 10, scope: !5663)
!5665 = !DILocation(line: 3920, column: 6, scope: !5640)
!5666 = !DILocalVariable(name: "rgi", scope: !5667, file: !3, line: 3921, type: !5668)
!5667 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 3920, column: 23)
!5668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5669, size: 64)
!5669 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionAlphaInfo", file: !3, line: 3908, baseType: !5670)
!5670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionAlphaInfo", file: !3, line: 3904, size: 256, elements: !5671)
!5671 = !{!5672, !5673, !5674, !5675}
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !5670, file: !3, line: 3905, baseType: !3286, size: 64)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !5670, file: !3, line: 3906, baseType: !5124, size: 64, offset: 64)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "child_ar", scope: !5670, file: !3, line: 3906, baseType: !5124, size: 64, offset: 128)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "hidden", scope: !5670, file: !3, line: 3907, baseType: !1242, size: 32, offset: 192)
!5676 = !DILocation(line: 3921, column: 20, scope: !5667)
!5677 = !DILocation(line: 3921, column: 26, scope: !5667)
!5678 = !DILocation(line: 3921, column: 30, scope: !5667)
!5679 = !DILocation(line: 3921, column: 43, scope: !5667)
!5680 = !DILocalVariable(name: "alpha", scope: !5667, file: !3, line: 3922, type: !1407)
!5681 = !DILocation(line: 3922, column: 9, scope: !5667)
!5682 = !DILocation(line: 3924, column: 18, scope: !5667)
!5683 = !DILocation(line: 3924, column: 22, scope: !5667)
!5684 = !DILocation(line: 3924, column: 35, scope: !5667)
!5685 = !DILocation(line: 3924, column: 11, scope: !5667)
!5686 = !DILocation(line: 3924, column: 44, scope: !5667)
!5687 = !DILocation(line: 3924, column: 9, scope: !5667)
!5688 = !DILocation(line: 3926, column: 7, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 3926, column: 7)
!5690 = !DILocation(line: 3926, column: 12, scope: !5689)
!5691 = !DILocation(line: 3926, column: 7, scope: !5667)
!5692 = !DILocation(line: 3926, column: 46, scope: !5689)
!5693 = !DILocation(line: 3926, column: 44, scope: !5689)
!5694 = !DILocation(line: 3926, column: 26, scope: !5689)
!5695 = !DILocation(line: 3926, column: 20, scope: !5689)
!5696 = !DILocation(line: 3928, column: 3, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 3928, column: 3)
!5698 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 3928, column: 3)
!5699 = !DILocation(line: 3928, column: 3, scope: !5698)
!5700 = !DILocation(line: 3928, column: 3, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 3928, column: 3)
!5702 = !DILocation(line: 3929, column: 10, scope: !5667)
!5703 = !DILocation(line: 3929, column: 3, scope: !5667)
!5704 = !DILocation(line: 3931, column: 2, scope: !5640)
!5705 = !DILocation(line: 3932, column: 1, scope: !5640)
!5706 = distinct !DISubprogram(name: "region_blend_start", scope: !3, file: !3, line: 3962, type: !5707, scopeLine: 3963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5707 = !DISubroutineType(types: !5708)
!5708 = !{null, !3734, !3286, !5124}
!5709 = !DILocalVariable(name: "C", arg: 1, scope: !5706, file: !3, line: 3962, type: !3734)
!5710 = !DILocation(line: 3962, column: 35, scope: !5706)
!5711 = !DILocalVariable(name: "sa", arg: 2, scope: !5706, file: !3, line: 3962, type: !3286)
!5712 = !DILocation(line: 3962, column: 47, scope: !5706)
!5713 = !DILocalVariable(name: "ar", arg: 3, scope: !5706, file: !3, line: 3962, type: !5124)
!5714 = !DILocation(line: 3962, column: 60, scope: !5706)
!5715 = !DILocalVariable(name: "wm", scope: !5706, file: !3, line: 3964, type: !5716)
!5716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5531, size: 64)
!5717 = !DILocation(line: 3964, column: 19, scope: !5706)
!5718 = !DILocation(line: 3964, column: 39, scope: !5706)
!5719 = !DILocation(line: 3964, column: 24, scope: !5706)
!5720 = !DILocalVariable(name: "win", scope: !5706, file: !3, line: 3965, type: !5535)
!5721 = !DILocation(line: 3965, column: 12, scope: !5706)
!5722 = !DILocation(line: 3965, column: 32, scope: !5706)
!5723 = !DILocation(line: 3965, column: 18, scope: !5706)
!5724 = !DILocalVariable(name: "rgi", scope: !5706, file: !3, line: 3966, type: !5668)
!5725 = !DILocation(line: 3966, column: 19, scope: !5706)
!5726 = !DILocation(line: 3969, column: 6, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 3969, column: 6)
!5728 = !DILocation(line: 3969, column: 10, scope: !5727)
!5729 = !DILocation(line: 3969, column: 6, scope: !5706)
!5730 = !DILocation(line: 3971, column: 20, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 3969, column: 23)
!5732 = !DILocation(line: 3971, column: 23, scope: !5731)
!5733 = !DILocation(line: 3971, column: 3, scope: !5731)
!5734 = !DILocation(line: 3972, column: 2, scope: !5731)
!5735 = !DILocation(line: 3973, column: 8, scope: !5706)
!5736 = !DILocation(line: 3973, column: 6, scope: !5706)
!5737 = !DILocation(line: 3975, column: 16, scope: !5706)
!5738 = !DILocation(line: 3975, column: 20, scope: !5706)
!5739 = !DILocation(line: 3975, column: 25, scope: !5706)
!5740 = !DILocation(line: 3975, column: 2, scope: !5706)
!5741 = !DILocation(line: 3975, column: 7, scope: !5706)
!5742 = !DILocation(line: 3975, column: 14, scope: !5706)
!5743 = !DILocation(line: 3976, column: 12, scope: !5706)
!5744 = !DILocation(line: 3976, column: 2, scope: !5706)
!5745 = !DILocation(line: 3976, column: 7, scope: !5706)
!5746 = !DILocation(line: 3976, column: 10, scope: !5706)
!5747 = !DILocation(line: 3977, column: 12, scope: !5706)
!5748 = !DILocation(line: 3977, column: 2, scope: !5706)
!5749 = !DILocation(line: 3977, column: 7, scope: !5706)
!5750 = !DILocation(line: 3977, column: 10, scope: !5706)
!5751 = !DILocation(line: 3978, column: 2, scope: !5706)
!5752 = !DILocation(line: 3978, column: 6, scope: !5706)
!5753 = !DILocation(line: 3978, column: 11, scope: !5706)
!5754 = !DILocation(line: 3981, column: 6, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 3981, column: 6)
!5756 = !DILocation(line: 3981, column: 11, scope: !5755)
!5757 = !DILocation(line: 3981, column: 18, scope: !5755)
!5758 = !DILocation(line: 3981, column: 6, scope: !5706)
!5759 = !DILocation(line: 3982, column: 22, scope: !5755)
!5760 = !DILocation(line: 3982, column: 26, scope: !5755)
!5761 = !DILocation(line: 3982, column: 31, scope: !5755)
!5762 = !DILocation(line: 3982, column: 3, scope: !5755)
!5763 = !DILocation(line: 3984, column: 28, scope: !5755)
!5764 = !DILocation(line: 3984, column: 32, scope: !5755)
!5765 = !DILocation(line: 3984, column: 36, scope: !5755)
!5766 = !DILocation(line: 3984, column: 3, scope: !5755)
!5767 = !DILocation(line: 3986, column: 6, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 3986, column: 6)
!5769 = !DILocation(line: 3986, column: 10, scope: !5768)
!5770 = !DILocation(line: 3986, column: 6, scope: !5706)
!5771 = !DILocation(line: 3987, column: 7, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 3987, column: 7)
!5773 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 3986, column: 16)
!5774 = !DILocation(line: 3987, column: 11, scope: !5772)
!5775 = !DILocation(line: 3987, column: 17, scope: !5772)
!5776 = !DILocation(line: 3987, column: 27, scope: !5772)
!5777 = !DILocation(line: 3987, column: 7, scope: !5773)
!5778 = !DILocation(line: 3988, column: 20, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 3987, column: 45)
!5780 = !DILocation(line: 3988, column: 24, scope: !5779)
!5781 = !DILocation(line: 3988, column: 4, scope: !5779)
!5782 = !DILocation(line: 3988, column: 9, scope: !5779)
!5783 = !DILocation(line: 3988, column: 18, scope: !5779)
!5784 = !DILocation(line: 3989, column: 3, scope: !5779)
!5785 = !DILocation(line: 3990, column: 2, scope: !5773)
!5786 = !DILocation(line: 3993, column: 39, scope: !5706)
!5787 = !DILocation(line: 3993, column: 43, scope: !5706)
!5788 = !DILocation(line: 3993, column: 20, scope: !5706)
!5789 = !DILocation(line: 3993, column: 2, scope: !5706)
!5790 = !DILocation(line: 3993, column: 6, scope: !5706)
!5791 = !DILocation(line: 3993, column: 18, scope: !5706)
!5792 = !DILocation(line: 3994, column: 32, scope: !5706)
!5793 = !DILocation(line: 3994, column: 2, scope: !5706)
!5794 = !DILocation(line: 3994, column: 6, scope: !5706)
!5795 = !DILocation(line: 3994, column: 19, scope: !5706)
!5796 = !DILocation(line: 3994, column: 30, scope: !5706)
!5797 = !DILocation(line: 3996, column: 1, scope: !5706)
!5798 = distinct !DISubprogram(name: "region_blend_end", scope: !3, file: !3, line: 3935, type: !5799, scopeLine: 3936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5799 = !DISubroutineType(types: !5800)
!5800 = !{null, !3734, !5124, !5801}
!5801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2425)
!5802 = !DILocalVariable(name: "C", arg: 1, scope: !5798, file: !3, line: 3935, type: !3734)
!5803 = !DILocation(line: 3935, column: 40, scope: !5798)
!5804 = !DILocalVariable(name: "ar", arg: 2, scope: !5798, file: !3, line: 3935, type: !5124)
!5805 = !DILocation(line: 3935, column: 52, scope: !5798)
!5806 = !DILocalVariable(name: "is_running", arg: 3, scope: !5798, file: !3, line: 3935, type: !5801)
!5807 = !DILocation(line: 3935, column: 67, scope: !5798)
!5808 = !DILocalVariable(name: "rgi", scope: !5798, file: !3, line: 3937, type: !5668)
!5809 = !DILocation(line: 3937, column: 19, scope: !5798)
!5810 = !DILocation(line: 3937, column: 25, scope: !5798)
!5811 = !DILocation(line: 3937, column: 29, scope: !5798)
!5812 = !DILocation(line: 3937, column: 42, scope: !5798)
!5813 = !DILocation(line: 3940, column: 23, scope: !5798)
!5814 = !DILocation(line: 3940, column: 2, scope: !5798)
!5815 = !DILocation(line: 3941, column: 6, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 3941, column: 6)
!5817 = !DILocation(line: 3941, column: 11, scope: !5816)
!5818 = !DILocation(line: 3941, column: 6, scope: !5798)
!5819 = !DILocation(line: 3942, column: 24, scope: !5816)
!5820 = !DILocation(line: 3942, column: 29, scope: !5816)
!5821 = !DILocation(line: 3942, column: 3, scope: !5816)
!5822 = !DILocation(line: 3945, column: 6, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 3945, column: 6)
!5824 = !DILocation(line: 3945, column: 6, scope: !5798)
!5825 = !DILocation(line: 3946, column: 7, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 3946, column: 7)
!5827 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3945, column: 18)
!5828 = !DILocation(line: 3946, column: 12, scope: !5826)
!5829 = !DILocation(line: 3946, column: 7, scope: !5827)
!5830 = !DILocation(line: 3947, column: 4, scope: !5826)
!5831 = !DILocation(line: 3947, column: 9, scope: !5826)
!5832 = !DILocation(line: 3947, column: 13, scope: !5826)
!5833 = !DILocation(line: 3947, column: 18, scope: !5826)
!5834 = !DILocation(line: 3948, column: 2, scope: !5827)
!5835 = !DILocation(line: 3950, column: 7, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5837, file: !3, line: 3950, column: 7)
!5837 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3949, column: 7)
!5838 = !DILocation(line: 3950, column: 12, scope: !5836)
!5839 = !DILocation(line: 3950, column: 7, scope: !5837)
!5840 = !DILocation(line: 3951, column: 21, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5836, file: !3, line: 3950, column: 20)
!5842 = !DILocation(line: 3951, column: 26, scope: !5841)
!5843 = !DILocation(line: 3951, column: 4, scope: !5841)
!5844 = !DILocation(line: 3951, column: 9, scope: !5841)
!5845 = !DILocation(line: 3951, column: 13, scope: !5841)
!5846 = !DILocation(line: 3951, column: 18, scope: !5841)
!5847 = !DILocation(line: 3952, column: 38, scope: !5841)
!5848 = !DILocation(line: 3952, column: 23, scope: !5841)
!5849 = !DILocation(line: 3952, column: 56, scope: !5841)
!5850 = !DILocation(line: 3952, column: 42, scope: !5841)
!5851 = !DILocation(line: 3952, column: 60, scope: !5841)
!5852 = !DILocation(line: 3952, column: 65, scope: !5841)
!5853 = !DILocation(line: 3952, column: 4, scope: !5841)
!5854 = !DILocation(line: 3953, column: 3, scope: !5841)
!5855 = !DILocation(line: 3955, column: 22, scope: !5837)
!5856 = !DILocation(line: 3955, column: 27, scope: !5837)
!5857 = !DILocation(line: 3955, column: 3, scope: !5837)
!5858 = !DILocation(line: 3957, column: 39, scope: !5798)
!5859 = !DILocation(line: 3957, column: 24, scope: !5798)
!5860 = !DILocation(line: 3957, column: 49, scope: !5798)
!5861 = !DILocation(line: 3957, column: 53, scope: !5798)
!5862 = !DILocation(line: 3957, column: 2, scope: !5798)
!5863 = !DILocation(line: 3958, column: 2, scope: !5798)
!5864 = !DILocation(line: 3958, column: 6, scope: !5798)
!5865 = !DILocation(line: 3958, column: 18, scope: !5798)
!5866 = !DILocation(line: 3960, column: 1, scope: !5798)
!5867 = distinct !DISubprogram(name: "ED_operatortypes_screen", scope: !3, file: !3, line: 4045, type: !3539, scopeLine: 4046, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5868 = !DILocation(line: 4048, column: 2, scope: !5867)
!5869 = !DILocation(line: 4049, column: 2, scope: !5867)
!5870 = !DILocation(line: 4050, column: 2, scope: !5867)
!5871 = !DILocation(line: 4051, column: 2, scope: !5867)
!5872 = !DILocation(line: 4054, column: 2, scope: !5867)
!5873 = !DILocation(line: 4055, column: 2, scope: !5867)
!5874 = !DILocation(line: 4056, column: 2, scope: !5867)
!5875 = !DILocation(line: 4057, column: 2, scope: !5867)
!5876 = !DILocation(line: 4058, column: 2, scope: !5867)
!5877 = !DILocation(line: 4059, column: 2, scope: !5867)
!5878 = !DILocation(line: 4060, column: 2, scope: !5867)
!5879 = !DILocation(line: 4061, column: 2, scope: !5867)
!5880 = !DILocation(line: 4062, column: 2, scope: !5867)
!5881 = !DILocation(line: 4063, column: 2, scope: !5867)
!5882 = !DILocation(line: 4064, column: 2, scope: !5867)
!5883 = !DILocation(line: 4065, column: 2, scope: !5867)
!5884 = !DILocation(line: 4066, column: 2, scope: !5867)
!5885 = !DILocation(line: 4067, column: 2, scope: !5867)
!5886 = !DILocation(line: 4068, column: 2, scope: !5867)
!5887 = !DILocation(line: 4069, column: 2, scope: !5867)
!5888 = !DILocation(line: 4070, column: 2, scope: !5867)
!5889 = !DILocation(line: 4071, column: 2, scope: !5867)
!5890 = !DILocation(line: 4072, column: 2, scope: !5867)
!5891 = !DILocation(line: 4073, column: 2, scope: !5867)
!5892 = !DILocation(line: 4074, column: 2, scope: !5867)
!5893 = !DILocation(line: 4077, column: 2, scope: !5867)
!5894 = !DILocation(line: 4078, column: 2, scope: !5867)
!5895 = !DILocation(line: 4079, column: 2, scope: !5867)
!5896 = !DILocation(line: 4080, column: 2, scope: !5867)
!5897 = !DILocation(line: 4082, column: 2, scope: !5867)
!5898 = !DILocation(line: 4083, column: 2, scope: !5867)
!5899 = !DILocation(line: 4084, column: 2, scope: !5867)
!5900 = !DILocation(line: 4087, column: 2, scope: !5867)
!5901 = !DILocation(line: 4088, column: 2, scope: !5867)
!5902 = !DILocation(line: 4089, column: 2, scope: !5867)
!5903 = !DILocation(line: 4090, column: 2, scope: !5867)
!5904 = !DILocation(line: 4093, column: 2, scope: !5867)
!5905 = !DILocation(line: 4094, column: 2, scope: !5867)
!5906 = !DILocation(line: 4095, column: 2, scope: !5867)
!5907 = !DILocation(line: 4096, column: 2, scope: !5867)
!5908 = !DILocation(line: 4098, column: 1, scope: !5867)
!5909 = distinct !DISubprogram(name: "SCREEN_OT_actionzone", scope: !3, file: !3, line: 838, type: !3589, scopeLine: 839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5910 = !DILocalVariable(name: "ot", arg: 1, scope: !5909, file: !3, line: 838, type: !3591)
!5911 = !DILocation(line: 838, column: 50, scope: !5909)
!5912 = !DILocation(line: 841, column: 2, scope: !5909)
!5913 = !DILocation(line: 841, column: 6, scope: !5909)
!5914 = !DILocation(line: 841, column: 11, scope: !5909)
!5915 = !DILocation(line: 842, column: 2, scope: !5909)
!5916 = !DILocation(line: 842, column: 6, scope: !5909)
!5917 = !DILocation(line: 842, column: 18, scope: !5909)
!5918 = !DILocation(line: 843, column: 2, scope: !5909)
!5919 = !DILocation(line: 843, column: 6, scope: !5909)
!5920 = !DILocation(line: 843, column: 13, scope: !5909)
!5921 = !DILocation(line: 845, column: 2, scope: !5909)
!5922 = !DILocation(line: 845, column: 6, scope: !5909)
!5923 = !DILocation(line: 845, column: 13, scope: !5909)
!5924 = !DILocation(line: 846, column: 2, scope: !5909)
!5925 = !DILocation(line: 846, column: 6, scope: !5909)
!5926 = !DILocation(line: 846, column: 12, scope: !5909)
!5927 = !DILocation(line: 847, column: 2, scope: !5909)
!5928 = !DILocation(line: 847, column: 6, scope: !5909)
!5929 = !DILocation(line: 847, column: 11, scope: !5909)
!5930 = !DILocation(line: 848, column: 2, scope: !5909)
!5931 = !DILocation(line: 848, column: 6, scope: !5909)
!5932 = !DILocation(line: 848, column: 13, scope: !5909)
!5933 = !DILocation(line: 851, column: 2, scope: !5909)
!5934 = !DILocation(line: 851, column: 6, scope: !5909)
!5935 = !DILocation(line: 851, column: 11, scope: !5909)
!5936 = !DILocation(line: 853, column: 14, scope: !5909)
!5937 = !DILocation(line: 853, column: 18, scope: !5909)
!5938 = !DILocation(line: 853, column: 2, scope: !5909)
!5939 = !DILocation(line: 854, column: 1, scope: !5909)
!5940 = distinct !DISubprogram(name: "SCREEN_OT_repeat_last", scope: !3, file: !3, line: 2834, type: !3589, scopeLine: 2835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5941 = !DILocalVariable(name: "ot", arg: 1, scope: !5940, file: !3, line: 2834, type: !3591)
!5942 = !DILocation(line: 2834, column: 51, scope: !5940)
!5943 = !DILocation(line: 2837, column: 2, scope: !5940)
!5944 = !DILocation(line: 2837, column: 6, scope: !5940)
!5945 = !DILocation(line: 2837, column: 11, scope: !5940)
!5946 = !DILocation(line: 2838, column: 2, scope: !5940)
!5947 = !DILocation(line: 2838, column: 6, scope: !5940)
!5948 = !DILocation(line: 2838, column: 18, scope: !5940)
!5949 = !DILocation(line: 2839, column: 2, scope: !5940)
!5950 = !DILocation(line: 2839, column: 6, scope: !5940)
!5951 = !DILocation(line: 2839, column: 13, scope: !5940)
!5952 = !DILocation(line: 2842, column: 2, scope: !5940)
!5953 = !DILocation(line: 2842, column: 6, scope: !5940)
!5954 = !DILocation(line: 2842, column: 11, scope: !5940)
!5955 = !DILocation(line: 2844, column: 2, scope: !5940)
!5956 = !DILocation(line: 2844, column: 6, scope: !5940)
!5957 = !DILocation(line: 2844, column: 11, scope: !5940)
!5958 = !DILocation(line: 2846, column: 1, scope: !5940)
!5959 = distinct !DISubprogram(name: "SCREEN_OT_repeat_history", scope: !3, file: !3, line: 2888, type: !3589, scopeLine: 2889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5960 = !DILocalVariable(name: "ot", arg: 1, scope: !5959, file: !3, line: 2888, type: !3591)
!5961 = !DILocation(line: 2888, column: 54, scope: !5959)
!5962 = !DILocation(line: 2891, column: 2, scope: !5959)
!5963 = !DILocation(line: 2891, column: 6, scope: !5959)
!5964 = !DILocation(line: 2891, column: 11, scope: !5959)
!5965 = !DILocation(line: 2892, column: 2, scope: !5959)
!5966 = !DILocation(line: 2892, column: 6, scope: !5959)
!5967 = !DILocation(line: 2892, column: 18, scope: !5959)
!5968 = !DILocation(line: 2893, column: 2, scope: !5959)
!5969 = !DILocation(line: 2893, column: 6, scope: !5959)
!5970 = !DILocation(line: 2893, column: 13, scope: !5959)
!5971 = !DILocation(line: 2896, column: 2, scope: !5959)
!5972 = !DILocation(line: 2896, column: 6, scope: !5959)
!5973 = !DILocation(line: 2896, column: 13, scope: !5959)
!5974 = !DILocation(line: 2897, column: 2, scope: !5959)
!5975 = !DILocation(line: 2897, column: 6, scope: !5959)
!5976 = !DILocation(line: 2897, column: 11, scope: !5959)
!5977 = !DILocation(line: 2899, column: 2, scope: !5959)
!5978 = !DILocation(line: 2899, column: 6, scope: !5959)
!5979 = !DILocation(line: 2899, column: 11, scope: !5959)
!5980 = !DILocation(line: 2901, column: 14, scope: !5959)
!5981 = !DILocation(line: 2901, column: 18, scope: !5959)
!5982 = !DILocation(line: 2901, column: 2, scope: !5959)
!5983 = !DILocation(line: 2902, column: 1, scope: !5959)
!5984 = distinct !DISubprogram(name: "SCREEN_OT_redo_last", scope: !3, file: !3, line: 2916, type: !3589, scopeLine: 2917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!5985 = !DILocalVariable(name: "ot", arg: 1, scope: !5984, file: !3, line: 2916, type: !3591)
!5986 = !DILocation(line: 2916, column: 49, scope: !5984)
!5987 = !DILocation(line: 2919, column: 2, scope: !5984)
!5988 = !DILocation(line: 2919, column: 6, scope: !5984)
!5989 = !DILocation(line: 2919, column: 11, scope: !5984)
!5990 = !DILocation(line: 2920, column: 2, scope: !5984)
!5991 = !DILocation(line: 2920, column: 6, scope: !5984)
!5992 = !DILocation(line: 2920, column: 18, scope: !5984)
!5993 = !DILocation(line: 2921, column: 2, scope: !5984)
!5994 = !DILocation(line: 2921, column: 6, scope: !5984)
!5995 = !DILocation(line: 2921, column: 13, scope: !5984)
!5996 = !DILocation(line: 2924, column: 2, scope: !5984)
!5997 = !DILocation(line: 2924, column: 6, scope: !5984)
!5998 = !DILocation(line: 2924, column: 13, scope: !5984)
!5999 = !DILocation(line: 2926, column: 2, scope: !5984)
!6000 = !DILocation(line: 2926, column: 6, scope: !5984)
!6001 = !DILocation(line: 2926, column: 11, scope: !5984)
!6002 = !DILocation(line: 2927, column: 1, scope: !5984)
!6003 = distinct !DISubprogram(name: "SCREEN_OT_area_move", scope: !3, file: !3, line: 1313, type: !3589, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6004 = !DILocalVariable(name: "ot", arg: 1, scope: !6003, file: !3, line: 1313, type: !3591)
!6005 = !DILocation(line: 1313, column: 49, scope: !6003)
!6006 = !DILocation(line: 1316, column: 2, scope: !6003)
!6007 = !DILocation(line: 1316, column: 6, scope: !6003)
!6008 = !DILocation(line: 1316, column: 11, scope: !6003)
!6009 = !DILocation(line: 1317, column: 2, scope: !6003)
!6010 = !DILocation(line: 1317, column: 6, scope: !6003)
!6011 = !DILocation(line: 1317, column: 18, scope: !6003)
!6012 = !DILocation(line: 1318, column: 2, scope: !6003)
!6013 = !DILocation(line: 1318, column: 6, scope: !6003)
!6014 = !DILocation(line: 1318, column: 13, scope: !6003)
!6015 = !DILocation(line: 1320, column: 2, scope: !6003)
!6016 = !DILocation(line: 1320, column: 6, scope: !6003)
!6017 = !DILocation(line: 1320, column: 11, scope: !6003)
!6018 = !DILocation(line: 1321, column: 2, scope: !6003)
!6019 = !DILocation(line: 1321, column: 6, scope: !6003)
!6020 = !DILocation(line: 1321, column: 13, scope: !6003)
!6021 = !DILocation(line: 1322, column: 2, scope: !6003)
!6022 = !DILocation(line: 1322, column: 6, scope: !6003)
!6023 = !DILocation(line: 1322, column: 13, scope: !6003)
!6024 = !DILocation(line: 1323, column: 2, scope: !6003)
!6025 = !DILocation(line: 1323, column: 6, scope: !6003)
!6026 = !DILocation(line: 1323, column: 12, scope: !6003)
!6027 = !DILocation(line: 1324, column: 2, scope: !6003)
!6028 = !DILocation(line: 1324, column: 6, scope: !6003)
!6029 = !DILocation(line: 1324, column: 11, scope: !6003)
!6030 = !DILocation(line: 1327, column: 2, scope: !6003)
!6031 = !DILocation(line: 1327, column: 6, scope: !6003)
!6032 = !DILocation(line: 1327, column: 11, scope: !6003)
!6033 = !DILocation(line: 1330, column: 14, scope: !6003)
!6034 = !DILocation(line: 1330, column: 18, scope: !6003)
!6035 = !DILocation(line: 1330, column: 2, scope: !6003)
!6036 = !DILocation(line: 1331, column: 14, scope: !6003)
!6037 = !DILocation(line: 1331, column: 18, scope: !6003)
!6038 = !DILocation(line: 1331, column: 2, scope: !6003)
!6039 = !DILocation(line: 1332, column: 14, scope: !6003)
!6040 = !DILocation(line: 1332, column: 18, scope: !6003)
!6041 = !DILocation(line: 1332, column: 2, scope: !6003)
!6042 = !DILocation(line: 1333, column: 1, scope: !6003)
!6043 = distinct !DISubprogram(name: "SCREEN_OT_area_split", scope: !3, file: !3, line: 1767, type: !3589, scopeLine: 1768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6044 = !DILocalVariable(name: "ot", arg: 1, scope: !6043, file: !3, line: 1767, type: !3591)
!6045 = !DILocation(line: 1767, column: 50, scope: !6043)
!6046 = !DILocation(line: 1769, column: 2, scope: !6043)
!6047 = !DILocation(line: 1769, column: 6, scope: !6043)
!6048 = !DILocation(line: 1769, column: 11, scope: !6043)
!6049 = !DILocation(line: 1770, column: 2, scope: !6043)
!6050 = !DILocation(line: 1770, column: 6, scope: !6043)
!6051 = !DILocation(line: 1770, column: 18, scope: !6043)
!6052 = !DILocation(line: 1771, column: 2, scope: !6043)
!6053 = !DILocation(line: 1771, column: 6, scope: !6043)
!6054 = !DILocation(line: 1771, column: 13, scope: !6043)
!6055 = !DILocation(line: 1773, column: 2, scope: !6043)
!6056 = !DILocation(line: 1773, column: 6, scope: !6043)
!6057 = !DILocation(line: 1773, column: 11, scope: !6043)
!6058 = !DILocation(line: 1774, column: 2, scope: !6043)
!6059 = !DILocation(line: 1774, column: 6, scope: !6043)
!6060 = !DILocation(line: 1774, column: 13, scope: !6043)
!6061 = !DILocation(line: 1775, column: 2, scope: !6043)
!6062 = !DILocation(line: 1775, column: 6, scope: !6043)
!6063 = !DILocation(line: 1775, column: 12, scope: !6043)
!6064 = !DILocation(line: 1776, column: 2, scope: !6043)
!6065 = !DILocation(line: 1776, column: 6, scope: !6043)
!6066 = !DILocation(line: 1776, column: 13, scope: !6043)
!6067 = !DILocation(line: 1778, column: 2, scope: !6043)
!6068 = !DILocation(line: 1778, column: 6, scope: !6043)
!6069 = !DILocation(line: 1778, column: 11, scope: !6043)
!6070 = !DILocation(line: 1781, column: 2, scope: !6043)
!6071 = !DILocation(line: 1781, column: 6, scope: !6043)
!6072 = !DILocation(line: 1781, column: 11, scope: !6043)
!6073 = !DILocation(line: 1784, column: 15, scope: !6043)
!6074 = !DILocation(line: 1784, column: 19, scope: !6043)
!6075 = !DILocation(line: 1784, column: 2, scope: !6043)
!6076 = !DILocation(line: 1785, column: 16, scope: !6043)
!6077 = !DILocation(line: 1785, column: 20, scope: !6043)
!6078 = !DILocation(line: 1785, column: 2, scope: !6043)
!6079 = !DILocation(line: 1786, column: 14, scope: !6043)
!6080 = !DILocation(line: 1786, column: 18, scope: !6043)
!6081 = !DILocation(line: 1786, column: 2, scope: !6043)
!6082 = !DILocation(line: 1787, column: 14, scope: !6043)
!6083 = !DILocation(line: 1787, column: 18, scope: !6043)
!6084 = !DILocation(line: 1787, column: 2, scope: !6043)
!6085 = !DILocation(line: 1788, column: 1, scope: !6043)
!6086 = distinct !DISubprogram(name: "SCREEN_OT_area_join", scope: !3, file: !3, line: 2699, type: !3589, scopeLine: 2700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6087 = !DILocalVariable(name: "ot", arg: 1, scope: !6086, file: !3, line: 2699, type: !3591)
!6088 = !DILocation(line: 2699, column: 49, scope: !6086)
!6089 = !DILocation(line: 2702, column: 2, scope: !6086)
!6090 = !DILocation(line: 2702, column: 6, scope: !6086)
!6091 = !DILocation(line: 2702, column: 11, scope: !6086)
!6092 = !DILocation(line: 2703, column: 2, scope: !6086)
!6093 = !DILocation(line: 2703, column: 6, scope: !6086)
!6094 = !DILocation(line: 2703, column: 18, scope: !6086)
!6095 = !DILocation(line: 2704, column: 2, scope: !6086)
!6096 = !DILocation(line: 2704, column: 6, scope: !6086)
!6097 = !DILocation(line: 2704, column: 13, scope: !6086)
!6098 = !DILocation(line: 2707, column: 2, scope: !6086)
!6099 = !DILocation(line: 2707, column: 6, scope: !6086)
!6100 = !DILocation(line: 2707, column: 11, scope: !6086)
!6101 = !DILocation(line: 2708, column: 2, scope: !6086)
!6102 = !DILocation(line: 2708, column: 6, scope: !6086)
!6103 = !DILocation(line: 2708, column: 13, scope: !6086)
!6104 = !DILocation(line: 2709, column: 2, scope: !6086)
!6105 = !DILocation(line: 2709, column: 6, scope: !6086)
!6106 = !DILocation(line: 2709, column: 12, scope: !6086)
!6107 = !DILocation(line: 2710, column: 2, scope: !6086)
!6108 = !DILocation(line: 2710, column: 6, scope: !6086)
!6109 = !DILocation(line: 2710, column: 11, scope: !6086)
!6110 = !DILocation(line: 2711, column: 2, scope: !6086)
!6111 = !DILocation(line: 2711, column: 6, scope: !6086)
!6112 = !DILocation(line: 2711, column: 13, scope: !6086)
!6113 = !DILocation(line: 2714, column: 2, scope: !6086)
!6114 = !DILocation(line: 2714, column: 6, scope: !6086)
!6115 = !DILocation(line: 2714, column: 11, scope: !6086)
!6116 = !DILocation(line: 2717, column: 14, scope: !6086)
!6117 = !DILocation(line: 2717, column: 18, scope: !6086)
!6118 = !DILocation(line: 2717, column: 2, scope: !6086)
!6119 = !DILocation(line: 2718, column: 14, scope: !6086)
!6120 = !DILocation(line: 2718, column: 18, scope: !6086)
!6121 = !DILocation(line: 2718, column: 2, scope: !6086)
!6122 = !DILocation(line: 2719, column: 14, scope: !6086)
!6123 = !DILocation(line: 2719, column: 18, scope: !6086)
!6124 = !DILocation(line: 2719, column: 2, scope: !6086)
!6125 = !DILocation(line: 2720, column: 14, scope: !6086)
!6126 = !DILocation(line: 2720, column: 18, scope: !6086)
!6127 = !DILocation(line: 2720, column: 2, scope: !6086)
!6128 = !DILocation(line: 2721, column: 1, scope: !6086)
!6129 = distinct !DISubprogram(name: "SCREEN_OT_area_options", scope: !3, file: !3, line: 2765, type: !3589, scopeLine: 2766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6130 = !DILocalVariable(name: "ot", arg: 1, scope: !6129, file: !3, line: 2765, type: !3591)
!6131 = !DILocation(line: 2765, column: 52, scope: !6129)
!6132 = !DILocation(line: 2768, column: 2, scope: !6129)
!6133 = !DILocation(line: 2768, column: 6, scope: !6129)
!6134 = !DILocation(line: 2768, column: 11, scope: !6129)
!6135 = !DILocation(line: 2769, column: 2, scope: !6129)
!6136 = !DILocation(line: 2769, column: 6, scope: !6129)
!6137 = !DILocation(line: 2769, column: 18, scope: !6129)
!6138 = !DILocation(line: 2770, column: 2, scope: !6129)
!6139 = !DILocation(line: 2770, column: 6, scope: !6129)
!6140 = !DILocation(line: 2770, column: 13, scope: !6129)
!6141 = !DILocation(line: 2773, column: 2, scope: !6129)
!6142 = !DILocation(line: 2773, column: 6, scope: !6129)
!6143 = !DILocation(line: 2773, column: 13, scope: !6129)
!6144 = !DILocation(line: 2775, column: 2, scope: !6129)
!6145 = !DILocation(line: 2775, column: 6, scope: !6129)
!6146 = !DILocation(line: 2775, column: 11, scope: !6129)
!6147 = !DILocation(line: 2778, column: 2, scope: !6129)
!6148 = !DILocation(line: 2778, column: 6, scope: !6129)
!6149 = !DILocation(line: 2778, column: 11, scope: !6129)
!6150 = !DILocation(line: 2779, column: 1, scope: !6129)
!6151 = distinct !DISubprogram(name: "SCREEN_OT_area_dupli", scope: !3, file: !3, line: 1026, type: !3589, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6152 = !DILocalVariable(name: "ot", arg: 1, scope: !6151, file: !3, line: 1026, type: !3591)
!6153 = !DILocation(line: 1026, column: 50, scope: !6151)
!6154 = !DILocation(line: 1028, column: 2, scope: !6151)
!6155 = !DILocation(line: 1028, column: 6, scope: !6151)
!6156 = !DILocation(line: 1028, column: 11, scope: !6151)
!6157 = !DILocation(line: 1029, column: 2, scope: !6151)
!6158 = !DILocation(line: 1029, column: 6, scope: !6151)
!6159 = !DILocation(line: 1029, column: 18, scope: !6151)
!6160 = !DILocation(line: 1030, column: 2, scope: !6151)
!6161 = !DILocation(line: 1030, column: 6, scope: !6151)
!6162 = !DILocation(line: 1030, column: 13, scope: !6151)
!6163 = !DILocation(line: 1032, column: 2, scope: !6151)
!6164 = !DILocation(line: 1032, column: 6, scope: !6151)
!6165 = !DILocation(line: 1032, column: 13, scope: !6151)
!6166 = !DILocation(line: 1033, column: 2, scope: !6151)
!6167 = !DILocation(line: 1033, column: 6, scope: !6151)
!6168 = !DILocation(line: 1033, column: 11, scope: !6151)
!6169 = !DILocation(line: 1034, column: 1, scope: !6151)
!6170 = distinct !DISubprogram(name: "SCREEN_OT_area_swap", scope: !3, file: !3, line: 962, type: !3589, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6171 = !DILocalVariable(name: "ot", arg: 1, scope: !6170, file: !3, line: 962, type: !3591)
!6172 = !DILocation(line: 962, column: 49, scope: !6170)
!6173 = !DILocation(line: 964, column: 2, scope: !6170)
!6174 = !DILocation(line: 964, column: 6, scope: !6170)
!6175 = !DILocation(line: 964, column: 11, scope: !6170)
!6176 = !DILocation(line: 965, column: 2, scope: !6170)
!6177 = !DILocation(line: 965, column: 6, scope: !6170)
!6178 = !DILocation(line: 965, column: 18, scope: !6170)
!6179 = !DILocation(line: 966, column: 2, scope: !6170)
!6180 = !DILocation(line: 966, column: 6, scope: !6170)
!6181 = !DILocation(line: 966, column: 13, scope: !6170)
!6182 = !DILocation(line: 968, column: 2, scope: !6170)
!6183 = !DILocation(line: 968, column: 6, scope: !6170)
!6184 = !DILocation(line: 968, column: 13, scope: !6170)
!6185 = !DILocation(line: 969, column: 2, scope: !6170)
!6186 = !DILocation(line: 969, column: 6, scope: !6170)
!6187 = !DILocation(line: 969, column: 12, scope: !6170)
!6188 = !DILocation(line: 970, column: 2, scope: !6170)
!6189 = !DILocation(line: 970, column: 6, scope: !6170)
!6190 = !DILocation(line: 970, column: 11, scope: !6170)
!6191 = !DILocation(line: 971, column: 2, scope: !6170)
!6192 = !DILocation(line: 971, column: 6, scope: !6170)
!6193 = !DILocation(line: 971, column: 13, scope: !6170)
!6194 = !DILocation(line: 973, column: 2, scope: !6170)
!6195 = !DILocation(line: 973, column: 6, scope: !6170)
!6196 = !DILocation(line: 973, column: 11, scope: !6170)
!6197 = !DILocation(line: 974, column: 1, scope: !6170)
!6198 = distinct !DISubprogram(name: "SCREEN_OT_region_quadview", scope: !3, file: !3, line: 3069, type: !3589, scopeLine: 3070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6199 = !DILocalVariable(name: "ot", arg: 1, scope: !6198, file: !3, line: 3069, type: !3591)
!6200 = !DILocation(line: 3069, column: 55, scope: !6198)
!6201 = !DILocation(line: 3072, column: 2, scope: !6198)
!6202 = !DILocation(line: 3072, column: 6, scope: !6198)
!6203 = !DILocation(line: 3072, column: 11, scope: !6198)
!6204 = !DILocation(line: 3073, column: 2, scope: !6198)
!6205 = !DILocation(line: 3073, column: 6, scope: !6198)
!6206 = !DILocation(line: 3073, column: 18, scope: !6198)
!6207 = !DILocation(line: 3074, column: 2, scope: !6198)
!6208 = !DILocation(line: 3074, column: 6, scope: !6198)
!6209 = !DILocation(line: 3074, column: 13, scope: !6198)
!6210 = !DILocation(line: 3077, column: 2, scope: !6198)
!6211 = !DILocation(line: 3077, column: 6, scope: !6198)
!6212 = !DILocation(line: 3077, column: 11, scope: !6198)
!6213 = !DILocation(line: 3078, column: 2, scope: !6198)
!6214 = !DILocation(line: 3078, column: 6, scope: !6198)
!6215 = !DILocation(line: 3078, column: 11, scope: !6198)
!6216 = !DILocation(line: 3079, column: 2, scope: !6198)
!6217 = !DILocation(line: 3079, column: 6, scope: !6198)
!6218 = !DILocation(line: 3079, column: 11, scope: !6198)
!6219 = !DILocation(line: 3080, column: 1, scope: !6198)
!6220 = distinct !DISubprogram(name: "SCREEN_OT_region_scale", scope: !3, file: !3, line: 2038, type: !3589, scopeLine: 2039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6221 = !DILocalVariable(name: "ot", arg: 1, scope: !6220, file: !3, line: 2038, type: !3591)
!6222 = !DILocation(line: 2038, column: 52, scope: !6220)
!6223 = !DILocation(line: 2041, column: 2, scope: !6220)
!6224 = !DILocation(line: 2041, column: 6, scope: !6220)
!6225 = !DILocation(line: 2041, column: 11, scope: !6220)
!6226 = !DILocation(line: 2042, column: 2, scope: !6220)
!6227 = !DILocation(line: 2042, column: 6, scope: !6220)
!6228 = !DILocation(line: 2042, column: 18, scope: !6220)
!6229 = !DILocation(line: 2043, column: 2, scope: !6220)
!6230 = !DILocation(line: 2043, column: 6, scope: !6220)
!6231 = !DILocation(line: 2043, column: 13, scope: !6220)
!6232 = !DILocation(line: 2045, column: 2, scope: !6220)
!6233 = !DILocation(line: 2045, column: 6, scope: !6220)
!6234 = !DILocation(line: 2045, column: 13, scope: !6220)
!6235 = !DILocation(line: 2046, column: 2, scope: !6220)
!6236 = !DILocation(line: 2046, column: 6, scope: !6220)
!6237 = !DILocation(line: 2046, column: 12, scope: !6220)
!6238 = !DILocation(line: 2047, column: 2, scope: !6220)
!6239 = !DILocation(line: 2047, column: 6, scope: !6220)
!6240 = !DILocation(line: 2047, column: 13, scope: !6220)
!6241 = !DILocation(line: 2049, column: 2, scope: !6220)
!6242 = !DILocation(line: 2049, column: 6, scope: !6220)
!6243 = !DILocation(line: 2049, column: 11, scope: !6220)
!6244 = !DILocation(line: 2052, column: 2, scope: !6220)
!6245 = !DILocation(line: 2052, column: 6, scope: !6220)
!6246 = !DILocation(line: 2052, column: 11, scope: !6220)
!6247 = !DILocation(line: 2053, column: 1, scope: !6220)
!6248 = distinct !DISubprogram(name: "SCREEN_OT_region_flip", scope: !3, file: !3, line: 3109, type: !3589, scopeLine: 3110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6249 = !DILocalVariable(name: "ot", arg: 1, scope: !6248, file: !3, line: 3109, type: !3591)
!6250 = !DILocation(line: 3109, column: 51, scope: !6248)
!6251 = !DILocation(line: 3112, column: 2, scope: !6248)
!6252 = !DILocation(line: 3112, column: 6, scope: !6248)
!6253 = !DILocation(line: 3112, column: 11, scope: !6248)
!6254 = !DILocation(line: 3113, column: 2, scope: !6248)
!6255 = !DILocation(line: 3113, column: 6, scope: !6248)
!6256 = !DILocation(line: 3113, column: 13, scope: !6248)
!6257 = !DILocation(line: 3114, column: 2, scope: !6248)
!6258 = !DILocation(line: 3114, column: 6, scope: !6248)
!6259 = !DILocation(line: 3114, column: 18, scope: !6248)
!6260 = !DILocation(line: 3117, column: 2, scope: !6248)
!6261 = !DILocation(line: 3117, column: 6, scope: !6248)
!6262 = !DILocation(line: 3117, column: 11, scope: !6248)
!6263 = !DILocation(line: 3118, column: 2, scope: !6248)
!6264 = !DILocation(line: 3118, column: 6, scope: !6248)
!6265 = !DILocation(line: 3118, column: 11, scope: !6248)
!6266 = !DILocation(line: 3119, column: 2, scope: !6248)
!6267 = !DILocation(line: 3119, column: 6, scope: !6248)
!6268 = !DILocation(line: 3119, column: 11, scope: !6248)
!6269 = !DILocation(line: 3120, column: 1, scope: !6248)
!6270 = distinct !DISubprogram(name: "SCREEN_OT_header_flip", scope: !3, file: !3, line: 3180, type: !3589, scopeLine: 3181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6271 = !DILocalVariable(name: "ot", arg: 1, scope: !6270, file: !3, line: 3180, type: !3591)
!6272 = !DILocation(line: 3180, column: 51, scope: !6270)
!6273 = !DILocation(line: 3183, column: 2, scope: !6270)
!6274 = !DILocation(line: 3183, column: 6, scope: !6270)
!6275 = !DILocation(line: 3183, column: 11, scope: !6270)
!6276 = !DILocation(line: 3184, column: 2, scope: !6270)
!6277 = !DILocation(line: 3184, column: 6, scope: !6270)
!6278 = !DILocation(line: 3184, column: 13, scope: !6270)
!6279 = !DILocation(line: 3185, column: 2, scope: !6270)
!6280 = !DILocation(line: 3185, column: 6, scope: !6270)
!6281 = !DILocation(line: 3185, column: 18, scope: !6270)
!6282 = !DILocation(line: 3188, column: 2, scope: !6270)
!6283 = !DILocation(line: 3188, column: 6, scope: !6270)
!6284 = !DILocation(line: 3188, column: 11, scope: !6270)
!6285 = !DILocation(line: 3190, column: 2, scope: !6270)
!6286 = !DILocation(line: 3190, column: 6, scope: !6270)
!6287 = !DILocation(line: 3190, column: 11, scope: !6270)
!6288 = !DILocation(line: 3191, column: 2, scope: !6270)
!6289 = !DILocation(line: 3191, column: 6, scope: !6270)
!6290 = !DILocation(line: 3191, column: 11, scope: !6270)
!6291 = !DILocation(line: 3192, column: 1, scope: !6270)
!6292 = distinct !DISubprogram(name: "SCREEN_OT_header", scope: !3, file: !3, line: 3140, type: !3589, scopeLine: 3141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6293 = !DILocalVariable(name: "ot", arg: 1, scope: !6292, file: !3, line: 3140, type: !3591)
!6294 = !DILocation(line: 3140, column: 46, scope: !6292)
!6295 = !DILocation(line: 3143, column: 2, scope: !6292)
!6296 = !DILocation(line: 3143, column: 6, scope: !6292)
!6297 = !DILocation(line: 3143, column: 11, scope: !6292)
!6298 = !DILocation(line: 3144, column: 2, scope: !6292)
!6299 = !DILocation(line: 3144, column: 6, scope: !6292)
!6300 = !DILocation(line: 3144, column: 18, scope: !6292)
!6301 = !DILocation(line: 3145, column: 2, scope: !6292)
!6302 = !DILocation(line: 3145, column: 6, scope: !6292)
!6303 = !DILocation(line: 3145, column: 13, scope: !6292)
!6304 = !DILocation(line: 3148, column: 2, scope: !6292)
!6305 = !DILocation(line: 3148, column: 6, scope: !6292)
!6306 = !DILocation(line: 3148, column: 11, scope: !6292)
!6307 = !DILocation(line: 3149, column: 1, scope: !6292)
!6308 = distinct !DISubprogram(name: "SCREEN_OT_header_toggle_menus", scope: !3, file: !3, line: 3212, type: !3589, scopeLine: 3213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6309 = !DILocalVariable(name: "ot", arg: 1, scope: !6308, file: !3, line: 3212, type: !3591)
!6310 = !DILocation(line: 3212, column: 59, scope: !6308)
!6311 = !DILocation(line: 3215, column: 2, scope: !6308)
!6312 = !DILocation(line: 3215, column: 6, scope: !6308)
!6313 = !DILocation(line: 3215, column: 11, scope: !6308)
!6314 = !DILocation(line: 3216, column: 2, scope: !6308)
!6315 = !DILocation(line: 3216, column: 6, scope: !6308)
!6316 = !DILocation(line: 3216, column: 13, scope: !6308)
!6317 = !DILocation(line: 3217, column: 2, scope: !6308)
!6318 = !DILocation(line: 3217, column: 6, scope: !6308)
!6319 = !DILocation(line: 3217, column: 18, scope: !6308)
!6320 = !DILocation(line: 3220, column: 2, scope: !6308)
!6321 = !DILocation(line: 3220, column: 6, scope: !6308)
!6322 = !DILocation(line: 3220, column: 11, scope: !6308)
!6323 = !DILocation(line: 3221, column: 2, scope: !6308)
!6324 = !DILocation(line: 3221, column: 6, scope: !6308)
!6325 = !DILocation(line: 3221, column: 11, scope: !6308)
!6326 = !DILocation(line: 3222, column: 2, scope: !6308)
!6327 = !DILocation(line: 3222, column: 6, scope: !6308)
!6328 = !DILocation(line: 3222, column: 11, scope: !6308)
!6329 = !DILocation(line: 3223, column: 1, scope: !6308)
!6330 = distinct !DISubprogram(name: "SCREEN_OT_header_toolbox", scope: !3, file: !3, line: 3268, type: !3589, scopeLine: 3269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6331 = !DILocalVariable(name: "ot", arg: 1, scope: !6330, file: !3, line: 3268, type: !3591)
!6332 = !DILocation(line: 3268, column: 54, scope: !6330)
!6333 = !DILocation(line: 3271, column: 2, scope: !6330)
!6334 = !DILocation(line: 3271, column: 6, scope: !6330)
!6335 = !DILocation(line: 3271, column: 11, scope: !6330)
!6336 = !DILocation(line: 3272, column: 2, scope: !6330)
!6337 = !DILocation(line: 3272, column: 6, scope: !6330)
!6338 = !DILocation(line: 3272, column: 18, scope: !6330)
!6339 = !DILocation(line: 3273, column: 2, scope: !6330)
!6340 = !DILocation(line: 3273, column: 6, scope: !6330)
!6341 = !DILocation(line: 3273, column: 13, scope: !6330)
!6342 = !DILocation(line: 3276, column: 2, scope: !6330)
!6343 = !DILocation(line: 3276, column: 6, scope: !6330)
!6344 = !DILocation(line: 3276, column: 13, scope: !6330)
!6345 = !DILocation(line: 3277, column: 1, scope: !6330)
!6346 = distinct !DISubprogram(name: "SCREEN_OT_screen_set", scope: !3, file: !3, line: 2364, type: !3589, scopeLine: 2365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6347 = !DILocalVariable(name: "ot", arg: 1, scope: !6346, file: !3, line: 2364, type: !3591)
!6348 = !DILocation(line: 2364, column: 50, scope: !6346)
!6349 = !DILocation(line: 2366, column: 2, scope: !6346)
!6350 = !DILocation(line: 2366, column: 6, scope: !6346)
!6351 = !DILocation(line: 2366, column: 11, scope: !6346)
!6352 = !DILocation(line: 2367, column: 2, scope: !6346)
!6353 = !DILocation(line: 2367, column: 6, scope: !6346)
!6354 = !DILocation(line: 2367, column: 18, scope: !6346)
!6355 = !DILocation(line: 2368, column: 2, scope: !6346)
!6356 = !DILocation(line: 2368, column: 6, scope: !6346)
!6357 = !DILocation(line: 2368, column: 13, scope: !6346)
!6358 = !DILocation(line: 2370, column: 2, scope: !6346)
!6359 = !DILocation(line: 2370, column: 6, scope: !6346)
!6360 = !DILocation(line: 2370, column: 11, scope: !6346)
!6361 = !DILocation(line: 2371, column: 2, scope: !6346)
!6362 = !DILocation(line: 2371, column: 6, scope: !6346)
!6363 = !DILocation(line: 2371, column: 11, scope: !6346)
!6364 = !DILocation(line: 2374, column: 14, scope: !6346)
!6365 = !DILocation(line: 2374, column: 18, scope: !6346)
!6366 = !DILocation(line: 2374, column: 2, scope: !6346)
!6367 = !DILocation(line: 2375, column: 1, scope: !6346)
!6368 = distinct !DISubprogram(name: "SCREEN_OT_screen_full_area", scope: !3, file: !3, line: 2413, type: !3589, scopeLine: 2414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6369 = !DILocalVariable(name: "ot", arg: 1, scope: !6368, file: !3, line: 2413, type: !3591)
!6370 = !DILocation(line: 2413, column: 56, scope: !6368)
!6371 = !DILocalVariable(name: "prop", scope: !6368, file: !3, line: 2415, type: !3657)
!6372 = !DILocation(line: 2415, column: 15, scope: !6368)
!6373 = !DILocation(line: 2417, column: 2, scope: !6368)
!6374 = !DILocation(line: 2417, column: 6, scope: !6368)
!6375 = !DILocation(line: 2417, column: 11, scope: !6368)
!6376 = !DILocation(line: 2418, column: 2, scope: !6368)
!6377 = !DILocation(line: 2418, column: 6, scope: !6368)
!6378 = !DILocation(line: 2418, column: 18, scope: !6368)
!6379 = !DILocation(line: 2419, column: 2, scope: !6368)
!6380 = !DILocation(line: 2419, column: 6, scope: !6368)
!6381 = !DILocation(line: 2419, column: 13, scope: !6368)
!6382 = !DILocation(line: 2421, column: 2, scope: !6368)
!6383 = !DILocation(line: 2421, column: 6, scope: !6368)
!6384 = !DILocation(line: 2421, column: 11, scope: !6368)
!6385 = !DILocation(line: 2422, column: 2, scope: !6368)
!6386 = !DILocation(line: 2422, column: 6, scope: !6368)
!6387 = !DILocation(line: 2422, column: 11, scope: !6368)
!6388 = !DILocation(line: 2423, column: 2, scope: !6368)
!6389 = !DILocation(line: 2423, column: 6, scope: !6368)
!6390 = !DILocation(line: 2423, column: 11, scope: !6368)
!6391 = !DILocation(line: 2425, column: 25, scope: !6368)
!6392 = !DILocation(line: 2425, column: 29, scope: !6368)
!6393 = !DILocation(line: 2425, column: 9, scope: !6368)
!6394 = !DILocation(line: 2425, column: 7, scope: !6368)
!6395 = !DILocation(line: 2426, column: 24, scope: !6368)
!6396 = !DILocation(line: 2426, column: 2, scope: !6368)
!6397 = !DILocation(line: 2427, column: 1, scope: !6368)
!6398 = distinct !DISubprogram(name: "SCREEN_OT_back_to_previous", scope: !3, file: !3, line: 3715, type: !6399, scopeLine: 3716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{null, !3612}
!6401 = !DILocalVariable(name: "ot", arg: 1, scope: !6398, file: !3, line: 3715, type: !3612)
!6402 = !DILocation(line: 3715, column: 63, scope: !6398)
!6403 = !DILocation(line: 3718, column: 2, scope: !6398)
!6404 = !DILocation(line: 3718, column: 6, scope: !6398)
!6405 = !DILocation(line: 3718, column: 11, scope: !6398)
!6406 = !DILocation(line: 3719, column: 2, scope: !6398)
!6407 = !DILocation(line: 3719, column: 6, scope: !6398)
!6408 = !DILocation(line: 3719, column: 18, scope: !6398)
!6409 = !DILocation(line: 3720, column: 2, scope: !6398)
!6410 = !DILocation(line: 3720, column: 6, scope: !6398)
!6411 = !DILocation(line: 3720, column: 13, scope: !6398)
!6412 = !DILocation(line: 3723, column: 2, scope: !6398)
!6413 = !DILocation(line: 3723, column: 6, scope: !6398)
!6414 = !DILocation(line: 3723, column: 11, scope: !6398)
!6415 = !DILocation(line: 3724, column: 2, scope: !6398)
!6416 = !DILocation(line: 3724, column: 6, scope: !6398)
!6417 = !DILocation(line: 3724, column: 11, scope: !6398)
!6418 = !DILocation(line: 3725, column: 1, scope: !6398)
!6419 = distinct !DISubprogram(name: "SCREEN_OT_spacedata_cleanup", scope: !3, file: !3, line: 2809, type: !3589, scopeLine: 2810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6420 = !DILocalVariable(name: "ot", arg: 1, scope: !6419, file: !3, line: 2809, type: !3591)
!6421 = !DILocation(line: 2809, column: 57, scope: !6419)
!6422 = !DILocation(line: 2812, column: 2, scope: !6419)
!6423 = !DILocation(line: 2812, column: 6, scope: !6419)
!6424 = !DILocation(line: 2812, column: 11, scope: !6419)
!6425 = !DILocation(line: 2813, column: 2, scope: !6419)
!6426 = !DILocation(line: 2813, column: 6, scope: !6419)
!6427 = !DILocation(line: 2813, column: 18, scope: !6419)
!6428 = !DILocation(line: 2814, column: 2, scope: !6419)
!6429 = !DILocation(line: 2814, column: 6, scope: !6419)
!6430 = !DILocation(line: 2814, column: 13, scope: !6419)
!6431 = !DILocation(line: 2817, column: 2, scope: !6419)
!6432 = !DILocation(line: 2817, column: 6, scope: !6419)
!6433 = !DILocation(line: 2817, column: 11, scope: !6419)
!6434 = !DILocation(line: 2818, column: 2, scope: !6419)
!6435 = !DILocation(line: 2818, column: 6, scope: !6419)
!6436 = !DILocation(line: 2818, column: 11, scope: !6419)
!6437 = !DILocation(line: 2820, column: 1, scope: !6419)
!6438 = distinct !DISubprogram(name: "SCREEN_OT_userpref_show", scope: !3, file: !3, line: 3752, type: !6399, scopeLine: 3753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6439 = !DILocalVariable(name: "ot", arg: 1, scope: !6438, file: !3, line: 3752, type: !3612)
!6440 = !DILocation(line: 3752, column: 60, scope: !6438)
!6441 = !DILocation(line: 3755, column: 2, scope: !6438)
!6442 = !DILocation(line: 3755, column: 6, scope: !6438)
!6443 = !DILocation(line: 3755, column: 11, scope: !6438)
!6444 = !DILocation(line: 3756, column: 2, scope: !6438)
!6445 = !DILocation(line: 3756, column: 6, scope: !6438)
!6446 = !DILocation(line: 3756, column: 18, scope: !6438)
!6447 = !DILocation(line: 3757, column: 2, scope: !6438)
!6448 = !DILocation(line: 3757, column: 6, scope: !6438)
!6449 = !DILocation(line: 3757, column: 13, scope: !6438)
!6450 = !DILocation(line: 3760, column: 2, scope: !6438)
!6451 = !DILocation(line: 3760, column: 6, scope: !6438)
!6452 = !DILocation(line: 3760, column: 13, scope: !6438)
!6453 = !DILocation(line: 3761, column: 2, scope: !6438)
!6454 = !DILocation(line: 3761, column: 6, scope: !6438)
!6455 = !DILocation(line: 3761, column: 11, scope: !6438)
!6456 = !DILocation(line: 3762, column: 1, scope: !6438)
!6457 = distinct !DISubprogram(name: "SCREEN_OT_region_blend", scope: !3, file: !3, line: 4024, type: !3589, scopeLine: 4025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6458 = !DILocalVariable(name: "ot", arg: 1, scope: !6457, file: !3, line: 4024, type: !3591)
!6459 = !DILocation(line: 4024, column: 52, scope: !6457)
!6460 = !DILocation(line: 4027, column: 2, scope: !6457)
!6461 = !DILocation(line: 4027, column: 6, scope: !6457)
!6462 = !DILocation(line: 4027, column: 11, scope: !6457)
!6463 = !DILocation(line: 4028, column: 2, scope: !6457)
!6464 = !DILocation(line: 4028, column: 6, scope: !6457)
!6465 = !DILocation(line: 4028, column: 13, scope: !6457)
!6466 = !DILocation(line: 4029, column: 2, scope: !6457)
!6467 = !DILocation(line: 4029, column: 6, scope: !6457)
!6468 = !DILocation(line: 4029, column: 18, scope: !6457)
!6469 = !DILocation(line: 4032, column: 2, scope: !6457)
!6470 = !DILocation(line: 4032, column: 6, scope: !6457)
!6471 = !DILocation(line: 4032, column: 13, scope: !6457)
!6472 = !DILocation(line: 4035, column: 2, scope: !6457)
!6473 = !DILocation(line: 4035, column: 6, scope: !6457)
!6474 = !DILocation(line: 4035, column: 11, scope: !6457)
!6475 = !DILocation(line: 4038, column: 1, scope: !6457)
!6476 = distinct !DISubprogram(name: "SCREEN_OT_frame_offset", scope: !3, file: !3, line: 2078, type: !3589, scopeLine: 2079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6477 = !DILocalVariable(name: "ot", arg: 1, scope: !6476, file: !3, line: 2078, type: !3591)
!6478 = !DILocation(line: 2078, column: 52, scope: !6476)
!6479 = !DILocation(line: 2080, column: 2, scope: !6476)
!6480 = !DILocation(line: 2080, column: 6, scope: !6476)
!6481 = !DILocation(line: 2080, column: 11, scope: !6476)
!6482 = !DILocation(line: 2081, column: 2, scope: !6476)
!6483 = !DILocation(line: 2081, column: 6, scope: !6476)
!6484 = !DILocation(line: 2081, column: 13, scope: !6476)
!6485 = !DILocation(line: 2082, column: 2, scope: !6476)
!6486 = !DILocation(line: 2082, column: 6, scope: !6476)
!6487 = !DILocation(line: 2082, column: 18, scope: !6476)
!6488 = !DILocation(line: 2084, column: 2, scope: !6476)
!6489 = !DILocation(line: 2084, column: 6, scope: !6476)
!6490 = !DILocation(line: 2084, column: 11, scope: !6476)
!6491 = !DILocation(line: 2086, column: 2, scope: !6476)
!6492 = !DILocation(line: 2086, column: 6, scope: !6476)
!6493 = !DILocation(line: 2086, column: 11, scope: !6476)
!6494 = !DILocation(line: 2087, column: 2, scope: !6476)
!6495 = !DILocation(line: 2087, column: 6, scope: !6476)
!6496 = !DILocation(line: 2087, column: 11, scope: !6476)
!6497 = !DILocation(line: 2090, column: 14, scope: !6476)
!6498 = !DILocation(line: 2090, column: 18, scope: !6476)
!6499 = !DILocation(line: 2090, column: 2, scope: !6476)
!6500 = !DILocation(line: 2091, column: 1, scope: !6476)
!6501 = distinct !DISubprogram(name: "SCREEN_OT_frame_jump", scope: !3, file: !3, line: 2129, type: !3589, scopeLine: 2130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6502 = !DILocalVariable(name: "ot", arg: 1, scope: !6501, file: !3, line: 2129, type: !3591)
!6503 = !DILocation(line: 2129, column: 50, scope: !6501)
!6504 = !DILocation(line: 2131, column: 2, scope: !6501)
!6505 = !DILocation(line: 2131, column: 6, scope: !6501)
!6506 = !DILocation(line: 2131, column: 11, scope: !6501)
!6507 = !DILocation(line: 2132, column: 2, scope: !6501)
!6508 = !DILocation(line: 2132, column: 6, scope: !6501)
!6509 = !DILocation(line: 2132, column: 18, scope: !6501)
!6510 = !DILocation(line: 2133, column: 2, scope: !6501)
!6511 = !DILocation(line: 2133, column: 6, scope: !6501)
!6512 = !DILocation(line: 2133, column: 13, scope: !6501)
!6513 = !DILocation(line: 2135, column: 2, scope: !6501)
!6514 = !DILocation(line: 2135, column: 6, scope: !6501)
!6515 = !DILocation(line: 2135, column: 11, scope: !6501)
!6516 = !DILocation(line: 2137, column: 2, scope: !6501)
!6517 = !DILocation(line: 2137, column: 6, scope: !6501)
!6518 = !DILocation(line: 2137, column: 11, scope: !6501)
!6519 = !DILocation(line: 2138, column: 2, scope: !6501)
!6520 = !DILocation(line: 2138, column: 6, scope: !6501)
!6521 = !DILocation(line: 2138, column: 11, scope: !6501)
!6522 = !DILocation(line: 2141, column: 18, scope: !6501)
!6523 = !DILocation(line: 2141, column: 22, scope: !6501)
!6524 = !DILocation(line: 2141, column: 2, scope: !6501)
!6525 = !DILocation(line: 2142, column: 1, scope: !6501)
!6526 = distinct !DISubprogram(name: "SCREEN_OT_keyframe_jump", scope: !3, file: !3, line: 2230, type: !3589, scopeLine: 2231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6527 = !DILocalVariable(name: "ot", arg: 1, scope: !6526, file: !3, line: 2230, type: !3591)
!6528 = !DILocation(line: 2230, column: 53, scope: !6526)
!6529 = !DILocation(line: 2232, column: 2, scope: !6526)
!6530 = !DILocation(line: 2232, column: 6, scope: !6526)
!6531 = !DILocation(line: 2232, column: 11, scope: !6526)
!6532 = !DILocation(line: 2233, column: 2, scope: !6526)
!6533 = !DILocation(line: 2233, column: 6, scope: !6526)
!6534 = !DILocation(line: 2233, column: 18, scope: !6526)
!6535 = !DILocation(line: 2234, column: 2, scope: !6526)
!6536 = !DILocation(line: 2234, column: 6, scope: !6526)
!6537 = !DILocation(line: 2234, column: 13, scope: !6526)
!6538 = !DILocation(line: 2236, column: 2, scope: !6526)
!6539 = !DILocation(line: 2236, column: 6, scope: !6526)
!6540 = !DILocation(line: 2236, column: 11, scope: !6526)
!6541 = !DILocation(line: 2238, column: 2, scope: !6526)
!6542 = !DILocation(line: 2238, column: 6, scope: !6526)
!6543 = !DILocation(line: 2238, column: 11, scope: !6526)
!6544 = !DILocation(line: 2239, column: 2, scope: !6526)
!6545 = !DILocation(line: 2239, column: 6, scope: !6526)
!6546 = !DILocation(line: 2239, column: 11, scope: !6526)
!6547 = !DILocation(line: 2242, column: 18, scope: !6526)
!6548 = !DILocation(line: 2242, column: 22, scope: !6526)
!6549 = !DILocation(line: 2242, column: 2, scope: !6526)
!6550 = !DILocation(line: 2243, column: 1, scope: !6526)
!6551 = distinct !DISubprogram(name: "SCREEN_OT_marker_jump", scope: !3, file: !3, line: 2290, type: !3589, scopeLine: 2291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6552 = !DILocalVariable(name: "ot", arg: 1, scope: !6551, file: !3, line: 2290, type: !3591)
!6553 = !DILocation(line: 2290, column: 51, scope: !6551)
!6554 = !DILocation(line: 2292, column: 2, scope: !6551)
!6555 = !DILocation(line: 2292, column: 6, scope: !6551)
!6556 = !DILocation(line: 2292, column: 11, scope: !6551)
!6557 = !DILocation(line: 2293, column: 2, scope: !6551)
!6558 = !DILocation(line: 2293, column: 6, scope: !6551)
!6559 = !DILocation(line: 2293, column: 18, scope: !6551)
!6560 = !DILocation(line: 2294, column: 2, scope: !6551)
!6561 = !DILocation(line: 2294, column: 6, scope: !6551)
!6562 = !DILocation(line: 2294, column: 13, scope: !6551)
!6563 = !DILocation(line: 2296, column: 2, scope: !6551)
!6564 = !DILocation(line: 2296, column: 6, scope: !6551)
!6565 = !DILocation(line: 2296, column: 11, scope: !6551)
!6566 = !DILocation(line: 2298, column: 2, scope: !6551)
!6567 = !DILocation(line: 2298, column: 6, scope: !6551)
!6568 = !DILocation(line: 2298, column: 11, scope: !6551)
!6569 = !DILocation(line: 2299, column: 2, scope: !6551)
!6570 = !DILocation(line: 2299, column: 6, scope: !6551)
!6571 = !DILocation(line: 2299, column: 11, scope: !6551)
!6572 = !DILocation(line: 2302, column: 18, scope: !6551)
!6573 = !DILocation(line: 2302, column: 22, scope: !6551)
!6574 = !DILocation(line: 2302, column: 2, scope: !6551)
!6575 = !DILocation(line: 2303, column: 1, scope: !6551)
!6576 = distinct !DISubprogram(name: "SCREEN_OT_animation_step", scope: !3, file: !3, line: 3510, type: !3589, scopeLine: 3511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6577 = !DILocalVariable(name: "ot", arg: 1, scope: !6576, file: !3, line: 3510, type: !3591)
!6578 = !DILocation(line: 3510, column: 54, scope: !6576)
!6579 = !DILocation(line: 3513, column: 2, scope: !6576)
!6580 = !DILocation(line: 3513, column: 6, scope: !6576)
!6581 = !DILocation(line: 3513, column: 11, scope: !6576)
!6582 = !DILocation(line: 3514, column: 2, scope: !6576)
!6583 = !DILocation(line: 3514, column: 6, scope: !6576)
!6584 = !DILocation(line: 3514, column: 18, scope: !6576)
!6585 = !DILocation(line: 3515, column: 2, scope: !6576)
!6586 = !DILocation(line: 3515, column: 6, scope: !6576)
!6587 = !DILocation(line: 3515, column: 13, scope: !6576)
!6588 = !DILocation(line: 3518, column: 2, scope: !6576)
!6589 = !DILocation(line: 3518, column: 6, scope: !6576)
!6590 = !DILocation(line: 3518, column: 13, scope: !6576)
!6591 = !DILocation(line: 3520, column: 2, scope: !6576)
!6592 = !DILocation(line: 3520, column: 6, scope: !6576)
!6593 = !DILocation(line: 3520, column: 11, scope: !6576)
!6594 = !DILocation(line: 3522, column: 1, scope: !6576)
!6595 = distinct !DISubprogram(name: "SCREEN_OT_animation_play", scope: !3, file: !3, line: 3579, type: !3589, scopeLine: 3580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6596 = !DILocalVariable(name: "ot", arg: 1, scope: !6595, file: !3, line: 3579, type: !3591)
!6597 = !DILocation(line: 3579, column: 54, scope: !6595)
!6598 = !DILocalVariable(name: "prop", scope: !6595, file: !3, line: 3581, type: !3657)
!6599 = !DILocation(line: 3581, column: 15, scope: !6595)
!6600 = !DILocation(line: 3584, column: 2, scope: !6595)
!6601 = !DILocation(line: 3584, column: 6, scope: !6595)
!6602 = !DILocation(line: 3584, column: 11, scope: !6595)
!6603 = !DILocation(line: 3585, column: 2, scope: !6595)
!6604 = !DILocation(line: 3585, column: 6, scope: !6595)
!6605 = !DILocation(line: 3585, column: 18, scope: !6595)
!6606 = !DILocation(line: 3586, column: 2, scope: !6595)
!6607 = !DILocation(line: 3586, column: 6, scope: !6595)
!6608 = !DILocation(line: 3586, column: 13, scope: !6595)
!6609 = !DILocation(line: 3589, column: 2, scope: !6595)
!6610 = !DILocation(line: 3589, column: 6, scope: !6595)
!6611 = !DILocation(line: 3589, column: 11, scope: !6595)
!6612 = !DILocation(line: 3591, column: 2, scope: !6595)
!6613 = !DILocation(line: 3591, column: 6, scope: !6595)
!6614 = !DILocation(line: 3591, column: 11, scope: !6595)
!6615 = !DILocation(line: 3593, column: 25, scope: !6595)
!6616 = !DILocation(line: 3593, column: 29, scope: !6595)
!6617 = !DILocation(line: 3593, column: 9, scope: !6595)
!6618 = !DILocation(line: 3593, column: 7, scope: !6595)
!6619 = !DILocation(line: 3594, column: 24, scope: !6595)
!6620 = !DILocation(line: 3594, column: 2, scope: !6595)
!6621 = !DILocation(line: 3595, column: 25, scope: !6595)
!6622 = !DILocation(line: 3595, column: 29, scope: !6595)
!6623 = !DILocation(line: 3595, column: 9, scope: !6595)
!6624 = !DILocation(line: 3595, column: 7, scope: !6595)
!6625 = !DILocation(line: 3596, column: 24, scope: !6595)
!6626 = !DILocation(line: 3596, column: 2, scope: !6595)
!6627 = !DILocation(line: 3597, column: 1, scope: !6595)
!6628 = distinct !DISubprogram(name: "SCREEN_OT_animation_cancel", scope: !3, file: !3, line: 3623, type: !3589, scopeLine: 3624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6629 = !DILocalVariable(name: "ot", arg: 1, scope: !6628, file: !3, line: 3623, type: !3591)
!6630 = !DILocation(line: 3623, column: 56, scope: !6628)
!6631 = !DILocation(line: 3626, column: 2, scope: !6628)
!6632 = !DILocation(line: 3626, column: 6, scope: !6628)
!6633 = !DILocation(line: 3626, column: 11, scope: !6628)
!6634 = !DILocation(line: 3627, column: 2, scope: !6628)
!6635 = !DILocation(line: 3627, column: 6, scope: !6628)
!6636 = !DILocation(line: 3627, column: 18, scope: !6628)
!6637 = !DILocation(line: 3628, column: 2, scope: !6628)
!6638 = !DILocation(line: 3628, column: 6, scope: !6628)
!6639 = !DILocation(line: 3628, column: 13, scope: !6628)
!6640 = !DILocation(line: 3631, column: 2, scope: !6628)
!6641 = !DILocation(line: 3631, column: 6, scope: !6628)
!6642 = !DILocation(line: 3631, column: 11, scope: !6628)
!6643 = !DILocation(line: 3633, column: 2, scope: !6628)
!6644 = !DILocation(line: 3633, column: 6, scope: !6628)
!6645 = !DILocation(line: 3633, column: 11, scope: !6628)
!6646 = !DILocation(line: 3635, column: 18, scope: !6628)
!6647 = !DILocation(line: 3635, column: 22, scope: !6628)
!6648 = !DILocation(line: 3635, column: 2, scope: !6628)
!6649 = !DILocation(line: 3636, column: 1, scope: !6628)
!6650 = distinct !DISubprogram(name: "SCREEN_OT_new", scope: !3, file: !3, line: 3777, type: !3589, scopeLine: 3778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6651 = !DILocalVariable(name: "ot", arg: 1, scope: !6650, file: !3, line: 3777, type: !3591)
!6652 = !DILocation(line: 3777, column: 43, scope: !6650)
!6653 = !DILocation(line: 3780, column: 2, scope: !6650)
!6654 = !DILocation(line: 3780, column: 6, scope: !6650)
!6655 = !DILocation(line: 3780, column: 11, scope: !6650)
!6656 = !DILocation(line: 3781, column: 2, scope: !6650)
!6657 = !DILocation(line: 3781, column: 6, scope: !6650)
!6658 = !DILocation(line: 3781, column: 18, scope: !6650)
!6659 = !DILocation(line: 3782, column: 2, scope: !6650)
!6660 = !DILocation(line: 3782, column: 6, scope: !6650)
!6661 = !DILocation(line: 3782, column: 13, scope: !6650)
!6662 = !DILocation(line: 3785, column: 2, scope: !6650)
!6663 = !DILocation(line: 3785, column: 6, scope: !6650)
!6664 = !DILocation(line: 3785, column: 11, scope: !6650)
!6665 = !DILocation(line: 3786, column: 2, scope: !6650)
!6666 = !DILocation(line: 3786, column: 6, scope: !6650)
!6667 = !DILocation(line: 3786, column: 11, scope: !6650)
!6668 = !DILocation(line: 3787, column: 1, scope: !6650)
!6669 = distinct !DISubprogram(name: "SCREEN_OT_delete", scope: !3, file: !3, line: 3800, type: !3589, scopeLine: 3801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6670 = !DILocalVariable(name: "ot", arg: 1, scope: !6669, file: !3, line: 3800, type: !3591)
!6671 = !DILocation(line: 3800, column: 46, scope: !6669)
!6672 = !DILocation(line: 3803, column: 2, scope: !6669)
!6673 = !DILocation(line: 3803, column: 6, scope: !6669)
!6674 = !DILocation(line: 3803, column: 11, scope: !6669)
!6675 = !DILocation(line: 3804, column: 2, scope: !6669)
!6676 = !DILocation(line: 3804, column: 6, scope: !6669)
!6677 = !DILocation(line: 3804, column: 18, scope: !6669)
!6678 = !DILocation(line: 3805, column: 2, scope: !6669)
!6679 = !DILocation(line: 3805, column: 6, scope: !6669)
!6680 = !DILocation(line: 3805, column: 13, scope: !6669)
!6681 = !DILocation(line: 3808, column: 2, scope: !6669)
!6682 = !DILocation(line: 3808, column: 6, scope: !6669)
!6683 = !DILocation(line: 3808, column: 11, scope: !6669)
!6684 = !DILocation(line: 3809, column: 1, scope: !6669)
!6685 = !DILocalVariable(name: "ot", arg: 1, scope: !3588, file: !3, line: 3842, type: !3591)
!6686 = !DILocation(line: 3842, column: 42, scope: !3588)
!6687 = !DILocation(line: 3853, column: 2, scope: !3588)
!6688 = !DILocation(line: 3853, column: 6, scope: !3588)
!6689 = !DILocation(line: 3853, column: 11, scope: !3588)
!6690 = !DILocation(line: 3854, column: 2, scope: !3588)
!6691 = !DILocation(line: 3854, column: 6, scope: !3588)
!6692 = !DILocation(line: 3854, column: 18, scope: !3588)
!6693 = !DILocation(line: 3855, column: 2, scope: !3588)
!6694 = !DILocation(line: 3855, column: 6, scope: !3588)
!6695 = !DILocation(line: 3855, column: 13, scope: !3588)
!6696 = !DILocation(line: 3858, column: 2, scope: !3588)
!6697 = !DILocation(line: 3858, column: 6, scope: !3588)
!6698 = !DILocation(line: 3858, column: 11, scope: !3588)
!6699 = !DILocation(line: 3859, column: 2, scope: !3588)
!6700 = !DILocation(line: 3859, column: 6, scope: !3588)
!6701 = !DILocation(line: 3859, column: 13, scope: !3588)
!6702 = !DILocation(line: 3862, column: 2, scope: !3588)
!6703 = !DILocation(line: 3862, column: 6, scope: !3588)
!6704 = !DILocation(line: 3862, column: 11, scope: !3588)
!6705 = !DILocation(line: 3865, column: 26, scope: !3588)
!6706 = !DILocation(line: 3865, column: 30, scope: !3588)
!6707 = !DILocation(line: 3865, column: 13, scope: !3588)
!6708 = !DILocation(line: 3865, column: 2, scope: !3588)
!6709 = !DILocation(line: 3865, column: 6, scope: !3588)
!6710 = !DILocation(line: 3865, column: 11, scope: !3588)
!6711 = !DILocation(line: 3866, column: 1, scope: !3588)
!6712 = distinct !DISubprogram(name: "SCENE_OT_delete", scope: !3, file: !3, line: 3884, type: !3589, scopeLine: 3885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6713 = !DILocalVariable(name: "ot", arg: 1, scope: !6712, file: !3, line: 3884, type: !3591)
!6714 = !DILocation(line: 3884, column: 45, scope: !6712)
!6715 = !DILocation(line: 3887, column: 2, scope: !6712)
!6716 = !DILocation(line: 3887, column: 6, scope: !6712)
!6717 = !DILocation(line: 3887, column: 11, scope: !6712)
!6718 = !DILocation(line: 3888, column: 2, scope: !6712)
!6719 = !DILocation(line: 3888, column: 6, scope: !6712)
!6720 = !DILocation(line: 3888, column: 18, scope: !6712)
!6721 = !DILocation(line: 3889, column: 2, scope: !6712)
!6722 = !DILocation(line: 3889, column: 6, scope: !6712)
!6723 = !DILocation(line: 3889, column: 13, scope: !6712)
!6724 = !DILocation(line: 3892, column: 2, scope: !6712)
!6725 = !DILocation(line: 3892, column: 6, scope: !6712)
!6726 = !DILocation(line: 3892, column: 11, scope: !6712)
!6727 = !DILocation(line: 3895, column: 2, scope: !6712)
!6728 = !DILocation(line: 3895, column: 6, scope: !6712)
!6729 = !DILocation(line: 3895, column: 11, scope: !6712)
!6730 = !DILocation(line: 3896, column: 1, scope: !6712)
!6731 = distinct !DISubprogram(name: "ED_keymap_screen", scope: !3, file: !3, line: 4143, type: !3721, scopeLine: 4144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6732 = !DILocalVariable(name: "keyconf", arg: 1, scope: !6731, file: !3, line: 4143, type: !3723)
!6733 = !DILocation(line: 4143, column: 36, scope: !6731)
!6734 = !DILocalVariable(name: "lb", scope: !6731, file: !3, line: 4145, type: !1487)
!6735 = !DILocation(line: 4145, column: 12, scope: !6731)
!6736 = !DILocalVariable(name: "keymap", scope: !6731, file: !3, line: 4146, type: !6737)
!6737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6738, size: 64)
!6738 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMap", file: !951, line: 297, baseType: !3663)
!6739 = !DILocation(line: 4146, column: 12, scope: !6731)
!6740 = !DILocalVariable(name: "kmi", scope: !6731, file: !3, line: 4147, type: !6741)
!6741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6742, size: 64)
!6742 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMapItem", file: !951, line: 252, baseType: !6743)
!6743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMapItem", file: !951, line: 227, size: 1472, elements: !6744)
!6744 = !{!6745, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757, !6758, !6759, !6760, !6761, !6762, !6763}
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6743, file: !951, line: 228, baseType: !6746, size: 64)
!6746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6743, size: 64)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6743, file: !951, line: 228, baseType: !6746, size: 64, offset: 64)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !6743, file: !951, line: 231, baseType: !1461, size: 512, offset: 128)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !6743, file: !951, line: 232, baseType: !1450, size: 64, offset: 640)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue_str", scope: !6743, file: !951, line: 235, baseType: !1461, size: 512, offset: 704)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue", scope: !6743, file: !951, line: 236, baseType: !1410, size: 16, offset: 1216)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6743, file: !951, line: 239, baseType: !1410, size: 16, offset: 1232)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6743, file: !951, line: 240, baseType: !1410, size: 16, offset: 1248)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !6743, file: !951, line: 241, baseType: !1410, size: 16, offset: 1264)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !6743, file: !951, line: 241, baseType: !1410, size: 16, offset: 1280)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !6743, file: !951, line: 241, baseType: !1410, size: 16, offset: 1296)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !6743, file: !951, line: 241, baseType: !1410, size: 16, offset: 1312)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !6743, file: !951, line: 242, baseType: !1410, size: 16, offset: 1328)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6743, file: !951, line: 245, baseType: !1410, size: 16, offset: 1344)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "maptype", scope: !6743, file: !951, line: 248, baseType: !1410, size: 16, offset: 1360)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6743, file: !951, line: 249, baseType: !1410, size: 16, offset: 1376)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6743, file: !951, line: 250, baseType: !1410, size: 16, offset: 1392)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6743, file: !951, line: 251, baseType: !3616, size: 64, offset: 1408)
!6764 = !DILocation(line: 4147, column: 16, scope: !6731)
!6765 = !DILocation(line: 4150, column: 26, scope: !6731)
!6766 = !DILocation(line: 4150, column: 11, scope: !6731)
!6767 = !DILocation(line: 4150, column: 9, scope: !6731)
!6768 = !DILocation(line: 4152, column: 33, scope: !6731)
!6769 = !DILocation(line: 4152, column: 14, scope: !6731)
!6770 = !DILocation(line: 4152, column: 93, scope: !6731)
!6771 = !DILocation(line: 4152, column: 2, scope: !6731)
!6772 = !DILocation(line: 4153, column: 33, scope: !6731)
!6773 = !DILocation(line: 4153, column: 14, scope: !6731)
!6774 = !DILocation(line: 4153, column: 100, scope: !6731)
!6775 = !DILocation(line: 4153, column: 2, scope: !6731)
!6776 = !DILocation(line: 4154, column: 33, scope: !6731)
!6777 = !DILocation(line: 4154, column: 14, scope: !6731)
!6778 = !DILocation(line: 4154, column: 99, scope: !6731)
!6779 = !DILocation(line: 4154, column: 2, scope: !6731)
!6780 = !DILocation(line: 4157, column: 24, scope: !6731)
!6781 = !DILocation(line: 4157, column: 2, scope: !6731)
!6782 = !DILocation(line: 4158, column: 24, scope: !6731)
!6783 = !DILocation(line: 4158, column: 2, scope: !6731)
!6784 = !DILocation(line: 4159, column: 24, scope: !6731)
!6785 = !DILocation(line: 4159, column: 2, scope: !6731)
!6786 = !DILocation(line: 4160, column: 24, scope: !6731)
!6787 = !DILocation(line: 4160, column: 2, scope: !6731)
!6788 = !DILocation(line: 4161, column: 24, scope: !6731)
!6789 = !DILocation(line: 4161, column: 2, scope: !6731)
!6790 = !DILocation(line: 4163, column: 24, scope: !6731)
!6791 = !DILocation(line: 4163, column: 2, scope: !6731)
!6792 = !DILocation(line: 4165, column: 24, scope: !6731)
!6793 = !DILocation(line: 4165, column: 2, scope: !6731)
!6794 = !DILocation(line: 4167, column: 21, scope: !6731)
!6795 = !DILocation(line: 4167, column: 2, scope: !6731)
!6796 = !DILocation(line: 4170, column: 26, scope: !6731)
!6797 = !DILocation(line: 4170, column: 11, scope: !6731)
!6798 = !DILocation(line: 4170, column: 9, scope: !6731)
!6799 = !DILocation(line: 4172, column: 21, scope: !6731)
!6800 = !DILocation(line: 4172, column: 2, scope: !6731)
!6801 = !DILocation(line: 4175, column: 26, scope: !6731)
!6802 = !DILocation(line: 4175, column: 11, scope: !6731)
!6803 = !DILocation(line: 4175, column: 9, scope: !6731)
!6804 = !DILocation(line: 4178, column: 21, scope: !6731)
!6805 = !DILocation(line: 4178, column: 2, scope: !6731)
!6806 = !DILocation(line: 4179, column: 21, scope: !6731)
!6807 = !DILocation(line: 4179, column: 2, scope: !6731)
!6808 = !DILocation(line: 4182, column: 33, scope: !6731)
!6809 = !DILocation(line: 4182, column: 14, scope: !6731)
!6810 = !DILocation(line: 4182, column: 103, scope: !6731)
!6811 = !DILocation(line: 4182, column: 2, scope: !6731)
!6812 = !DILocation(line: 4183, column: 33, scope: !6731)
!6813 = !DILocation(line: 4183, column: 14, scope: !6731)
!6814 = !DILocation(line: 4183, column: 102, scope: !6731)
!6815 = !DILocation(line: 4183, column: 2, scope: !6731)
!6816 = !DILocation(line: 4184, column: 21, scope: !6731)
!6817 = !DILocation(line: 4184, column: 2, scope: !6731)
!6818 = !DILocation(line: 4185, column: 21, scope: !6731)
!6819 = !DILocation(line: 4185, column: 2, scope: !6731)
!6820 = !DILocation(line: 4186, column: 21, scope: !6731)
!6821 = !DILocation(line: 4186, column: 2, scope: !6731)
!6822 = !DILocation(line: 4187, column: 27, scope: !6731)
!6823 = !DILocation(line: 4187, column: 8, scope: !6731)
!6824 = !DILocation(line: 4187, column: 6, scope: !6731)
!6825 = !DILocation(line: 4188, column: 18, scope: !6731)
!6826 = !DILocation(line: 4188, column: 23, scope: !6731)
!6827 = !DILocation(line: 4188, column: 2, scope: !6731)
!6828 = !DILocation(line: 4189, column: 27, scope: !6731)
!6829 = !DILocation(line: 4189, column: 8, scope: !6731)
!6830 = !DILocation(line: 4189, column: 6, scope: !6731)
!6831 = !DILocation(line: 4190, column: 18, scope: !6731)
!6832 = !DILocation(line: 4190, column: 23, scope: !6731)
!6833 = !DILocation(line: 4190, column: 2, scope: !6731)
!6834 = !DILocation(line: 4192, column: 21, scope: !6731)
!6835 = !DILocation(line: 4192, column: 2, scope: !6731)
!6836 = !DILocation(line: 4193, column: 21, scope: !6731)
!6837 = !DILocation(line: 4193, column: 2, scope: !6731)
!6838 = !DILocation(line: 4196, column: 21, scope: !6731)
!6839 = !DILocation(line: 4196, column: 2, scope: !6731)
!6840 = !DILocation(line: 4197, column: 24, scope: !6731)
!6841 = !DILocation(line: 4197, column: 2, scope: !6731)
!6842 = !DILocation(line: 4198, column: 21, scope: !6731)
!6843 = !DILocation(line: 4198, column: 2, scope: !6731)
!6844 = !DILocation(line: 4199, column: 24, scope: !6731)
!6845 = !DILocation(line: 4199, column: 2, scope: !6731)
!6846 = !DILocation(line: 4200, column: 24, scope: !6731)
!6847 = !DILocation(line: 4200, column: 2, scope: !6731)
!6848 = !DILocation(line: 4201, column: 24, scope: !6731)
!6849 = !DILocation(line: 4201, column: 2, scope: !6731)
!6850 = !DILocation(line: 4204, column: 21, scope: !6731)
!6851 = !DILocation(line: 4204, column: 2, scope: !6731)
!6852 = !DILocation(line: 4205, column: 21, scope: !6731)
!6853 = !DILocation(line: 4205, column: 2, scope: !6731)
!6854 = !DILocation(line: 4206, column: 21, scope: !6731)
!6855 = !DILocation(line: 4206, column: 2, scope: !6731)
!6856 = !DILocation(line: 4214, column: 21, scope: !6731)
!6857 = !DILocation(line: 4214, column: 2, scope: !6731)
!6858 = !DILocation(line: 4215, column: 21, scope: !6731)
!6859 = !DILocation(line: 4215, column: 2, scope: !6731)
!6860 = !DILocation(line: 4216, column: 21, scope: !6731)
!6861 = !DILocation(line: 4216, column: 2, scope: !6731)
!6862 = !DILocation(line: 4220, column: 27, scope: !6731)
!6863 = !DILocation(line: 4220, column: 8, scope: !6731)
!6864 = !DILocation(line: 4220, column: 6, scope: !6731)
!6865 = !DILocation(line: 4221, column: 18, scope: !6731)
!6866 = !DILocation(line: 4221, column: 23, scope: !6731)
!6867 = !DILocation(line: 4221, column: 2, scope: !6731)
!6868 = !DILocation(line: 4222, column: 27, scope: !6731)
!6869 = !DILocation(line: 4222, column: 8, scope: !6731)
!6870 = !DILocation(line: 4222, column: 6, scope: !6731)
!6871 = !DILocation(line: 4223, column: 18, scope: !6731)
!6872 = !DILocation(line: 4223, column: 23, scope: !6731)
!6873 = !DILocation(line: 4223, column: 2, scope: !6731)
!6874 = !DILocation(line: 4224, column: 18, scope: !6731)
!6875 = !DILocation(line: 4224, column: 23, scope: !6731)
!6876 = !DILocation(line: 4224, column: 2, scope: !6731)
!6877 = !DILocation(line: 4225, column: 21, scope: !6731)
!6878 = !DILocation(line: 4225, column: 2, scope: !6731)
!6879 = !DILocation(line: 4226, column: 21, scope: !6731)
!6880 = !DILocation(line: 4226, column: 2, scope: !6731)
!6881 = !DILocation(line: 4227, column: 21, scope: !6731)
!6882 = !DILocation(line: 4227, column: 2, scope: !6731)
!6883 = !DILocation(line: 4233, column: 21, scope: !6731)
!6884 = !DILocation(line: 4233, column: 2, scope: !6731)
!6885 = !DILocation(line: 4237, column: 26, scope: !6731)
!6886 = !DILocation(line: 4237, column: 11, scope: !6731)
!6887 = !DILocation(line: 4237, column: 9, scope: !6731)
!6888 = !DILocation(line: 4240, column: 33, scope: !6731)
!6889 = !DILocation(line: 4240, column: 14, scope: !6731)
!6890 = !DILocation(line: 4240, column: 103, scope: !6731)
!6891 = !DILocation(line: 4240, column: 2, scope: !6731)
!6892 = !DILocation(line: 4241, column: 33, scope: !6731)
!6893 = !DILocation(line: 4241, column: 14, scope: !6731)
!6894 = !DILocation(line: 4241, column: 105, scope: !6731)
!6895 = !DILocation(line: 4241, column: 2, scope: !6731)
!6896 = !DILocation(line: 4242, column: 33, scope: !6731)
!6897 = !DILocation(line: 4242, column: 14, scope: !6731)
!6898 = !DILocation(line: 4242, column: 98, scope: !6731)
!6899 = !DILocation(line: 4242, column: 2, scope: !6731)
!6900 = !DILocation(line: 4243, column: 33, scope: !6731)
!6901 = !DILocation(line: 4243, column: 14, scope: !6731)
!6902 = !DILocation(line: 4243, column: 99, scope: !6731)
!6903 = !DILocation(line: 4243, column: 2, scope: !6731)
!6904 = !DILocation(line: 4245, column: 33, scope: !6731)
!6905 = !DILocation(line: 4245, column: 14, scope: !6731)
!6906 = !DILocation(line: 4245, column: 105, scope: !6731)
!6907 = !DILocation(line: 4245, column: 2, scope: !6731)
!6908 = !DILocation(line: 4246, column: 33, scope: !6731)
!6909 = !DILocation(line: 4246, column: 14, scope: !6731)
!6910 = !DILocation(line: 4246, column: 103, scope: !6731)
!6911 = !DILocation(line: 4246, column: 2, scope: !6731)
!6912 = !DILocation(line: 4248, column: 37, scope: !6731)
!6913 = !DILocation(line: 4248, column: 18, scope: !6731)
!6914 = !DILocation(line: 4248, column: 115, scope: !6731)
!6915 = !DILocation(line: 4248, column: 2, scope: !6731)
!6916 = !DILocation(line: 4249, column: 37, scope: !6731)
!6917 = !DILocation(line: 4249, column: 18, scope: !6731)
!6918 = !DILocation(line: 4249, column: 117, scope: !6731)
!6919 = !DILocation(line: 4249, column: 2, scope: !6731)
!6920 = !DILocation(line: 4250, column: 37, scope: !6731)
!6921 = !DILocation(line: 4250, column: 18, scope: !6731)
!6922 = !DILocation(line: 4250, column: 108, scope: !6731)
!6923 = !DILocation(line: 4250, column: 2, scope: !6731)
!6924 = !DILocation(line: 4251, column: 37, scope: !6731)
!6925 = !DILocation(line: 4251, column: 18, scope: !6731)
!6926 = !DILocation(line: 4251, column: 107, scope: !6731)
!6927 = !DILocation(line: 4251, column: 2, scope: !6731)
!6928 = !DILocation(line: 4253, column: 27, scope: !6731)
!6929 = !DILocation(line: 4253, column: 8, scope: !6731)
!6930 = !DILocation(line: 4253, column: 6, scope: !6731)
!6931 = !DILocation(line: 4254, column: 18, scope: !6731)
!6932 = !DILocation(line: 4254, column: 23, scope: !6731)
!6933 = !DILocation(line: 4254, column: 2, scope: !6731)
!6934 = !DILocation(line: 4256, column: 27, scope: !6731)
!6935 = !DILocation(line: 4256, column: 8, scope: !6731)
!6936 = !DILocation(line: 4256, column: 6, scope: !6731)
!6937 = !DILocation(line: 4257, column: 18, scope: !6731)
!6938 = !DILocation(line: 4257, column: 23, scope: !6731)
!6939 = !DILocation(line: 4257, column: 2, scope: !6731)
!6940 = !DILocation(line: 4259, column: 27, scope: !6731)
!6941 = !DILocation(line: 4259, column: 8, scope: !6731)
!6942 = !DILocation(line: 4259, column: 6, scope: !6731)
!6943 = !DILocation(line: 4260, column: 18, scope: !6731)
!6944 = !DILocation(line: 4260, column: 23, scope: !6731)
!6945 = !DILocation(line: 4260, column: 2, scope: !6731)
!6946 = !DILocation(line: 4262, column: 27, scope: !6731)
!6947 = !DILocation(line: 4262, column: 8, scope: !6731)
!6948 = !DILocation(line: 4262, column: 6, scope: !6731)
!6949 = !DILocation(line: 4263, column: 18, scope: !6731)
!6950 = !DILocation(line: 4263, column: 23, scope: !6731)
!6951 = !DILocation(line: 4263, column: 2, scope: !6731)
!6952 = !DILocation(line: 4267, column: 21, scope: !6731)
!6953 = !DILocation(line: 4267, column: 2, scope: !6731)
!6954 = !DILocation(line: 4268, column: 37, scope: !6731)
!6955 = !DILocation(line: 4268, column: 18, scope: !6731)
!6956 = !DILocation(line: 4268, column: 112, scope: !6731)
!6957 = !DILocation(line: 4268, column: 2, scope: !6731)
!6958 = !DILocation(line: 4269, column: 21, scope: !6731)
!6959 = !DILocation(line: 4269, column: 2, scope: !6731)
!6960 = !DILocation(line: 4271, column: 21, scope: !6731)
!6961 = !DILocation(line: 4271, column: 2, scope: !6731)
!6962 = !DILocation(line: 4272, column: 21, scope: !6731)
!6963 = !DILocation(line: 4272, column: 2, scope: !6731)
!6964 = !DILocation(line: 4288, column: 7, scope: !6731)
!6965 = !DILocation(line: 4288, column: 5, scope: !6731)
!6966 = !DILocation(line: 4289, column: 17, scope: !6731)
!6967 = !DILocation(line: 4289, column: 2, scope: !6731)
!6968 = !DILocation(line: 4290, column: 17, scope: !6731)
!6969 = !DILocation(line: 4290, column: 2, scope: !6731)
!6970 = !DILocation(line: 4292, column: 19, scope: !6731)
!6971 = !DILocation(line: 4292, column: 2, scope: !6731)
!6972 = !DILocation(line: 4293, column: 1, scope: !6731)
!6973 = distinct !DISubprogram(name: "open_file_drop_poll", scope: !3, file: !3, line: 4125, type: !6974, scopeLine: 4126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!6974 = !DISubroutineType(types: !6975)
!6975 = !{!1242, !3734, !6976, !6997}
!6976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6977, size: 64)
!6977 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmDrag", file: !1185, line: 624, baseType: !6978)
!6978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmDrag", file: !1185, line: 610, size: 10304, elements: !6979)
!6979 = !{!6980, !6982, !6983, !6984, !6985, !6986, !6987, !6988, !6989, !6990, !6991, !6992, !6996}
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6978, file: !1185, line: 611, baseType: !6981, size: 64)
!6981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6978, size: 64)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6978, file: !1185, line: 611, baseType: !6981, size: 64, offset: 64)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !6978, file: !1185, line: 613, baseType: !1242, size: 32, offset: 128)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6978, file: !1185, line: 613, baseType: !1242, size: 32, offset: 160)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !6978, file: !1185, line: 614, baseType: !1390, size: 64, offset: 192)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !6978, file: !1185, line: 615, baseType: !1432, size: 8192, offset: 256)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6978, file: !1185, line: 616, baseType: !3374, size: 64, offset: 8448)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "imb", scope: !6978, file: !1185, line: 618, baseType: !5018, size: 64, offset: 8512)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !6978, file: !1185, line: 619, baseType: !1407, size: 32, offset: 8576)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !6978, file: !1185, line: 620, baseType: !1242, size: 32, offset: 8608)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !6978, file: !1185, line: 620, baseType: !1242, size: 32, offset: 8640)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "opname", scope: !6978, file: !1185, line: 622, baseType: !6993, size: 1600, offset: 8672)
!6993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 1600, elements: !6994)
!6994 = !{!6995}
!6995 = !DISubrange(count: 200)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6978, file: !1185, line: 623, baseType: !7, size: 32, offset: 10272)
!6997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6998, size: 64)
!6998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6999)
!6999 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !1185, line: 460, baseType: !3357)
!7000 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !6973, file: !3, line: 4125, type: !3734)
!7001 = !DILocation(line: 4125, column: 42, scope: !6973)
!7002 = !DILocalVariable(name: "drag", arg: 2, scope: !6973, file: !3, line: 4125, type: !6976)
!7003 = !DILocation(line: 4125, column: 61, scope: !6973)
!7004 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !6973, file: !3, line: 4125, type: !6997)
!7005 = !DILocation(line: 4125, column: 82, scope: !6973)
!7006 = !DILocation(line: 4127, column: 6, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 4127, column: 6)
!7008 = !DILocation(line: 4127, column: 12, scope: !7007)
!7009 = !DILocation(line: 4127, column: 17, scope: !7007)
!7010 = !DILocation(line: 4127, column: 6, scope: !6973)
!7011 = !DILocation(line: 4128, column: 7, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 4128, column: 7)
!7013 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 4127, column: 34)
!7014 = !DILocation(line: 4128, column: 13, scope: !7012)
!7015 = !DILocation(line: 4128, column: 18, scope: !7012)
!7016 = !DILocation(line: 4128, column: 7, scope: !7013)
!7017 = !DILocation(line: 4129, column: 4, scope: !7012)
!7018 = !DILocation(line: 4130, column: 2, scope: !7013)
!7019 = !DILocation(line: 4131, column: 2, scope: !6973)
!7020 = !DILocation(line: 4132, column: 1, scope: !6973)
!7021 = distinct !DISubprogram(name: "open_file_drop_copy", scope: !3, file: !3, line: 4134, type: !7022, scopeLine: 4135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7022 = !DISubroutineType(types: !7023)
!7023 = !{null, !6976, !7024}
!7024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7025, size: 64)
!7025 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmDropBox", file: !1185, line: 645, baseType: !7026)
!7026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmDropBox", file: !1185, line: 628, size: 512, elements: !7027)
!7027 = !{!7028, !7030, !7031, !7035, !7039, !7040, !7041, !7042}
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7026, file: !1185, line: 629, baseType: !7029, size: 64)
!7029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7026, size: 64)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7026, file: !1185, line: 629, baseType: !7029, size: 64, offset: 64)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7026, file: !1185, line: 632, baseType: !7032, size: 64, offset: 128)
!7032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7033, size: 64)
!7033 = !DISubroutineType(types: !7034)
!7034 = !{!1242, !3603, !6981, !6997}
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "copy", scope: !7026, file: !1185, line: 635, baseType: !7036, size: 64, offset: 192)
!7036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7037, size: 64)
!7037 = !DISubroutineType(types: !7038)
!7038 = !{null, !6981, !7029}
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !7026, file: !1185, line: 638, baseType: !3591, size: 64, offset: 256)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !7026, file: !1185, line: 640, baseType: !1455, size: 64, offset: 320)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !7026, file: !1185, line: 641, baseType: !3616, size: 64, offset: 384)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !7026, file: !1185, line: 643, baseType: !1410, size: 16, offset: 448)
!7043 = !DILocalVariable(name: "drag", arg: 1, scope: !7021, file: !3, line: 4134, type: !6976)
!7044 = !DILocation(line: 4134, column: 41, scope: !7021)
!7045 = !DILocalVariable(name: "drop", arg: 2, scope: !7021, file: !3, line: 4134, type: !7024)
!7046 = !DILocation(line: 4134, column: 58, scope: !7021)
!7047 = !DILocation(line: 4137, column: 17, scope: !7021)
!7048 = !DILocation(line: 4137, column: 23, scope: !7021)
!7049 = !DILocation(line: 4137, column: 40, scope: !7021)
!7050 = !DILocation(line: 4137, column: 46, scope: !7021)
!7051 = !DILocation(line: 4137, column: 2, scope: !7021)
!7052 = !DILocation(line: 4138, column: 2, scope: !7021)
!7053 = !DILocation(line: 4138, column: 8, scope: !7021)
!7054 = !DILocation(line: 4138, column: 18, scope: !7021)
!7055 = !DILocation(line: 4139, column: 1, scope: !7021)
!7056 = !DILocalVariable(name: "keyconf", arg: 1, scope: !3720, file: !3, line: 4100, type: !3723)
!7057 = !DILocation(line: 4100, column: 43, scope: !3720)
!7058 = !DILocalVariable(name: "keymap", scope: !3720, file: !3, line: 4108, type: !6737)
!7059 = !DILocation(line: 4108, column: 12, scope: !3720)
!7060 = !DILocation(line: 4111, column: 30, scope: !3720)
!7061 = !DILocation(line: 4111, column: 11, scope: !3720)
!7062 = !DILocation(line: 4111, column: 9, scope: !3720)
!7063 = !DILocation(line: 4113, column: 26, scope: !3720)
!7064 = !DILocation(line: 4113, column: 2, scope: !3720)
!7065 = !DILocation(line: 4114, column: 26, scope: !3720)
!7066 = !DILocation(line: 4114, column: 2, scope: !3720)
!7067 = !DILocation(line: 4115, column: 26, scope: !3720)
!7068 = !DILocation(line: 4115, column: 2, scope: !3720)
!7069 = !DILocation(line: 4116, column: 26, scope: !3720)
!7070 = !DILocation(line: 4116, column: 2, scope: !3720)
!7071 = !DILocation(line: 4118, column: 26, scope: !3720)
!7072 = !DILocation(line: 4118, column: 2, scope: !3720)
!7073 = !DILocation(line: 4119, column: 26, scope: !3720)
!7074 = !DILocation(line: 4119, column: 2, scope: !3720)
!7075 = !DILocation(line: 4121, column: 24, scope: !3720)
!7076 = !DILocation(line: 4121, column: 2, scope: !3720)
!7077 = !DILocation(line: 4123, column: 1, scope: !3720)
!7078 = distinct !DISubprogram(name: "actionzone_invoke", scope: !3, file: !3, line: 742, type: !7079, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7079 = !DISubroutineType(types: !7080)
!7080 = !{!1242, !3734, !7081, !6997}
!7081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7082, size: 64)
!7082 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !951, line: 348, baseType: !3605)
!7083 = !DILocalVariable(name: "C", arg: 1, scope: !7078, file: !3, line: 742, type: !3734)
!7084 = !DILocation(line: 742, column: 40, scope: !7078)
!7085 = !DILocalVariable(name: "op", arg: 2, scope: !7078, file: !3, line: 742, type: !7081)
!7086 = !DILocation(line: 742, column: 55, scope: !7078)
!7087 = !DILocalVariable(name: "event", arg: 3, scope: !7078, file: !3, line: 742, type: !6997)
!7088 = !DILocation(line: 742, column: 74, scope: !7078)
!7089 = !DILocalVariable(name: "az", scope: !7078, file: !3, line: 744, type: !5221)
!7090 = !DILocation(line: 744, column: 9, scope: !7078)
!7091 = !DILocation(line: 744, column: 48, scope: !7078)
!7092 = !DILocation(line: 744, column: 36, scope: !7078)
!7093 = !DILocation(line: 744, column: 53, scope: !7078)
!7094 = !DILocation(line: 744, column: 60, scope: !7078)
!7095 = !DILocation(line: 744, column: 14, scope: !7078)
!7096 = !DILocalVariable(name: "sad", scope: !7078, file: !3, line: 745, type: !7097)
!7097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7098, size: 64)
!7098 = !DIDerivedType(tag: DW_TAG_typedef, name: "sActionzoneData", file: !3, line: 600, baseType: !7099)
!7099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sActionzoneData", file: !3, line: 596, size: 320, elements: !7100)
!7100 = !{!7101, !7102, !7103, !7104, !7105, !7106, !7107}
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "sa1", scope: !7099, file: !3, line: 597, baseType: !3286, size: 64)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "sa2", scope: !7099, file: !3, line: 597, baseType: !3286, size: 64, offset: 64)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "az", scope: !7099, file: !3, line: 598, baseType: !5221, size: 64, offset: 128)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !7099, file: !3, line: 599, baseType: !1242, size: 32, offset: 192)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !7099, file: !3, line: 599, baseType: !1242, size: 32, offset: 224)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "gesture_dir", scope: !7099, file: !3, line: 599, baseType: !1242, size: 32, offset: 256)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !7099, file: !3, line: 599, baseType: !1242, size: 32, offset: 288)
!7108 = !DILocation(line: 745, column: 19, scope: !7078)
!7109 = !DILocation(line: 748, column: 6, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 748, column: 6)
!7111 = !DILocation(line: 748, column: 9, scope: !7110)
!7112 = !DILocation(line: 748, column: 6, scope: !7078)
!7113 = !DILocation(line: 749, column: 3, scope: !7110)
!7114 = !DILocation(line: 752, column: 25, scope: !7078)
!7115 = !DILocation(line: 752, column: 8, scope: !7078)
!7116 = !DILocation(line: 752, column: 12, scope: !7078)
!7117 = !DILocation(line: 752, column: 23, scope: !7078)
!7118 = !DILocation(line: 752, column: 6, scope: !7078)
!7119 = !DILocation(line: 753, column: 25, scope: !7078)
!7120 = !DILocation(line: 753, column: 13, scope: !7078)
!7121 = !DILocation(line: 753, column: 2, scope: !7078)
!7122 = !DILocation(line: 753, column: 7, scope: !7078)
!7123 = !DILocation(line: 753, column: 11, scope: !7078)
!7124 = !DILocation(line: 754, column: 12, scope: !7078)
!7125 = !DILocation(line: 754, column: 2, scope: !7078)
!7126 = !DILocation(line: 754, column: 7, scope: !7078)
!7127 = !DILocation(line: 754, column: 10, scope: !7078)
!7128 = !DILocation(line: 755, column: 11, scope: !7078)
!7129 = !DILocation(line: 755, column: 18, scope: !7078)
!7130 = !DILocation(line: 755, column: 2, scope: !7078)
!7131 = !DILocation(line: 755, column: 7, scope: !7078)
!7132 = !DILocation(line: 755, column: 9, scope: !7078)
!7133 = !DILocation(line: 755, column: 30, scope: !7078)
!7134 = !DILocation(line: 755, column: 37, scope: !7078)
!7135 = !DILocation(line: 755, column: 21, scope: !7078)
!7136 = !DILocation(line: 755, column: 26, scope: !7078)
!7137 = !DILocation(line: 755, column: 28, scope: !7078)
!7138 = !DILocation(line: 758, column: 6, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 758, column: 6)
!7140 = !DILocation(line: 758, column: 6, scope: !7078)
!7141 = !DILocation(line: 759, column: 20, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 758, column: 59)
!7143 = !DILocation(line: 759, column: 23, scope: !7142)
!7144 = !DILocation(line: 759, column: 27, scope: !7142)
!7145 = !DILocation(line: 759, column: 32, scope: !7142)
!7146 = !DILocation(line: 759, column: 36, scope: !7142)
!7147 = !DILocation(line: 759, column: 3, scope: !7142)
!7148 = !DILocation(line: 760, column: 19, scope: !7142)
!7149 = !DILocation(line: 760, column: 3, scope: !7142)
!7150 = !DILocation(line: 761, column: 3, scope: !7142)
!7151 = !DILocation(line: 765, column: 30, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 763, column: 7)
!7153 = !DILocation(line: 765, column: 33, scope: !7152)
!7154 = !DILocation(line: 765, column: 3, scope: !7152)
!7155 = !DILocation(line: 767, column: 3, scope: !7152)
!7156 = !DILocation(line: 769, column: 1, scope: !7078)
!7157 = distinct !DISubprogram(name: "actionzone_modal", scope: !3, file: !3, line: 772, type: !7079, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7158 = !DILocalVariable(name: "C", arg: 1, scope: !7157, file: !3, line: 772, type: !3734)
!7159 = !DILocation(line: 772, column: 39, scope: !7157)
!7160 = !DILocalVariable(name: "op", arg: 2, scope: !7157, file: !3, line: 772, type: !7081)
!7161 = !DILocation(line: 772, column: 54, scope: !7157)
!7162 = !DILocalVariable(name: "event", arg: 3, scope: !7157, file: !3, line: 772, type: !6997)
!7163 = !DILocation(line: 772, column: 73, scope: !7157)
!7164 = !DILocalVariable(name: "win", scope: !7157, file: !3, line: 774, type: !5535)
!7165 = !DILocation(line: 774, column: 12, scope: !7157)
!7166 = !DILocation(line: 774, column: 32, scope: !7157)
!7167 = !DILocation(line: 774, column: 18, scope: !7157)
!7168 = !DILocalVariable(name: "sc", scope: !7157, file: !3, line: 775, type: !3298)
!7169 = !DILocation(line: 775, column: 11, scope: !7157)
!7170 = !DILocation(line: 775, column: 30, scope: !7157)
!7171 = !DILocation(line: 775, column: 16, scope: !7157)
!7172 = !DILocalVariable(name: "sad", scope: !7157, file: !3, line: 776, type: !7097)
!7173 = !DILocation(line: 776, column: 19, scope: !7157)
!7174 = !DILocation(line: 776, column: 25, scope: !7157)
!7175 = !DILocation(line: 776, column: 29, scope: !7157)
!7176 = !DILocalVariable(name: "winsize_x", scope: !7157, file: !3, line: 777, type: !5215)
!7177 = !DILocation(line: 777, column: 12, scope: !7157)
!7178 = !DILocation(line: 777, column: 43, scope: !7157)
!7179 = !DILocation(line: 777, column: 24, scope: !7157)
!7180 = !DILocalVariable(name: "winsize_y", scope: !7157, file: !3, line: 778, type: !5215)
!7181 = !DILocation(line: 778, column: 12, scope: !7157)
!7182 = !DILocation(line: 778, column: 43, scope: !7157)
!7183 = !DILocation(line: 778, column: 24, scope: !7157)
!7184 = !DILocation(line: 780, column: 10, scope: !7157)
!7185 = !DILocation(line: 780, column: 17, scope: !7157)
!7186 = !DILocation(line: 780, column: 2, scope: !7157)
!7187 = !DILocalVariable(name: "is_gesture", scope: !7188, file: !3, line: 783, type: !2425)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 782, column: 3)
!7189 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 780, column: 23)
!7190 = !DILocation(line: 783, column: 9, scope: !7188)
!7191 = !DILocalVariable(name: "delta_x", scope: !7188, file: !3, line: 785, type: !5215)
!7192 = !DILocation(line: 785, column: 14, scope: !7188)
!7193 = !DILocation(line: 785, column: 25, scope: !7188)
!7194 = !DILocation(line: 785, column: 32, scope: !7188)
!7195 = !DILocation(line: 785, column: 36, scope: !7188)
!7196 = !DILocation(line: 785, column: 41, scope: !7188)
!7197 = !DILocation(line: 785, column: 34, scope: !7188)
!7198 = !DILocalVariable(name: "delta_y", scope: !7188, file: !3, line: 786, type: !5215)
!7199 = !DILocation(line: 786, column: 14, scope: !7188)
!7200 = !DILocation(line: 786, column: 25, scope: !7188)
!7201 = !DILocation(line: 786, column: 32, scope: !7188)
!7202 = !DILocation(line: 786, column: 36, scope: !7188)
!7203 = !DILocation(line: 786, column: 41, scope: !7188)
!7204 = !DILocation(line: 786, column: 34, scope: !7188)
!7205 = !DILocation(line: 789, column: 8, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 789, column: 8)
!7207 = !DILocation(line: 789, column: 18, scope: !7206)
!7208 = !DILocation(line: 789, column: 16, scope: !7206)
!7209 = !DILocation(line: 789, column: 8, scope: !7188)
!7210 = !DILocation(line: 790, column: 5, scope: !7206)
!7211 = !DILocation(line: 790, column: 10, scope: !7206)
!7212 = !DILocation(line: 790, column: 22, scope: !7206)
!7213 = !DILocation(line: 791, column: 13, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 791, column: 13)
!7215 = !DILocation(line: 791, column: 23, scope: !7214)
!7216 = !DILocation(line: 791, column: 21, scope: !7214)
!7217 = !DILocation(line: 791, column: 13, scope: !7206)
!7218 = !DILocation(line: 792, column: 5, scope: !7214)
!7219 = !DILocation(line: 792, column: 10, scope: !7214)
!7220 = !DILocation(line: 792, column: 22, scope: !7214)
!7221 = !DILocation(line: 793, column: 13, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 793, column: 13)
!7223 = !DILocation(line: 793, column: 24, scope: !7222)
!7224 = !DILocation(line: 793, column: 23, scope: !7222)
!7225 = !DILocation(line: 793, column: 21, scope: !7222)
!7226 = !DILocation(line: 793, column: 13, scope: !7214)
!7227 = !DILocation(line: 794, column: 5, scope: !7222)
!7228 = !DILocation(line: 794, column: 10, scope: !7222)
!7229 = !DILocation(line: 794, column: 22, scope: !7222)
!7230 = !DILocation(line: 796, column: 5, scope: !7222)
!7231 = !DILocation(line: 796, column: 10, scope: !7222)
!7232 = !DILocation(line: 796, column: 22, scope: !7222)
!7233 = !DILocation(line: 798, column: 8, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 798, column: 8)
!7235 = !DILocation(line: 798, column: 13, scope: !7234)
!7236 = !DILocation(line: 798, column: 17, scope: !7234)
!7237 = !DILocation(line: 798, column: 22, scope: !7234)
!7238 = !DILocation(line: 798, column: 8, scope: !7188)
!7239 = !DILocation(line: 801, column: 42, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 798, column: 37)
!7241 = !DILocation(line: 801, column: 47, scope: !7240)
!7242 = !DILocation(line: 801, column: 53, scope: !7240)
!7243 = !DILocation(line: 801, column: 60, scope: !7240)
!7244 = !DILocation(line: 801, column: 20, scope: !7240)
!7245 = !DILocation(line: 801, column: 66, scope: !7240)
!7246 = !DILocation(line: 801, column: 71, scope: !7240)
!7247 = !DILocation(line: 801, column: 63, scope: !7240)
!7248 = !DILocation(line: 801, column: 75, scope: !7240)
!7249 = !DILocation(line: 802, column: 47, scope: !7240)
!7250 = !DILocation(line: 802, column: 51, scope: !7240)
!7251 = !DILocation(line: 802, column: 62, scope: !7240)
!7252 = !DILocation(line: 802, column: 73, scope: !7240)
!7253 = !DILocation(line: 802, column: 80, scope: !7240)
!7254 = !DILocation(line: 802, column: 83, scope: !7240)
!7255 = !DILocation(line: 802, column: 90, scope: !7240)
!7256 = !DILocation(line: 802, column: 20, scope: !7240)
!7257 = !DILocation(line: 802, column: 93, scope: !7240)
!7258 = !DILocation(line: 0, scope: !7240)
!7259 = !DILocation(line: 801, column: 18, scope: !7240)
!7260 = !DILocation(line: 801, column: 16, scope: !7240)
!7261 = !DILocation(line: 803, column: 4, scope: !7240)
!7262 = !DILocalVariable(name: "delta_min", scope: !7263, file: !3, line: 805, type: !5215)
!7263 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 804, column: 9)
!7264 = !DILocation(line: 805, column: 15, scope: !7263)
!7265 = !DILocation(line: 806, column: 19, scope: !7263)
!7266 = !DILocation(line: 806, column: 32, scope: !7263)
!7267 = !DILocation(line: 806, column: 44, scope: !7263)
!7268 = !DILocation(line: 806, column: 47, scope: !7263)
!7269 = !DILocation(line: 806, column: 60, scope: !7263)
!7270 = !DILocation(line: 806, column: 18, scope: !7263)
!7271 = !DILocation(line: 806, column: 16, scope: !7263)
!7272 = !DILocation(line: 810, column: 8, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 810, column: 8)
!7274 = !DILocation(line: 810, column: 8, scope: !7188)
!7275 = !DILocation(line: 812, column: 37, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 810, column: 20)
!7277 = !DILocation(line: 812, column: 41, scope: !7276)
!7278 = !DILocation(line: 812, column: 48, scope: !7276)
!7279 = !DILocation(line: 812, column: 51, scope: !7276)
!7280 = !DILocation(line: 812, column: 58, scope: !7276)
!7281 = !DILocation(line: 812, column: 16, scope: !7276)
!7282 = !DILocation(line: 812, column: 5, scope: !7276)
!7283 = !DILocation(line: 812, column: 10, scope: !7276)
!7284 = !DILocation(line: 812, column: 14, scope: !7276)
!7285 = !DILocation(line: 814, column: 22, scope: !7276)
!7286 = !DILocation(line: 814, column: 25, scope: !7276)
!7287 = !DILocation(line: 814, column: 29, scope: !7276)
!7288 = !DILocation(line: 814, column: 34, scope: !7276)
!7289 = !DILocation(line: 814, column: 38, scope: !7276)
!7290 = !DILocation(line: 814, column: 5, scope: !7276)
!7291 = !DILocation(line: 815, column: 21, scope: !7276)
!7292 = !DILocation(line: 815, column: 5, scope: !7276)
!7293 = !DILocation(line: 817, column: 5, scope: !7276)
!7294 = !DILocation(line: 819, column: 4, scope: !7188)
!7295 = !DILocation(line: 822, column: 20, scope: !7189)
!7296 = !DILocation(line: 822, column: 4, scope: !7189)
!7297 = !DILocation(line: 823, column: 4, scope: !7189)
!7298 = !DILocation(line: 825, column: 20, scope: !7189)
!7299 = !DILocation(line: 825, column: 4, scope: !7189)
!7300 = !DILocation(line: 826, column: 4, scope: !7189)
!7301 = !DILocation(line: 830, column: 2, scope: !7157)
!7302 = !DILocation(line: 831, column: 1, scope: !7157)
!7303 = distinct !DISubprogram(name: "actionzone_area_poll", scope: !3, file: !3, line: 616, type: !3732, scopeLine: 617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7304 = !DILocalVariable(name: "C", arg: 1, scope: !7303, file: !3, line: 616, type: !3734)
!7305 = !DILocation(line: 616, column: 43, scope: !7303)
!7306 = !DILocalVariable(name: "win", scope: !7303, file: !3, line: 618, type: !5535)
!7307 = !DILocation(line: 618, column: 12, scope: !7303)
!7308 = !DILocation(line: 618, column: 32, scope: !7303)
!7309 = !DILocation(line: 618, column: 18, scope: !7303)
!7310 = !DILocalVariable(name: "sa", scope: !7303, file: !3, line: 619, type: !3286)
!7311 = !DILocation(line: 619, column: 11, scope: !7303)
!7312 = !DILocation(line: 619, column: 28, scope: !7303)
!7313 = !DILocation(line: 619, column: 16, scope: !7303)
!7314 = !DILocation(line: 621, column: 6, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 621, column: 6)
!7316 = !DILocation(line: 621, column: 9, scope: !7315)
!7317 = !DILocation(line: 621, column: 12, scope: !7315)
!7318 = !DILocation(line: 621, column: 16, scope: !7315)
!7319 = !DILocation(line: 621, column: 19, scope: !7315)
!7320 = !DILocation(line: 621, column: 24, scope: !7315)
!7321 = !DILocation(line: 621, column: 6, scope: !7303)
!7322 = !DILocalVariable(name: "xy", scope: !7323, file: !3, line: 622, type: !5214)
!7323 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 621, column: 36)
!7324 = !DILocation(line: 622, column: 14, scope: !7323)
!7325 = !DILocation(line: 622, column: 20, scope: !7323)
!7326 = !DILocation(line: 622, column: 25, scope: !7323)
!7327 = !DILocation(line: 622, column: 37, scope: !7323)
!7328 = !DILocalVariable(name: "az", scope: !7323, file: !3, line: 623, type: !5221)
!7329 = !DILocation(line: 623, column: 10, scope: !7323)
!7330 = !DILocation(line: 625, column: 13, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 625, column: 3)
!7332 = !DILocation(line: 625, column: 17, scope: !7331)
!7333 = !DILocation(line: 625, column: 29, scope: !7331)
!7334 = !DILocation(line: 625, column: 11, scope: !7331)
!7335 = !DILocation(line: 625, column: 8, scope: !7331)
!7336 = !DILocation(line: 625, column: 36, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 625, column: 3)
!7338 = !DILocation(line: 625, column: 3, scope: !7331)
!7339 = !DILocation(line: 626, column: 29, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 626, column: 8)
!7341 = !DILocation(line: 626, column: 33, scope: !7340)
!7342 = !DILocation(line: 626, column: 39, scope: !7340)
!7343 = !DILocation(line: 626, column: 8, scope: !7340)
!7344 = !DILocation(line: 626, column: 8, scope: !7337)
!7345 = !DILocation(line: 627, column: 5, scope: !7340)
!7346 = !DILocation(line: 626, column: 41, scope: !7340)
!7347 = !DILocation(line: 625, column: 45, scope: !7337)
!7348 = !DILocation(line: 625, column: 49, scope: !7337)
!7349 = !DILocation(line: 625, column: 43, scope: !7337)
!7350 = !DILocation(line: 625, column: 3, scope: !7337)
!7351 = distinct !{!7351, !7338, !7352}
!7352 = !DILocation(line: 627, column: 12, scope: !7331)
!7353 = !DILocation(line: 628, column: 2, scope: !7323)
!7354 = !DILocation(line: 629, column: 2, scope: !7303)
!7355 = !DILocation(line: 630, column: 1, scope: !7303)
!7356 = distinct !DISubprogram(name: "actionzone_cancel", scope: !3, file: !3, line: 833, type: !7357, scopeLine: 834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7357 = !DISubroutineType(types: !7358)
!7358 = !{null, !3734, !7081}
!7359 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !7356, file: !3, line: 833, type: !3734)
!7360 = !DILocation(line: 833, column: 41, scope: !7356)
!7361 = !DILocalVariable(name: "op", arg: 2, scope: !7356, file: !3, line: 833, type: !7081)
!7362 = !DILocation(line: 833, column: 64, scope: !7356)
!7363 = !DILocation(line: 835, column: 18, scope: !7356)
!7364 = !DILocation(line: 835, column: 2, scope: !7356)
!7365 = !DILocation(line: 836, column: 1, scope: !7356)
!7366 = distinct !DISubprogram(name: "actionzone_apply", scope: !3, file: !3, line: 717, type: !7367, scopeLine: 718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7367 = !DISubroutineType(types: !7368)
!7368 = !{null, !3734, !7081, !1242}
!7369 = !DILocalVariable(name: "C", arg: 1, scope: !7366, file: !3, line: 717, type: !3734)
!7370 = !DILocation(line: 717, column: 40, scope: !7366)
!7371 = !DILocalVariable(name: "op", arg: 2, scope: !7366, file: !3, line: 717, type: !7081)
!7372 = !DILocation(line: 717, column: 55, scope: !7366)
!7373 = !DILocalVariable(name: "type", arg: 3, scope: !7366, file: !3, line: 717, type: !1242)
!7374 = !DILocation(line: 717, column: 63, scope: !7366)
!7375 = !DILocalVariable(name: "event", scope: !7366, file: !3, line: 719, type: !6999)
!7376 = !DILocation(line: 719, column: 10, scope: !7366)
!7377 = !DILocalVariable(name: "win", scope: !7366, file: !3, line: 720, type: !5535)
!7378 = !DILocation(line: 720, column: 12, scope: !7366)
!7379 = !DILocation(line: 720, column: 32, scope: !7366)
!7380 = !DILocation(line: 720, column: 18, scope: !7366)
!7381 = !DILocalVariable(name: "sad", scope: !7366, file: !3, line: 721, type: !7097)
!7382 = !DILocation(line: 721, column: 19, scope: !7366)
!7383 = !DILocation(line: 721, column: 25, scope: !7366)
!7384 = !DILocation(line: 721, column: 29, scope: !7366)
!7385 = !DILocation(line: 723, column: 30, scope: !7366)
!7386 = !DILocation(line: 723, column: 34, scope: !7366)
!7387 = !DILocation(line: 723, column: 18, scope: !7366)
!7388 = !DILocation(line: 723, column: 2, scope: !7366)
!7389 = !DILocation(line: 723, column: 7, scope: !7366)
!7390 = !DILocation(line: 723, column: 16, scope: !7366)
!7391 = !DILocation(line: 725, column: 28, scope: !7366)
!7392 = !DILocation(line: 725, column: 2, scope: !7366)
!7393 = !DILocation(line: 727, column: 6, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7366, file: !3, line: 727, column: 6)
!7395 = !DILocation(line: 727, column: 11, scope: !7394)
!7396 = !DILocation(line: 727, column: 6, scope: !7366)
!7397 = !DILocation(line: 728, column: 9, scope: !7394)
!7398 = !DILocation(line: 728, column: 14, scope: !7394)
!7399 = !DILocation(line: 728, column: 3, scope: !7394)
!7400 = !DILocation(line: 729, column: 11, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7394, file: !3, line: 729, column: 11)
!7402 = !DILocation(line: 729, column: 16, scope: !7401)
!7403 = !DILocation(line: 729, column: 11, scope: !7394)
!7404 = !DILocation(line: 730, column: 9, scope: !7401)
!7405 = !DILocation(line: 730, column: 14, scope: !7401)
!7406 = !DILocation(line: 730, column: 3, scope: !7401)
!7407 = !DILocation(line: 732, column: 9, scope: !7401)
!7408 = !DILocation(line: 732, column: 14, scope: !7401)
!7409 = !DILocation(line: 734, column: 8, scope: !7366)
!7410 = !DILocation(line: 734, column: 12, scope: !7366)
!7411 = !DILocation(line: 735, column: 21, scope: !7366)
!7412 = !DILocation(line: 735, column: 25, scope: !7366)
!7413 = !DILocation(line: 735, column: 8, scope: !7366)
!7414 = !DILocation(line: 735, column: 19, scope: !7366)
!7415 = !DILocation(line: 736, column: 8, scope: !7366)
!7416 = !DILocation(line: 736, column: 23, scope: !7366)
!7417 = !DILocation(line: 737, column: 2, scope: !7366)
!7418 = !DILocation(line: 737, column: 6, scope: !7366)
!7419 = !DILocation(line: 737, column: 17, scope: !7366)
!7420 = !DILocation(line: 739, column: 15, scope: !7366)
!7421 = !DILocation(line: 739, column: 2, scope: !7366)
!7422 = !DILocation(line: 740, column: 1, scope: !7366)
!7423 = distinct !DISubprogram(name: "actionzone_exit", scope: !3, file: !3, line: 709, type: !7424, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7424 = !DISubroutineType(types: !7425)
!7425 = !{null, !7081}
!7426 = !DILocalVariable(name: "op", arg: 1, scope: !7423, file: !3, line: 709, type: !7081)
!7427 = !DILocation(line: 709, column: 41, scope: !7423)
!7428 = !DILocation(line: 711, column: 6, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 711, column: 6)
!7430 = !DILocation(line: 711, column: 10, scope: !7429)
!7431 = !DILocation(line: 711, column: 6, scope: !7423)
!7432 = !DILocation(line: 712, column: 3, scope: !7429)
!7433 = !DILocation(line: 712, column: 13, scope: !7429)
!7434 = !DILocation(line: 712, column: 17, scope: !7429)
!7435 = !DILocation(line: 713, column: 2, scope: !7423)
!7436 = !DILocation(line: 713, column: 6, scope: !7423)
!7437 = !DILocation(line: 713, column: 17, scope: !7423)
!7438 = !DILocation(line: 714, column: 1, scope: !7423)
!7439 = distinct !DISubprogram(name: "screen_areahascursor", scope: !3, file: !3, line: 603, type: !7440, scopeLine: 604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7440 = !DISubroutineType(types: !7441)
!7441 = !{!3286, !3298, !1242, !1242}
!7442 = !DILocalVariable(name: "scr", arg: 1, scope: !7439, file: !3, line: 603, type: !3298)
!7443 = !DILocation(line: 603, column: 47, scope: !7439)
!7444 = !DILocalVariable(name: "x", arg: 2, scope: !7439, file: !3, line: 603, type: !1242)
!7445 = !DILocation(line: 603, column: 56, scope: !7439)
!7446 = !DILocalVariable(name: "y", arg: 3, scope: !7439, file: !3, line: 603, type: !1242)
!7447 = !DILocation(line: 603, column: 63, scope: !7439)
!7448 = !DILocalVariable(name: "sa", scope: !7439, file: !3, line: 605, type: !3286)
!7449 = !DILocation(line: 605, column: 11, scope: !7439)
!7450 = !DILocation(line: 606, column: 7, scope: !7439)
!7451 = !DILocation(line: 606, column: 12, scope: !7439)
!7452 = !DILocation(line: 606, column: 21, scope: !7439)
!7453 = !DILocation(line: 606, column: 5, scope: !7439)
!7454 = !DILocation(line: 607, column: 2, scope: !7439)
!7455 = !DILocation(line: 607, column: 9, scope: !7439)
!7456 = !DILocation(line: 608, column: 26, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 608, column: 7)
!7458 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 607, column: 13)
!7459 = !DILocation(line: 608, column: 30, scope: !7457)
!7460 = !DILocation(line: 608, column: 38, scope: !7457)
!7461 = !DILocation(line: 608, column: 41, scope: !7457)
!7462 = !DILocation(line: 608, column: 7, scope: !7457)
!7463 = !DILocation(line: 608, column: 7, scope: !7458)
!7464 = !DILocation(line: 608, column: 45, scope: !7457)
!7465 = !DILocation(line: 609, column: 8, scope: !7458)
!7466 = !DILocation(line: 609, column: 12, scope: !7458)
!7467 = !DILocation(line: 609, column: 6, scope: !7458)
!7468 = distinct !{!7468, !7454, !7469}
!7469 = !DILocation(line: 610, column: 2, scope: !7439)
!7470 = !DILocation(line: 612, column: 9, scope: !7439)
!7471 = !DILocation(line: 612, column: 2, scope: !7439)
!7472 = distinct !DISubprogram(name: "repeat_last_exec", scope: !3, file: !3, line: 2824, type: !7473, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7473 = !DISubroutineType(types: !7474)
!7474 = !{!1242, !3734, !7081}
!7475 = !DILocalVariable(name: "C", arg: 1, scope: !7472, file: !3, line: 2824, type: !3734)
!7476 = !DILocation(line: 2824, column: 39, scope: !7472)
!7477 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7472, file: !3, line: 2824, type: !7081)
!7478 = !DILocation(line: 2824, column: 54, scope: !7472)
!7479 = !DILocalVariable(name: "lastop", scope: !7472, file: !3, line: 2826, type: !7081)
!7480 = !DILocation(line: 2826, column: 14, scope: !7472)
!7481 = !DILocation(line: 2826, column: 38, scope: !7472)
!7482 = !DILocation(line: 2826, column: 23, scope: !7472)
!7483 = !DILocation(line: 2826, column: 42, scope: !7472)
!7484 = !DILocation(line: 2826, column: 52, scope: !7472)
!7485 = !DILocation(line: 2828, column: 6, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7472, file: !3, line: 2828, column: 6)
!7487 = !DILocation(line: 2828, column: 6, scope: !7472)
!7488 = !DILocation(line: 2829, column: 22, scope: !7486)
!7489 = !DILocation(line: 2829, column: 25, scope: !7486)
!7490 = !DILocation(line: 2829, column: 3, scope: !7486)
!7491 = !DILocation(line: 2831, column: 2, scope: !7472)
!7492 = distinct !DISubprogram(name: "repeat_history_invoke", scope: !3, file: !3, line: 2848, type: !7079, scopeLine: 2849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7493 = !DILocalVariable(name: "C", arg: 1, scope: !7492, file: !3, line: 2848, type: !3734)
!7494 = !DILocation(line: 2848, column: 44, scope: !7492)
!7495 = !DILocalVariable(name: "op", arg: 2, scope: !7492, file: !3, line: 2848, type: !7081)
!7496 = !DILocation(line: 2848, column: 59, scope: !7492)
!7497 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !7492, file: !3, line: 2848, type: !6997)
!7498 = !DILocation(line: 2848, column: 78, scope: !7492)
!7499 = !DILocalVariable(name: "wm", scope: !7492, file: !3, line: 2850, type: !5716)
!7500 = !DILocation(line: 2850, column: 19, scope: !7492)
!7501 = !DILocation(line: 2850, column: 39, scope: !7492)
!7502 = !DILocation(line: 2850, column: 24, scope: !7492)
!7503 = !DILocalVariable(name: "lastop", scope: !7492, file: !3, line: 2851, type: !7081)
!7504 = !DILocation(line: 2851, column: 14, scope: !7492)
!7505 = !DILocalVariable(name: "pup", scope: !7492, file: !3, line: 2852, type: !7506)
!7506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7507, size: 64)
!7507 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPopupMenu", file: !5478, line: 355, baseType: !7508)
!7508 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupMenu", file: !5478, line: 355, flags: DIFlagFwdDecl)
!7509 = !DILocation(line: 2852, column: 15, scope: !7492)
!7510 = !DILocalVariable(name: "layout", scope: !7492, file: !3, line: 2853, type: !5476)
!7511 = !DILocation(line: 2853, column: 12, scope: !7492)
!7512 = !DILocalVariable(name: "items", scope: !7492, file: !3, line: 2854, type: !1242)
!7513 = !DILocation(line: 2854, column: 6, scope: !7492)
!7514 = !DILocalVariable(name: "i", scope: !7492, file: !3, line: 2854, type: !1242)
!7515 = !DILocation(line: 2854, column: 13, scope: !7492)
!7516 = !DILocation(line: 2856, column: 25, scope: !7492)
!7517 = !DILocation(line: 2856, column: 29, scope: !7492)
!7518 = !DILocation(line: 2856, column: 10, scope: !7492)
!7519 = !DILocation(line: 2856, column: 8, scope: !7492)
!7520 = !DILocation(line: 2857, column: 6, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 2857, column: 6)
!7522 = !DILocation(line: 2857, column: 12, scope: !7521)
!7523 = !DILocation(line: 2857, column: 6, scope: !7492)
!7524 = !DILocation(line: 2858, column: 3, scope: !7521)
!7525 = !DILocation(line: 2860, column: 23, scope: !7492)
!7526 = !DILocation(line: 2860, column: 45, scope: !7492)
!7527 = !DILocation(line: 2860, column: 49, scope: !7492)
!7528 = !DILocation(line: 2860, column: 55, scope: !7492)
!7529 = !DILocation(line: 2860, column: 26, scope: !7492)
!7530 = !DILocation(line: 2860, column: 8, scope: !7492)
!7531 = !DILocation(line: 2860, column: 6, scope: !7492)
!7532 = !DILocation(line: 2861, column: 27, scope: !7492)
!7533 = !DILocation(line: 2861, column: 11, scope: !7492)
!7534 = !DILocation(line: 2861, column: 9, scope: !7492)
!7535 = !DILocation(line: 2863, column: 11, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 2863, column: 2)
!7537 = !DILocation(line: 2863, column: 17, scope: !7536)
!7538 = !DILocation(line: 2863, column: 9, scope: !7536)
!7539 = !DILocation(line: 2863, column: 31, scope: !7536)
!7540 = !DILocation(line: 2863, column: 35, scope: !7536)
!7541 = !DILocation(line: 2863, column: 45, scope: !7536)
!7542 = !DILocation(line: 2863, column: 29, scope: !7536)
!7543 = !DILocation(line: 2863, column: 7, scope: !7536)
!7544 = !DILocation(line: 2863, column: 51, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 2863, column: 2)
!7546 = !DILocation(line: 2863, column: 2, scope: !7536)
!7547 = !DILocation(line: 2864, column: 32, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 2864, column: 7)
!7549 = !DILocation(line: 2864, column: 35, scope: !7548)
!7550 = !DILocation(line: 2864, column: 7, scope: !7548)
!7551 = !DILocation(line: 2864, column: 7, scope: !7545)
!7552 = !DILocation(line: 2865, column: 15, scope: !7548)
!7553 = !DILocation(line: 2865, column: 42, scope: !7548)
!7554 = !DILocation(line: 2865, column: 50, scope: !7548)
!7555 = !DILocation(line: 2865, column: 56, scope: !7548)
!7556 = !DILocation(line: 2865, column: 23, scope: !7548)
!7557 = !DILocation(line: 2865, column: 74, scope: !7548)
!7558 = !DILocation(line: 2865, column: 78, scope: !7548)
!7559 = !DILocation(line: 2865, column: 84, scope: !7548)
!7560 = !DILocation(line: 2865, column: 101, scope: !7548)
!7561 = !DILocation(line: 2865, column: 4, scope: !7548)
!7562 = !DILocation(line: 2864, column: 41, scope: !7548)
!7563 = !DILocation(line: 2863, column: 68, scope: !7545)
!7564 = !DILocation(line: 2863, column: 76, scope: !7545)
!7565 = !DILocation(line: 2863, column: 66, scope: !7545)
!7566 = !DILocation(line: 2863, column: 83, scope: !7545)
!7567 = !DILocation(line: 2863, column: 2, scope: !7545)
!7568 = distinct !{!7568, !7546, !7569}
!7569 = !DILocation(line: 2865, column: 102, scope: !7536)
!7570 = !DILocation(line: 2867, column: 15, scope: !7492)
!7571 = !DILocation(line: 2867, column: 18, scope: !7492)
!7572 = !DILocation(line: 2867, column: 2, scope: !7492)
!7573 = !DILocation(line: 2869, column: 2, scope: !7492)
!7574 = !DILocation(line: 2870, column: 1, scope: !7492)
!7575 = distinct !DISubprogram(name: "repeat_history_exec", scope: !3, file: !3, line: 2872, type: !7473, scopeLine: 2873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7576 = !DILocalVariable(name: "C", arg: 1, scope: !7575, file: !3, line: 2872, type: !3734)
!7577 = !DILocation(line: 2872, column: 42, scope: !7575)
!7578 = !DILocalVariable(name: "op", arg: 2, scope: !7575, file: !3, line: 2872, type: !7081)
!7579 = !DILocation(line: 2872, column: 57, scope: !7575)
!7580 = !DILocalVariable(name: "wm", scope: !7575, file: !3, line: 2874, type: !5716)
!7581 = !DILocation(line: 2874, column: 19, scope: !7575)
!7582 = !DILocation(line: 2874, column: 39, scope: !7575)
!7583 = !DILocation(line: 2874, column: 24, scope: !7575)
!7584 = !DILocation(line: 2876, column: 21, scope: !7575)
!7585 = !DILocation(line: 2876, column: 25, scope: !7575)
!7586 = !DILocation(line: 2876, column: 48, scope: !7575)
!7587 = !DILocation(line: 2876, column: 52, scope: !7575)
!7588 = !DILocation(line: 2876, column: 36, scope: !7575)
!7589 = !DILocation(line: 2876, column: 7, scope: !7575)
!7590 = !DILocation(line: 2876, column: 5, scope: !7575)
!7591 = !DILocation(line: 2877, column: 6, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 2877, column: 6)
!7593 = !DILocation(line: 2877, column: 6, scope: !7575)
!7594 = !DILocation(line: 2879, column: 16, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 2877, column: 10)
!7596 = !DILocation(line: 2879, column: 20, scope: !7595)
!7597 = !DILocation(line: 2879, column: 31, scope: !7595)
!7598 = !DILocation(line: 2879, column: 3, scope: !7595)
!7599 = !DILocation(line: 2880, column: 16, scope: !7595)
!7600 = !DILocation(line: 2880, column: 20, scope: !7595)
!7601 = !DILocation(line: 2880, column: 31, scope: !7595)
!7602 = !DILocation(line: 2880, column: 3, scope: !7595)
!7603 = !DILocation(line: 2882, column: 22, scope: !7595)
!7604 = !DILocation(line: 2882, column: 25, scope: !7595)
!7605 = !DILocation(line: 2882, column: 3, scope: !7595)
!7606 = !DILocation(line: 2883, column: 2, scope: !7595)
!7607 = !DILocation(line: 2885, column: 2, scope: !7575)
!7608 = distinct !DISubprogram(name: "redo_last_invoke", scope: !3, file: !3, line: 2906, type: !7079, scopeLine: 2907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7609 = !DILocalVariable(name: "C", arg: 1, scope: !7608, file: !3, line: 2906, type: !3734)
!7610 = !DILocation(line: 2906, column: 39, scope: !7608)
!7611 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !7608, file: !3, line: 2906, type: !7081)
!7612 = !DILocation(line: 2906, column: 54, scope: !7608)
!7613 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !7608, file: !3, line: 2906, type: !6997)
!7614 = !DILocation(line: 2906, column: 81, scope: !7608)
!7615 = !DILocalVariable(name: "lastop", scope: !7608, file: !3, line: 2908, type: !7081)
!7616 = !DILocation(line: 2908, column: 14, scope: !7608)
!7617 = !DILocation(line: 2908, column: 45, scope: !7608)
!7618 = !DILocation(line: 2908, column: 23, scope: !7608)
!7619 = !DILocation(line: 2910, column: 6, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 2910, column: 6)
!7621 = !DILocation(line: 2910, column: 6, scope: !7608)
!7622 = !DILocation(line: 2911, column: 26, scope: !7620)
!7623 = !DILocation(line: 2911, column: 29, scope: !7620)
!7624 = !DILocation(line: 2911, column: 3, scope: !7620)
!7625 = !DILocation(line: 2913, column: 2, scope: !7608)
!7626 = distinct !DISubprogram(name: "area_move_exec", scope: !3, file: !3, line: 1234, type: !7473, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7627 = !DILocalVariable(name: "C", arg: 1, scope: !7626, file: !3, line: 1234, type: !3734)
!7628 = !DILocation(line: 1234, column: 37, scope: !7626)
!7629 = !DILocalVariable(name: "op", arg: 2, scope: !7626, file: !3, line: 1234, type: !7081)
!7630 = !DILocation(line: 1234, column: 52, scope: !7626)
!7631 = !DILocation(line: 1236, column: 22, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 1236, column: 6)
!7633 = !DILocation(line: 1236, column: 25, scope: !7632)
!7634 = !DILocation(line: 1236, column: 7, scope: !7632)
!7635 = !DILocation(line: 1236, column: 6, scope: !7626)
!7636 = !DILocation(line: 1237, column: 3, scope: !7632)
!7637 = !DILocation(line: 1239, column: 18, scope: !7626)
!7638 = !DILocation(line: 1239, column: 21, scope: !7626)
!7639 = !DILocation(line: 1239, column: 2, scope: !7626)
!7640 = !DILocation(line: 1240, column: 17, scope: !7626)
!7641 = !DILocation(line: 1240, column: 20, scope: !7626)
!7642 = !DILocation(line: 1240, column: 2, scope: !7626)
!7643 = !DILocation(line: 1242, column: 2, scope: !7626)
!7644 = !DILocation(line: 1243, column: 1, scope: !7626)
!7645 = distinct !DISubprogram(name: "area_move_invoke", scope: !3, file: !3, line: 1246, type: !7079, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7646 = !DILocalVariable(name: "C", arg: 1, scope: !7645, file: !3, line: 1246, type: !3734)
!7647 = !DILocation(line: 1246, column: 39, scope: !7645)
!7648 = !DILocalVariable(name: "op", arg: 2, scope: !7645, file: !3, line: 1246, type: !7081)
!7649 = !DILocation(line: 1246, column: 54, scope: !7645)
!7650 = !DILocalVariable(name: "event", arg: 3, scope: !7645, file: !3, line: 1246, type: !6997)
!7651 = !DILocation(line: 1246, column: 73, scope: !7645)
!7652 = !DILocation(line: 1248, column: 14, scope: !7645)
!7653 = !DILocation(line: 1248, column: 18, scope: !7645)
!7654 = !DILocation(line: 1248, column: 28, scope: !7645)
!7655 = !DILocation(line: 1248, column: 35, scope: !7645)
!7656 = !DILocation(line: 1248, column: 2, scope: !7645)
!7657 = !DILocation(line: 1249, column: 14, scope: !7645)
!7658 = !DILocation(line: 1249, column: 18, scope: !7645)
!7659 = !DILocation(line: 1249, column: 28, scope: !7645)
!7660 = !DILocation(line: 1249, column: 35, scope: !7645)
!7661 = !DILocation(line: 1249, column: 2, scope: !7645)
!7662 = !DILocation(line: 1251, column: 22, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 1251, column: 6)
!7664 = !DILocation(line: 1251, column: 25, scope: !7663)
!7665 = !DILocation(line: 1251, column: 7, scope: !7663)
!7666 = !DILocation(line: 1251, column: 6, scope: !7645)
!7667 = !DILocation(line: 1252, column: 3, scope: !7663)
!7668 = !DILocation(line: 1255, column: 29, scope: !7645)
!7669 = !DILocation(line: 1255, column: 32, scope: !7645)
!7670 = !DILocation(line: 1255, column: 2, scope: !7645)
!7671 = !DILocation(line: 1257, column: 2, scope: !7645)
!7672 = !DILocation(line: 1258, column: 1, scope: !7645)
!7673 = distinct !DISubprogram(name: "area_move_cancel", scope: !3, file: !3, line: 1260, type: !7357, scopeLine: 1261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7674 = !DILocalVariable(name: "C", arg: 1, scope: !7673, file: !3, line: 1260, type: !3734)
!7675 = !DILocation(line: 1260, column: 40, scope: !7673)
!7676 = !DILocalVariable(name: "op", arg: 2, scope: !7673, file: !3, line: 1260, type: !7081)
!7677 = !DILocation(line: 1260, column: 55, scope: !7673)
!7678 = !DILocation(line: 1263, column: 14, scope: !7673)
!7679 = !DILocation(line: 1263, column: 18, scope: !7673)
!7680 = !DILocation(line: 1263, column: 2, scope: !7673)
!7681 = !DILocation(line: 1264, column: 18, scope: !7673)
!7682 = !DILocation(line: 1264, column: 21, scope: !7673)
!7683 = !DILocation(line: 1264, column: 2, scope: !7673)
!7684 = !DILocation(line: 1265, column: 17, scope: !7673)
!7685 = !DILocation(line: 1265, column: 20, scope: !7673)
!7686 = !DILocation(line: 1265, column: 2, scope: !7673)
!7687 = !DILocation(line: 1266, column: 1, scope: !7673)
!7688 = distinct !DISubprogram(name: "area_move_modal", scope: !3, file: !3, line: 1269, type: !7079, scopeLine: 1270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7689 = !DILocalVariable(name: "C", arg: 1, scope: !7688, file: !3, line: 1269, type: !3734)
!7690 = !DILocation(line: 1269, column: 38, scope: !7688)
!7691 = !DILocalVariable(name: "op", arg: 2, scope: !7688, file: !3, line: 1269, type: !7081)
!7692 = !DILocation(line: 1269, column: 53, scope: !7688)
!7693 = !DILocalVariable(name: "event", arg: 3, scope: !7688, file: !3, line: 1269, type: !6997)
!7694 = !DILocation(line: 1269, column: 72, scope: !7688)
!7695 = !DILocalVariable(name: "md", scope: !7688, file: !3, line: 1271, type: !7696)
!7696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7697, size: 64)
!7697 = !DIDerivedType(tag: DW_TAG_typedef, name: "sAreaMoveData", file: !3, line: 1070, baseType: !7698)
!7698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sAreaMoveData", file: !3, line: 1067, size: 160, elements: !7699)
!7699 = !{!7700, !7701, !7702, !7703, !7704}
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "bigger", scope: !7698, file: !3, line: 1068, baseType: !1242, size: 32)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "smaller", scope: !7698, file: !3, line: 1068, baseType: !1242, size: 32, offset: 32)
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "origval", scope: !7698, file: !3, line: 1068, baseType: !1242, size: 32, offset: 64)
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !7698, file: !3, line: 1068, baseType: !1242, size: 32, offset: 96)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !7698, file: !3, line: 1069, baseType: !1433, size: 8, offset: 128)
!7705 = !DILocation(line: 1271, column: 17, scope: !7688)
!7706 = !DILocation(line: 1271, column: 22, scope: !7688)
!7707 = !DILocation(line: 1271, column: 26, scope: !7688)
!7708 = !DILocalVariable(name: "delta", scope: !7688, file: !3, line: 1272, type: !1242)
!7709 = !DILocation(line: 1272, column: 6, scope: !7688)
!7710 = !DILocalVariable(name: "x", scope: !7688, file: !3, line: 1272, type: !1242)
!7711 = !DILocation(line: 1272, column: 13, scope: !7688)
!7712 = !DILocalVariable(name: "y", scope: !7688, file: !3, line: 1272, type: !1242)
!7713 = !DILocation(line: 1272, column: 16, scope: !7688)
!7714 = !DILocation(line: 1275, column: 10, scope: !7688)
!7715 = !DILocation(line: 1275, column: 17, scope: !7688)
!7716 = !DILocation(line: 1275, column: 2, scope: !7688)
!7717 = !DILocation(line: 1278, column: 20, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 1277, column: 3)
!7719 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 1275, column: 23)
!7720 = !DILocation(line: 1278, column: 24, scope: !7718)
!7721 = !DILocation(line: 1278, column: 8, scope: !7718)
!7722 = !DILocation(line: 1278, column: 6, scope: !7718)
!7723 = !DILocation(line: 1279, column: 20, scope: !7718)
!7724 = !DILocation(line: 1279, column: 24, scope: !7718)
!7725 = !DILocation(line: 1279, column: 8, scope: !7718)
!7726 = !DILocation(line: 1279, column: 6, scope: !7718)
!7727 = !DILocation(line: 1281, column: 13, scope: !7718)
!7728 = !DILocation(line: 1281, column: 17, scope: !7718)
!7729 = !DILocation(line: 1281, column: 21, scope: !7718)
!7730 = !DILocation(line: 1281, column: 12, scope: !7718)
!7731 = !DILocation(line: 1281, column: 31, scope: !7718)
!7732 = !DILocation(line: 1281, column: 38, scope: !7718)
!7733 = !DILocation(line: 1281, column: 42, scope: !7718)
!7734 = !DILocation(line: 1281, column: 40, scope: !7718)
!7735 = !DILocation(line: 1281, column: 46, scope: !7718)
!7736 = !DILocation(line: 1281, column: 53, scope: !7718)
!7737 = !DILocation(line: 1281, column: 57, scope: !7718)
!7738 = !DILocation(line: 1281, column: 55, scope: !7718)
!7739 = !DILocation(line: 1281, column: 10, scope: !7718)
!7740 = !DILocation(line: 1282, column: 8, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 1282, column: 8)
!7742 = !DILocation(line: 1282, column: 12, scope: !7741)
!7743 = !DILocation(line: 1282, column: 8, scope: !7718)
!7744 = !DILocation(line: 1282, column: 26, scope: !7741)
!7745 = !DILocation(line: 1282, column: 35, scope: !7741)
!7746 = !DILocation(line: 1282, column: 43, scope: !7741)
!7747 = !DILocation(line: 1282, column: 47, scope: !7741)
!7748 = !DILocation(line: 1282, column: 41, scope: !7741)
!7749 = !DILocation(line: 1282, column: 32, scope: !7741)
!7750 = !DILocation(line: 1282, column: 24, scope: !7741)
!7751 = !DILocation(line: 1282, column: 18, scope: !7741)
!7752 = !DILocation(line: 1283, column: 16, scope: !7718)
!7753 = !DILocation(line: 1283, column: 20, scope: !7718)
!7754 = !DILocation(line: 1283, column: 34, scope: !7718)
!7755 = !DILocation(line: 1283, column: 4, scope: !7718)
!7756 = !DILocation(line: 1285, column: 20, scope: !7718)
!7757 = !DILocation(line: 1285, column: 23, scope: !7718)
!7758 = !DILocation(line: 1285, column: 4, scope: !7718)
!7759 = !DILocation(line: 1286, column: 4, scope: !7718)
!7760 = !DILocation(line: 1290, column: 12, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 1289, column: 3)
!7762 = !DILocation(line: 1290, column: 19, scope: !7761)
!7763 = !DILocation(line: 1290, column: 4, scope: !7761)
!7764 = !DILocation(line: 1292, column: 21, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 1290, column: 24)
!7766 = !DILocation(line: 1292, column: 24, scope: !7765)
!7767 = !DILocation(line: 1292, column: 6, scope: !7765)
!7768 = !DILocation(line: 1293, column: 6, scope: !7765)
!7769 = !DILocation(line: 1296, column: 23, scope: !7765)
!7770 = !DILocation(line: 1296, column: 26, scope: !7765)
!7771 = !DILocation(line: 1296, column: 6, scope: !7765)
!7772 = !DILocation(line: 1297, column: 6, scope: !7765)
!7773 = !DILocation(line: 1300, column: 6, scope: !7765)
!7774 = !DILocation(line: 1300, column: 10, scope: !7765)
!7775 = !DILocation(line: 1300, column: 15, scope: !7765)
!7776 = !DILocation(line: 1301, column: 6, scope: !7765)
!7777 = !DILocation(line: 1303, column: 6, scope: !7765)
!7778 = !DILocation(line: 1303, column: 10, scope: !7765)
!7779 = !DILocation(line: 1303, column: 15, scope: !7765)
!7780 = !DILocation(line: 1304, column: 6, scope: !7765)
!7781 = !DILocation(line: 1306, column: 4, scope: !7761)
!7782 = !DILocation(line: 1310, column: 2, scope: !7688)
!7783 = !DILocation(line: 1311, column: 1, scope: !7688)
!7784 = distinct !DISubprogram(name: "area_move_init", scope: !3, file: !3, line: 1125, type: !7473, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7785 = !DILocalVariable(name: "C", arg: 1, scope: !7784, file: !3, line: 1125, type: !3734)
!7786 = !DILocation(line: 1125, column: 37, scope: !7784)
!7787 = !DILocalVariable(name: "op", arg: 2, scope: !7784, file: !3, line: 1125, type: !7081)
!7788 = !DILocation(line: 1125, column: 52, scope: !7784)
!7789 = !DILocalVariable(name: "sc", scope: !7784, file: !3, line: 1127, type: !3298)
!7790 = !DILocation(line: 1127, column: 11, scope: !7784)
!7791 = !DILocation(line: 1127, column: 30, scope: !7784)
!7792 = !DILocation(line: 1127, column: 16, scope: !7784)
!7793 = !DILocalVariable(name: "win", scope: !7784, file: !3, line: 1128, type: !5535)
!7794 = !DILocation(line: 1128, column: 12, scope: !7784)
!7795 = !DILocation(line: 1128, column: 32, scope: !7784)
!7796 = !DILocation(line: 1128, column: 18, scope: !7784)
!7797 = !DILocalVariable(name: "actedge", scope: !7784, file: !3, line: 1129, type: !3257)
!7798 = !DILocation(line: 1129, column: 11, scope: !7784)
!7799 = !DILocalVariable(name: "md", scope: !7784, file: !3, line: 1130, type: !7696)
!7800 = !DILocation(line: 1130, column: 17, scope: !7784)
!7801 = !DILocalVariable(name: "v1", scope: !7784, file: !3, line: 1131, type: !3265)
!7802 = !DILocation(line: 1131, column: 11, scope: !7784)
!7803 = !DILocalVariable(name: "winsize_x", scope: !7784, file: !3, line: 1132, type: !5215)
!7804 = !DILocation(line: 1132, column: 12, scope: !7784)
!7805 = !DILocation(line: 1132, column: 43, scope: !7784)
!7806 = !DILocation(line: 1132, column: 24, scope: !7784)
!7807 = !DILocalVariable(name: "winsize_y", scope: !7784, file: !3, line: 1133, type: !5215)
!7808 = !DILocation(line: 1133, column: 12, scope: !7784)
!7809 = !DILocation(line: 1133, column: 43, scope: !7784)
!7810 = !DILocation(line: 1133, column: 24, scope: !7784)
!7811 = !DILocalVariable(name: "x", scope: !7784, file: !3, line: 1134, type: !1242)
!7812 = !DILocation(line: 1134, column: 6, scope: !7784)
!7813 = !DILocalVariable(name: "y", scope: !7784, file: !3, line: 1134, type: !1242)
!7814 = !DILocation(line: 1134, column: 9, scope: !7784)
!7815 = !DILocation(line: 1137, column: 18, scope: !7784)
!7816 = !DILocation(line: 1137, column: 22, scope: !7784)
!7817 = !DILocation(line: 1137, column: 6, scope: !7784)
!7818 = !DILocation(line: 1137, column: 4, scope: !7784)
!7819 = !DILocation(line: 1138, column: 18, scope: !7784)
!7820 = !DILocation(line: 1138, column: 22, scope: !7784)
!7821 = !DILocation(line: 1138, column: 6, scope: !7784)
!7822 = !DILocation(line: 1138, column: 4, scope: !7784)
!7823 = !DILocation(line: 1141, column: 39, scope: !7784)
!7824 = !DILocation(line: 1141, column: 43, scope: !7784)
!7825 = !DILocation(line: 1141, column: 54, scope: !7784)
!7826 = !DILocation(line: 1141, column: 65, scope: !7784)
!7827 = !DILocation(line: 1141, column: 68, scope: !7784)
!7828 = !DILocation(line: 1141, column: 12, scope: !7784)
!7829 = !DILocation(line: 1141, column: 10, scope: !7784)
!7830 = !DILocation(line: 1142, column: 6, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 1142, column: 6)
!7832 = !DILocation(line: 1142, column: 14, scope: !7831)
!7833 = !DILocation(line: 1142, column: 6, scope: !7784)
!7834 = !DILocation(line: 1142, column: 23, scope: !7831)
!7835 = !DILocation(line: 1144, column: 7, scope: !7784)
!7836 = !DILocation(line: 1144, column: 5, scope: !7784)
!7837 = !DILocation(line: 1145, column: 19, scope: !7784)
!7838 = !DILocation(line: 1145, column: 2, scope: !7784)
!7839 = !DILocation(line: 1145, column: 6, scope: !7784)
!7840 = !DILocation(line: 1145, column: 17, scope: !7784)
!7841 = !DILocation(line: 1147, column: 34, scope: !7784)
!7842 = !DILocation(line: 1147, column: 12, scope: !7784)
!7843 = !DILocation(line: 1147, column: 2, scope: !7784)
!7844 = !DILocation(line: 1147, column: 6, scope: !7784)
!7845 = !DILocation(line: 1147, column: 10, scope: !7784)
!7846 = !DILocation(line: 1148, column: 6, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 1148, column: 6)
!7848 = !DILocation(line: 1148, column: 10, scope: !7847)
!7849 = !DILocation(line: 1148, column: 14, scope: !7847)
!7850 = !DILocation(line: 1148, column: 6, scope: !7784)
!7851 = !DILocation(line: 1148, column: 36, scope: !7847)
!7852 = !DILocation(line: 1148, column: 45, scope: !7847)
!7853 = !DILocation(line: 1148, column: 49, scope: !7847)
!7854 = !DILocation(line: 1148, column: 53, scope: !7847)
!7855 = !DILocation(line: 1148, column: 22, scope: !7847)
!7856 = !DILocation(line: 1148, column: 26, scope: !7847)
!7857 = !DILocation(line: 1148, column: 34, scope: !7847)
!7858 = !DILocation(line: 1149, column: 21, scope: !7847)
!7859 = !DILocation(line: 1149, column: 30, scope: !7847)
!7860 = !DILocation(line: 1149, column: 34, scope: !7847)
!7861 = !DILocation(line: 1149, column: 38, scope: !7847)
!7862 = !DILocation(line: 1149, column: 7, scope: !7847)
!7863 = !DILocation(line: 1149, column: 11, scope: !7847)
!7864 = !DILocation(line: 1149, column: 19, scope: !7847)
!7865 = !DILocation(line: 1151, column: 27, scope: !7784)
!7866 = !DILocation(line: 1151, column: 31, scope: !7784)
!7867 = !DILocation(line: 1151, column: 2, scope: !7784)
!7868 = !DILocation(line: 1153, column: 12, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 1153, column: 2)
!7870 = !DILocation(line: 1153, column: 16, scope: !7869)
!7871 = !DILocation(line: 1153, column: 25, scope: !7869)
!7872 = !DILocation(line: 1153, column: 10, scope: !7869)
!7873 = !DILocation(line: 1153, column: 7, scope: !7869)
!7874 = !DILocation(line: 1153, column: 32, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7869, file: !3, line: 1153, column: 2)
!7876 = !DILocation(line: 1153, column: 2, scope: !7869)
!7877 = !DILocation(line: 1154, column: 18, scope: !7875)
!7878 = !DILocation(line: 1154, column: 22, scope: !7875)
!7879 = !DILocation(line: 1154, column: 3, scope: !7875)
!7880 = !DILocation(line: 1154, column: 7, scope: !7875)
!7881 = !DILocation(line: 1154, column: 16, scope: !7875)
!7882 = !DILocation(line: 1153, column: 41, scope: !7875)
!7883 = !DILocation(line: 1153, column: 45, scope: !7875)
!7884 = !DILocation(line: 1153, column: 39, scope: !7875)
!7885 = !DILocation(line: 1153, column: 2, scope: !7875)
!7886 = distinct !{!7886, !7876, !7887}
!7887 = !DILocation(line: 1154, column: 22, scope: !7869)
!7888 = !DILocation(line: 1156, column: 23, scope: !7784)
!7889 = !DILocation(line: 1156, column: 27, scope: !7784)
!7890 = !DILocation(line: 1156, column: 31, scope: !7784)
!7891 = !DILocation(line: 1156, column: 36, scope: !7784)
!7892 = !DILocation(line: 1156, column: 47, scope: !7784)
!7893 = !DILocation(line: 1156, column: 59, scope: !7784)
!7894 = !DILocation(line: 1156, column: 63, scope: !7784)
!7895 = !DILocation(line: 1156, column: 72, scope: !7784)
!7896 = !DILocation(line: 1156, column: 76, scope: !7784)
!7897 = !DILocation(line: 1156, column: 2, scope: !7784)
!7898 = !DILocation(line: 1158, column: 2, scope: !7784)
!7899 = !DILocation(line: 1159, column: 1, scope: !7784)
!7900 = distinct !DISubprogram(name: "area_move_apply", scope: !3, file: !3, line: 1214, type: !7357, scopeLine: 1215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7901 = !DILocalVariable(name: "C", arg: 1, scope: !7900, file: !3, line: 1214, type: !3734)
!7902 = !DILocation(line: 1214, column: 39, scope: !7900)
!7903 = !DILocalVariable(name: "op", arg: 2, scope: !7900, file: !3, line: 1214, type: !7081)
!7904 = !DILocation(line: 1214, column: 54, scope: !7900)
!7905 = !DILocalVariable(name: "md", scope: !7900, file: !3, line: 1216, type: !7696)
!7906 = !DILocation(line: 1216, column: 17, scope: !7900)
!7907 = !DILocation(line: 1216, column: 22, scope: !7900)
!7908 = !DILocation(line: 1216, column: 26, scope: !7900)
!7909 = !DILocalVariable(name: "delta", scope: !7900, file: !3, line: 1217, type: !1242)
!7910 = !DILocation(line: 1217, column: 6, scope: !7900)
!7911 = !DILocation(line: 1219, column: 22, scope: !7900)
!7912 = !DILocation(line: 1219, column: 26, scope: !7900)
!7913 = !DILocation(line: 1219, column: 10, scope: !7900)
!7914 = !DILocation(line: 1219, column: 8, scope: !7900)
!7915 = !DILocation(line: 1220, column: 21, scope: !7900)
!7916 = !DILocation(line: 1220, column: 24, scope: !7900)
!7917 = !DILocation(line: 1220, column: 28, scope: !7900)
!7918 = !DILocation(line: 1220, column: 37, scope: !7900)
!7919 = !DILocation(line: 1220, column: 44, scope: !7900)
!7920 = !DILocation(line: 1220, column: 48, scope: !7900)
!7921 = !DILocation(line: 1220, column: 53, scope: !7900)
!7922 = !DILocation(line: 1220, column: 57, scope: !7900)
!7923 = !DILocation(line: 1220, column: 65, scope: !7900)
!7924 = !DILocation(line: 1220, column: 69, scope: !7900)
!7925 = !DILocation(line: 1220, column: 2, scope: !7900)
!7926 = !DILocation(line: 1221, column: 1, scope: !7900)
!7927 = distinct !DISubprogram(name: "area_move_exit", scope: !3, file: !3, line: 1223, type: !7357, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7928 = !DILocalVariable(name: "C", arg: 1, scope: !7927, file: !3, line: 1223, type: !3734)
!7929 = !DILocation(line: 1223, column: 38, scope: !7927)
!7930 = !DILocalVariable(name: "op", arg: 2, scope: !7927, file: !3, line: 1223, type: !7081)
!7931 = !DILocation(line: 1223, column: 53, scope: !7927)
!7932 = !DILocation(line: 1225, column: 6, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 1225, column: 6)
!7934 = !DILocation(line: 1225, column: 10, scope: !7933)
!7935 = !DILocation(line: 1225, column: 6, scope: !7927)
!7936 = !DILocation(line: 1226, column: 3, scope: !7933)
!7937 = !DILocation(line: 1226, column: 13, scope: !7933)
!7938 = !DILocation(line: 1226, column: 17, scope: !7933)
!7939 = !DILocation(line: 1227, column: 2, scope: !7927)
!7940 = !DILocation(line: 1227, column: 6, scope: !7927)
!7941 = !DILocation(line: 1227, column: 17, scope: !7927)
!7942 = !DILocation(line: 1230, column: 38, scope: !7927)
!7943 = !DILocation(line: 1230, column: 24, scope: !7927)
!7944 = !DILocation(line: 1230, column: 2, scope: !7927)
!7945 = !DILocation(line: 1231, column: 38, scope: !7927)
!7946 = !DILocation(line: 1231, column: 24, scope: !7927)
!7947 = !DILocation(line: 1231, column: 2, scope: !7927)
!7948 = !DILocation(line: 1232, column: 1, scope: !7927)
!7949 = distinct !DISubprogram(name: "area_move_set_limits", scope: !3, file: !3, line: 1074, type: !7950, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!7950 = !DISubroutineType(types: !7951)
!7951 = !{null, !3298, !1242, !5215, !5215, !7952, !7952}
!7952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!7953 = !DILocalVariable(name: "sc", arg: 1, scope: !7949, file: !3, line: 1074, type: !3298)
!7954 = !DILocation(line: 1074, column: 43, scope: !7949)
!7955 = !DILocalVariable(name: "dir", arg: 2, scope: !7949, file: !3, line: 1074, type: !1242)
!7956 = !DILocation(line: 1074, column: 51, scope: !7949)
!7957 = !DILocalVariable(name: "winsize_x", arg: 3, scope: !7949, file: !3, line: 1075, type: !5215)
!7958 = !DILocation(line: 1075, column: 44, scope: !7949)
!7959 = !DILocalVariable(name: "winsize_y", arg: 4, scope: !7949, file: !3, line: 1075, type: !5215)
!7960 = !DILocation(line: 1075, column: 65, scope: !7949)
!7961 = !DILocalVariable(name: "bigger", arg: 5, scope: !7949, file: !3, line: 1076, type: !7952)
!7962 = !DILocation(line: 1076, column: 39, scope: !7949)
!7963 = !DILocalVariable(name: "smaller", arg: 6, scope: !7949, file: !3, line: 1076, type: !7952)
!7964 = !DILocation(line: 1076, column: 52, scope: !7949)
!7965 = !DILocalVariable(name: "sa", scope: !7949, file: !3, line: 1078, type: !3286)
!7966 = !DILocation(line: 1078, column: 11, scope: !7949)
!7967 = !DILocalVariable(name: "areaminy", scope: !7949, file: !3, line: 1079, type: !1242)
!7968 = !DILocation(line: 1079, column: 6, scope: !7949)
!7969 = !DILocation(line: 1079, column: 17, scope: !7949)
!7970 = !DILocalVariable(name: "areamin", scope: !7949, file: !3, line: 1080, type: !1242)
!7971 = !DILocation(line: 1080, column: 6, scope: !7949)
!7972 = !DILocation(line: 1083, column: 13, scope: !7949)
!7973 = !DILocation(line: 1083, column: 21, scope: !7949)
!7974 = !DILocation(line: 1083, column: 3, scope: !7949)
!7975 = !DILocation(line: 1083, column: 10, scope: !7949)
!7976 = !DILocation(line: 1085, column: 12, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 1085, column: 2)
!7978 = !DILocation(line: 1085, column: 16, scope: !7977)
!7979 = !DILocation(line: 1085, column: 25, scope: !7977)
!7980 = !DILocation(line: 1085, column: 10, scope: !7977)
!7981 = !DILocation(line: 1085, column: 7, scope: !7977)
!7982 = !DILocation(line: 1085, column: 32, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 1085, column: 2)
!7984 = !DILocation(line: 1085, column: 2, scope: !7977)
!7985 = !DILocation(line: 1086, column: 7, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 1086, column: 7)
!7987 = distinct !DILexicalBlock(scope: !7983, file: !3, line: 1085, column: 51)
!7988 = !DILocation(line: 1086, column: 11, scope: !7986)
!7989 = !DILocation(line: 1086, column: 7, scope: !7987)
!7990 = !DILocalVariable(name: "y1", scope: !7991, file: !3, line: 1087, type: !1242)
!7991 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 1086, column: 19)
!7992 = !DILocation(line: 1087, column: 8, scope: !7991)
!7993 = !DILocation(line: 1088, column: 14, scope: !7991)
!7994 = !DILocation(line: 1088, column: 12, scope: !7991)
!7995 = !DILocation(line: 1090, column: 8, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 1090, column: 8)
!7997 = !DILocation(line: 1090, column: 12, scope: !7996)
!7998 = !DILocation(line: 1090, column: 16, scope: !7996)
!7999 = !DILocation(line: 1090, column: 20, scope: !7996)
!8000 = !DILocation(line: 1090, column: 22, scope: !7996)
!8001 = !DILocation(line: 1090, column: 8, scope: !7991)
!8002 = !DILocation(line: 1091, column: 18, scope: !7996)
!8003 = !DILocation(line: 1091, column: 13, scope: !7996)
!8004 = !DILocation(line: 1091, column: 5, scope: !7996)
!8005 = !DILocation(line: 1092, column: 8, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 1092, column: 8)
!8007 = !DILocation(line: 1092, column: 12, scope: !8006)
!8008 = !DILocation(line: 1092, column: 16, scope: !8006)
!8009 = !DILocation(line: 1092, column: 20, scope: !8006)
!8010 = !DILocation(line: 1092, column: 24, scope: !8006)
!8011 = !DILocation(line: 1092, column: 34, scope: !8006)
!8012 = !DILocation(line: 1092, column: 22, scope: !8006)
!8013 = !DILocation(line: 1092, column: 8, scope: !7991)
!8014 = !DILocation(line: 1093, column: 18, scope: !8006)
!8015 = !DILocation(line: 1093, column: 13, scope: !8006)
!8016 = !DILocation(line: 1093, column: 5, scope: !8006)
!8017 = !DILocation(line: 1095, column: 9, scope: !7991)
!8018 = !DILocation(line: 1095, column: 13, scope: !7991)
!8019 = !DILocation(line: 1095, column: 17, scope: !7991)
!8020 = !DILocation(line: 1095, column: 21, scope: !7991)
!8021 = !DILocation(line: 1095, column: 25, scope: !7991)
!8022 = !DILocation(line: 1095, column: 29, scope: !7991)
!8023 = !DILocation(line: 1095, column: 33, scope: !7991)
!8024 = !DILocation(line: 1095, column: 37, scope: !7991)
!8025 = !DILocation(line: 1095, column: 23, scope: !7991)
!8026 = !DILocation(line: 1095, column: 39, scope: !7991)
!8027 = !DILocation(line: 1095, column: 45, scope: !7991)
!8028 = !DILocation(line: 1095, column: 43, scope: !7991)
!8029 = !DILocation(line: 1095, column: 7, scope: !7991)
!8030 = !DILocation(line: 1098, column: 8, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 1098, column: 8)
!8032 = !DILocation(line: 1098, column: 12, scope: !8031)
!8033 = !DILocation(line: 1098, column: 16, scope: !8031)
!8034 = !DILocation(line: 1098, column: 25, scope: !8031)
!8035 = !DILocation(line: 1098, column: 28, scope: !8031)
!8036 = !DILocation(line: 1098, column: 32, scope: !8031)
!8037 = !DILocation(line: 1098, column: 36, scope: !8031)
!8038 = !DILocation(line: 1098, column: 8, scope: !7991)
!8039 = !DILocation(line: 1099, column: 23, scope: !8031)
!8040 = !DILocation(line: 1099, column: 22, scope: !8031)
!8041 = !DILocation(line: 1099, column: 31, scope: !8031)
!8042 = !DILocation(line: 1099, column: 15, scope: !8031)
!8043 = !DILocation(line: 1099, column: 6, scope: !8031)
!8044 = !DILocation(line: 1099, column: 13, scope: !8031)
!8045 = !DILocation(line: 1099, column: 5, scope: !8031)
!8046 = !DILocation(line: 1100, column: 13, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8031, file: !3, line: 1100, column: 13)
!8048 = !DILocation(line: 1100, column: 17, scope: !8047)
!8049 = !DILocation(line: 1100, column: 21, scope: !8047)
!8050 = !DILocation(line: 1100, column: 30, scope: !8047)
!8051 = !DILocation(line: 1100, column: 33, scope: !8047)
!8052 = !DILocation(line: 1100, column: 37, scope: !8047)
!8053 = !DILocation(line: 1100, column: 41, scope: !8047)
!8054 = !DILocation(line: 1100, column: 13, scope: !8031)
!8055 = !DILocation(line: 1101, column: 24, scope: !8047)
!8056 = !DILocation(line: 1101, column: 23, scope: !8047)
!8057 = !DILocation(line: 1101, column: 33, scope: !8047)
!8058 = !DILocation(line: 1101, column: 16, scope: !8047)
!8059 = !DILocation(line: 1101, column: 6, scope: !8047)
!8060 = !DILocation(line: 1101, column: 14, scope: !8047)
!8061 = !DILocation(line: 1101, column: 5, scope: !8047)
!8062 = !DILocation(line: 1102, column: 3, scope: !7991)
!8063 = !DILocalVariable(name: "x1", scope: !8064, file: !3, line: 1104, type: !1242)
!8064 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 1103, column: 8)
!8065 = !DILocation(line: 1104, column: 8, scope: !8064)
!8066 = !DILocation(line: 1105, column: 12, scope: !8064)
!8067 = !DILocation(line: 1107, column: 8, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 1107, column: 8)
!8069 = !DILocation(line: 1107, column: 12, scope: !8068)
!8070 = !DILocation(line: 1107, column: 16, scope: !8068)
!8071 = !DILocation(line: 1107, column: 20, scope: !8068)
!8072 = !DILocation(line: 1107, column: 22, scope: !8068)
!8073 = !DILocation(line: 1107, column: 8, scope: !8064)
!8074 = !DILocation(line: 1108, column: 18, scope: !8068)
!8075 = !DILocation(line: 1108, column: 13, scope: !8068)
!8076 = !DILocation(line: 1108, column: 5, scope: !8068)
!8077 = !DILocation(line: 1109, column: 8, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 1109, column: 8)
!8079 = !DILocation(line: 1109, column: 12, scope: !8078)
!8080 = !DILocation(line: 1109, column: 16, scope: !8078)
!8081 = !DILocation(line: 1109, column: 20, scope: !8078)
!8082 = !DILocation(line: 1109, column: 24, scope: !8078)
!8083 = !DILocation(line: 1109, column: 34, scope: !8078)
!8084 = !DILocation(line: 1109, column: 22, scope: !8078)
!8085 = !DILocation(line: 1109, column: 8, scope: !8064)
!8086 = !DILocation(line: 1110, column: 18, scope: !8078)
!8087 = !DILocation(line: 1110, column: 13, scope: !8078)
!8088 = !DILocation(line: 1110, column: 5, scope: !8078)
!8089 = !DILocation(line: 1112, column: 9, scope: !8064)
!8090 = !DILocation(line: 1112, column: 13, scope: !8064)
!8091 = !DILocation(line: 1112, column: 17, scope: !8064)
!8092 = !DILocation(line: 1112, column: 21, scope: !8064)
!8093 = !DILocation(line: 1112, column: 25, scope: !8064)
!8094 = !DILocation(line: 1112, column: 29, scope: !8064)
!8095 = !DILocation(line: 1112, column: 33, scope: !8064)
!8096 = !DILocation(line: 1112, column: 37, scope: !8064)
!8097 = !DILocation(line: 1112, column: 23, scope: !8064)
!8098 = !DILocation(line: 1112, column: 39, scope: !8064)
!8099 = !DILocation(line: 1112, column: 45, scope: !8064)
!8100 = !DILocation(line: 1112, column: 43, scope: !8064)
!8101 = !DILocation(line: 1112, column: 7, scope: !8064)
!8102 = !DILocation(line: 1115, column: 8, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 1115, column: 8)
!8104 = !DILocation(line: 1115, column: 12, scope: !8103)
!8105 = !DILocation(line: 1115, column: 16, scope: !8103)
!8106 = !DILocation(line: 1115, column: 25, scope: !8103)
!8107 = !DILocation(line: 1115, column: 28, scope: !8103)
!8108 = !DILocation(line: 1115, column: 32, scope: !8103)
!8109 = !DILocation(line: 1115, column: 36, scope: !8103)
!8110 = !DILocation(line: 1115, column: 8, scope: !8064)
!8111 = !DILocation(line: 1116, column: 23, scope: !8103)
!8112 = !DILocation(line: 1116, column: 22, scope: !8103)
!8113 = !DILocation(line: 1116, column: 31, scope: !8103)
!8114 = !DILocation(line: 1116, column: 15, scope: !8103)
!8115 = !DILocation(line: 1116, column: 6, scope: !8103)
!8116 = !DILocation(line: 1116, column: 13, scope: !8103)
!8117 = !DILocation(line: 1116, column: 5, scope: !8103)
!8118 = !DILocation(line: 1117, column: 13, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 1117, column: 13)
!8120 = !DILocation(line: 1117, column: 17, scope: !8119)
!8121 = !DILocation(line: 1117, column: 21, scope: !8119)
!8122 = !DILocation(line: 1117, column: 30, scope: !8119)
!8123 = !DILocation(line: 1117, column: 33, scope: !8119)
!8124 = !DILocation(line: 1117, column: 37, scope: !8119)
!8125 = !DILocation(line: 1117, column: 41, scope: !8119)
!8126 = !DILocation(line: 1117, column: 13, scope: !8103)
!8127 = !DILocation(line: 1118, column: 24, scope: !8119)
!8128 = !DILocation(line: 1118, column: 23, scope: !8119)
!8129 = !DILocation(line: 1118, column: 33, scope: !8119)
!8130 = !DILocation(line: 1118, column: 16, scope: !8119)
!8131 = !DILocation(line: 1118, column: 6, scope: !8119)
!8132 = !DILocation(line: 1118, column: 14, scope: !8119)
!8133 = !DILocation(line: 1118, column: 5, scope: !8119)
!8134 = !DILocation(line: 1120, column: 2, scope: !7987)
!8135 = !DILocation(line: 1085, column: 41, scope: !7983)
!8136 = !DILocation(line: 1085, column: 45, scope: !7983)
!8137 = !DILocation(line: 1085, column: 39, scope: !7983)
!8138 = !DILocation(line: 1085, column: 2, scope: !7983)
!8139 = distinct !{!8139, !7984, !8140}
!8140 = !DILocation(line: 1120, column: 2, scope: !7977)
!8141 = !DILocation(line: 1121, column: 1, scope: !7949)
!8142 = distinct !DISubprogram(name: "min_ii", scope: !8143, file: !8143, line: 211, type: !8144, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!8143 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8144 = !DISubroutineType(types: !8145)
!8145 = !{!1242, !1242, !1242}
!8146 = !DILocalVariable(name: "a", arg: 1, scope: !8142, file: !8143, line: 211, type: !1242)
!8147 = !DILocation(line: 211, column: 24, scope: !8142)
!8148 = !DILocalVariable(name: "b", arg: 2, scope: !8142, file: !8143, line: 211, type: !1242)
!8149 = !DILocation(line: 211, column: 31, scope: !8142)
!8150 = !DILocation(line: 213, column: 10, scope: !8142)
!8151 = !DILocation(line: 213, column: 14, scope: !8142)
!8152 = !DILocation(line: 213, column: 12, scope: !8142)
!8153 = !DILocation(line: 213, column: 9, scope: !8142)
!8154 = !DILocation(line: 213, column: 19, scope: !8142)
!8155 = !DILocation(line: 213, column: 23, scope: !8142)
!8156 = !DILocation(line: 213, column: 2, scope: !8142)
!8157 = distinct !DISubprogram(name: "area_move_apply_do", scope: !3, file: !3, line: 1162, type: !8158, scopeLine: 1163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{null, !3734, !1242, !1242, !1242, !1242, !1242}
!8160 = !DILocalVariable(name: "C", arg: 1, scope: !8157, file: !3, line: 1162, type: !3734)
!8161 = !DILocation(line: 1162, column: 42, scope: !8157)
!8162 = !DILocalVariable(name: "origval", arg: 2, scope: !8157, file: !3, line: 1162, type: !1242)
!8163 = !DILocation(line: 1162, column: 49, scope: !8157)
!8164 = !DILocalVariable(name: "delta", arg: 3, scope: !8157, file: !3, line: 1162, type: !1242)
!8165 = !DILocation(line: 1162, column: 62, scope: !8157)
!8166 = !DILocalVariable(name: "dir", arg: 4, scope: !8157, file: !3, line: 1162, type: !1242)
!8167 = !DILocation(line: 1162, column: 73, scope: !8157)
!8168 = !DILocalVariable(name: "bigger", arg: 5, scope: !8157, file: !3, line: 1162, type: !1242)
!8169 = !DILocation(line: 1162, column: 82, scope: !8157)
!8170 = !DILocalVariable(name: "smaller", arg: 6, scope: !8157, file: !3, line: 1162, type: !1242)
!8171 = !DILocation(line: 1162, column: 94, scope: !8157)
!8172 = !DILocalVariable(name: "win", scope: !8157, file: !3, line: 1164, type: !5535)
!8173 = !DILocation(line: 1164, column: 12, scope: !8157)
!8174 = !DILocation(line: 1164, column: 32, scope: !8157)
!8175 = !DILocation(line: 1164, column: 18, scope: !8157)
!8176 = !DILocalVariable(name: "winsize_x", scope: !8157, file: !3, line: 1165, type: !5215)
!8177 = !DILocation(line: 1165, column: 12, scope: !8157)
!8178 = !DILocation(line: 1165, column: 43, scope: !8157)
!8179 = !DILocation(line: 1165, column: 24, scope: !8157)
!8180 = !DILocalVariable(name: "winsize_y", scope: !8157, file: !3, line: 1166, type: !5215)
!8181 = !DILocation(line: 1166, column: 12, scope: !8157)
!8182 = !DILocation(line: 1166, column: 43, scope: !8157)
!8183 = !DILocation(line: 1166, column: 24, scope: !8157)
!8184 = !DILocalVariable(name: "sc", scope: !8157, file: !3, line: 1167, type: !3298)
!8185 = !DILocation(line: 1167, column: 11, scope: !8157)
!8186 = !DILocation(line: 1167, column: 30, scope: !8157)
!8187 = !DILocation(line: 1167, column: 16, scope: !8157)
!8188 = !DILocalVariable(name: "v1", scope: !8157, file: !3, line: 1168, type: !3265)
!8189 = !DILocation(line: 1168, column: 11, scope: !8157)
!8190 = !DILocalVariable(name: "sa", scope: !8157, file: !3, line: 1169, type: !3286)
!8191 = !DILocation(line: 1169, column: 11, scope: !8157)
!8192 = !DILocalVariable(name: "doredraw", scope: !8157, file: !3, line: 1170, type: !1242)
!8193 = !DILocation(line: 1170, column: 6, scope: !8157)
!8194 = !DILocalVariable(name: "oldval", scope: !8157, file: !3, line: 1171, type: !1242)
!8195 = !DILocation(line: 1171, column: 6, scope: !8157)
!8196 = !DILocation(line: 1173, column: 10, scope: !8157)
!8197 = !DILocation(line: 1173, column: 8, scope: !8157)
!8198 = !DILocation(line: 1175, column: 12, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 1175, column: 2)
!8200 = !DILocation(line: 1175, column: 16, scope: !8199)
!8201 = !DILocation(line: 1175, column: 25, scope: !8199)
!8202 = !DILocation(line: 1175, column: 10, scope: !8199)
!8203 = !DILocation(line: 1175, column: 7, scope: !8199)
!8204 = !DILocation(line: 1175, column: 32, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 1175, column: 2)
!8206 = !DILocation(line: 1175, column: 2, scope: !8199)
!8207 = !DILocation(line: 1176, column: 7, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 1176, column: 7)
!8209 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 1175, column: 51)
!8210 = !DILocation(line: 1176, column: 11, scope: !8208)
!8211 = !DILocation(line: 1176, column: 7, scope: !8209)
!8212 = !DILocation(line: 1178, column: 9, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 1178, column: 8)
!8214 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 1176, column: 21)
!8215 = !DILocation(line: 1178, column: 13, scope: !8213)
!8216 = !DILocation(line: 1178, column: 21, scope: !8213)
!8217 = !DILocation(line: 1178, column: 24, scope: !8213)
!8218 = !DILocation(line: 1178, column: 28, scope: !8213)
!8219 = !DILocation(line: 1178, column: 32, scope: !8213)
!8220 = !DILocation(line: 1178, column: 34, scope: !8213)
!8221 = !DILocation(line: 1178, column: 38, scope: !8213)
!8222 = !DILocation(line: 1178, column: 41, scope: !8213)
!8223 = !DILocation(line: 1178, column: 45, scope: !8213)
!8224 = !DILocation(line: 1178, column: 49, scope: !8213)
!8225 = !DILocation(line: 1178, column: 53, scope: !8213)
!8226 = !DILocation(line: 1178, column: 63, scope: !8213)
!8227 = !DILocation(line: 1178, column: 51, scope: !8213)
!8228 = !DILocation(line: 1178, column: 8, scope: !8214)
!8229 = !DILocation(line: 1179, column: 14, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 1178, column: 68)
!8231 = !DILocation(line: 1179, column: 18, scope: !8230)
!8232 = !DILocation(line: 1179, column: 22, scope: !8230)
!8233 = !DILocation(line: 1179, column: 12, scope: !8230)
!8234 = !DILocation(line: 1180, column: 17, scope: !8230)
!8235 = !DILocation(line: 1180, column: 27, scope: !8230)
!8236 = !DILocation(line: 1180, column: 25, scope: !8230)
!8237 = !DILocation(line: 1180, column: 5, scope: !8230)
!8238 = !DILocation(line: 1180, column: 9, scope: !8230)
!8239 = !DILocation(line: 1180, column: 13, scope: !8230)
!8240 = !DILocation(line: 1180, column: 15, scope: !8230)
!8241 = !DILocation(line: 1182, column: 9, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 1182, column: 9)
!8243 = !DILocation(line: 1182, column: 18, scope: !8242)
!8244 = !DILocation(line: 1182, column: 15, scope: !8242)
!8245 = !DILocation(line: 1182, column: 25, scope: !8242)
!8246 = !DILocation(line: 1182, column: 28, scope: !8242)
!8247 = !DILocation(line: 1182, column: 38, scope: !8242)
!8248 = !DILocation(line: 1182, column: 37, scope: !8242)
!8249 = !DILocation(line: 1182, column: 34, scope: !8242)
!8250 = !DILocation(line: 1182, column: 9, scope: !8230)
!8251 = !DILocation(line: 1183, column: 20, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 1182, column: 47)
!8253 = !DILocation(line: 1183, column: 24, scope: !8252)
!8254 = !DILocation(line: 1183, column: 28, scope: !8252)
!8255 = !DILocation(line: 1183, column: 30, scope: !8252)
!8256 = !DILocation(line: 1183, column: 6, scope: !8252)
!8257 = !DILocation(line: 1183, column: 10, scope: !8252)
!8258 = !DILocation(line: 1183, column: 14, scope: !8252)
!8259 = !DILocation(line: 1183, column: 16, scope: !8252)
!8260 = !DILocation(line: 1184, column: 18, scope: !8252)
!8261 = !DILocation(line: 1184, column: 6, scope: !8252)
!8262 = !DILocation(line: 1184, column: 10, scope: !8252)
!8263 = !DILocation(line: 1184, column: 14, scope: !8252)
!8264 = !DILocation(line: 1184, column: 16, scope: !8252)
!8265 = !DILocation(line: 1185, column: 5, scope: !8252)
!8266 = !DILocation(line: 1186, column: 9, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 1186, column: 9)
!8268 = !DILocation(line: 1186, column: 19, scope: !8267)
!8269 = !DILocation(line: 1186, column: 23, scope: !8267)
!8270 = !DILocation(line: 1186, column: 27, scope: !8267)
!8271 = !DILocation(line: 1186, column: 16, scope: !8267)
!8272 = !DILocation(line: 1186, column: 9, scope: !8230)
!8273 = !DILocation(line: 1187, column: 15, scope: !8267)
!8274 = !DILocation(line: 1187, column: 6, scope: !8267)
!8275 = !DILocation(line: 1188, column: 4, scope: !8230)
!8276 = !DILocation(line: 1189, column: 9, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 1189, column: 8)
!8278 = !DILocation(line: 1189, column: 13, scope: !8277)
!8279 = !DILocation(line: 1189, column: 21, scope: !8277)
!8280 = !DILocation(line: 1189, column: 24, scope: !8277)
!8281 = !DILocation(line: 1189, column: 28, scope: !8277)
!8282 = !DILocation(line: 1189, column: 32, scope: !8277)
!8283 = !DILocation(line: 1189, column: 34, scope: !8277)
!8284 = !DILocation(line: 1189, column: 38, scope: !8277)
!8285 = !DILocation(line: 1189, column: 41, scope: !8277)
!8286 = !DILocation(line: 1189, column: 45, scope: !8277)
!8287 = !DILocation(line: 1189, column: 49, scope: !8277)
!8288 = !DILocation(line: 1189, column: 53, scope: !8277)
!8289 = !DILocation(line: 1189, column: 63, scope: !8277)
!8290 = !DILocation(line: 1189, column: 51, scope: !8277)
!8291 = !DILocation(line: 1189, column: 8, scope: !8214)
!8292 = !DILocation(line: 1190, column: 14, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 1189, column: 68)
!8294 = !DILocation(line: 1190, column: 18, scope: !8293)
!8295 = !DILocation(line: 1190, column: 22, scope: !8293)
!8296 = !DILocation(line: 1190, column: 12, scope: !8293)
!8297 = !DILocation(line: 1191, column: 17, scope: !8293)
!8298 = !DILocation(line: 1191, column: 27, scope: !8293)
!8299 = !DILocation(line: 1191, column: 25, scope: !8293)
!8300 = !DILocation(line: 1191, column: 5, scope: !8293)
!8301 = !DILocation(line: 1191, column: 9, scope: !8293)
!8302 = !DILocation(line: 1191, column: 13, scope: !8293)
!8303 = !DILocation(line: 1191, column: 15, scope: !8293)
!8304 = !DILocation(line: 1193, column: 9, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 1193, column: 9)
!8306 = !DILocation(line: 1193, column: 18, scope: !8305)
!8307 = !DILocation(line: 1193, column: 15, scope: !8305)
!8308 = !DILocation(line: 1193, column: 25, scope: !8305)
!8309 = !DILocation(line: 1193, column: 28, scope: !8305)
!8310 = !DILocation(line: 1193, column: 37, scope: !8305)
!8311 = !DILocation(line: 1193, column: 34, scope: !8305)
!8312 = !DILocation(line: 1193, column: 9, scope: !8293)
!8313 = !DILocation(line: 1194, column: 20, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8305, file: !3, line: 1193, column: 46)
!8315 = !DILocation(line: 1194, column: 24, scope: !8314)
!8316 = !DILocation(line: 1194, column: 28, scope: !8314)
!8317 = !DILocation(line: 1194, column: 30, scope: !8314)
!8318 = !DILocation(line: 1194, column: 6, scope: !8314)
!8319 = !DILocation(line: 1194, column: 10, scope: !8314)
!8320 = !DILocation(line: 1194, column: 14, scope: !8314)
!8321 = !DILocation(line: 1194, column: 16, scope: !8314)
!8322 = !DILocation(line: 1195, column: 18, scope: !8314)
!8323 = !DILocation(line: 1195, column: 6, scope: !8314)
!8324 = !DILocation(line: 1195, column: 10, scope: !8314)
!8325 = !DILocation(line: 1195, column: 14, scope: !8314)
!8326 = !DILocation(line: 1195, column: 16, scope: !8314)
!8327 = !DILocation(line: 1196, column: 5, scope: !8314)
!8328 = !DILocation(line: 1197, column: 9, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 1197, column: 9)
!8330 = !DILocation(line: 1197, column: 19, scope: !8329)
!8331 = !DILocation(line: 1197, column: 23, scope: !8329)
!8332 = !DILocation(line: 1197, column: 27, scope: !8329)
!8333 = !DILocation(line: 1197, column: 16, scope: !8329)
!8334 = !DILocation(line: 1197, column: 9, scope: !8293)
!8335 = !DILocation(line: 1198, column: 15, scope: !8329)
!8336 = !DILocation(line: 1198, column: 6, scope: !8329)
!8337 = !DILocation(line: 1199, column: 4, scope: !8293)
!8338 = !DILocation(line: 1200, column: 3, scope: !8214)
!8339 = !DILocation(line: 1201, column: 2, scope: !8209)
!8340 = !DILocation(line: 1175, column: 41, scope: !8205)
!8341 = !DILocation(line: 1175, column: 45, scope: !8205)
!8342 = !DILocation(line: 1175, column: 39, scope: !8205)
!8343 = !DILocation(line: 1175, column: 2, scope: !8205)
!8344 = distinct !{!8344, !8206, !8345}
!8345 = !DILocation(line: 1201, column: 2, scope: !8199)
!8346 = !DILocation(line: 1204, column: 6, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 1204, column: 6)
!8348 = !DILocation(line: 1204, column: 6, scope: !8157)
!8349 = !DILocation(line: 1205, column: 13, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 1205, column: 3)
!8351 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 1204, column: 16)
!8352 = !DILocation(line: 1205, column: 17, scope: !8350)
!8353 = !DILocation(line: 1205, column: 26, scope: !8350)
!8354 = !DILocation(line: 1205, column: 11, scope: !8350)
!8355 = !DILocation(line: 1205, column: 8, scope: !8350)
!8356 = !DILocation(line: 1205, column: 33, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8350, file: !3, line: 1205, column: 3)
!8358 = !DILocation(line: 1205, column: 3, scope: !8350)
!8359 = !DILocation(line: 1206, column: 8, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 1206, column: 8)
!8361 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 1205, column: 52)
!8362 = !DILocation(line: 1206, column: 12, scope: !8360)
!8363 = !DILocation(line: 1206, column: 16, scope: !8360)
!8364 = !DILocation(line: 1206, column: 25, scope: !8360)
!8365 = !DILocation(line: 1206, column: 28, scope: !8360)
!8366 = !DILocation(line: 1206, column: 32, scope: !8360)
!8367 = !DILocation(line: 1206, column: 36, scope: !8360)
!8368 = !DILocation(line: 1206, column: 45, scope: !8360)
!8369 = !DILocation(line: 1206, column: 48, scope: !8360)
!8370 = !DILocation(line: 1206, column: 52, scope: !8360)
!8371 = !DILocation(line: 1206, column: 56, scope: !8360)
!8372 = !DILocation(line: 1206, column: 65, scope: !8360)
!8373 = !DILocation(line: 1206, column: 68, scope: !8360)
!8374 = !DILocation(line: 1206, column: 72, scope: !8360)
!8375 = !DILocation(line: 1206, column: 76, scope: !8360)
!8376 = !DILocation(line: 1206, column: 8, scope: !8361)
!8377 = !DILocation(line: 1207, column: 24, scope: !8360)
!8378 = !DILocation(line: 1207, column: 5, scope: !8360)
!8379 = !DILocation(line: 1208, column: 3, scope: !8361)
!8380 = !DILocation(line: 1205, column: 42, scope: !8357)
!8381 = !DILocation(line: 1205, column: 46, scope: !8357)
!8382 = !DILocation(line: 1205, column: 40, scope: !8357)
!8383 = !DILocation(line: 1205, column: 3, scope: !8357)
!8384 = distinct !{!8384, !8358, !8385}
!8385 = !DILocation(line: 1208, column: 3, scope: !8350)
!8386 = !DILocation(line: 1210, column: 25, scope: !8351)
!8387 = !DILocation(line: 1210, column: 3, scope: !8351)
!8388 = !DILocation(line: 1211, column: 2, scope: !8351)
!8389 = !DILocation(line: 1212, column: 1, scope: !8157)
!8390 = distinct !DISubprogram(name: "area_split_exec", scope: !3, file: !3, line: 1633, type: !7473, scopeLine: 1634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!8391 = !DILocalVariable(name: "C", arg: 1, scope: !8390, file: !3, line: 1633, type: !3734)
!8392 = !DILocation(line: 1633, column: 38, scope: !8390)
!8393 = !DILocalVariable(name: "op", arg: 2, scope: !8390, file: !3, line: 1633, type: !7081)
!8394 = !DILocation(line: 1633, column: 53, scope: !8390)
!8395 = !DILocation(line: 1636, column: 23, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 1636, column: 6)
!8397 = !DILocation(line: 1636, column: 26, scope: !8396)
!8398 = !DILocation(line: 1636, column: 7, scope: !8396)
!8399 = !DILocation(line: 1636, column: 6, scope: !8390)
!8400 = !DILocation(line: 1637, column: 3, scope: !8396)
!8401 = !DILocation(line: 1639, column: 19, scope: !8390)
!8402 = !DILocation(line: 1639, column: 22, scope: !8390)
!8403 = !DILocation(line: 1639, column: 2, scope: !8390)
!8404 = !DILocation(line: 1640, column: 18, scope: !8390)
!8405 = !DILocation(line: 1640, column: 21, scope: !8390)
!8406 = !DILocation(line: 1640, column: 2, scope: !8390)
!8407 = !DILocation(line: 1642, column: 2, scope: !8390)
!8408 = !DILocation(line: 1643, column: 1, scope: !8390)
!8409 = distinct !DISubprogram(name: "area_split_invoke", scope: !3, file: !3, line: 1530, type: !7079, scopeLine: 1531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!8410 = !DILocalVariable(name: "C", arg: 1, scope: !8409, file: !3, line: 1530, type: !3734)
!8411 = !DILocation(line: 1530, column: 40, scope: !8409)
!8412 = !DILocalVariable(name: "op", arg: 2, scope: !8409, file: !3, line: 1530, type: !7081)
!8413 = !DILocation(line: 1530, column: 55, scope: !8409)
!8414 = !DILocalVariable(name: "event", arg: 3, scope: !8409, file: !3, line: 1530, type: !6997)
!8415 = !DILocation(line: 1530, column: 74, scope: !8409)
!8416 = !DILocalVariable(name: "win", scope: !8409, file: !3, line: 1532, type: !5535)
!8417 = !DILocation(line: 1532, column: 12, scope: !8409)
!8418 = !DILocation(line: 1532, column: 32, scope: !8409)
!8419 = !DILocation(line: 1532, column: 18, scope: !8409)
!8420 = !DILocalVariable(name: "sc", scope: !8409, file: !3, line: 1533, type: !3298)
!8421 = !DILocation(line: 1533, column: 11, scope: !8409)
!8422 = !DILocation(line: 1533, column: 30, scope: !8409)
!8423 = !DILocation(line: 1533, column: 16, scope: !8409)
!8424 = !DILocalVariable(name: "sd", scope: !8409, file: !3, line: 1534, type: !3243)
!8425 = !DILocation(line: 1534, column: 18, scope: !8409)
!8426 = !DILocalVariable(name: "winsize_x", scope: !8409, file: !3, line: 1535, type: !5215)
!8427 = !DILocation(line: 1535, column: 12, scope: !8409)
!8428 = !DILocation(line: 1535, column: 43, scope: !8409)
!8429 = !DILocation(line: 1535, column: 24, scope: !8409)
!8430 = !DILocalVariable(name: "winsize_y", scope: !8409, file: !3, line: 1536, type: !5215)
!8431 = !DILocation(line: 1536, column: 12, scope: !8409)
!8432 = !DILocation(line: 1536, column: 43, scope: !8409)
!8433 = !DILocation(line: 1536, column: 24, scope: !8409)
!8434 = !DILocalVariable(name: "dir", scope: !8409, file: !3, line: 1537, type: !1242)
!8435 = !DILocation(line: 1537, column: 6, scope: !8409)
!8436 = !DILocation(line: 1540, column: 6, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 1540, column: 6)
!8438 = !DILocation(line: 1540, column: 10, scope: !8437)
!8439 = !DILocation(line: 1540, column: 16, scope: !8437)
!8440 = !DILocation(line: 1540, column: 6, scope: !8409)
!8441 = !DILocation(line: 1541, column: 3, scope: !8437)
!8442 = !DILocation(line: 1543, column: 6, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 1543, column: 6)
!8444 = !DILocation(line: 1543, column: 13, scope: !8443)
!8445 = !DILocation(line: 1543, column: 18, scope: !8443)
!8446 = !DILocation(line: 1543, column: 6, scope: !8409)
!8447 = !DILocalVariable(name: "sad", scope: !8448, file: !3, line: 1544, type: !7097)
!8448 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 1543, column: 42)
!8449 = !DILocation(line: 1544, column: 20, scope: !8448)
!8450 = !DILocation(line: 1544, column: 26, scope: !8448)
!8451 = !DILocation(line: 1544, column: 33, scope: !8448)
!8452 = !DILocation(line: 1546, column: 7, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 1546, column: 7)
!8454 = !DILocation(line: 1546, column: 11, scope: !8453)
!8455 = !DILocation(line: 1546, column: 19, scope: !8453)
!8456 = !DILocation(line: 1546, column: 22, scope: !8453)
!8457 = !DILocation(line: 1546, column: 27, scope: !8453)
!8458 = !DILocation(line: 1546, column: 36, scope: !8453)
!8459 = !DILocation(line: 1546, column: 7, scope: !8448)
!8460 = !DILocation(line: 1547, column: 4, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 1546, column: 41)
!8462 = !DILocation(line: 1551, column: 7, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 1551, column: 7)
!8464 = !DILocation(line: 1551, column: 12, scope: !8463)
!8465 = !DILocation(line: 1551, column: 16, scope: !8463)
!8466 = !DILocation(line: 1551, column: 24, scope: !8463)
!8467 = !DILocation(line: 1551, column: 27, scope: !8463)
!8468 = !DILocation(line: 1551, column: 32, scope: !8463)
!8469 = !DILocation(line: 1551, column: 35, scope: !8463)
!8470 = !DILocation(line: 1551, column: 7, scope: !8448)
!8471 = !DILocation(line: 1552, column: 4, scope: !8463)
!8472 = !DILocation(line: 1555, column: 19, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 1555, column: 7)
!8474 = !DILocation(line: 1555, column: 7, scope: !8473)
!8475 = !DILocation(line: 1555, column: 25, scope: !8473)
!8476 = !DILocation(line: 1555, column: 30, scope: !8473)
!8477 = !DILocation(line: 1555, column: 22, scope: !8473)
!8478 = !DILocation(line: 1555, column: 34, scope: !8473)
!8479 = !DILocation(line: 1555, column: 37, scope: !8473)
!8480 = !DILocation(line: 1555, column: 42, scope: !8473)
!8481 = !DILocation(line: 1555, column: 49, scope: !8473)
!8482 = !DILocation(line: 1555, column: 54, scope: !8473)
!8483 = !DILocation(line: 1555, column: 46, scope: !8473)
!8484 = !DILocation(line: 1555, column: 7, scope: !8448)
!8485 = !DILocation(line: 1556, column: 4, scope: !8473)
!8486 = !DILocation(line: 1559, column: 7, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 1559, column: 7)
!8488 = !DILocation(line: 1559, column: 12, scope: !8487)
!8489 = !DILocation(line: 1559, column: 24, scope: !8487)
!8490 = !DILocation(line: 1559, column: 31, scope: !8487)
!8491 = !DILocation(line: 1559, column: 34, scope: !8487)
!8492 = !DILocation(line: 1559, column: 39, scope: !8487)
!8493 = !DILocation(line: 1559, column: 51, scope: !8487)
!8494 = !DILocation(line: 1559, column: 7, scope: !8448)
!8495 = !DILocation(line: 1560, column: 8, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 1559, column: 59)
!8497 = !DILocation(line: 1561, column: 18, scope: !8496)
!8498 = !DILocation(line: 1561, column: 22, scope: !8496)
!8499 = !DILocation(line: 1561, column: 46, scope: !8496)
!8500 = !DILocation(line: 1561, column: 53, scope: !8496)
!8501 = !DILocation(line: 1561, column: 57, scope: !8496)
!8502 = !DILocation(line: 1561, column: 62, scope: !8496)
!8503 = !DILocation(line: 1561, column: 67, scope: !8496)
!8504 = !DILocation(line: 1561, column: 71, scope: !8496)
!8505 = !DILocation(line: 1561, column: 75, scope: !8496)
!8506 = !DILocation(line: 1561, column: 55, scope: !8496)
!8507 = !DILocation(line: 1561, column: 38, scope: !8496)
!8508 = !DILocation(line: 1561, column: 88, scope: !8496)
!8509 = !DILocation(line: 1561, column: 93, scope: !8496)
!8510 = !DILocation(line: 1561, column: 98, scope: !8496)
!8511 = !DILocation(line: 1561, column: 81, scope: !8496)
!8512 = !DILocation(line: 1561, column: 79, scope: !8496)
!8513 = !DILocation(line: 1561, column: 4, scope: !8496)
!8514 = !DILocation(line: 1562, column: 3, scope: !8496)
!8515 = !DILocation(line: 1564, column: 8, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 1563, column: 8)
!8517 = !DILocation(line: 1565, column: 18, scope: !8516)
!8518 = !DILocation(line: 1565, column: 22, scope: !8516)
!8519 = !DILocation(line: 1565, column: 46, scope: !8516)
!8520 = !DILocation(line: 1565, column: 53, scope: !8516)
!8521 = !DILocation(line: 1565, column: 57, scope: !8516)
!8522 = !DILocation(line: 1565, column: 62, scope: !8516)
!8523 = !DILocation(line: 1565, column: 67, scope: !8516)
!8524 = !DILocation(line: 1565, column: 71, scope: !8516)
!8525 = !DILocation(line: 1565, column: 75, scope: !8516)
!8526 = !DILocation(line: 1565, column: 55, scope: !8516)
!8527 = !DILocation(line: 1565, column: 38, scope: !8516)
!8528 = !DILocation(line: 1565, column: 88, scope: !8516)
!8529 = !DILocation(line: 1565, column: 93, scope: !8516)
!8530 = !DILocation(line: 1565, column: 98, scope: !8516)
!8531 = !DILocation(line: 1565, column: 81, scope: !8516)
!8532 = !DILocation(line: 1565, column: 79, scope: !8516)
!8533 = !DILocation(line: 1565, column: 4, scope: !8516)
!8534 = !DILocation(line: 1567, column: 16, scope: !8448)
!8535 = !DILocation(line: 1567, column: 20, scope: !8448)
!8536 = !DILocation(line: 1567, column: 38, scope: !8448)
!8537 = !DILocation(line: 1567, column: 3, scope: !8448)
!8538 = !DILocation(line: 1570, column: 24, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 1570, column: 7)
!8540 = !DILocation(line: 1570, column: 27, scope: !8539)
!8541 = !DILocation(line: 1570, column: 8, scope: !8539)
!8542 = !DILocation(line: 1570, column: 7, scope: !8448)
!8543 = !DILocation(line: 1571, column: 4, scope: !8539)
!8544 = !DILocation(line: 1573, column: 2, scope: !8448)
!8545 = !DILocalVariable(name: "actedge", scope: !8546, file: !3, line: 1575, type: !3257)
!8546 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 1574, column: 7)
!8547 = !DILocation(line: 1575, column: 12, scope: !8546)
!8548 = !DILocalVariable(name: "x", scope: !8546, file: !3, line: 1576, type: !1242)
!8549 = !DILocation(line: 1576, column: 7, scope: !8546)
!8550 = !DILocalVariable(name: "y", scope: !8546, file: !3, line: 1576, type: !1242)
!8551 = !DILocation(line: 1576, column: 10, scope: !8546)
!8552 = !DILocation(line: 1579, column: 34, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 1579, column: 7)
!8554 = !DILocation(line: 1579, column: 38, scope: !8553)
!8555 = !DILocation(line: 1579, column: 7, scope: !8553)
!8556 = !DILocation(line: 1579, column: 7, scope: !8546)
!8557 = !DILocation(line: 1580, column: 20, scope: !8553)
!8558 = !DILocation(line: 1580, column: 24, scope: !8553)
!8559 = !DILocation(line: 1580, column: 8, scope: !8553)
!8560 = !DILocation(line: 1580, column: 6, scope: !8553)
!8561 = !DILocation(line: 1580, column: 4, scope: !8553)
!8562 = !DILocation(line: 1582, column: 8, scope: !8553)
!8563 = !DILocation(line: 1582, column: 15, scope: !8553)
!8564 = !DILocation(line: 1582, column: 6, scope: !8553)
!8565 = !DILocation(line: 1584, column: 34, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 1584, column: 7)
!8567 = !DILocation(line: 1584, column: 38, scope: !8566)
!8568 = !DILocation(line: 1584, column: 7, scope: !8566)
!8569 = !DILocation(line: 1584, column: 7, scope: !8546)
!8570 = !DILocation(line: 1585, column: 20, scope: !8566)
!8571 = !DILocation(line: 1585, column: 24, scope: !8566)
!8572 = !DILocation(line: 1585, column: 8, scope: !8566)
!8573 = !DILocation(line: 1585, column: 6, scope: !8566)
!8574 = !DILocation(line: 1585, column: 4, scope: !8566)
!8575 = !DILocation(line: 1587, column: 8, scope: !8566)
!8576 = !DILocation(line: 1587, column: 15, scope: !8566)
!8577 = !DILocation(line: 1587, column: 6, scope: !8566)
!8578 = !DILocation(line: 1589, column: 40, scope: !8546)
!8579 = !DILocation(line: 1589, column: 44, scope: !8546)
!8580 = !DILocation(line: 1589, column: 55, scope: !8546)
!8581 = !DILocation(line: 1589, column: 66, scope: !8546)
!8582 = !DILocation(line: 1589, column: 69, scope: !8546)
!8583 = !DILocation(line: 1589, column: 13, scope: !8546)
!8584 = !DILocation(line: 1589, column: 11, scope: !8546)
!8585 = !DILocation(line: 1590, column: 7, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 1590, column: 7)
!8587 = !DILocation(line: 1590, column: 15, scope: !8586)
!8588 = !DILocation(line: 1590, column: 7, scope: !8546)
!8589 = !DILocation(line: 1591, column: 4, scope: !8586)
!8590 = !DILocation(line: 1593, column: 31, scope: !8546)
!8591 = !DILocation(line: 1593, column: 9, scope: !8546)
!8592 = !DILocation(line: 1593, column: 7, scope: !8546)
!8593 = !DILocation(line: 1595, column: 16, scope: !8546)
!8594 = !DILocation(line: 1595, column: 20, scope: !8546)
!8595 = !DILocation(line: 1595, column: 38, scope: !8546)
!8596 = !DILocation(line: 1595, column: 3, scope: !8546)
!8597 = !DILocation(line: 1598, column: 29, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 1598, column: 7)
!8599 = !DILocation(line: 1598, column: 32, scope: !8598)
!8600 = !DILocation(line: 1598, column: 8, scope: !8598)
!8601 = !DILocation(line: 1598, column: 7, scope: !8546)
!8602 = !DILocation(line: 1599, column: 4, scope: !8598)
!8603 = !DILocation(line: 1603, column: 25, scope: !8409)
!8604 = !DILocation(line: 1603, column: 29, scope: !8409)
!8605 = !DILocation(line: 1603, column: 7, scope: !8409)
!8606 = !DILocation(line: 1603, column: 5, scope: !8409)
!8607 = !DILocation(line: 1605, column: 10, scope: !8409)
!8608 = !DILocation(line: 1605, column: 17, scope: !8409)
!8609 = !DILocation(line: 1605, column: 2, scope: !8409)
!8610 = !DILocation(line: 1605, column: 6, scope: !8409)
!8611 = !DILocation(line: 1605, column: 8, scope: !8409)
!8612 = !DILocation(line: 1606, column: 10, scope: !8409)
!8613 = !DILocation(line: 1606, column: 17, scope: !8409)
!8614 = !DILocation(line: 1606, column: 2, scope: !8409)
!8615 = !DILocation(line: 1606, column: 6, scope: !8409)
!8616 = !DILocation(line: 1606, column: 8, scope: !8409)
!8617 = !DILocation(line: 1608, column: 6, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 1608, column: 6)
!8619 = !DILocation(line: 1608, column: 13, scope: !8618)
!8620 = !DILocation(line: 1608, column: 18, scope: !8618)
!8621 = !DILocation(line: 1608, column: 6, scope: !8409)
!8622 = !DILocation(line: 1611, column: 24, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !3, line: 1611, column: 7)
!8624 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 1608, column: 42)
!8625 = !DILocation(line: 1611, column: 27, scope: !8623)
!8626 = !DILocation(line: 1611, column: 7, scope: !8623)
!8627 = !DILocation(line: 1611, column: 7, scope: !8624)
!8628 = !DILocation(line: 1612, column: 25, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 1611, column: 32)
!8630 = !DILocation(line: 1612, column: 29, scope: !8629)
!8631 = !DILocation(line: 1612, column: 34, scope: !8629)
!8632 = !DILocation(line: 1612, column: 45, scope: !8629)
!8633 = !DILocation(line: 1612, column: 57, scope: !8629)
!8634 = !DILocation(line: 1612, column: 61, scope: !8629)
!8635 = !DILocation(line: 1612, column: 70, scope: !8629)
!8636 = !DILocation(line: 1612, column: 74, scope: !8629)
!8637 = !DILocation(line: 1612, column: 4, scope: !8629)
!8638 = !DILocation(line: 1615, column: 31, scope: !8629)
!8639 = !DILocation(line: 1615, column: 34, scope: !8629)
!8640 = !DILocation(line: 1615, column: 4, scope: !8629)
!8641 = !DILocation(line: 1617, column: 4, scope: !8629)
!8642 = !DILocation(line: 1619, column: 2, scope: !8624)
!8643 = !DILocation(line: 1621, column: 3, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 1620, column: 7)
!8645 = !DILocation(line: 1621, column: 7, scope: !8644)
!8646 = !DILocation(line: 1621, column: 19, scope: !8644)
!8647 = !DILocation(line: 1623, column: 30, scope: !8644)
!8648 = !DILocation(line: 1623, column: 33, scope: !8644)
!8649 = !DILocation(line: 1623, column: 3, scope: !8644)
!8650 = !DILocation(line: 1625, column: 3, scope: !8644)
!8651 = !DILocation(line: 1629, column: 2, scope: !8409)
!8652 = !DILocation(line: 1630, column: 1, scope: !8409)
!8653 = distinct !DISubprogram(name: "area_split_modal", scope: !3, file: !3, line: 1664, type: !7079, scopeLine: 1665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!8654 = !DILocalVariable(name: "C", arg: 1, scope: !8653, file: !3, line: 1664, type: !3734)
!8655 = !DILocation(line: 1664, column: 39, scope: !8653)
!8656 = !DILocalVariable(name: "op", arg: 2, scope: !8653, file: !3, line: 1664, type: !7081)
!8657 = !DILocation(line: 1664, column: 54, scope: !8653)
!8658 = !DILocalVariable(name: "event", arg: 3, scope: !8653, file: !3, line: 1664, type: !6997)
!8659 = !DILocation(line: 1664, column: 73, scope: !8653)
!8660 = !DILocalVariable(name: "sd", scope: !8653, file: !3, line: 1666, type: !3243)
!8661 = !DILocation(line: 1666, column: 18, scope: !8653)
!8662 = !DILocation(line: 1666, column: 41, scope: !8653)
!8663 = !DILocation(line: 1666, column: 45, scope: !8653)
!8664 = !DILocation(line: 1666, column: 23, scope: !8653)
!8665 = !DILocalVariable(name: "fac", scope: !8653, file: !3, line: 1667, type: !1407)
!8666 = !DILocation(line: 1667, column: 8, scope: !8653)
!8667 = !DILocalVariable(name: "dir", scope: !8653, file: !3, line: 1668, type: !1242)
!8668 = !DILocation(line: 1668, column: 6, scope: !8653)
!8669 = !DILocation(line: 1671, column: 10, scope: !8653)
!8670 = !DILocation(line: 1671, column: 17, scope: !8653)
!8671 = !DILocation(line: 1671, column: 2, scope: !8653)
!8672 = !DILocation(line: 1673, column: 23, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8653, file: !3, line: 1671, column: 23)
!8674 = !DILocation(line: 1673, column: 27, scope: !8673)
!8675 = !DILocation(line: 1673, column: 10, scope: !8673)
!8676 = !DILocation(line: 1673, column: 8, scope: !8673)
!8677 = !DILocation(line: 1675, column: 17, scope: !8673)
!8678 = !DILocation(line: 1675, column: 21, scope: !8673)
!8679 = !DILocation(line: 1675, column: 16, scope: !8673)
!8680 = !DILocation(line: 1675, column: 31, scope: !8673)
!8681 = !DILocation(line: 1675, column: 38, scope: !8673)
!8682 = !DILocation(line: 1675, column: 42, scope: !8673)
!8683 = !DILocation(line: 1675, column: 46, scope: !8673)
!8684 = !DILocation(line: 1675, column: 40, scope: !8673)
!8685 = !DILocation(line: 1675, column: 56, scope: !8673)
!8686 = !DILocation(line: 1675, column: 63, scope: !8673)
!8687 = !DILocation(line: 1675, column: 67, scope: !8673)
!8688 = !DILocation(line: 1675, column: 71, scope: !8673)
!8689 = !DILocation(line: 1675, column: 65, scope: !8673)
!8690 = !DILocation(line: 1675, column: 4, scope: !8673)
!8691 = !DILocation(line: 1675, column: 8, scope: !8673)
!8692 = !DILocation(line: 1675, column: 14, scope: !8673)
!8693 = !DILocation(line: 1676, column: 8, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 1676, column: 8)
!8695 = !DILocation(line: 1676, column: 12, scope: !8694)
!8696 = !DILocation(line: 1676, column: 24, scope: !8694)
!8697 = !DILocation(line: 1676, column: 8, scope: !8673)
!8698 = !DILocation(line: 1677, column: 24, scope: !8694)
!8699 = !DILocation(line: 1677, column: 27, scope: !8694)
!8700 = !DILocation(line: 1677, column: 31, scope: !8694)
!8701 = !DILocation(line: 1677, column: 40, scope: !8694)
!8702 = !DILocation(line: 1677, column: 44, scope: !8694)
!8703 = !DILocation(line: 1677, column: 51, scope: !8694)
!8704 = !DILocation(line: 1677, column: 56, scope: !8694)
!8705 = !DILocation(line: 1677, column: 60, scope: !8694)
!8706 = !DILocation(line: 1677, column: 68, scope: !8694)
!8707 = !DILocation(line: 1677, column: 72, scope: !8694)
!8708 = !DILocation(line: 1677, column: 5, scope: !8694)
!8709 = !DILocation(line: 1679, column: 9, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 1679, column: 9)
!8711 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 1678, column: 9)
!8712 = !DILocation(line: 1679, column: 13, scope: !8710)
!8713 = !DILocation(line: 1679, column: 9, scope: !8711)
!8714 = !DILocation(line: 1680, column: 6, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 1679, column: 20)
!8716 = !DILocation(line: 1680, column: 10, scope: !8715)
!8717 = !DILocation(line: 1680, column: 17, scope: !8715)
!8718 = !DILocation(line: 1680, column: 22, scope: !8715)
!8719 = !DILocation(line: 1681, column: 25, scope: !8715)
!8720 = !DILocation(line: 1681, column: 29, scope: !8715)
!8721 = !DILocation(line: 1681, column: 6, scope: !8715)
!8722 = !DILocation(line: 1682, column: 5, scope: !8715)
!8723 = !DILocation(line: 1683, column: 52, scope: !8711)
!8724 = !DILocation(line: 1683, column: 38, scope: !8711)
!8725 = !DILocation(line: 1683, column: 56, scope: !8711)
!8726 = !DILocation(line: 1683, column: 63, scope: !8711)
!8727 = !DILocation(line: 1683, column: 66, scope: !8711)
!8728 = !DILocation(line: 1683, column: 73, scope: !8711)
!8729 = !DILocation(line: 1683, column: 17, scope: !8711)
!8730 = !DILocation(line: 1683, column: 5, scope: !8711)
!8731 = !DILocation(line: 1683, column: 9, scope: !8711)
!8732 = !DILocation(line: 1683, column: 15, scope: !8711)
!8733 = !DILocation(line: 1685, column: 9, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 1685, column: 9)
!8735 = !DILocation(line: 1685, column: 13, scope: !8734)
!8736 = !DILocation(line: 1685, column: 9, scope: !8711)
!8737 = !DILocation(line: 1686, column: 25, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 1685, column: 20)
!8739 = !DILocation(line: 1686, column: 29, scope: !8738)
!8740 = !DILocation(line: 1686, column: 6, scope: !8738)
!8741 = !DILocation(line: 1687, column: 10, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8738, file: !3, line: 1687, column: 10)
!8743 = !DILocation(line: 1687, column: 14, scope: !8742)
!8744 = !DILocation(line: 1687, column: 10, scope: !8738)
!8745 = !DILocation(line: 1688, column: 22, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 1687, column: 22)
!8747 = !DILocation(line: 1688, column: 26, scope: !8746)
!8748 = !DILocation(line: 1688, column: 33, scope: !8746)
!8749 = !DILocation(line: 1688, column: 7, scope: !8746)
!8750 = !DILocation(line: 1688, column: 11, scope: !8746)
!8751 = !DILocation(line: 1688, column: 20, scope: !8746)
!8752 = !DILocation(line: 1689, column: 21, scope: !8746)
!8753 = !DILocation(line: 1689, column: 25, scope: !8746)
!8754 = !DILocation(line: 1689, column: 32, scope: !8746)
!8755 = !DILocation(line: 1689, column: 39, scope: !8746)
!8756 = !DILocation(line: 1689, column: 7, scope: !8746)
!8757 = !DILocation(line: 1689, column: 11, scope: !8746)
!8758 = !DILocation(line: 1689, column: 19, scope: !8746)
!8759 = !DILocation(line: 1690, column: 7, scope: !8746)
!8760 = !DILocation(line: 1690, column: 11, scope: !8746)
!8761 = !DILocation(line: 1690, column: 18, scope: !8746)
!8762 = !DILocation(line: 1690, column: 23, scope: !8746)
!8763 = !DILocation(line: 1691, column: 6, scope: !8746)
!8764 = !DILocation(line: 1693, column: 22, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 1692, column: 11)
!8766 = !DILocation(line: 1693, column: 26, scope: !8765)
!8767 = !DILocation(line: 1693, column: 33, scope: !8765)
!8768 = !DILocation(line: 1693, column: 7, scope: !8765)
!8769 = !DILocation(line: 1693, column: 11, scope: !8765)
!8770 = !DILocation(line: 1693, column: 20, scope: !8765)
!8771 = !DILocation(line: 1694, column: 21, scope: !8765)
!8772 = !DILocation(line: 1694, column: 25, scope: !8765)
!8773 = !DILocation(line: 1694, column: 32, scope: !8765)
!8774 = !DILocation(line: 1694, column: 39, scope: !8765)
!8775 = !DILocation(line: 1694, column: 7, scope: !8765)
!8776 = !DILocation(line: 1694, column: 11, scope: !8765)
!8777 = !DILocation(line: 1694, column: 19, scope: !8765)
!8778 = !DILocation(line: 1695, column: 7, scope: !8765)
!8779 = !DILocation(line: 1695, column: 11, scope: !8765)
!8780 = !DILocation(line: 1695, column: 18, scope: !8765)
!8781 = !DILocation(line: 1695, column: 23, scope: !8765)
!8782 = !DILocation(line: 1697, column: 5, scope: !8738)
!8783 = !DILocation(line: 1699, column: 19, scope: !8711)
!8784 = !DILocation(line: 1699, column: 5, scope: !8711)
!8785 = !DILocation(line: 1699, column: 23, scope: !8711)
!8786 = !DILocation(line: 1699, column: 31, scope: !8711)
!8787 = !DILocation(line: 1699, column: 39, scope: !8711)
!8788 = !DILocation(line: 1703, column: 11, scope: !8673)
!8789 = !DILocation(line: 1703, column: 15, scope: !8673)
!8790 = !DILocation(line: 1703, column: 10, scope: !8673)
!8791 = !DILocation(line: 1703, column: 25, scope: !8673)
!8792 = !DILocation(line: 1703, column: 32, scope: !8673)
!8793 = !DILocation(line: 1703, column: 36, scope: !8673)
!8794 = !DILocation(line: 1703, column: 40, scope: !8673)
!8795 = !DILocation(line: 1703, column: 34, scope: !8673)
!8796 = !DILocation(line: 1703, column: 50, scope: !8673)
!8797 = !DILocation(line: 1703, column: 57, scope: !8673)
!8798 = !DILocation(line: 1703, column: 61, scope: !8673)
!8799 = !DILocation(line: 1703, column: 65, scope: !8673)
!8800 = !DILocation(line: 1703, column: 59, scope: !8673)
!8801 = !DILocation(line: 1703, column: 8, scope: !8673)
!8802 = !DILocation(line: 1704, column: 18, scope: !8673)
!8803 = !DILocation(line: 1704, column: 22, scope: !8673)
!8804 = !DILocation(line: 1704, column: 37, scope: !8673)
!8805 = !DILocation(line: 1704, column: 50, scope: !8673)
!8806 = !DILocation(line: 1704, column: 54, scope: !8673)
!8807 = !DILocation(line: 1704, column: 43, scope: !8673)
!8808 = !DILocation(line: 1704, column: 41, scope: !8673)
!8809 = !DILocation(line: 1704, column: 4, scope: !8673)
!8810 = !DILocation(line: 1706, column: 4, scope: !8673)
!8811 = !DILocation(line: 1709, column: 8, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 1709, column: 8)
!8813 = !DILocation(line: 1709, column: 12, scope: !8812)
!8814 = !DILocation(line: 1709, column: 8, scope: !8673)
!8815 = !DILocation(line: 1710, column: 22, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 1709, column: 25)
!8817 = !DILocation(line: 1710, column: 25, scope: !8816)
!8818 = !DILocation(line: 1710, column: 5, scope: !8816)
!8819 = !DILocation(line: 1711, column: 21, scope: !8816)
!8820 = !DILocation(line: 1711, column: 24, scope: !8816)
!8821 = !DILocation(line: 1711, column: 5, scope: !8816)
!8822 = !DILocation(line: 1712, column: 5, scope: !8816)
!8823 = !DILocation(line: 1715, column: 9, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8825, file: !3, line: 1715, column: 9)
!8825 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 1714, column: 9)
!8826 = !DILocation(line: 1715, column: 16, scope: !8824)
!8827 = !DILocation(line: 1715, column: 20, scope: !8824)
!8828 = !DILocation(line: 1715, column: 9, scope: !8825)
!8829 = !DILocation(line: 1716, column: 22, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 1715, column: 35)
!8831 = !DILocation(line: 1716, column: 25, scope: !8830)
!8832 = !DILocation(line: 1716, column: 6, scope: !8830)
!8833 = !DILocation(line: 1717, column: 6, scope: !8830)
!8834 = !DILocation(line: 1720, column: 4, scope: !8673)
!8835 = !DILocation(line: 1724, column: 8, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 1724, column: 8)
!8837 = !DILocation(line: 1724, column: 12, scope: !8836)
!8838 = !DILocation(line: 1724, column: 24, scope: !8836)
!8839 = !DILocation(line: 1724, column: 8, scope: !8673)
!8840 = !DILocation(line: 1725, column: 4, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 1724, column: 30)
!8842 = !DILocation(line: 1727, column: 24, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 1726, column: 9)
!8844 = !DILocation(line: 1727, column: 28, scope: !8843)
!8845 = !DILocation(line: 1727, column: 11, scope: !8843)
!8846 = !DILocation(line: 1727, column: 9, scope: !8843)
!8847 = !DILocation(line: 1729, column: 9, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 1729, column: 9)
!8849 = !DILocation(line: 1729, column: 16, scope: !8848)
!8850 = !DILocation(line: 1729, column: 20, scope: !8848)
!8851 = !DILocation(line: 1729, column: 9, scope: !8843)
!8852 = !DILocation(line: 1730, column: 10, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 1730, column: 10)
!8854 = distinct !DILexicalBlock(scope: !8848, file: !3, line: 1729, column: 33)
!8855 = !DILocation(line: 1730, column: 14, scope: !8853)
!8856 = !DILocation(line: 1730, column: 10, scope: !8854)
!8857 = !DILocation(line: 1731, column: 7, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 1730, column: 21)
!8859 = !DILocation(line: 1731, column: 11, scope: !8858)
!8860 = !DILocation(line: 1731, column: 18, scope: !8858)
!8861 = !DILocation(line: 1731, column: 23, scope: !8858)
!8862 = !DILocation(line: 1732, column: 26, scope: !8858)
!8863 = !DILocation(line: 1732, column: 30, scope: !8858)
!8864 = !DILocation(line: 1732, column: 7, scope: !8858)
!8865 = !DILocation(line: 1734, column: 11, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 1734, column: 11)
!8867 = !DILocation(line: 1734, column: 15, scope: !8866)
!8868 = !DILocation(line: 1734, column: 11, scope: !8858)
!8869 = !DILocation(line: 1735, column: 21, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 1734, column: 23)
!8871 = !DILocation(line: 1735, column: 25, scope: !8870)
!8872 = !DILocation(line: 1735, column: 8, scope: !8870)
!8873 = !DILocation(line: 1736, column: 8, scope: !8870)
!8874 = !DILocation(line: 1736, column: 12, scope: !8870)
!8875 = !DILocation(line: 1736, column: 19, scope: !8870)
!8876 = !DILocation(line: 1736, column: 24, scope: !8870)
!8877 = !DILocation(line: 1738, column: 36, scope: !8870)
!8878 = !DILocation(line: 1738, column: 22, scope: !8870)
!8879 = !DILocation(line: 1738, column: 8, scope: !8870)
!8880 = !DILocation(line: 1739, column: 7, scope: !8870)
!8881 = !DILocation(line: 1741, column: 21, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 1740, column: 12)
!8883 = !DILocation(line: 1741, column: 25, scope: !8882)
!8884 = !DILocation(line: 1741, column: 8, scope: !8882)
!8885 = !DILocation(line: 1742, column: 8, scope: !8882)
!8886 = !DILocation(line: 1742, column: 12, scope: !8882)
!8887 = !DILocation(line: 1742, column: 19, scope: !8882)
!8888 = !DILocation(line: 1742, column: 24, scope: !8882)
!8889 = !DILocation(line: 1744, column: 36, scope: !8882)
!8890 = !DILocation(line: 1744, column: 22, scope: !8882)
!8891 = !DILocation(line: 1744, column: 8, scope: !8882)
!8892 = !DILocation(line: 1746, column: 6, scope: !8858)
!8893 = !DILocation(line: 1747, column: 5, scope: !8854)
!8894 = !DILocation(line: 1750, column: 4, scope: !8673)
!8895 = !DILocation(line: 1754, column: 22, scope: !8673)
!8896 = !DILocation(line: 1754, column: 25, scope: !8673)
!8897 = !DILocation(line: 1754, column: 4, scope: !8673)
!8898 = !DILocation(line: 1755, column: 4, scope: !8673)
!8899 = !DILocation(line: 1758, column: 2, scope: !8653)
!8900 = !DILocation(line: 1759, column: 1, scope: !8653)
!8901 = distinct !DISubprogram(name: "area_split_cancel", scope: !3, file: !3, line: 1646, type: !7357, scopeLine: 1647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!8902 = !DILocalVariable(name: "C", arg: 1, scope: !8901, file: !3, line: 1646, type: !3734)
!8903 = !DILocation(line: 1646, column: 41, scope: !8901)
!8904 = !DILocalVariable(name: "op", arg: 2, scope: !8901, file: !3, line: 1646, type: !7081)
!8905 = !DILocation(line: 1646, column: 56, scope: !8901)
!8906 = !DILocalVariable(name: "sd", scope: !8901, file: !3, line: 1648, type: !3243)
!8907 = !DILocation(line: 1648, column: 18, scope: !8901)
!8908 = !DILocation(line: 1648, column: 41, scope: !8901)
!8909 = !DILocation(line: 1648, column: 45, scope: !8901)
!8910 = !DILocation(line: 1648, column: 23, scope: !8901)
!8911 = !DILocation(line: 1650, column: 6, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 1650, column: 6)
!8913 = !DILocation(line: 1650, column: 10, scope: !8912)
!8914 = !DILocation(line: 1650, column: 6, scope: !8901)
!8915 = !DILocation(line: 1651, column: 2, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 1650, column: 23)
!8917 = !DILocation(line: 1653, column: 24, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 1653, column: 7)
!8919 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 1652, column: 7)
!8920 = !DILocation(line: 1653, column: 41, scope: !8918)
!8921 = !DILocation(line: 1653, column: 27, scope: !8918)
!8922 = !DILocation(line: 1653, column: 45, scope: !8918)
!8923 = !DILocation(line: 1653, column: 49, scope: !8918)
!8924 = !DILocation(line: 1653, column: 56, scope: !8918)
!8925 = !DILocation(line: 1653, column: 60, scope: !8918)
!8926 = !DILocation(line: 1653, column: 7, scope: !8918)
!8927 = !DILocation(line: 1653, column: 7, scope: !8919)
!8928 = !DILocation(line: 1654, column: 20, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 1654, column: 8)
!8930 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 1653, column: 68)
!8931 = !DILocation(line: 1654, column: 8, scope: !8929)
!8932 = !DILocation(line: 1654, column: 26, scope: !8929)
!8933 = !DILocation(line: 1654, column: 30, scope: !8929)
!8934 = !DILocation(line: 1654, column: 23, scope: !8929)
!8935 = !DILocation(line: 1654, column: 8, scope: !8930)
!8936 = !DILocation(line: 1655, column: 21, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 1654, column: 37)
!8938 = !DILocation(line: 1655, column: 5, scope: !8937)
!8939 = !DILocation(line: 1656, column: 23, scope: !8937)
!8940 = !DILocation(line: 1656, column: 5, scope: !8937)
!8941 = !DILocation(line: 1657, column: 4, scope: !8937)
!8942 = !DILocation(line: 1658, column: 4, scope: !8930)
!8943 = !DILocation(line: 1658, column: 8, scope: !8930)
!8944 = !DILocation(line: 1658, column: 14, scope: !8930)
!8945 = !DILocation(line: 1659, column: 3, scope: !8930)
!8946 = !DILocation(line: 1661, column: 18, scope: !8901)
!8947 = !DILocation(line: 1661, column: 21, scope: !8901)
!8948 = !DILocation(line: 1661, column: 2, scope: !8901)
!8949 = !DILocation(line: 1662, column: 1, scope: !8901)
!8950 = distinct !DISubprogram(name: "screen_active_editable", scope: !3, file: !3, line: 128, type: !3732, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!8951 = !DILocalVariable(name: "C", arg: 1, scope: !8950, file: !3, line: 128, type: !3734)
!8952 = !DILocation(line: 128, column: 45, scope: !8950)
!8953 = !DILocation(line: 130, column: 31, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8950, file: !3, line: 130, column: 6)
!8955 = !DILocation(line: 130, column: 6, scope: !8954)
!8956 = !DILocation(line: 130, column: 6, scope: !8950)
!8957 = !DILocation(line: 132, column: 21, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 132, column: 7)
!8959 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 130, column: 35)
!8960 = !DILocation(line: 132, column: 7, scope: !8958)
!8961 = !DILocation(line: 132, column: 25, scope: !8958)
!8962 = !DILocation(line: 132, column: 31, scope: !8958)
!8963 = !DILocation(line: 132, column: 7, scope: !8959)
!8964 = !DILocation(line: 133, column: 4, scope: !8958)
!8965 = !DILocation(line: 134, column: 3, scope: !8959)
!8966 = !DILocation(line: 136, column: 2, scope: !8950)
!8967 = !DILocation(line: 137, column: 1, scope: !8950)
!8968 = distinct !DISubprogram(name: "area_split_init", scope: !3, file: !3, line: 1409, type: !7473, scopeLine: 1410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!8969 = !DILocalVariable(name: "C", arg: 1, scope: !8968, file: !3, line: 1409, type: !3734)
!8970 = !DILocation(line: 1409, column: 38, scope: !8968)
!8971 = !DILocalVariable(name: "op", arg: 2, scope: !8968, file: !3, line: 1409, type: !7081)
!8972 = !DILocation(line: 1409, column: 53, scope: !8968)
!8973 = !DILocalVariable(name: "sa", scope: !8968, file: !3, line: 1411, type: !3286)
!8974 = !DILocation(line: 1411, column: 11, scope: !8968)
!8975 = !DILocation(line: 1411, column: 28, scope: !8968)
!8976 = !DILocation(line: 1411, column: 16, scope: !8968)
!8977 = !DILocalVariable(name: "sd", scope: !8968, file: !3, line: 1412, type: !3243)
!8978 = !DILocation(line: 1412, column: 18, scope: !8968)
!8979 = !DILocalVariable(name: "areaminy", scope: !8968, file: !3, line: 1413, type: !1242)
!8980 = !DILocation(line: 1413, column: 6, scope: !8968)
!8981 = !DILocation(line: 1413, column: 17, scope: !8968)
!8982 = !DILocation(line: 1413, column: 38, scope: !8968)
!8983 = !DILocalVariable(name: "dir", scope: !8968, file: !3, line: 1414, type: !1242)
!8984 = !DILocation(line: 1414, column: 6, scope: !8968)
!8985 = !DILocation(line: 1417, column: 6, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 1417, column: 6)
!8987 = !DILocation(line: 1417, column: 9, scope: !8986)
!8988 = !DILocation(line: 1417, column: 6, scope: !8968)
!8989 = !DILocation(line: 1417, column: 18, scope: !8986)
!8990 = !DILocation(line: 1420, column: 21, scope: !8968)
!8991 = !DILocation(line: 1420, column: 25, scope: !8968)
!8992 = !DILocation(line: 1420, column: 8, scope: !8968)
!8993 = !DILocation(line: 1420, column: 6, scope: !8968)
!8994 = !DILocation(line: 1423, column: 6, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 1423, column: 6)
!8996 = !DILocation(line: 1423, column: 10, scope: !8995)
!8997 = !DILocation(line: 1423, column: 17, scope: !8995)
!8998 = !DILocation(line: 1423, column: 20, scope: !8995)
!8999 = !DILocation(line: 1423, column: 24, scope: !8995)
!9000 = !DILocation(line: 1423, column: 29, scope: !8995)
!9001 = !DILocation(line: 1423, column: 6, scope: !8968)
!9002 = !DILocation(line: 1423, column: 45, scope: !8995)
!9003 = !DILocation(line: 1424, column: 6, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 1424, column: 6)
!9005 = !DILocation(line: 1424, column: 10, scope: !9004)
!9006 = !DILocation(line: 1424, column: 17, scope: !9004)
!9007 = !DILocation(line: 1424, column: 20, scope: !9004)
!9008 = !DILocation(line: 1424, column: 24, scope: !9004)
!9009 = !DILocation(line: 1424, column: 35, scope: !9004)
!9010 = !DILocation(line: 1424, column: 33, scope: !9004)
!9011 = !DILocation(line: 1424, column: 29, scope: !9004)
!9012 = !DILocation(line: 1424, column: 6, scope: !8968)
!9013 = !DILocation(line: 1424, column: 45, scope: !9004)
!9014 = !DILocation(line: 1427, column: 25, scope: !8968)
!9015 = !DILocation(line: 1427, column: 7, scope: !8968)
!9016 = !DILocation(line: 1427, column: 5, scope: !8968)
!9017 = !DILocation(line: 1428, column: 19, scope: !8968)
!9018 = !DILocation(line: 1428, column: 2, scope: !8968)
!9019 = !DILocation(line: 1428, column: 6, scope: !8968)
!9020 = !DILocation(line: 1428, column: 17, scope: !8968)
!9021 = !DILocation(line: 1430, column: 14, scope: !8968)
!9022 = !DILocation(line: 1430, column: 2, scope: !8968)
!9023 = !DILocation(line: 1430, column: 6, scope: !8968)
!9024 = !DILocation(line: 1430, column: 12, scope: !8968)
!9025 = !DILocation(line: 1431, column: 17, scope: !8968)
!9026 = !DILocation(line: 1431, column: 21, scope: !8968)
!9027 = !DILocation(line: 1431, column: 30, scope: !8968)
!9028 = !DILocation(line: 1431, column: 34, scope: !8968)
!9029 = !DILocation(line: 1431, column: 41, scope: !8968)
!9030 = !DILocation(line: 1431, column: 45, scope: !8968)
!9031 = !DILocation(line: 1431, column: 2, scope: !8968)
!9032 = !DILocation(line: 1431, column: 6, scope: !8968)
!9033 = !DILocation(line: 1431, column: 15, scope: !8968)
!9034 = !DILocation(line: 1432, column: 16, scope: !8968)
!9035 = !DILocation(line: 1432, column: 20, scope: !8968)
!9036 = !DILocation(line: 1432, column: 29, scope: !8968)
!9037 = !DILocation(line: 1432, column: 33, scope: !8968)
!9038 = !DILocation(line: 1432, column: 40, scope: !8968)
!9039 = !DILocation(line: 1432, column: 47, scope: !8968)
!9040 = !DILocation(line: 1432, column: 51, scope: !8968)
!9041 = !DILocation(line: 1432, column: 58, scope: !8968)
!9042 = !DILocation(line: 1432, column: 2, scope: !8968)
!9043 = !DILocation(line: 1432, column: 6, scope: !8968)
!9044 = !DILocation(line: 1432, column: 14, scope: !8968)
!9045 = !DILocation(line: 1434, column: 2, scope: !8968)
!9046 = !DILocation(line: 1435, column: 1, scope: !8968)
!9047 = distinct !DISubprogram(name: "area_split_apply", scope: !3, file: !3, line: 1468, type: !7473, scopeLine: 1469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!9048 = !DILocalVariable(name: "C", arg: 1, scope: !9047, file: !3, line: 1468, type: !3734)
!9049 = !DILocation(line: 1468, column: 39, scope: !9047)
!9050 = !DILocalVariable(name: "op", arg: 2, scope: !9047, file: !3, line: 1468, type: !7081)
!9051 = !DILocation(line: 1468, column: 54, scope: !9047)
!9052 = !DILocalVariable(name: "sc", scope: !9047, file: !3, line: 1470, type: !3298)
!9053 = !DILocation(line: 1470, column: 11, scope: !9047)
!9054 = !DILocation(line: 1470, column: 30, scope: !9047)
!9055 = !DILocation(line: 1470, column: 16, scope: !9047)
!9056 = !DILocalVariable(name: "sd", scope: !9047, file: !3, line: 1471, type: !3243)
!9057 = !DILocation(line: 1471, column: 18, scope: !9047)
!9058 = !DILocation(line: 1471, column: 41, scope: !9047)
!9059 = !DILocation(line: 1471, column: 45, scope: !9047)
!9060 = !DILocation(line: 1471, column: 23, scope: !9047)
!9061 = !DILocalVariable(name: "fac", scope: !9047, file: !3, line: 1472, type: !1407)
!9062 = !DILocation(line: 1472, column: 8, scope: !9047)
!9063 = !DILocalVariable(name: "dir", scope: !9047, file: !3, line: 1473, type: !1242)
!9064 = !DILocation(line: 1473, column: 6, scope: !9047)
!9065 = !DILocation(line: 1475, column: 22, scope: !9047)
!9066 = !DILocation(line: 1475, column: 26, scope: !9047)
!9067 = !DILocation(line: 1475, column: 8, scope: !9047)
!9068 = !DILocation(line: 1475, column: 6, scope: !9047)
!9069 = !DILocation(line: 1476, column: 21, scope: !9047)
!9070 = !DILocation(line: 1476, column: 25, scope: !9047)
!9071 = !DILocation(line: 1476, column: 8, scope: !9047)
!9072 = !DILocation(line: 1476, column: 6, scope: !9047)
!9073 = !DILocation(line: 1478, column: 25, scope: !9047)
!9074 = !DILocation(line: 1478, column: 29, scope: !9047)
!9075 = !DILocation(line: 1478, column: 33, scope: !9047)
!9076 = !DILocation(line: 1478, column: 40, scope: !9047)
!9077 = !DILocation(line: 1478, column: 45, scope: !9047)
!9078 = !DILocation(line: 1478, column: 14, scope: !9047)
!9079 = !DILocation(line: 1478, column: 2, scope: !9047)
!9080 = !DILocation(line: 1478, column: 6, scope: !9047)
!9081 = !DILocation(line: 1478, column: 12, scope: !9047)
!9082 = !DILocation(line: 1480, column: 6, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9047, file: !3, line: 1480, column: 6)
!9084 = !DILocation(line: 1480, column: 10, scope: !9083)
!9085 = !DILocation(line: 1480, column: 6, scope: !9047)
!9086 = !DILocalVariable(name: "sv", scope: !9087, file: !3, line: 1481, type: !3265)
!9087 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 1480, column: 17)
!9088 = !DILocation(line: 1481, column: 12, scope: !9087)
!9089 = !DILocation(line: 1483, column: 35, scope: !9087)
!9090 = !DILocation(line: 1483, column: 39, scope: !9087)
!9091 = !DILocation(line: 1483, column: 43, scope: !9087)
!9092 = !DILocation(line: 1483, column: 50, scope: !9087)
!9093 = !DILocation(line: 1483, column: 54, scope: !9087)
!9094 = !DILocation(line: 1483, column: 15, scope: !9087)
!9095 = !DILocation(line: 1483, column: 3, scope: !9087)
!9096 = !DILocation(line: 1483, column: 7, scope: !9087)
!9097 = !DILocation(line: 1483, column: 13, scope: !9087)
!9098 = !DILocation(line: 1486, column: 13, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1486, column: 3)
!9100 = !DILocation(line: 1486, column: 17, scope: !9099)
!9101 = !DILocation(line: 1486, column: 26, scope: !9099)
!9102 = !DILocation(line: 1486, column: 11, scope: !9099)
!9103 = !DILocation(line: 1486, column: 8, scope: !9099)
!9104 = !DILocation(line: 1486, column: 33, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 1486, column: 3)
!9106 = !DILocation(line: 1486, column: 3, scope: !9099)
!9107 = !DILocation(line: 1487, column: 4, scope: !9105)
!9108 = !DILocation(line: 1487, column: 8, scope: !9105)
!9109 = !DILocation(line: 1487, column: 17, scope: !9105)
!9110 = !DILocation(line: 1486, column: 42, scope: !9105)
!9111 = !DILocation(line: 1486, column: 46, scope: !9105)
!9112 = !DILocation(line: 1486, column: 40, scope: !9105)
!9113 = !DILocation(line: 1486, column: 3, scope: !9105)
!9114 = distinct !{!9114, !9106, !9115}
!9115 = !DILocation(line: 1487, column: 19, scope: !9099)
!9116 = !DILocation(line: 1489, column: 3, scope: !9087)
!9117 = !DILocation(line: 1489, column: 7, scope: !9087)
!9118 = !DILocation(line: 1489, column: 14, scope: !9087)
!9119 = !DILocation(line: 1489, column: 18, scope: !9087)
!9120 = !DILocation(line: 1489, column: 27, scope: !9087)
!9121 = !DILocation(line: 1490, column: 3, scope: !9087)
!9122 = !DILocation(line: 1490, column: 7, scope: !9087)
!9123 = !DILocation(line: 1490, column: 14, scope: !9087)
!9124 = !DILocation(line: 1490, column: 18, scope: !9087)
!9125 = !DILocation(line: 1490, column: 27, scope: !9087)
!9126 = !DILocation(line: 1492, column: 7, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1492, column: 7)
!9128 = !DILocation(line: 1492, column: 11, scope: !9127)
!9129 = !DILocation(line: 1492, column: 7, scope: !9087)
!9130 = !DILocation(line: 1492, column: 33, scope: !9127)
!9131 = !DILocation(line: 1492, column: 37, scope: !9127)
!9132 = !DILocation(line: 1492, column: 44, scope: !9127)
!9133 = !DILocation(line: 1492, column: 48, scope: !9127)
!9134 = !DILocation(line: 1492, column: 52, scope: !9127)
!9135 = !DILocation(line: 1492, column: 19, scope: !9127)
!9136 = !DILocation(line: 1492, column: 23, scope: !9127)
!9137 = !DILocation(line: 1492, column: 31, scope: !9127)
!9138 = !DILocation(line: 1493, column: 22, scope: !9127)
!9139 = !DILocation(line: 1493, column: 26, scope: !9127)
!9140 = !DILocation(line: 1493, column: 33, scope: !9127)
!9141 = !DILocation(line: 1493, column: 37, scope: !9127)
!9142 = !DILocation(line: 1493, column: 41, scope: !9127)
!9143 = !DILocation(line: 1493, column: 8, scope: !9127)
!9144 = !DILocation(line: 1493, column: 12, scope: !9127)
!9145 = !DILocation(line: 1493, column: 20, scope: !9127)
!9146 = !DILocation(line: 1495, column: 22, scope: !9087)
!9147 = !DILocation(line: 1495, column: 26, scope: !9087)
!9148 = !DILocation(line: 1495, column: 3, scope: !9087)
!9149 = !DILocation(line: 1496, column: 22, scope: !9087)
!9150 = !DILocation(line: 1496, column: 26, scope: !9087)
!9151 = !DILocation(line: 1496, column: 3, scope: !9087)
!9152 = !DILocation(line: 1498, column: 25, scope: !9087)
!9153 = !DILocation(line: 1498, column: 3, scope: !9087)
!9154 = !DILocation(line: 1500, column: 3, scope: !9087)
!9155 = !DILocation(line: 1503, column: 2, scope: !9047)
!9156 = !DILocation(line: 1504, column: 1, scope: !9047)
!9157 = distinct !DISubprogram(name: "area_split_exit", scope: !3, file: !3, line: 1506, type: !7357, scopeLine: 1507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!9158 = !DILocalVariable(name: "C", arg: 1, scope: !9157, file: !3, line: 1506, type: !3734)
!9159 = !DILocation(line: 1506, column: 39, scope: !9157)
!9160 = !DILocalVariable(name: "op", arg: 2, scope: !9157, file: !3, line: 1506, type: !7081)
!9161 = !DILocation(line: 1506, column: 54, scope: !9157)
!9162 = !DILocation(line: 1508, column: 6, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 1508, column: 6)
!9164 = !DILocation(line: 1508, column: 10, scope: !9163)
!9165 = !DILocation(line: 1508, column: 6, scope: !9157)
!9166 = !DILocalVariable(name: "sd", scope: !9167, file: !3, line: 1509, type: !3243)
!9167 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 1508, column: 22)
!9168 = !DILocation(line: 1509, column: 19, scope: !9167)
!9169 = !DILocation(line: 1509, column: 42, scope: !9167)
!9170 = !DILocation(line: 1509, column: 46, scope: !9167)
!9171 = !DILocation(line: 1509, column: 24, scope: !9167)
!9172 = !DILocation(line: 1510, column: 7, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 1510, column: 7)
!9174 = !DILocation(line: 1510, column: 11, scope: !9173)
!9175 = !DILocation(line: 1510, column: 7, scope: !9167)
!9176 = !DILocation(line: 1510, column: 37, scope: !9173)
!9177 = !DILocation(line: 1510, column: 41, scope: !9173)
!9178 = !DILocation(line: 1510, column: 18, scope: !9173)
!9179 = !DILocation(line: 1511, column: 7, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 1511, column: 7)
!9181 = !DILocation(line: 1511, column: 11, scope: !9180)
!9182 = !DILocation(line: 1511, column: 7, scope: !9167)
!9183 = !DILocation(line: 1511, column: 37, scope: !9180)
!9184 = !DILocation(line: 1511, column: 41, scope: !9180)
!9185 = !DILocation(line: 1511, column: 18, scope: !9180)
!9186 = !DILocation(line: 1513, column: 7, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 1513, column: 7)
!9188 = !DILocation(line: 1513, column: 11, scope: !9187)
!9189 = !DILocation(line: 1513, column: 7, scope: !9167)
!9190 = !DILocation(line: 1514, column: 4, scope: !9187)
!9191 = !DILocation(line: 1514, column: 8, scope: !9187)
!9192 = !DILocation(line: 1514, column: 15, scope: !9187)
!9193 = !DILocation(line: 1514, column: 20, scope: !9187)
!9194 = !DILocation(line: 1516, column: 3, scope: !9167)
!9195 = !DILocation(line: 1516, column: 13, scope: !9167)
!9196 = !DILocation(line: 1516, column: 17, scope: !9167)
!9197 = !DILocation(line: 1517, column: 3, scope: !9167)
!9198 = !DILocation(line: 1517, column: 7, scope: !9167)
!9199 = !DILocation(line: 1517, column: 18, scope: !9167)
!9200 = !DILocation(line: 1518, column: 2, scope: !9167)
!9201 = !DILocation(line: 1520, column: 40, scope: !9157)
!9202 = !DILocation(line: 1520, column: 26, scope: !9157)
!9203 = !DILocation(line: 1520, column: 2, scope: !9157)
!9204 = !DILocation(line: 1521, column: 24, scope: !9157)
!9205 = !DILocation(line: 1521, column: 2, scope: !9157)
!9206 = !DILocation(line: 1524, column: 38, scope: !9157)
!9207 = !DILocation(line: 1524, column: 24, scope: !9157)
!9208 = !DILocation(line: 1524, column: 2, scope: !9157)
!9209 = !DILocation(line: 1525, column: 38, scope: !9157)
!9210 = !DILocation(line: 1525, column: 24, scope: !9157)
!9211 = !DILocation(line: 1525, column: 2, scope: !9157)
!9212 = !DILocation(line: 1526, column: 1, scope: !9157)
!9213 = distinct !DISubprogram(name: "area_findsharededge", scope: !3, file: !3, line: 1439, type: !9214, scopeLine: 1440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!9214 = !DISubroutineType(types: !9215)
!9215 = !{!3257, !3298, !3286, !3286}
!9216 = !DILocalVariable(name: "screen", arg: 1, scope: !9213, file: !3, line: 1439, type: !3298)
!9217 = !DILocation(line: 1439, column: 46, scope: !9213)
!9218 = !DILocalVariable(name: "sa", arg: 2, scope: !9213, file: !3, line: 1439, type: !3286)
!9219 = !DILocation(line: 1439, column: 63, scope: !9213)
!9220 = !DILocalVariable(name: "sb", arg: 3, scope: !9213, file: !3, line: 1439, type: !3286)
!9221 = !DILocation(line: 1439, column: 76, scope: !9213)
!9222 = !DILocalVariable(name: "sav1", scope: !9213, file: !3, line: 1441, type: !3265)
!9223 = !DILocation(line: 1441, column: 11, scope: !9213)
!9224 = !DILocation(line: 1441, column: 18, scope: !9213)
!9225 = !DILocation(line: 1441, column: 22, scope: !9213)
!9226 = !DILocalVariable(name: "sav2", scope: !9213, file: !3, line: 1442, type: !3265)
!9227 = !DILocation(line: 1442, column: 11, scope: !9213)
!9228 = !DILocation(line: 1442, column: 18, scope: !9213)
!9229 = !DILocation(line: 1442, column: 22, scope: !9213)
!9230 = !DILocalVariable(name: "sav3", scope: !9213, file: !3, line: 1443, type: !3265)
!9231 = !DILocation(line: 1443, column: 11, scope: !9213)
!9232 = !DILocation(line: 1443, column: 18, scope: !9213)
!9233 = !DILocation(line: 1443, column: 22, scope: !9213)
!9234 = !DILocalVariable(name: "sav4", scope: !9213, file: !3, line: 1444, type: !3265)
!9235 = !DILocation(line: 1444, column: 11, scope: !9213)
!9236 = !DILocation(line: 1444, column: 18, scope: !9213)
!9237 = !DILocation(line: 1444, column: 22, scope: !9213)
!9238 = !DILocalVariable(name: "sbv1", scope: !9213, file: !3, line: 1445, type: !3265)
!9239 = !DILocation(line: 1445, column: 11, scope: !9213)
!9240 = !DILocation(line: 1445, column: 18, scope: !9213)
!9241 = !DILocation(line: 1445, column: 22, scope: !9213)
!9242 = !DILocalVariable(name: "sbv2", scope: !9213, file: !3, line: 1446, type: !3265)
!9243 = !DILocation(line: 1446, column: 11, scope: !9213)
!9244 = !DILocation(line: 1446, column: 18, scope: !9213)
!9245 = !DILocation(line: 1446, column: 22, scope: !9213)
!9246 = !DILocalVariable(name: "sbv3", scope: !9213, file: !3, line: 1447, type: !3265)
!9247 = !DILocation(line: 1447, column: 11, scope: !9213)
!9248 = !DILocation(line: 1447, column: 18, scope: !9213)
!9249 = !DILocation(line: 1447, column: 22, scope: !9213)
!9250 = !DILocalVariable(name: "sbv4", scope: !9213, file: !3, line: 1448, type: !3265)
!9251 = !DILocation(line: 1448, column: 11, scope: !9213)
!9252 = !DILocation(line: 1448, column: 18, scope: !9213)
!9253 = !DILocation(line: 1448, column: 22, scope: !9213)
!9254 = !DILocation(line: 1450, column: 6, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 1450, column: 6)
!9256 = !DILocation(line: 1450, column: 14, scope: !9255)
!9257 = !DILocation(line: 1450, column: 11, scope: !9255)
!9258 = !DILocation(line: 1450, column: 19, scope: !9255)
!9259 = !DILocation(line: 1450, column: 22, scope: !9255)
!9260 = !DILocation(line: 1450, column: 30, scope: !9255)
!9261 = !DILocation(line: 1450, column: 27, scope: !9255)
!9262 = !DILocation(line: 1450, column: 6, scope: !9213)
!9263 = !DILocation(line: 1451, column: 26, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 1450, column: 36)
!9265 = !DILocation(line: 1451, column: 34, scope: !9264)
!9266 = !DILocation(line: 1451, column: 40, scope: !9264)
!9267 = !DILocation(line: 1451, column: 10, scope: !9264)
!9268 = !DILocation(line: 1451, column: 3, scope: !9264)
!9269 = !DILocation(line: 1453, column: 11, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 1453, column: 11)
!9271 = !DILocation(line: 1453, column: 19, scope: !9270)
!9272 = !DILocation(line: 1453, column: 16, scope: !9270)
!9273 = !DILocation(line: 1453, column: 24, scope: !9270)
!9274 = !DILocation(line: 1453, column: 27, scope: !9270)
!9275 = !DILocation(line: 1453, column: 35, scope: !9270)
!9276 = !DILocation(line: 1453, column: 32, scope: !9270)
!9277 = !DILocation(line: 1453, column: 11, scope: !9255)
!9278 = !DILocation(line: 1454, column: 26, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 1453, column: 41)
!9280 = !DILocation(line: 1454, column: 34, scope: !9279)
!9281 = !DILocation(line: 1454, column: 40, scope: !9279)
!9282 = !DILocation(line: 1454, column: 10, scope: !9279)
!9283 = !DILocation(line: 1454, column: 3, scope: !9279)
!9284 = !DILocation(line: 1456, column: 11, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 1456, column: 11)
!9286 = !DILocation(line: 1456, column: 19, scope: !9285)
!9287 = !DILocation(line: 1456, column: 16, scope: !9285)
!9288 = !DILocation(line: 1456, column: 24, scope: !9285)
!9289 = !DILocation(line: 1456, column: 27, scope: !9285)
!9290 = !DILocation(line: 1456, column: 35, scope: !9285)
!9291 = !DILocation(line: 1456, column: 32, scope: !9285)
!9292 = !DILocation(line: 1456, column: 11, scope: !9270)
!9293 = !DILocation(line: 1457, column: 26, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 1456, column: 41)
!9295 = !DILocation(line: 1457, column: 34, scope: !9294)
!9296 = !DILocation(line: 1457, column: 40, scope: !9294)
!9297 = !DILocation(line: 1457, column: 10, scope: !9294)
!9298 = !DILocation(line: 1457, column: 3, scope: !9294)
!9299 = !DILocation(line: 1459, column: 11, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 1459, column: 11)
!9301 = !DILocation(line: 1459, column: 19, scope: !9300)
!9302 = !DILocation(line: 1459, column: 16, scope: !9300)
!9303 = !DILocation(line: 1459, column: 24, scope: !9300)
!9304 = !DILocation(line: 1459, column: 27, scope: !9300)
!9305 = !DILocation(line: 1459, column: 35, scope: !9300)
!9306 = !DILocation(line: 1459, column: 32, scope: !9300)
!9307 = !DILocation(line: 1459, column: 11, scope: !9285)
!9308 = !DILocation(line: 1460, column: 26, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 1459, column: 41)
!9310 = !DILocation(line: 1460, column: 34, scope: !9309)
!9311 = !DILocation(line: 1460, column: 40, scope: !9309)
!9312 = !DILocation(line: 1460, column: 10, scope: !9309)
!9313 = !DILocation(line: 1460, column: 3, scope: !9309)
!9314 = !DILocation(line: 1463, column: 2, scope: !9213)
!9315 = !DILocation(line: 1464, column: 1, scope: !9213)
!9316 = distinct !DISubprogram(name: "area_split_menu_init", scope: !3, file: !3, line: 1387, type: !7473, scopeLine: 1388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!9317 = !DILocalVariable(name: "C", arg: 1, scope: !9316, file: !3, line: 1387, type: !3734)
!9318 = !DILocation(line: 1387, column: 43, scope: !9316)
!9319 = !DILocalVariable(name: "op", arg: 2, scope: !9316, file: !3, line: 1387, type: !7081)
!9320 = !DILocation(line: 1387, column: 58, scope: !9316)
!9321 = !DILocalVariable(name: "sd", scope: !9316, file: !3, line: 1389, type: !3243)
!9322 = !DILocation(line: 1389, column: 18, scope: !9316)
!9323 = !DILocation(line: 1392, column: 25, scope: !9316)
!9324 = !DILocation(line: 1392, column: 7, scope: !9316)
!9325 = !DILocation(line: 1392, column: 5, scope: !9316)
!9326 = !DILocation(line: 1393, column: 19, scope: !9316)
!9327 = !DILocation(line: 1393, column: 2, scope: !9316)
!9328 = !DILocation(line: 1393, column: 6, scope: !9316)
!9329 = !DILocation(line: 1393, column: 17, scope: !9316)
!9330 = !DILocation(line: 1395, column: 26, scope: !9316)
!9331 = !DILocation(line: 1395, column: 14, scope: !9316)
!9332 = !DILocation(line: 1395, column: 2, scope: !9316)
!9333 = !DILocation(line: 1395, column: 6, scope: !9316)
!9334 = !DILocation(line: 1395, column: 12, scope: !9316)
!9335 = !DILocation(line: 1397, column: 6, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 1397, column: 6)
!9337 = !DILocation(line: 1397, column: 10, scope: !9336)
!9338 = !DILocation(line: 1397, column: 6, scope: !9316)
!9339 = !DILocalVariable(name: "dir", scope: !9340, file: !3, line: 1398, type: !1242)
!9340 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 1397, column: 17)
!9341 = !DILocation(line: 1398, column: 7, scope: !9340)
!9342 = !DILocation(line: 1398, column: 26, scope: !9340)
!9343 = !DILocation(line: 1398, column: 30, scope: !9340)
!9344 = !DILocation(line: 1398, column: 13, scope: !9340)
!9345 = !DILocation(line: 1400, column: 7, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 1400, column: 7)
!9347 = !DILocation(line: 1400, column: 11, scope: !9346)
!9348 = !DILocation(line: 1400, column: 7, scope: !9340)
!9349 = !DILocation(line: 1401, column: 4, scope: !9346)
!9350 = !DILocation(line: 1401, column: 8, scope: !9346)
!9351 = !DILocation(line: 1401, column: 15, scope: !9346)
!9352 = !DILocation(line: 1401, column: 20, scope: !9346)
!9353 = !DILocation(line: 1403, column: 4, scope: !9346)
!9354 = !DILocation(line: 1403, column: 8, scope: !9346)
!9355 = !DILocation(line: 1403, column: 15, scope: !9346)
!9356 = !DILocation(line: 1403, column: 20, scope: !9346)
!9357 = !DILocation(line: 1404, column: 2, scope: !9340)
!9358 = !DILocation(line: 1405, column: 2, scope: !9316)
!9359 = distinct !DISubprogram(name: "area_join_exec", scope: !3, file: !3, line: 2541, type: !7473, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!9360 = !DILocalVariable(name: "C", arg: 1, scope: !9359, file: !3, line: 2541, type: !3734)
!9361 = !DILocation(line: 2541, column: 37, scope: !9359)
!9362 = !DILocalVariable(name: "op", arg: 2, scope: !9359, file: !3, line: 2541, type: !7081)
!9363 = !DILocation(line: 2541, column: 52, scope: !9359)
!9364 = !DILocation(line: 2543, column: 22, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 2543, column: 6)
!9366 = !DILocation(line: 2543, column: 25, scope: !9365)
!9367 = !DILocation(line: 2543, column: 7, scope: !9365)
!9368 = !DILocation(line: 2543, column: 6, scope: !9359)
!9369 = !DILocation(line: 2544, column: 3, scope: !9365)
!9370 = !DILocation(line: 2546, column: 18, scope: !9359)
!9371 = !DILocation(line: 2546, column: 21, scope: !9359)
!9372 = !DILocation(line: 2546, column: 2, scope: !9359)
!9373 = !DILocation(line: 2547, column: 17, scope: !9359)
!9374 = !DILocation(line: 2547, column: 20, scope: !9359)
!9375 = !DILocation(line: 2547, column: 2, scope: !9359)
!9376 = !DILocation(line: 2549, column: 2, scope: !9359)
!9377 = !DILocation(line: 2550, column: 1, scope: !9359)
!9378 = distinct !DISubprogram(name: "area_join_invoke", scope: !3, file: !3, line: 2553, type: !7079, scopeLine: 2554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!9379 = !DILocalVariable(name: "C", arg: 1, scope: !9378, file: !3, line: 2553, type: !3734)
!9380 = !DILocation(line: 2553, column: 39, scope: !9378)
!9381 = !DILocalVariable(name: "op", arg: 2, scope: !9378, file: !3, line: 2553, type: !7081)
!9382 = !DILocation(line: 2553, column: 54, scope: !9378)
!9383 = !DILocalVariable(name: "event", arg: 3, scope: !9378, file: !3, line: 2553, type: !6997)
!9384 = !DILocation(line: 2553, column: 73, scope: !9378)
!9385 = !DILocation(line: 2556, column: 6, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 2556, column: 6)
!9387 = !DILocation(line: 2556, column: 13, scope: !9386)
!9388 = !DILocation(line: 2556, column: 18, scope: !9386)
!9389 = !DILocation(line: 2556, column: 6, scope: !9378)
!9390 = !DILocalVariable(name: "sad", scope: !9391, file: !3, line: 2557, type: !7097)
!9391 = distinct !DILexicalBlock(scope: !9386, file: !3, line: 2556, column: 42)
!9392 = !DILocation(line: 2557, column: 20, scope: !9391)
!9393 = !DILocation(line: 2557, column: 26, scope: !9391)
!9394 = !DILocation(line: 2557, column: 33, scope: !9391)
!9395 = !DILocation(line: 2559, column: 7, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 2559, column: 7)
!9397 = !DILocation(line: 2559, column: 11, scope: !9396)
!9398 = !DILocation(line: 2559, column: 19, scope: !9396)
!9399 = !DILocation(line: 2559, column: 22, scope: !9396)
!9400 = !DILocation(line: 2559, column: 27, scope: !9396)
!9401 = !DILocation(line: 2559, column: 36, scope: !9396)
!9402 = !DILocation(line: 2559, column: 7, scope: !9391)
!9403 = !DILocation(line: 2560, column: 4, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 2559, column: 41)
!9405 = !DILocation(line: 2564, column: 7, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 2564, column: 7)
!9407 = !DILocation(line: 2564, column: 12, scope: !9406)
!9408 = !DILocation(line: 2564, column: 16, scope: !9406)
!9409 = !DILocation(line: 2564, column: 24, scope: !9406)
!9410 = !DILocation(line: 2564, column: 27, scope: !9406)
!9411 = !DILocation(line: 2564, column: 32, scope: !9406)
!9412 = !DILocation(line: 2564, column: 36, scope: !9406)
!9413 = !DILocation(line: 2564, column: 7, scope: !9391)
!9414 = !DILocation(line: 2565, column: 4, scope: !9406)
!9415 = !DILocation(line: 2568, column: 7, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 2568, column: 7)
!9417 = !DILocation(line: 2568, column: 12, scope: !9416)
!9418 = !DILocation(line: 2568, column: 19, scope: !9416)
!9419 = !DILocation(line: 2568, column: 24, scope: !9416)
!9420 = !DILocation(line: 2568, column: 16, scope: !9416)
!9421 = !DILocation(line: 2568, column: 7, scope: !9391)
!9422 = !DILocation(line: 2569, column: 4, scope: !9416)
!9423 = !DILocation(line: 2572, column: 15, scope: !9391)
!9424 = !DILocation(line: 2572, column: 19, scope: !9391)
!9425 = !DILocation(line: 2572, column: 33, scope: !9391)
!9426 = !DILocation(line: 2572, column: 38, scope: !9391)
!9427 = !DILocation(line: 2572, column: 3, scope: !9391)
!9428 = !DILocation(line: 2573, column: 15, scope: !9391)
!9429 = !DILocation(line: 2573, column: 19, scope: !9391)
!9430 = !DILocation(line: 2573, column: 33, scope: !9391)
!9431 = !DILocation(line: 2573, column: 38, scope: !9391)
!9432 = !DILocation(line: 2573, column: 3, scope: !9391)
!9433 = !DILocation(line: 2574, column: 15, scope: !9391)
!9434 = !DILocation(line: 2574, column: 19, scope: !9391)
!9435 = !DILocation(line: 2574, column: 33, scope: !9391)
!9436 = !DILocation(line: 2574, column: 40, scope: !9391)
!9437 = !DILocation(line: 2574, column: 3, scope: !9391)
!9438 = !DILocation(line: 2575, column: 15, scope: !9391)
!9439 = !DILocation(line: 2575, column: 19, scope: !9391)
!9440 = !DILocation(line: 2575, column: 33, scope: !9391)
!9441 = !DILocation(line: 2575, column: 40, scope: !9391)
!9442 = !DILocation(line: 2575, column: 3, scope: !9391)
!9443 = !DILocation(line: 2576, column: 2, scope: !9391)
!9444 = !DILocation(line: 2579, column: 22, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 2579, column: 6)
!9446 = !DILocation(line: 2579, column: 25, scope: !9445)
!9447 = !DILocation(line: 2579, column: 7, scope: !9445)
!9448 = !DILocation(line: 2579, column: 6, scope: !9378)
!9449 = !DILocation(line: 2580, column: 3, scope: !9445)
!9450 = !DILocation(line: 2583, column: 29, scope: !9378)
!9451 = !DILocation(line: 2583, column: 32, scope: !9378)
!9452 = !DILocation(line: 2583, column: 2, scope: !9378)
!9453 = !DILocation(line: 2585, column: 2, scope: !9378)
!9454 = !DILocation(line: 2586, column: 1, scope: !9378)
!9455 = distinct !DISubprogram(name: "area_join_modal", scope: !3, file: !3, line: 2607, type: !7079, scopeLine: 2608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!9456 = !DILocalVariable(name: "C", arg: 1, scope: !9455, file: !3, line: 2607, type: !3734)
!9457 = !DILocation(line: 2607, column: 38, scope: !9455)
!9458 = !DILocalVariable(name: "op", arg: 2, scope: !9455, file: !3, line: 2607, type: !7081)
!9459 = !DILocation(line: 2607, column: 53, scope: !9455)
!9460 = !DILocalVariable(name: "event", arg: 3, scope: !9455, file: !3, line: 2607, type: !6997)
!9461 = !DILocation(line: 2607, column: 72, scope: !9455)
!9462 = !DILocalVariable(name: "sc", scope: !9455, file: !3, line: 2609, type: !3298)
!9463 = !DILocation(line: 2609, column: 11, scope: !9455)
!9464 = !DILocation(line: 2609, column: 30, scope: !9455)
!9465 = !DILocation(line: 2609, column: 16, scope: !9455)
!9466 = !DILocalVariable(name: "jd", scope: !9455, file: !3, line: 2610, type: !3561)
!9467 = !DILocation(line: 2610, column: 17, scope: !9455)
!9468 = !DILocation(line: 2610, column: 39, scope: !9455)
!9469 = !DILocation(line: 2610, column: 43, scope: !9455)
!9470 = !DILocation(line: 2610, column: 22, scope: !9455)
!9471 = !DILocation(line: 2613, column: 10, scope: !9455)
!9472 = !DILocation(line: 2613, column: 17, scope: !9455)
!9473 = !DILocation(line: 2613, column: 2, scope: !9455)
!9474 = !DILocalVariable(name: "sa", scope: !9475, file: !3, line: 2617, type: !3286)
!9475 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 2616, column: 3)
!9476 = distinct !DILexicalBlock(scope: !9455, file: !3, line: 2613, column: 23)
!9477 = !DILocation(line: 2617, column: 13, scope: !9475)
!9478 = !DILocation(line: 2617, column: 39, scope: !9475)
!9479 = !DILocation(line: 2617, column: 43, scope: !9475)
!9480 = !DILocation(line: 2617, column: 50, scope: !9475)
!9481 = !DILocation(line: 2617, column: 53, scope: !9475)
!9482 = !DILocation(line: 2617, column: 60, scope: !9475)
!9483 = !DILocation(line: 2617, column: 18, scope: !9475)
!9484 = !DILocalVariable(name: "dir", scope: !9475, file: !3, line: 2618, type: !1242)
!9485 = !DILocation(line: 2618, column: 8, scope: !9475)
!9486 = !DILocation(line: 2620, column: 8, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 2620, column: 8)
!9488 = !DILocation(line: 2620, column: 8, scope: !9475)
!9489 = !DILocation(line: 2621, column: 9, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 2621, column: 9)
!9491 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 2620, column: 12)
!9492 = !DILocation(line: 2621, column: 13, scope: !9490)
!9493 = !DILocation(line: 2621, column: 20, scope: !9490)
!9494 = !DILocation(line: 2621, column: 17, scope: !9490)
!9495 = !DILocation(line: 2621, column: 9, scope: !9491)
!9496 = !DILocation(line: 2622, column: 32, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9490, file: !3, line: 2621, column: 24)
!9498 = !DILocation(line: 2622, column: 36, scope: !9497)
!9499 = !DILocation(line: 2622, column: 41, scope: !9497)
!9500 = !DILocation(line: 2622, column: 12, scope: !9497)
!9501 = !DILocation(line: 2622, column: 10, scope: !9497)
!9502 = !DILocation(line: 2623, column: 10, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9497, file: !3, line: 2623, column: 10)
!9504 = !DILocation(line: 2623, column: 14, scope: !9503)
!9505 = !DILocation(line: 2623, column: 10, scope: !9497)
!9506 = !DILocation(line: 2624, column: 11, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 2624, column: 11)
!9508 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 2623, column: 21)
!9509 = !DILocation(line: 2624, column: 15, scope: !9507)
!9510 = !DILocation(line: 2624, column: 11, scope: !9508)
!9511 = !DILocation(line: 2624, column: 20, scope: !9507)
!9512 = !DILocation(line: 2624, column: 24, scope: !9507)
!9513 = !DILocation(line: 2624, column: 29, scope: !9507)
!9514 = !DILocation(line: 2624, column: 34, scope: !9507)
!9515 = !DILocation(line: 2625, column: 17, scope: !9508)
!9516 = !DILocation(line: 2625, column: 7, scope: !9508)
!9517 = !DILocation(line: 2625, column: 11, scope: !9508)
!9518 = !DILocation(line: 2625, column: 15, scope: !9508)
!9519 = !DILocation(line: 2626, column: 7, scope: !9508)
!9520 = !DILocation(line: 2626, column: 11, scope: !9508)
!9521 = !DILocation(line: 2626, column: 16, scope: !9508)
!9522 = !DILocation(line: 2626, column: 21, scope: !9508)
!9523 = !DILocation(line: 2627, column: 6, scope: !9508)
!9524 = !DILocation(line: 2633, column: 33, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 2628, column: 11)
!9526 = !DILocation(line: 2633, column: 37, scope: !9525)
!9527 = !DILocation(line: 2633, column: 41, scope: !9525)
!9528 = !DILocation(line: 2633, column: 13, scope: !9525)
!9529 = !DILocation(line: 2633, column: 11, scope: !9525)
!9530 = !DILocation(line: 2634, column: 11, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9525, file: !3, line: 2634, column: 11)
!9532 = !DILocation(line: 2634, column: 15, scope: !9531)
!9533 = !DILocation(line: 2634, column: 11, scope: !9525)
!9534 = !DILocation(line: 2635, column: 12, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 2635, column: 12)
!9536 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2634, column: 22)
!9537 = !DILocation(line: 2635, column: 16, scope: !9535)
!9538 = !DILocation(line: 2635, column: 12, scope: !9536)
!9539 = !DILocation(line: 2635, column: 21, scope: !9535)
!9540 = !DILocation(line: 2635, column: 25, scope: !9535)
!9541 = !DILocation(line: 2635, column: 30, scope: !9535)
!9542 = !DILocation(line: 2635, column: 35, scope: !9535)
!9543 = !DILocation(line: 2636, column: 12, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 2636, column: 12)
!9545 = !DILocation(line: 2636, column: 16, scope: !9544)
!9546 = !DILocation(line: 2636, column: 12, scope: !9536)
!9547 = !DILocation(line: 2636, column: 21, scope: !9544)
!9548 = !DILocation(line: 2636, column: 25, scope: !9544)
!9549 = !DILocation(line: 2636, column: 30, scope: !9544)
!9550 = !DILocation(line: 2636, column: 35, scope: !9544)
!9551 = !DILocation(line: 2637, column: 18, scope: !9536)
!9552 = !DILocation(line: 2637, column: 22, scope: !9536)
!9553 = !DILocation(line: 2637, column: 8, scope: !9536)
!9554 = !DILocation(line: 2637, column: 12, scope: !9536)
!9555 = !DILocation(line: 2637, column: 16, scope: !9536)
!9556 = !DILocation(line: 2638, column: 18, scope: !9536)
!9557 = !DILocation(line: 2638, column: 8, scope: !9536)
!9558 = !DILocation(line: 2638, column: 12, scope: !9536)
!9559 = !DILocation(line: 2638, column: 16, scope: !9536)
!9560 = !DILocation(line: 2639, column: 12, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 2639, column: 12)
!9562 = !DILocation(line: 2639, column: 16, scope: !9561)
!9563 = !DILocation(line: 2639, column: 12, scope: !9536)
!9564 = !DILocation(line: 2639, column: 21, scope: !9561)
!9565 = !DILocation(line: 2639, column: 25, scope: !9561)
!9566 = !DILocation(line: 2639, column: 30, scope: !9561)
!9567 = !DILocation(line: 2639, column: 35, scope: !9561)
!9568 = !DILocation(line: 2640, column: 12, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 2640, column: 12)
!9570 = !DILocation(line: 2640, column: 16, scope: !9569)
!9571 = !DILocation(line: 2640, column: 12, scope: !9536)
!9572 = !DILocation(line: 2640, column: 21, scope: !9569)
!9573 = !DILocation(line: 2640, column: 25, scope: !9569)
!9574 = !DILocation(line: 2640, column: 30, scope: !9569)
!9575 = !DILocation(line: 2640, column: 35, scope: !9569)
!9576 = !DILocation(line: 2641, column: 7, scope: !9536)
!9577 = !DILocation(line: 2643, column: 12, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 2643, column: 12)
!9579 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2642, column: 12)
!9580 = !DILocation(line: 2643, column: 16, scope: !9578)
!9581 = !DILocation(line: 2643, column: 12, scope: !9579)
!9582 = !DILocation(line: 2643, column: 21, scope: !9578)
!9583 = !DILocation(line: 2643, column: 25, scope: !9578)
!9584 = !DILocation(line: 2643, column: 30, scope: !9578)
!9585 = !DILocation(line: 2643, column: 35, scope: !9578)
!9586 = !DILocation(line: 2644, column: 8, scope: !9579)
!9587 = !DILocation(line: 2644, column: 12, scope: !9579)
!9588 = !DILocation(line: 2644, column: 16, scope: !9579)
!9589 = !DILocation(line: 2647, column: 28, scope: !9497)
!9590 = !DILocation(line: 2647, column: 6, scope: !9497)
!9591 = !DILocation(line: 2648, column: 5, scope: !9497)
!9592 = !DILocation(line: 2652, column: 10, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 2652, column: 10)
!9594 = distinct !DILexicalBlock(scope: !9490, file: !3, line: 2649, column: 10)
!9595 = !DILocation(line: 2652, column: 14, scope: !9593)
!9596 = !DILocation(line: 2652, column: 18, scope: !9593)
!9597 = !DILocation(line: 2652, column: 10, scope: !9594)
!9598 = !DILocation(line: 2653, column: 11, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 2653, column: 11)
!9600 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 2652, column: 27)
!9601 = !DILocation(line: 2653, column: 15, scope: !9599)
!9602 = !DILocation(line: 2653, column: 11, scope: !9600)
!9603 = !DILocation(line: 2653, column: 20, scope: !9599)
!9604 = !DILocation(line: 2653, column: 24, scope: !9599)
!9605 = !DILocation(line: 2653, column: 29, scope: !9599)
!9606 = !DILocation(line: 2653, column: 34, scope: !9599)
!9607 = !DILocation(line: 2654, column: 11, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 2654, column: 11)
!9609 = !DILocation(line: 2654, column: 15, scope: !9608)
!9610 = !DILocation(line: 2654, column: 11, scope: !9600)
!9611 = !DILocation(line: 2654, column: 20, scope: !9608)
!9612 = !DILocation(line: 2654, column: 24, scope: !9608)
!9613 = !DILocation(line: 2654, column: 29, scope: !9608)
!9614 = !DILocation(line: 2654, column: 34, scope: !9608)
!9615 = !DILocation(line: 2655, column: 17, scope: !9600)
!9616 = !DILocation(line: 2655, column: 21, scope: !9600)
!9617 = !DILocation(line: 2655, column: 7, scope: !9600)
!9618 = !DILocation(line: 2655, column: 11, scope: !9600)
!9619 = !DILocation(line: 2655, column: 15, scope: !9600)
!9620 = !DILocation(line: 2656, column: 17, scope: !9600)
!9621 = !DILocation(line: 2656, column: 7, scope: !9600)
!9622 = !DILocation(line: 2656, column: 11, scope: !9600)
!9623 = !DILocation(line: 2656, column: 15, scope: !9600)
!9624 = !DILocation(line: 2657, column: 11, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 2657, column: 11)
!9626 = !DILocation(line: 2657, column: 15, scope: !9625)
!9627 = !DILocation(line: 2657, column: 11, scope: !9600)
!9628 = !DILocation(line: 2657, column: 20, scope: !9625)
!9629 = !DILocation(line: 2657, column: 24, scope: !9625)
!9630 = !DILocation(line: 2657, column: 29, scope: !9625)
!9631 = !DILocation(line: 2657, column: 34, scope: !9625)
!9632 = !DILocation(line: 2658, column: 11, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 2658, column: 11)
!9634 = !DILocation(line: 2658, column: 15, scope: !9633)
!9635 = !DILocation(line: 2658, column: 11, scope: !9600)
!9636 = !DILocation(line: 2658, column: 20, scope: !9633)
!9637 = !DILocation(line: 2658, column: 24, scope: !9633)
!9638 = !DILocation(line: 2658, column: 29, scope: !9633)
!9639 = !DILocation(line: 2658, column: 34, scope: !9633)
!9640 = !DILocation(line: 2659, column: 33, scope: !9600)
!9641 = !DILocation(line: 2659, column: 37, scope: !9600)
!9642 = !DILocation(line: 2659, column: 42, scope: !9600)
!9643 = !DILocation(line: 2659, column: 46, scope: !9600)
!9644 = !DILocation(line: 2659, column: 13, scope: !9600)
!9645 = !DILocation(line: 2659, column: 11, scope: !9600)
!9646 = !DILocation(line: 2660, column: 11, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 2660, column: 11)
!9648 = !DILocation(line: 2660, column: 15, scope: !9647)
!9649 = !DILocation(line: 2660, column: 11, scope: !9600)
!9650 = !DILocation(line: 2661, column: 8, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9647, file: !3, line: 2660, column: 22)
!9652 = !DILocation(line: 2662, column: 7, scope: !9651)
!9653 = !DILocation(line: 2663, column: 6, scope: !9600)
!9654 = !DILocation(line: 2665, column: 33, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 2664, column: 11)
!9656 = !DILocation(line: 2665, column: 37, scope: !9655)
!9657 = !DILocation(line: 2665, column: 42, scope: !9655)
!9658 = !DILocation(line: 2665, column: 13, scope: !9655)
!9659 = !DILocation(line: 2665, column: 11, scope: !9655)
!9660 = !DILocation(line: 2666, column: 11, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9655, file: !3, line: 2666, column: 11)
!9662 = !DILocation(line: 2666, column: 15, scope: !9661)
!9663 = !DILocation(line: 2666, column: 11, scope: !9655)
!9664 = !DILocation(line: 2667, column: 12, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 2667, column: 12)
!9666 = distinct !DILexicalBlock(scope: !9661, file: !3, line: 2666, column: 22)
!9667 = !DILocation(line: 2667, column: 16, scope: !9665)
!9668 = !DILocation(line: 2667, column: 12, scope: !9666)
!9669 = !DILocation(line: 2667, column: 21, scope: !9665)
!9670 = !DILocation(line: 2667, column: 25, scope: !9665)
!9671 = !DILocation(line: 2667, column: 30, scope: !9665)
!9672 = !DILocation(line: 2667, column: 35, scope: !9665)
!9673 = !DILocation(line: 2668, column: 18, scope: !9666)
!9674 = !DILocation(line: 2668, column: 8, scope: !9666)
!9675 = !DILocation(line: 2668, column: 12, scope: !9666)
!9676 = !DILocation(line: 2668, column: 16, scope: !9666)
!9677 = !DILocation(line: 2669, column: 8, scope: !9666)
!9678 = !DILocation(line: 2669, column: 12, scope: !9666)
!9679 = !DILocation(line: 2669, column: 17, scope: !9666)
!9680 = !DILocation(line: 2669, column: 22, scope: !9666)
!9681 = !DILocation(line: 2670, column: 7, scope: !9666)
!9682 = !DILocation(line: 2672, column: 28, scope: !9594)
!9683 = !DILocation(line: 2672, column: 6, scope: !9594)
!9684 = !DILocation(line: 2674, column: 4, scope: !9491)
!9685 = !DILocation(line: 2675, column: 4, scope: !9475)
!9686 = !DILocation(line: 2678, column: 8, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 2678, column: 8)
!9688 = !DILocation(line: 2678, column: 15, scope: !9687)
!9689 = !DILocation(line: 2678, column: 19, scope: !9687)
!9690 = !DILocation(line: 2678, column: 8, scope: !9476)
!9691 = !DILocation(line: 2679, column: 24, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9687, file: !3, line: 2678, column: 34)
!9693 = !DILocation(line: 2679, column: 28, scope: !9692)
!9694 = !DILocation(line: 2679, column: 5, scope: !9692)
!9695 = !DILocation(line: 2680, column: 24, scope: !9692)
!9696 = !DILocation(line: 2680, column: 28, scope: !9692)
!9697 = !DILocation(line: 2680, column: 5, scope: !9692)
!9698 = !DILocation(line: 2682, column: 21, scope: !9692)
!9699 = !DILocation(line: 2682, column: 24, scope: !9692)
!9700 = !DILocation(line: 2682, column: 5, scope: !9692)
!9701 = !DILocation(line: 2683, column: 27, scope: !9692)
!9702 = !DILocation(line: 2683, column: 5, scope: !9692)
!9703 = !DILocation(line: 2684, column: 20, scope: !9692)
!9704 = !DILocation(line: 2684, column: 23, scope: !9692)
!9705 = !DILocation(line: 2684, column: 5, scope: !9692)
!9706 = !DILocation(line: 2685, column: 5, scope: !9692)
!9707 = !DILocation(line: 2687, column: 4, scope: !9476)
!9708 = !DILocation(line: 2691, column: 21, scope: !9476)
!9709 = !DILocation(line: 2691, column: 24, scope: !9476)
!9710 = !DILocation(line: 2691, column: 4, scope: !9476)
!9711 = !DILocation(line: 2692, column: 4, scope: !9476)
!9712 = !DILocation(line: 2695, column: 2, scope: !9455)
!9713 = !DILocation(line: 2696, column: 1, scope: !9455)
!9714 = distinct !DISubprogram(name: "area_join_cancel", scope: !3, file: !3, line: 2588, type: !7357, scopeLine: 2589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!9715 = !DILocalVariable(name: "C", arg: 1, scope: !9714, file: !3, line: 2588, type: !3734)
!9716 = !DILocation(line: 2588, column: 40, scope: !9714)
!9717 = !DILocalVariable(name: "op", arg: 2, scope: !9714, file: !3, line: 2588, type: !7081)
!9718 = !DILocation(line: 2588, column: 55, scope: !9714)
!9719 = !DILocalVariable(name: "jd", scope: !9714, file: !3, line: 2590, type: !3561)
!9720 = !DILocation(line: 2590, column: 17, scope: !9714)
!9721 = !DILocation(line: 2590, column: 39, scope: !9714)
!9722 = !DILocation(line: 2590, column: 43, scope: !9714)
!9723 = !DILocation(line: 2590, column: 22, scope: !9714)
!9724 = !DILocation(line: 2592, column: 6, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 2592, column: 6)
!9726 = !DILocation(line: 2592, column: 10, scope: !9725)
!9727 = !DILocation(line: 2592, column: 6, scope: !9714)
!9728 = !DILocation(line: 2593, column: 3, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9725, file: !3, line: 2592, column: 15)
!9730 = !DILocation(line: 2593, column: 7, scope: !9729)
!9731 = !DILocation(line: 2593, column: 12, scope: !9729)
!9732 = !DILocation(line: 2593, column: 17, scope: !9729)
!9733 = !DILocation(line: 2594, column: 3, scope: !9729)
!9734 = !DILocation(line: 2594, column: 7, scope: !9729)
!9735 = !DILocation(line: 2594, column: 12, scope: !9729)
!9736 = !DILocation(line: 2594, column: 17, scope: !9729)
!9737 = !DILocation(line: 2595, column: 2, scope: !9729)
!9738 = !DILocation(line: 2596, column: 6, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 2596, column: 6)
!9740 = !DILocation(line: 2596, column: 10, scope: !9739)
!9741 = !DILocation(line: 2596, column: 6, scope: !9714)
!9742 = !DILocation(line: 2597, column: 3, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 2596, column: 15)
!9744 = !DILocation(line: 2597, column: 7, scope: !9743)
!9745 = !DILocation(line: 2597, column: 12, scope: !9743)
!9746 = !DILocation(line: 2597, column: 17, scope: !9743)
!9747 = !DILocation(line: 2598, column: 3, scope: !9743)
!9748 = !DILocation(line: 2598, column: 7, scope: !9743)
!9749 = !DILocation(line: 2598, column: 12, scope: !9743)
!9750 = !DILocation(line: 2598, column: 17, scope: !9743)
!9751 = !DILocation(line: 2599, column: 2, scope: !9743)
!9752 = !DILocation(line: 2601, column: 24, scope: !9714)
!9753 = !DILocation(line: 2601, column: 2, scope: !9714)
!9754 = !DILocation(line: 2603, column: 17, scope: !9714)
!9755 = !DILocation(line: 2603, column: 20, scope: !9714)
!9756 = !DILocation(line: 2603, column: 2, scope: !9714)
!9757 = !DILocation(line: 2604, column: 1, scope: !9714)
!9758 = distinct !DISubprogram(name: "area_join_init", scope: !3, file: !3, line: 2469, type: !7473, scopeLine: 2470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!9759 = !DILocalVariable(name: "C", arg: 1, scope: !9758, file: !3, line: 2469, type: !3734)
!9760 = !DILocation(line: 2469, column: 37, scope: !9758)
!9761 = !DILocalVariable(name: "op", arg: 2, scope: !9758, file: !3, line: 2469, type: !7081)
!9762 = !DILocation(line: 2469, column: 52, scope: !9758)
!9763 = !DILocalVariable(name: "sa1", scope: !9758, file: !3, line: 2471, type: !3286)
!9764 = !DILocation(line: 2471, column: 11, scope: !9758)
!9765 = !DILocalVariable(name: "sa2", scope: !9758, file: !3, line: 2471, type: !3286)
!9766 = !DILocation(line: 2471, column: 17, scope: !9758)
!9767 = !DILocalVariable(name: "jd", scope: !9758, file: !3, line: 2472, type: !3561)
!9768 = !DILocation(line: 2472, column: 17, scope: !9758)
!9769 = !DILocalVariable(name: "x1", scope: !9758, file: !3, line: 2473, type: !1242)
!9770 = !DILocation(line: 2473, column: 6, scope: !9758)
!9771 = !DILocalVariable(name: "y1", scope: !9758, file: !3, line: 2473, type: !1242)
!9772 = !DILocation(line: 2473, column: 10, scope: !9758)
!9773 = !DILocalVariable(name: "x2", scope: !9758, file: !3, line: 2474, type: !1242)
!9774 = !DILocation(line: 2474, column: 6, scope: !9758)
!9775 = !DILocalVariable(name: "y2", scope: !9758, file: !3, line: 2474, type: !1242)
!9776 = !DILocation(line: 2474, column: 10, scope: !9758)
!9777 = !DILocalVariable(name: "shared", scope: !9758, file: !3, line: 2475, type: !1242)
!9778 = !DILocation(line: 2475, column: 6, scope: !9758)
!9779 = !DILocation(line: 2478, column: 19, scope: !9758)
!9780 = !DILocation(line: 2478, column: 23, scope: !9758)
!9781 = !DILocation(line: 2478, column: 7, scope: !9758)
!9782 = !DILocation(line: 2478, column: 5, scope: !9758)
!9783 = !DILocation(line: 2479, column: 19, scope: !9758)
!9784 = !DILocation(line: 2479, column: 23, scope: !9758)
!9785 = !DILocation(line: 2479, column: 7, scope: !9758)
!9786 = !DILocation(line: 2479, column: 5, scope: !9758)
!9787 = !DILocation(line: 2480, column: 19, scope: !9758)
!9788 = !DILocation(line: 2480, column: 23, scope: !9758)
!9789 = !DILocation(line: 2480, column: 7, scope: !9758)
!9790 = !DILocation(line: 2480, column: 5, scope: !9758)
!9791 = !DILocation(line: 2481, column: 19, scope: !9758)
!9792 = !DILocation(line: 2481, column: 23, scope: !9758)
!9793 = !DILocation(line: 2481, column: 7, scope: !9758)
!9794 = !DILocation(line: 2481, column: 5, scope: !9758)
!9795 = !DILocation(line: 2483, column: 43, scope: !9758)
!9796 = !DILocation(line: 2483, column: 29, scope: !9758)
!9797 = !DILocation(line: 2483, column: 47, scope: !9758)
!9798 = !DILocation(line: 2483, column: 51, scope: !9758)
!9799 = !DILocation(line: 2483, column: 8, scope: !9758)
!9800 = !DILocation(line: 2483, column: 6, scope: !9758)
!9801 = !DILocation(line: 2484, column: 43, scope: !9758)
!9802 = !DILocation(line: 2484, column: 29, scope: !9758)
!9803 = !DILocation(line: 2484, column: 47, scope: !9758)
!9804 = !DILocation(line: 2484, column: 51, scope: !9758)
!9805 = !DILocation(line: 2484, column: 8, scope: !9758)
!9806 = !DILocation(line: 2484, column: 6, scope: !9758)
!9807 = !DILocation(line: 2485, column: 6, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9758, file: !3, line: 2485, column: 6)
!9809 = !DILocation(line: 2485, column: 10, scope: !9808)
!9810 = !DILocation(line: 2485, column: 18, scope: !9808)
!9811 = !DILocation(line: 2485, column: 21, scope: !9808)
!9812 = !DILocation(line: 2485, column: 25, scope: !9808)
!9813 = !DILocation(line: 2485, column: 33, scope: !9808)
!9814 = !DILocation(line: 2485, column: 36, scope: !9808)
!9815 = !DILocation(line: 2485, column: 43, scope: !9808)
!9816 = !DILocation(line: 2485, column: 40, scope: !9808)
!9817 = !DILocation(line: 2485, column: 6, scope: !9758)
!9818 = !DILocation(line: 2486, column: 3, scope: !9808)
!9819 = !DILocation(line: 2489, column: 6, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9758, file: !3, line: 2489, column: 6)
!9821 = !DILocation(line: 2489, column: 11, scope: !9820)
!9822 = !DILocation(line: 2489, column: 17, scope: !9820)
!9823 = !DILocation(line: 2489, column: 22, scope: !9820)
!9824 = !DILocation(line: 2489, column: 14, scope: !9820)
!9825 = !DILocation(line: 2489, column: 25, scope: !9820)
!9826 = !DILocation(line: 2489, column: 28, scope: !9820)
!9827 = !DILocation(line: 2489, column: 33, scope: !9820)
!9828 = !DILocation(line: 2489, column: 39, scope: !9820)
!9829 = !DILocation(line: 2489, column: 44, scope: !9820)
!9830 = !DILocation(line: 2489, column: 36, scope: !9820)
!9831 = !DILocation(line: 2489, column: 47, scope: !9820)
!9832 = !DILocation(line: 2489, column: 50, scope: !9820)
!9833 = !DILocation(line: 2489, column: 55, scope: !9820)
!9834 = !DILocation(line: 2489, column: 61, scope: !9820)
!9835 = !DILocation(line: 2489, column: 66, scope: !9820)
!9836 = !DILocation(line: 2489, column: 58, scope: !9820)
!9837 = !DILocation(line: 2489, column: 69, scope: !9820)
!9838 = !DILocation(line: 2489, column: 72, scope: !9820)
!9839 = !DILocation(line: 2489, column: 77, scope: !9820)
!9840 = !DILocation(line: 2489, column: 83, scope: !9820)
!9841 = !DILocation(line: 2489, column: 88, scope: !9820)
!9842 = !DILocation(line: 2489, column: 80, scope: !9820)
!9843 = !DILocation(line: 2489, column: 6, scope: !9758)
!9844 = !DILocation(line: 2489, column: 98, scope: !9820)
!9845 = !DILocation(line: 2489, column: 92, scope: !9820)
!9846 = !DILocation(line: 2490, column: 6, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9758, file: !3, line: 2490, column: 6)
!9848 = !DILocation(line: 2490, column: 11, scope: !9847)
!9849 = !DILocation(line: 2490, column: 17, scope: !9847)
!9850 = !DILocation(line: 2490, column: 22, scope: !9847)
!9851 = !DILocation(line: 2490, column: 14, scope: !9847)
!9852 = !DILocation(line: 2490, column: 25, scope: !9847)
!9853 = !DILocation(line: 2490, column: 28, scope: !9847)
!9854 = !DILocation(line: 2490, column: 33, scope: !9847)
!9855 = !DILocation(line: 2490, column: 39, scope: !9847)
!9856 = !DILocation(line: 2490, column: 44, scope: !9847)
!9857 = !DILocation(line: 2490, column: 36, scope: !9847)
!9858 = !DILocation(line: 2490, column: 47, scope: !9847)
!9859 = !DILocation(line: 2490, column: 50, scope: !9847)
!9860 = !DILocation(line: 2490, column: 55, scope: !9847)
!9861 = !DILocation(line: 2490, column: 61, scope: !9847)
!9862 = !DILocation(line: 2490, column: 66, scope: !9847)
!9863 = !DILocation(line: 2490, column: 58, scope: !9847)
!9864 = !DILocation(line: 2490, column: 69, scope: !9847)
!9865 = !DILocation(line: 2490, column: 72, scope: !9847)
!9866 = !DILocation(line: 2490, column: 77, scope: !9847)
!9867 = !DILocation(line: 2490, column: 83, scope: !9847)
!9868 = !DILocation(line: 2490, column: 88, scope: !9847)
!9869 = !DILocation(line: 2490, column: 80, scope: !9847)
!9870 = !DILocation(line: 2490, column: 6, scope: !9758)
!9871 = !DILocation(line: 2490, column: 98, scope: !9847)
!9872 = !DILocation(line: 2490, column: 92, scope: !9847)
!9873 = !DILocation(line: 2491, column: 6, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9758, file: !3, line: 2491, column: 6)
!9875 = !DILocation(line: 2491, column: 11, scope: !9874)
!9876 = !DILocation(line: 2491, column: 17, scope: !9874)
!9877 = !DILocation(line: 2491, column: 22, scope: !9874)
!9878 = !DILocation(line: 2491, column: 14, scope: !9874)
!9879 = !DILocation(line: 2491, column: 25, scope: !9874)
!9880 = !DILocation(line: 2491, column: 28, scope: !9874)
!9881 = !DILocation(line: 2491, column: 33, scope: !9874)
!9882 = !DILocation(line: 2491, column: 39, scope: !9874)
!9883 = !DILocation(line: 2491, column: 44, scope: !9874)
!9884 = !DILocation(line: 2491, column: 36, scope: !9874)
!9885 = !DILocation(line: 2491, column: 47, scope: !9874)
!9886 = !DILocation(line: 2491, column: 50, scope: !9874)
!9887 = !DILocation(line: 2491, column: 55, scope: !9874)
!9888 = !DILocation(line: 2491, column: 61, scope: !9874)
!9889 = !DILocation(line: 2491, column: 66, scope: !9874)
!9890 = !DILocation(line: 2491, column: 58, scope: !9874)
!9891 = !DILocation(line: 2491, column: 69, scope: !9874)
!9892 = !DILocation(line: 2491, column: 72, scope: !9874)
!9893 = !DILocation(line: 2491, column: 77, scope: !9874)
!9894 = !DILocation(line: 2491, column: 83, scope: !9874)
!9895 = !DILocation(line: 2491, column: 88, scope: !9874)
!9896 = !DILocation(line: 2491, column: 80, scope: !9874)
!9897 = !DILocation(line: 2491, column: 6, scope: !9758)
!9898 = !DILocation(line: 2491, column: 98, scope: !9874)
!9899 = !DILocation(line: 2491, column: 92, scope: !9874)
!9900 = !DILocation(line: 2492, column: 6, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9758, file: !3, line: 2492, column: 6)
!9902 = !DILocation(line: 2492, column: 11, scope: !9901)
!9903 = !DILocation(line: 2492, column: 17, scope: !9901)
!9904 = !DILocation(line: 2492, column: 22, scope: !9901)
!9905 = !DILocation(line: 2492, column: 14, scope: !9901)
!9906 = !DILocation(line: 2492, column: 25, scope: !9901)
!9907 = !DILocation(line: 2492, column: 28, scope: !9901)
!9908 = !DILocation(line: 2492, column: 33, scope: !9901)
!9909 = !DILocation(line: 2492, column: 39, scope: !9901)
!9910 = !DILocation(line: 2492, column: 44, scope: !9901)
!9911 = !DILocation(line: 2492, column: 36, scope: !9901)
!9912 = !DILocation(line: 2492, column: 47, scope: !9901)
!9913 = !DILocation(line: 2492, column: 50, scope: !9901)
!9914 = !DILocation(line: 2492, column: 55, scope: !9901)
!9915 = !DILocation(line: 2492, column: 61, scope: !9901)
!9916 = !DILocation(line: 2492, column: 66, scope: !9901)
!9917 = !DILocation(line: 2492, column: 58, scope: !9901)
!9918 = !DILocation(line: 2492, column: 69, scope: !9901)
!9919 = !DILocation(line: 2492, column: 72, scope: !9901)
!9920 = !DILocation(line: 2492, column: 77, scope: !9901)
!9921 = !DILocation(line: 2492, column: 83, scope: !9901)
!9922 = !DILocation(line: 2492, column: 88, scope: !9901)
!9923 = !DILocation(line: 2492, column: 80, scope: !9901)
!9924 = !DILocation(line: 2492, column: 6, scope: !9758)
!9925 = !DILocation(line: 2492, column: 98, scope: !9901)
!9926 = !DILocation(line: 2492, column: 92, scope: !9901)
!9927 = !DILocation(line: 2493, column: 6, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9758, file: !3, line: 2493, column: 6)
!9929 = !DILocation(line: 2493, column: 13, scope: !9928)
!9930 = !DILocation(line: 2493, column: 6, scope: !9758)
!9931 = !DILocation(line: 2494, column: 3, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 2493, column: 19)
!9933 = !DILocation(line: 2495, column: 3, scope: !9932)
!9934 = !DILocation(line: 2498, column: 24, scope: !9758)
!9935 = !DILocation(line: 2498, column: 7, scope: !9758)
!9936 = !DILocation(line: 2498, column: 5, scope: !9758)
!9937 = !DILocation(line: 2500, column: 12, scope: !9758)
!9938 = !DILocation(line: 2500, column: 2, scope: !9758)
!9939 = !DILocation(line: 2500, column: 6, scope: !9758)
!9940 = !DILocation(line: 2500, column: 10, scope: !9758)
!9941 = !DILocation(line: 2501, column: 2, scope: !9758)
!9942 = !DILocation(line: 2501, column: 6, scope: !9758)
!9943 = !DILocation(line: 2501, column: 11, scope: !9758)
!9944 = !DILocation(line: 2501, column: 16, scope: !9758)
!9945 = !DILocation(line: 2502, column: 12, scope: !9758)
!9946 = !DILocation(line: 2502, column: 2, scope: !9758)
!9947 = !DILocation(line: 2502, column: 6, scope: !9758)
!9948 = !DILocation(line: 2502, column: 10, scope: !9758)
!9949 = !DILocation(line: 2503, column: 2, scope: !9758)
!9950 = !DILocation(line: 2503, column: 6, scope: !9758)
!9951 = !DILocation(line: 2503, column: 11, scope: !9758)
!9952 = !DILocation(line: 2503, column: 16, scope: !9758)
!9953 = !DILocation(line: 2505, column: 19, scope: !9758)
!9954 = !DILocation(line: 2505, column: 2, scope: !9758)
!9955 = !DILocation(line: 2505, column: 6, scope: !9758)
!9956 = !DILocation(line: 2505, column: 17, scope: !9758)
!9957 = !DILocation(line: 2507, column: 2, scope: !9758)
!9958 = !DILocation(line: 2508, column: 1, scope: !9758)
!9959 = distinct !DISubprogram(name: "area_join_apply", scope: !3, file: !3, line: 2511, type: !7473, scopeLine: 2512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!9960 = !DILocalVariable(name: "C", arg: 1, scope: !9959, file: !3, line: 2511, type: !3734)
!9961 = !DILocation(line: 2511, column: 38, scope: !9959)
!9962 = !DILocalVariable(name: "op", arg: 2, scope: !9959, file: !3, line: 2511, type: !7081)
!9963 = !DILocation(line: 2511, column: 53, scope: !9959)
!9964 = !DILocalVariable(name: "jd", scope: !9959, file: !3, line: 2513, type: !3561)
!9965 = !DILocation(line: 2513, column: 17, scope: !9959)
!9966 = !DILocation(line: 2513, column: 39, scope: !9959)
!9967 = !DILocation(line: 2513, column: 43, scope: !9959)
!9968 = !DILocation(line: 2513, column: 22, scope: !9959)
!9969 = !DILocation(line: 2514, column: 7, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 2514, column: 6)
!9971 = !DILocation(line: 2514, column: 6, scope: !9959)
!9972 = !DILocation(line: 2514, column: 11, scope: !9970)
!9973 = !DILocation(line: 2516, column: 24, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 2516, column: 6)
!9975 = !DILocation(line: 2516, column: 41, scope: !9974)
!9976 = !DILocation(line: 2516, column: 27, scope: !9974)
!9977 = !DILocation(line: 2516, column: 45, scope: !9974)
!9978 = !DILocation(line: 2516, column: 49, scope: !9974)
!9979 = !DILocation(line: 2516, column: 54, scope: !9974)
!9980 = !DILocation(line: 2516, column: 58, scope: !9974)
!9981 = !DILocation(line: 2516, column: 7, scope: !9974)
!9982 = !DILocation(line: 2516, column: 6, scope: !9959)
!9983 = !DILocation(line: 2517, column: 3, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 2516, column: 64)
!9985 = !DILocation(line: 2519, column: 18, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 2519, column: 6)
!9987 = !DILocation(line: 2519, column: 6, scope: !9986)
!9988 = !DILocation(line: 2519, column: 24, scope: !9986)
!9989 = !DILocation(line: 2519, column: 28, scope: !9986)
!9990 = !DILocation(line: 2519, column: 21, scope: !9986)
!9991 = !DILocation(line: 2519, column: 6, scope: !9959)
!9992 = !DILocation(line: 2520, column: 19, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9986, file: !3, line: 2519, column: 33)
!9994 = !DILocation(line: 2520, column: 3, scope: !9993)
!9995 = !DILocation(line: 2521, column: 21, scope: !9993)
!9996 = !DILocation(line: 2521, column: 3, scope: !9993)
!9997 = !DILocation(line: 2522, column: 2, scope: !9993)
!9998 = !DILocation(line: 2524, column: 2, scope: !9959)
!9999 = !DILocation(line: 2525, column: 1, scope: !9959)
!10000 = distinct !DISubprogram(name: "area_join_exit", scope: !3, file: !3, line: 2528, type: !7357, scopeLine: 2529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10001 = !DILocalVariable(name: "C", arg: 1, scope: !10000, file: !3, line: 2528, type: !3734)
!10002 = !DILocation(line: 2528, column: 38, scope: !10000)
!10003 = !DILocalVariable(name: "op", arg: 2, scope: !10000, file: !3, line: 2528, type: !7081)
!10004 = !DILocation(line: 2528, column: 53, scope: !10000)
!10005 = !DILocation(line: 2530, column: 6, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 2530, column: 6)
!10007 = !DILocation(line: 2530, column: 10, scope: !10006)
!10008 = !DILocation(line: 2530, column: 6, scope: !10000)
!10009 = !DILocation(line: 2531, column: 3, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 2530, column: 22)
!10011 = !DILocation(line: 2531, column: 13, scope: !10010)
!10012 = !DILocation(line: 2531, column: 17, scope: !10010)
!10013 = !DILocation(line: 2532, column: 3, scope: !10010)
!10014 = !DILocation(line: 2532, column: 7, scope: !10010)
!10015 = !DILocation(line: 2532, column: 18, scope: !10010)
!10016 = !DILocation(line: 2533, column: 2, scope: !10010)
!10017 = !DILocation(line: 2536, column: 38, scope: !10000)
!10018 = !DILocation(line: 2536, column: 24, scope: !10000)
!10019 = !DILocation(line: 2536, column: 2, scope: !10000)
!10020 = !DILocation(line: 2537, column: 39, scope: !10000)
!10021 = !DILocation(line: 2537, column: 25, scope: !10000)
!10022 = !DILocation(line: 2537, column: 2, scope: !10000)
!10023 = !DILocation(line: 2538, column: 39, scope: !10000)
!10024 = !DILocation(line: 2538, column: 25, scope: !10000)
!10025 = !DILocation(line: 2538, column: 2, scope: !10000)
!10026 = !DILocation(line: 2539, column: 1, scope: !10000)
!10027 = distinct !DISubprogram(name: "screen_area_options_invoke", scope: !3, file: !3, line: 2725, type: !7079, scopeLine: 2726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10028 = !DILocalVariable(name: "C", arg: 1, scope: !10027, file: !3, line: 2725, type: !3734)
!10029 = !DILocation(line: 2725, column: 49, scope: !10027)
!10030 = !DILocalVariable(name: "op", arg: 2, scope: !10027, file: !3, line: 2725, type: !7081)
!10031 = !DILocation(line: 2725, column: 64, scope: !10027)
!10032 = !DILocalVariable(name: "event", arg: 3, scope: !10027, file: !3, line: 2725, type: !6997)
!10033 = !DILocation(line: 2725, column: 83, scope: !10027)
!10034 = !DILocalVariable(name: "win", scope: !10027, file: !3, line: 2727, type: !5535)
!10035 = !DILocation(line: 2727, column: 12, scope: !10027)
!10036 = !DILocation(line: 2727, column: 32, scope: !10027)
!10037 = !DILocation(line: 2727, column: 18, scope: !10027)
!10038 = !DILocalVariable(name: "sc", scope: !10027, file: !3, line: 2728, type: !3298)
!10039 = !DILocation(line: 2728, column: 11, scope: !10027)
!10040 = !DILocation(line: 2728, column: 30, scope: !10027)
!10041 = !DILocation(line: 2728, column: 16, scope: !10027)
!10042 = !DILocalVariable(name: "pup", scope: !10027, file: !3, line: 2729, type: !7506)
!10043 = !DILocation(line: 2729, column: 15, scope: !10027)
!10044 = !DILocalVariable(name: "layout", scope: !10027, file: !3, line: 2730, type: !5476)
!10045 = !DILocation(line: 2730, column: 12, scope: !10027)
!10046 = !DILocalVariable(name: "ptr1", scope: !10027, file: !3, line: 2731, type: !10047)
!10047 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !1273, line: 62, baseType: !3617)
!10048 = !DILocation(line: 2731, column: 13, scope: !10027)
!10049 = !DILocalVariable(name: "ptr2", scope: !10027, file: !3, line: 2731, type: !10047)
!10050 = !DILocation(line: 2731, column: 19, scope: !10027)
!10051 = !DILocalVariable(name: "actedge", scope: !10027, file: !3, line: 2732, type: !3257)
!10052 = !DILocation(line: 2732, column: 11, scope: !10027)
!10053 = !DILocalVariable(name: "winsize_x", scope: !10027, file: !3, line: 2733, type: !5215)
!10054 = !DILocation(line: 2733, column: 12, scope: !10027)
!10055 = !DILocation(line: 2733, column: 43, scope: !10027)
!10056 = !DILocation(line: 2733, column: 24, scope: !10027)
!10057 = !DILocalVariable(name: "winsize_y", scope: !10027, file: !3, line: 2734, type: !5215)
!10058 = !DILocation(line: 2734, column: 12, scope: !10027)
!10059 = !DILocation(line: 2734, column: 43, scope: !10027)
!10060 = !DILocation(line: 2734, column: 24, scope: !10027)
!10061 = !DILocation(line: 2736, column: 39, scope: !10027)
!10062 = !DILocation(line: 2736, column: 43, scope: !10027)
!10063 = !DILocation(line: 2736, column: 54, scope: !10027)
!10064 = !DILocation(line: 2736, column: 65, scope: !10027)
!10065 = !DILocation(line: 2736, column: 72, scope: !10027)
!10066 = !DILocation(line: 2736, column: 75, scope: !10027)
!10067 = !DILocation(line: 2736, column: 82, scope: !10027)
!10068 = !DILocation(line: 2736, column: 12, scope: !10027)
!10069 = !DILocation(line: 2736, column: 10, scope: !10027)
!10070 = !DILocation(line: 2738, column: 6, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 2738, column: 6)
!10072 = !DILocation(line: 2738, column: 14, scope: !10071)
!10073 = !DILocation(line: 2738, column: 6, scope: !10027)
!10074 = !DILocation(line: 2738, column: 23, scope: !10071)
!10075 = !DILocation(line: 2740, column: 23, scope: !10027)
!10076 = !DILocation(line: 2740, column: 45, scope: !10027)
!10077 = !DILocation(line: 2740, column: 49, scope: !10027)
!10078 = !DILocation(line: 2740, column: 55, scope: !10027)
!10079 = !DILocation(line: 2740, column: 26, scope: !10027)
!10080 = !DILocation(line: 2740, column: 8, scope: !10027)
!10081 = !DILocation(line: 2740, column: 6, scope: !10027)
!10082 = !DILocation(line: 2741, column: 27, scope: !10027)
!10083 = !DILocation(line: 2741, column: 11, scope: !10027)
!10084 = !DILocation(line: 2741, column: 9, scope: !10027)
!10085 = !DILocation(line: 2743, column: 2, scope: !10027)
!10086 = !DILocation(line: 2746, column: 30, scope: !10027)
!10087 = !DILocation(line: 2746, column: 37, scope: !10027)
!10088 = !DILocation(line: 2746, column: 39, scope: !10027)
!10089 = !DILocation(line: 2746, column: 2, scope: !10027)
!10090 = !DILocation(line: 2747, column: 30, scope: !10027)
!10091 = !DILocation(line: 2747, column: 37, scope: !10027)
!10092 = !DILocation(line: 2747, column: 39, scope: !10027)
!10093 = !DILocation(line: 2747, column: 2, scope: !10027)
!10094 = !DILocation(line: 2748, column: 30, scope: !10027)
!10095 = !DILocation(line: 2748, column: 37, scope: !10027)
!10096 = !DILocation(line: 2748, column: 39, scope: !10027)
!10097 = !DILocation(line: 2748, column: 2, scope: !10027)
!10098 = !DILocation(line: 2749, column: 30, scope: !10027)
!10099 = !DILocation(line: 2749, column: 37, scope: !10027)
!10100 = !DILocation(line: 2749, column: 39, scope: !10027)
!10101 = !DILocation(line: 2749, column: 2, scope: !10027)
!10102 = !DILocation(line: 2751, column: 2, scope: !10027)
!10103 = !DILocation(line: 2754, column: 32, scope: !10027)
!10104 = !DILocation(line: 2754, column: 39, scope: !10027)
!10105 = !DILocation(line: 2754, column: 2, scope: !10027)
!10106 = !DILocation(line: 2755, column: 32, scope: !10027)
!10107 = !DILocation(line: 2755, column: 39, scope: !10027)
!10108 = !DILocation(line: 2755, column: 2, scope: !10027)
!10109 = !DILocation(line: 2757, column: 14, scope: !10027)
!10110 = !DILocation(line: 2757, column: 68, scope: !10027)
!10111 = !DILocation(line: 2757, column: 63, scope: !10027)
!10112 = !DILocation(line: 2757, column: 2, scope: !10027)
!10113 = !DILocation(line: 2758, column: 14, scope: !10027)
!10114 = !DILocation(line: 2758, column: 67, scope: !10027)
!10115 = !DILocation(line: 2758, column: 62, scope: !10027)
!10116 = !DILocation(line: 2758, column: 2, scope: !10027)
!10117 = !DILocation(line: 2760, column: 15, scope: !10027)
!10118 = !DILocation(line: 2760, column: 18, scope: !10027)
!10119 = !DILocation(line: 2760, column: 2, scope: !10027)
!10120 = !DILocation(line: 2762, column: 2, scope: !10027)
!10121 = !DILocation(line: 2763, column: 1, scope: !10027)
!10122 = distinct !DISubprogram(name: "area_dupli_invoke", scope: !3, file: !3, line: 979, type: !7079, scopeLine: 980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10123 = !DILocalVariable(name: "C", arg: 1, scope: !10122, file: !3, line: 979, type: !3734)
!10124 = !DILocation(line: 979, column: 40, scope: !10122)
!10125 = !DILocalVariable(name: "op", arg: 2, scope: !10122, file: !3, line: 979, type: !7081)
!10126 = !DILocation(line: 979, column: 55, scope: !10122)
!10127 = !DILocalVariable(name: "event", arg: 3, scope: !10122, file: !3, line: 979, type: !6997)
!10128 = !DILocation(line: 979, column: 74, scope: !10122)
!10129 = !DILocalVariable(name: "newwin", scope: !10122, file: !3, line: 981, type: !5535)
!10130 = !DILocation(line: 981, column: 12, scope: !10122)
!10131 = !DILocalVariable(name: "win", scope: !10122, file: !3, line: 981, type: !5535)
!10132 = !DILocation(line: 981, column: 21, scope: !10122)
!10133 = !DILocalVariable(name: "newsc", scope: !10122, file: !3, line: 982, type: !3298)
!10134 = !DILocation(line: 982, column: 11, scope: !10122)
!10135 = !DILocalVariable(name: "sc", scope: !10122, file: !3, line: 982, type: !3298)
!10136 = !DILocation(line: 982, column: 19, scope: !10122)
!10137 = !DILocalVariable(name: "sa", scope: !10122, file: !3, line: 983, type: !3286)
!10138 = !DILocation(line: 983, column: 11, scope: !10122)
!10139 = !DILocalVariable(name: "rect", scope: !10122, file: !3, line: 984, type: !2823)
!10140 = !DILocation(line: 984, column: 7, scope: !10122)
!10141 = !DILocation(line: 986, column: 22, scope: !10122)
!10142 = !DILocation(line: 986, column: 8, scope: !10122)
!10143 = !DILocation(line: 986, column: 6, scope: !10122)
!10144 = !DILocation(line: 987, column: 21, scope: !10122)
!10145 = !DILocation(line: 987, column: 7, scope: !10122)
!10146 = !DILocation(line: 987, column: 5, scope: !10122)
!10147 = !DILocation(line: 988, column: 19, scope: !10122)
!10148 = !DILocation(line: 988, column: 7, scope: !10122)
!10149 = !DILocation(line: 988, column: 5, scope: !10122)
!10150 = !DILocation(line: 991, column: 6, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10122, file: !3, line: 991, column: 6)
!10152 = !DILocation(line: 991, column: 13, scope: !10151)
!10153 = !DILocation(line: 991, column: 18, scope: !10151)
!10154 = !DILocation(line: 991, column: 6, scope: !10122)
!10155 = !DILocalVariable(name: "sad", scope: !10156, file: !3, line: 992, type: !7097)
!10156 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 991, column: 42)
!10157 = !DILocation(line: 992, column: 20, scope: !10156)
!10158 = !DILocation(line: 992, column: 26, scope: !10156)
!10159 = !DILocation(line: 992, column: 33, scope: !10156)
!10160 = !DILocation(line: 994, column: 7, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 994, column: 7)
!10162 = !DILocation(line: 994, column: 11, scope: !10161)
!10163 = !DILocation(line: 994, column: 7, scope: !10156)
!10164 = !DILocation(line: 995, column: 4, scope: !10161)
!10165 = !DILocation(line: 997, column: 8, scope: !10156)
!10166 = !DILocation(line: 997, column: 13, scope: !10156)
!10167 = !DILocation(line: 997, column: 6, scope: !10156)
!10168 = !DILocation(line: 998, column: 2, scope: !10156)
!10169 = !DILocation(line: 1001, column: 9, scope: !10122)
!10170 = !DILocation(line: 1001, column: 13, scope: !10122)
!10171 = !DILocation(line: 1002, column: 28, scope: !10122)
!10172 = !DILocation(line: 1002, column: 33, scope: !10122)
!10173 = !DILocation(line: 1002, column: 39, scope: !10122)
!10174 = !DILocation(line: 1002, column: 44, scope: !10122)
!10175 = !DILocation(line: 1002, column: 2, scope: !10122)
!10176 = !DILocation(line: 1003, column: 19, scope: !10122)
!10177 = !DILocation(line: 1003, column: 14, scope: !10122)
!10178 = !DILocation(line: 1003, column: 26, scope: !10122)
!10179 = !DILocation(line: 1003, column: 53, scope: !10122)
!10180 = !DILocation(line: 1003, column: 49, scope: !10122)
!10181 = !DILocation(line: 1003, column: 24, scope: !10122)
!10182 = !DILocation(line: 1003, column: 7, scope: !10122)
!10183 = !DILocation(line: 1003, column: 12, scope: !10122)
!10184 = !DILocation(line: 1004, column: 19, scope: !10122)
!10185 = !DILocation(line: 1004, column: 14, scope: !10122)
!10186 = !DILocation(line: 1004, column: 26, scope: !10122)
!10187 = !DILocation(line: 1004, column: 53, scope: !10122)
!10188 = !DILocation(line: 1004, column: 49, scope: !10122)
!10189 = !DILocation(line: 1004, column: 24, scope: !10122)
!10190 = !DILocation(line: 1004, column: 7, scope: !10122)
!10191 = !DILocation(line: 1004, column: 12, scope: !10122)
!10192 = !DILocation(line: 1006, column: 26, scope: !10122)
!10193 = !DILocation(line: 1006, column: 11, scope: !10122)
!10194 = !DILocation(line: 1006, column: 9, scope: !10122)
!10195 = !DILocation(line: 1009, column: 24, scope: !10122)
!10196 = !DILocation(line: 1009, column: 47, scope: !10122)
!10197 = !DILocation(line: 1009, column: 32, scope: !10122)
!10198 = !DILocation(line: 1009, column: 51, scope: !10122)
!10199 = !DILocation(line: 1009, column: 55, scope: !10122)
!10200 = !DILocation(line: 1009, column: 58, scope: !10122)
!10201 = !DILocation(line: 1009, column: 63, scope: !10122)
!10202 = !DILocation(line: 1009, column: 10, scope: !10122)
!10203 = !DILocation(line: 1009, column: 8, scope: !10122)
!10204 = !DILocation(line: 1010, column: 19, scope: !10122)
!10205 = !DILocation(line: 1010, column: 2, scope: !10122)
!10206 = !DILocation(line: 1010, column: 10, scope: !10122)
!10207 = !DILocation(line: 1010, column: 17, scope: !10122)
!10208 = !DILocation(line: 1013, column: 31, scope: !10122)
!10209 = !DILocation(line: 1013, column: 38, scope: !10122)
!10210 = !DILocation(line: 1013, column: 47, scope: !10122)
!10211 = !DILocation(line: 1013, column: 20, scope: !10122)
!10212 = !DILocation(line: 1013, column: 54, scope: !10122)
!10213 = !DILocation(line: 1013, column: 2, scope: !10122)
!10214 = !DILocation(line: 1015, column: 32, scope: !10122)
!10215 = !DILocation(line: 1015, column: 39, scope: !10122)
!10216 = !DILocation(line: 1015, column: 48, scope: !10122)
!10217 = !DILocation(line: 1015, column: 21, scope: !10122)
!10218 = !DILocation(line: 1015, column: 2, scope: !10122)
!10219 = !DILocation(line: 1018, column: 24, scope: !10122)
!10220 = !DILocation(line: 1018, column: 2, scope: !10122)
!10221 = !DILocation(line: 1020, column: 6, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10122, file: !3, line: 1020, column: 6)
!10223 = !DILocation(line: 1020, column: 13, scope: !10222)
!10224 = !DILocation(line: 1020, column: 18, scope: !10222)
!10225 = !DILocation(line: 1020, column: 6, scope: !10122)
!10226 = !DILocation(line: 1021, column: 19, scope: !10222)
!10227 = !DILocation(line: 1021, column: 3, scope: !10222)
!10228 = !DILocation(line: 1023, column: 2, scope: !10122)
!10229 = !DILocation(line: 1024, column: 1, scope: !10122)
!10230 = distinct !DISubprogram(name: "BLI_rcti_size_x", scope: !10231, file: !10231, line: 105, type: !10232, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10231 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10232 = !DISubroutineType(types: !10233)
!10233 = !{!1242, !10234}
!10234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10235, size: 64)
!10235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2824)
!10236 = !DILocalVariable(name: "rct", arg: 1, scope: !10230, file: !10231, line: 105, type: !10234)
!10237 = !DILocation(line: 105, column: 53, scope: !10230)
!10238 = !DILocation(line: 105, column: 68, scope: !10230)
!10239 = !DILocation(line: 105, column: 73, scope: !10230)
!10240 = !DILocation(line: 105, column: 80, scope: !10230)
!10241 = !DILocation(line: 105, column: 85, scope: !10230)
!10242 = !DILocation(line: 105, column: 78, scope: !10230)
!10243 = !DILocation(line: 105, column: 60, scope: !10230)
!10244 = distinct !DISubprogram(name: "BLI_rcti_size_y", scope: !10231, file: !10231, line: 106, type: !10232, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10245 = !DILocalVariable(name: "rct", arg: 1, scope: !10244, file: !10231, line: 106, type: !10234)
!10246 = !DILocation(line: 106, column: 53, scope: !10244)
!10247 = !DILocation(line: 106, column: 68, scope: !10244)
!10248 = !DILocation(line: 106, column: 73, scope: !10244)
!10249 = !DILocation(line: 106, column: 80, scope: !10244)
!10250 = !DILocation(line: 106, column: 85, scope: !10244)
!10251 = !DILocation(line: 106, column: 78, scope: !10244)
!10252 = !DILocation(line: 106, column: 60, scope: !10244)
!10253 = distinct !DISubprogram(name: "area_swap_invoke", scope: !3, file: !3, line: 912, type: !7079, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10254 = !DILocalVariable(name: "C", arg: 1, scope: !10253, file: !3, line: 912, type: !3734)
!10255 = !DILocation(line: 912, column: 39, scope: !10253)
!10256 = !DILocalVariable(name: "op", arg: 2, scope: !10253, file: !3, line: 912, type: !7081)
!10257 = !DILocation(line: 912, column: 54, scope: !10253)
!10258 = !DILocalVariable(name: "event", arg: 3, scope: !10253, file: !3, line: 912, type: !6997)
!10259 = !DILocation(line: 912, column: 73, scope: !10253)
!10260 = !DILocation(line: 915, column: 22, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10253, file: !3, line: 915, column: 6)
!10262 = !DILocation(line: 915, column: 26, scope: !10261)
!10263 = !DILocation(line: 915, column: 7, scope: !10261)
!10264 = !DILocation(line: 915, column: 6, scope: !10253)
!10265 = !DILocation(line: 916, column: 3, scope: !10261)
!10266 = !DILocation(line: 919, column: 36, scope: !10253)
!10267 = !DILocation(line: 919, column: 22, scope: !10253)
!10268 = !DILocation(line: 919, column: 2, scope: !10253)
!10269 = !DILocation(line: 920, column: 29, scope: !10253)
!10270 = !DILocation(line: 920, column: 32, scope: !10253)
!10271 = !DILocation(line: 920, column: 2, scope: !10253)
!10272 = !DILocation(line: 922, column: 2, scope: !10253)
!10273 = !DILocation(line: 924, column: 1, scope: !10253)
!10274 = distinct !DISubprogram(name: "area_swap_modal", scope: !3, file: !3, line: 926, type: !7079, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10275 = !DILocalVariable(name: "C", arg: 1, scope: !10274, file: !3, line: 926, type: !3734)
!10276 = !DILocation(line: 926, column: 38, scope: !10274)
!10277 = !DILocalVariable(name: "op", arg: 2, scope: !10274, file: !3, line: 926, type: !7081)
!10278 = !DILocation(line: 926, column: 53, scope: !10274)
!10279 = !DILocalVariable(name: "event", arg: 3, scope: !10274, file: !3, line: 926, type: !6997)
!10280 = !DILocation(line: 926, column: 72, scope: !10274)
!10281 = !DILocalVariable(name: "sad", scope: !10274, file: !3, line: 928, type: !7097)
!10282 = !DILocation(line: 928, column: 19, scope: !10274)
!10283 = !DILocation(line: 928, column: 25, scope: !10274)
!10284 = !DILocation(line: 928, column: 29, scope: !10274)
!10285 = !DILocation(line: 930, column: 10, scope: !10274)
!10286 = !DILocation(line: 930, column: 17, scope: !10274)
!10287 = !DILocation(line: 930, column: 2, scope: !10274)
!10288 = !DILocation(line: 933, column: 50, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 930, column: 23)
!10290 = !DILocation(line: 933, column: 36, scope: !10289)
!10291 = !DILocation(line: 933, column: 54, scope: !10289)
!10292 = !DILocation(line: 933, column: 61, scope: !10289)
!10293 = !DILocation(line: 933, column: 64, scope: !10289)
!10294 = !DILocation(line: 933, column: 71, scope: !10289)
!10295 = !DILocation(line: 933, column: 15, scope: !10289)
!10296 = !DILocation(line: 933, column: 4, scope: !10289)
!10297 = !DILocation(line: 933, column: 9, scope: !10289)
!10298 = !DILocation(line: 933, column: 13, scope: !10289)
!10299 = !DILocation(line: 934, column: 4, scope: !10289)
!10300 = !DILocation(line: 936, column: 8, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 936, column: 8)
!10302 = !DILocation(line: 936, column: 15, scope: !10301)
!10303 = !DILocation(line: 936, column: 19, scope: !10301)
!10304 = !DILocation(line: 936, column: 8, scope: !10289)
!10305 = !DILocation(line: 937, column: 10, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 937, column: 9)
!10307 = distinct !DILexicalBlock(scope: !10301, file: !3, line: 936, column: 34)
!10308 = !DILocation(line: 937, column: 15, scope: !10306)
!10309 = !DILocation(line: 937, column: 19, scope: !10306)
!10310 = !DILocation(line: 937, column: 22, scope: !10306)
!10311 = !DILocation(line: 937, column: 27, scope: !10306)
!10312 = !DILocation(line: 937, column: 34, scope: !10306)
!10313 = !DILocation(line: 937, column: 39, scope: !10306)
!10314 = !DILocation(line: 937, column: 31, scope: !10306)
!10315 = !DILocation(line: 937, column: 9, scope: !10307)
!10316 = !DILocation(line: 938, column: 23, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 937, column: 44)
!10318 = !DILocation(line: 938, column: 26, scope: !10317)
!10319 = !DILocation(line: 938, column: 6, scope: !10317)
!10320 = !DILocation(line: 939, column: 6, scope: !10317)
!10321 = !DILocation(line: 942, column: 24, scope: !10307)
!10322 = !DILocation(line: 942, column: 29, scope: !10307)
!10323 = !DILocation(line: 942, column: 5, scope: !10307)
!10324 = !DILocation(line: 943, column: 24, scope: !10307)
!10325 = !DILocation(line: 943, column: 29, scope: !10307)
!10326 = !DILocation(line: 943, column: 5, scope: !10307)
!10327 = !DILocation(line: 945, column: 23, scope: !10307)
!10328 = !DILocation(line: 945, column: 26, scope: !10307)
!10329 = !DILocation(line: 945, column: 31, scope: !10307)
!10330 = !DILocation(line: 945, column: 36, scope: !10307)
!10331 = !DILocation(line: 945, column: 41, scope: !10307)
!10332 = !DILocation(line: 945, column: 5, scope: !10307)
!10333 = !DILocation(line: 947, column: 20, scope: !10307)
!10334 = !DILocation(line: 947, column: 23, scope: !10307)
!10335 = !DILocation(line: 947, column: 5, scope: !10307)
!10336 = !DILocation(line: 949, column: 27, scope: !10307)
!10337 = !DILocation(line: 949, column: 5, scope: !10307)
!10338 = !DILocation(line: 951, column: 5, scope: !10307)
!10339 = !DILocation(line: 953, column: 4, scope: !10289)
!10340 = !DILocation(line: 956, column: 21, scope: !10289)
!10341 = !DILocation(line: 956, column: 24, scope: !10289)
!10342 = !DILocation(line: 956, column: 4, scope: !10289)
!10343 = !DILocation(line: 957, column: 4, scope: !10289)
!10344 = !DILocation(line: 959, column: 2, scope: !10274)
!10345 = !DILocation(line: 960, column: 1, scope: !10274)
!10346 = distinct !DISubprogram(name: "area_swap_cancel", scope: !3, file: !3, line: 907, type: !7357, scopeLine: 908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10347 = !DILocalVariable(name: "C", arg: 1, scope: !10346, file: !3, line: 907, type: !3734)
!10348 = !DILocation(line: 907, column: 40, scope: !10346)
!10349 = !DILocalVariable(name: "op", arg: 2, scope: !10346, file: !3, line: 907, type: !7081)
!10350 = !DILocation(line: 907, column: 55, scope: !10346)
!10351 = !DILocation(line: 909, column: 17, scope: !10346)
!10352 = !DILocation(line: 909, column: 20, scope: !10346)
!10353 = !DILocation(line: 909, column: 2, scope: !10346)
!10354 = !DILocation(line: 910, column: 1, scope: !10346)
!10355 = distinct !DISubprogram(name: "area_swap_init", scope: !3, file: !3, line: 882, type: !10356, scopeLine: 883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10356 = !DISubroutineType(types: !10357)
!10357 = !{!1242, !7081, !6997}
!10358 = !DILocalVariable(name: "op", arg: 1, scope: !10355, file: !3, line: 882, type: !7081)
!10359 = !DILocation(line: 882, column: 39, scope: !10355)
!10360 = !DILocalVariable(name: "event", arg: 2, scope: !10355, file: !3, line: 882, type: !6997)
!10361 = !DILocation(line: 882, column: 58, scope: !10355)
!10362 = !DILocalVariable(name: "sd", scope: !10355, file: !3, line: 884, type: !10363)
!10363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10364, size: 64)
!10364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sAreaSwapData", file: !3, line: 880, baseType: !10365)
!10365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sAreaSwapData", file: !3, line: 878, size: 128, elements: !10366)
!10366 = !{!10367, !10368}
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "sa1", scope: !10365, file: !3, line: 879, baseType: !3286, size: 64)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "sa2", scope: !10365, file: !3, line: 879, baseType: !3286, size: 64, offset: 64)
!10369 = !DILocation(line: 884, column: 17, scope: !10355)
!10370 = !DILocalVariable(name: "sad", scope: !10355, file: !3, line: 885, type: !7097)
!10371 = !DILocation(line: 885, column: 19, scope: !10355)
!10372 = !DILocation(line: 885, column: 25, scope: !10355)
!10373 = !DILocation(line: 885, column: 32, scope: !10355)
!10374 = !DILocation(line: 887, column: 6, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 887, column: 6)
!10376 = !DILocation(line: 887, column: 10, scope: !10375)
!10377 = !DILocation(line: 887, column: 18, scope: !10375)
!10378 = !DILocation(line: 887, column: 21, scope: !10375)
!10379 = !DILocation(line: 887, column: 26, scope: !10375)
!10380 = !DILocation(line: 887, column: 30, scope: !10375)
!10381 = !DILocation(line: 887, column: 6, scope: !10355)
!10382 = !DILocation(line: 888, column: 3, scope: !10375)
!10383 = !DILocation(line: 890, column: 7, scope: !10355)
!10384 = !DILocation(line: 890, column: 5, scope: !10355)
!10385 = !DILocation(line: 891, column: 12, scope: !10355)
!10386 = !DILocation(line: 891, column: 17, scope: !10355)
!10387 = !DILocation(line: 891, column: 2, scope: !10355)
!10388 = !DILocation(line: 891, column: 6, scope: !10355)
!10389 = !DILocation(line: 891, column: 10, scope: !10355)
!10390 = !DILocation(line: 892, column: 12, scope: !10355)
!10391 = !DILocation(line: 892, column: 17, scope: !10355)
!10392 = !DILocation(line: 892, column: 2, scope: !10355)
!10393 = !DILocation(line: 892, column: 6, scope: !10355)
!10394 = !DILocation(line: 892, column: 10, scope: !10355)
!10395 = !DILocation(line: 893, column: 19, scope: !10355)
!10396 = !DILocation(line: 893, column: 2, scope: !10355)
!10397 = !DILocation(line: 893, column: 6, scope: !10355)
!10398 = !DILocation(line: 893, column: 17, scope: !10355)
!10399 = !DILocation(line: 895, column: 2, scope: !10355)
!10400 = !DILocation(line: 896, column: 1, scope: !10355)
!10401 = distinct !DISubprogram(name: "area_swap_exit", scope: !3, file: !3, line: 899, type: !7357, scopeLine: 900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10402 = !DILocalVariable(name: "C", arg: 1, scope: !10401, file: !3, line: 899, type: !3734)
!10403 = !DILocation(line: 899, column: 38, scope: !10401)
!10404 = !DILocalVariable(name: "op", arg: 2, scope: !10401, file: !3, line: 899, type: !7081)
!10405 = !DILocation(line: 899, column: 53, scope: !10401)
!10406 = !DILocation(line: 901, column: 40, scope: !10401)
!10407 = !DILocation(line: 901, column: 26, scope: !10401)
!10408 = !DILocation(line: 901, column: 2, scope: !10401)
!10409 = !DILocation(line: 902, column: 6, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 902, column: 6)
!10411 = !DILocation(line: 902, column: 10, scope: !10410)
!10412 = !DILocation(line: 902, column: 6, scope: !10401)
!10413 = !DILocation(line: 903, column: 3, scope: !10410)
!10414 = !DILocation(line: 903, column: 13, scope: !10410)
!10415 = !DILocation(line: 903, column: 17, scope: !10410)
!10416 = !DILocation(line: 904, column: 2, scope: !10401)
!10417 = !DILocation(line: 904, column: 6, scope: !10401)
!10418 = !DILocation(line: 904, column: 17, scope: !10401)
!10419 = !DILocation(line: 905, column: 1, scope: !10401)
!10420 = distinct !DISubprogram(name: "region_quadview_exec", scope: !3, file: !3, line: 2961, type: !7473, scopeLine: 2962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10421 = !DILocalVariable(name: "C", arg: 1, scope: !10420, file: !3, line: 2961, type: !3734)
!10422 = !DILocation(line: 2961, column: 43, scope: !10420)
!10423 = !DILocalVariable(name: "op", arg: 2, scope: !10420, file: !3, line: 2961, type: !7081)
!10424 = !DILocation(line: 2961, column: 58, scope: !10420)
!10425 = !DILocalVariable(name: "ar", scope: !10420, file: !3, line: 2963, type: !5124)
!10426 = !DILocation(line: 2963, column: 11, scope: !10420)
!10427 = !DILocation(line: 2963, column: 30, scope: !10420)
!10428 = !DILocation(line: 2963, column: 16, scope: !10420)
!10429 = !DILocation(line: 2966, column: 6, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10420, file: !3, line: 2966, column: 6)
!10431 = !DILocation(line: 2966, column: 10, scope: !10430)
!10432 = !DILocation(line: 2966, column: 21, scope: !10430)
!10433 = !DILocation(line: 2966, column: 6, scope: !10420)
!10434 = !DILocation(line: 2967, column: 14, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 2966, column: 41)
!10436 = !DILocation(line: 2967, column: 18, scope: !10435)
!10437 = !DILocation(line: 2967, column: 3, scope: !10435)
!10438 = !DILocation(line: 2968, column: 2, scope: !10435)
!10439 = !DILocation(line: 2969, column: 11, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 2969, column: 11)
!10441 = !DILocation(line: 2969, column: 15, scope: !10440)
!10442 = !DILocation(line: 2969, column: 25, scope: !10440)
!10443 = !DILocation(line: 2969, column: 11, scope: !10430)
!10444 = !DILocalVariable(name: "sa", scope: !10445, file: !3, line: 2971, type: !3286)
!10445 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 2969, column: 46)
!10446 = !DILocation(line: 2971, column: 12, scope: !10445)
!10447 = !DILocation(line: 2971, column: 29, scope: !10445)
!10448 = !DILocation(line: 2971, column: 17, scope: !10445)
!10449 = !DILocalVariable(name: "arn", scope: !10445, file: !3, line: 2972, type: !5124)
!10450 = !DILocation(line: 2972, column: 12, scope: !10445)
!10451 = !DILocation(line: 2975, column: 3, scope: !10445)
!10452 = !DILocation(line: 2975, column: 7, scope: !10445)
!10453 = !DILocation(line: 2975, column: 17, scope: !10445)
!10454 = !DILocation(line: 2977, column: 7, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 2977, column: 7)
!10456 = !DILocation(line: 2977, column: 11, scope: !10455)
!10457 = !DILocation(line: 2977, column: 21, scope: !10455)
!10458 = !DILocation(line: 2977, column: 7, scope: !10445)
!10459 = !DILocalVariable(name: "ar_iter", scope: !10460, file: !3, line: 2978, type: !5124)
!10460 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 2977, column: 38)
!10461 = !DILocation(line: 2978, column: 13, scope: !10460)
!10462 = !DILocalVariable(name: "rv3d", scope: !10460, file: !3, line: 2979, type: !10463)
!10463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10464, size: 64)
!10464 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionView3D", file: !10465, line: 148, baseType: !10466)
!10465 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !10465, line: 85, size: 7040, elements: !10467)
!10467 = !{!10468, !10469, !10470, !10471, !10472, !10473, !10474, !10475, !10478, !10479, !10480, !10482, !10485, !10498, !10499, !10502, !10503, !10504, !10505, !10506, !10507, !10508, !10509, !10510, !10511, !10512, !10513, !10514, !10515, !10516, !10517, !10518, !10519, !10520, !10521, !10522, !10523, !10524, !10525, !10526}
!10468 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !10466, file: !10465, line: 87, baseType: !1513, size: 512)
!10469 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !10466, file: !10465, line: 88, baseType: !1513, size: 512, offset: 512)
!10470 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !10466, file: !10465, line: 89, baseType: !1513, size: 512, offset: 1024)
!10471 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !10466, file: !10465, line: 90, baseType: !1513, size: 512, offset: 1536)
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !10466, file: !10465, line: 91, baseType: !1513, size: 512, offset: 2048)
!10473 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !10466, file: !10465, line: 94, baseType: !1513, size: 512, offset: 2560)
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !10466, file: !10465, line: 95, baseType: !1513, size: 512, offset: 3072)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !10466, file: !10465, line: 99, baseType: !10476, size: 768, offset: 3584)
!10476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1407, size: 768, elements: !10477)
!10477 = !{!2643, !1515}
!10478 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !10466, file: !10465, line: 100, baseType: !10476, size: 768, offset: 4352)
!10479 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !10466, file: !10465, line: 101, baseType: !1588, size: 64, offset: 5120)
!10480 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !10466, file: !10465, line: 103, baseType: !10481, size: 64, offset: 5184)
!10481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10466, size: 64)
!10482 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !10466, file: !10465, line: 104, baseType: !10483, size: 64, offset: 5248)
!10483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10484, size: 64)
!10484 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !10465, line: 44, flags: DIFlagFwdDecl)
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !10466, file: !10465, line: 105, baseType: !10486, size: 64, offset: 5312)
!10486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10487, size: 64)
!10487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !10488, line: 77, size: 320, elements: !10489)
!10488 = !DIFile(filename: "blender/source/blender/editors/include/ED_view3d.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10489 = !{!10490, !10491, !10492, !10493, !10494, !10495, !10497}
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !10487, file: !10488, line: 78, baseType: !1773, size: 16)
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !10487, file: !10488, line: 78, baseType: !1773, size: 16, offset: 16)
!10492 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !10487, file: !10488, line: 79, baseType: !1410, size: 16, offset: 32)
!10493 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !10487, file: !10488, line: 79, baseType: !1410, size: 16, offset: 48)
!10494 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !10487, file: !10488, line: 80, baseType: !3241, size: 64, offset: 64)
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "depth_range", scope: !10487, file: !10488, line: 81, baseType: !10496, size: 128, offset: 128)
!10496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3374, size: 128, elements: !1847)
!10497 = !DIDerivedType(tag: DW_TAG_member, name: "damaged", scope: !10487, file: !10488, line: 83, baseType: !2425, size: 8, offset: 256)
!10498 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !10466, file: !10465, line: 106, baseType: !1390, size: 64, offset: 5376)
!10499 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !10466, file: !10465, line: 109, baseType: !10500, size: 64, offset: 5440)
!10500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10501, size: 64)
!10501 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !10465, line: 46, flags: DIFlagFwdDecl)
!10502 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !10466, file: !10465, line: 110, baseType: !3324, size: 64, offset: 5504)
!10503 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !10466, file: !10465, line: 114, baseType: !1513, size: 512, offset: 5568)
!10504 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !10466, file: !10465, line: 116, baseType: !1732, size: 128, offset: 6080)
!10505 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !10466, file: !10465, line: 117, baseType: !1407, size: 32, offset: 6208)
!10506 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !10466, file: !10465, line: 118, baseType: !1407, size: 32, offset: 6240)
!10507 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !10466, file: !10465, line: 118, baseType: !1407, size: 32, offset: 6272)
!10508 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !10466, file: !10465, line: 119, baseType: !1407, size: 32, offset: 6304)
!10509 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !10466, file: !10465, line: 120, baseType: !1502, size: 96, offset: 6336)
!10510 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !10466, file: !10465, line: 122, baseType: !1407, size: 32, offset: 6432)
!10511 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !10466, file: !10465, line: 123, baseType: !1433, size: 8, offset: 6464)
!10512 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !10466, file: !10465, line: 125, baseType: !1433, size: 8, offset: 6472)
!10513 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !10466, file: !10465, line: 126, baseType: !1433, size: 8, offset: 6480)
!10514 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !10466, file: !10465, line: 127, baseType: !1433, size: 8, offset: 6488)
!10515 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !10466, file: !10465, line: 128, baseType: !1433, size: 8, offset: 6496)
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10466, file: !10465, line: 129, baseType: !2394, size: 24, offset: 6504)
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !10466, file: !10465, line: 130, baseType: !1846, size: 64, offset: 6528)
!10518 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !10466, file: !10465, line: 132, baseType: !1410, size: 16, offset: 6592)
!10519 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !10466, file: !10465, line: 133, baseType: !1410, size: 16, offset: 6608)
!10520 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !10466, file: !10465, line: 137, baseType: !1732, size: 128, offset: 6624)
!10521 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !10466, file: !10465, line: 138, baseType: !1410, size: 16, offset: 6752)
!10522 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !10466, file: !10465, line: 138, baseType: !1410, size: 16, offset: 6768)
!10523 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !10466, file: !10465, line: 140, baseType: !1407, size: 32, offset: 6784)
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !10466, file: !10465, line: 141, baseType: !1502, size: 96, offset: 6816)
!10525 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !10466, file: !10465, line: 145, baseType: !1407, size: 32, offset: 6912)
!10526 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !10466, file: !10465, line: 146, baseType: !1502, size: 96, offset: 6944)
!10527 = !DILocation(line: 2979, column: 18, scope: !10460)
!10528 = !DILocation(line: 2979, column: 25, scope: !10460)
!10529 = !DILocation(line: 2979, column: 29, scope: !10460)
!10530 = !DILocation(line: 2982, column: 8, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10460, file: !3, line: 2982, column: 8)
!10532 = !DILocation(line: 2982, column: 14, scope: !10531)
!10533 = !DILocation(line: 2982, column: 8, scope: !10460)
!10534 = !DILocalVariable(name: "v3d_user", scope: !10535, file: !3, line: 2983, type: !10536)
!10535 = distinct !DILexicalBlock(scope: !10531, file: !3, line: 2982, column: 24)
!10536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10537, size: 64)
!10537 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !10465, line: 221, baseType: !10538)
!10538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !10465, line: 151, size: 3008, elements: !10539)
!10539 = !{!10540, !10541, !10542, !10543, !10544, !10545, !10546, !10547, !10548, !10549, !10550, !10551, !10552, !10553, !10554, !10555, !10556, !10557, !10558, !10559, !10577, !10579, !10580, !10581, !10582, !10583, !10584, !10585, !10586, !10587, !10588, !10589, !10590, !10591, !10592, !10593, !10594, !10595, !10596, !10597, !10598, !10599, !10600, !10601, !10602, !10603, !10604, !10605, !10606, !10607, !10608, !10609, !10610, !10611}
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10538, file: !10465, line: 152, baseType: !1396, size: 64)
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10538, file: !10465, line: 152, baseType: !1396, size: 64, offset: 64)
!10542 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !10538, file: !10465, line: 153, baseType: !1399, size: 128, offset: 128)
!10543 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !10538, file: !10465, line: 154, baseType: !1242, size: 32, offset: 256)
!10544 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !10538, file: !10465, line: 155, baseType: !1407, size: 32, offset: 288)
!10545 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !10538, file: !10465, line: 156, baseType: !1409, size: 128, offset: 320)
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !10538, file: !10465, line: 158, baseType: !1732, size: 128, offset: 448)
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !10538, file: !10465, line: 159, baseType: !1407, size: 32, offset: 576)
!10548 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !10538, file: !10465, line: 161, baseType: !1407, size: 32, offset: 608)
!10549 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !10538, file: !10465, line: 162, baseType: !1433, size: 8, offset: 640)
!10550 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10538, file: !10465, line: 163, baseType: !2394, size: 24, offset: 648)
!10551 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !10538, file: !10465, line: 165, baseType: !7, size: 32, offset: 672)
!10552 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !10538, file: !10465, line: 166, baseType: !7, size: 32, offset: 704)
!10553 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !10538, file: !10465, line: 168, baseType: !1410, size: 16, offset: 736)
!10554 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !10538, file: !10465, line: 169, baseType: !1410, size: 16, offset: 752)
!10555 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !10538, file: !10465, line: 171, baseType: !1611, size: 64, offset: 768)
!10556 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !10538, file: !10465, line: 171, baseType: !1611, size: 64, offset: 832)
!10557 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !10538, file: !10465, line: 172, baseType: !1923, size: 128, offset: 896)
!10558 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !10538, file: !10465, line: 174, baseType: !1401, size: 128, offset: 1024)
!10559 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !10538, file: !10465, line: 175, baseType: !10560, size: 64, offset: 1152)
!10560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10561, size: 64)
!10561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !10465, line: 70, size: 832, elements: !10562)
!10562 = !{!10563, !10564, !10565, !10566, !10567, !10568, !10569, !10570, !10571, !10572, !10573, !10574, !10575, !10576}
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10561, file: !10465, line: 71, baseType: !10560, size: 64)
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10561, file: !10465, line: 71, baseType: !10560, size: 64, offset: 64)
!10565 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !10561, file: !10465, line: 73, baseType: !2248, size: 64, offset: 128)
!10566 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !10561, file: !10465, line: 74, baseType: !1853, size: 320, offset: 192)
!10567 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !10561, file: !10465, line: 75, baseType: !2080, size: 64, offset: 512)
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !10561, file: !10465, line: 76, baseType: !5002, size: 64, offset: 576)
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !10561, file: !10465, line: 77, baseType: !1407, size: 32, offset: 640)
!10570 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !10561, file: !10465, line: 77, baseType: !1407, size: 32, offset: 672)
!10571 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10561, file: !10465, line: 77, baseType: !1407, size: 32, offset: 704)
!10572 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !10561, file: !10465, line: 77, baseType: !1407, size: 32, offset: 736)
!10573 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !10561, file: !10465, line: 78, baseType: !1410, size: 16, offset: 768)
!10574 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10561, file: !10465, line: 79, baseType: !1410, size: 16, offset: 784)
!10575 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !10561, file: !10465, line: 80, baseType: !1410, size: 16, offset: 800)
!10576 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10561, file: !10465, line: 80, baseType: !1410, size: 16, offset: 816)
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !10538, file: !10465, line: 177, baseType: !10578, size: 64, offset: 1216)
!10578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10538, size: 64)
!10579 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !10538, file: !10465, line: 179, baseType: !1461, size: 512, offset: 1280)
!10580 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !10538, file: !10465, line: 181, baseType: !7, size: 32, offset: 1792)
!10581 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !10538, file: !10465, line: 182, baseType: !1242, size: 32, offset: 1824)
!10582 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !10538, file: !10465, line: 187, baseType: !1410, size: 16, offset: 1856)
!10583 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !10538, file: !10465, line: 188, baseType: !1410, size: 16, offset: 1872)
!10584 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !10538, file: !10465, line: 189, baseType: !1410, size: 16, offset: 1888)
!10585 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !10538, file: !10465, line: 189, baseType: !1410, size: 16, offset: 1904)
!10586 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10538, file: !10465, line: 190, baseType: !1410, size: 16, offset: 1920)
!10587 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !10538, file: !10465, line: 190, baseType: !1410, size: 16, offset: 1936)
!10588 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !10538, file: !10465, line: 192, baseType: !1407, size: 32, offset: 1952)
!10589 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !10538, file: !10465, line: 192, baseType: !1407, size: 32, offset: 1984)
!10590 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !10538, file: !10465, line: 193, baseType: !1407, size: 32, offset: 2016)
!10591 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !10538, file: !10465, line: 193, baseType: !1407, size: 32, offset: 2048)
!10592 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !10538, file: !10465, line: 194, baseType: !1502, size: 96, offset: 2080)
!10593 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !10538, file: !10465, line: 195, baseType: !1502, size: 96, offset: 2176)
!10594 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !10538, file: !10465, line: 197, baseType: !1410, size: 16, offset: 2272)
!10595 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !10538, file: !10465, line: 199, baseType: !1410, size: 16, offset: 2288)
!10596 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !10538, file: !10465, line: 200, baseType: !1410, size: 16, offset: 2304)
!10597 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !10538, file: !10465, line: 201, baseType: !1433, size: 8, offset: 2320)
!10598 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !10538, file: !10465, line: 204, baseType: !1433, size: 8, offset: 2328)
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !10538, file: !10465, line: 204, baseType: !1433, size: 8, offset: 2336)
!10600 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !10538, file: !10465, line: 204, baseType: !1433, size: 8, offset: 2344)
!10601 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !10538, file: !10465, line: 204, baseType: !2606, size: 16, offset: 2352)
!10602 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !10538, file: !10465, line: 207, baseType: !1401, size: 128, offset: 2368)
!10603 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !10538, file: !10465, line: 208, baseType: !1401, size: 128, offset: 2496)
!10604 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !10538, file: !10465, line: 209, baseType: !1401, size: 128, offset: 2624)
!10605 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !10538, file: !10465, line: 212, baseType: !1433, size: 8, offset: 2752)
!10606 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !10538, file: !10465, line: 212, baseType: !1433, size: 8, offset: 2760)
!10607 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !10538, file: !10465, line: 212, baseType: !1433, size: 8, offset: 2768)
!10608 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !10538, file: !10465, line: 213, baseType: !2472, size: 40, offset: 2776)
!10609 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !10538, file: !10465, line: 215, baseType: !1390, size: 64, offset: 2816)
!10610 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !10538, file: !10465, line: 216, baseType: !1717, size: 64, offset: 2880)
!10611 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !10538, file: !10465, line: 219, baseType: !1690, size: 64, offset: 2944)
!10612 = !DILocation(line: 2983, column: 13, scope: !10535)
!10613 = !DILocalVariable(name: "ar_user", scope: !10535, file: !3, line: 2984, type: !5124)
!10614 = !DILocation(line: 2984, column: 14, scope: !10535)
!10615 = !DILocation(line: 2986, column: 39, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10535, file: !3, line: 2986, column: 9)
!10617 = !DILocation(line: 2986, column: 9, scope: !10616)
!10618 = !DILocation(line: 2986, column: 9, scope: !10535)
!10619 = !DILocation(line: 2987, column: 10, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 2987, column: 10)
!10621 = distinct !DILexicalBlock(scope: !10616, file: !3, line: 2986, column: 64)
!10622 = !DILocation(line: 2987, column: 16, scope: !10620)
!10623 = !DILocation(line: 2987, column: 13, scope: !10620)
!10624 = !DILocation(line: 2987, column: 10, scope: !10621)
!10625 = !DILocalVariable(name: "sw_ap", scope: !10626, file: !3, line: 2988, type: !1390)
!10626 = distinct !DILexicalBlock(scope: !10627, file: !3, line: 2988, column: 7)
!10627 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 2987, column: 25)
!10628 = !DILocation(line: 2988, column: 7, scope: !10626)
!10629 = !DILocation(line: 2989, column: 14, scope: !10627)
!10630 = !DILocation(line: 2989, column: 18, scope: !10627)
!10631 = !DILocation(line: 2989, column: 12, scope: !10627)
!10632 = !DILocation(line: 2990, column: 6, scope: !10627)
!10633 = !DILocation(line: 2991, column: 5, scope: !10621)
!10634 = !DILocation(line: 2992, column: 4, scope: !10535)
!10635 = !DILocation(line: 2994, column: 4, scope: !10460)
!10636 = !DILocation(line: 2994, column: 10, scope: !10460)
!10637 = !DILocation(line: 2994, column: 24, scope: !10460)
!10638 = !DILocation(line: 2995, column: 4, scope: !10460)
!10639 = !DILocation(line: 2995, column: 10, scope: !10460)
!10640 = !DILocation(line: 2995, column: 19, scope: !10460)
!10641 = !DILocation(line: 2996, column: 4, scope: !10460)
!10642 = !DILocation(line: 2996, column: 10, scope: !10460)
!10643 = !DILocation(line: 2996, column: 16, scope: !10460)
!10644 = !DILocation(line: 2999, column: 19, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10460, file: !3, line: 2999, column: 4)
!10646 = !DILocation(line: 2999, column: 23, scope: !10645)
!10647 = !DILocation(line: 2999, column: 34, scope: !10645)
!10648 = !DILocation(line: 2999, column: 17, scope: !10645)
!10649 = !DILocation(line: 2999, column: 9, scope: !10645)
!10650 = !DILocation(line: 2999, column: 41, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 2999, column: 4)
!10652 = !DILocation(line: 2999, column: 4, scope: !10645)
!10653 = !DILocation(line: 3000, column: 9, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 3000, column: 9)
!10655 = distinct !DILexicalBlock(scope: !10651, file: !3, line: 2999, column: 75)
!10656 = !DILocation(line: 3000, column: 18, scope: !10654)
!10657 = !DILocation(line: 3000, column: 29, scope: !10654)
!10658 = !DILocation(line: 3000, column: 9, scope: !10655)
!10659 = !DILocalVariable(name: "rv3d_iter", scope: !10660, file: !3, line: 3001, type: !10463)
!10660 = distinct !DILexicalBlock(scope: !10654, file: !3, line: 3000, column: 49)
!10661 = !DILocation(line: 3001, column: 20, scope: !10660)
!10662 = !DILocation(line: 3001, column: 32, scope: !10660)
!10663 = !DILocation(line: 3001, column: 41, scope: !10660)
!10664 = !DILocation(line: 3002, column: 29, scope: !10660)
!10665 = !DILocation(line: 3002, column: 40, scope: !10660)
!10666 = !DILocation(line: 3002, column: 6, scope: !10660)
!10667 = !DILocation(line: 3002, column: 12, scope: !10660)
!10668 = !DILocation(line: 3002, column: 26, scope: !10660)
!10669 = !DILocation(line: 3003, column: 5, scope: !10660)
!10670 = !DILocation(line: 3004, column: 4, scope: !10655)
!10671 = !DILocation(line: 2999, column: 60, scope: !10651)
!10672 = !DILocation(line: 2999, column: 69, scope: !10651)
!10673 = !DILocation(line: 2999, column: 58, scope: !10651)
!10674 = !DILocation(line: 2999, column: 4, scope: !10651)
!10675 = distinct !{!10675, !10652, !10676}
!10676 = !DILocation(line: 3004, column: 4, scope: !10645)
!10677 = !DILocation(line: 3005, column: 3, scope: !10460)
!10678 = !DILocation(line: 3007, column: 13, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 3007, column: 3)
!10680 = !DILocation(line: 3007, column: 17, scope: !10679)
!10681 = !DILocation(line: 3007, column: 28, scope: !10679)
!10682 = !DILocation(line: 3007, column: 11, scope: !10679)
!10683 = !DILocation(line: 3007, column: 8, scope: !10679)
!10684 = !DILocation(line: 3007, column: 35, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10679, file: !3, line: 3007, column: 3)
!10686 = !DILocation(line: 3007, column: 3, scope: !10679)
!10687 = !DILocation(line: 3008, column: 10, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 3007, column: 49)
!10689 = !DILocation(line: 3008, column: 14, scope: !10688)
!10690 = !DILocation(line: 3008, column: 8, scope: !10688)
!10691 = !DILocation(line: 3009, column: 8, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 3009, column: 8)
!10693 = !DILocation(line: 3009, column: 12, scope: !10692)
!10694 = !DILocation(line: 3009, column: 22, scope: !10692)
!10695 = !DILocation(line: 3009, column: 8, scope: !10688)
!10696 = !DILocation(line: 3010, column: 20, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 3009, column: 43)
!10698 = !DILocation(line: 3010, column: 23, scope: !10697)
!10699 = !DILocation(line: 3010, column: 5, scope: !10697)
!10700 = !DILocation(line: 3011, column: 26, scope: !10697)
!10701 = !DILocation(line: 3011, column: 30, scope: !10697)
!10702 = !DILocation(line: 3011, column: 36, scope: !10697)
!10703 = !DILocation(line: 3011, column: 5, scope: !10697)
!10704 = !DILocation(line: 3012, column: 18, scope: !10697)
!10705 = !DILocation(line: 3012, column: 22, scope: !10697)
!10706 = !DILocation(line: 3012, column: 34, scope: !10697)
!10707 = !DILocation(line: 3012, column: 5, scope: !10697)
!10708 = !DILocation(line: 3013, column: 5, scope: !10697)
!10709 = !DILocation(line: 3013, column: 15, scope: !10697)
!10710 = !DILocation(line: 3014, column: 4, scope: !10697)
!10711 = !DILocation(line: 3015, column: 3, scope: !10688)
!10712 = !DILocation(line: 3007, column: 44, scope: !10685)
!10713 = !DILocation(line: 3007, column: 42, scope: !10685)
!10714 = !DILocation(line: 3007, column: 3, scope: !10685)
!10715 = distinct !{!10715, !10686, !10716}
!10716 = !DILocation(line: 3015, column: 3, scope: !10679)
!10717 = !DILocation(line: 3016, column: 22, scope: !10445)
!10718 = !DILocation(line: 3016, column: 3, scope: !10445)
!10719 = !DILocation(line: 3017, column: 25, scope: !10445)
!10720 = !DILocation(line: 3017, column: 3, scope: !10445)
!10721 = !DILocation(line: 3018, column: 2, scope: !10445)
!10722 = !DILocation(line: 3019, column: 11, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 3019, column: 11)
!10724 = !DILocation(line: 3019, column: 15, scope: !10723)
!10725 = !DILocation(line: 3019, column: 11, scope: !10440)
!10726 = !DILocation(line: 3020, column: 14, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 3019, column: 21)
!10728 = !DILocation(line: 3020, column: 18, scope: !10727)
!10729 = !DILocation(line: 3020, column: 3, scope: !10727)
!10730 = !DILocation(line: 3021, column: 2, scope: !10727)
!10731 = !DILocalVariable(name: "sa", scope: !10732, file: !3, line: 3024, type: !3286)
!10732 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 3022, column: 7)
!10733 = !DILocation(line: 3024, column: 12, scope: !10732)
!10734 = !DILocation(line: 3024, column: 29, scope: !10732)
!10735 = !DILocation(line: 3024, column: 17, scope: !10732)
!10736 = !DILocalVariable(name: "newar", scope: !10732, file: !3, line: 3025, type: !5124)
!10737 = !DILocation(line: 3025, column: 12, scope: !10732)
!10738 = !DILocalVariable(name: "count", scope: !10732, file: !3, line: 3026, type: !1242)
!10739 = !DILocation(line: 3026, column: 7, scope: !10732)
!10740 = !DILocation(line: 3028, column: 3, scope: !10732)
!10741 = !DILocation(line: 3028, column: 7, scope: !10732)
!10742 = !DILocation(line: 3028, column: 17, scope: !10732)
!10743 = !DILocation(line: 3030, column: 14, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 3030, column: 3)
!10745 = !DILocation(line: 3030, column: 8, scope: !10744)
!10746 = !DILocation(line: 3030, column: 19, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10744, file: !3, line: 3030, column: 3)
!10748 = !DILocation(line: 3030, column: 25, scope: !10747)
!10749 = !DILocation(line: 3030, column: 3, scope: !10744)
!10750 = !DILocation(line: 3031, column: 33, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 3030, column: 39)
!10752 = !DILocation(line: 3031, column: 37, scope: !10751)
!10753 = !DILocation(line: 3031, column: 43, scope: !10751)
!10754 = !DILocation(line: 3031, column: 12, scope: !10751)
!10755 = !DILocation(line: 3031, column: 10, scope: !10751)
!10756 = !DILocation(line: 3032, column: 17, scope: !10751)
!10757 = !DILocation(line: 3032, column: 21, scope: !10751)
!10758 = !DILocation(line: 3032, column: 33, scope: !10751)
!10759 = !DILocation(line: 3032, column: 4, scope: !10751)
!10760 = !DILocation(line: 3033, column: 3, scope: !10751)
!10761 = !DILocation(line: 3030, column: 35, scope: !10747)
!10762 = !DILocation(line: 3030, column: 3, scope: !10747)
!10763 = distinct !{!10763, !10749, !10764}
!10764 = !DILocation(line: 3033, column: 3, scope: !10744)
!10765 = !DILocation(line: 3036, column: 7, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 3036, column: 7)
!10767 = !DILocation(line: 3036, column: 11, scope: !10766)
!10768 = !DILocation(line: 3036, column: 21, scope: !10766)
!10769 = !DILocation(line: 3036, column: 7, scope: !10732)
!10770 = !DILocalVariable(name: "v3d", scope: !10771, file: !3, line: 3037, type: !10536)
!10771 = distinct !DILexicalBlock(scope: !10766, file: !3, line: 3036, column: 38)
!10772 = !DILocation(line: 3037, column: 12, scope: !10771)
!10773 = !DILocation(line: 3037, column: 18, scope: !10771)
!10774 = !DILocation(line: 3037, column: 22, scope: !10771)
!10775 = !DILocation(line: 3037, column: 32, scope: !10771)
!10776 = !DILocalVariable(name: "index_qsplit", scope: !10771, file: !3, line: 3038, type: !1242)
!10777 = !DILocation(line: 3038, column: 8, scope: !10771)
!10778 = !DILocalVariable(name: "rv3d", scope: !10771, file: !3, line: 3046, type: !10463)
!10779 = !DILocation(line: 3046, column: 18, scope: !10771)
!10780 = !DILocation(line: 3046, column: 25, scope: !10771)
!10781 = !DILocation(line: 3046, column: 29, scope: !10771)
!10782 = !DILocalVariable(name: "viewlock", scope: !10771, file: !3, line: 3047, type: !3385)
!10783 = !DILocation(line: 3047, column: 15, scope: !10771)
!10784 = !DILocation(line: 3047, column: 27, scope: !10771)
!10785 = !DILocation(line: 3047, column: 33, scope: !10771)
!10786 = !DILocation(line: 3047, column: 47, scope: !10771)
!10787 = !DILocation(line: 3047, column: 26, scope: !10771)
!10788 = !DILocation(line: 3048, column: 27, scope: !10771)
!10789 = !DILocation(line: 3048, column: 33, scope: !10771)
!10790 = !DILocation(line: 3048, column: 47, scope: !10771)
!10791 = !DILocation(line: 3050, column: 30, scope: !10771)
!10792 = !DILocation(line: 3050, column: 34, scope: !10771)
!10793 = !DILocation(line: 3050, column: 51, scope: !10771)
!10794 = !DILocation(line: 3050, column: 104, scope: !10771)
!10795 = !DILocation(line: 3050, column: 61, scope: !10771)
!10796 = !DILocation(line: 3050, column: 4, scope: !10771)
!10797 = !DILocation(line: 3051, column: 30, scope: !10771)
!10798 = !DILocation(line: 3051, column: 40, scope: !10771)
!10799 = !DILocation(line: 3051, column: 44, scope: !10771)
!10800 = !DILocation(line: 3051, column: 38, scope: !10771)
!10801 = !DILocation(line: 3051, column: 51, scope: !10771)
!10802 = !DILocation(line: 3051, column: 104, scope: !10771)
!10803 = !DILocation(line: 3051, column: 61, scope: !10771)
!10804 = !DILocation(line: 3051, column: 4, scope: !10771)
!10805 = !DILocation(line: 3052, column: 30, scope: !10771)
!10806 = !DILocation(line: 3052, column: 40, scope: !10771)
!10807 = !DILocation(line: 3052, column: 44, scope: !10771)
!10808 = !DILocation(line: 3052, column: 38, scope: !10771)
!10809 = !DILocation(line: 3052, column: 51, scope: !10771)
!10810 = !DILocation(line: 3052, column: 104, scope: !10771)
!10811 = !DILocation(line: 3052, column: 61, scope: !10771)
!10812 = !DILocation(line: 3052, column: 4, scope: !10771)
!10813 = !DILocation(line: 3058, column: 10, scope: !10771)
!10814 = !DILocation(line: 3060, column: 3, scope: !10771)
!10815 = !DILocation(line: 3061, column: 22, scope: !10732)
!10816 = !DILocation(line: 3061, column: 3, scope: !10732)
!10817 = !DILocation(line: 3062, column: 25, scope: !10732)
!10818 = !DILocation(line: 3062, column: 3, scope: !10732)
!10819 = !DILocation(line: 3066, column: 2, scope: !10420)
!10820 = distinct !DISubprogram(name: "region_quadview_init_rv3d", scope: !3, file: !3, line: 2940, type: !10821, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10821 = !DISubroutineType(types: !10822)
!10822 = !{null, !3286, !5124, !3385, !3385, !3385}
!10823 = !DILocalVariable(name: "sa", arg: 1, scope: !10820, file: !3, line: 2940, type: !3286)
!10824 = !DILocation(line: 2940, column: 48, scope: !10820)
!10825 = !DILocalVariable(name: "ar", arg: 2, scope: !10820, file: !3, line: 2940, type: !5124)
!10826 = !DILocation(line: 2940, column: 61, scope: !10820)
!10827 = !DILocalVariable(name: "viewlock", arg: 3, scope: !10820, file: !3, line: 2941, type: !3385)
!10828 = !DILocation(line: 2941, column: 50, scope: !10820)
!10829 = !DILocalVariable(name: "view", arg: 4, scope: !10820, file: !3, line: 2941, type: !3385)
!10830 = !DILocation(line: 2941, column: 71, scope: !10820)
!10831 = !DILocalVariable(name: "persp", arg: 5, scope: !10820, file: !3, line: 2941, type: !3385)
!10832 = !DILocation(line: 2941, column: 88, scope: !10820)
!10833 = !DILocalVariable(name: "rv3d", scope: !10820, file: !3, line: 2943, type: !10463)
!10834 = !DILocation(line: 2943, column: 16, scope: !10820)
!10835 = !DILocation(line: 2943, column: 23, scope: !10820)
!10836 = !DILocation(line: 2943, column: 27, scope: !10820)
!10837 = !DILocation(line: 2945, column: 6, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 2945, column: 6)
!10839 = !DILocation(line: 2945, column: 12, scope: !10838)
!10840 = !DILocation(line: 2945, column: 6, scope: !10820)
!10841 = !DILocation(line: 2946, column: 28, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10838, file: !3, line: 2945, column: 27)
!10843 = !DILocation(line: 2946, column: 3, scope: !10842)
!10844 = !DILocation(line: 2947, column: 2, scope: !10842)
!10845 = !DILocation(line: 2949, column: 19, scope: !10820)
!10846 = !DILocation(line: 2949, column: 2, scope: !10820)
!10847 = !DILocation(line: 2949, column: 8, scope: !10820)
!10848 = !DILocation(line: 2949, column: 17, scope: !10820)
!10849 = !DILocation(line: 2950, column: 15, scope: !10820)
!10850 = !DILocation(line: 2950, column: 2, scope: !10820)
!10851 = !DILocation(line: 2950, column: 8, scope: !10820)
!10852 = !DILocation(line: 2950, column: 13, scope: !10820)
!10853 = !DILocation(line: 2951, column: 16, scope: !10820)
!10854 = !DILocation(line: 2951, column: 2, scope: !10820)
!10855 = !DILocation(line: 2951, column: 8, scope: !10820)
!10856 = !DILocation(line: 2951, column: 14, scope: !10820)
!10857 = !DILocation(line: 2953, column: 17, scope: !10820)
!10858 = !DILocation(line: 2953, column: 2, scope: !10820)
!10859 = !DILocation(line: 2954, column: 31, scope: !10820)
!10860 = !DILocation(line: 2954, column: 2, scope: !10820)
!10861 = !DILocation(line: 2955, column: 7, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 2955, column: 6)
!10863 = !DILocation(line: 2955, column: 16, scope: !10862)
!10864 = !DILocation(line: 2955, column: 32, scope: !10862)
!10865 = !DILocation(line: 2955, column: 36, scope: !10862)
!10866 = !DILocation(line: 2955, column: 42, scope: !10862)
!10867 = !DILocation(line: 2955, column: 6, scope: !10820)
!10868 = !DILocation(line: 2956, column: 29, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10862, file: !3, line: 2955, column: 58)
!10870 = !DILocation(line: 2956, column: 33, scope: !10869)
!10871 = !DILocation(line: 2956, column: 3, scope: !10869)
!10872 = !DILocation(line: 2957, column: 2, scope: !10869)
!10873 = !DILocation(line: 2958, column: 1, scope: !10820)
!10874 = distinct !DISubprogram(name: "view3d_localview_update_rv3d", scope: !3, file: !3, line: 2931, type: !10875, scopeLine: 2932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10875 = !DISubroutineType(types: !10876)
!10876 = !{null, !10481}
!10877 = !DILocalVariable(name: "rv3d", arg: 1, scope: !10874, file: !3, line: 2931, type: !10481)
!10878 = !DILocation(line: 2931, column: 63, scope: !10874)
!10879 = !DILocation(line: 2933, column: 6, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 2933, column: 6)
!10881 = !DILocation(line: 2933, column: 12, scope: !10880)
!10882 = !DILocation(line: 2933, column: 6, scope: !10874)
!10883 = !DILocation(line: 2934, column: 25, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 2933, column: 21)
!10885 = !DILocation(line: 2934, column: 31, scope: !10884)
!10886 = !DILocation(line: 2934, column: 3, scope: !10884)
!10887 = !DILocation(line: 2934, column: 9, scope: !10884)
!10888 = !DILocation(line: 2934, column: 18, scope: !10884)
!10889 = !DILocation(line: 2934, column: 23, scope: !10884)
!10890 = !DILocation(line: 2935, column: 26, scope: !10884)
!10891 = !DILocation(line: 2935, column: 32, scope: !10884)
!10892 = !DILocation(line: 2935, column: 3, scope: !10884)
!10893 = !DILocation(line: 2935, column: 9, scope: !10884)
!10894 = !DILocation(line: 2935, column: 18, scope: !10884)
!10895 = !DILocation(line: 2935, column: 24, scope: !10884)
!10896 = !DILocation(line: 2936, column: 14, scope: !10884)
!10897 = !DILocation(line: 2936, column: 20, scope: !10884)
!10898 = !DILocation(line: 2936, column: 29, scope: !10884)
!10899 = !DILocation(line: 2936, column: 39, scope: !10884)
!10900 = !DILocation(line: 2936, column: 45, scope: !10884)
!10901 = !DILocation(line: 2936, column: 3, scope: !10884)
!10902 = !DILocation(line: 2937, column: 2, scope: !10884)
!10903 = !DILocation(line: 2938, column: 1, scope: !10874)
!10904 = distinct !DISubprogram(name: "region_scale_invoke", scope: !3, file: !3, line: 1850, type: !7079, scopeLine: 1851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!10905 = !DILocalVariable(name: "C", arg: 1, scope: !10904, file: !3, line: 1850, type: !3734)
!10906 = !DILocation(line: 1850, column: 42, scope: !10904)
!10907 = !DILocalVariable(name: "op", arg: 2, scope: !10904, file: !3, line: 1850, type: !7081)
!10908 = !DILocation(line: 1850, column: 57, scope: !10904)
!10909 = !DILocalVariable(name: "event", arg: 3, scope: !10904, file: !3, line: 1850, type: !6997)
!10910 = !DILocation(line: 1850, column: 76, scope: !10904)
!10911 = !DILocalVariable(name: "sad", scope: !10904, file: !3, line: 1852, type: !7097)
!10912 = !DILocation(line: 1852, column: 19, scope: !10904)
!10913 = !DILocation(line: 1852, column: 25, scope: !10904)
!10914 = !DILocation(line: 1852, column: 32, scope: !10904)
!10915 = !DILocalVariable(name: "az", scope: !10904, file: !3, line: 1853, type: !5221)
!10916 = !DILocation(line: 1853, column: 9, scope: !10904)
!10917 = !DILocation(line: 1855, column: 6, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 1855, column: 6)
!10919 = !DILocation(line: 1855, column: 13, scope: !10918)
!10920 = !DILocation(line: 1855, column: 18, scope: !10918)
!10921 = !DILocation(line: 1855, column: 6, scope: !10904)
!10922 = !DILocation(line: 1856, column: 14, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10918, file: !3, line: 1855, column: 44)
!10924 = !DILocation(line: 1856, column: 18, scope: !10923)
!10925 = !DILocation(line: 1856, column: 3, scope: !10923)
!10926 = !DILocation(line: 1857, column: 3, scope: !10923)
!10927 = !DILocation(line: 1860, column: 7, scope: !10904)
!10928 = !DILocation(line: 1860, column: 12, scope: !10904)
!10929 = !DILocation(line: 1860, column: 5, scope: !10904)
!10930 = !DILocation(line: 1862, column: 6, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 1862, column: 6)
!10932 = !DILocation(line: 1862, column: 10, scope: !10931)
!10933 = !DILocation(line: 1862, column: 6, scope: !10904)
!10934 = !DILocalVariable(name: "rmd", scope: !10935, file: !3, line: 1863, type: !10936)
!10935 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 1862, column: 14)
!10936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10937, size: 64)
!10937 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionMoveData", file: !3, line: 1803, baseType: !10938)
!10938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionMoveData", file: !3, line: 1794, size: 448, elements: !10939)
!10939 = !{!10940, !10941, !10942, !10943, !10944, !10945, !10946, !10947, !10948, !10949}
!10940 = !DIDerivedType(tag: DW_TAG_member, name: "az", scope: !10938, file: !3, line: 1795, baseType: !5221, size: 64)
!10941 = !DIDerivedType(tag: DW_TAG_member, name: "ar", scope: !10938, file: !3, line: 1796, baseType: !5124, size: 64, offset: 64)
!10942 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !10938, file: !3, line: 1797, baseType: !3286, size: 64, offset: 128)
!10943 = !DIDerivedType(tag: DW_TAG_member, name: "bigger", scope: !10938, file: !3, line: 1798, baseType: !1242, size: 32, offset: 192)
!10944 = !DIDerivedType(tag: DW_TAG_member, name: "smaller", scope: !10938, file: !3, line: 1798, baseType: !1242, size: 32, offset: 224)
!10945 = !DIDerivedType(tag: DW_TAG_member, name: "origval", scope: !10938, file: !3, line: 1798, baseType: !1242, size: 32, offset: 256)
!10946 = !DIDerivedType(tag: DW_TAG_member, name: "origx", scope: !10938, file: !3, line: 1799, baseType: !1242, size: 32, offset: 288)
!10947 = !DIDerivedType(tag: DW_TAG_member, name: "origy", scope: !10938, file: !3, line: 1799, baseType: !1242, size: 32, offset: 320)
!10948 = !DIDerivedType(tag: DW_TAG_member, name: "maxsize", scope: !10938, file: !3, line: 1800, baseType: !1242, size: 32, offset: 352)
!10949 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !10938, file: !3, line: 1801, baseType: !5207, size: 32, offset: 384)
!10950 = !DILocation(line: 1863, column: 19, scope: !10935)
!10951 = !DILocation(line: 1863, column: 25, scope: !10935)
!10952 = !DILocalVariable(name: "maxsize", scope: !10935, file: !3, line: 1864, type: !1242)
!10953 = !DILocation(line: 1864, column: 7, scope: !10935)
!10954 = !DILocation(line: 1866, column: 20, scope: !10935)
!10955 = !DILocation(line: 1866, column: 3, scope: !10935)
!10956 = !DILocation(line: 1866, column: 7, scope: !10935)
!10957 = !DILocation(line: 1866, column: 18, scope: !10935)
!10958 = !DILocation(line: 1868, column: 13, scope: !10935)
!10959 = !DILocation(line: 1868, column: 3, scope: !10935)
!10960 = !DILocation(line: 1868, column: 8, scope: !10935)
!10961 = !DILocation(line: 1868, column: 11, scope: !10935)
!10962 = !DILocation(line: 1869, column: 13, scope: !10935)
!10963 = !DILocation(line: 1869, column: 17, scope: !10935)
!10964 = !DILocation(line: 1869, column: 3, scope: !10935)
!10965 = !DILocation(line: 1869, column: 8, scope: !10935)
!10966 = !DILocation(line: 1869, column: 11, scope: !10935)
!10967 = !DILocation(line: 1870, column: 13, scope: !10935)
!10968 = !DILocation(line: 1870, column: 18, scope: !10935)
!10969 = !DILocation(line: 1870, column: 3, scope: !10935)
!10970 = !DILocation(line: 1870, column: 8, scope: !10935)
!10971 = !DILocation(line: 1870, column: 11, scope: !10935)
!10972 = !DILocation(line: 1871, column: 15, scope: !10935)
!10973 = !DILocation(line: 1871, column: 19, scope: !10935)
!10974 = !DILocation(line: 1871, column: 3, scope: !10935)
!10975 = !DILocation(line: 1871, column: 8, scope: !10935)
!10976 = !DILocation(line: 1871, column: 13, scope: !10935)
!10977 = !DILocation(line: 1872, column: 16, scope: !10935)
!10978 = !DILocation(line: 1872, column: 23, scope: !10935)
!10979 = !DILocation(line: 1872, column: 3, scope: !10935)
!10980 = !DILocation(line: 1872, column: 8, scope: !10935)
!10981 = !DILocation(line: 1872, column: 14, scope: !10935)
!10982 = !DILocation(line: 1873, column: 16, scope: !10935)
!10983 = !DILocation(line: 1873, column: 23, scope: !10935)
!10984 = !DILocation(line: 1873, column: 3, scope: !10935)
!10985 = !DILocation(line: 1873, column: 8, scope: !10935)
!10986 = !DILocation(line: 1873, column: 14, scope: !10935)
!10987 = !DILocation(line: 1874, column: 38, scope: !10935)
!10988 = !DILocation(line: 1874, column: 43, scope: !10935)
!10989 = !DILocation(line: 1874, column: 47, scope: !10935)
!10990 = !DILocation(line: 1874, column: 52, scope: !10935)
!10991 = !DILocation(line: 1874, column: 56, scope: !10935)
!10992 = !DILocation(line: 1874, column: 61, scope: !10935)
!10993 = !DILocation(line: 1874, column: 18, scope: !10935)
!10994 = !DILocation(line: 1874, column: 3, scope: !10935)
!10995 = !DILocation(line: 1874, column: 8, scope: !10935)
!10996 = !DILocation(line: 1874, column: 16, scope: !10935)
!10997 = !DILocation(line: 1877, column: 7, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 1877, column: 7)
!10999 = !DILocation(line: 1877, column: 12, scope: !10998)
!11000 = !DILocation(line: 1877, column: 16, scope: !10998)
!11001 = !DILocation(line: 1877, column: 22, scope: !10998)
!11002 = !DILocation(line: 1877, column: 7, scope: !10935)
!11003 = !DILocation(line: 1878, column: 21, scope: !10998)
!11004 = !DILocation(line: 1878, column: 26, scope: !10998)
!11005 = !DILocation(line: 1878, column: 30, scope: !10998)
!11006 = !DILocation(line: 1878, column: 4, scope: !10998)
!11007 = !DILocation(line: 1878, column: 9, scope: !10998)
!11008 = !DILocation(line: 1878, column: 13, scope: !10998)
!11009 = !DILocation(line: 1878, column: 19, scope: !10998)
!11010 = !DILocation(line: 1879, column: 7, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 1879, column: 7)
!11012 = !DILocation(line: 1879, column: 12, scope: !11011)
!11013 = !DILocation(line: 1879, column: 16, scope: !11011)
!11014 = !DILocation(line: 1879, column: 22, scope: !11011)
!11015 = !DILocation(line: 1879, column: 7, scope: !10935)
!11016 = !DILocation(line: 1880, column: 21, scope: !11011)
!11017 = !DILocation(line: 1880, column: 26, scope: !11011)
!11018 = !DILocation(line: 1880, column: 30, scope: !11011)
!11019 = !DILocation(line: 1880, column: 4, scope: !11011)
!11020 = !DILocation(line: 1880, column: 9, scope: !11011)
!11021 = !DILocation(line: 1880, column: 13, scope: !11011)
!11022 = !DILocation(line: 1880, column: 19, scope: !11011)
!11023 = !DILocation(line: 1883, column: 7, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 1883, column: 7)
!11025 = !DILocation(line: 1883, column: 12, scope: !11024)
!11026 = !DILocation(line: 1883, column: 17, scope: !11024)
!11027 = !DILocation(line: 1883, column: 40, scope: !11024)
!11028 = !DILocation(line: 1883, column: 43, scope: !11024)
!11029 = !DILocation(line: 1883, column: 48, scope: !11024)
!11030 = !DILocation(line: 1883, column: 53, scope: !11024)
!11031 = !DILocation(line: 1883, column: 7, scope: !10935)
!11032 = !DILocation(line: 1884, column: 19, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 1883, column: 77)
!11034 = !DILocation(line: 1884, column: 24, scope: !11033)
!11035 = !DILocation(line: 1884, column: 28, scope: !11033)
!11036 = !DILocation(line: 1884, column: 4, scope: !11033)
!11037 = !DILocation(line: 1884, column: 9, scope: !11033)
!11038 = !DILocation(line: 1884, column: 17, scope: !11033)
!11039 = !DILocation(line: 1885, column: 3, scope: !11033)
!11040 = !DILocation(line: 1887, column: 19, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 1886, column: 8)
!11042 = !DILocation(line: 1887, column: 24, scope: !11041)
!11043 = !DILocation(line: 1887, column: 28, scope: !11041)
!11044 = !DILocation(line: 1887, column: 4, scope: !11041)
!11045 = !DILocation(line: 1887, column: 9, scope: !11041)
!11046 = !DILocation(line: 1887, column: 17, scope: !11041)
!11047 = !DILocation(line: 1891, column: 7, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 1891, column: 7)
!11049 = !DILocation(line: 1891, column: 12, scope: !11048)
!11050 = !DILocation(line: 1891, column: 16, scope: !11048)
!11051 = !DILocation(line: 1891, column: 27, scope: !11048)
!11052 = !DILocation(line: 1891, column: 7, scope: !10935)
!11053 = !DILocation(line: 1892, column: 14, scope: !11048)
!11054 = !DILocation(line: 1892, column: 12, scope: !11048)
!11055 = !DILocation(line: 1892, column: 4, scope: !11048)
!11056 = !DILocation(line: 1894, column: 12, scope: !11048)
!11057 = !DILocation(line: 1896, column: 3, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11059, file: !3, line: 1896, column: 3)
!11059 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 1896, column: 3)
!11060 = !DILocation(line: 1896, column: 3, scope: !11059)
!11061 = !DILocation(line: 1896, column: 3, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11058, file: !3, line: 1896, column: 3)
!11063 = !DILocation(line: 1899, column: 30, scope: !10935)
!11064 = !DILocation(line: 1899, column: 33, scope: !10935)
!11065 = !DILocation(line: 1899, column: 3, scope: !10935)
!11066 = !DILocation(line: 1901, column: 3, scope: !10935)
!11067 = !DILocation(line: 1904, column: 2, scope: !10904)
!11068 = !DILocation(line: 1905, column: 1, scope: !10904)
!11069 = distinct !DISubprogram(name: "region_scale_modal", scope: !3, file: !3, line: 1948, type: !7079, scopeLine: 1949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11070 = !DILocalVariable(name: "C", arg: 1, scope: !11069, file: !3, line: 1948, type: !3734)
!11071 = !DILocation(line: 1948, column: 41, scope: !11069)
!11072 = !DILocalVariable(name: "op", arg: 2, scope: !11069, file: !3, line: 1948, type: !7081)
!11073 = !DILocation(line: 1948, column: 56, scope: !11069)
!11074 = !DILocalVariable(name: "event", arg: 3, scope: !11069, file: !3, line: 1948, type: !6997)
!11075 = !DILocation(line: 1948, column: 75, scope: !11069)
!11076 = !DILocalVariable(name: "rmd", scope: !11069, file: !3, line: 1950, type: !10936)
!11077 = !DILocation(line: 1950, column: 18, scope: !11069)
!11078 = !DILocation(line: 1950, column: 24, scope: !11069)
!11079 = !DILocation(line: 1950, column: 28, scope: !11069)
!11080 = !DILocalVariable(name: "delta", scope: !11069, file: !3, line: 1951, type: !1242)
!11081 = !DILocation(line: 1951, column: 6, scope: !11069)
!11082 = !DILocation(line: 1954, column: 10, scope: !11069)
!11083 = !DILocation(line: 1954, column: 17, scope: !11069)
!11084 = !DILocation(line: 1954, column: 2, scope: !11069)
!11085 = !DILocation(line: 1957, column: 8, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 1957, column: 8)
!11087 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 1954, column: 23)
!11088 = !DILocation(line: 1957, column: 13, scope: !11086)
!11089 = !DILocation(line: 1957, column: 18, scope: !11086)
!11090 = !DILocation(line: 1957, column: 41, scope: !11086)
!11091 = !DILocation(line: 1957, column: 44, scope: !11086)
!11092 = !DILocation(line: 1957, column: 49, scope: !11086)
!11093 = !DILocation(line: 1957, column: 54, scope: !11086)
!11094 = !DILocation(line: 1957, column: 8, scope: !11087)
!11095 = !DILocation(line: 1958, column: 13, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 1957, column: 78)
!11097 = !DILocation(line: 1958, column: 20, scope: !11096)
!11098 = !DILocation(line: 1958, column: 24, scope: !11096)
!11099 = !DILocation(line: 1958, column: 29, scope: !11096)
!11100 = !DILocation(line: 1958, column: 22, scope: !11096)
!11101 = !DILocation(line: 1958, column: 11, scope: !11096)
!11102 = !DILocation(line: 1959, column: 9, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11096, file: !3, line: 1959, column: 9)
!11104 = !DILocation(line: 1959, column: 14, scope: !11103)
!11105 = !DILocation(line: 1959, column: 19, scope: !11103)
!11106 = !DILocation(line: 1959, column: 9, scope: !11096)
!11107 = !DILocation(line: 1959, column: 52, scope: !11103)
!11108 = !DILocation(line: 1959, column: 51, scope: !11103)
!11109 = !DILocation(line: 1959, column: 49, scope: !11103)
!11110 = !DILocation(line: 1959, column: 43, scope: !11103)
!11111 = !DILocation(line: 1962, column: 14, scope: !11096)
!11112 = !DILocation(line: 1962, column: 11, scope: !11096)
!11113 = !DILocation(line: 1964, column: 22, scope: !11096)
!11114 = !DILocation(line: 1964, column: 27, scope: !11096)
!11115 = !DILocation(line: 1964, column: 37, scope: !11096)
!11116 = !DILocation(line: 1964, column: 35, scope: !11096)
!11117 = !DILocation(line: 1964, column: 5, scope: !11096)
!11118 = !DILocation(line: 1964, column: 10, scope: !11096)
!11119 = !DILocation(line: 1964, column: 14, scope: !11096)
!11120 = !DILocation(line: 1964, column: 20, scope: !11096)
!11121 = !DILocation(line: 1965, column: 5, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 1965, column: 5)
!11123 = distinct !DILexicalBlock(scope: !11096, file: !3, line: 1965, column: 5)
!11124 = !DILocation(line: 1965, column: 5, scope: !11123)
!11125 = !DILocation(line: 1965, column: 5, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11122, file: !3, line: 1965, column: 5)
!11127 = !DILocation(line: 1967, column: 9, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11096, file: !3, line: 1967, column: 9)
!11129 = !DILocation(line: 1967, column: 14, scope: !11128)
!11130 = !DILocation(line: 1967, column: 18, scope: !11128)
!11131 = !DILocation(line: 1967, column: 26, scope: !11128)
!11132 = !DILocation(line: 1967, column: 24, scope: !11128)
!11133 = !DILocation(line: 1967, column: 9, scope: !11096)
!11134 = !DILocation(line: 1968, column: 23, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 1967, column: 37)
!11136 = !DILocation(line: 1968, column: 28, scope: !11135)
!11137 = !DILocation(line: 1968, column: 6, scope: !11135)
!11138 = !DILocation(line: 1968, column: 11, scope: !11135)
!11139 = !DILocation(line: 1968, column: 15, scope: !11135)
!11140 = !DILocation(line: 1968, column: 21, scope: !11135)
!11141 = !DILocation(line: 1969, column: 12, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11135, file: !3, line: 1969, column: 10)
!11143 = !DILocation(line: 1969, column: 17, scope: !11142)
!11144 = !DILocation(line: 1969, column: 21, scope: !11142)
!11145 = !DILocation(line: 1969, column: 26, scope: !11142)
!11146 = !DILocation(line: 1969, column: 10, scope: !11135)
!11147 = !DILocation(line: 1970, column: 34, scope: !11142)
!11148 = !DILocation(line: 1970, column: 37, scope: !11142)
!11149 = !DILocation(line: 1970, column: 7, scope: !11142)
!11150 = !DILocation(line: 1971, column: 5, scope: !11135)
!11151 = !DILocation(line: 1972, column: 14, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 1972, column: 14)
!11153 = !DILocation(line: 1972, column: 19, scope: !11152)
!11154 = !DILocation(line: 1972, column: 23, scope: !11152)
!11155 = !DILocation(line: 1972, column: 28, scope: !11152)
!11156 = !DILocation(line: 1972, column: 14, scope: !11128)
!11157 = !DILocation(line: 1973, column: 33, scope: !11152)
!11158 = !DILocation(line: 1973, column: 36, scope: !11152)
!11159 = !DILocation(line: 1973, column: 6, scope: !11152)
!11160 = !DILocation(line: 1974, column: 4, scope: !11096)
!11161 = !DILocalVariable(name: "maxsize", scope: !11162, file: !3, line: 1976, type: !1242)
!11162 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 1975, column: 9)
!11163 = !DILocation(line: 1976, column: 9, scope: !11162)
!11164 = !DILocation(line: 1976, column: 44, scope: !11162)
!11165 = !DILocation(line: 1976, column: 19, scope: !11162)
!11166 = !DILocation(line: 1977, column: 13, scope: !11162)
!11167 = !DILocation(line: 1977, column: 20, scope: !11162)
!11168 = !DILocation(line: 1977, column: 24, scope: !11162)
!11169 = !DILocation(line: 1977, column: 29, scope: !11162)
!11170 = !DILocation(line: 1977, column: 22, scope: !11162)
!11171 = !DILocation(line: 1977, column: 11, scope: !11162)
!11172 = !DILocation(line: 1978, column: 9, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 1978, column: 9)
!11174 = !DILocation(line: 1978, column: 14, scope: !11173)
!11175 = !DILocation(line: 1978, column: 19, scope: !11173)
!11176 = !DILocation(line: 1978, column: 9, scope: !11162)
!11177 = !DILocation(line: 1978, column: 53, scope: !11173)
!11178 = !DILocation(line: 1978, column: 52, scope: !11173)
!11179 = !DILocation(line: 1978, column: 50, scope: !11173)
!11180 = !DILocation(line: 1978, column: 44, scope: !11173)
!11181 = !DILocation(line: 1981, column: 14, scope: !11162)
!11182 = !DILocation(line: 1981, column: 11, scope: !11162)
!11183 = !DILocation(line: 1983, column: 22, scope: !11162)
!11184 = !DILocation(line: 1983, column: 27, scope: !11162)
!11185 = !DILocation(line: 1983, column: 37, scope: !11162)
!11186 = !DILocation(line: 1983, column: 35, scope: !11162)
!11187 = !DILocation(line: 1983, column: 5, scope: !11162)
!11188 = !DILocation(line: 1983, column: 10, scope: !11162)
!11189 = !DILocation(line: 1983, column: 14, scope: !11162)
!11190 = !DILocation(line: 1983, column: 20, scope: !11162)
!11191 = !DILocation(line: 1984, column: 5, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 1984, column: 5)
!11193 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 1984, column: 5)
!11194 = !DILocation(line: 1984, column: 5, scope: !11193)
!11195 = !DILocation(line: 1984, column: 5, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 1984, column: 5)
!11197 = !DILocation(line: 1989, column: 9, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 1989, column: 9)
!11199 = !DILocation(line: 1989, column: 14, scope: !11198)
!11200 = !DILocation(line: 1989, column: 18, scope: !11198)
!11201 = !DILocation(line: 1989, column: 26, scope: !11198)
!11202 = !DILocation(line: 1989, column: 36, scope: !11198)
!11203 = !DILocation(line: 1989, column: 24, scope: !11198)
!11204 = !DILocation(line: 1989, column: 9, scope: !11162)
!11205 = !DILocation(line: 1990, column: 23, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11198, file: !3, line: 1989, column: 41)
!11207 = !DILocation(line: 1990, column: 28, scope: !11206)
!11208 = !DILocation(line: 1990, column: 6, scope: !11206)
!11209 = !DILocation(line: 1990, column: 11, scope: !11206)
!11210 = !DILocation(line: 1990, column: 15, scope: !11206)
!11211 = !DILocation(line: 1990, column: 21, scope: !11206)
!11212 = !DILocation(line: 1991, column: 12, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 1991, column: 10)
!11214 = !DILocation(line: 1991, column: 17, scope: !11213)
!11215 = !DILocation(line: 1991, column: 21, scope: !11213)
!11216 = !DILocation(line: 1991, column: 26, scope: !11213)
!11217 = !DILocation(line: 1991, column: 10, scope: !11206)
!11218 = !DILocation(line: 1992, column: 34, scope: !11213)
!11219 = !DILocation(line: 1992, column: 37, scope: !11213)
!11220 = !DILocation(line: 1992, column: 7, scope: !11213)
!11221 = !DILocation(line: 1993, column: 5, scope: !11206)
!11222 = !DILocation(line: 1994, column: 14, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11198, file: !3, line: 1994, column: 14)
!11224 = !DILocation(line: 1994, column: 22, scope: !11223)
!11225 = !DILocation(line: 1994, column: 26, scope: !11223)
!11226 = !DILocation(line: 1994, column: 30, scope: !11223)
!11227 = !DILocation(line: 1994, column: 35, scope: !11223)
!11228 = !DILocation(line: 1994, column: 39, scope: !11223)
!11229 = !DILocation(line: 1994, column: 47, scope: !11223)
!11230 = !DILocation(line: 1994, column: 45, scope: !11223)
!11231 = !DILocation(line: 1994, column: 14, scope: !11198)
!11232 = !DILocation(line: 1995, column: 23, scope: !11223)
!11233 = !DILocation(line: 1995, column: 6, scope: !11223)
!11234 = !DILocation(line: 1995, column: 11, scope: !11223)
!11235 = !DILocation(line: 1995, column: 15, scope: !11223)
!11236 = !DILocation(line: 1995, column: 21, scope: !11223)
!11237 = !DILocation(line: 1996, column: 14, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11223, file: !3, line: 1996, column: 14)
!11239 = !DILocation(line: 1996, column: 19, scope: !11238)
!11240 = !DILocation(line: 1996, column: 23, scope: !11238)
!11241 = !DILocation(line: 1996, column: 28, scope: !11238)
!11242 = !DILocation(line: 1996, column: 14, scope: !11223)
!11243 = !DILocation(line: 1997, column: 33, scope: !11238)
!11244 = !DILocation(line: 1997, column: 36, scope: !11238)
!11245 = !DILocation(line: 1997, column: 6, scope: !11238)
!11246 = !DILocation(line: 1999, column: 23, scope: !11087)
!11247 = !DILocation(line: 1999, column: 28, scope: !11087)
!11248 = !DILocation(line: 1999, column: 4, scope: !11087)
!11249 = !DILocation(line: 2000, column: 26, scope: !11087)
!11250 = !DILocation(line: 2000, column: 4, scope: !11087)
!11251 = !DILocation(line: 2002, column: 4, scope: !11087)
!11252 = !DILocation(line: 2005, column: 8, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 2005, column: 8)
!11254 = !DILocation(line: 2005, column: 15, scope: !11253)
!11255 = !DILocation(line: 2005, column: 19, scope: !11253)
!11256 = !DILocation(line: 2005, column: 8, scope: !11087)
!11257 = !DILocation(line: 2007, column: 9, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 2007, column: 9)
!11259 = distinct !DILexicalBlock(scope: !11253, file: !3, line: 2005, column: 34)
!11260 = !DILocation(line: 2007, column: 36, scope: !11258)
!11261 = !DILocation(line: 2007, column: 40, scope: !11258)
!11262 = !DILocation(line: 2007, column: 43, scope: !11258)
!11263 = !DILocation(line: 2007, column: 70, scope: !11258)
!11264 = !DILocation(line: 2007, column: 9, scope: !11259)
!11265 = !DILocation(line: 2008, column: 10, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11267, file: !3, line: 2008, column: 10)
!11267 = distinct !DILexicalBlock(scope: !11258, file: !3, line: 2007, column: 75)
!11268 = !DILocation(line: 2008, column: 15, scope: !11266)
!11269 = !DILocation(line: 2008, column: 19, scope: !11266)
!11270 = !DILocation(line: 2008, column: 24, scope: !11266)
!11271 = !DILocation(line: 2008, column: 10, scope: !11267)
!11272 = !DILocation(line: 2009, column: 34, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 2008, column: 43)
!11274 = !DILocation(line: 2009, column: 37, scope: !11273)
!11275 = !DILocation(line: 2009, column: 7, scope: !11273)
!11276 = !DILocation(line: 2010, column: 6, scope: !11273)
!11277 = !DILocation(line: 2011, column: 15, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 2011, column: 15)
!11279 = !DILocation(line: 2011, column: 20, scope: !11278)
!11280 = !DILocation(line: 2011, column: 24, scope: !11278)
!11281 = !DILocation(line: 2011, column: 29, scope: !11278)
!11282 = !DILocation(line: 2011, column: 15, scope: !11266)
!11283 = !DILocation(line: 2012, column: 34, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 2011, column: 51)
!11285 = !DILocation(line: 2012, column: 7, scope: !11284)
!11286 = !DILocation(line: 2013, column: 6, scope: !11284)
!11287 = !DILocation(line: 2015, column: 25, scope: !11267)
!11288 = !DILocation(line: 2015, column: 30, scope: !11267)
!11289 = !DILocation(line: 2015, column: 6, scope: !11267)
!11290 = !DILocation(line: 2016, column: 28, scope: !11267)
!11291 = !DILocation(line: 2016, column: 6, scope: !11267)
!11292 = !DILocation(line: 2017, column: 5, scope: !11267)
!11293 = !DILocation(line: 2018, column: 5, scope: !11259)
!11294 = !DILocation(line: 2018, column: 15, scope: !11259)
!11295 = !DILocation(line: 2018, column: 19, scope: !11259)
!11296 = !DILocation(line: 2019, column: 5, scope: !11259)
!11297 = !DILocation(line: 2019, column: 9, scope: !11259)
!11298 = !DILocation(line: 2019, column: 20, scope: !11259)
!11299 = !DILocation(line: 2021, column: 5, scope: !11259)
!11300 = !DILocation(line: 2023, column: 4, scope: !11087)
!11301 = !DILocation(line: 2026, column: 4, scope: !11087)
!11302 = !DILocation(line: 2029, column: 2, scope: !11069)
!11303 = !DILocation(line: 2030, column: 1, scope: !11069)
!11304 = distinct !DISubprogram(name: "region_scale_cancel", scope: !3, file: !3, line: 2032, type: !7357, scopeLine: 2033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11305 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !11304, file: !3, line: 2032, type: !3734)
!11306 = !DILocation(line: 2032, column: 43, scope: !11304)
!11307 = !DILocalVariable(name: "op", arg: 2, scope: !11304, file: !3, line: 2032, type: !7081)
!11308 = !DILocation(line: 2032, column: 66, scope: !11304)
!11309 = !DILocation(line: 2034, column: 2, scope: !11304)
!11310 = !DILocation(line: 2034, column: 12, scope: !11304)
!11311 = !DILocation(line: 2034, column: 16, scope: !11304)
!11312 = !DILocation(line: 2035, column: 2, scope: !11304)
!11313 = !DILocation(line: 2035, column: 6, scope: !11304)
!11314 = !DILocation(line: 2035, column: 17, scope: !11304)
!11315 = !DILocation(line: 2036, column: 1, scope: !11304)
!11316 = distinct !DISubprogram(name: "area_max_regionsize", scope: !3, file: !3, line: 1806, type: !11317, scopeLine: 1807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11317 = !DISubroutineType(types: !11318)
!11318 = !{!1242, !3286, !5124, !5207}
!11319 = !DILocalVariable(name: "sa", arg: 1, scope: !11316, file: !3, line: 1806, type: !3286)
!11320 = !DILocation(line: 1806, column: 41, scope: !11316)
!11321 = !DILocalVariable(name: "scalear", arg: 2, scope: !11316, file: !3, line: 1806, type: !5124)
!11322 = !DILocation(line: 1806, column: 54, scope: !11316)
!11323 = !DILocalVariable(name: "edge", arg: 3, scope: !11316, file: !3, line: 1806, type: !5207)
!11324 = !DILocation(line: 1806, column: 70, scope: !11316)
!11325 = !DILocalVariable(name: "ar", scope: !11316, file: !3, line: 1808, type: !5124)
!11326 = !DILocation(line: 1808, column: 11, scope: !11316)
!11327 = !DILocalVariable(name: "dist", scope: !11316, file: !3, line: 1809, type: !1242)
!11328 = !DILocation(line: 1809, column: 6, scope: !11316)
!11329 = !DILocation(line: 1811, column: 6, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11316, file: !3, line: 1811, column: 6)
!11331 = !DILocation(line: 1811, column: 11, scope: !11330)
!11332 = !DILocation(line: 1811, column: 34, scope: !11330)
!11333 = !DILocation(line: 1811, column: 37, scope: !11330)
!11334 = !DILocation(line: 1811, column: 42, scope: !11330)
!11335 = !DILocation(line: 1811, column: 6, scope: !11316)
!11336 = !DILocation(line: 1812, column: 27, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 1811, column: 66)
!11338 = !DILocation(line: 1812, column: 31, scope: !11337)
!11339 = !DILocation(line: 1812, column: 10, scope: !11337)
!11340 = !DILocation(line: 1812, column: 8, scope: !11337)
!11341 = !DILocation(line: 1813, column: 2, scope: !11337)
!11342 = !DILocation(line: 1815, column: 27, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 1814, column: 7)
!11344 = !DILocation(line: 1815, column: 31, scope: !11343)
!11345 = !DILocation(line: 1815, column: 10, scope: !11343)
!11346 = !DILocation(line: 1815, column: 8, scope: !11343)
!11347 = !DILocation(line: 1820, column: 12, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11316, file: !3, line: 1820, column: 2)
!11349 = !DILocation(line: 1820, column: 16, scope: !11348)
!11350 = !DILocation(line: 1820, column: 27, scope: !11348)
!11351 = !DILocation(line: 1820, column: 10, scope: !11348)
!11352 = !DILocation(line: 1820, column: 7, scope: !11348)
!11353 = !DILocation(line: 1820, column: 34, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11348, file: !3, line: 1820, column: 2)
!11355 = !DILocation(line: 1820, column: 2, scope: !11348)
!11356 = !DILocation(line: 1821, column: 7, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !3, line: 1821, column: 7)
!11358 = distinct !DILexicalBlock(scope: !11354, file: !3, line: 1820, column: 53)
!11359 = !DILocation(line: 1821, column: 13, scope: !11357)
!11360 = !DILocation(line: 1821, column: 10, scope: !11357)
!11361 = !DILocation(line: 1821, column: 7, scope: !11358)
!11362 = !DILocation(line: 1822, column: 4, scope: !11357)
!11363 = !DILocation(line: 1824, column: 7, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11358, file: !3, line: 1824, column: 7)
!11365 = !DILocation(line: 1824, column: 16, scope: !11364)
!11366 = !DILocation(line: 1824, column: 26, scope: !11364)
!11367 = !DILocation(line: 1824, column: 43, scope: !11364)
!11368 = !DILocation(line: 1824, column: 46, scope: !11364)
!11369 = !DILocation(line: 1824, column: 50, scope: !11364)
!11370 = !DILocation(line: 1824, column: 60, scope: !11364)
!11371 = !DILocation(line: 1824, column: 7, scope: !11358)
!11372 = !DILocation(line: 1825, column: 12, scope: !11364)
!11373 = !DILocation(line: 1825, column: 16, scope: !11364)
!11374 = !DILocation(line: 1825, column: 9, scope: !11364)
!11375 = !DILocation(line: 1825, column: 4, scope: !11364)
!11376 = !DILocation(line: 1826, column: 12, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11364, file: !3, line: 1826, column: 12)
!11378 = !DILocation(line: 1826, column: 21, scope: !11377)
!11379 = !DILocation(line: 1826, column: 31, scope: !11377)
!11380 = !DILocation(line: 1826, column: 51, scope: !11377)
!11381 = !DILocation(line: 1826, column: 54, scope: !11377)
!11382 = !DILocation(line: 1826, column: 58, scope: !11377)
!11383 = !DILocation(line: 1826, column: 68, scope: !11377)
!11384 = !DILocation(line: 1826, column: 12, scope: !11364)
!11385 = !DILocation(line: 1827, column: 12, scope: !11377)
!11386 = !DILocation(line: 1827, column: 16, scope: !11377)
!11387 = !DILocation(line: 1827, column: 9, scope: !11377)
!11388 = !DILocation(line: 1827, column: 4, scope: !11377)
!11389 = !DILocation(line: 1828, column: 12, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 1828, column: 12)
!11391 = !DILocation(line: 1828, column: 21, scope: !11390)
!11392 = !DILocation(line: 1828, column: 31, scope: !11390)
!11393 = !DILocation(line: 1828, column: 49, scope: !11390)
!11394 = !DILocation(line: 1828, column: 52, scope: !11390)
!11395 = !DILocation(line: 1828, column: 56, scope: !11390)
!11396 = !DILocation(line: 1828, column: 66, scope: !11390)
!11397 = !DILocation(line: 1828, column: 12, scope: !11377)
!11398 = !DILocation(line: 1829, column: 12, scope: !11390)
!11399 = !DILocation(line: 1829, column: 16, scope: !11390)
!11400 = !DILocation(line: 1829, column: 9, scope: !11390)
!11401 = !DILocation(line: 1829, column: 4, scope: !11390)
!11402 = !DILocation(line: 1830, column: 12, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 1830, column: 12)
!11404 = !DILocation(line: 1830, column: 21, scope: !11403)
!11405 = !DILocation(line: 1830, column: 31, scope: !11403)
!11406 = !DILocation(line: 1830, column: 50, scope: !11403)
!11407 = !DILocation(line: 1830, column: 53, scope: !11403)
!11408 = !DILocation(line: 1830, column: 57, scope: !11403)
!11409 = !DILocation(line: 1830, column: 67, scope: !11403)
!11410 = !DILocation(line: 1830, column: 12, scope: !11390)
!11411 = !DILocation(line: 1831, column: 12, scope: !11403)
!11412 = !DILocation(line: 1831, column: 16, scope: !11403)
!11413 = !DILocation(line: 1831, column: 9, scope: !11403)
!11414 = !DILocation(line: 1831, column: 4, scope: !11403)
!11415 = !DILocation(line: 1835, column: 12, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11403, file: !3, line: 1835, column: 12)
!11417 = !DILocation(line: 1835, column: 17, scope: !11416)
!11418 = !DILocation(line: 1835, column: 41, scope: !11416)
!11419 = !DILocation(line: 1835, column: 44, scope: !11416)
!11420 = !DILocation(line: 1835, column: 53, scope: !11416)
!11421 = !DILocation(line: 1835, column: 63, scope: !11416)
!11422 = !DILocation(line: 1835, column: 79, scope: !11416)
!11423 = !DILocation(line: 1836, column: 12, scope: !11416)
!11424 = !DILocation(line: 1836, column: 16, scope: !11416)
!11425 = !DILocation(line: 1836, column: 26, scope: !11416)
!11426 = !DILocation(line: 1836, column: 43, scope: !11416)
!11427 = !DILocation(line: 1836, column: 46, scope: !11416)
!11428 = !DILocation(line: 1836, column: 50, scope: !11416)
!11429 = !DILocation(line: 1836, column: 61, scope: !11416)
!11430 = !DILocation(line: 1835, column: 12, scope: !11403)
!11431 = !DILocation(line: 1838, column: 12, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 1837, column: 3)
!11433 = !DILocation(line: 1838, column: 16, scope: !11432)
!11434 = !DILocation(line: 1838, column: 9, scope: !11432)
!11435 = !DILocation(line: 1839, column: 3, scope: !11432)
!11436 = !DILocation(line: 1840, column: 12, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 1840, column: 12)
!11438 = !DILocation(line: 1840, column: 17, scope: !11437)
!11439 = !DILocation(line: 1840, column: 42, scope: !11437)
!11440 = !DILocation(line: 1840, column: 45, scope: !11437)
!11441 = !DILocation(line: 1840, column: 54, scope: !11437)
!11442 = !DILocation(line: 1840, column: 64, scope: !11437)
!11443 = !DILocation(line: 1840, column: 83, scope: !11437)
!11444 = !DILocation(line: 1841, column: 12, scope: !11437)
!11445 = !DILocation(line: 1841, column: 16, scope: !11437)
!11446 = !DILocation(line: 1841, column: 26, scope: !11437)
!11447 = !DILocation(line: 1841, column: 46, scope: !11437)
!11448 = !DILocation(line: 1841, column: 49, scope: !11437)
!11449 = !DILocation(line: 1841, column: 53, scope: !11437)
!11450 = !DILocation(line: 1841, column: 64, scope: !11437)
!11451 = !DILocation(line: 1840, column: 12, scope: !11416)
!11452 = !DILocation(line: 1843, column: 12, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11437, file: !3, line: 1842, column: 3)
!11454 = !DILocation(line: 1843, column: 16, scope: !11453)
!11455 = !DILocation(line: 1843, column: 9, scope: !11453)
!11456 = !DILocation(line: 1844, column: 3, scope: !11453)
!11457 = !DILocation(line: 1845, column: 2, scope: !11358)
!11458 = !DILocation(line: 1820, column: 43, scope: !11354)
!11459 = !DILocation(line: 1820, column: 47, scope: !11354)
!11460 = !DILocation(line: 1820, column: 41, scope: !11354)
!11461 = !DILocation(line: 1820, column: 2, scope: !11354)
!11462 = distinct !{!11462, !11355, !11463}
!11463 = !DILocation(line: 1845, column: 2, scope: !11348)
!11464 = !DILocation(line: 1847, column: 9, scope: !11316)
!11465 = !DILocation(line: 1847, column: 2, scope: !11316)
!11466 = distinct !DISubprogram(name: "region_scale_toggle_hidden", scope: !3, file: !3, line: 1942, type: !11467, scopeLine: 1943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11467 = !DISubroutineType(types: !11468)
!11468 = !{null, !3734, !10936}
!11469 = !DILocalVariable(name: "C", arg: 1, scope: !11466, file: !3, line: 1942, type: !3734)
!11470 = !DILocation(line: 1942, column: 50, scope: !11466)
!11471 = !DILocalVariable(name: "rmd", arg: 2, scope: !11466, file: !3, line: 1942, type: !10936)
!11472 = !DILocation(line: 1942, column: 69, scope: !11466)
!11473 = !DILocation(line: 1944, column: 23, scope: !11466)
!11474 = !DILocation(line: 1944, column: 26, scope: !11466)
!11475 = !DILocation(line: 1944, column: 31, scope: !11466)
!11476 = !DILocation(line: 1944, column: 2, scope: !11466)
!11477 = !DILocation(line: 1945, column: 29, scope: !11466)
!11478 = !DILocation(line: 1945, column: 2, scope: !11466)
!11479 = !DILocation(line: 1946, column: 1, scope: !11466)
!11480 = distinct !DISubprogram(name: "region_scale_get_maxsize", scope: !3, file: !3, line: 1907, type: !11481, scopeLine: 1908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11481 = !DISubroutineType(types: !11482)
!11482 = !{!1242, !10936}
!11483 = !DILocalVariable(name: "rmd", arg: 1, scope: !11480, file: !3, line: 1907, type: !10936)
!11484 = !DILocation(line: 1907, column: 53, scope: !11480)
!11485 = !DILocalVariable(name: "maxsize", scope: !11480, file: !3, line: 1909, type: !1242)
!11486 = !DILocation(line: 1909, column: 6, scope: !11480)
!11487 = !DILocation(line: 1911, column: 6, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11480, file: !3, line: 1911, column: 6)
!11489 = !DILocation(line: 1911, column: 11, scope: !11488)
!11490 = !DILocation(line: 1911, column: 16, scope: !11488)
!11491 = !DILocation(line: 1911, column: 39, scope: !11488)
!11492 = !DILocation(line: 1911, column: 42, scope: !11488)
!11493 = !DILocation(line: 1911, column: 47, scope: !11488)
!11494 = !DILocation(line: 1911, column: 52, scope: !11488)
!11495 = !DILocation(line: 1911, column: 6, scope: !11480)
!11496 = !DILocation(line: 1912, column: 20, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 1911, column: 76)
!11498 = !DILocation(line: 1912, column: 25, scope: !11497)
!11499 = !DILocation(line: 1912, column: 29, scope: !11497)
!11500 = !DILocation(line: 1912, column: 36, scope: !11497)
!11501 = !DILocation(line: 1912, column: 34, scope: !11497)
!11502 = !DILocation(line: 1912, column: 50, scope: !11497)
!11503 = !DILocation(line: 1912, column: 48, scope: !11497)
!11504 = !DILocation(line: 1912, column: 11, scope: !11497)
!11505 = !DILocation(line: 1912, column: 3, scope: !11497)
!11506 = !DILocation(line: 1915, column: 6, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11480, file: !3, line: 1915, column: 6)
!11508 = !DILocation(line: 1915, column: 11, scope: !11507)
!11509 = !DILocation(line: 1915, column: 15, scope: !11507)
!11510 = !DILocation(line: 1915, column: 26, scope: !11507)
!11511 = !DILocation(line: 1915, column: 6, scope: !11480)
!11512 = !DILocation(line: 1918, column: 13, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 1915, column: 50)
!11514 = !DILocation(line: 1918, column: 18, scope: !11513)
!11515 = !DILocation(line: 1918, column: 30, scope: !11513)
!11516 = !DILocation(line: 1918, column: 35, scope: !11513)
!11517 = !DILocation(line: 1918, column: 39, scope: !11513)
!11518 = !DILocation(line: 1918, column: 50, scope: !11513)
!11519 = !DILocation(line: 1918, column: 29, scope: !11513)
!11520 = !DILocation(line: 1918, column: 66, scope: !11513)
!11521 = !DILocation(line: 1918, column: 76, scope: !11513)
!11522 = !DILocation(line: 1918, column: 82, scope: !11513)
!11523 = !DILocation(line: 1918, column: 26, scope: !11513)
!11524 = !DILocation(line: 1918, column: 96, scope: !11513)
!11525 = !DILocation(line: 1918, column: 106, scope: !11513)
!11526 = !DILocation(line: 1918, column: 93, scope: !11513)
!11527 = !DILocation(line: 1918, column: 11, scope: !11513)
!11528 = !DILocation(line: 1919, column: 2, scope: !11513)
!11529 = !DILocation(line: 1921, column: 9, scope: !11480)
!11530 = !DILocation(line: 1921, column: 2, scope: !11480)
!11531 = !DILocation(line: 1922, column: 1, scope: !11480)
!11532 = distinct !DISubprogram(name: "region_scale_validate_size", scope: !3, file: !3, line: 1924, type: !11533, scopeLine: 1925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11533 = !DISubroutineType(types: !11534)
!11534 = !{null, !10936}
!11535 = !DILocalVariable(name: "rmd", arg: 1, scope: !11532, file: !3, line: 1924, type: !10936)
!11536 = !DILocation(line: 1924, column: 56, scope: !11532)
!11537 = !DILocation(line: 1926, column: 7, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11532, file: !3, line: 1926, column: 6)
!11539 = !DILocation(line: 1926, column: 12, scope: !11538)
!11540 = !DILocation(line: 1926, column: 16, scope: !11538)
!11541 = !DILocation(line: 1926, column: 21, scope: !11538)
!11542 = !DILocation(line: 1926, column: 40, scope: !11538)
!11543 = !DILocation(line: 1926, column: 6, scope: !11532)
!11544 = !DILocalVariable(name: "size", scope: !11545, file: !3, line: 1927, type: !11546)
!11545 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 1926, column: 46)
!11546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!11547 = !DILocation(line: 1927, column: 10, scope: !11545)
!11548 = !DILocalVariable(name: "maxsize", scope: !11545, file: !3, line: 1927, type: !1410)
!11549 = !DILocation(line: 1927, column: 16, scope: !11545)
!11550 = !DILocation(line: 1930, column: 7, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 1930, column: 7)
!11552 = !DILocation(line: 1930, column: 12, scope: !11551)
!11553 = !DILocation(line: 1930, column: 17, scope: !11551)
!11554 = !DILocation(line: 1930, column: 40, scope: !11551)
!11555 = !DILocation(line: 1930, column: 43, scope: !11551)
!11556 = !DILocation(line: 1930, column: 48, scope: !11551)
!11557 = !DILocation(line: 1930, column: 53, scope: !11551)
!11558 = !DILocation(line: 1930, column: 7, scope: !11545)
!11559 = !DILocation(line: 1931, column: 12, scope: !11551)
!11560 = !DILocation(line: 1931, column: 17, scope: !11551)
!11561 = !DILocation(line: 1931, column: 21, scope: !11551)
!11562 = !DILocation(line: 1931, column: 9, scope: !11551)
!11563 = !DILocation(line: 1931, column: 4, scope: !11551)
!11564 = !DILocation(line: 1933, column: 12, scope: !11551)
!11565 = !DILocation(line: 1933, column: 17, scope: !11551)
!11566 = !DILocation(line: 1933, column: 21, scope: !11551)
!11567 = !DILocation(line: 1933, column: 9, scope: !11551)
!11568 = !DILocation(line: 1935, column: 38, scope: !11545)
!11569 = !DILocation(line: 1935, column: 13, scope: !11545)
!11570 = !DILocation(line: 1935, column: 11, scope: !11545)
!11571 = !DILocation(line: 1937, column: 8, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 1937, column: 7)
!11573 = !DILocation(line: 1937, column: 7, scope: !11572)
!11574 = !DILocation(line: 1937, column: 15, scope: !11572)
!11575 = !DILocation(line: 1937, column: 13, scope: !11572)
!11576 = !DILocation(line: 1937, column: 23, scope: !11572)
!11577 = !DILocation(line: 1937, column: 26, scope: !11572)
!11578 = !DILocation(line: 1937, column: 34, scope: !11572)
!11579 = !DILocation(line: 1937, column: 7, scope: !11545)
!11580 = !DILocation(line: 1938, column: 12, scope: !11572)
!11581 = !DILocation(line: 1938, column: 5, scope: !11572)
!11582 = !DILocation(line: 1938, column: 10, scope: !11572)
!11583 = !DILocation(line: 1938, column: 4, scope: !11572)
!11584 = !DILocation(line: 1939, column: 2, scope: !11545)
!11585 = !DILocation(line: 1940, column: 1, scope: !11532)
!11586 = distinct !DISubprogram(name: "region_flip_exec", scope: !3, file: !3, line: 3086, type: !7473, scopeLine: 3087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11587 = !DILocalVariable(name: "C", arg: 1, scope: !11586, file: !3, line: 3086, type: !3734)
!11588 = !DILocation(line: 3086, column: 39, scope: !11586)
!11589 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11586, file: !3, line: 3086, type: !7081)
!11590 = !DILocation(line: 3086, column: 54, scope: !11586)
!11591 = !DILocalVariable(name: "ar", scope: !11586, file: !3, line: 3088, type: !5124)
!11592 = !DILocation(line: 3088, column: 11, scope: !11586)
!11593 = !DILocation(line: 3088, column: 30, scope: !11586)
!11594 = !DILocation(line: 3088, column: 16, scope: !11586)
!11595 = !DILocation(line: 3090, column: 7, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 3090, column: 6)
!11597 = !DILocation(line: 3090, column: 6, scope: !11586)
!11598 = !DILocation(line: 3091, column: 3, scope: !11596)
!11599 = !DILocation(line: 3093, column: 6, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 3093, column: 6)
!11601 = !DILocation(line: 3093, column: 10, scope: !11600)
!11602 = !DILocation(line: 3093, column: 20, scope: !11600)
!11603 = !DILocation(line: 3093, column: 6, scope: !11586)
!11604 = !DILocation(line: 3094, column: 3, scope: !11600)
!11605 = !DILocation(line: 3094, column: 7, scope: !11600)
!11606 = !DILocation(line: 3094, column: 17, scope: !11600)
!11607 = !DILocation(line: 3095, column: 11, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11600, file: !3, line: 3095, column: 11)
!11609 = !DILocation(line: 3095, column: 15, scope: !11608)
!11610 = !DILocation(line: 3095, column: 25, scope: !11608)
!11611 = !DILocation(line: 3095, column: 11, scope: !11600)
!11612 = !DILocation(line: 3096, column: 3, scope: !11608)
!11613 = !DILocation(line: 3096, column: 7, scope: !11608)
!11614 = !DILocation(line: 3096, column: 17, scope: !11608)
!11615 = !DILocation(line: 3097, column: 11, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11608, file: !3, line: 3097, column: 11)
!11617 = !DILocation(line: 3097, column: 15, scope: !11616)
!11618 = !DILocation(line: 3097, column: 25, scope: !11616)
!11619 = !DILocation(line: 3097, column: 11, scope: !11608)
!11620 = !DILocation(line: 3098, column: 3, scope: !11616)
!11621 = !DILocation(line: 3098, column: 7, scope: !11616)
!11622 = !DILocation(line: 3098, column: 17, scope: !11616)
!11623 = !DILocation(line: 3099, column: 11, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 3099, column: 11)
!11625 = !DILocation(line: 3099, column: 15, scope: !11624)
!11626 = !DILocation(line: 3099, column: 25, scope: !11624)
!11627 = !DILocation(line: 3099, column: 11, scope: !11616)
!11628 = !DILocation(line: 3100, column: 3, scope: !11624)
!11629 = !DILocation(line: 3100, column: 7, scope: !11624)
!11630 = !DILocation(line: 3100, column: 17, scope: !11624)
!11631 = !DILocation(line: 3102, column: 33, scope: !11586)
!11632 = !DILocation(line: 3102, column: 21, scope: !11586)
!11633 = !DILocation(line: 3102, column: 2, scope: !11586)
!11634 = !DILocation(line: 3103, column: 24, scope: !11586)
!11635 = !DILocation(line: 3103, column: 2, scope: !11586)
!11636 = !DILocation(line: 3105, column: 2, scope: !11586)
!11637 = !DILocation(line: 3106, column: 1, scope: !11586)
!11638 = distinct !DISubprogram(name: "header_flip_exec", scope: !3, file: !3, line: 3154, type: !7473, scopeLine: 3155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11639 = !DILocalVariable(name: "C", arg: 1, scope: !11638, file: !3, line: 3154, type: !3734)
!11640 = !DILocation(line: 3154, column: 39, scope: !11638)
!11641 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11638, file: !3, line: 3154, type: !7081)
!11642 = !DILocation(line: 3154, column: 54, scope: !11638)
!11643 = !DILocalVariable(name: "ar", scope: !11638, file: !3, line: 3156, type: !5124)
!11644 = !DILocation(line: 3156, column: 11, scope: !11638)
!11645 = !DILocation(line: 3156, column: 40, scope: !11638)
!11646 = !DILocation(line: 3156, column: 16, scope: !11638)
!11647 = !DILocation(line: 3158, column: 6, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 3158, column: 6)
!11649 = !DILocation(line: 3158, column: 9, scope: !11648)
!11650 = !DILocation(line: 3158, column: 6, scope: !11638)
!11651 = !DILocation(line: 3159, column: 3, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 3158, column: 18)
!11653 = !DILocation(line: 3163, column: 6, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 3163, column: 6)
!11655 = !DILocation(line: 3163, column: 10, scope: !11654)
!11656 = !DILocation(line: 3163, column: 20, scope: !11654)
!11657 = !DILocation(line: 3163, column: 6, scope: !11638)
!11658 = !DILocation(line: 3164, column: 3, scope: !11654)
!11659 = !DILocation(line: 3164, column: 7, scope: !11654)
!11660 = !DILocation(line: 3164, column: 17, scope: !11654)
!11661 = !DILocation(line: 3165, column: 11, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11654, file: !3, line: 3165, column: 11)
!11663 = !DILocation(line: 3165, column: 15, scope: !11662)
!11664 = !DILocation(line: 3165, column: 25, scope: !11662)
!11665 = !DILocation(line: 3165, column: 11, scope: !11654)
!11666 = !DILocation(line: 3166, column: 3, scope: !11662)
!11667 = !DILocation(line: 3166, column: 7, scope: !11662)
!11668 = !DILocation(line: 3166, column: 17, scope: !11662)
!11669 = !DILocation(line: 3167, column: 11, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11662, file: !3, line: 3167, column: 11)
!11671 = !DILocation(line: 3167, column: 15, scope: !11670)
!11672 = !DILocation(line: 3167, column: 25, scope: !11670)
!11673 = !DILocation(line: 3167, column: 11, scope: !11662)
!11674 = !DILocation(line: 3168, column: 3, scope: !11670)
!11675 = !DILocation(line: 3168, column: 7, scope: !11670)
!11676 = !DILocation(line: 3168, column: 17, scope: !11670)
!11677 = !DILocation(line: 3169, column: 11, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11670, file: !3, line: 3169, column: 11)
!11679 = !DILocation(line: 3169, column: 15, scope: !11678)
!11680 = !DILocation(line: 3169, column: 25, scope: !11678)
!11681 = !DILocation(line: 3169, column: 11, scope: !11670)
!11682 = !DILocation(line: 3170, column: 3, scope: !11678)
!11683 = !DILocation(line: 3170, column: 7, scope: !11678)
!11684 = !DILocation(line: 3170, column: 17, scope: !11678)
!11685 = !DILocation(line: 3172, column: 33, scope: !11638)
!11686 = !DILocation(line: 3172, column: 21, scope: !11638)
!11687 = !DILocation(line: 3172, column: 2, scope: !11638)
!11688 = !DILocation(line: 3174, column: 24, scope: !11638)
!11689 = !DILocation(line: 3174, column: 2, scope: !11638)
!11690 = !DILocation(line: 3176, column: 2, scope: !11638)
!11691 = !DILocation(line: 3177, column: 1, scope: !11638)
!11692 = distinct !DISubprogram(name: "screen_find_region_type", scope: !3, file: !3, line: 139, type: !11693, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11693 = !DISubroutineType(types: !11694)
!11694 = !{!5124, !3734, !1242}
!11695 = !DILocalVariable(name: "C", arg: 1, scope: !11692, file: !3, line: 139, type: !3734)
!11696 = !DILocation(line: 139, column: 51, scope: !11692)
!11697 = !DILocalVariable(name: "type", arg: 2, scope: !11692, file: !3, line: 139, type: !1242)
!11698 = !DILocation(line: 139, column: 58, scope: !11692)
!11699 = !DILocalVariable(name: "ar", scope: !11692, file: !3, line: 141, type: !5124)
!11700 = !DILocation(line: 141, column: 11, scope: !11692)
!11701 = !DILocation(line: 141, column: 30, scope: !11692)
!11702 = !DILocation(line: 141, column: 16, scope: !11692)
!11703 = !DILocation(line: 146, column: 7, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 146, column: 6)
!11705 = !DILocation(line: 146, column: 10, scope: !11704)
!11706 = !DILocation(line: 146, column: 19, scope: !11704)
!11707 = !DILocation(line: 146, column: 23, scope: !11704)
!11708 = !DILocation(line: 146, column: 27, scope: !11704)
!11709 = !DILocation(line: 146, column: 41, scope: !11704)
!11710 = !DILocation(line: 146, column: 38, scope: !11704)
!11711 = !DILocation(line: 146, column: 6, scope: !11692)
!11712 = !DILocalVariable(name: "sa", scope: !11713, file: !3, line: 147, type: !3286)
!11713 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 146, column: 48)
!11714 = !DILocation(line: 147, column: 12, scope: !11713)
!11715 = !DILocation(line: 147, column: 29, scope: !11713)
!11716 = !DILocation(line: 147, column: 17, scope: !11713)
!11717 = !DILocation(line: 148, column: 34, scope: !11713)
!11718 = !DILocation(line: 148, column: 38, scope: !11713)
!11719 = !DILocation(line: 148, column: 8, scope: !11713)
!11720 = !DILocation(line: 148, column: 6, scope: !11713)
!11721 = !DILocation(line: 149, column: 2, scope: !11713)
!11722 = !DILocation(line: 151, column: 6, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 150, column: 7)
!11724 = !DILocation(line: 154, column: 9, scope: !11692)
!11725 = !DILocation(line: 154, column: 2, scope: !11692)
!11726 = distinct !DISubprogram(name: "header_exec", scope: !3, file: !3, line: 3123, type: !7473, scopeLine: 3124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11727 = !DILocalVariable(name: "C", arg: 1, scope: !11726, file: !3, line: 3123, type: !3734)
!11728 = !DILocation(line: 3123, column: 34, scope: !11726)
!11729 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11726, file: !3, line: 3123, type: !7081)
!11730 = !DILocation(line: 3123, column: 49, scope: !11726)
!11731 = !DILocalVariable(name: "ar", scope: !11726, file: !3, line: 3125, type: !5124)
!11732 = !DILocation(line: 3125, column: 11, scope: !11726)
!11733 = !DILocation(line: 3125, column: 40, scope: !11726)
!11734 = !DILocation(line: 3125, column: 16, scope: !11726)
!11735 = !DILocation(line: 3127, column: 6, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 3127, column: 6)
!11737 = !DILocation(line: 3127, column: 9, scope: !11736)
!11738 = !DILocation(line: 3127, column: 6, scope: !11726)
!11739 = !DILocation(line: 3128, column: 3, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 3127, column: 18)
!11741 = !DILocation(line: 3131, column: 2, scope: !11726)
!11742 = !DILocation(line: 3131, column: 6, scope: !11726)
!11743 = !DILocation(line: 3131, column: 11, scope: !11726)
!11744 = !DILocation(line: 3133, column: 33, scope: !11726)
!11745 = !DILocation(line: 3133, column: 21, scope: !11726)
!11746 = !DILocation(line: 3133, column: 2, scope: !11726)
!11747 = !DILocation(line: 3135, column: 24, scope: !11726)
!11748 = !DILocation(line: 3135, column: 2, scope: !11726)
!11749 = !DILocation(line: 3137, column: 2, scope: !11726)
!11750 = !DILocation(line: 3138, column: 1, scope: !11726)
!11751 = distinct !DISubprogram(name: "header_toggle_menus_exec", scope: !3, file: !3, line: 3199, type: !7473, scopeLine: 3200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11752 = !DILocalVariable(name: "C", arg: 1, scope: !11751, file: !3, line: 3199, type: !3734)
!11753 = !DILocation(line: 3199, column: 47, scope: !11751)
!11754 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11751, file: !3, line: 3199, type: !7081)
!11755 = !DILocation(line: 3199, column: 62, scope: !11751)
!11756 = !DILocalVariable(name: "sa", scope: !11751, file: !3, line: 3201, type: !3286)
!11757 = !DILocation(line: 3201, column: 11, scope: !11751)
!11758 = !DILocation(line: 3201, column: 28, scope: !11751)
!11759 = !DILocation(line: 3201, column: 16, scope: !11751)
!11760 = !DILocation(line: 3203, column: 13, scope: !11751)
!11761 = !DILocation(line: 3203, column: 17, scope: !11751)
!11762 = !DILocation(line: 3203, column: 22, scope: !11751)
!11763 = !DILocation(line: 3203, column: 2, scope: !11751)
!11764 = !DILocation(line: 3203, column: 6, scope: !11751)
!11765 = !DILocation(line: 3203, column: 11, scope: !11751)
!11766 = !DILocation(line: 3205, column: 21, scope: !11751)
!11767 = !DILocation(line: 3205, column: 2, scope: !11751)
!11768 = !DILocation(line: 3206, column: 24, scope: !11751)
!11769 = !DILocation(line: 3206, column: 2, scope: !11751)
!11770 = !DILocation(line: 3208, column: 2, scope: !11751)
!11771 = distinct !DISubprogram(name: "header_toolbox_invoke", scope: !3, file: !3, line: 3253, type: !7079, scopeLine: 3254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11772 = !DILocalVariable(name: "C", arg: 1, scope: !11771, file: !3, line: 3253, type: !3734)
!11773 = !DILocation(line: 3253, column: 44, scope: !11771)
!11774 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11771, file: !3, line: 3253, type: !7081)
!11775 = !DILocation(line: 3253, column: 59, scope: !11771)
!11776 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !11771, file: !3, line: 3253, type: !6997)
!11777 = !DILocation(line: 3253, column: 86, scope: !11771)
!11778 = !DILocalVariable(name: "pup", scope: !11771, file: !3, line: 3255, type: !7506)
!11779 = !DILocation(line: 3255, column: 15, scope: !11771)
!11780 = !DILocalVariable(name: "layout", scope: !11771, file: !3, line: 3256, type: !5476)
!11781 = !DILocation(line: 3256, column: 12, scope: !11771)
!11782 = !DILocation(line: 3258, column: 23, scope: !11771)
!11783 = !DILocation(line: 3258, column: 8, scope: !11771)
!11784 = !DILocation(line: 3258, column: 6, scope: !11771)
!11785 = !DILocation(line: 3259, column: 27, scope: !11771)
!11786 = !DILocation(line: 3259, column: 11, scope: !11771)
!11787 = !DILocation(line: 3259, column: 9, scope: !11771)
!11788 = !DILocation(line: 3261, column: 38, scope: !11771)
!11789 = !DILocation(line: 3261, column: 41, scope: !11771)
!11790 = !DILocation(line: 3261, column: 2, scope: !11771)
!11791 = !DILocation(line: 3263, column: 15, scope: !11771)
!11792 = !DILocation(line: 3263, column: 18, scope: !11771)
!11793 = !DILocation(line: 3263, column: 2, scope: !11771)
!11794 = !DILocation(line: 3265, column: 2, scope: !11771)
!11795 = distinct !DISubprogram(name: "screen_set_exec", scope: !3, file: !3, line: 2316, type: !7473, scopeLine: 2317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11796 = !DILocalVariable(name: "C", arg: 1, scope: !11795, file: !3, line: 2316, type: !3734)
!11797 = !DILocation(line: 2316, column: 38, scope: !11795)
!11798 = !DILocalVariable(name: "op", arg: 2, scope: !11795, file: !3, line: 2316, type: !7081)
!11799 = !DILocation(line: 2316, column: 53, scope: !11795)
!11800 = !DILocalVariable(name: "bmain", scope: !11795, file: !3, line: 2318, type: !11801)
!11801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11802, size: 64)
!11802 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !11803, line: 104, baseType: !11804)
!11803 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !11803, line: 53, size: 15232, elements: !11805)
!11805 = !{!11806, !11808, !11809, !11810, !11811, !11812, !11813, !11814, !11815, !11817, !11818, !11819, !11820, !11821, !11822, !11823, !11824, !11825, !11826, !11827, !11828, !11829, !11830, !11831, !11832, !11833, !11834, !11835, !11836, !11837, !11838, !11839, !11840, !11841, !11842, !11843, !11844, !11845, !11846, !11847, !11848, !11849, !11850, !11851, !11852, !11853, !11854, !11857}
!11806 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11804, file: !11803, line: 54, baseType: !11807, size: 64)
!11807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11804, size: 64)
!11808 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11804, file: !11803, line: 54, baseType: !11807, size: 64, offset: 64)
!11809 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11804, file: !11803, line: 55, baseType: !1432, size: 8192, offset: 128)
!11810 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !11804, file: !11803, line: 56, baseType: !1410, size: 16, offset: 8320)
!11811 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !11804, file: !11803, line: 56, baseType: !1410, size: 16, offset: 8336)
!11812 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !11804, file: !11803, line: 57, baseType: !1410, size: 16, offset: 8352)
!11813 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !11804, file: !11803, line: 57, baseType: !1410, size: 16, offset: 8368)
!11814 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !11804, file: !11803, line: 58, baseType: !1828, size: 64, offset: 8384)
!11815 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !11804, file: !11803, line: 59, baseType: !11816, size: 128, offset: 8448)
!11816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1433, size: 128, elements: !4685)
!11817 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !11804, file: !11803, line: 60, baseType: !1410, size: 16, offset: 8576)
!11818 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !11804, file: !11803, line: 62, baseType: !1423, size: 64, offset: 8640)
!11819 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !11804, file: !11803, line: 63, baseType: !1399, size: 128, offset: 8704)
!11820 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !11804, file: !11803, line: 64, baseType: !1399, size: 128, offset: 8832)
!11821 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !11804, file: !11803, line: 65, baseType: !1399, size: 128, offset: 8960)
!11822 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !11804, file: !11803, line: 66, baseType: !1399, size: 128, offset: 9088)
!11823 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !11804, file: !11803, line: 67, baseType: !1399, size: 128, offset: 9216)
!11824 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !11804, file: !11803, line: 68, baseType: !1399, size: 128, offset: 9344)
!11825 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !11804, file: !11803, line: 69, baseType: !1399, size: 128, offset: 9472)
!11826 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !11804, file: !11803, line: 70, baseType: !1399, size: 128, offset: 9600)
!11827 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !11804, file: !11803, line: 71, baseType: !1399, size: 128, offset: 9728)
!11828 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !11804, file: !11803, line: 72, baseType: !1399, size: 128, offset: 9856)
!11829 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !11804, file: !11803, line: 73, baseType: !1399, size: 128, offset: 9984)
!11830 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !11804, file: !11803, line: 74, baseType: !1399, size: 128, offset: 10112)
!11831 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !11804, file: !11803, line: 75, baseType: !1399, size: 128, offset: 10240)
!11832 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11804, file: !11803, line: 76, baseType: !1399, size: 128, offset: 10368)
!11833 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !11804, file: !11803, line: 77, baseType: !1399, size: 128, offset: 10496)
!11834 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !11804, file: !11803, line: 78, baseType: !1399, size: 128, offset: 10624)
!11835 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !11804, file: !11803, line: 79, baseType: !1399, size: 128, offset: 10752)
!11836 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !11804, file: !11803, line: 80, baseType: !1399, size: 128, offset: 10880)
!11837 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !11804, file: !11803, line: 81, baseType: !1399, size: 128, offset: 11008)
!11838 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !11804, file: !11803, line: 82, baseType: !1399, size: 128, offset: 11136)
!11839 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !11804, file: !11803, line: 83, baseType: !1399, size: 128, offset: 11264)
!11840 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !11804, file: !11803, line: 84, baseType: !1399, size: 128, offset: 11392)
!11841 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !11804, file: !11803, line: 85, baseType: !1399, size: 128, offset: 11520)
!11842 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !11804, file: !11803, line: 86, baseType: !1399, size: 128, offset: 11648)
!11843 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !11804, file: !11803, line: 87, baseType: !1399, size: 128, offset: 11776)
!11844 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !11804, file: !11803, line: 88, baseType: !1399, size: 128, offset: 11904)
!11845 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !11804, file: !11803, line: 89, baseType: !1399, size: 128, offset: 12032)
!11846 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !11804, file: !11803, line: 90, baseType: !1399, size: 128, offset: 12160)
!11847 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !11804, file: !11803, line: 91, baseType: !1399, size: 128, offset: 12288)
!11848 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !11804, file: !11803, line: 92, baseType: !1399, size: 128, offset: 12416)
!11849 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !11804, file: !11803, line: 93, baseType: !1399, size: 128, offset: 12544)
!11850 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !11804, file: !11803, line: 94, baseType: !1399, size: 128, offset: 12672)
!11851 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !11804, file: !11803, line: 95, baseType: !1399, size: 128, offset: 12800)
!11852 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !11804, file: !11803, line: 96, baseType: !1399, size: 128, offset: 12928)
!11853 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !11804, file: !11803, line: 98, baseType: !2021, size: 2048, offset: 13056)
!11854 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !11804, file: !11803, line: 101, baseType: !11855, size: 64, offset: 15104)
!11855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11856, size: 64)
!11856 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !11803, line: 49, flags: DIFlagFwdDecl)
!11857 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11804, file: !11803, line: 103, baseType: !11858, size: 64, offset: 15168)
!11858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11859, size: 64)
!11859 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !11803, line: 51, flags: DIFlagFwdDecl)
!11860 = !DILocation(line: 2318, column: 8, scope: !11795)
!11861 = !DILocation(line: 2318, column: 30, scope: !11795)
!11862 = !DILocation(line: 2318, column: 16, scope: !11795)
!11863 = !DILocalVariable(name: "screen", scope: !11795, file: !3, line: 2319, type: !3298)
!11864 = !DILocation(line: 2319, column: 11, scope: !11795)
!11865 = !DILocation(line: 2319, column: 34, scope: !11795)
!11866 = !DILocation(line: 2319, column: 20, scope: !11795)
!11867 = !DILocalVariable(name: "screen_prev", scope: !11795, file: !3, line: 2320, type: !3298)
!11868 = !DILocation(line: 2320, column: 11, scope: !11795)
!11869 = !DILocation(line: 2320, column: 25, scope: !11795)
!11870 = !DILocalVariable(name: "sa", scope: !11795, file: !3, line: 2322, type: !3286)
!11871 = !DILocation(line: 2322, column: 11, scope: !11795)
!11872 = !DILocation(line: 2322, column: 28, scope: !11795)
!11873 = !DILocation(line: 2322, column: 16, scope: !11795)
!11874 = !DILocalVariable(name: "tot", scope: !11795, file: !3, line: 2323, type: !1242)
!11875 = !DILocation(line: 2323, column: 6, scope: !11795)
!11876 = !DILocation(line: 2323, column: 27, scope: !11795)
!11877 = !DILocation(line: 2323, column: 34, scope: !11795)
!11878 = !DILocation(line: 2323, column: 12, scope: !11795)
!11879 = !DILocalVariable(name: "delta", scope: !11795, file: !3, line: 2324, type: !1242)
!11880 = !DILocation(line: 2324, column: 6, scope: !11795)
!11881 = !DILocation(line: 2324, column: 26, scope: !11795)
!11882 = !DILocation(line: 2324, column: 30, scope: !11795)
!11883 = !DILocation(line: 2324, column: 14, scope: !11795)
!11884 = !DILocation(line: 2327, column: 6, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 2327, column: 6)
!11886 = !DILocation(line: 2327, column: 14, scope: !11885)
!11887 = !DILocation(line: 2327, column: 6, scope: !11795)
!11888 = !DILocation(line: 2328, column: 3, scope: !11885)
!11889 = !DILocation(line: 2330, column: 6, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 2330, column: 6)
!11891 = !DILocation(line: 2330, column: 12, scope: !11890)
!11892 = !DILocation(line: 2330, column: 6, scope: !11795)
!11893 = !DILocation(line: 2331, column: 3, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11890, file: !3, line: 2330, column: 18)
!11895 = !DILocation(line: 2331, column: 13, scope: !11894)
!11896 = !DILocation(line: 2332, column: 13, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11894, file: !3, line: 2331, column: 17)
!11898 = !DILocation(line: 2332, column: 21, scope: !11897)
!11899 = !DILocation(line: 2332, column: 24, scope: !11897)
!11900 = !DILocation(line: 2332, column: 11, scope: !11897)
!11901 = !DILocation(line: 2333, column: 8, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 2333, column: 8)
!11903 = !DILocation(line: 2333, column: 15, scope: !11902)
!11904 = !DILocation(line: 2333, column: 8, scope: !11897)
!11905 = !DILocation(line: 2333, column: 33, scope: !11902)
!11906 = !DILocation(line: 2333, column: 40, scope: !11902)
!11907 = !DILocation(line: 2333, column: 47, scope: !11902)
!11908 = !DILocation(line: 2333, column: 31, scope: !11902)
!11909 = !DILocation(line: 2333, column: 24, scope: !11902)
!11910 = !DILocation(line: 2334, column: 25, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 2334, column: 8)
!11912 = !DILocation(line: 2334, column: 33, scope: !11911)
!11913 = !DILocation(line: 2334, column: 8, scope: !11911)
!11914 = !DILocation(line: 2334, column: 8, scope: !11897)
!11915 = !DILocation(line: 2335, column: 5, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11911, file: !3, line: 2334, column: 47)
!11917 = distinct !{!11917, !11893, !11918}
!11918 = !DILocation(line: 2337, column: 3, scope: !11894)
!11919 = !DILocation(line: 2338, column: 2, scope: !11894)
!11920 = !DILocation(line: 2339, column: 11, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11890, file: !3, line: 2339, column: 11)
!11922 = !DILocation(line: 2339, column: 17, scope: !11921)
!11923 = !DILocation(line: 2339, column: 11, scope: !11890)
!11924 = !DILocation(line: 2340, column: 3, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11921, file: !3, line: 2339, column: 24)
!11926 = !DILocation(line: 2340, column: 13, scope: !11925)
!11927 = !DILocation(line: 2341, column: 13, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11925, file: !3, line: 2340, column: 17)
!11929 = !DILocation(line: 2341, column: 21, scope: !11928)
!11930 = !DILocation(line: 2341, column: 24, scope: !11928)
!11931 = !DILocation(line: 2341, column: 11, scope: !11928)
!11932 = !DILocation(line: 2342, column: 8, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11928, file: !3, line: 2342, column: 8)
!11934 = !DILocation(line: 2342, column: 15, scope: !11933)
!11935 = !DILocation(line: 2342, column: 8, scope: !11928)
!11936 = !DILocation(line: 2342, column: 33, scope: !11933)
!11937 = !DILocation(line: 2342, column: 40, scope: !11933)
!11938 = !DILocation(line: 2342, column: 47, scope: !11933)
!11939 = !DILocation(line: 2342, column: 31, scope: !11933)
!11940 = !DILocation(line: 2342, column: 24, scope: !11933)
!11941 = !DILocation(line: 2343, column: 25, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11928, file: !3, line: 2343, column: 8)
!11943 = !DILocation(line: 2343, column: 33, scope: !11942)
!11944 = !DILocation(line: 2343, column: 8, scope: !11942)
!11945 = !DILocation(line: 2343, column: 8, scope: !11928)
!11946 = !DILocation(line: 2344, column: 5, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 2343, column: 47)
!11948 = distinct !{!11948, !11924, !11949}
!11949 = !DILocation(line: 2346, column: 3, scope: !11925)
!11950 = !DILocation(line: 2347, column: 2, scope: !11925)
!11951 = !DILocation(line: 2349, column: 10, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11921, file: !3, line: 2348, column: 7)
!11953 = !DILocation(line: 2352, column: 6, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 2352, column: 6)
!11955 = !DILocation(line: 2352, column: 13, scope: !11954)
!11956 = !DILocation(line: 2352, column: 16, scope: !11954)
!11957 = !DILocation(line: 2352, column: 31, scope: !11954)
!11958 = !DILocation(line: 2352, column: 28, scope: !11954)
!11959 = !DILocation(line: 2352, column: 6, scope: !11795)
!11960 = !DILocation(line: 2354, column: 7, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 2354, column: 7)
!11962 = distinct !DILexicalBlock(scope: !11954, file: !3, line: 2352, column: 39)
!11963 = !DILocation(line: 2354, column: 10, scope: !11961)
!11964 = !DILocation(line: 2354, column: 13, scope: !11961)
!11965 = !DILocation(line: 2354, column: 17, scope: !11961)
!11966 = !DILocation(line: 2354, column: 7, scope: !11962)
!11967 = !DILocation(line: 2355, column: 27, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 2354, column: 23)
!11969 = !DILocation(line: 2355, column: 30, scope: !11968)
!11970 = !DILocation(line: 2355, column: 4, scope: !11968)
!11971 = !DILocation(line: 2356, column: 3, scope: !11968)
!11972 = !DILocation(line: 2358, column: 17, scope: !11962)
!11973 = !DILocation(line: 2358, column: 20, scope: !11962)
!11974 = !DILocation(line: 2358, column: 3, scope: !11962)
!11975 = !DILocation(line: 2359, column: 3, scope: !11962)
!11976 = !DILocation(line: 2361, column: 2, scope: !11795)
!11977 = !DILocation(line: 2362, column: 1, scope: !11795)
!11978 = distinct !DISubprogram(name: "screen_set_is_ok", scope: !3, file: !3, line: 2307, type: !11979, scopeLine: 2308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!11979 = !DISubroutineType(types: !11980)
!11980 = !{!2425, !3298, !3298}
!11981 = !DILocalVariable(name: "screen", arg: 1, scope: !11978, file: !3, line: 2307, type: !3298)
!11982 = !DILocation(line: 2307, column: 39, scope: !11978)
!11983 = !DILocalVariable(name: "screen_prev", arg: 2, scope: !11978, file: !3, line: 2307, type: !3298)
!11984 = !DILocation(line: 2307, column: 56, scope: !11978)
!11985 = !DILocation(line: 2309, column: 11, scope: !11978)
!11986 = !DILocation(line: 2309, column: 19, scope: !11978)
!11987 = !DILocation(line: 2309, column: 25, scope: !11978)
!11988 = !DILocation(line: 2309, column: 31, scope: !11978)
!11989 = !DILocation(line: 2310, column: 11, scope: !11978)
!11990 = !DILocation(line: 2310, column: 19, scope: !11978)
!11991 = !DILocation(line: 2310, column: 25, scope: !11978)
!11992 = !DILocation(line: 2310, column: 42, scope: !11978)
!11993 = !DILocation(line: 2311, column: 11, scope: !11978)
!11994 = !DILocation(line: 2311, column: 21, scope: !11978)
!11995 = !DILocation(line: 2311, column: 18, scope: !11978)
!11996 = !DILocation(line: 2311, column: 34, scope: !11978)
!11997 = !DILocation(line: 2312, column: 11, scope: !11978)
!11998 = !DILocation(line: 2312, column: 19, scope: !11978)
!11999 = !DILocation(line: 2312, column: 22, scope: !11978)
!12000 = !DILocation(line: 2312, column: 30, scope: !11978)
!12001 = !DILocation(line: 2312, column: 37, scope: !11978)
!12002 = !DILocation(line: 2312, column: 44, scope: !11978)
!12003 = !DILocation(line: 2312, column: 51, scope: !11978)
!12004 = !DILocation(line: 2312, column: 40, scope: !11978)
!12005 = !DILocation(line: 0, scope: !11978)
!12006 = !DILocation(line: 2309, column: 9, scope: !11978)
!12007 = !DILocation(line: 2309, column: 2, scope: !11978)
!12008 = distinct !DISubprogram(name: "screen_maximize_area_exec", scope: !3, file: !3, line: 2381, type: !7473, scopeLine: 2382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!12009 = !DILocalVariable(name: "C", arg: 1, scope: !12008, file: !3, line: 2381, type: !3734)
!12010 = !DILocation(line: 2381, column: 48, scope: !12008)
!12011 = !DILocalVariable(name: "op", arg: 2, scope: !12008, file: !3, line: 2381, type: !7081)
!12012 = !DILocation(line: 2381, column: 63, scope: !12008)
!12013 = !DILocalVariable(name: "screen", scope: !12008, file: !3, line: 2383, type: !3298)
!12014 = !DILocation(line: 2383, column: 11, scope: !12008)
!12015 = !DILocation(line: 2383, column: 34, scope: !12008)
!12016 = !DILocation(line: 2383, column: 20, scope: !12008)
!12017 = !DILocalVariable(name: "sa", scope: !12008, file: !3, line: 2384, type: !3286)
!12018 = !DILocation(line: 2384, column: 11, scope: !12008)
!12019 = !DILocalVariable(name: "hide_panels", scope: !12008, file: !3, line: 2385, type: !5801)
!12020 = !DILocation(line: 2385, column: 13, scope: !12008)
!12021 = !DILocation(line: 2385, column: 43, scope: !12008)
!12022 = !DILocation(line: 2385, column: 47, scope: !12008)
!12023 = !DILocation(line: 2385, column: 27, scope: !12008)
!12024 = !DILocation(line: 2389, column: 12, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 2389, column: 2)
!12026 = !DILocation(line: 2389, column: 20, scope: !12025)
!12027 = !DILocation(line: 2389, column: 29, scope: !12025)
!12028 = !DILocation(line: 2389, column: 10, scope: !12025)
!12029 = !DILocation(line: 2389, column: 7, scope: !12025)
!12030 = !DILocation(line: 2389, column: 36, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 2389, column: 2)
!12032 = !DILocation(line: 2389, column: 2, scope: !12025)
!12033 = !DILocation(line: 2390, column: 7, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 2390, column: 7)
!12035 = distinct !DILexicalBlock(scope: !12031, file: !3, line: 2389, column: 55)
!12036 = !DILocation(line: 2390, column: 11, scope: !12034)
!12037 = !DILocation(line: 2390, column: 7, scope: !12035)
!12038 = !DILocation(line: 2390, column: 17, scope: !12034)
!12039 = !DILocation(line: 2391, column: 2, scope: !12035)
!12040 = !DILocation(line: 2389, column: 45, scope: !12031)
!12041 = !DILocation(line: 2389, column: 49, scope: !12031)
!12042 = !DILocation(line: 2389, column: 43, scope: !12031)
!12043 = !DILocation(line: 2389, column: 2, scope: !12031)
!12044 = distinct !{!12044, !12032, !12045}
!12045 = !DILocation(line: 2391, column: 2, scope: !12025)
!12046 = !DILocation(line: 2393, column: 6, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 2393, column: 6)
!12048 = !DILocation(line: 2393, column: 9, scope: !12047)
!12049 = !DILocation(line: 2393, column: 6, scope: !12008)
!12050 = !DILocation(line: 2394, column: 20, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12047, file: !3, line: 2393, column: 18)
!12052 = !DILocation(line: 2394, column: 8, scope: !12051)
!12053 = !DILocation(line: 2394, column: 6, scope: !12051)
!12054 = !DILocation(line: 2395, column: 2, scope: !12051)
!12055 = !DILocation(line: 2397, column: 6, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 2397, column: 6)
!12057 = !DILocation(line: 2397, column: 6, scope: !12008)
!12058 = !DILocation(line: 2398, column: 8, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 2398, column: 7)
!12060 = distinct !DILexicalBlock(scope: !12056, file: !3, line: 2397, column: 19)
!12061 = !DILocation(line: 2398, column: 7, scope: !12060)
!12062 = !DILocation(line: 2399, column: 4, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12059, file: !3, line: 2398, column: 55)
!12064 = !DILocation(line: 2401, column: 26, scope: !12060)
!12065 = !DILocation(line: 2401, column: 43, scope: !12060)
!12066 = !DILocation(line: 2401, column: 29, scope: !12060)
!12067 = !DILocation(line: 2401, column: 47, scope: !12060)
!12068 = !DILocation(line: 2401, column: 3, scope: !12060)
!12069 = !DILocation(line: 2402, column: 2, scope: !12060)
!12070 = !DILocation(line: 2404, column: 8, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12072, file: !3, line: 2404, column: 7)
!12072 = distinct !DILexicalBlock(scope: !12056, file: !3, line: 2403, column: 7)
!12073 = !DILocation(line: 2404, column: 7, scope: !12072)
!12074 = !DILocation(line: 2405, column: 4, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12071, file: !3, line: 2404, column: 60)
!12076 = !DILocation(line: 2407, column: 26, scope: !12072)
!12077 = !DILocation(line: 2407, column: 43, scope: !12072)
!12078 = !DILocation(line: 2407, column: 29, scope: !12072)
!12079 = !DILocation(line: 2407, column: 47, scope: !12072)
!12080 = !DILocation(line: 2407, column: 3, scope: !12072)
!12081 = !DILocation(line: 2410, column: 2, scope: !12008)
!12082 = !DILocation(line: 2411, column: 1, scope: !12008)
!12083 = distinct !DISubprogram(name: "fullscreen_back_exec", scope: !3, file: !3, line: 3696, type: !7473, scopeLine: 3697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!12084 = !DILocalVariable(name: "C", arg: 1, scope: !12083, file: !3, line: 3696, type: !3734)
!12085 = !DILocation(line: 3696, column: 43, scope: !12083)
!12086 = !DILocalVariable(name: "op", arg: 2, scope: !12083, file: !3, line: 3696, type: !7081)
!12087 = !DILocation(line: 3696, column: 58, scope: !12083)
!12088 = !DILocalVariable(name: "screen", scope: !12083, file: !3, line: 3698, type: !3298)
!12089 = !DILocation(line: 3698, column: 11, scope: !12083)
!12090 = !DILocation(line: 3698, column: 34, scope: !12083)
!12091 = !DILocation(line: 3698, column: 20, scope: !12083)
!12092 = !DILocalVariable(name: "sa", scope: !12083, file: !3, line: 3699, type: !3286)
!12093 = !DILocation(line: 3699, column: 11, scope: !12083)
!12094 = !DILocation(line: 3702, column: 12, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12083, file: !3, line: 3702, column: 2)
!12096 = !DILocation(line: 3702, column: 20, scope: !12095)
!12097 = !DILocation(line: 3702, column: 29, scope: !12095)
!12098 = !DILocation(line: 3702, column: 10, scope: !12095)
!12099 = !DILocation(line: 3702, column: 7, scope: !12095)
!12100 = !DILocation(line: 3702, column: 36, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12095, file: !3, line: 3702, column: 2)
!12102 = !DILocation(line: 3702, column: 2, scope: !12095)
!12103 = !DILocation(line: 3703, column: 7, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12105, file: !3, line: 3703, column: 7)
!12105 = distinct !DILexicalBlock(scope: !12101, file: !3, line: 3702, column: 55)
!12106 = !DILocation(line: 3703, column: 11, scope: !12104)
!12107 = !DILocation(line: 3703, column: 7, scope: !12105)
!12108 = !DILocation(line: 3703, column: 17, scope: !12104)
!12109 = !DILocation(line: 3704, column: 2, scope: !12105)
!12110 = !DILocation(line: 3702, column: 45, scope: !12101)
!12111 = !DILocation(line: 3702, column: 49, scope: !12101)
!12112 = !DILocation(line: 3702, column: 43, scope: !12101)
!12113 = !DILocation(line: 3702, column: 2, scope: !12101)
!12114 = distinct !{!12114, !12102, !12115}
!12115 = !DILocation(line: 3704, column: 2, scope: !12095)
!12116 = !DILocation(line: 3705, column: 7, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12083, file: !3, line: 3705, column: 6)
!12118 = !DILocation(line: 3705, column: 6, scope: !12083)
!12119 = !DILocation(line: 3706, column: 14, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12117, file: !3, line: 3705, column: 11)
!12121 = !DILocation(line: 3706, column: 18, scope: !12120)
!12122 = !DILocation(line: 3706, column: 3, scope: !12120)
!12123 = !DILocation(line: 3707, column: 3, scope: !12120)
!12124 = !DILocation(line: 3710, column: 25, scope: !12083)
!12125 = !DILocation(line: 3710, column: 28, scope: !12083)
!12126 = !DILocation(line: 3710, column: 2, scope: !12083)
!12127 = !DILocation(line: 3712, column: 2, scope: !12083)
!12128 = !DILocation(line: 3713, column: 1, scope: !12083)
!12129 = distinct !DISubprogram(name: "spacedata_cleanup_exec", scope: !3, file: !3, line: 2785, type: !7473, scopeLine: 2786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!12130 = !DILocalVariable(name: "C", arg: 1, scope: !12129, file: !3, line: 2785, type: !3734)
!12131 = !DILocation(line: 2785, column: 45, scope: !12129)
!12132 = !DILocalVariable(name: "op", arg: 2, scope: !12129, file: !3, line: 2785, type: !7081)
!12133 = !DILocation(line: 2785, column: 60, scope: !12129)
!12134 = !DILocalVariable(name: "bmain", scope: !12129, file: !3, line: 2787, type: !11801)
!12135 = !DILocation(line: 2787, column: 8, scope: !12129)
!12136 = !DILocation(line: 2787, column: 30, scope: !12129)
!12137 = !DILocation(line: 2787, column: 16, scope: !12129)
!12138 = !DILocalVariable(name: "screen", scope: !12129, file: !3, line: 2788, type: !3298)
!12139 = !DILocation(line: 2788, column: 11, scope: !12129)
!12140 = !DILocalVariable(name: "sa", scope: !12129, file: !3, line: 2789, type: !3286)
!12141 = !DILocation(line: 2789, column: 11, scope: !12129)
!12142 = !DILocalVariable(name: "tot", scope: !12129, file: !3, line: 2790, type: !1242)
!12143 = !DILocation(line: 2790, column: 6, scope: !12129)
!12144 = !DILocation(line: 2792, column: 16, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2792, column: 2)
!12146 = !DILocation(line: 2792, column: 23, scope: !12145)
!12147 = !DILocation(line: 2792, column: 30, scope: !12145)
!12148 = !DILocation(line: 2792, column: 14, scope: !12145)
!12149 = !DILocation(line: 2792, column: 7, scope: !12145)
!12150 = !DILocation(line: 2792, column: 37, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 2792, column: 2)
!12152 = !DILocation(line: 2792, column: 2, scope: !12145)
!12153 = !DILocation(line: 2793, column: 13, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12155, file: !3, line: 2793, column: 3)
!12155 = distinct !DILexicalBlock(scope: !12151, file: !3, line: 2792, column: 71)
!12156 = !DILocation(line: 2793, column: 21, scope: !12154)
!12157 = !DILocation(line: 2793, column: 30, scope: !12154)
!12158 = !DILocation(line: 2793, column: 11, scope: !12154)
!12159 = !DILocation(line: 2793, column: 8, scope: !12154)
!12160 = !DILocation(line: 2793, column: 37, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12154, file: !3, line: 2793, column: 3)
!12162 = !DILocation(line: 2793, column: 3, scope: !12154)
!12163 = !DILocation(line: 2794, column: 8, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12165, file: !3, line: 2794, column: 8)
!12165 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 2793, column: 56)
!12166 = !DILocation(line: 2794, column: 12, scope: !12164)
!12167 = !DILocation(line: 2794, column: 22, scope: !12164)
!12168 = !DILocation(line: 2794, column: 31, scope: !12164)
!12169 = !DILocation(line: 2794, column: 35, scope: !12164)
!12170 = !DILocation(line: 2794, column: 45, scope: !12164)
!12171 = !DILocation(line: 2794, column: 28, scope: !12164)
!12172 = !DILocation(line: 2794, column: 8, scope: !12165)
!12173 = !DILocalVariable(name: "sl", scope: !12174, file: !3, line: 2795, type: !1391)
!12174 = distinct !DILexicalBlock(scope: !12164, file: !3, line: 2794, column: 51)
!12175 = !DILocation(line: 2795, column: 16, scope: !12174)
!12176 = !DILocation(line: 2795, column: 21, scope: !12174)
!12177 = !DILocation(line: 2795, column: 25, scope: !12174)
!12178 = !DILocation(line: 2795, column: 35, scope: !12174)
!12179 = !DILocation(line: 2797, column: 18, scope: !12174)
!12180 = !DILocation(line: 2797, column: 22, scope: !12174)
!12181 = !DILocation(line: 2797, column: 33, scope: !12174)
!12182 = !DILocation(line: 2797, column: 5, scope: !12174)
!12183 = !DILocation(line: 2798, column: 27, scope: !12174)
!12184 = !DILocation(line: 2798, column: 31, scope: !12174)
!12185 = !DILocation(line: 2798, column: 12, scope: !12174)
!12186 = !DILocation(line: 2798, column: 9, scope: !12174)
!12187 = !DILocation(line: 2799, column: 29, scope: !12174)
!12188 = !DILocation(line: 2799, column: 33, scope: !12174)
!12189 = !DILocation(line: 2799, column: 5, scope: !12174)
!12190 = !DILocation(line: 2800, column: 18, scope: !12174)
!12191 = !DILocation(line: 2800, column: 22, scope: !12174)
!12192 = !DILocation(line: 2800, column: 33, scope: !12174)
!12193 = !DILocation(line: 2800, column: 5, scope: !12174)
!12194 = !DILocation(line: 2801, column: 4, scope: !12174)
!12195 = !DILocation(line: 2802, column: 3, scope: !12165)
!12196 = !DILocation(line: 2793, column: 46, scope: !12161)
!12197 = !DILocation(line: 2793, column: 50, scope: !12161)
!12198 = !DILocation(line: 2793, column: 44, scope: !12161)
!12199 = !DILocation(line: 2793, column: 3, scope: !12161)
!12200 = distinct !{!12200, !12162, !12201}
!12201 = !DILocation(line: 2802, column: 3, scope: !12154)
!12202 = !DILocation(line: 2803, column: 2, scope: !12155)
!12203 = !DILocation(line: 2792, column: 54, scope: !12151)
!12204 = !DILocation(line: 2792, column: 62, scope: !12151)
!12205 = !DILocation(line: 2792, column: 65, scope: !12151)
!12206 = !DILocation(line: 2792, column: 52, scope: !12151)
!12207 = !DILocation(line: 2792, column: 2, scope: !12151)
!12208 = distinct !{!12208, !12152, !12209}
!12209 = !DILocation(line: 2803, column: 2, scope: !12145)
!12210 = !DILocation(line: 2804, column: 14, scope: !12129)
!12211 = !DILocation(line: 2804, column: 18, scope: !12129)
!12212 = !DILocation(line: 2804, column: 70, scope: !12129)
!12213 = !DILocation(line: 2804, column: 2, scope: !12129)
!12214 = !DILocation(line: 2806, column: 2, scope: !12129)
!12215 = distinct !DISubprogram(name: "userpref_show_invoke", scope: !3, file: !3, line: 3729, type: !7079, scopeLine: 3730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!12216 = !DILocalVariable(name: "C", arg: 1, scope: !12215, file: !3, line: 3729, type: !3734)
!12217 = !DILocation(line: 3729, column: 43, scope: !12215)
!12218 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !12215, file: !3, line: 3729, type: !7081)
!12219 = !DILocation(line: 3729, column: 58, scope: !12215)
!12220 = !DILocalVariable(name: "event", arg: 3, scope: !12215, file: !3, line: 3729, type: !6997)
!12221 = !DILocation(line: 3729, column: 85, scope: !12215)
!12222 = !DILocalVariable(name: "win", scope: !12215, file: !3, line: 3731, type: !5535)
!12223 = !DILocation(line: 3731, column: 12, scope: !12215)
!12224 = !DILocation(line: 3731, column: 32, scope: !12215)
!12225 = !DILocation(line: 3731, column: 18, scope: !12215)
!12226 = !DILocalVariable(name: "rect", scope: !12215, file: !3, line: 3732, type: !2823)
!12227 = !DILocation(line: 3732, column: 7, scope: !12215)
!12228 = !DILocalVariable(name: "sizex", scope: !12215, file: !3, line: 3733, type: !1242)
!12229 = !DILocation(line: 3733, column: 6, scope: !12215)
!12230 = !DILocalVariable(name: "sizey", scope: !12215, file: !3, line: 3733, type: !1242)
!12231 = !DILocation(line: 3733, column: 13, scope: !12215)
!12232 = !DILocation(line: 3735, column: 16, scope: !12215)
!12233 = !DILocation(line: 3735, column: 14, scope: !12215)
!12234 = !DILocation(line: 3735, column: 10, scope: !12215)
!12235 = !DILocation(line: 3735, column: 8, scope: !12215)
!12236 = !DILocation(line: 3736, column: 16, scope: !12215)
!12237 = !DILocation(line: 3736, column: 14, scope: !12215)
!12238 = !DILocation(line: 3736, column: 10, scope: !12215)
!12239 = !DILocation(line: 3736, column: 8, scope: !12215)
!12240 = !DILocation(line: 3740, column: 15, scope: !12215)
!12241 = !DILocation(line: 3740, column: 22, scope: !12215)
!12242 = !DILocation(line: 3740, column: 28, scope: !12215)
!12243 = !DILocation(line: 3740, column: 24, scope: !12215)
!12244 = !DILocation(line: 3740, column: 41, scope: !12215)
!12245 = !DILocation(line: 3740, column: 46, scope: !12215)
!12246 = !DILocation(line: 3740, column: 39, scope: !12215)
!12247 = !DILocation(line: 3740, column: 53, scope: !12215)
!12248 = !DILocation(line: 3740, column: 59, scope: !12215)
!12249 = !DILocation(line: 3740, column: 51, scope: !12215)
!12250 = !DILocation(line: 3740, column: 14, scope: !12215)
!12251 = !DILocation(line: 3740, column: 7, scope: !12215)
!12252 = !DILocation(line: 3740, column: 12, scope: !12215)
!12253 = !DILocation(line: 3741, column: 15, scope: !12215)
!12254 = !DILocation(line: 3741, column: 22, scope: !12215)
!12255 = !DILocation(line: 3741, column: 28, scope: !12215)
!12256 = !DILocation(line: 3741, column: 24, scope: !12215)
!12257 = !DILocation(line: 3741, column: 41, scope: !12215)
!12258 = !DILocation(line: 3741, column: 46, scope: !12215)
!12259 = !DILocation(line: 3741, column: 39, scope: !12215)
!12260 = !DILocation(line: 3741, column: 53, scope: !12215)
!12261 = !DILocation(line: 3741, column: 59, scope: !12215)
!12262 = !DILocation(line: 3741, column: 51, scope: !12215)
!12263 = !DILocation(line: 3741, column: 14, scope: !12215)
!12264 = !DILocation(line: 3741, column: 7, scope: !12215)
!12265 = !DILocation(line: 3741, column: 12, scope: !12215)
!12266 = !DILocation(line: 3742, column: 19, scope: !12215)
!12267 = !DILocation(line: 3742, column: 26, scope: !12215)
!12268 = !DILocation(line: 3742, column: 24, scope: !12215)
!12269 = !DILocation(line: 3742, column: 7, scope: !12215)
!12270 = !DILocation(line: 3742, column: 12, scope: !12215)
!12271 = !DILocation(line: 3743, column: 19, scope: !12215)
!12272 = !DILocation(line: 3743, column: 26, scope: !12215)
!12273 = !DILocation(line: 3743, column: 24, scope: !12215)
!12274 = !DILocation(line: 3743, column: 7, scope: !12215)
!12275 = !DILocation(line: 3743, column: 12, scope: !12215)
!12276 = !DILocation(line: 3746, column: 22, scope: !12215)
!12277 = !DILocation(line: 3746, column: 2, scope: !12215)
!12278 = !DILocation(line: 3748, column: 2, scope: !12215)
!12279 = distinct !DISubprogram(name: "region_blend_invoke", scope: !3, file: !3, line: 3999, type: !7079, scopeLine: 4000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!12280 = !DILocalVariable(name: "C", arg: 1, scope: !12279, file: !3, line: 3999, type: !3734)
!12281 = !DILocation(line: 3999, column: 42, scope: !12279)
!12282 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !12279, file: !3, line: 3999, type: !7081)
!12283 = !DILocation(line: 3999, column: 57, scope: !12279)
!12284 = !DILocalVariable(name: "event", arg: 3, scope: !12279, file: !3, line: 3999, type: !6997)
!12285 = !DILocation(line: 3999, column: 84, scope: !12279)
!12286 = !DILocalVariable(name: "rgi", scope: !12279, file: !3, line: 4001, type: !5668)
!12287 = !DILocation(line: 4001, column: 19, scope: !12279)
!12288 = !DILocalVariable(name: "timer", scope: !12279, file: !3, line: 4002, type: !5613)
!12289 = !DILocation(line: 4002, column: 11, scope: !12279)
!12290 = !DILocation(line: 4002, column: 19, scope: !12279)
!12291 = !DILocation(line: 4002, column: 26, scope: !12279)
!12292 = !DILocation(line: 4005, column: 6, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12279, file: !3, line: 4005, column: 6)
!12294 = !DILocation(line: 4005, column: 13, scope: !12293)
!12295 = !DILocation(line: 4005, column: 18, scope: !12293)
!12296 = !DILocation(line: 4005, column: 33, scope: !12293)
!12297 = !DILocation(line: 4005, column: 36, scope: !12293)
!12298 = !DILocation(line: 4005, column: 42, scope: !12293)
!12299 = !DILocation(line: 4005, column: 6, scope: !12279)
!12300 = !DILocation(line: 4006, column: 3, scope: !12293)
!12301 = !DILocation(line: 4008, column: 8, scope: !12279)
!12302 = !DILocation(line: 4008, column: 15, scope: !12279)
!12303 = !DILocation(line: 4008, column: 6, scope: !12279)
!12304 = !DILocation(line: 4011, column: 23, scope: !12279)
!12305 = !DILocation(line: 4011, column: 28, scope: !12279)
!12306 = !DILocation(line: 4011, column: 2, scope: !12279)
!12307 = !DILocation(line: 4012, column: 6, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12279, file: !3, line: 4012, column: 6)
!12309 = !DILocation(line: 4012, column: 11, scope: !12308)
!12310 = !DILocation(line: 4012, column: 6, scope: !12279)
!12311 = !DILocation(line: 4013, column: 24, scope: !12308)
!12312 = !DILocation(line: 4013, column: 29, scope: !12308)
!12313 = !DILocation(line: 4013, column: 3, scope: !12308)
!12314 = !DILocation(line: 4016, column: 6, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12279, file: !3, line: 4016, column: 6)
!12316 = !DILocation(line: 4016, column: 11, scope: !12315)
!12317 = !DILocation(line: 4016, column: 15, scope: !12315)
!12318 = !DILocation(line: 4016, column: 28, scope: !12315)
!12319 = !DILocation(line: 4016, column: 37, scope: !12315)
!12320 = !DILocation(line: 4016, column: 6, scope: !12279)
!12321 = !DILocation(line: 4017, column: 20, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12315, file: !3, line: 4016, column: 56)
!12323 = !DILocation(line: 4017, column: 23, scope: !12322)
!12324 = !DILocation(line: 4017, column: 28, scope: !12322)
!12325 = !DILocation(line: 4017, column: 3, scope: !12322)
!12326 = !DILocation(line: 4018, column: 3, scope: !12322)
!12327 = !DILocation(line: 4021, column: 2, scope: !12279)
!12328 = !DILocation(line: 4022, column: 1, scope: !12279)
!12329 = distinct !DISubprogram(name: "frame_offset_exec", scope: !3, file: !3, line: 2059, type: !7473, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!12330 = !DILocalVariable(name: "C", arg: 1, scope: !12329, file: !3, line: 2059, type: !3734)
!12331 = !DILocation(line: 2059, column: 40, scope: !12329)
!12332 = !DILocalVariable(name: "op", arg: 2, scope: !12329, file: !3, line: 2059, type: !7081)
!12333 = !DILocation(line: 2059, column: 55, scope: !12329)
!12334 = !DILocalVariable(name: "bmain", scope: !12329, file: !3, line: 2061, type: !11801)
!12335 = !DILocation(line: 2061, column: 8, scope: !12329)
!12336 = !DILocation(line: 2061, column: 30, scope: !12329)
!12337 = !DILocation(line: 2061, column: 16, scope: !12329)
!12338 = !DILocalVariable(name: "scene", scope: !12329, file: !3, line: 2062, type: !3831)
!12339 = !DILocation(line: 2062, column: 9, scope: !12329)
!12340 = !DILocation(line: 2062, column: 32, scope: !12329)
!12341 = !DILocation(line: 2062, column: 17, scope: !12329)
!12342 = !DILocalVariable(name: "delta", scope: !12329, file: !3, line: 2063, type: !1242)
!12343 = !DILocation(line: 2063, column: 6, scope: !12329)
!12344 = !DILocation(line: 2065, column: 22, scope: !12329)
!12345 = !DILocation(line: 2065, column: 26, scope: !12329)
!12346 = !DILocation(line: 2065, column: 10, scope: !12329)
!12347 = !DILocation(line: 2065, column: 8, scope: !12329)
!12348 = !DILocation(line: 2067, column: 10, scope: !12329)
!12349 = !DILocation(line: 2067, column: 2, scope: !12329)
!12350 = !DILocation(line: 2067, column: 7, scope: !12329)
!12351 = !DILocation(line: 2068, column: 2, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12353, file: !3, line: 2068, column: 2)
!12353 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 2068, column: 2)
!12354 = !DILocation(line: 2068, column: 2, scope: !12353)
!12355 = !DILocation(line: 2069, column: 2, scope: !12329)
!12356 = !DILocation(line: 2069, column: 9, scope: !12329)
!12357 = !DILocation(line: 2071, column: 19, scope: !12329)
!12358 = !DILocation(line: 2071, column: 26, scope: !12329)
!12359 = !DILocation(line: 2071, column: 2, scope: !12329)
!12360 = !DILocation(line: 2073, column: 24, scope: !12329)
!12361 = !DILocation(line: 2073, column: 48, scope: !12329)
!12362 = !DILocation(line: 2073, column: 2, scope: !12329)
!12363 = !DILocation(line: 2075, column: 2, scope: !12329)
!12364 = distinct !DISubprogram(name: "ED_operator_screenactive_norender", scope: !3, file: !3, line: 119, type: !3732, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!12365 = !DILocalVariable(name: "C", arg: 1, scope: !12364, file: !3, line: 119, type: !3734)
!12366 = !DILocation(line: 119, column: 56, scope: !12364)
!12367 = !DILocation(line: 121, column: 8, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 121, column: 6)
!12369 = !DILocation(line: 121, column: 6, scope: !12368)
!12370 = !DILocation(line: 121, column: 6, scope: !12364)
!12371 = !DILocation(line: 121, column: 22, scope: !12368)
!12372 = !DILocation(line: 122, column: 20, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 122, column: 6)
!12374 = !DILocation(line: 122, column: 6, scope: !12373)
!12375 = !DILocation(line: 122, column: 23, scope: !12373)
!12376 = !DILocation(line: 122, column: 6, scope: !12364)
!12377 = !DILocation(line: 122, column: 32, scope: !12373)
!12378 = !DILocation(line: 123, column: 20, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 123, column: 6)
!12380 = !DILocation(line: 123, column: 6, scope: !12379)
!12381 = !DILocation(line: 123, column: 23, scope: !12379)
!12382 = !DILocation(line: 123, column: 6, scope: !12364)
!12383 = !DILocation(line: 123, column: 32, scope: !12379)
!12384 = !DILocation(line: 124, column: 2, scope: !12364)
!12385 = !DILocation(line: 125, column: 1, scope: !12364)
!12386 = distinct !DISubprogram(name: "frame_jump_exec", scope: !3, file: !3, line: 2095, type: !7473, scopeLine: 2096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!12387 = !DILocalVariable(name: "C", arg: 1, scope: !12386, file: !3, line: 2095, type: !3734)
!12388 = !DILocation(line: 2095, column: 38, scope: !12386)
!12389 = !DILocalVariable(name: "op", arg: 2, scope: !12386, file: !3, line: 2095, type: !7081)
!12390 = !DILocation(line: 2095, column: 53, scope: !12386)
!12391 = !DILocalVariable(name: "bmain", scope: !12386, file: !3, line: 2097, type: !11801)
!12392 = !DILocation(line: 2097, column: 8, scope: !12386)
!12393 = !DILocation(line: 2097, column: 30, scope: !12386)
!12394 = !DILocation(line: 2097, column: 16, scope: !12386)
!12395 = !DILocalVariable(name: "scene", scope: !12386, file: !3, line: 2098, type: !3831)
!12396 = !DILocation(line: 2098, column: 9, scope: !12386)
!12397 = !DILocation(line: 2098, column: 32, scope: !12386)
!12398 = !DILocation(line: 2098, column: 17, scope: !12386)
!12399 = !DILocalVariable(name: "animtimer", scope: !12386, file: !3, line: 2099, type: !5613)
!12400 = !DILocation(line: 2099, column: 11, scope: !12386)
!12401 = !DILocation(line: 2099, column: 37, scope: !12386)
!12402 = !DILocation(line: 2099, column: 23, scope: !12386)
!12403 = !DILocation(line: 2099, column: 41, scope: !12386)
!12404 = !DILocation(line: 2105, column: 6, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12386, file: !3, line: 2105, column: 6)
!12406 = !DILocation(line: 2105, column: 6, scope: !12386)
!12407 = !DILocalVariable(name: "sad", scope: !12408, file: !3, line: 2106, type: !5619)
!12408 = distinct !DILexicalBlock(scope: !12405, file: !3, line: 2105, column: 17)
!12409 = !DILocation(line: 2106, column: 19, scope: !12408)
!12410 = !DILocation(line: 2106, column: 25, scope: !12408)
!12411 = !DILocation(line: 2106, column: 36, scope: !12408)
!12412 = !DILocation(line: 2108, column: 3, scope: !12408)
!12413 = !DILocation(line: 2108, column: 8, scope: !12408)
!12414 = !DILocation(line: 2108, column: 13, scope: !12408)
!12415 = !DILocation(line: 2110, column: 23, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12408, file: !3, line: 2110, column: 7)
!12417 = !DILocation(line: 2110, column: 27, scope: !12416)
!12418 = !DILocation(line: 2110, column: 7, scope: !12416)
!12419 = !DILocation(line: 2110, column: 7, scope: !12408)
!12420 = !DILocation(line: 2111, column: 19, scope: !12416)
!12421 = !DILocation(line: 2111, column: 4, scope: !12416)
!12422 = !DILocation(line: 2111, column: 9, scope: !12416)
!12423 = !DILocation(line: 2111, column: 17, scope: !12416)
!12424 = !DILocation(line: 2113, column: 19, scope: !12416)
!12425 = !DILocation(line: 2113, column: 4, scope: !12416)
!12426 = !DILocation(line: 2113, column: 9, scope: !12416)
!12427 = !DILocation(line: 2113, column: 17, scope: !12416)
!12428 = !DILocation(line: 2114, column: 2, scope: !12408)
!12429 = !DILocation(line: 2116, column: 23, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12431, file: !3, line: 2116, column: 7)
!12431 = distinct !DILexicalBlock(scope: !12405, file: !3, line: 2115, column: 7)
!12432 = !DILocation(line: 2116, column: 27, scope: !12430)
!12433 = !DILocation(line: 2116, column: 7, scope: !12430)
!12434 = !DILocation(line: 2116, column: 7, scope: !12431)
!12435 = !DILocation(line: 2117, column: 11, scope: !12430)
!12436 = !DILocation(line: 2117, column: 4, scope: !12430)
!12437 = !DILocation(line: 2117, column: 9, scope: !12430)
!12438 = !DILocation(line: 2119, column: 11, scope: !12430)
!12439 = !DILocation(line: 2119, column: 4, scope: !12430)
!12440 = !DILocation(line: 2119, column: 9, scope: !12430)
!12441 = !DILocation(line: 2121, column: 20, scope: !12431)
!12442 = !DILocation(line: 2121, column: 27, scope: !12431)
!12443 = !DILocation(line: 2121, column: 3, scope: !12431)
!12444 = !DILocation(line: 2123, column: 25, scope: !12431)
!12445 = !DILocation(line: 2123, column: 49, scope: !12431)
!12446 = !DILocation(line: 2123, column: 3, scope: !12431)
!12447 = !DILocation(line: 2126, column: 2, scope: !12386)
!12448 = distinct !DISubprogram(name: "keyframe_jump_exec", scope: !3, file: !3, line: 2148, type: !7473, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!12449 = !DILocalVariable(name: "C", arg: 1, scope: !12448, file: !3, line: 2148, type: !3734)
!12450 = !DILocation(line: 2148, column: 41, scope: !12448)
!12451 = !DILocalVariable(name: "op", arg: 2, scope: !12448, file: !3, line: 2148, type: !7081)
!12452 = !DILocation(line: 2148, column: 56, scope: !12448)
!12453 = !DILocalVariable(name: "bmain", scope: !12448, file: !3, line: 2150, type: !11801)
!12454 = !DILocation(line: 2150, column: 8, scope: !12448)
!12455 = !DILocation(line: 2150, column: 30, scope: !12448)
!12456 = !DILocation(line: 2150, column: 16, scope: !12448)
!12457 = !DILocalVariable(name: "scene", scope: !12448, file: !3, line: 2151, type: !3831)
!12458 = !DILocation(line: 2151, column: 9, scope: !12448)
!12459 = !DILocation(line: 2151, column: 32, scope: !12448)
!12460 = !DILocation(line: 2151, column: 17, scope: !12448)
!12461 = !DILocalVariable(name: "ob", scope: !12448, file: !3, line: 2152, type: !3855)
!12462 = !DILocation(line: 2152, column: 10, scope: !12448)
!12463 = !DILocation(line: 2152, column: 38, scope: !12448)
!12464 = !DILocation(line: 2152, column: 15, scope: !12448)
!12465 = !DILocalVariable(name: "ads", scope: !12448, file: !3, line: 2153, type: !12466)
!12466 = !DIDerivedType(tag: DW_TAG_typedef, name: "bDopeSheet", file: !1336, line: 531, baseType: !12467)
!12467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bDopeSheet", file: !1336, line: 519, size: 896, elements: !12468)
!12468 = !{!12469, !12470, !12471, !12472, !12473, !12474, !12475, !12476}
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !12467, file: !1336, line: 520, baseType: !1413, size: 64)
!12470 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !12467, file: !1336, line: 521, baseType: !1399, size: 128, offset: 64)
!12471 = !DIDerivedType(tag: DW_TAG_member, name: "filter_grp", scope: !12467, file: !1336, line: 523, baseType: !1811, size: 64, offset: 192)
!12472 = !DIDerivedType(tag: DW_TAG_member, name: "searchstr", scope: !12467, file: !1336, line: 524, baseType: !1461, size: 512, offset: 256)
!12473 = !DIDerivedType(tag: DW_TAG_member, name: "filterflag", scope: !12467, file: !1336, line: 526, baseType: !1242, size: 32, offset: 768)
!12474 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12467, file: !1336, line: 527, baseType: !1242, size: 32, offset: 800)
!12475 = !DIDerivedType(tag: DW_TAG_member, name: "renameIndex", scope: !12467, file: !1336, line: 529, baseType: !1242, size: 32, offset: 832)
!12476 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12467, file: !1336, line: 530, baseType: !1242, size: 32, offset: 864)
!12477 = !DILocation(line: 2153, column: 13, scope: !12448)
!12478 = !DILocalVariable(name: "keys", scope: !12448, file: !3, line: 2154, type: !12479)
!12479 = !DIDerivedType(tag: DW_TAG_typedef, name: "DLRBT_Tree", file: !12480, line: 74, baseType: !12481)
!12480 = !DIFile(filename: "blender/source/blender/blenlib/BLI_dlrbTree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DLRBT_Tree", file: !12480, line: 68, size: 192, elements: !12482)
!12482 = !{!12483, !12484, !12485}
!12483 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !12481, file: !12480, line: 70, baseType: !1390, size: 64)
!12484 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !12481, file: !12480, line: 70, baseType: !1390, size: 64, offset: 64)
!12485 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !12481, file: !12480, line: 73, baseType: !1390, size: 64, offset: 128)
!12486 = !DILocation(line: 2154, column: 13, scope: !12448)
!12487 = !DILocalVariable(name: "ak", scope: !12448, file: !3, line: 2155, type: !3568)
!12488 = !DILocation(line: 2155, column: 16, scope: !12448)
!12489 = !DILocalVariable(name: "cfra", scope: !12448, file: !3, line: 2156, type: !1407)
!12490 = !DILocation(line: 2156, column: 8, scope: !12448)
!12491 = !DILocalVariable(name: "next", scope: !12448, file: !3, line: 2157, type: !5801)
!12492 = !DILocation(line: 2157, column: 13, scope: !12448)
!12493 = !DILocation(line: 2157, column: 36, scope: !12448)
!12494 = !DILocation(line: 2157, column: 40, scope: !12448)
!12495 = !DILocation(line: 2157, column: 20, scope: !12448)
!12496 = !DILocalVariable(name: "done", scope: !12448, file: !3, line: 2158, type: !2425)
!12497 = !DILocation(line: 2158, column: 7, scope: !12448)
!12498 = !DILocation(line: 2161, column: 6, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12448, file: !3, line: 2161, column: 6)
!12500 = !DILocation(line: 2161, column: 12, scope: !12499)
!12501 = !DILocation(line: 2161, column: 6, scope: !12448)
!12502 = !DILocation(line: 2162, column: 3, scope: !12499)
!12503 = !DILocation(line: 2164, column: 17, scope: !12448)
!12504 = !DILocation(line: 2164, column: 9, scope: !12448)
!12505 = !DILocation(line: 2164, column: 7, scope: !12448)
!12506 = !DILocation(line: 2167, column: 2, scope: !12448)
!12507 = !DILocation(line: 2170, column: 7, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12448, file: !3, line: 2170, column: 6)
!12509 = !DILocation(line: 2170, column: 14, scope: !12508)
!12510 = !DILocation(line: 2170, column: 19, scope: !12508)
!12511 = !DILocation(line: 2170, column: 42, scope: !12508)
!12512 = !DILocation(line: 2170, column: 6, scope: !12448)
!12513 = !DILocation(line: 2172, column: 7, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12508, file: !3, line: 2170, column: 48)
!12515 = !DILocation(line: 2172, column: 18, scope: !12514)
!12516 = !DILocation(line: 2173, column: 2, scope: !12514)
!12517 = !DILocation(line: 2176, column: 25, scope: !12448)
!12518 = !DILocation(line: 2176, column: 2, scope: !12448)
!12519 = !DILocation(line: 2178, column: 6, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12448, file: !3, line: 2178, column: 6)
!12521 = !DILocation(line: 2178, column: 6, scope: !12448)
!12522 = !DILocation(line: 2179, column: 23, scope: !12520)
!12523 = !DILocation(line: 2179, column: 3, scope: !12520)
!12524 = !DILocalVariable(name: "mask", scope: !12525, file: !3, line: 2182, type: !12526)
!12525 = distinct !DILexicalBlock(scope: !12448, file: !3, line: 2181, column: 2)
!12526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12527, size: 64)
!12527 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mask", file: !2359, line: 57, baseType: !2358)
!12528 = !DILocation(line: 2182, column: 9, scope: !12525)
!12529 = !DILocation(line: 2182, column: 35, scope: !12525)
!12530 = !DILocation(line: 2182, column: 16, scope: !12525)
!12531 = !DILocation(line: 2183, column: 7, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12525, file: !3, line: 2183, column: 7)
!12533 = !DILocation(line: 2183, column: 7, scope: !12525)
!12534 = !DILocalVariable(name: "masklay", scope: !12535, file: !3, line: 2184, type: !12536)
!12535 = distinct !DILexicalBlock(scope: !12532, file: !3, line: 2183, column: 13)
!12536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12537, size: 64)
!12537 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskLayer", file: !2359, line: 142, baseType: !12538)
!12538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskLayer", file: !2359, line: 122, size: 1152, elements: !12539)
!12539 = !{!12540, !12542, !12543, !12544, !12545, !12546, !12604, !12606, !12607, !12608, !12609, !12610, !12611, !12612}
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12538, file: !2359, line: 123, baseType: !12541, size: 64)
!12541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12538, size: 64)
!12542 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12538, file: !2359, line: 123, baseType: !12541, size: 64, offset: 64)
!12543 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12538, file: !2359, line: 125, baseType: !1461, size: 512, offset: 128)
!12544 = !DIDerivedType(tag: DW_TAG_member, name: "splines", scope: !12538, file: !2359, line: 127, baseType: !1399, size: 128, offset: 640)
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "splines_shapes", scope: !12538, file: !2359, line: 128, baseType: !1399, size: 128, offset: 768)
!12546 = !DIDerivedType(tag: DW_TAG_member, name: "act_spline", scope: !12538, file: !2359, line: 130, baseType: !12547, size: 64, offset: 896)
!12547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12548, size: 64)
!12548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpline", file: !2359, line: 88, size: 1792, elements: !12549)
!12549 = !{!12550, !12551, !12552, !12553, !12554, !12555, !12556, !12602, !12603}
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12548, file: !2359, line: 89, baseType: !12547, size: 64)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12548, file: !2359, line: 89, baseType: !12547, size: 64, offset: 64)
!12552 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12548, file: !2359, line: 91, baseType: !1410, size: 16, offset: 128)
!12553 = !DIDerivedType(tag: DW_TAG_member, name: "offset_mode", scope: !12548, file: !2359, line: 92, baseType: !1433, size: 8, offset: 144)
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "weight_interp", scope: !12548, file: !2359, line: 93, baseType: !1433, size: 8, offset: 152)
!12555 = !DIDerivedType(tag: DW_TAG_member, name: "tot_point", scope: !12548, file: !2359, line: 95, baseType: !1242, size: 32, offset: 160)
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !12548, file: !2359, line: 96, baseType: !12557, size: 64, offset: 192)
!12557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12558, size: 64)
!12558 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSplinePoint", file: !2359, line: 86, baseType: !12559)
!12559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSplinePoint", file: !2359, line: 80, size: 2176, elements: !12560)
!12560 = !{!12561, !12581, !12582, !12583, !12591}
!12561 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !12559, file: !2359, line: 81, baseType: !12562, size: 576)
!12562 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !1582, line: 133, baseType: !12563)
!12563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !1582, line: 117, size: 576, elements: !12564)
!12564 = !{!12565, !12566, !12567, !12568, !12569, !12570, !12571, !12572, !12573, !12574, !12575, !12576, !12577, !12578, !12579, !12580}
!12565 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !12563, file: !1582, line: 118, baseType: !1507, size: 288)
!12566 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !12563, file: !1582, line: 119, baseType: !1407, size: 32, offset: 288)
!12567 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !12563, file: !1582, line: 119, baseType: !1407, size: 32, offset: 320)
!12568 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !12563, file: !1582, line: 119, baseType: !1407, size: 32, offset: 352)
!12569 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !12563, file: !1582, line: 121, baseType: !1433, size: 8, offset: 384)
!12570 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !12563, file: !1582, line: 123, baseType: !1433, size: 8, offset: 392)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !12563, file: !1582, line: 123, baseType: !1433, size: 8, offset: 400)
!12572 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !12563, file: !1582, line: 124, baseType: !1433, size: 8, offset: 408)
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !12563, file: !1582, line: 124, baseType: !1433, size: 8, offset: 416)
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !12563, file: !1582, line: 124, baseType: !1433, size: 8, offset: 424)
!12575 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !12563, file: !1582, line: 126, baseType: !1433, size: 8, offset: 432)
!12576 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !12563, file: !1582, line: 128, baseType: !1433, size: 8, offset: 440)
!12577 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !12563, file: !1582, line: 129, baseType: !1407, size: 32, offset: 448)
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !12563, file: !1582, line: 130, baseType: !1407, size: 32, offset: 480)
!12579 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !12563, file: !1582, line: 130, baseType: !1407, size: 32, offset: 512)
!12580 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12563, file: !1582, line: 132, baseType: !1608, size: 32, offset: 544)
!12581 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12559, file: !2359, line: 82, baseType: !1242, size: 32, offset: 576)
!12582 = !DIDerivedType(tag: DW_TAG_member, name: "tot_uw", scope: !12559, file: !2359, line: 83, baseType: !1242, size: 32, offset: 608)
!12583 = !DIDerivedType(tag: DW_TAG_member, name: "uw", scope: !12559, file: !2359, line: 84, baseType: !12584, size: 64, offset: 640)
!12584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12585, size: 64)
!12585 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSplinePointUW", file: !2359, line: 78, baseType: !12586)
!12586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSplinePointUW", file: !2359, line: 75, size: 96, elements: !12587)
!12587 = !{!12588, !12589, !12590}
!12588 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !12586, file: !2359, line: 76, baseType: !1407, size: 32)
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !12586, file: !2359, line: 76, baseType: !1407, size: 32, offset: 32)
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12586, file: !2359, line: 77, baseType: !1242, size: 32, offset: 64)
!12591 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !12559, file: !2359, line: 85, baseType: !12592, size: 1472, offset: 704)
!12592 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskParent", file: !2359, line: 73, baseType: !12593)
!12593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskParent", file: !2359, line: 59, size: 1472, elements: !12594)
!12594 = !{!12595, !12596, !12597, !12598, !12599, !12600, !12601}
!12595 = !DIDerivedType(tag: DW_TAG_member, name: "id_type", scope: !12593, file: !2359, line: 61, baseType: !1242, size: 32)
!12596 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12593, file: !2359, line: 62, baseType: !1242, size: 32, offset: 32)
!12597 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12593, file: !2359, line: 63, baseType: !1413, size: 64, offset: 64)
!12598 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !12593, file: !2359, line: 65, baseType: !1461, size: 512, offset: 128)
!12599 = !DIDerivedType(tag: DW_TAG_member, name: "sub_parent", scope: !12593, file: !2359, line: 67, baseType: !1461, size: 512, offset: 640)
!12600 = !DIDerivedType(tag: DW_TAG_member, name: "parent_orig", scope: !12593, file: !2359, line: 69, baseType: !1846, size: 64, offset: 1152)
!12601 = !DIDerivedType(tag: DW_TAG_member, name: "parent_corners_orig", scope: !12593, file: !2359, line: 72, baseType: !2196, size: 256, offset: 1216)
!12602 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !12548, file: !2359, line: 97, baseType: !12592, size: 1472, offset: 256)
!12603 = !DIDerivedType(tag: DW_TAG_member, name: "points_deform", scope: !12548, file: !2359, line: 99, baseType: !12557, size: 64, offset: 1728)
!12604 = !DIDerivedType(tag: DW_TAG_member, name: "act_point", scope: !12538, file: !2359, line: 131, baseType: !12605, size: 64, offset: 960)
!12605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12559, size: 64)
!12606 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !12538, file: !2359, line: 134, baseType: !1407, size: 32, offset: 1024)
!12607 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !12538, file: !2359, line: 135, baseType: !1433, size: 8, offset: 1056)
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "blend_flag", scope: !12538, file: !2359, line: 136, baseType: !1433, size: 8, offset: 1064)
!12609 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !12538, file: !2359, line: 137, baseType: !1433, size: 8, offset: 1072)
!12610 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12538, file: !2359, line: 138, baseType: !2311, size: 56, offset: 1080)
!12611 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12538, file: !2359, line: 140, baseType: !1433, size: 8, offset: 1136)
!12612 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !12538, file: !2359, line: 141, baseType: !1433, size: 8, offset: 1144)
!12613 = !DILocation(line: 2184, column: 15, scope: !12535)
!12614 = !DILocation(line: 2184, column: 47, scope: !12535)
!12615 = !DILocation(line: 2184, column: 25, scope: !12535)
!12616 = !DILocation(line: 2185, column: 26, scope: !12535)
!12617 = !DILocation(line: 2185, column: 4, scope: !12535)
!12618 = !DILocation(line: 2186, column: 3, scope: !12535)
!12619 = !DILocation(line: 2190, column: 2, scope: !12448)
!12620 = !DILocation(line: 2193, column: 2, scope: !12448)
!12621 = !DILocation(line: 2194, column: 7, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 2194, column: 7)
!12623 = distinct !DILexicalBlock(scope: !12448, file: !3, line: 2193, column: 5)
!12624 = !DILocation(line: 2194, column: 7, scope: !12623)
!12625 = !DILocation(line: 2195, column: 77, scope: !12622)
!12626 = !DILocation(line: 2195, column: 25, scope: !12622)
!12627 = !DILocation(line: 2195, column: 9, scope: !12622)
!12628 = !DILocation(line: 2195, column: 7, scope: !12622)
!12629 = !DILocation(line: 2195, column: 4, scope: !12622)
!12630 = !DILocation(line: 2197, column: 77, scope: !12622)
!12631 = !DILocation(line: 2197, column: 25, scope: !12622)
!12632 = !DILocation(line: 2197, column: 9, scope: !12622)
!12633 = !DILocation(line: 2197, column: 7, scope: !12622)
!12634 = !DILocation(line: 2199, column: 7, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 2199, column: 7)
!12636 = !DILocation(line: 2199, column: 7, scope: !12623)
!12637 = !DILocation(line: 2200, column: 8, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12639, file: !3, line: 2200, column: 8)
!12639 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 2199, column: 11)
!12640 = !DILocation(line: 2200, column: 21, scope: !12638)
!12641 = !DILocation(line: 2200, column: 25, scope: !12638)
!12642 = !DILocation(line: 2200, column: 16, scope: !12638)
!12643 = !DILocation(line: 2200, column: 13, scope: !12638)
!12644 = !DILocation(line: 2200, column: 8, scope: !12639)
!12645 = !DILocation(line: 2202, column: 17, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12638, file: !3, line: 2200, column: 31)
!12647 = !DILocation(line: 2202, column: 21, scope: !12646)
!12648 = !DILocation(line: 2202, column: 12, scope: !12646)
!12649 = !DILocation(line: 2202, column: 5, scope: !12646)
!12650 = !DILocation(line: 2202, column: 10, scope: !12646)
!12651 = !DILocation(line: 2203, column: 10, scope: !12646)
!12652 = !DILocation(line: 2204, column: 4, scope: !12646)
!12653 = !DILocation(line: 2207, column: 12, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12638, file: !3, line: 2205, column: 9)
!12655 = !DILocation(line: 2207, column: 16, scope: !12654)
!12656 = !DILocation(line: 2207, column: 10, scope: !12654)
!12657 = !DILocation(line: 2209, column: 3, scope: !12639)
!12658 = !DILocation(line: 2210, column: 2, scope: !12623)
!12659 = !DILocation(line: 2210, column: 12, scope: !12448)
!12660 = !DILocation(line: 2210, column: 15, scope: !12448)
!12661 = !DILocation(line: 2210, column: 24, scope: !12448)
!12662 = !DILocation(line: 2210, column: 28, scope: !12448)
!12663 = !DILocation(line: 2210, column: 33, scope: !12448)
!12664 = !DILocation(line: 0, scope: !12448)
!12665 = distinct !{!12665, !12620, !12666}
!12666 = !DILocation(line: 2210, column: 42, scope: !12448)
!12667 = !DILocation(line: 2213, column: 2, scope: !12448)
!12668 = !DILocation(line: 2216, column: 6, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12448, file: !3, line: 2216, column: 6)
!12670 = !DILocation(line: 2216, column: 11, scope: !12669)
!12671 = !DILocation(line: 2216, column: 6, scope: !12448)
!12672 = !DILocation(line: 2217, column: 14, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 2216, column: 21)
!12674 = !DILocation(line: 2217, column: 18, scope: !12673)
!12675 = !DILocation(line: 2217, column: 3, scope: !12673)
!12676 = !DILocation(line: 2219, column: 3, scope: !12673)
!12677 = !DILocation(line: 2222, column: 20, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 2221, column: 7)
!12679 = !DILocation(line: 2222, column: 27, scope: !12678)
!12680 = !DILocation(line: 2222, column: 3, scope: !12678)
!12681 = !DILocation(line: 2224, column: 25, scope: !12678)
!12682 = !DILocation(line: 2224, column: 49, scope: !12678)
!12683 = !DILocation(line: 2224, column: 3, scope: !12678)
!12684 = !DILocation(line: 2226, column: 3, scope: !12678)
!12685 = !DILocation(line: 2228, column: 1, scope: !12448)
!12686 = distinct !DISubprogram(name: "marker_jump_exec", scope: !3, file: !3, line: 2248, type: !7473, scopeLine: 2249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!12687 = !DILocalVariable(name: "C", arg: 1, scope: !12686, file: !3, line: 2248, type: !3734)
!12688 = !DILocation(line: 2248, column: 39, scope: !12686)
!12689 = !DILocalVariable(name: "op", arg: 2, scope: !12686, file: !3, line: 2248, type: !7081)
!12690 = !DILocation(line: 2248, column: 54, scope: !12686)
!12691 = !DILocalVariable(name: "bmain", scope: !12686, file: !3, line: 2250, type: !11801)
!12692 = !DILocation(line: 2250, column: 8, scope: !12686)
!12693 = !DILocation(line: 2250, column: 30, scope: !12686)
!12694 = !DILocation(line: 2250, column: 16, scope: !12686)
!12695 = !DILocalVariable(name: "scene", scope: !12686, file: !3, line: 2251, type: !3831)
!12696 = !DILocation(line: 2251, column: 9, scope: !12686)
!12697 = !DILocation(line: 2251, column: 32, scope: !12686)
!12698 = !DILocation(line: 2251, column: 17, scope: !12686)
!12699 = !DILocalVariable(name: "marker", scope: !12686, file: !3, line: 2252, type: !12700)
!12700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12701, size: 64)
!12701 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeMarker", file: !1858, line: 805, baseType: !12702)
!12702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TimeMarker", file: !1858, line: 799, size: 768, elements: !12703)
!12703 = !{!12704, !12706, !12707, !12708, !12709, !12710}
!12704 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12702, file: !1858, line: 800, baseType: !12705, size: 64)
!12705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12702, size: 64)
!12706 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12702, file: !1858, line: 800, baseType: !12705, size: 64, offset: 64)
!12707 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !12702, file: !1858, line: 801, baseType: !1242, size: 32, offset: 128)
!12708 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12702, file: !1858, line: 802, baseType: !1461, size: 512, offset: 160)
!12709 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12702, file: !1858, line: 803, baseType: !7, size: 32, offset: 672)
!12710 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !12702, file: !1858, line: 804, baseType: !1611, size: 64, offset: 704)
!12711 = !DILocation(line: 2252, column: 14, scope: !12686)
!12712 = !DILocalVariable(name: "closest", scope: !12686, file: !3, line: 2253, type: !1242)
!12713 = !DILocation(line: 2253, column: 6, scope: !12686)
!12714 = !DILocation(line: 2253, column: 16, scope: !12686)
!12715 = !DILocalVariable(name: "next", scope: !12686, file: !3, line: 2254, type: !5801)
!12716 = !DILocation(line: 2254, column: 13, scope: !12686)
!12717 = !DILocation(line: 2254, column: 36, scope: !12686)
!12718 = !DILocation(line: 2254, column: 40, scope: !12686)
!12719 = !DILocation(line: 2254, column: 20, scope: !12686)
!12720 = !DILocalVariable(name: "found", scope: !12686, file: !3, line: 2255, type: !2425)
!12721 = !DILocation(line: 2255, column: 7, scope: !12686)
!12722 = !DILocation(line: 2258, column: 16, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12686, file: !3, line: 2258, column: 2)
!12724 = !DILocation(line: 2258, column: 23, scope: !12723)
!12725 = !DILocation(line: 2258, column: 31, scope: !12723)
!12726 = !DILocation(line: 2258, column: 14, scope: !12723)
!12727 = !DILocation(line: 2258, column: 7, scope: !12723)
!12728 = !DILocation(line: 2258, column: 38, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12723, file: !3, line: 2258, column: 2)
!12730 = !DILocation(line: 2258, column: 2, scope: !12723)
!12731 = !DILocation(line: 2259, column: 7, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12733, file: !3, line: 2259, column: 7)
!12733 = distinct !DILexicalBlock(scope: !12729, file: !3, line: 2258, column: 69)
!12734 = !DILocation(line: 2259, column: 7, scope: !12733)
!12735 = !DILocation(line: 2260, column: 9, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12737, file: !3, line: 2260, column: 8)
!12737 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 2259, column: 13)
!12738 = !DILocation(line: 2260, column: 17, scope: !12736)
!12739 = !DILocation(line: 2260, column: 25, scope: !12736)
!12740 = !DILocation(line: 2260, column: 23, scope: !12736)
!12741 = !DILocation(line: 2260, column: 31, scope: !12736)
!12742 = !DILocation(line: 2260, column: 36, scope: !12736)
!12743 = !DILocation(line: 2260, column: 42, scope: !12736)
!12744 = !DILocation(line: 2260, column: 45, scope: !12736)
!12745 = !DILocation(line: 2260, column: 55, scope: !12736)
!12746 = !DILocation(line: 2260, column: 63, scope: !12736)
!12747 = !DILocation(line: 2260, column: 53, scope: !12736)
!12748 = !DILocation(line: 2260, column: 8, scope: !12737)
!12749 = !DILocation(line: 2261, column: 15, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12736, file: !3, line: 2260, column: 71)
!12751 = !DILocation(line: 2261, column: 23, scope: !12750)
!12752 = !DILocation(line: 2261, column: 13, scope: !12750)
!12753 = !DILocation(line: 2262, column: 11, scope: !12750)
!12754 = !DILocation(line: 2263, column: 4, scope: !12750)
!12755 = !DILocation(line: 2264, column: 3, scope: !12737)
!12756 = !DILocation(line: 2266, column: 9, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 2266, column: 8)
!12758 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 2265, column: 8)
!12759 = !DILocation(line: 2266, column: 17, scope: !12757)
!12760 = !DILocation(line: 2266, column: 25, scope: !12757)
!12761 = !DILocation(line: 2266, column: 23, scope: !12757)
!12762 = !DILocation(line: 2266, column: 31, scope: !12757)
!12763 = !DILocation(line: 2266, column: 36, scope: !12757)
!12764 = !DILocation(line: 2266, column: 42, scope: !12757)
!12765 = !DILocation(line: 2266, column: 45, scope: !12757)
!12766 = !DILocation(line: 2266, column: 55, scope: !12757)
!12767 = !DILocation(line: 2266, column: 63, scope: !12757)
!12768 = !DILocation(line: 2266, column: 53, scope: !12757)
!12769 = !DILocation(line: 2266, column: 8, scope: !12758)
!12770 = !DILocation(line: 2267, column: 15, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12757, file: !3, line: 2266, column: 71)
!12772 = !DILocation(line: 2267, column: 23, scope: !12771)
!12773 = !DILocation(line: 2267, column: 13, scope: !12771)
!12774 = !DILocation(line: 2268, column: 11, scope: !12771)
!12775 = !DILocation(line: 2269, column: 4, scope: !12771)
!12776 = !DILocation(line: 2271, column: 2, scope: !12733)
!12777 = !DILocation(line: 2258, column: 55, scope: !12729)
!12778 = !DILocation(line: 2258, column: 63, scope: !12729)
!12779 = !DILocation(line: 2258, column: 53, scope: !12729)
!12780 = !DILocation(line: 2258, column: 2, scope: !12729)
!12781 = distinct !{!12781, !12730, !12782}
!12782 = !DILocation(line: 2271, column: 2, scope: !12723)
!12783 = !DILocation(line: 2274, column: 7, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12686, file: !3, line: 2274, column: 6)
!12785 = !DILocation(line: 2274, column: 6, scope: !12686)
!12786 = !DILocation(line: 2275, column: 14, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12784, file: !3, line: 2274, column: 14)
!12788 = !DILocation(line: 2275, column: 18, scope: !12787)
!12789 = !DILocation(line: 2275, column: 3, scope: !12787)
!12790 = !DILocation(line: 2277, column: 3, scope: !12787)
!12791 = !DILocation(line: 2280, column: 10, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12784, file: !3, line: 2279, column: 7)
!12793 = !DILocation(line: 2280, column: 3, scope: !12792)
!12794 = !DILocation(line: 2280, column: 8, scope: !12792)
!12795 = !DILocation(line: 2282, column: 20, scope: !12792)
!12796 = !DILocation(line: 2282, column: 27, scope: !12792)
!12797 = !DILocation(line: 2282, column: 3, scope: !12792)
!12798 = !DILocation(line: 2284, column: 25, scope: !12792)
!12799 = !DILocation(line: 2284, column: 49, scope: !12792)
!12800 = !DILocation(line: 2284, column: 3, scope: !12792)
!12801 = !DILocation(line: 2286, column: 3, scope: !12792)
!12802 = !DILocation(line: 2288, column: 1, scope: !12686)
!12803 = distinct !DISubprogram(name: "screen_animation_step", scope: !3, file: !3, line: 3376, type: !7079, scopeLine: 3377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!12804 = !DILocalVariable(name: "C", arg: 1, scope: !12803, file: !3, line: 3376, type: !3734)
!12805 = !DILocation(line: 3376, column: 44, scope: !12803)
!12806 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !12803, file: !3, line: 3376, type: !7081)
!12807 = !DILocation(line: 3376, column: 59, scope: !12803)
!12808 = !DILocalVariable(name: "event", arg: 3, scope: !12803, file: !3, line: 3376, type: !6997)
!12809 = !DILocation(line: 3376, column: 86, scope: !12803)
!12810 = !DILocalVariable(name: "screen", scope: !12803, file: !3, line: 3378, type: !3298)
!12811 = !DILocation(line: 3378, column: 11, scope: !12803)
!12812 = !DILocation(line: 3378, column: 34, scope: !12803)
!12813 = !DILocation(line: 3378, column: 20, scope: !12803)
!12814 = !DILocation(line: 3380, column: 6, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12803, file: !3, line: 3380, column: 6)
!12816 = !DILocation(line: 3380, column: 14, scope: !12815)
!12817 = !DILocation(line: 3380, column: 24, scope: !12815)
!12818 = !DILocation(line: 3380, column: 27, scope: !12815)
!12819 = !DILocation(line: 3380, column: 35, scope: !12815)
!12820 = !DILocation(line: 3380, column: 48, scope: !12815)
!12821 = !DILocation(line: 3380, column: 55, scope: !12815)
!12822 = !DILocation(line: 3380, column: 45, scope: !12815)
!12823 = !DILocation(line: 3380, column: 6, scope: !12803)
!12824 = !DILocalVariable(name: "bmain", scope: !12825, file: !3, line: 3381, type: !11801)
!12825 = distinct !DILexicalBlock(scope: !12815, file: !3, line: 3380, column: 67)
!12826 = !DILocation(line: 3381, column: 9, scope: !12825)
!12827 = !DILocation(line: 3381, column: 31, scope: !12825)
!12828 = !DILocation(line: 3381, column: 17, scope: !12825)
!12829 = !DILocalVariable(name: "scene", scope: !12825, file: !3, line: 3382, type: !3831)
!12830 = !DILocation(line: 3382, column: 10, scope: !12825)
!12831 = !DILocation(line: 3382, column: 33, scope: !12825)
!12832 = !DILocation(line: 3382, column: 18, scope: !12825)
!12833 = !DILocalVariable(name: "wt", scope: !12825, file: !3, line: 3383, type: !5613)
!12834 = !DILocation(line: 3383, column: 12, scope: !12825)
!12835 = !DILocation(line: 3383, column: 17, scope: !12825)
!12836 = !DILocation(line: 3383, column: 25, scope: !12825)
!12837 = !DILocalVariable(name: "sad", scope: !12825, file: !3, line: 3384, type: !5619)
!12838 = !DILocation(line: 3384, column: 19, scope: !12825)
!12839 = !DILocation(line: 3384, column: 25, scope: !12825)
!12840 = !DILocation(line: 3384, column: 29, scope: !12825)
!12841 = !DILocalVariable(name: "wm", scope: !12825, file: !3, line: 3385, type: !5716)
!12842 = !DILocation(line: 3385, column: 20, scope: !12825)
!12843 = !DILocation(line: 3385, column: 40, scope: !12825)
!12844 = !DILocation(line: 3385, column: 25, scope: !12825)
!12845 = !DILocalVariable(name: "window", scope: !12825, file: !3, line: 3386, type: !5535)
!12846 = !DILocation(line: 3386, column: 13, scope: !12825)
!12847 = !DILocalVariable(name: "sa", scope: !12825, file: !3, line: 3387, type: !3286)
!12848 = !DILocation(line: 3387, column: 12, scope: !12825)
!12849 = !DILocalVariable(name: "sync", scope: !12825, file: !3, line: 3388, type: !1242)
!12850 = !DILocation(line: 3388, column: 7, scope: !12825)
!12851 = !DILocalVariable(name: "time", scope: !12825, file: !3, line: 3389, type: !1407)
!12852 = !DILocation(line: 3389, column: 9, scope: !12825)
!12853 = !DILocation(line: 3392, column: 7, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 3392, column: 7)
!12855 = !DILocation(line: 3392, column: 12, scope: !12854)
!12856 = !DILocation(line: 3392, column: 17, scope: !12854)
!12857 = !DILocation(line: 3392, column: 7, scope: !12825)
!12858 = !DILocation(line: 3392, column: 44, scope: !12854)
!12859 = !DILocation(line: 3392, column: 39, scope: !12854)
!12860 = !DILocation(line: 3393, column: 12, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12854, file: !3, line: 3393, column: 12)
!12862 = !DILocation(line: 3393, column: 17, scope: !12861)
!12863 = !DILocation(line: 3393, column: 22, scope: !12861)
!12864 = !DILocation(line: 3393, column: 12, scope: !12854)
!12865 = !DILocation(line: 3393, column: 52, scope: !12861)
!12866 = !DILocation(line: 3393, column: 47, scope: !12861)
!12867 = !DILocation(line: 3394, column: 16, scope: !12861)
!12868 = !DILocation(line: 3394, column: 23, scope: !12861)
!12869 = !DILocation(line: 3394, column: 28, scope: !12861)
!12870 = !DILocation(line: 3394, column: 13, scope: !12861)
!12871 = !DILocation(line: 3405, column: 8, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 3405, column: 8)
!12873 = !DILocation(line: 3405, column: 8, scope: !12825)
!12874 = !DILocalVariable(name: "step", scope: !12875, file: !3, line: 3409, type: !5215)
!12875 = distinct !DILexicalBlock(scope: !12872, file: !3, line: 3405, column: 14)
!12876 = !DILocation(line: 3409, column: 15, scope: !12875)
!12877 = !DILocation(line: 3409, column: 39, scope: !12875)
!12878 = !DILocation(line: 3409, column: 43, scope: !12875)
!12879 = !DILocation(line: 3409, column: 54, scope: !12875)
!12880 = !DILocation(line: 3409, column: 59, scope: !12875)
!12881 = !DILocation(line: 3409, column: 52, scope: !12875)
!12882 = !DILocation(line: 3409, column: 76, scope: !12875)
!12883 = !DILocation(line: 3409, column: 74, scope: !12875)
!12884 = !DILocation(line: 3409, column: 32, scope: !12875)
!12885 = !DILocation(line: 3409, column: 22, scope: !12875)
!12886 = !DILocation(line: 3412, column: 9, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12875, file: !3, line: 3412, column: 9)
!12888 = !DILocation(line: 3412, column: 14, scope: !12887)
!12889 = !DILocation(line: 3412, column: 19, scope: !12887)
!12890 = !DILocation(line: 3412, column: 9, scope: !12875)
!12891 = !DILocation(line: 3413, column: 23, scope: !12887)
!12892 = !DILocation(line: 3413, column: 6, scope: !12887)
!12893 = !DILocation(line: 3413, column: 13, scope: !12887)
!12894 = !DILocation(line: 3413, column: 15, scope: !12887)
!12895 = !DILocation(line: 3413, column: 20, scope: !12887)
!12896 = !DILocation(line: 3415, column: 23, scope: !12887)
!12897 = !DILocation(line: 3415, column: 6, scope: !12887)
!12898 = !DILocation(line: 3415, column: 13, scope: !12887)
!12899 = !DILocation(line: 3415, column: 15, scope: !12887)
!12900 = !DILocation(line: 3415, column: 20, scope: !12887)
!12901 = !DILocation(line: 3416, column: 4, scope: !12875)
!12902 = !DILocation(line: 3419, column: 9, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12904, file: !3, line: 3419, column: 9)
!12904 = distinct !DILexicalBlock(scope: !12872, file: !3, line: 3417, column: 9)
!12905 = !DILocation(line: 3419, column: 14, scope: !12903)
!12906 = !DILocation(line: 3419, column: 19, scope: !12903)
!12907 = !DILocation(line: 3419, column: 9, scope: !12904)
!12908 = !DILocation(line: 3420, column: 6, scope: !12903)
!12909 = !DILocation(line: 3420, column: 13, scope: !12903)
!12910 = !DILocation(line: 3420, column: 15, scope: !12903)
!12911 = !DILocation(line: 3420, column: 19, scope: !12903)
!12912 = !DILocation(line: 3422, column: 6, scope: !12903)
!12913 = !DILocation(line: 3422, column: 13, scope: !12903)
!12914 = !DILocation(line: 3422, column: 15, scope: !12903)
!12915 = !DILocation(line: 3422, column: 19, scope: !12903)
!12916 = !DILocation(line: 3427, column: 24, scope: !12825)
!12917 = !DILocation(line: 3427, column: 28, scope: !12825)
!12918 = !DILocation(line: 3427, column: 3, scope: !12825)
!12919 = !DILocation(line: 3427, column: 8, scope: !12825)
!12920 = !DILocation(line: 3427, column: 22, scope: !12825)
!12921 = !DILocation(line: 3430, column: 3, scope: !12825)
!12922 = !DILocation(line: 3430, column: 8, scope: !12825)
!12923 = !DILocation(line: 3430, column: 13, scope: !12825)
!12924 = !DILocation(line: 3432, column: 7, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 3432, column: 7)
!12926 = !DILocation(line: 3432, column: 12, scope: !12925)
!12927 = !DILocation(line: 3432, column: 17, scope: !12925)
!12928 = !DILocation(line: 3432, column: 7, scope: !12825)
!12929 = !DILocation(line: 3434, column: 8, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12931, file: !3, line: 3434, column: 8)
!12931 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 3432, column: 42)
!12932 = !DILocation(line: 3434, column: 8, scope: !12931)
!12933 = !DILocation(line: 3435, column: 9, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12935, file: !3, line: 3435, column: 9)
!12935 = distinct !DILexicalBlock(scope: !12930, file: !3, line: 3434, column: 20)
!12936 = !DILocation(line: 3435, column: 16, scope: !12934)
!12937 = !DILocation(line: 3435, column: 18, scope: !12934)
!12938 = !DILocation(line: 3435, column: 25, scope: !12934)
!12939 = !DILocation(line: 3435, column: 32, scope: !12934)
!12940 = !DILocation(line: 3435, column: 34, scope: !12934)
!12941 = !DILocation(line: 3435, column: 23, scope: !12934)
!12942 = !DILocation(line: 3435, column: 9, scope: !12935)
!12943 = !DILocation(line: 3436, column: 22, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 3435, column: 41)
!12945 = !DILocation(line: 3436, column: 29, scope: !12944)
!12946 = !DILocation(line: 3436, column: 31, scope: !12944)
!12947 = !DILocation(line: 3436, column: 6, scope: !12944)
!12948 = !DILocation(line: 3436, column: 13, scope: !12944)
!12949 = !DILocation(line: 3436, column: 15, scope: !12944)
!12950 = !DILocation(line: 3436, column: 20, scope: !12944)
!12951 = !DILocation(line: 3437, column: 6, scope: !12944)
!12952 = !DILocation(line: 3437, column: 11, scope: !12944)
!12953 = !DILocation(line: 3437, column: 16, scope: !12944)
!12954 = !DILocation(line: 3438, column: 5, scope: !12944)
!12955 = !DILocation(line: 3439, column: 4, scope: !12935)
!12956 = !DILocation(line: 3441, column: 9, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 3441, column: 9)
!12958 = distinct !DILexicalBlock(scope: !12930, file: !3, line: 3440, column: 9)
!12959 = !DILocation(line: 3441, column: 16, scope: !12957)
!12960 = !DILocation(line: 3441, column: 18, scope: !12957)
!12961 = !DILocation(line: 3441, column: 25, scope: !12957)
!12962 = !DILocation(line: 3441, column: 32, scope: !12957)
!12963 = !DILocation(line: 3441, column: 34, scope: !12957)
!12964 = !DILocation(line: 3441, column: 23, scope: !12957)
!12965 = !DILocation(line: 3441, column: 9, scope: !12958)
!12966 = !DILocation(line: 3442, column: 22, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12957, file: !3, line: 3441, column: 40)
!12968 = !DILocation(line: 3442, column: 29, scope: !12967)
!12969 = !DILocation(line: 3442, column: 31, scope: !12967)
!12970 = !DILocation(line: 3442, column: 6, scope: !12967)
!12971 = !DILocation(line: 3442, column: 13, scope: !12967)
!12972 = !DILocation(line: 3442, column: 15, scope: !12967)
!12973 = !DILocation(line: 3442, column: 20, scope: !12967)
!12974 = !DILocation(line: 3443, column: 6, scope: !12967)
!12975 = !DILocation(line: 3443, column: 11, scope: !12967)
!12976 = !DILocation(line: 3443, column: 16, scope: !12967)
!12977 = !DILocation(line: 3444, column: 5, scope: !12967)
!12978 = !DILocation(line: 3446, column: 3, scope: !12931)
!12979 = !DILocation(line: 3449, column: 8, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12981, file: !3, line: 3449, column: 8)
!12981 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 3447, column: 8)
!12982 = !DILocation(line: 3449, column: 8, scope: !12981)
!12983 = !DILocation(line: 3450, column: 9, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12985, file: !3, line: 3450, column: 9)
!12985 = distinct !DILexicalBlock(scope: !12980, file: !3, line: 3449, column: 20)
!12986 = !DILocation(line: 3450, column: 16, scope: !12984)
!12987 = !DILocation(line: 3450, column: 18, scope: !12984)
!12988 = !DILocation(line: 3450, column: 25, scope: !12984)
!12989 = !DILocation(line: 3450, column: 32, scope: !12984)
!12990 = !DILocation(line: 3450, column: 34, scope: !12984)
!12991 = !DILocation(line: 3450, column: 23, scope: !12984)
!12992 = !DILocation(line: 3450, column: 9, scope: !12985)
!12993 = !DILocation(line: 3451, column: 22, scope: !12994)
!12994 = distinct !DILexicalBlock(scope: !12984, file: !3, line: 3450, column: 41)
!12995 = !DILocation(line: 3451, column: 29, scope: !12994)
!12996 = !DILocation(line: 3451, column: 31, scope: !12994)
!12997 = !DILocation(line: 3451, column: 6, scope: !12994)
!12998 = !DILocation(line: 3451, column: 13, scope: !12994)
!12999 = !DILocation(line: 3451, column: 15, scope: !12994)
!13000 = !DILocation(line: 3451, column: 20, scope: !12994)
!13001 = !DILocation(line: 3452, column: 6, scope: !12994)
!13002 = !DILocation(line: 3452, column: 11, scope: !12994)
!13003 = !DILocation(line: 3452, column: 16, scope: !12994)
!13004 = !DILocation(line: 3453, column: 5, scope: !12994)
!13005 = !DILocation(line: 3454, column: 4, scope: !12985)
!13006 = !DILocation(line: 3456, column: 9, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !13008, file: !3, line: 3456, column: 9)
!13008 = distinct !DILexicalBlock(scope: !12980, file: !3, line: 3455, column: 9)
!13009 = !DILocation(line: 3456, column: 16, scope: !13007)
!13010 = !DILocation(line: 3456, column: 18, scope: !13007)
!13011 = !DILocation(line: 3456, column: 25, scope: !13007)
!13012 = !DILocation(line: 3456, column: 32, scope: !13007)
!13013 = !DILocation(line: 3456, column: 34, scope: !13007)
!13014 = !DILocation(line: 3456, column: 23, scope: !13007)
!13015 = !DILocation(line: 3456, column: 9, scope: !13008)
!13016 = !DILocation(line: 3457, column: 22, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !13007, file: !3, line: 3456, column: 40)
!13018 = !DILocation(line: 3457, column: 29, scope: !13017)
!13019 = !DILocation(line: 3457, column: 31, scope: !13017)
!13020 = !DILocation(line: 3457, column: 6, scope: !13017)
!13021 = !DILocation(line: 3457, column: 13, scope: !13017)
!13022 = !DILocation(line: 3457, column: 15, scope: !13017)
!13023 = !DILocation(line: 3457, column: 20, scope: !13017)
!13024 = !DILocation(line: 3458, column: 6, scope: !13017)
!13025 = !DILocation(line: 3458, column: 11, scope: !13017)
!13026 = !DILocation(line: 3458, column: 16, scope: !13017)
!13027 = !DILocation(line: 3459, column: 5, scope: !13017)
!13028 = !DILocation(line: 3464, column: 7, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 3464, column: 7)
!13030 = !DILocation(line: 3464, column: 12, scope: !13029)
!13031 = !DILocation(line: 3464, column: 17, scope: !13029)
!13032 = !DILocation(line: 3464, column: 7, scope: !12825)
!13033 = !DILocation(line: 3465, column: 20, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13029, file: !3, line: 3464, column: 49)
!13035 = !DILocation(line: 3465, column: 25, scope: !13034)
!13036 = !DILocation(line: 3465, column: 4, scope: !13034)
!13037 = !DILocation(line: 3465, column: 11, scope: !13034)
!13038 = !DILocation(line: 3465, column: 13, scope: !13034)
!13039 = !DILocation(line: 3465, column: 18, scope: !13034)
!13040 = !DILocation(line: 3466, column: 4, scope: !13034)
!13041 = !DILocation(line: 3466, column: 9, scope: !13034)
!13042 = !DILocation(line: 3466, column: 14, scope: !13034)
!13043 = !DILocation(line: 3467, column: 4, scope: !13034)
!13044 = !DILocation(line: 3467, column: 9, scope: !13034)
!13045 = !DILocation(line: 3467, column: 14, scope: !13034)
!13046 = !DILocation(line: 3468, column: 3, scope: !13034)
!13047 = !DILocation(line: 3470, column: 7, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 3470, column: 7)
!13049 = !DILocation(line: 3470, column: 12, scope: !13048)
!13050 = !DILocation(line: 3470, column: 17, scope: !13048)
!13051 = !DILocation(line: 3470, column: 7, scope: !12825)
!13052 = !DILocation(line: 3471, column: 21, scope: !13048)
!13053 = !DILocation(line: 3471, column: 28, scope: !13048)
!13054 = !DILocation(line: 3471, column: 4, scope: !13048)
!13055 = !DILocation(line: 3474, column: 26, scope: !12825)
!13056 = !DILocation(line: 3474, column: 33, scope: !12825)
!13057 = !DILocation(line: 3474, column: 3, scope: !12825)
!13058 = !DILocation(line: 3476, column: 17, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 3476, column: 3)
!13060 = !DILocation(line: 3476, column: 21, scope: !13059)
!13061 = !DILocation(line: 3476, column: 29, scope: !13059)
!13062 = !DILocation(line: 3476, column: 15, scope: !13059)
!13063 = !DILocation(line: 3476, column: 8, scope: !13059)
!13064 = !DILocation(line: 3476, column: 36, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13059, file: !3, line: 3476, column: 3)
!13066 = !DILocation(line: 3476, column: 3, scope: !13059)
!13067 = !DILocation(line: 3477, column: 14, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13069, file: !3, line: 3477, column: 4)
!13069 = distinct !DILexicalBlock(scope: !13065, file: !3, line: 3476, column: 67)
!13070 = !DILocation(line: 3477, column: 22, scope: !13068)
!13071 = !DILocation(line: 3477, column: 30, scope: !13068)
!13072 = !DILocation(line: 3477, column: 39, scope: !13068)
!13073 = !DILocation(line: 3477, column: 12, scope: !13068)
!13074 = !DILocation(line: 3477, column: 9, scope: !13068)
!13075 = !DILocation(line: 3477, column: 46, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13068, file: !3, line: 3477, column: 4)
!13077 = !DILocation(line: 3477, column: 4, scope: !13068)
!13078 = !DILocalVariable(name: "ar", scope: !13079, file: !3, line: 3478, type: !5124)
!13079 = distinct !DILexicalBlock(scope: !13076, file: !3, line: 3477, column: 65)
!13080 = !DILocation(line: 3478, column: 14, scope: !13079)
!13081 = !DILocation(line: 3479, column: 15, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13079, file: !3, line: 3479, column: 5)
!13083 = !DILocation(line: 3479, column: 19, scope: !13082)
!13084 = !DILocation(line: 3479, column: 30, scope: !13082)
!13085 = !DILocation(line: 3479, column: 13, scope: !13082)
!13086 = !DILocation(line: 3479, column: 10, scope: !13082)
!13087 = !DILocation(line: 3479, column: 37, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13082, file: !3, line: 3479, column: 5)
!13089 = !DILocation(line: 3479, column: 5, scope: !13082)
!13090 = !DILocation(line: 3480, column: 10, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13092, file: !3, line: 3480, column: 10)
!13092 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 3479, column: 56)
!13093 = !DILocation(line: 3480, column: 16, scope: !13091)
!13094 = !DILocation(line: 3480, column: 21, scope: !13091)
!13095 = !DILocation(line: 3480, column: 13, scope: !13091)
!13096 = !DILocation(line: 3480, column: 10, scope: !13092)
!13097 = !DILocation(line: 3481, column: 28, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13091, file: !3, line: 3480, column: 25)
!13099 = !DILocation(line: 3481, column: 7, scope: !13098)
!13100 = !DILocation(line: 3482, column: 6, scope: !13098)
!13101 = !DILocation(line: 3483, column: 41, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !13091, file: !3, line: 3483, column: 15)
!13103 = !DILocation(line: 3483, column: 45, scope: !13102)
!13104 = !DILocation(line: 3483, column: 56, scope: !13102)
!13105 = !DILocation(line: 3483, column: 60, scope: !13102)
!13106 = !DILocation(line: 3483, column: 72, scope: !13102)
!13107 = !DILocation(line: 3483, column: 77, scope: !13102)
!13108 = !DILocation(line: 3483, column: 15, scope: !13102)
!13109 = !DILocation(line: 3483, column: 15, scope: !13091)
!13110 = !DILocation(line: 3484, column: 28, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 3483, column: 87)
!13112 = !DILocation(line: 3484, column: 7, scope: !13111)
!13113 = !DILocation(line: 3485, column: 6, scope: !13111)
!13114 = !DILocation(line: 3486, column: 5, scope: !13092)
!13115 = !DILocation(line: 3479, column: 46, scope: !13088)
!13116 = !DILocation(line: 3479, column: 50, scope: !13088)
!13117 = !DILocation(line: 3479, column: 44, scope: !13088)
!13118 = !DILocation(line: 3479, column: 5, scope: !13088)
!13119 = distinct !{!13119, !13089, !13120}
!13120 = !DILocation(line: 3486, column: 5, scope: !13082)
!13121 = !DILocation(line: 3488, column: 33, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13079, file: !3, line: 3488, column: 9)
!13123 = !DILocation(line: 3488, column: 37, scope: !13122)
!13124 = !DILocation(line: 3488, column: 48, scope: !13122)
!13125 = !DILocation(line: 3488, column: 53, scope: !13122)
!13126 = !DILocation(line: 3488, column: 9, scope: !13122)
!13127 = !DILocation(line: 3488, column: 9, scope: !13079)
!13128 = !DILocation(line: 3489, column: 26, scope: !13122)
!13129 = !DILocation(line: 3489, column: 6, scope: !13122)
!13130 = !DILocation(line: 3490, column: 4, scope: !13079)
!13131 = !DILocation(line: 3477, column: 55, scope: !13076)
!13132 = !DILocation(line: 3477, column: 59, scope: !13076)
!13133 = !DILocation(line: 3477, column: 53, scope: !13076)
!13134 = !DILocation(line: 3477, column: 4, scope: !13076)
!13135 = distinct !{!13135, !13077, !13136}
!13136 = !DILocation(line: 3490, column: 4, scope: !13068)
!13137 = !DILocation(line: 3491, column: 3, scope: !13069)
!13138 = !DILocation(line: 3476, column: 53, scope: !13065)
!13139 = !DILocation(line: 3476, column: 61, scope: !13065)
!13140 = !DILocation(line: 3476, column: 51, scope: !13065)
!13141 = !DILocation(line: 3476, column: 3, scope: !13065)
!13142 = distinct !{!13142, !13066, !13143}
!13143 = !DILocation(line: 3491, column: 3, scope: !13059)
!13144 = !DILocation(line: 3497, column: 27, scope: !12825)
!13145 = !DILocation(line: 3497, column: 3, scope: !12825)
!13146 = !DILocation(line: 3503, column: 25, scope: !12825)
!13147 = !DILocation(line: 3503, column: 23, scope: !12825)
!13148 = !DILocation(line: 3503, column: 3, scope: !12825)
!13149 = !DILocation(line: 3503, column: 7, scope: !12825)
!13150 = !DILocation(line: 3503, column: 16, scope: !12825)
!13151 = !DILocation(line: 3505, column: 3, scope: !12825)
!13152 = !DILocation(line: 3507, column: 2, scope: !12803)
!13153 = !DILocation(line: 3508, column: 1, scope: !12803)
!13154 = distinct !DISubprogram(name: "max_ii", scope: !8143, file: !8143, line: 215, type: !8144, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!13155 = !DILocalVariable(name: "a", arg: 1, scope: !13154, file: !8143, line: 215, type: !1242)
!13156 = !DILocation(line: 215, column: 24, scope: !13154)
!13157 = !DILocalVariable(name: "b", arg: 2, scope: !13154, file: !8143, line: 215, type: !1242)
!13158 = !DILocation(line: 215, column: 31, scope: !13154)
!13159 = !DILocation(line: 217, column: 10, scope: !13154)
!13160 = !DILocation(line: 217, column: 14, scope: !13154)
!13161 = !DILocation(line: 217, column: 12, scope: !13154)
!13162 = !DILocation(line: 217, column: 9, scope: !13154)
!13163 = !DILocation(line: 217, column: 19, scope: !13154)
!13164 = !DILocation(line: 217, column: 23, scope: !13154)
!13165 = !DILocation(line: 217, column: 2, scope: !13154)
!13166 = distinct !DISubprogram(name: "match_region_with_redraws", scope: !3, file: !3, line: 3293, type: !13167, scopeLine: 3294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!13167 = !DISubroutineType(types: !13168)
!13168 = !{!1242, !1242, !1242, !1242}
!13169 = !DILocalVariable(name: "spacetype", arg: 1, scope: !13166, file: !3, line: 3293, type: !1242)
!13170 = !DILocation(line: 3293, column: 42, scope: !13166)
!13171 = !DILocalVariable(name: "regiontype", arg: 2, scope: !13166, file: !3, line: 3293, type: !1242)
!13172 = !DILocation(line: 3293, column: 57, scope: !13166)
!13173 = !DILocalVariable(name: "redraws", arg: 3, scope: !13166, file: !3, line: 3293, type: !1242)
!13174 = !DILocation(line: 3293, column: 73, scope: !13166)
!13175 = !DILocation(line: 3295, column: 6, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13166, file: !3, line: 3295, column: 6)
!13177 = !DILocation(line: 3295, column: 17, scope: !13176)
!13178 = !DILocation(line: 3295, column: 6, scope: !13166)
!13179 = !DILocation(line: 3297, column: 11, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13176, file: !3, line: 3295, column: 37)
!13181 = !DILocation(line: 3297, column: 3, scope: !13180)
!13182 = !DILocation(line: 3299, column: 9, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13184, file: !3, line: 3299, column: 9)
!13184 = distinct !DILexicalBlock(scope: !13180, file: !3, line: 3297, column: 22)
!13185 = !DILocation(line: 3299, column: 17, scope: !13183)
!13186 = !DILocation(line: 3299, column: 9, scope: !13184)
!13187 = !DILocation(line: 3300, column: 6, scope: !13183)
!13188 = !DILocation(line: 3301, column: 5, scope: !13184)
!13189 = !DILocation(line: 3305, column: 9, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13184, file: !3, line: 3305, column: 9)
!13191 = !DILocation(line: 3305, column: 17, scope: !13190)
!13192 = !DILocation(line: 3305, column: 9, scope: !13184)
!13193 = !DILocation(line: 3306, column: 6, scope: !13190)
!13194 = !DILocation(line: 3307, column: 5, scope: !13184)
!13195 = !DILocation(line: 3310, column: 9, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13184, file: !3, line: 3310, column: 9)
!13197 = !DILocation(line: 3310, column: 17, scope: !13196)
!13198 = !DILocation(line: 3310, column: 9, scope: !13184)
!13199 = !DILocation(line: 3311, column: 6, scope: !13196)
!13200 = !DILocation(line: 3312, column: 5, scope: !13184)
!13201 = !DILocation(line: 3314, column: 9, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13184, file: !3, line: 3314, column: 9)
!13203 = !DILocation(line: 3314, column: 17, scope: !13202)
!13204 = !DILocation(line: 3314, column: 9, scope: !13184)
!13205 = !DILocation(line: 3315, column: 6, scope: !13202)
!13206 = !DILocation(line: 3316, column: 5, scope: !13184)
!13207 = !DILocation(line: 3318, column: 9, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13184, file: !3, line: 3318, column: 9)
!13209 = !DILocation(line: 3318, column: 17, scope: !13208)
!13210 = !DILocation(line: 3318, column: 9, scope: !13184)
!13211 = !DILocation(line: 3319, column: 6, scope: !13208)
!13212 = !DILocation(line: 3320, column: 5, scope: !13184)
!13213 = !DILocation(line: 3322, column: 9, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13184, file: !3, line: 3322, column: 9)
!13215 = !DILocation(line: 3322, column: 17, scope: !13214)
!13216 = !DILocation(line: 3322, column: 9, scope: !13184)
!13217 = !DILocation(line: 3323, column: 6, scope: !13214)
!13218 = !DILocation(line: 3324, column: 5, scope: !13184)
!13219 = !DILocation(line: 3326, column: 9, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13184, file: !3, line: 3326, column: 9)
!13221 = !DILocation(line: 3326, column: 17, scope: !13220)
!13222 = !DILocation(line: 3326, column: 9, scope: !13184)
!13223 = !DILocation(line: 3327, column: 6, scope: !13220)
!13224 = !DILocation(line: 3328, column: 5, scope: !13184)
!13225 = !DILocation(line: 3330, column: 9, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13184, file: !3, line: 3330, column: 9)
!13227 = !DILocation(line: 3330, column: 17, scope: !13226)
!13228 = !DILocation(line: 3330, column: 9, scope: !13184)
!13229 = !DILocation(line: 3331, column: 6, scope: !13226)
!13230 = !DILocation(line: 3332, column: 5, scope: !13184)
!13231 = !DILocation(line: 3335, column: 2, scope: !13180)
!13232 = !DILocation(line: 3336, column: 11, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13176, file: !3, line: 3336, column: 11)
!13234 = !DILocation(line: 3336, column: 22, scope: !13233)
!13235 = !DILocation(line: 3336, column: 11, scope: !13176)
!13236 = !DILocation(line: 3337, column: 11, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13233, file: !3, line: 3336, column: 44)
!13238 = !DILocation(line: 3337, column: 3, scope: !13237)
!13239 = !DILocation(line: 3341, column: 9, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13241, file: !3, line: 3341, column: 9)
!13241 = distinct !DILexicalBlock(scope: !13237, file: !3, line: 3337, column: 22)
!13242 = !DILocation(line: 3341, column: 17, scope: !13240)
!13243 = !DILocation(line: 3341, column: 9, scope: !13241)
!13244 = !DILocation(line: 3342, column: 6, scope: !13240)
!13245 = !DILocation(line: 3343, column: 5, scope: !13241)
!13246 = !DILocation(line: 3345, column: 2, scope: !13237)
!13247 = !DILocation(line: 3346, column: 11, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13233, file: !3, line: 3346, column: 11)
!13249 = !DILocation(line: 3346, column: 22, scope: !13248)
!13250 = !DILocation(line: 3346, column: 11, scope: !13233)
!13251 = !DILocation(line: 3347, column: 7, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13253, file: !3, line: 3347, column: 7)
!13253 = distinct !DILexicalBlock(scope: !13248, file: !3, line: 3346, column: 38)
!13254 = !DILocation(line: 3347, column: 17, scope: !13252)
!13255 = !DILocation(line: 3347, column: 7, scope: !13253)
!13256 = !DILocation(line: 3353, column: 4, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13252, file: !3, line: 3347, column: 32)
!13258 = !DILocation(line: 3356, column: 7, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13253, file: !3, line: 3356, column: 7)
!13260 = !DILocation(line: 3356, column: 15, scope: !13259)
!13261 = !DILocation(line: 3356, column: 7, scope: !13253)
!13262 = !DILocation(line: 3357, column: 4, scope: !13259)
!13263 = !DILocation(line: 3358, column: 2, scope: !13253)
!13264 = !DILocation(line: 3359, column: 11, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13248, file: !3, line: 3359, column: 11)
!13266 = !DILocation(line: 3359, column: 22, scope: !13265)
!13267 = !DILocation(line: 3359, column: 11, scope: !13248)
!13268 = !DILocation(line: 3360, column: 7, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13270, file: !3, line: 3360, column: 7)
!13270 = distinct !DILexicalBlock(scope: !13265, file: !3, line: 3359, column: 42)
!13271 = !DILocation(line: 3360, column: 17, scope: !13269)
!13272 = !DILocation(line: 3360, column: 7, scope: !13270)
!13273 = !DILocation(line: 3361, column: 4, scope: !13269)
!13274 = !DILocation(line: 3362, column: 2, scope: !13270)
!13275 = !DILocation(line: 3363, column: 11, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13265, file: !3, line: 3363, column: 11)
!13277 = !DILocation(line: 3363, column: 22, scope: !13276)
!13278 = !DILocation(line: 3363, column: 11, scope: !13265)
!13279 = !DILocation(line: 3364, column: 11, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13276, file: !3, line: 3363, column: 43)
!13281 = !DILocation(line: 3364, column: 3, scope: !13280)
!13282 = !DILocation(line: 3366, column: 9, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13284, file: !3, line: 3366, column: 9)
!13284 = distinct !DILexicalBlock(scope: !13280, file: !3, line: 3364, column: 22)
!13285 = !DILocation(line: 3366, column: 17, scope: !13283)
!13286 = !DILocation(line: 3366, column: 9, scope: !13284)
!13287 = !DILocation(line: 3367, column: 6, scope: !13283)
!13288 = !DILocation(line: 3368, column: 5, scope: !13284)
!13289 = !DILocation(line: 3370, column: 5, scope: !13284)
!13290 = !DILocation(line: 3372, column: 2, scope: !13280)
!13291 = !DILocation(line: 3373, column: 2, scope: !13166)
!13292 = !DILocation(line: 3374, column: 1, scope: !13166)
!13293 = distinct !DISubprogram(name: "match_area_with_refresh", scope: !3, file: !3, line: 3281, type: !8144, scopeLine: 3282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!13294 = !DILocalVariable(name: "spacetype", arg: 1, scope: !13293, file: !3, line: 3281, type: !1242)
!13295 = !DILocation(line: 3281, column: 40, scope: !13293)
!13296 = !DILocalVariable(name: "refresh", arg: 2, scope: !13293, file: !3, line: 3281, type: !1242)
!13297 = !DILocation(line: 3281, column: 55, scope: !13293)
!13298 = !DILocation(line: 3283, column: 10, scope: !13293)
!13299 = !DILocation(line: 3283, column: 2, scope: !13293)
!13300 = !DILocation(line: 3285, column: 8, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13302, file: !3, line: 3285, column: 8)
!13302 = distinct !DILexicalBlock(scope: !13293, file: !3, line: 3283, column: 21)
!13303 = !DILocation(line: 3285, column: 16, scope: !13301)
!13304 = !DILocation(line: 3285, column: 8, scope: !13302)
!13305 = !DILocation(line: 3286, column: 5, scope: !13301)
!13306 = !DILocation(line: 3287, column: 4, scope: !13302)
!13307 = !DILocation(line: 3290, column: 2, scope: !13293)
!13308 = !DILocation(line: 3291, column: 1, scope: !13293)
!13309 = distinct !DISubprogram(name: "screen_animation_play_exec", scope: !3, file: !3, line: 3568, type: !7473, scopeLine: 3569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!13310 = !DILocalVariable(name: "C", arg: 1, scope: !13309, file: !3, line: 3568, type: !3734)
!13311 = !DILocation(line: 3568, column: 49, scope: !13309)
!13312 = !DILocalVariable(name: "op", arg: 2, scope: !13309, file: !3, line: 3568, type: !7081)
!13313 = !DILocation(line: 3568, column: 64, scope: !13309)
!13314 = !DILocalVariable(name: "mode", scope: !13309, file: !3, line: 3570, type: !1242)
!13315 = !DILocation(line: 3570, column: 6, scope: !13309)
!13316 = !DILocation(line: 3570, column: 30, scope: !13309)
!13317 = !DILocation(line: 3570, column: 34, scope: !13309)
!13318 = !DILocation(line: 3570, column: 14, scope: !13309)
!13319 = !DILocation(line: 3570, column: 13, scope: !13309)
!13320 = !DILocalVariable(name: "sync", scope: !13309, file: !3, line: 3571, type: !1242)
!13321 = !DILocation(line: 3571, column: 6, scope: !13309)
!13322 = !DILocation(line: 3573, column: 33, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13309, file: !3, line: 3573, column: 6)
!13324 = !DILocation(line: 3573, column: 37, scope: !13323)
!13325 = !DILocation(line: 3573, column: 6, scope: !13323)
!13326 = !DILocation(line: 3573, column: 6, scope: !13309)
!13327 = !DILocation(line: 3574, column: 27, scope: !13323)
!13328 = !DILocation(line: 3574, column: 31, scope: !13323)
!13329 = !DILocation(line: 3574, column: 11, scope: !13323)
!13330 = !DILocation(line: 3574, column: 8, scope: !13323)
!13331 = !DILocation(line: 3574, column: 3, scope: !13323)
!13332 = !DILocation(line: 3576, column: 34, scope: !13309)
!13333 = !DILocation(line: 3576, column: 37, scope: !13309)
!13334 = !DILocation(line: 3576, column: 43, scope: !13309)
!13335 = !DILocation(line: 3576, column: 9, scope: !13309)
!13336 = !DILocation(line: 3576, column: 2, scope: !13309)
!13337 = distinct !DISubprogram(name: "screen_animation_cancel_exec", scope: !3, file: !3, line: 3599, type: !7473, scopeLine: 3600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!13338 = !DILocalVariable(name: "C", arg: 1, scope: !13337, file: !3, line: 3599, type: !3734)
!13339 = !DILocation(line: 3599, column: 51, scope: !13337)
!13340 = !DILocalVariable(name: "op", arg: 2, scope: !13337, file: !3, line: 3599, type: !7081)
!13341 = !DILocation(line: 3599, column: 66, scope: !13337)
!13342 = !DILocalVariable(name: "screen", scope: !13337, file: !3, line: 3601, type: !3298)
!13343 = !DILocation(line: 3601, column: 11, scope: !13337)
!13344 = !DILocation(line: 3601, column: 63, scope: !13337)
!13345 = !DILocation(line: 3601, column: 48, scope: !13337)
!13346 = !DILocation(line: 3601, column: 20, scope: !13337)
!13347 = !DILocation(line: 3603, column: 6, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 3603, column: 6)
!13349 = !DILocation(line: 3603, column: 6, scope: !13337)
!13350 = !DILocation(line: 3604, column: 23, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13352, file: !3, line: 3604, column: 7)
!13352 = distinct !DILexicalBlock(scope: !13348, file: !3, line: 3603, column: 14)
!13353 = !DILocation(line: 3604, column: 27, scope: !13351)
!13354 = !DILocation(line: 3604, column: 7, scope: !13351)
!13355 = !DILocation(line: 3604, column: 7, scope: !13352)
!13356 = !DILocalVariable(name: "sad", scope: !13357, file: !3, line: 3605, type: !5619)
!13357 = distinct !DILexicalBlock(scope: !13351, file: !3, line: 3604, column: 50)
!13358 = !DILocation(line: 3605, column: 20, scope: !13357)
!13359 = !DILocation(line: 3605, column: 26, scope: !13357)
!13360 = !DILocation(line: 3605, column: 34, scope: !13357)
!13361 = !DILocation(line: 3605, column: 45, scope: !13357)
!13362 = !DILocalVariable(name: "scene", scope: !13357, file: !3, line: 3606, type: !3831)
!13363 = !DILocation(line: 3606, column: 11, scope: !13357)
!13364 = !DILocation(line: 3606, column: 34, scope: !13357)
!13365 = !DILocation(line: 3606, column: 19, scope: !13357)
!13366 = !DILocation(line: 3611, column: 20, scope: !13357)
!13367 = !DILocation(line: 3611, column: 25, scope: !13357)
!13368 = !DILocation(line: 3611, column: 4, scope: !13357)
!13369 = !DILocation(line: 3611, column: 11, scope: !13357)
!13370 = !DILocation(line: 3611, column: 13, scope: !13357)
!13371 = !DILocation(line: 3611, column: 18, scope: !13357)
!13372 = !DILocation(line: 3613, column: 26, scope: !13357)
!13373 = !DILocation(line: 3613, column: 50, scope: !13357)
!13374 = !DILocation(line: 3613, column: 4, scope: !13357)
!13375 = !DILocation(line: 3614, column: 3, scope: !13357)
!13376 = !DILocation(line: 3617, column: 28, scope: !13352)
!13377 = !DILocation(line: 3617, column: 3, scope: !13352)
!13378 = !DILocation(line: 3618, column: 2, scope: !13352)
!13379 = !DILocation(line: 3620, column: 2, scope: !13337)
!13380 = distinct !DISubprogram(name: "screen_new_exec", scope: !3, file: !3, line: 3766, type: !7473, scopeLine: 3767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!13381 = !DILocalVariable(name: "C", arg: 1, scope: !13380, file: !3, line: 3766, type: !3734)
!13382 = !DILocation(line: 3766, column: 38, scope: !13380)
!13383 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !13380, file: !3, line: 3766, type: !7081)
!13384 = !DILocation(line: 3766, column: 53, scope: !13380)
!13385 = !DILocalVariable(name: "win", scope: !13380, file: !3, line: 3768, type: !5535)
!13386 = !DILocation(line: 3768, column: 12, scope: !13380)
!13387 = !DILocation(line: 3768, column: 32, scope: !13380)
!13388 = !DILocation(line: 3768, column: 18, scope: !13380)
!13389 = !DILocalVariable(name: "sc", scope: !13380, file: !3, line: 3769, type: !3298)
!13390 = !DILocation(line: 3769, column: 11, scope: !13380)
!13391 = !DILocation(line: 3769, column: 30, scope: !13380)
!13392 = !DILocation(line: 3769, column: 16, scope: !13380)
!13393 = !DILocation(line: 3771, column: 27, scope: !13380)
!13394 = !DILocation(line: 3771, column: 32, scope: !13380)
!13395 = !DILocation(line: 3771, column: 7, scope: !13380)
!13396 = !DILocation(line: 3771, column: 5, scope: !13380)
!13397 = !DILocation(line: 3772, column: 24, scope: !13380)
!13398 = !DILocation(line: 3772, column: 56, scope: !13380)
!13399 = !DILocation(line: 3772, column: 2, scope: !13380)
!13400 = !DILocation(line: 3774, column: 2, scope: !13380)
!13401 = distinct !DISubprogram(name: "screen_delete_exec", scope: !3, file: !3, line: 3791, type: !7473, scopeLine: 3792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!13402 = !DILocalVariable(name: "C", arg: 1, scope: !13401, file: !3, line: 3791, type: !3734)
!13403 = !DILocation(line: 3791, column: 41, scope: !13401)
!13404 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !13401, file: !3, line: 3791, type: !7081)
!13405 = !DILocation(line: 3791, column: 56, scope: !13401)
!13406 = !DILocalVariable(name: "sc", scope: !13401, file: !3, line: 3793, type: !3298)
!13407 = !DILocation(line: 3793, column: 11, scope: !13401)
!13408 = !DILocation(line: 3793, column: 30, scope: !13401)
!13409 = !DILocation(line: 3793, column: 16, scope: !13401)
!13410 = !DILocation(line: 3795, column: 24, scope: !13401)
!13411 = !DILocation(line: 3795, column: 56, scope: !13401)
!13412 = !DILocation(line: 3795, column: 2, scope: !13401)
!13413 = !DILocation(line: 3797, column: 2, scope: !13401)
!13414 = distinct !DISubprogram(name: "scene_new_exec", scope: !3, file: !3, line: 3813, type: !7473, scopeLine: 3814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!13415 = !DILocalVariable(name: "C", arg: 1, scope: !13414, file: !3, line: 3813, type: !3734)
!13416 = !DILocation(line: 3813, column: 37, scope: !13414)
!13417 = !DILocalVariable(name: "op", arg: 2, scope: !13414, file: !3, line: 3813, type: !7081)
!13418 = !DILocation(line: 3813, column: 52, scope: !13414)
!13419 = !DILocalVariable(name: "newscene", scope: !13414, file: !3, line: 3815, type: !3831)
!13420 = !DILocation(line: 3815, column: 9, scope: !13414)
!13421 = !DILocalVariable(name: "scene", scope: !13414, file: !3, line: 3815, type: !3831)
!13422 = !DILocation(line: 3815, column: 20, scope: !13414)
!13423 = !DILocation(line: 3815, column: 43, scope: !13414)
!13424 = !DILocation(line: 3815, column: 28, scope: !13414)
!13425 = !DILocalVariable(name: "bmain", scope: !13414, file: !3, line: 3816, type: !11801)
!13426 = !DILocation(line: 3816, column: 8, scope: !13414)
!13427 = !DILocation(line: 3816, column: 30, scope: !13414)
!13428 = !DILocation(line: 3816, column: 16, scope: !13414)
!13429 = !DILocalVariable(name: "type", scope: !13414, file: !3, line: 3817, type: !1242)
!13430 = !DILocation(line: 3817, column: 6, scope: !13414)
!13431 = !DILocation(line: 3817, column: 26, scope: !13414)
!13432 = !DILocation(line: 3817, column: 30, scope: !13414)
!13433 = !DILocation(line: 3817, column: 13, scope: !13414)
!13434 = !DILocation(line: 3819, column: 6, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13414, file: !3, line: 3819, column: 6)
!13436 = !DILocation(line: 3819, column: 11, scope: !13435)
!13437 = !DILocation(line: 3819, column: 6, scope: !13414)
!13438 = !DILocation(line: 3820, column: 28, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13435, file: !3, line: 3819, column: 28)
!13440 = !DILocation(line: 3820, column: 14, scope: !13439)
!13441 = !DILocation(line: 3820, column: 12, scope: !13439)
!13442 = !DILocation(line: 3821, column: 2, scope: !13439)
!13443 = !DILocation(line: 3823, column: 29, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13435, file: !3, line: 3822, column: 7)
!13445 = !DILocation(line: 3823, column: 36, scope: !13444)
!13446 = !DILocation(line: 3823, column: 14, scope: !13444)
!13447 = !DILocation(line: 3823, column: 12, scope: !13444)
!13448 = !DILocation(line: 3826, column: 7, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13444, file: !3, line: 3826, column: 7)
!13450 = !DILocation(line: 3826, column: 12, scope: !13449)
!13451 = !DILocation(line: 3826, column: 7, scope: !13444)
!13452 = !DILocation(line: 3827, column: 27, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13449, file: !3, line: 3826, column: 35)
!13454 = !DILocation(line: 3827, column: 34, scope: !13453)
!13455 = !DILocation(line: 3827, column: 4, scope: !13453)
!13456 = !DILocation(line: 3828, column: 3, scope: !13453)
!13457 = !DILocation(line: 3829, column: 12, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13449, file: !3, line: 3829, column: 12)
!13459 = !DILocation(line: 3829, column: 17, scope: !13458)
!13460 = !DILocation(line: 3829, column: 12, scope: !13449)
!13461 = !DILocation(line: 3830, column: 27, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13458, file: !3, line: 3829, column: 35)
!13463 = !DILocation(line: 3830, column: 4, scope: !13462)
!13464 = !DILocation(line: 3831, column: 27, scope: !13462)
!13465 = !DILocation(line: 3831, column: 34, scope: !13462)
!13466 = !DILocation(line: 3831, column: 4, scope: !13462)
!13467 = !DILocation(line: 3832, column: 3, scope: !13462)
!13468 = !DILocation(line: 3835, column: 22, scope: !13414)
!13469 = !DILocation(line: 3835, column: 39, scope: !13414)
!13470 = !DILocation(line: 3835, column: 25, scope: !13414)
!13471 = !DILocation(line: 3835, column: 43, scope: !13414)
!13472 = !DILocation(line: 3835, column: 2, scope: !13414)
!13473 = !DILocation(line: 3837, column: 24, scope: !13414)
!13474 = !DILocation(line: 3837, column: 54, scope: !13414)
!13475 = !DILocation(line: 3837, column: 2, scope: !13414)
!13476 = !DILocation(line: 3839, column: 2, scope: !13414)
!13477 = distinct !DISubprogram(name: "scene_delete_exec", scope: !3, file: !3, line: 3870, type: !7473, scopeLine: 3871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3708)
!13478 = !DILocalVariable(name: "C", arg: 1, scope: !13477, file: !3, line: 3870, type: !3734)
!13479 = !DILocation(line: 3870, column: 40, scope: !13477)
!13480 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !13477, file: !3, line: 3870, type: !7081)
!13481 = !DILocation(line: 3870, column: 55, scope: !13477)
!13482 = !DILocalVariable(name: "scene", scope: !13477, file: !3, line: 3872, type: !3831)
!13483 = !DILocation(line: 3872, column: 9, scope: !13477)
!13484 = !DILocation(line: 3872, column: 32, scope: !13477)
!13485 = !DILocation(line: 3872, column: 17, scope: !13477)
!13486 = !DILocation(line: 3874, column: 25, scope: !13477)
!13487 = !DILocation(line: 3874, column: 28, scope: !13477)
!13488 = !DILocation(line: 3874, column: 2, scope: !13477)
!13489 = !DILocation(line: 3876, column: 8, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 3876, column: 6)
!13491 = !DILocation(line: 3876, column: 14, scope: !13490)
!13492 = !DILocation(line: 3876, column: 6, scope: !13477)
!13493 = !DILocation(line: 3877, column: 38, scope: !13490)
!13494 = !DILocation(line: 3877, column: 31, scope: !13490)
!13495 = !DILocation(line: 3877, column: 3, scope: !13490)
!13496 = !DILocation(line: 3879, column: 24, scope: !13477)
!13497 = !DILocation(line: 3879, column: 50, scope: !13477)
!13498 = !DILocation(line: 3879, column: 2, scope: !13477)
!13499 = !DILocation(line: 3881, column: 2, scope: !13477)
