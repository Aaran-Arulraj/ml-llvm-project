; ModuleID = 'wand/drawing-wand.c'
source_filename = "wand/drawing-wand.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._DrawingWand = type { i64, [4096 x i8], %struct._Image*, %struct._ExceptionInfo*, i8*, i64, i64, i64, i8*, %struct._RectangleInfo, i64, i64, %struct._DrawInfo**, i32, i64, i32, i32, i32, i32, i64 }
%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._DrawInfo = type { i8*, i8*, %struct._RectangleInfo, %struct._AffineMatrix, i32, %struct._PixelPacket, %struct._PixelPacket, double, %struct._GradientInfo, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, i32, i32, i32, i64, double, i32, i32, i8*, i64, i8*, i8*, i8*, i32, i32, i64, i8*, double, i8*, i32, %struct._PixelPacket, %struct._PixelPacket, i8*, double*, i8*, %struct._SegmentInfo, i32, i16, i32, %struct._ElementReference, i32, i64, double, double, double, i32 }
%struct._AffineMatrix = type { double, double, double, double, double, double }
%struct._GradientInfo = type { i32, %struct._RectangleInfo, %struct._SegmentInfo, %struct._StopInfo*, i64, i32, i32, i64, %struct._PointInfo, float }
%struct._StopInfo = type { %struct._MagickPixelPacket, float }
%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }
%struct._PointInfo = type { double, double }
%struct._SegmentInfo = type { double, double, double, double }
%struct._ElementReference = type { i8*, i32, %struct._GradientInfo, i64, %struct._ElementReference*, %struct._ElementReference* }
%struct._ImageInfo = type { i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i64, i64, i32, i32, i32, i64, i8*, i8*, i8*, i8*, i8*, double, double, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, i32, i32, i64, i32, i32, i32, i64, i32, i32, i8*, i8*, i32, %struct._Image*, i8*, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i64 (%struct._Image*, i8*, i64)*, %struct._IO_FILE*, i8*, i64, [4096 x i8], [4096 x i8], [4096 x i8], [4096 x i8], i32, i8*, i64, i64, %struct._PixelPacket, i64, i32, %struct._PixelPacket, i8*, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._MagickWand = type { i64, [4096 x i8], %struct._ExceptionInfo*, %struct._ImageInfo*, %struct._QuantizeInfo*, %struct._Image*, i32, i32, i32, i64 }
%struct._QuantizeInfo = type { i64, i64, i32, i32, i32, i64, i32 }
%struct._PixelWand = type opaque
%struct._GeometryInfo = type { double, double, double, double, double }
%struct._XMLTreeInfo = type opaque

@.str = private unnamed_addr constant [20 x i8] c"wand/drawing-wand.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"DrawingWand-%.20g\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"affine %.20g %.20g %.20g %.20g %.20g %.20g\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"text %.20g %.20g '%s'\0A\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"arc %.20g %.20g %.20g %.20g %.20g %.20g\0A\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"bezier\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"circle %.20g %.20g %.20g %.20g\0A\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"MIFF\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"%.20g bytes\00", align 1
@.str.13 = private unnamed_addr constant [51 x i8] c"image %s %.20g %.20g %.20g %.20g 'data:%s;base64,\0A\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"%.76s\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"'\0A\00", align 1
@.str.17 = private unnamed_addr constant [24 x i8] c"color %.20g %.20g '%s'\0A\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"#%s\0A\00", align 1
@.str.19 = private unnamed_addr constant [45 x i8] c"ellipse %.20g %.20g %.20g %.20g %.20g %.20g\0A\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"drawing-wand\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"clip-path\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"clip-units\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"decorate\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"fill\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"fill-opacity\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"%.20g\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"fill-rule\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"font\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"font-family\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"font-size\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"font-stretch\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"font-style\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"font-weight\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"gravity\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"stroke\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"stroke-antialias\00", align 1
@.str.40 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.41 = private unnamed_addr constant [17 x i8] c"stroke-dasharray\00", align 1
@.str.42 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"stroke-dashoffset\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"stroke-linecap\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"stroke-linejoin\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c"stroke-miterlimit\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"stroke-opacity\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"stroke-width\00", align 1
@.str.49 = private unnamed_addr constant [11 x i8] c"text-align\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"text-antialias\00", align 1
@.str.51 = private unnamed_addr constant [16 x i8] c"text-undercolor\00", align 1
@.str.52 = private unnamed_addr constant [16 x i8] c"vector-graphics\00", align 1
@.str.53 = private unnamed_addr constant [30 x i8] c"line %.20g %.20g %.20g %.20g\0A\00", align 1
@.str.54 = private unnamed_addr constant [24 x i8] c"matte %.20g %.20g '%s'\0A\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@.str.56 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"path '\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"point %.20g %.20g\0A\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"polygon\00", align 1
@.str.60 = private unnamed_addr constant [9 x i8] c"polyline\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"pop clip-path\0A\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"pop defs\0A\00", align 1
@.str.63 = private unnamed_addr constant [17 x i8] c"ContainsNoImages\00", align 1
@.str.64 = private unnamed_addr constant [37 x i8] c"NotCurrentlyPushingPatternDefinition\00", align 1
@.str.65 = private unnamed_addr constant [24 x i8] c"%.20gx%.20g%+.20g%+.20g\00", align 1
@.str.66 = private unnamed_addr constant [13 x i8] c"pop pattern\0A\00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"push clip-path %s\0A\00", align 1
@.str.68 = private unnamed_addr constant [11 x i8] c"push defs\0A\00", align 1
@.str.69 = private unnamed_addr constant [32 x i8] c"AlreadyPushingPatternDefinition\00", align 1
@.str.70 = private unnamed_addr constant [41 x i8] c"push pattern %s %.20g %.20g %.20g %.20g\0A\00", align 1
@.str.71 = private unnamed_addr constant [35 x i8] c"rectangle %.20g %.20g %.20g %.20g\0A\00", align 1
@.str.72 = private unnamed_addr constant [11 x i8] c"MVG:\0A'%s'\0A\00", align 1
@.str.73 = private unnamed_addr constant [14 x i8] c"rotate %.20g\0A\00", align 1
@.str.74 = private unnamed_addr constant [52 x i8] c"roundrectangle %.20g %.20g %.20g %.20g %.20g %.20g\0A\00", align 1
@.str.75 = private unnamed_addr constant [19 x i8] c"scale %.20g %.20g\0A\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"border-color '\00", align 1
@.str.77 = private unnamed_addr constant [20 x i8] c"clip-path url(#%s)\0A\00", align 1
@.str.78 = private unnamed_addr constant [16 x i8] c"clip-rule '%s'\0A\00", align 1
@.str.79 = private unnamed_addr constant [17 x i8] c"clip-units '%s'\0A\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"fill '\00", align 1
@.str.81 = private unnamed_addr constant [20 x i8] c"fill-opacity %.20g\0A\00", align 1
@.str.82 = private unnamed_addr constant [12 x i8] c"%.20gx%.20g\00", align 1
@.str.83 = private unnamed_addr constant [15 x i8] c"opacity %.20g\0A\00", align 1
@.str.84 = private unnamed_addr constant [16 x i8] c"NotARelativeURL\00", align 1
@.str.85 = private unnamed_addr constant [12 x i8] c"URLNotFound\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c"url(%s)\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"fill %s\0A\00", align 1
@.str.88 = private unnamed_addr constant [16 x i8] c"fill-rule '%s'\0A\00", align 1
@.str.89 = private unnamed_addr constant [11 x i8] c"font '%s'\0A\00", align 1
@.str.90 = private unnamed_addr constant [18 x i8] c"font-family '%s'\0A\00", align 1
@.str.91 = private unnamed_addr constant [17 x i8] c"font-size %.20g\0A\00", align 1
@.str.92 = private unnamed_addr constant [19 x i8] c"font-stretch '%s'\0A\00", align 1
@.str.93 = private unnamed_addr constant [17 x i8] c"font-style '%s'\0A\00", align 1
@.str.94 = private unnamed_addr constant [19 x i8] c"font-weight %.20g\0A\00", align 1
@.str.95 = private unnamed_addr constant [14 x i8] c"gravity '%s'\0A\00", align 1
@.str.96 = private unnamed_addr constant [9 x i8] c"stroke '\00", align 1
@.str.97 = private unnamed_addr constant [11 x i8] c"stroke %s\0A\00", align 1
@.str.98 = private unnamed_addr constant [21 x i8] c"stroke-antialias %i\0A\00", align 1
@.str.99 = private unnamed_addr constant [18 x i8] c"stroke-dasharray \00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"none\0A\00", align 1
@.str.101 = private unnamed_addr constant [25 x i8] c"stroke-dashoffset %.20g\0A\00", align 1
@.str.102 = private unnamed_addr constant [21 x i8] c"stroke-linecap '%s'\0A\00", align 1
@.str.103 = private unnamed_addr constant [22 x i8] c"stroke-linejoin '%s'\0A\00", align 1
@.str.104 = private unnamed_addr constant [25 x i8] c"stroke-miterlimit %.20g\0A\00", align 1
@.str.105 = private unnamed_addr constant [22 x i8] c"stroke-opacity %.20g\0A\00", align 1
@.str.106 = private unnamed_addr constant [20 x i8] c"stroke-width %.20g\0A\00", align 1
@.str.107 = private unnamed_addr constant [17 x i8] c"text-align '%s'\0A\00", align 1
@.str.108 = private unnamed_addr constant [19 x i8] c"text-antialias %i\0A\00", align 1
@.str.109 = private unnamed_addr constant [15 x i8] c"decorate '%s'\0A\00", align 1
@.str.110 = private unnamed_addr constant [16 x i8] c"direction '%s'\0A\00", align 1
@.str.111 = private unnamed_addr constant [15 x i8] c"encoding '%s'\0A\00", align 1
@.str.112 = private unnamed_addr constant [13 x i8] c"kerning %lf\0A\00", align 1
@.str.113 = private unnamed_addr constant [23 x i8] c"interline-spacing %lf\0A\00", align 1
@.str.114 = private unnamed_addr constant [23 x i8] c"interword-spacing %lf\0A\00", align 1
@.str.115 = private unnamed_addr constant [18 x i8] c"text-undercolor '\00", align 1
@.str.116 = private unnamed_addr constant [13 x i8] c"skewX %.20g\0A\00", align 1
@.str.117 = private unnamed_addr constant [13 x i8] c"skewY %.20g\0A\00", align 1
@.str.118 = private unnamed_addr constant [23 x i8] c"translate %.20g %.20g\0A\00", align 1
@.str.119 = private unnamed_addr constant [33 x i8] c"viewbox %.20g %.20g %.20g %.20g\0A\00", align 1
@.str.120 = private unnamed_addr constant [12 x i8] c"DrawingWand\00", align 1
@.str.121 = private unnamed_addr constant [21 x i8] c"QuantumDepthMismatch\00", align 1
@.str.122 = private unnamed_addr constant [9 x i8] c"%s-%.20g\00", align 1
@.str.123 = private unnamed_addr constant [32 x i8] c"UnbalancedGraphicContextPushPop\00", align 1
@.str.124 = private unnamed_addr constant [21 x i8] c"pop graphic-context\0A\00", align 1
@.str.125 = private unnamed_addr constant [22 x i8] c"push graphic-context\0A\00", align 1
@.str.126 = private unnamed_addr constant [14 x i8] c"UnableToPrint\00", align 1
@.str.127 = private unnamed_addr constant [13 x i8] c" %.20g %.20g\00", align 1
@.str.128 = private unnamed_addr constant [38 x i8] c"%c%.20g %.20g %.20g %.20g %.20g %.20g\00", align 1
@.str.129 = private unnamed_addr constant [37 x i8] c" %.20g %.20g %.20g %.20g %.20g %.20g\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"%c%.20g %.20g %.20g %.20g\00", align 1
@.str.131 = private unnamed_addr constant [25 x i8] c" %.20g %.20g %.20g %.20g\00", align 1
@.str.132 = private unnamed_addr constant [14 x i8] c"%c%.20g %.20g\00", align 1
@.str.133 = private unnamed_addr constant [38 x i8] c"%c%.20g %.20g %.20g %u %u %.20g %.20g\00", align 1
@.str.134 = private unnamed_addr constant [37 x i8] c" %.20g %.20g %.20g %u %u %.20g %.20g\00", align 1
@.str.135 = private unnamed_addr constant [8 x i8] c"%c%.20g\00", align 1
@.str.136 = private unnamed_addr constant [7 x i8] c" %.20g\00", align 1
@.str.137 = private unnamed_addr constant [5 x i8] c"none\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @ClearDrawingWand(%struct._DrawingWand* %wand) #0 !dbg !1218 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !1222, metadata !DIExpression()), !dbg !1223
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1224
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !1226
  %1 = load i32, i32* %debug, align 4, !dbg !1226
  %cmp = icmp ne i32 %1, 0, !dbg !1227
  br i1 %cmp, label %if.then, label %if.end, !dbg !1228

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1229
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !1230
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1229
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 484, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1231
  br label %if.end, !dbg !1232

if.end:                                           ; preds = %if.then, %entry
  br label %for.cond, !dbg !1233

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1234
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 11, !dbg !1237
  %4 = load i64, i64* %index, align 8, !dbg !1237
  %cmp1 = icmp ugt i64 %4, 0, !dbg !1238
  br i1 %cmp1, label %for.body, label %for.end, !dbg !1239

for.body:                                         ; preds = %for.cond
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1240
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !1240
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !1240
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1240
  %index2 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !1240
  %8 = load i64, i64* %index2, align 8, !dbg !1240
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !1240
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !1240
  %call3 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %9), !dbg !1241
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1242
  %graphic_context4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 12, !dbg !1242
  %11 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context4, align 8, !dbg !1242
  %12 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1242
  %index5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %12, i32 0, i32 11, !dbg !1242
  %13 = load i64, i64* %index5, align 8, !dbg !1242
  %arrayidx6 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %11, i64 %13, !dbg !1242
  store %struct._DrawInfo* %call3, %struct._DrawInfo** %arrayidx6, align 8, !dbg !1243
  br label %for.inc, !dbg !1242

for.inc:                                          ; preds = %for.body
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1244
  %index7 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 11, !dbg !1245
  %15 = load i64, i64* %index7, align 8, !dbg !1246
  %dec = add i64 %15, -1, !dbg !1246
  store i64 %dec, i64* %index7, align 8, !dbg !1246
  br label %for.cond, !dbg !1247, !llvm.loop !1248

for.end:                                          ; preds = %for.cond
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1250
  %graphic_context8 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 12, !dbg !1250
  %17 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context8, align 8, !dbg !1250
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1250
  %index9 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %18, i32 0, i32 11, !dbg !1250
  %19 = load i64, i64* %index9, align 8, !dbg !1250
  %arrayidx10 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %17, i64 %19, !dbg !1250
  %20 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx10, align 8, !dbg !1250
  %call11 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %20), !dbg !1251
  %21 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1252
  %graphic_context12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %21, i32 0, i32 12, !dbg !1252
  %22 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context12, align 8, !dbg !1252
  %23 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1252
  %index13 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %23, i32 0, i32 11, !dbg !1252
  %24 = load i64, i64* %index13, align 8, !dbg !1252
  %arrayidx14 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %22, i64 %24, !dbg !1252
  store %struct._DrawInfo* %call11, %struct._DrawInfo** %arrayidx14, align 8, !dbg !1253
  %25 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1254
  %graphic_context15 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %25, i32 0, i32 12, !dbg !1255
  %26 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context15, align 8, !dbg !1255
  %27 = bitcast %struct._DrawInfo** %26 to i8*, !dbg !1254
  %call16 = call i8* @RelinquishMagickMemory(i8* %27), !dbg !1256
  %28 = bitcast i8* %call16 to %struct._DrawInfo**, !dbg !1257
  %29 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1258
  %graphic_context17 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %29, i32 0, i32 12, !dbg !1259
  store %struct._DrawInfo** %28, %struct._DrawInfo*** %graphic_context17, align 8, !dbg !1260
  %30 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1261
  %pattern_id = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %30, i32 0, i32 8, !dbg !1263
  %31 = load i8*, i8** %pattern_id, align 8, !dbg !1263
  %cmp18 = icmp ne i8* %31, null, !dbg !1264
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !1265

if.then19:                                        ; preds = %for.end
  %32 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1266
  %pattern_id20 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %32, i32 0, i32 8, !dbg !1267
  %33 = load i8*, i8** %pattern_id20, align 8, !dbg !1267
  %call21 = call i8* @DestroyString(i8* %33), !dbg !1268
  %34 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1269
  %pattern_id22 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %34, i32 0, i32 8, !dbg !1270
  store i8* %call21, i8** %pattern_id22, align 8, !dbg !1271
  br label %if.end23, !dbg !1269

if.end23:                                         ; preds = %if.then19, %for.end
  %35 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1272
  %mvg = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %35, i32 0, i32 4, !dbg !1273
  %36 = load i8*, i8** %mvg, align 8, !dbg !1273
  %call24 = call i8* @DestroyString(i8* %36), !dbg !1274
  %37 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1275
  %mvg25 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %37, i32 0, i32 4, !dbg !1276
  store i8* %call24, i8** %mvg25, align 8, !dbg !1277
  %38 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1278
  %destroy = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %38, i32 0, i32 17, !dbg !1280
  %39 = load i32, i32* %destroy, align 8, !dbg !1280
  %cmp26 = icmp ne i32 %39, 0, !dbg !1281
  br i1 %cmp26, label %land.lhs.true, label %if.else, !dbg !1282

land.lhs.true:                                    ; preds = %if.end23
  %40 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1283
  %image = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %40, i32 0, i32 2, !dbg !1284
  %41 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1284
  %cmp27 = icmp ne %struct._Image* %41, null, !dbg !1285
  br i1 %cmp27, label %if.then28, label %if.else, !dbg !1286

if.then28:                                        ; preds = %land.lhs.true
  %42 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1287
  %image29 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %42, i32 0, i32 2, !dbg !1288
  %43 = load %struct._Image*, %struct._Image** %image29, align 8, !dbg !1288
  %call30 = call %struct._Image* @DestroyImage(%struct._Image* %43), !dbg !1289
  %44 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1290
  %image31 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %44, i32 0, i32 2, !dbg !1291
  store %struct._Image* %call30, %struct._Image** %image31, align 8, !dbg !1292
  br label %if.end33, !dbg !1290

if.else:                                          ; preds = %land.lhs.true, %if.end23
  %45 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1293
  %image32 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %45, i32 0, i32 2, !dbg !1294
  store %struct._Image* null, %struct._Image** %image32, align 8, !dbg !1295
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then28
  %46 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1296
  %mvg34 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %46, i32 0, i32 4, !dbg !1297
  store i8* null, i8** %mvg34, align 8, !dbg !1298
  %47 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1299
  %mvg_alloc = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %47, i32 0, i32 5, !dbg !1300
  store i64 0, i64* %mvg_alloc, align 8, !dbg !1301
  %48 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1302
  %mvg_length = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %48, i32 0, i32 6, !dbg !1303
  store i64 0, i64* %mvg_length, align 8, !dbg !1304
  %49 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1305
  %mvg_width = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %49, i32 0, i32 7, !dbg !1306
  store i64 0, i64* %mvg_width, align 8, !dbg !1307
  %50 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1308
  %pattern_id35 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %50, i32 0, i32 8, !dbg !1309
  store i8* null, i8** %pattern_id35, align 8, !dbg !1310
  %51 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1311
  %pattern_offset = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %51, i32 0, i32 10, !dbg !1312
  store i64 0, i64* %pattern_offset, align 8, !dbg !1313
  %52 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1314
  %pattern_bounds = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %52, i32 0, i32 9, !dbg !1315
  %x = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds, i32 0, i32 2, !dbg !1316
  store i64 0, i64* %x, align 8, !dbg !1317
  %53 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1318
  %pattern_bounds36 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %53, i32 0, i32 9, !dbg !1319
  %y = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds36, i32 0, i32 3, !dbg !1320
  store i64 0, i64* %y, align 8, !dbg !1321
  %54 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1322
  %pattern_bounds37 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %54, i32 0, i32 9, !dbg !1323
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds37, i32 0, i32 0, !dbg !1324
  store i64 0, i64* %width, align 8, !dbg !1325
  %55 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1326
  %pattern_bounds38 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %55, i32 0, i32 9, !dbg !1327
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds38, i32 0, i32 1, !dbg !1328
  store i64 0, i64* %height, align 8, !dbg !1329
  %56 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1330
  %index39 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %56, i32 0, i32 11, !dbg !1331
  store i64 0, i64* %index39, align 8, !dbg !1332
  %call40 = call i8* @AcquireMagickMemory(i64 8) #12, !dbg !1333
  %57 = bitcast i8* %call40 to %struct._DrawInfo**, !dbg !1334
  %58 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1335
  %graphic_context41 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %58, i32 0, i32 12, !dbg !1336
  store %struct._DrawInfo** %57, %struct._DrawInfo*** %graphic_context41, align 8, !dbg !1337
  %59 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1338
  %graphic_context42 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %59, i32 0, i32 12, !dbg !1340
  %60 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context42, align 8, !dbg !1340
  %cmp43 = icmp eq %struct._DrawInfo** %60, null, !dbg !1341
  br i1 %cmp43, label %if.then44, label %if.end48, !dbg !1342

if.then44:                                        ; preds = %if.end33
  %61 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1343
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %61, i32 0, i32 3, !dbg !1343
  %62 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1343
  %63 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1343
  %name45 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %63, i32 0, i32 1, !dbg !1343
  %arraydecay46 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name45, i64 0, i64 0, !dbg !1343
  %call47 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %62, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 513, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay46), !dbg !1343
  br label %return, !dbg !1345

if.end48:                                         ; preds = %if.end33
  %call49 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* null), !dbg !1346
  %64 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1347
  %graphic_context50 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %64, i32 0, i32 12, !dbg !1347
  %65 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context50, align 8, !dbg !1347
  %66 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1347
  %index51 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %66, i32 0, i32 11, !dbg !1347
  %67 = load i64, i64* %index51, align 8, !dbg !1347
  %arrayidx52 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %65, i64 %67, !dbg !1347
  store %struct._DrawInfo* %call49, %struct._DrawInfo** %arrayidx52, align 8, !dbg !1348
  %68 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1349
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %68, i32 0, i32 13, !dbg !1350
  store i32 1, i32* %filter_off, align 8, !dbg !1351
  %69 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1352
  %indent_depth = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %69, i32 0, i32 14, !dbg !1353
  store i64 0, i64* %indent_depth, align 8, !dbg !1354
  %70 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1355
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %70, i32 0, i32 15, !dbg !1356
  store i32 0, i32* %path_operation, align 8, !dbg !1357
  %71 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1358
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %71, i32 0, i32 16, !dbg !1359
  store i32 0, i32* %path_mode, align 4, !dbg !1360
  %call53 = call %struct._Image* @AcquireImage(%struct._ImageInfo* null), !dbg !1361
  %72 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1362
  %image54 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %72, i32 0, i32 2, !dbg !1363
  store %struct._Image* %call53, %struct._Image** %image54, align 8, !dbg !1364
  %73 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1365
  %exception55 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %73, i32 0, i32 3, !dbg !1366
  %74 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception55, align 8, !dbg !1366
  call void @ClearMagickException(%struct._ExceptionInfo* %74), !dbg !1367
  %75 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1368
  %destroy56 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %75, i32 0, i32 17, !dbg !1369
  store i32 1, i32* %destroy56, align 8, !dbg !1370
  %call57 = call i32 @IsEventLogging(), !dbg !1371
  %76 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1372
  %debug58 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %76, i32 0, i32 18, !dbg !1373
  store i32 %call57, i32* %debug58, align 4, !dbg !1374
  br label %return, !dbg !1375

return:                                           ; preds = %if.end48, %if.then44
  ret void, !dbg !1375
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #2

declare dso_local %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo*) #2

declare dso_local i8* @RelinquishMagickMemory(i8*) #2

declare dso_local i8* @DestroyString(i8*) #2

declare dso_local %struct._Image* @DestroyImage(%struct._Image*) #2

; Function Attrs: allocsize(0)
declare dso_local i8* @AcquireMagickMemory(i64) #3

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #2

declare dso_local %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo*, %struct._DrawInfo*) #2

declare dso_local %struct._Image* @AcquireImage(%struct._ImageInfo*) #2

declare dso_local void @ClearMagickException(%struct._ExceptionInfo*) #2

declare dso_local i32 @IsEventLogging() #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._DrawingWand* @CloneDrawingWand(%struct._DrawingWand* %wand) #0 !dbg !1376 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %clone_wand = alloca %struct._DrawingWand*, align 8
  %i = alloca i64, align 8
  %exception = alloca %struct._ExceptionInfo, align 8
  %exception37 = alloca %struct._ExceptionInfo, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !1379, metadata !DIExpression()), !dbg !1380
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %clone_wand, metadata !1381, metadata !DIExpression()), !dbg !1382
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1383, metadata !DIExpression()), !dbg !1384
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1385
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !1387
  %1 = load i32, i32* %debug, align 4, !dbg !1387
  %cmp = icmp ne i32 %1, 0, !dbg !1388
  br i1 %cmp, label %if.then, label %if.end, !dbg !1389

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1390
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !1391
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1390
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 560, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1392
  br label %if.end, !dbg !1393

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i8* @AcquireMagickMemory(i64 4256) #12, !dbg !1394
  %3 = bitcast i8* %call1 to %struct._DrawingWand*, !dbg !1395
  store %struct._DrawingWand* %3, %struct._DrawingWand** %clone_wand, align 8, !dbg !1396
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1397
  %cmp2 = icmp eq %struct._DrawingWand* %4, null, !dbg !1399
  br i1 %cmp2, label %if.then3, label %if.end8, !dbg !1400

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception, metadata !1401, metadata !DIExpression()), !dbg !1403
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1403
  %call4 = call i32* @__errno_location() #13, !dbg !1403
  %5 = load i32, i32* %call4, align 4, !dbg !1403
  %call5 = call i8* @GetExceptionMessage(i32 %5), !dbg !1403
  %call6 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 564, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %call5), !dbg !1403
  call void @CatchException(%struct._ExceptionInfo* %exception), !dbg !1403
  %call7 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1403
  call void @MagickWandTerminus(), !dbg !1403
  call void @_exit(i32 1) #14, !dbg !1403
  unreachable, !dbg !1403

if.end8:                                          ; preds = %if.end
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1404
  %7 = bitcast %struct._DrawingWand* %6 to i8*, !dbg !1404
  %call9 = call i8* @ResetMagickMemory(i8* %7, i32 0, i64 4256), !dbg !1405
  %call10 = call i64 @AcquireWandId(), !dbg !1406
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1407
  %id = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 0, !dbg !1408
  store i64 %call10, i64* %id, align 8, !dbg !1409
  %9 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1410
  %name11 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %9, i32 0, i32 1, !dbg !1411
  %arraydecay12 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name11, i64 0, i64 0, !dbg !1410
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1412
  %id13 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 0, !dbg !1413
  %11 = load i64, i64* %id13, align 8, !dbg !1413
  %conv = uitofp i64 %11 to double, !dbg !1414
  %call14 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay12, i64 4096, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), double %conv), !dbg !1415
  %call15 = call %struct._ExceptionInfo* @AcquireExceptionInfo(), !dbg !1416
  %12 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1417
  %exception16 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %12, i32 0, i32 3, !dbg !1418
  store %struct._ExceptionInfo* %call15, %struct._ExceptionInfo** %exception16, align 8, !dbg !1419
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1420
  %exception17 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 3, !dbg !1421
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception17, align 8, !dbg !1421
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1422
  %exception18 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 3, !dbg !1423
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception18, align 8, !dbg !1423
  call void @InheritException(%struct._ExceptionInfo* %14, %struct._ExceptionInfo* %16), !dbg !1424
  %17 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1425
  %mvg = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %17, i32 0, i32 4, !dbg !1426
  %18 = load i8*, i8** %mvg, align 8, !dbg !1426
  %call19 = call i8* @AcquireString(i8* %18), !dbg !1427
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1428
  %mvg20 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %19, i32 0, i32 4, !dbg !1429
  store i8* %call19, i8** %mvg20, align 8, !dbg !1430
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1431
  %mvg21 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %20, i32 0, i32 4, !dbg !1432
  %21 = load i8*, i8** %mvg21, align 8, !dbg !1432
  %call22 = call i64 @strlen(i8* %21) #15, !dbg !1433
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1434
  %mvg_length = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %22, i32 0, i32 6, !dbg !1435
  store i64 %call22, i64* %mvg_length, align 8, !dbg !1436
  %23 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1437
  %mvg_length23 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %23, i32 0, i32 6, !dbg !1438
  %24 = load i64, i64* %mvg_length23, align 8, !dbg !1438
  %add = add i64 %24, 1, !dbg !1439
  %25 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1440
  %mvg_alloc = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %25, i32 0, i32 5, !dbg !1441
  store i64 %add, i64* %mvg_alloc, align 8, !dbg !1442
  %26 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1443
  %mvg_width = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %26, i32 0, i32 7, !dbg !1444
  %27 = load i64, i64* %mvg_width, align 8, !dbg !1444
  %28 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1445
  %mvg_width24 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %28, i32 0, i32 7, !dbg !1446
  store i64 %27, i64* %mvg_width24, align 8, !dbg !1447
  %29 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1448
  %pattern_id = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %29, i32 0, i32 8, !dbg !1449
  %30 = load i8*, i8** %pattern_id, align 8, !dbg !1449
  %call25 = call i8* @AcquireString(i8* %30), !dbg !1450
  %31 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1451
  %pattern_id26 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %31, i32 0, i32 8, !dbg !1452
  store i8* %call25, i8** %pattern_id26, align 8, !dbg !1453
  %32 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1454
  %pattern_offset = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %32, i32 0, i32 10, !dbg !1455
  %33 = load i64, i64* %pattern_offset, align 8, !dbg !1455
  %34 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1456
  %pattern_offset27 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %34, i32 0, i32 10, !dbg !1457
  store i64 %33, i64* %pattern_offset27, align 8, !dbg !1458
  %35 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1459
  %pattern_bounds = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %35, i32 0, i32 9, !dbg !1460
  %36 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1461
  %pattern_bounds28 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %36, i32 0, i32 9, !dbg !1462
  %37 = bitcast %struct._RectangleInfo* %pattern_bounds to i8*, !dbg !1462
  %38 = bitcast %struct._RectangleInfo* %pattern_bounds28 to i8*, !dbg !1462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 32, i1 false), !dbg !1462
  %39 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1463
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %39, i32 0, i32 11, !dbg !1464
  %40 = load i64, i64* %index, align 8, !dbg !1464
  %41 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1465
  %index29 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %41, i32 0, i32 11, !dbg !1466
  store i64 %40, i64* %index29, align 8, !dbg !1467
  %42 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1468
  %index30 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %42, i32 0, i32 11, !dbg !1469
  %43 = load i64, i64* %index30, align 8, !dbg !1469
  %add31 = add i64 %43, 1, !dbg !1470
  %call32 = call i8* @AcquireQuantumMemory(i64 %add31, i64 8) #16, !dbg !1471
  %44 = bitcast i8* %call32 to %struct._DrawInfo**, !dbg !1472
  %45 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1473
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %45, i32 0, i32 12, !dbg !1474
  store %struct._DrawInfo** %44, %struct._DrawInfo*** %graphic_context, align 8, !dbg !1475
  %46 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1476
  %graphic_context33 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %46, i32 0, i32 12, !dbg !1478
  %47 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context33, align 8, !dbg !1478
  %cmp34 = icmp eq %struct._DrawInfo** %47, null, !dbg !1479
  br i1 %cmp34, label %if.then36, label %if.end42, !dbg !1480

if.then36:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception37, metadata !1481, metadata !DIExpression()), !dbg !1483
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception37), !dbg !1483
  %call38 = call i32* @__errno_location() #13, !dbg !1483
  %48 = load i32, i32* %call38, align 4, !dbg !1483
  %call39 = call i8* @GetExceptionMessage(i32 %48), !dbg !1483
  %call40 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 583, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %call39), !dbg !1483
  call void @CatchException(%struct._ExceptionInfo* %exception37), !dbg !1483
  %call41 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception37), !dbg !1483
  call void @MagickWandTerminus(), !dbg !1483
  call void @_exit(i32 1) #14, !dbg !1483
  unreachable, !dbg !1483

if.end42:                                         ; preds = %if.end8
  store i64 0, i64* %i, align 8, !dbg !1484
  br label %for.cond, !dbg !1486

for.cond:                                         ; preds = %for.inc, %if.end42
  %49 = load i64, i64* %i, align 8, !dbg !1487
  %50 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1489
  %index43 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %50, i32 0, i32 11, !dbg !1490
  %51 = load i64, i64* %index43, align 8, !dbg !1490
  %cmp44 = icmp sle i64 %49, %51, !dbg !1491
  br i1 %cmp44, label %for.body, label %for.end, !dbg !1492

for.body:                                         ; preds = %for.cond
  %52 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1493
  %graphic_context46 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %52, i32 0, i32 12, !dbg !1494
  %53 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context46, align 8, !dbg !1494
  %54 = load i64, i64* %i, align 8, !dbg !1495
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %53, i64 %54, !dbg !1493
  %55 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !1493
  %call47 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %55), !dbg !1496
  %56 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1497
  %graphic_context48 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %56, i32 0, i32 12, !dbg !1498
  %57 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context48, align 8, !dbg !1498
  %58 = load i64, i64* %i, align 8, !dbg !1499
  %arrayidx49 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %57, i64 %58, !dbg !1497
  store %struct._DrawInfo* %call47, %struct._DrawInfo** %arrayidx49, align 8, !dbg !1500
  br label %for.inc, !dbg !1497

for.inc:                                          ; preds = %for.body
  %59 = load i64, i64* %i, align 8, !dbg !1501
  %inc = add nsw i64 %59, 1, !dbg !1501
  store i64 %inc, i64* %i, align 8, !dbg !1501
  br label %for.cond, !dbg !1502, !llvm.loop !1503

for.end:                                          ; preds = %for.cond
  %60 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1505
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %60, i32 0, i32 13, !dbg !1506
  %61 = load i32, i32* %filter_off, align 8, !dbg !1506
  %62 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1507
  %filter_off50 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %62, i32 0, i32 13, !dbg !1508
  store i32 %61, i32* %filter_off50, align 8, !dbg !1509
  %63 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1510
  %indent_depth = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %63, i32 0, i32 14, !dbg !1511
  %64 = load i64, i64* %indent_depth, align 8, !dbg !1511
  %65 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1512
  %indent_depth51 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %65, i32 0, i32 14, !dbg !1513
  store i64 %64, i64* %indent_depth51, align 8, !dbg !1514
  %66 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1515
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %66, i32 0, i32 15, !dbg !1516
  %67 = load i32, i32* %path_operation, align 8, !dbg !1516
  %68 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1517
  %path_operation52 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %68, i32 0, i32 15, !dbg !1518
  store i32 %67, i32* %path_operation52, align 8, !dbg !1519
  %69 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1520
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %69, i32 0, i32 16, !dbg !1521
  %70 = load i32, i32* %path_mode, align 4, !dbg !1521
  %71 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1522
  %path_mode53 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %71, i32 0, i32 16, !dbg !1523
  store i32 %70, i32* %path_mode53, align 4, !dbg !1524
  %72 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1525
  %image = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %72, i32 0, i32 2, !dbg !1526
  %73 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1526
  %74 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1527
  %image54 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %74, i32 0, i32 2, !dbg !1528
  store %struct._Image* %73, %struct._Image** %image54, align 8, !dbg !1529
  %75 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1530
  %image55 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %75, i32 0, i32 2, !dbg !1532
  %76 = load %struct._Image*, %struct._Image** %image55, align 8, !dbg !1532
  %cmp56 = icmp ne %struct._Image* %76, null, !dbg !1533
  br i1 %cmp56, label %if.then58, label %if.end63, !dbg !1534

if.then58:                                        ; preds = %for.end
  %77 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1535
  %image59 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %77, i32 0, i32 2, !dbg !1536
  %78 = load %struct._Image*, %struct._Image** %image59, align 8, !dbg !1536
  %79 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1537
  %exception60 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %79, i32 0, i32 3, !dbg !1538
  %80 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception60, align 8, !dbg !1538
  %call61 = call %struct._Image* @CloneImage(%struct._Image* %78, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %80), !dbg !1539
  %81 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1540
  %image62 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %81, i32 0, i32 2, !dbg !1541
  store %struct._Image* %call61, %struct._Image** %image62, align 8, !dbg !1542
  br label %if.end63, !dbg !1540

if.end63:                                         ; preds = %if.then58, %for.end
  %82 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1543
  %destroy = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %82, i32 0, i32 17, !dbg !1544
  store i32 1, i32* %destroy, align 8, !dbg !1545
  %call64 = call i32 @IsEventLogging(), !dbg !1546
  %83 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1547
  %debug65 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %83, i32 0, i32 18, !dbg !1548
  store i32 %call64, i32* %debug65, align 4, !dbg !1549
  %84 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1550
  %debug66 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %84, i32 0, i32 18, !dbg !1552
  %85 = load i32, i32* %debug66, align 4, !dbg !1552
  %cmp67 = icmp ne i32 %85, 0, !dbg !1553
  br i1 %cmp67, label %if.then69, label %if.end73, !dbg !1554

if.then69:                                        ; preds = %if.end63
  %86 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1555
  %name70 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %86, i32 0, i32 1, !dbg !1556
  %arraydecay71 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name70, i64 0, i64 0, !dbg !1555
  %call72 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 598, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay71), !dbg !1557
  br label %if.end73, !dbg !1558

if.end73:                                         ; preds = %if.then69, %if.end63
  %87 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1559
  %signature = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %87, i32 0, i32 19, !dbg !1560
  store i64 2880220587, i64* %signature, align 8, !dbg !1561
  %88 = load %struct._DrawingWand*, %struct._DrawingWand** %clone_wand, align 8, !dbg !1562
  ret %struct._DrawingWand* %88, !dbg !1563
}

declare dso_local void @GetExceptionInfo(%struct._ExceptionInfo*) #2

declare dso_local i8* @GetExceptionMessage(i32) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #4

declare dso_local void @CatchException(%struct._ExceptionInfo*) #2

declare dso_local %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo*) #2

declare dso_local void @MagickWandTerminus() #2

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #5

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #2

declare dso_local i64 @AcquireWandId() #2

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #2

declare dso_local %struct._ExceptionInfo* @AcquireExceptionInfo() #2

declare dso_local void @InheritException(%struct._ExceptionInfo*, %struct._ExceptionInfo*) #2

declare dso_local i8* @AcquireString(i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #6

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireQuantumMemory(i64, i64) #8

declare dso_local %struct._Image* @CloneImage(%struct._Image*, i64, i64, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._DrawingWand* @DestroyDrawingWand(%struct._DrawingWand* %wand) #0 !dbg !1564 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !1567, metadata !DIExpression()), !dbg !1568
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1569
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !1571
  %1 = load i32, i32* %debug, align 4, !dbg !1571
  %cmp = icmp ne i32 %1, 0, !dbg !1572
  br i1 %cmp, label %if.then, label %if.end, !dbg !1573

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1574
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !1575
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1574
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 632, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1576
  br label %if.end, !dbg !1577

if.end:                                           ; preds = %if.then, %entry
  br label %for.cond, !dbg !1578

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1579
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 11, !dbg !1582
  %4 = load i64, i64* %index, align 8, !dbg !1582
  %cmp1 = icmp ugt i64 %4, 0, !dbg !1583
  br i1 %cmp1, label %for.body, label %for.end, !dbg !1584

for.body:                                         ; preds = %for.cond
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1585
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !1585
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !1585
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1585
  %index2 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !1585
  %8 = load i64, i64* %index2, align 8, !dbg !1585
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !1585
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !1585
  %call3 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %9), !dbg !1586
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1587
  %graphic_context4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 12, !dbg !1587
  %11 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context4, align 8, !dbg !1587
  %12 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1587
  %index5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %12, i32 0, i32 11, !dbg !1587
  %13 = load i64, i64* %index5, align 8, !dbg !1587
  %arrayidx6 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %11, i64 %13, !dbg !1587
  store %struct._DrawInfo* %call3, %struct._DrawInfo** %arrayidx6, align 8, !dbg !1588
  br label %for.inc, !dbg !1587

for.inc:                                          ; preds = %for.body
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1589
  %index7 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 11, !dbg !1590
  %15 = load i64, i64* %index7, align 8, !dbg !1591
  %dec = add i64 %15, -1, !dbg !1591
  store i64 %dec, i64* %index7, align 8, !dbg !1591
  br label %for.cond, !dbg !1592, !llvm.loop !1593

for.end:                                          ; preds = %for.cond
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1595
  %graphic_context8 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 12, !dbg !1595
  %17 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context8, align 8, !dbg !1595
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1595
  %index9 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %18, i32 0, i32 11, !dbg !1595
  %19 = load i64, i64* %index9, align 8, !dbg !1595
  %arrayidx10 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %17, i64 %19, !dbg !1595
  %20 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx10, align 8, !dbg !1595
  %call11 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %20), !dbg !1596
  %21 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1597
  %graphic_context12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %21, i32 0, i32 12, !dbg !1597
  %22 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context12, align 8, !dbg !1597
  %23 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1597
  %index13 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %23, i32 0, i32 11, !dbg !1597
  %24 = load i64, i64* %index13, align 8, !dbg !1597
  %arrayidx14 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %22, i64 %24, !dbg !1597
  store %struct._DrawInfo* %call11, %struct._DrawInfo** %arrayidx14, align 8, !dbg !1598
  %25 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1599
  %graphic_context15 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %25, i32 0, i32 12, !dbg !1600
  %26 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context15, align 8, !dbg !1600
  %27 = bitcast %struct._DrawInfo** %26 to i8*, !dbg !1599
  %call16 = call i8* @RelinquishMagickMemory(i8* %27), !dbg !1601
  %28 = bitcast i8* %call16 to %struct._DrawInfo**, !dbg !1602
  %29 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1603
  %graphic_context17 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %29, i32 0, i32 12, !dbg !1604
  store %struct._DrawInfo** %28, %struct._DrawInfo*** %graphic_context17, align 8, !dbg !1605
  %30 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1606
  %pattern_id = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %30, i32 0, i32 8, !dbg !1608
  %31 = load i8*, i8** %pattern_id, align 8, !dbg !1608
  %cmp18 = icmp ne i8* %31, null, !dbg !1609
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !1610

if.then19:                                        ; preds = %for.end
  %32 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1611
  %pattern_id20 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %32, i32 0, i32 8, !dbg !1612
  %33 = load i8*, i8** %pattern_id20, align 8, !dbg !1612
  %call21 = call i8* @DestroyString(i8* %33), !dbg !1613
  %34 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1614
  %pattern_id22 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %34, i32 0, i32 8, !dbg !1615
  store i8* %call21, i8** %pattern_id22, align 8, !dbg !1616
  br label %if.end23, !dbg !1614

if.end23:                                         ; preds = %if.then19, %for.end
  %35 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1617
  %mvg = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %35, i32 0, i32 4, !dbg !1618
  %36 = load i8*, i8** %mvg, align 8, !dbg !1618
  %call24 = call i8* @DestroyString(i8* %36), !dbg !1619
  %37 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1620
  %mvg25 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %37, i32 0, i32 4, !dbg !1621
  store i8* %call24, i8** %mvg25, align 8, !dbg !1622
  %38 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1623
  %destroy = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %38, i32 0, i32 17, !dbg !1625
  %39 = load i32, i32* %destroy, align 8, !dbg !1625
  %cmp26 = icmp ne i32 %39, 0, !dbg !1626
  br i1 %cmp26, label %land.lhs.true, label %if.end32, !dbg !1627

land.lhs.true:                                    ; preds = %if.end23
  %40 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1628
  %image = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %40, i32 0, i32 2, !dbg !1629
  %41 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1629
  %cmp27 = icmp ne %struct._Image* %41, null, !dbg !1630
  br i1 %cmp27, label %if.then28, label %if.end32, !dbg !1631

if.then28:                                        ; preds = %land.lhs.true
  %42 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1632
  %image29 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %42, i32 0, i32 2, !dbg !1633
  %43 = load %struct._Image*, %struct._Image** %image29, align 8, !dbg !1633
  %call30 = call %struct._Image* @DestroyImage(%struct._Image* %43), !dbg !1634
  %44 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1635
  %image31 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %44, i32 0, i32 2, !dbg !1636
  store %struct._Image* %call30, %struct._Image** %image31, align 8, !dbg !1637
  br label %if.end32, !dbg !1635

if.end32:                                         ; preds = %if.then28, %land.lhs.true, %if.end23
  %45 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1638
  %image33 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %45, i32 0, i32 2, !dbg !1639
  store %struct._Image* null, %struct._Image** %image33, align 8, !dbg !1640
  %46 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1641
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %46, i32 0, i32 3, !dbg !1642
  %47 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1642
  %call34 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %47), !dbg !1643
  %48 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1644
  %exception35 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %48, i32 0, i32 3, !dbg !1645
  store %struct._ExceptionInfo* %call34, %struct._ExceptionInfo** %exception35, align 8, !dbg !1646
  %49 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1647
  %signature = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %49, i32 0, i32 19, !dbg !1648
  store i64 -2880220588, i64* %signature, align 8, !dbg !1649
  %50 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1650
  %id = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %50, i32 0, i32 0, !dbg !1651
  %51 = load i64, i64* %id, align 8, !dbg !1651
  call void @RelinquishWandId(i64 %51), !dbg !1652
  %52 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1653
  %53 = bitcast %struct._DrawingWand* %52 to i8*, !dbg !1653
  %call36 = call i8* @RelinquishMagickMemory(i8* %53), !dbg !1654
  %54 = bitcast i8* %call36 to %struct._DrawingWand*, !dbg !1655
  store %struct._DrawingWand* %54, %struct._DrawingWand** %wand.addr, align 8, !dbg !1656
  %55 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1657
  ret %struct._DrawingWand* %55, !dbg !1658
}

declare dso_local void @RelinquishWandId(i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawAffine(%struct._DrawingWand* %wand, %struct._AffineMatrix* %affine) #0 !dbg !1659 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %affine.addr = alloca %struct._AffineMatrix*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !1664, metadata !DIExpression()), !dbg !1665
  store %struct._AffineMatrix* %affine, %struct._AffineMatrix** %affine.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix** %affine.addr, metadata !1666, metadata !DIExpression()), !dbg !1667
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1668
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !1670
  %1 = load i32, i32* %debug, align 4, !dbg !1670
  %cmp = icmp ne i32 %1, 0, !dbg !1671
  br i1 %cmp, label %if.then, label %if.end, !dbg !1672

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1673
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !1674
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1673
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 682, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1675
  br label %if.end, !dbg !1676

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1677
  %4 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1678
  call void @AdjustAffine(%struct._DrawingWand* %3, %struct._AffineMatrix* %4), !dbg !1679
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1680
  %6 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1681
  %sx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %6, i32 0, i32 0, !dbg !1682
  %7 = load double, double* %sx, align 8, !dbg !1682
  %8 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1683
  %rx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %8, i32 0, i32 1, !dbg !1684
  %9 = load double, double* %rx, align 8, !dbg !1684
  %10 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1685
  %ry = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %10, i32 0, i32 2, !dbg !1686
  %11 = load double, double* %ry, align 8, !dbg !1686
  %12 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1687
  %sy = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %12, i32 0, i32 3, !dbg !1688
  %13 = load double, double* %sy, align 8, !dbg !1688
  %14 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1689
  %tx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %14, i32 0, i32 4, !dbg !1690
  %15 = load double, double* %tx, align 8, !dbg !1690
  %16 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1691
  %ty = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %16, i32 0, i32 5, !dbg !1692
  %17 = load double, double* %ty, align 8, !dbg !1692
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), double %7, double %9, double %11, double %13, double %15, double %17), !dbg !1693
  ret void, !dbg !1694
}

; Function Attrs: noinline nounwind uwtable
define internal void @AdjustAffine(%struct._DrawingWand* %wand, %struct._AffineMatrix* %affine) #0 !dbg !1695 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %affine.addr = alloca %struct._AffineMatrix*, align 8
  %current = alloca %struct._AffineMatrix, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !1696, metadata !DIExpression()), !dbg !1697
  store %struct._AffineMatrix* %affine, %struct._AffineMatrix** %affine.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix** %affine.addr, metadata !1698, metadata !DIExpression()), !dbg !1699
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1700
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !1702
  %1 = load i32, i32* %debug, align 4, !dbg !1702
  %cmp = icmp ne i32 %1, 0, !dbg !1703
  br i1 %cmp, label %if.then, label %if.end, !dbg !1704

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1705
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !1706
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1705
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 438, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1707
  br label %if.end, !dbg !1708

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1709
  %sx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %3, i32 0, i32 0, !dbg !1711
  %4 = load double, double* %sx, align 8, !dbg !1711
  %cmp1 = fcmp une double %4, 1.000000e+00, !dbg !1712
  br i1 %cmp1, label %if.then11, label %lor.lhs.false, !dbg !1713

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1714
  %rx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %5, i32 0, i32 1, !dbg !1715
  %6 = load double, double* %rx, align 8, !dbg !1715
  %cmp2 = fcmp une double %6, 0.000000e+00, !dbg !1716
  br i1 %cmp2, label %if.then11, label %lor.lhs.false3, !dbg !1717

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %7 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1718
  %ry = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %7, i32 0, i32 2, !dbg !1719
  %8 = load double, double* %ry, align 8, !dbg !1719
  %cmp4 = fcmp une double %8, 0.000000e+00, !dbg !1720
  br i1 %cmp4, label %if.then11, label %lor.lhs.false5, !dbg !1721

lor.lhs.false5:                                   ; preds = %lor.lhs.false3
  %9 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1722
  %sy = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %9, i32 0, i32 3, !dbg !1723
  %10 = load double, double* %sy, align 8, !dbg !1723
  %cmp6 = fcmp une double %10, 1.000000e+00, !dbg !1724
  br i1 %cmp6, label %if.then11, label %lor.lhs.false7, !dbg !1725

lor.lhs.false7:                                   ; preds = %lor.lhs.false5
  %11 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1726
  %tx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %11, i32 0, i32 4, !dbg !1727
  %12 = load double, double* %tx, align 8, !dbg !1727
  %cmp8 = fcmp une double %12, 0.000000e+00, !dbg !1728
  br i1 %cmp8, label %if.then11, label %lor.lhs.false9, !dbg !1729

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %13 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1730
  %ty = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %13, i32 0, i32 5, !dbg !1731
  %14 = load double, double* %ty, align 8, !dbg !1731
  %cmp10 = fcmp une double %14, 0.000000e+00, !dbg !1732
  br i1 %cmp10, label %if.then11, label %if.end87, !dbg !1733

if.then11:                                        ; preds = %lor.lhs.false9, %lor.lhs.false7, %lor.lhs.false5, %lor.lhs.false3, %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix* %current, metadata !1734, metadata !DIExpression()), !dbg !1736
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1737
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 12, !dbg !1737
  %16 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !1737
  %17 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1737
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %17, i32 0, i32 11, !dbg !1737
  %18 = load i64, i64* %index, align 8, !dbg !1737
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %16, i64 %18, !dbg !1737
  %19 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !1737
  %affine12 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %19, i32 0, i32 3, !dbg !1738
  %20 = bitcast %struct._AffineMatrix* %current to i8*, !dbg !1738
  %21 = bitcast %struct._AffineMatrix* %affine12 to i8*, !dbg !1738
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 48, i1 false), !dbg !1738
  %22 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1739
  %sx13 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %22, i32 0, i32 0, !dbg !1740
  %23 = load double, double* %sx13, align 8, !dbg !1740
  %sx14 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 0, !dbg !1741
  %24 = load double, double* %sx14, align 8, !dbg !1741
  %mul = fmul double %23, %24, !dbg !1742
  %25 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1743
  %ry15 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %25, i32 0, i32 2, !dbg !1744
  %26 = load double, double* %ry15, align 8, !dbg !1744
  %rx16 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 1, !dbg !1745
  %27 = load double, double* %rx16, align 8, !dbg !1745
  %mul17 = fmul double %26, %27, !dbg !1746
  %add = fadd double %mul, %mul17, !dbg !1747
  %28 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1748
  %graphic_context18 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %28, i32 0, i32 12, !dbg !1748
  %29 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context18, align 8, !dbg !1748
  %30 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1748
  %index19 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %30, i32 0, i32 11, !dbg !1748
  %31 = load i64, i64* %index19, align 8, !dbg !1748
  %arrayidx20 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %29, i64 %31, !dbg !1748
  %32 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx20, align 8, !dbg !1748
  %affine21 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %32, i32 0, i32 3, !dbg !1749
  %sx22 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine21, i32 0, i32 0, !dbg !1750
  store double %add, double* %sx22, align 8, !dbg !1751
  %33 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1752
  %rx23 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %33, i32 0, i32 1, !dbg !1753
  %34 = load double, double* %rx23, align 8, !dbg !1753
  %sx24 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 0, !dbg !1754
  %35 = load double, double* %sx24, align 8, !dbg !1754
  %mul25 = fmul double %34, %35, !dbg !1755
  %36 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1756
  %sy26 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %36, i32 0, i32 3, !dbg !1757
  %37 = load double, double* %sy26, align 8, !dbg !1757
  %rx27 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 1, !dbg !1758
  %38 = load double, double* %rx27, align 8, !dbg !1758
  %mul28 = fmul double %37, %38, !dbg !1759
  %add29 = fadd double %mul25, %mul28, !dbg !1760
  %39 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1761
  %graphic_context30 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %39, i32 0, i32 12, !dbg !1761
  %40 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context30, align 8, !dbg !1761
  %41 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1761
  %index31 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %41, i32 0, i32 11, !dbg !1761
  %42 = load i64, i64* %index31, align 8, !dbg !1761
  %arrayidx32 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %40, i64 %42, !dbg !1761
  %43 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx32, align 8, !dbg !1761
  %affine33 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %43, i32 0, i32 3, !dbg !1762
  %rx34 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine33, i32 0, i32 1, !dbg !1763
  store double %add29, double* %rx34, align 8, !dbg !1764
  %44 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1765
  %sx35 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %44, i32 0, i32 0, !dbg !1766
  %45 = load double, double* %sx35, align 8, !dbg !1766
  %ry36 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 2, !dbg !1767
  %46 = load double, double* %ry36, align 8, !dbg !1767
  %mul37 = fmul double %45, %46, !dbg !1768
  %47 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1769
  %ry38 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %47, i32 0, i32 2, !dbg !1770
  %48 = load double, double* %ry38, align 8, !dbg !1770
  %sy39 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 3, !dbg !1771
  %49 = load double, double* %sy39, align 8, !dbg !1771
  %mul40 = fmul double %48, %49, !dbg !1772
  %add41 = fadd double %mul37, %mul40, !dbg !1773
  %50 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1774
  %graphic_context42 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %50, i32 0, i32 12, !dbg !1774
  %51 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context42, align 8, !dbg !1774
  %52 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1774
  %index43 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %52, i32 0, i32 11, !dbg !1774
  %53 = load i64, i64* %index43, align 8, !dbg !1774
  %arrayidx44 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %51, i64 %53, !dbg !1774
  %54 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx44, align 8, !dbg !1774
  %affine45 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %54, i32 0, i32 3, !dbg !1775
  %ry46 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine45, i32 0, i32 2, !dbg !1776
  store double %add41, double* %ry46, align 8, !dbg !1777
  %55 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1778
  %rx47 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %55, i32 0, i32 1, !dbg !1779
  %56 = load double, double* %rx47, align 8, !dbg !1779
  %ry48 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 2, !dbg !1780
  %57 = load double, double* %ry48, align 8, !dbg !1780
  %mul49 = fmul double %56, %57, !dbg !1781
  %58 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1782
  %sy50 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %58, i32 0, i32 3, !dbg !1783
  %59 = load double, double* %sy50, align 8, !dbg !1783
  %sy51 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 3, !dbg !1784
  %60 = load double, double* %sy51, align 8, !dbg !1784
  %mul52 = fmul double %59, %60, !dbg !1785
  %add53 = fadd double %mul49, %mul52, !dbg !1786
  %61 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1787
  %graphic_context54 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %61, i32 0, i32 12, !dbg !1787
  %62 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context54, align 8, !dbg !1787
  %63 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1787
  %index55 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %63, i32 0, i32 11, !dbg !1787
  %64 = load i64, i64* %index55, align 8, !dbg !1787
  %arrayidx56 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %62, i64 %64, !dbg !1787
  %65 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx56, align 8, !dbg !1787
  %affine57 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %65, i32 0, i32 3, !dbg !1788
  %sy58 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine57, i32 0, i32 3, !dbg !1789
  store double %add53, double* %sy58, align 8, !dbg !1790
  %66 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1791
  %sx59 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %66, i32 0, i32 0, !dbg !1792
  %67 = load double, double* %sx59, align 8, !dbg !1792
  %tx60 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 4, !dbg !1793
  %68 = load double, double* %tx60, align 8, !dbg !1793
  %mul61 = fmul double %67, %68, !dbg !1794
  %69 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1795
  %ry62 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %69, i32 0, i32 2, !dbg !1796
  %70 = load double, double* %ry62, align 8, !dbg !1796
  %ty63 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 5, !dbg !1797
  %71 = load double, double* %ty63, align 8, !dbg !1797
  %mul64 = fmul double %70, %71, !dbg !1798
  %add65 = fadd double %mul61, %mul64, !dbg !1799
  %72 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1800
  %tx66 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %72, i32 0, i32 4, !dbg !1801
  %73 = load double, double* %tx66, align 8, !dbg !1801
  %add67 = fadd double %add65, %73, !dbg !1802
  %74 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1803
  %graphic_context68 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %74, i32 0, i32 12, !dbg !1803
  %75 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context68, align 8, !dbg !1803
  %76 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1803
  %index69 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %76, i32 0, i32 11, !dbg !1803
  %77 = load i64, i64* %index69, align 8, !dbg !1803
  %arrayidx70 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %75, i64 %77, !dbg !1803
  %78 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx70, align 8, !dbg !1803
  %affine71 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %78, i32 0, i32 3, !dbg !1804
  %tx72 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine71, i32 0, i32 4, !dbg !1805
  store double %add67, double* %tx72, align 8, !dbg !1806
  %79 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1807
  %rx73 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %79, i32 0, i32 1, !dbg !1808
  %80 = load double, double* %rx73, align 8, !dbg !1808
  %tx74 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 4, !dbg !1809
  %81 = load double, double* %tx74, align 8, !dbg !1809
  %mul75 = fmul double %80, %81, !dbg !1810
  %82 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1811
  %sy76 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %82, i32 0, i32 3, !dbg !1812
  %83 = load double, double* %sy76, align 8, !dbg !1812
  %ty77 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 5, !dbg !1813
  %84 = load double, double* %ty77, align 8, !dbg !1813
  %mul78 = fmul double %83, %84, !dbg !1814
  %add79 = fadd double %mul75, %mul78, !dbg !1815
  %85 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !1816
  %ty80 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %85, i32 0, i32 5, !dbg !1817
  %86 = load double, double* %ty80, align 8, !dbg !1817
  %add81 = fadd double %add79, %86, !dbg !1818
  %87 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1819
  %graphic_context82 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %87, i32 0, i32 12, !dbg !1819
  %88 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context82, align 8, !dbg !1819
  %89 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1819
  %index83 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %89, i32 0, i32 11, !dbg !1819
  %90 = load i64, i64* %index83, align 8, !dbg !1819
  %arrayidx84 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %88, i64 %90, !dbg !1819
  %91 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx84, align 8, !dbg !1819
  %affine85 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %91, i32 0, i32 3, !dbg !1820
  %ty86 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine85, i32 0, i32 5, !dbg !1821
  store double %add81, double* %ty86, align 8, !dbg !1822
  br label %if.end87, !dbg !1823

if.end87:                                         ; preds = %if.then11, %lor.lhs.false9
  ret void, !dbg !1824
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @MvgPrintf(%struct._DrawingWand* %wand, i8* %format, ...) #0 !dbg !1825 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %format.addr = alloca i8*, align 8
  %extent = alloca i64, align 8
  %count = alloca i32, align 4
  %offset = alloca i64, align 8
  %argp = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !1828, metadata !DIExpression()), !dbg !1829
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !1830, metadata !DIExpression()), !dbg !1831
  call void @llvm.dbg.declare(metadata i64* %extent, metadata !1832, metadata !DIExpression()), !dbg !1833
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1834
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !1836
  %1 = load i32, i32* %debug, align 4, !dbg !1836
  %cmp = icmp ne i32 %1, 0, !dbg !1837
  br i1 %cmp, label %if.then, label %if.end, !dbg !1838

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %format.addr, align 8, !dbg !1839
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 285, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %2), !dbg !1840
  br label %if.end, !dbg !1841

if.end:                                           ; preds = %if.then, %entry
  store i64 81920, i64* %extent, align 8, !dbg !1842
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1843
  %mvg = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 4, !dbg !1845
  %4 = load i8*, i8** %mvg, align 8, !dbg !1845
  %cmp1 = icmp eq i8* %4, null, !dbg !1846
  br i1 %cmp1, label %if.then2, label %if.end10, !dbg !1847

if.then2:                                         ; preds = %if.end
  %5 = load i64, i64* %extent, align 8, !dbg !1848
  %call3 = call i8* @AcquireQuantumMemory(i64 %5, i64 1) #16, !dbg !1850
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1851
  %mvg4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 4, !dbg !1852
  store i8* %call3, i8** %mvg4, align 8, !dbg !1853
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1854
  %mvg5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 4, !dbg !1856
  %8 = load i8*, i8** %mvg5, align 8, !dbg !1856
  %cmp6 = icmp eq i8* %8, null, !dbg !1857
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !1858

if.then7:                                         ; preds = %if.then2
  %9 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1859
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %9, i32 0, i32 3, !dbg !1859
  %10 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1859
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1859
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 1, !dbg !1859
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !1859
  %call8 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 295, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !1859
  store i32 -1, i32* %retval, align 4, !dbg !1861
  br label %return, !dbg !1861

if.end9:                                          ; preds = %if.then2
  %12 = load i64, i64* %extent, align 8, !dbg !1862
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1863
  %mvg_alloc = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 5, !dbg !1864
  store i64 %12, i64* %mvg_alloc, align 8, !dbg !1865
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1866
  %mvg_length = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 6, !dbg !1867
  store i64 0, i64* %mvg_length, align 8, !dbg !1868
  br label %if.end10, !dbg !1869

if.end10:                                         ; preds = %if.end9, %if.end
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1870
  %mvg_alloc11 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 5, !dbg !1872
  %16 = load i64, i64* %mvg_alloc11, align 8, !dbg !1872
  %17 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1873
  %mvg_length12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %17, i32 0, i32 6, !dbg !1874
  %18 = load i64, i64* %mvg_length12, align 8, !dbg !1874
  %add = add i64 %18, 40960, !dbg !1875
  %cmp13 = icmp ult i64 %16, %add, !dbg !1876
  br i1 %cmp13, label %if.then14, label %if.end29, !dbg !1877

if.then14:                                        ; preds = %if.end10
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1878
  %mvg_alloc15 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %19, i32 0, i32 5, !dbg !1880
  %20 = load i64, i64* %mvg_alloc15, align 8, !dbg !1880
  %21 = load i64, i64* %extent, align 8, !dbg !1881
  %add16 = add i64 %21, %20, !dbg !1881
  store i64 %add16, i64* %extent, align 8, !dbg !1881
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1882
  %mvg17 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %22, i32 0, i32 4, !dbg !1883
  %23 = load i8*, i8** %mvg17, align 8, !dbg !1883
  %24 = load i64, i64* %extent, align 8, !dbg !1884
  %call18 = call i8* @ResizeQuantumMemory(i8* %23, i64 %24, i64 1) #17, !dbg !1885
  %25 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1886
  %mvg19 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %25, i32 0, i32 4, !dbg !1887
  store i8* %call18, i8** %mvg19, align 8, !dbg !1888
  %26 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1889
  %mvg20 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %26, i32 0, i32 4, !dbg !1891
  %27 = load i8*, i8** %mvg20, align 8, !dbg !1891
  %cmp21 = icmp eq i8* %27, null, !dbg !1892
  br i1 %cmp21, label %if.then22, label %if.end27, !dbg !1893

if.then22:                                        ; preds = %if.then14
  %28 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1894
  %exception23 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %28, i32 0, i32 3, !dbg !1894
  %29 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception23, align 8, !dbg !1894
  %30 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1894
  %name24 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %30, i32 0, i32 1, !dbg !1894
  %arraydecay25 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name24, i64 0, i64 0, !dbg !1894
  %call26 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %29, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 309, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay25), !dbg !1894
  store i32 -1, i32* %retval, align 4, !dbg !1896
  br label %return, !dbg !1896

if.end27:                                         ; preds = %if.then14
  %31 = load i64, i64* %extent, align 8, !dbg !1897
  %32 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1898
  %mvg_alloc28 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %32, i32 0, i32 5, !dbg !1899
  store i64 %31, i64* %mvg_alloc28, align 8, !dbg !1900
  br label %if.end29, !dbg !1901

if.end29:                                         ; preds = %if.end27, %if.end10
  call void @llvm.dbg.declare(metadata i32* %count, metadata !1902, metadata !DIExpression()), !dbg !1904
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !1905, metadata !DIExpression()), !dbg !1906
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %argp, metadata !1907, metadata !DIExpression()), !dbg !1919
  br label %while.cond, !dbg !1920

while.cond:                                       ; preds = %while.body, %if.end29
  %33 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1921
  %mvg_width = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %33, i32 0, i32 7, !dbg !1922
  %34 = load i64, i64* %mvg_width, align 8, !dbg !1922
  %35 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1923
  %indent_depth = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %35, i32 0, i32 14, !dbg !1924
  %36 = load i64, i64* %indent_depth, align 8, !dbg !1924
  %cmp30 = icmp ult i64 %34, %36, !dbg !1925
  br i1 %cmp30, label %while.body, label %while.end, !dbg !1920

while.body:                                       ; preds = %while.cond
  %37 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1926
  %mvg31 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %37, i32 0, i32 4, !dbg !1928
  %38 = load i8*, i8** %mvg31, align 8, !dbg !1928
  %39 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1929
  %mvg_length32 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %39, i32 0, i32 6, !dbg !1930
  %40 = load i64, i64* %mvg_length32, align 8, !dbg !1930
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %40, !dbg !1926
  store i8 32, i8* %arrayidx, align 1, !dbg !1931
  %41 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1932
  %mvg_length33 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %41, i32 0, i32 6, !dbg !1933
  %42 = load i64, i64* %mvg_length33, align 8, !dbg !1934
  %inc = add i64 %42, 1, !dbg !1934
  store i64 %inc, i64* %mvg_length33, align 8, !dbg !1934
  %43 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1935
  %mvg_width34 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %43, i32 0, i32 7, !dbg !1936
  %44 = load i64, i64* %mvg_width34, align 8, !dbg !1937
  %inc35 = add i64 %44, 1, !dbg !1937
  store i64 %inc35, i64* %mvg_width34, align 8, !dbg !1937
  br label %while.cond, !dbg !1920, !llvm.loop !1938

while.end:                                        ; preds = %while.cond
  %45 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1940
  %mvg36 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %45, i32 0, i32 4, !dbg !1941
  %46 = load i8*, i8** %mvg36, align 8, !dbg !1941
  %47 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1942
  %mvg_length37 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %47, i32 0, i32 6, !dbg !1943
  %48 = load i64, i64* %mvg_length37, align 8, !dbg !1943
  %arrayidx38 = getelementptr inbounds i8, i8* %46, i64 %48, !dbg !1940
  store i8 0, i8* %arrayidx38, align 1, !dbg !1944
  store i32 -1, i32* %count, align 4, !dbg !1945
  %49 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1946
  %mvg_alloc39 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %49, i32 0, i32 5, !dbg !1947
  %50 = load i64, i64* %mvg_alloc39, align 8, !dbg !1947
  %51 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1948
  %mvg_length40 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %51, i32 0, i32 6, !dbg !1949
  %52 = load i64, i64* %mvg_length40, align 8, !dbg !1949
  %sub = sub i64 %50, %52, !dbg !1950
  %sub41 = sub i64 %sub, 1, !dbg !1951
  store i64 %sub41, i64* %offset, align 8, !dbg !1952
  %53 = load i64, i64* %offset, align 8, !dbg !1953
  %cmp42 = icmp sgt i64 %53, 0, !dbg !1955
  br i1 %cmp42, label %if.then43, label %if.end52, !dbg !1956

if.then43:                                        ; preds = %while.end
  %arraydecay44 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0, !dbg !1957
  %arraydecay4445 = bitcast %struct.__va_list_tag* %arraydecay44 to i8*, !dbg !1957
  call void @llvm.va_start(i8* %arraydecay4445), !dbg !1957
  %54 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1959
  %mvg46 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %54, i32 0, i32 4, !dbg !1960
  %55 = load i8*, i8** %mvg46, align 8, !dbg !1960
  %56 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1961
  %mvg_length47 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %56, i32 0, i32 6, !dbg !1962
  %57 = load i64, i64* %mvg_length47, align 8, !dbg !1962
  %add.ptr = getelementptr inbounds i8, i8* %55, i64 %57, !dbg !1963
  %58 = load i64, i64* %offset, align 8, !dbg !1964
  %59 = load i8*, i8** %format.addr, align 8, !dbg !1965
  %arraydecay48 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0, !dbg !1966
  %call49 = call i32 @vsnprintf(i8* %add.ptr, i64 %58, i8* %59, %struct.__va_list_tag* %arraydecay48) #10, !dbg !1967
  store i32 %call49, i32* %count, align 4, !dbg !1968
  %arraydecay50 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0, !dbg !1969
  %arraydecay5051 = bitcast %struct.__va_list_tag* %arraydecay50 to i8*, !dbg !1969
  call void @llvm.va_end(i8* %arraydecay5051), !dbg !1969
  br label %if.end52, !dbg !1970

if.end52:                                         ; preds = %if.then43, %while.end
  %60 = load i32, i32* %count, align 4, !dbg !1971
  %cmp53 = icmp slt i32 %60, 0, !dbg !1973
  br i1 %cmp53, label %if.then56, label %lor.lhs.false, !dbg !1974

lor.lhs.false:                                    ; preds = %if.end52
  %61 = load i32, i32* %count, align 4, !dbg !1975
  %62 = load i64, i64* %offset, align 8, !dbg !1976
  %conv = trunc i64 %62 to i32, !dbg !1977
  %cmp54 = icmp sgt i32 %61, %conv, !dbg !1978
  br i1 %cmp54, label %if.then56, label %if.else, !dbg !1979

if.then56:                                        ; preds = %lor.lhs.false, %if.end52
  %63 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1980
  %exception57 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %63, i32 0, i32 3, !dbg !1980
  %64 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception57, align 8, !dbg !1980
  %65 = load i8*, i8** %format.addr, align 8, !dbg !1980
  %call58 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %64, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 344, i32 460, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %65), !dbg !1980
  br label %if.end65, !dbg !1980

if.else:                                          ; preds = %lor.lhs.false
  %66 = load i32, i32* %count, align 4, !dbg !1981
  %conv59 = sext i32 %66 to i64, !dbg !1981
  %67 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1983
  %mvg_length60 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %67, i32 0, i32 6, !dbg !1984
  %68 = load i64, i64* %mvg_length60, align 8, !dbg !1985
  %add61 = add i64 %68, %conv59, !dbg !1985
  store i64 %add61, i64* %mvg_length60, align 8, !dbg !1985
  %69 = load i32, i32* %count, align 4, !dbg !1986
  %conv62 = sext i32 %69 to i64, !dbg !1986
  %70 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1987
  %mvg_width63 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %70, i32 0, i32 7, !dbg !1988
  %71 = load i64, i64* %mvg_width63, align 8, !dbg !1989
  %add64 = add i64 %71, %conv62, !dbg !1989
  store i64 %add64, i64* %mvg_width63, align 8, !dbg !1989
  br label %if.end65

if.end65:                                         ; preds = %if.else, %if.then56
  %72 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1990
  %mvg66 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %72, i32 0, i32 4, !dbg !1991
  %73 = load i8*, i8** %mvg66, align 8, !dbg !1991
  %74 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1992
  %mvg_length67 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %74, i32 0, i32 6, !dbg !1993
  %75 = load i64, i64* %mvg_length67, align 8, !dbg !1993
  %arrayidx68 = getelementptr inbounds i8, i8* %73, i64 %75, !dbg !1990
  store i8 0, i8* %arrayidx68, align 1, !dbg !1994
  %76 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !1995
  %mvg_length69 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %76, i32 0, i32 6, !dbg !1997
  %77 = load i64, i64* %mvg_length69, align 8, !dbg !1997
  %cmp70 = icmp ugt i64 %77, 1, !dbg !1998
  br i1 %cmp70, label %land.lhs.true, label %if.end81, !dbg !1999

land.lhs.true:                                    ; preds = %if.end65
  %78 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2000
  %mvg72 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %78, i32 0, i32 4, !dbg !2001
  %79 = load i8*, i8** %mvg72, align 8, !dbg !2001
  %80 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2002
  %mvg_length73 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %80, i32 0, i32 6, !dbg !2003
  %81 = load i64, i64* %mvg_length73, align 8, !dbg !2003
  %sub74 = sub i64 %81, 1, !dbg !2004
  %arrayidx75 = getelementptr inbounds i8, i8* %79, i64 %sub74, !dbg !2000
  %82 = load i8, i8* %arrayidx75, align 1, !dbg !2000
  %conv76 = sext i8 %82 to i32, !dbg !2000
  %cmp77 = icmp eq i32 %conv76, 10, !dbg !2005
  br i1 %cmp77, label %if.then79, label %if.end81, !dbg !2006

if.then79:                                        ; preds = %land.lhs.true
  %83 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2007
  %mvg_width80 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %83, i32 0, i32 7, !dbg !2008
  store i64 0, i64* %mvg_width80, align 8, !dbg !2009
  br label %if.end81, !dbg !2007

if.end81:                                         ; preds = %if.then79, %land.lhs.true, %if.end65
  %84 = load i32, i32* %count, align 4, !dbg !2010
  store i32 %84, i32* %retval, align 4, !dbg !2011
  br label %return, !dbg !2011

return:                                           ; preds = %if.end81, %if.then22, %if.then7
  %85 = load i32, i32* %retval, align 4, !dbg !2012
  ret i32 %85, !dbg !2012
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._DrawingWand* @DrawAllocateWand(%struct._DrawInfo* %draw_info, %struct._Image* %image) #0 !dbg !2013 {
entry:
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %wand = alloca %struct._DrawingWand*, align 8
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !2016, metadata !DIExpression()), !dbg !2017
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2018, metadata !DIExpression()), !dbg !2019
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand, metadata !2020, metadata !DIExpression()), !dbg !2021
  %call = call %struct._DrawingWand* @NewDrawingWand(), !dbg !2022
  store %struct._DrawingWand* %call, %struct._DrawingWand** %wand, align 8, !dbg !2023
  %0 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2024
  %cmp = icmp ne %struct._DrawInfo* %0, null, !dbg !2026
  br i1 %cmp, label %if.then, label %if.end, !dbg !2027

if.then:                                          ; preds = %entry
  %1 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2028
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %1, i32 0, i32 12, !dbg !2028
  %2 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !2028
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2028
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 11, !dbg !2028
  %4 = load i64, i64* %index, align 8, !dbg !2028
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %2, i64 %4, !dbg !2028
  %5 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !2028
  %call1 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %5), !dbg !2030
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2031
  %graphic_context2 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 12, !dbg !2031
  %7 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context2, align 8, !dbg !2031
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2031
  %index3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 11, !dbg !2031
  %9 = load i64, i64* %index3, align 8, !dbg !2031
  %arrayidx4 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %7, i64 %9, !dbg !2031
  store %struct._DrawInfo* %call1, %struct._DrawInfo** %arrayidx4, align 8, !dbg !2032
  %10 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2033
  %call5 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %10), !dbg !2034
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2035
  %graphic_context6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 12, !dbg !2035
  %12 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context6, align 8, !dbg !2035
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2035
  %index7 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 11, !dbg !2035
  %14 = load i64, i64* %index7, align 8, !dbg !2035
  %arrayidx8 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %12, i64 %14, !dbg !2035
  store %struct._DrawInfo* %call5, %struct._DrawInfo** %arrayidx8, align 8, !dbg !2036
  br label %if.end, !dbg !2037

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2038
  %cmp9 = icmp ne %struct._Image* %15, null, !dbg !2040
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !2041

if.then10:                                        ; preds = %if.end
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2042
  %image11 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 2, !dbg !2044
  %17 = load %struct._Image*, %struct._Image** %image11, align 8, !dbg !2044
  %call12 = call %struct._Image* @DestroyImage(%struct._Image* %17), !dbg !2045
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2046
  %image13 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %18, i32 0, i32 2, !dbg !2047
  store %struct._Image* %call12, %struct._Image** %image13, align 8, !dbg !2048
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2049
  %destroy = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %19, i32 0, i32 17, !dbg !2050
  store i32 0, i32* %destroy, align 8, !dbg !2051
  br label %if.end14, !dbg !2052

if.end14:                                         ; preds = %if.then10, %if.end
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2053
  %21 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2054
  %image15 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %21, i32 0, i32 2, !dbg !2055
  store %struct._Image* %20, %struct._Image** %image15, align 8, !dbg !2056
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2057
  ret %struct._DrawingWand* %22, !dbg !2058
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._DrawingWand* @NewDrawingWand() #0 !dbg !2059 {
entry:
  %quantum = alloca i8*, align 8
  %wand = alloca %struct._DrawingWand*, align 8
  %depth = alloca i64, align 8
  %exception = alloca %struct._ExceptionInfo, align 8
  %exception6 = alloca %struct._ExceptionInfo, align 8
  %exception31 = alloca %struct._ExceptionInfo, align 8
  call void @llvm.dbg.declare(metadata i8** %quantum, metadata !2062, metadata !DIExpression()), !dbg !2063
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand, metadata !2064, metadata !DIExpression()), !dbg !2065
  call void @llvm.dbg.declare(metadata i64* %depth, metadata !2066, metadata !DIExpression()), !dbg !2067
  %call = call i8* @GetMagickQuantumDepth(i64* %depth), !dbg !2068
  store i8* %call, i8** %quantum, align 8, !dbg !2069
  %0 = load i64, i64* %depth, align 8, !dbg !2070
  %cmp = icmp ne i64 %0, 16, !dbg !2072
  br i1 %cmp, label %if.then, label %if.end, !dbg !2073

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception, metadata !2074, metadata !DIExpression()), !dbg !2076
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !2076
  %1 = load i8*, i8** %quantum, align 8, !dbg !2076
  %call1 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6731, i32 470, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %1), !dbg !2076
  call void @CatchException(%struct._ExceptionInfo* %exception), !dbg !2076
  %call2 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !2076
  call void @MagickWandTerminus(), !dbg !2076
  call void @_exit(i32 -229) #14, !dbg !2076
  unreachable, !dbg !2076

if.end:                                           ; preds = %entry
  %call3 = call i8* @AcquireMagickMemory(i64 4256) #12, !dbg !2077
  %2 = bitcast i8* %call3 to %struct._DrawingWand*, !dbg !2078
  store %struct._DrawingWand* %2, %struct._DrawingWand** %wand, align 8, !dbg !2079
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2080
  %cmp4 = icmp eq %struct._DrawingWand* %3, null, !dbg !2082
  br i1 %cmp4, label %if.then5, label %if.end11, !dbg !2083

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception6, metadata !2084, metadata !DIExpression()), !dbg !2086
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception6), !dbg !2086
  %call7 = call i32* @__errno_location() #13, !dbg !2086
  %4 = load i32, i32* %call7, align 4, !dbg !2086
  %call8 = call i8* @GetExceptionMessage(i32 %4), !dbg !2086
  %call9 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6735, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %call8), !dbg !2086
  call void @CatchException(%struct._ExceptionInfo* %exception6), !dbg !2086
  %call10 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception6), !dbg !2086
  call void @MagickWandTerminus(), !dbg !2086
  call void @_exit(i32 1) #14, !dbg !2086
  unreachable, !dbg !2086

if.end11:                                         ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2087
  %6 = bitcast %struct._DrawingWand* %5 to i8*, !dbg !2087
  %call12 = call i8* @ResetMagickMemory(i8* %6, i32 0, i64 4256), !dbg !2088
  %call13 = call i64 @AcquireWandId(), !dbg !2089
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2090
  %id = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 0, !dbg !2091
  store i64 %call13, i64* %id, align 8, !dbg !2092
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2093
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 1, !dbg !2094
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2093
  %9 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2095
  %id14 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %9, i32 0, i32 0, !dbg !2096
  %10 = load i64, i64* %id14, align 8, !dbg !2096
  %conv = uitofp i64 %10 to double, !dbg !2097
  %call15 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.120, i64 0, i64 0), double %conv), !dbg !2098
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2099
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 18, !dbg !2101
  %12 = load i32, i32* %debug, align 4, !dbg !2101
  %cmp16 = icmp ne i32 %12, 0, !dbg !2102
  br i1 %cmp16, label %if.then18, label %if.end22, !dbg !2103

if.then18:                                        ; preds = %if.end11
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2104
  %name19 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 1, !dbg !2105
  %arraydecay20 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name19, i64 0, i64 0, !dbg !2104
  %call21 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6741, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay20), !dbg !2106
  br label %if.end22, !dbg !2107

if.end22:                                         ; preds = %if.then18, %if.end11
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2108
  %mvg = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 4, !dbg !2109
  store i8* null, i8** %mvg, align 8, !dbg !2110
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2111
  %mvg_alloc = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 5, !dbg !2112
  store i64 0, i64* %mvg_alloc, align 8, !dbg !2113
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2114
  %mvg_length = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 6, !dbg !2115
  store i64 0, i64* %mvg_length, align 8, !dbg !2116
  %17 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2117
  %mvg_width = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %17, i32 0, i32 7, !dbg !2118
  store i64 0, i64* %mvg_width, align 8, !dbg !2119
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2120
  %pattern_id = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %18, i32 0, i32 8, !dbg !2121
  store i8* null, i8** %pattern_id, align 8, !dbg !2122
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2123
  %pattern_offset = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %19, i32 0, i32 10, !dbg !2124
  store i64 0, i64* %pattern_offset, align 8, !dbg !2125
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2126
  %pattern_bounds = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %20, i32 0, i32 9, !dbg !2127
  %x = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds, i32 0, i32 2, !dbg !2128
  store i64 0, i64* %x, align 8, !dbg !2129
  %21 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2130
  %pattern_bounds23 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %21, i32 0, i32 9, !dbg !2131
  %y = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds23, i32 0, i32 3, !dbg !2132
  store i64 0, i64* %y, align 8, !dbg !2133
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2134
  %pattern_bounds24 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %22, i32 0, i32 9, !dbg !2135
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds24, i32 0, i32 0, !dbg !2136
  store i64 0, i64* %width, align 8, !dbg !2137
  %23 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2138
  %pattern_bounds25 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %23, i32 0, i32 9, !dbg !2139
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds25, i32 0, i32 1, !dbg !2140
  store i64 0, i64* %height, align 8, !dbg !2141
  %24 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2142
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %24, i32 0, i32 11, !dbg !2143
  store i64 0, i64* %index, align 8, !dbg !2144
  %call26 = call i8* @AcquireMagickMemory(i64 8) #12, !dbg !2145
  %25 = bitcast i8* %call26 to %struct._DrawInfo**, !dbg !2146
  %26 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2147
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %26, i32 0, i32 12, !dbg !2148
  store %struct._DrawInfo** %25, %struct._DrawInfo*** %graphic_context, align 8, !dbg !2149
  %27 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2150
  %graphic_context27 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %27, i32 0, i32 12, !dbg !2152
  %28 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context27, align 8, !dbg !2152
  %cmp28 = icmp eq %struct._DrawInfo** %28, null, !dbg !2153
  br i1 %cmp28, label %if.then30, label %if.end36, !dbg !2154

if.then30:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception31, metadata !2155, metadata !DIExpression()), !dbg !2157
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception31), !dbg !2157
  %call32 = call i32* @__errno_location() #13, !dbg !2157
  %29 = load i32, i32* %call32, align 4, !dbg !2157
  %call33 = call i8* @GetExceptionMessage(i32 %29), !dbg !2157
  %call34 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception31, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6757, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %call33), !dbg !2157
  call void @CatchException(%struct._ExceptionInfo* %exception31), !dbg !2157
  %call35 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception31), !dbg !2157
  call void @MagickWandTerminus(), !dbg !2157
  call void @_exit(i32 1) #14, !dbg !2157
  unreachable, !dbg !2157

if.end36:                                         ; preds = %if.end22
  %30 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2158
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %30, i32 0, i32 13, !dbg !2159
  store i32 1, i32* %filter_off, align 8, !dbg !2160
  %31 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2161
  %indent_depth = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %31, i32 0, i32 14, !dbg !2162
  store i64 0, i64* %indent_depth, align 8, !dbg !2163
  %32 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2164
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %32, i32 0, i32 15, !dbg !2165
  store i32 0, i32* %path_operation, align 8, !dbg !2166
  %33 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2167
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %33, i32 0, i32 16, !dbg !2168
  store i32 0, i32* %path_mode, align 4, !dbg !2169
  %call37 = call %struct._Image* @AcquireImage(%struct._ImageInfo* null), !dbg !2170
  %34 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2171
  %image = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %34, i32 0, i32 2, !dbg !2172
  store %struct._Image* %call37, %struct._Image** %image, align 8, !dbg !2173
  %call38 = call %struct._ExceptionInfo* @AcquireExceptionInfo(), !dbg !2174
  %35 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2175
  %exception39 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %35, i32 0, i32 3, !dbg !2176
  store %struct._ExceptionInfo* %call38, %struct._ExceptionInfo** %exception39, align 8, !dbg !2177
  %36 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2178
  %destroy = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %36, i32 0, i32 17, !dbg !2179
  store i32 1, i32* %destroy, align 8, !dbg !2180
  %call40 = call i32 @IsEventLogging(), !dbg !2181
  %37 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2182
  %debug41 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %37, i32 0, i32 18, !dbg !2183
  store i32 %call40, i32* %debug41, align 4, !dbg !2184
  %38 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2185
  %signature = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %38, i32 0, i32 19, !dbg !2186
  store i64 2880220587, i64* %signature, align 8, !dbg !2187
  %call42 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* null), !dbg !2188
  %39 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2189
  %graphic_context43 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %39, i32 0, i32 12, !dbg !2189
  %40 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context43, align 8, !dbg !2189
  %41 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2189
  %index44 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %41, i32 0, i32 11, !dbg !2189
  %42 = load i64, i64* %index44, align 8, !dbg !2189
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %40, i64 %42, !dbg !2189
  store %struct._DrawInfo* %call42, %struct._DrawInfo** %arrayidx, align 8, !dbg !2190
  %43 = load %struct._DrawingWand*, %struct._DrawingWand** %wand, align 8, !dbg !2191
  ret %struct._DrawingWand* %43, !dbg !2192
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawAnnotation(%struct._DrawingWand* %wand, double %x, double %y, i8* %text) #0 !dbg !2193 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  %text.addr = alloca i8*, align 8
  %escaped_text = alloca i8*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2198, metadata !DIExpression()), !dbg !2199
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !2200, metadata !DIExpression()), !dbg !2201
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !2202, metadata !DIExpression()), !dbg !2203
  store i8* %text, i8** %text.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %text.addr, metadata !2204, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.declare(metadata i8** %escaped_text, metadata !2206, metadata !DIExpression()), !dbg !2207
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2208
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2210
  %1 = load i32, i32* %debug, align 4, !dbg !2210
  %cmp = icmp ne i32 %1, 0, !dbg !2211
  br i1 %cmp, label %if.then, label %if.end, !dbg !2212

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2213
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2214
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2213
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 772, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2215
  br label %if.end, !dbg !2216

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %text.addr, align 8, !dbg !2217
  %call1 = call i8* @EscapeString(i8* %3, i8 signext 39), !dbg !2218
  store i8* %call1, i8** %escaped_text, align 8, !dbg !2219
  %4 = load i8*, i8** %escaped_text, align 8, !dbg !2220
  %cmp2 = icmp ne i8* %4, null, !dbg !2222
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !2223

if.then3:                                         ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2224
  %6 = load double, double* %x.addr, align 8, !dbg !2226
  %7 = load double, double* %y.addr, align 8, !dbg !2227
  %8 = load i8*, i8** %escaped_text, align 8, !dbg !2228
  %call4 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), double %6, double %7, i8* %8), !dbg !2229
  %9 = load i8*, i8** %escaped_text, align 8, !dbg !2230
  %call5 = call i8* @DestroyString(i8* %9), !dbg !2231
  store i8* %call5, i8** %escaped_text, align 8, !dbg !2232
  br label %if.end6, !dbg !2233

if.end6:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !2234
}

declare dso_local i8* @EscapeString(i8*, i8 signext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawArc(%struct._DrawingWand* %wand, double %sx, double %sy, double %ex, double %ey, double %sd, double %ed) #0 !dbg !2235 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %sx.addr = alloca double, align 8
  %sy.addr = alloca double, align 8
  %ex.addr = alloca double, align 8
  %ey.addr = alloca double, align 8
  %sd.addr = alloca double, align 8
  %ed.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2238, metadata !DIExpression()), !dbg !2239
  store double %sx, double* %sx.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sx.addr, metadata !2240, metadata !DIExpression()), !dbg !2241
  store double %sy, double* %sy.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sy.addr, metadata !2242, metadata !DIExpression()), !dbg !2243
  store double %ex, double* %ex.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ex.addr, metadata !2244, metadata !DIExpression()), !dbg !2245
  store double %ey, double* %ey.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ey.addr, metadata !2246, metadata !DIExpression()), !dbg !2247
  store double %sd, double* %sd.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sd.addr, metadata !2248, metadata !DIExpression()), !dbg !2249
  store double %ed, double* %ed.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ed.addr, metadata !2250, metadata !DIExpression()), !dbg !2251
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2252
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2254
  %1 = load i32, i32* %debug, align 4, !dbg !2254
  %cmp = icmp ne i32 %1, 0, !dbg !2255
  br i1 %cmp, label %if.then, label %if.end, !dbg !2256

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2257
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2258
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2257
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 824, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2259
  br label %if.end, !dbg !2260

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2261
  %4 = load double, double* %sx.addr, align 8, !dbg !2262
  %5 = load double, double* %sy.addr, align 8, !dbg !2263
  %6 = load double, double* %ex.addr, align 8, !dbg !2264
  %7 = load double, double* %ey.addr, align 8, !dbg !2265
  %8 = load double, double* %sd.addr, align 8, !dbg !2266
  %9 = load double, double* %ed.addr, align 8, !dbg !2267
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0), double %4, double %5, double %6, double %7, double %8, double %9), !dbg !2268
  ret void, !dbg !2269
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawBezier(%struct._DrawingWand* %wand, i64 %number_coordinates, %struct._PointInfo* %coordinates) #0 !dbg !2270 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %number_coordinates.addr = alloca i64, align 8
  %coordinates.addr = alloca %struct._PointInfo*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2275, metadata !DIExpression()), !dbg !2276
  store i64 %number_coordinates, i64* %number_coordinates.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_coordinates.addr, metadata !2277, metadata !DIExpression()), !dbg !2278
  store %struct._PointInfo* %coordinates, %struct._PointInfo** %coordinates.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %coordinates.addr, metadata !2279, metadata !DIExpression()), !dbg !2280
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2281
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2283
  %1 = load i32, i32* %debug, align 4, !dbg !2283
  %cmp = icmp ne i32 %1, 0, !dbg !2284
  br i1 %cmp, label %if.then, label %if.end, !dbg !2285

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2286
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2287
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2286
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 862, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2288
  br label %if.end, !dbg !2289

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2290
  %4 = load i64, i64* %number_coordinates.addr, align 8, !dbg !2291
  %5 = load %struct._PointInfo*, %struct._PointInfo** %coordinates.addr, align 8, !dbg !2292
  call void @MvgAppendPointsCommand(%struct._DrawingWand* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i64 %4, %struct._PointInfo* %5), !dbg !2293
  ret void, !dbg !2294
}

; Function Attrs: noinline nounwind uwtable
define internal void @MvgAppendPointsCommand(%struct._DrawingWand* %wand, i8* %command, i64 %number_coordinates, %struct._PointInfo* %coordinates) #0 !dbg !2295 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %command.addr = alloca i8*, align 8
  %number_coordinates.addr = alloca i64, align 8
  %coordinates.addr = alloca %struct._PointInfo*, align 8
  %coordinate = alloca %struct._PointInfo*, align 8
  %i = alloca i64, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2298, metadata !DIExpression()), !dbg !2299
  store i8* %command, i8** %command.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command.addr, metadata !2300, metadata !DIExpression()), !dbg !2301
  store i64 %number_coordinates, i64* %number_coordinates.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_coordinates.addr, metadata !2302, metadata !DIExpression()), !dbg !2303
  store %struct._PointInfo* %coordinates, %struct._PointInfo** %coordinates.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %coordinates.addr, metadata !2304, metadata !DIExpression()), !dbg !2305
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %coordinate, metadata !2306, metadata !DIExpression()), !dbg !2307
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2308, metadata !DIExpression()), !dbg !2309
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2310
  %1 = load i8*, i8** %command.addr, align 8, !dbg !2311
  %call = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %1), !dbg !2312
  %2 = load i64, i64* %number_coordinates.addr, align 8, !dbg !2313
  store i64 %2, i64* %i, align 8, !dbg !2315
  %3 = load %struct._PointInfo*, %struct._PointInfo** %coordinates.addr, align 8, !dbg !2316
  store %struct._PointInfo* %3, %struct._PointInfo** %coordinate, align 8, !dbg !2317
  br label %for.cond, !dbg !2318

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i64, i64* %i, align 8, !dbg !2319
  %cmp = icmp ne i64 %4, 0, !dbg !2321
  br i1 %cmp, label %for.body, label %for.end, !dbg !2322

for.body:                                         ; preds = %for.cond
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2323
  %6 = load %struct._PointInfo*, %struct._PointInfo** %coordinate, align 8, !dbg !2325
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %6, i32 0, i32 0, !dbg !2326
  %7 = load double, double* %x, align 8, !dbg !2326
  %8 = load %struct._PointInfo*, %struct._PointInfo** %coordinate, align 8, !dbg !2327
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %8, i32 0, i32 1, !dbg !2328
  %9 = load double, double* %y, align 8, !dbg !2328
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.127, i64 0, i64 0), double %7, double %9), !dbg !2329
  %10 = load %struct._PointInfo*, %struct._PointInfo** %coordinate, align 8, !dbg !2330
  %incdec.ptr = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %10, i32 1, !dbg !2330
  store %struct._PointInfo* %incdec.ptr, %struct._PointInfo** %coordinate, align 8, !dbg !2330
  br label %for.inc, !dbg !2331

for.inc:                                          ; preds = %for.body
  %11 = load i64, i64* %i, align 8, !dbg !2332
  %dec = add i64 %11, -1, !dbg !2332
  store i64 %dec, i64* %i, align 8, !dbg !2332
  br label %for.cond, !dbg !2333, !llvm.loop !2334

for.end:                                          ; preds = %for.cond
  %12 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2336
  %call2 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !2337
  ret void, !dbg !2338
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawCircle(%struct._DrawingWand* %wand, double %ox, double %oy, double %px, double %py) #0 !dbg !2339 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %ox.addr = alloca double, align 8
  %oy.addr = alloca double, align 8
  %px.addr = alloca double, align 8
  %py.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2342, metadata !DIExpression()), !dbg !2343
  store double %ox, double* %ox.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ox.addr, metadata !2344, metadata !DIExpression()), !dbg !2345
  store double %oy, double* %oy.addr, align 8
  call void @llvm.dbg.declare(metadata double* %oy.addr, metadata !2346, metadata !DIExpression()), !dbg !2347
  store double %px, double* %px.addr, align 8
  call void @llvm.dbg.declare(metadata double* %px.addr, metadata !2348, metadata !DIExpression()), !dbg !2349
  store double %py, double* %py.addr, align 8
  call void @llvm.dbg.declare(metadata double* %py.addr, metadata !2350, metadata !DIExpression()), !dbg !2351
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2352
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2354
  %1 = load i32, i32* %debug, align 4, !dbg !2354
  %cmp = icmp ne i32 %1, 0, !dbg !2355
  br i1 %cmp, label %if.then, label %if.end, !dbg !2356

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2357
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2358
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2357
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 904, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2359
  br label %if.end, !dbg !2360

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2361
  %4 = load double, double* %ox.addr, align 8, !dbg !2362
  %5 = load double, double* %oy.addr, align 8, !dbg !2363
  %6 = load double, double* %px.addr, align 8, !dbg !2364
  %7 = load double, double* %py.addr, align 8, !dbg !2365
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0), double %4, double %5, double %6, double %7), !dbg !2366
  ret void, !dbg !2367
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawClearException(%struct._DrawingWand* %wand) #0 !dbg !2368 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2371, metadata !DIExpression()), !dbg !2372
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2373
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2375
  %1 = load i32, i32* %debug, align 4, !dbg !2375
  %cmp = icmp ne i32 %1, 0, !dbg !2376
  br i1 %cmp, label %if.then, label %if.end, !dbg !2377

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2378
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2379
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2378
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 935, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2380
  br label %if.end, !dbg !2381

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2382
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 3, !dbg !2383
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2383
  call void @ClearMagickException(%struct._ExceptionInfo* %4), !dbg !2384
  ret i32 1, !dbg !2385
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawComposite(%struct._DrawingWand* %wand, i32 %compose, double %x, double %y, double %width, double %height, %struct._MagickWand* %magick_wand) #0 !dbg !2386 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %compose.addr = alloca i32, align 4
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  %width.addr = alloca double, align 8
  %height.addr = alloca double, align 8
  %magick_wand.addr = alloca %struct._MagickWand*, align 8
  %base64 = alloca i8*, align 8
  %media_type = alloca i8*, align 8
  %mode = alloca i8*, align 8
  %image_info = alloca %struct._ImageInfo*, align 8
  %clone_image = alloca %struct._Image*, align 8
  %image = alloca %struct._Image*, align 8
  %p = alloca i8*, align 8
  %i = alloca i64, align 8
  %blob_length = alloca i64, align 8
  %encoded_length = alloca i64, align 8
  %blob = alloca i8*, align 8
  %buffer = alloca [4096 x i8], align 16
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2418, metadata !DIExpression()), !dbg !2419
  store i32 %compose, i32* %compose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %compose.addr, metadata !2420, metadata !DIExpression()), !dbg !2421
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !2422, metadata !DIExpression()), !dbg !2423
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !2424, metadata !DIExpression()), !dbg !2425
  store double %width, double* %width.addr, align 8
  call void @llvm.dbg.declare(metadata double* %width.addr, metadata !2426, metadata !DIExpression()), !dbg !2427
  store double %height, double* %height.addr, align 8
  call void @llvm.dbg.declare(metadata double* %height.addr, metadata !2428, metadata !DIExpression()), !dbg !2429
  store %struct._MagickWand* %magick_wand, %struct._MagickWand** %magick_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickWand** %magick_wand.addr, metadata !2430, metadata !DIExpression()), !dbg !2431
  call void @llvm.dbg.declare(metadata i8** %base64, metadata !2432, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.declare(metadata i8** %media_type, metadata !2434, metadata !DIExpression()), !dbg !2435
  call void @llvm.dbg.declare(metadata i8** %mode, metadata !2436, metadata !DIExpression()), !dbg !2437
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %image_info, metadata !2438, metadata !DIExpression()), !dbg !2439
  call void @llvm.dbg.declare(metadata %struct._Image** %clone_image, metadata !2440, metadata !DIExpression()), !dbg !2441
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !2442, metadata !DIExpression()), !dbg !2443
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2444, metadata !DIExpression()), !dbg !2445
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2446, metadata !DIExpression()), !dbg !2447
  call void @llvm.dbg.declare(metadata i64* %blob_length, metadata !2448, metadata !DIExpression()), !dbg !2449
  call void @llvm.dbg.declare(metadata i64* %encoded_length, metadata !2450, metadata !DIExpression()), !dbg !2451
  call void @llvm.dbg.declare(metadata i8** %blob, metadata !2452, metadata !DIExpression()), !dbg !2453
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2454
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2456
  %1 = load i32, i32* %debug, align 4, !dbg !2456
  %cmp = icmp ne i32 %1, 0, !dbg !2457
  br i1 %cmp, label %if.then, label %if.end, !dbg !2458

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2459
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2460
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2459
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1016, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2461
  br label %if.end, !dbg !2462

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._MagickWand*, %struct._MagickWand** %magick_wand.addr, align 8, !dbg !2463
  %call1 = call %struct._Image* @GetImageFromMagickWand(%struct._MagickWand* %3), !dbg !2464
  store %struct._Image* %call1, %struct._Image** %image, align 8, !dbg !2465
  %4 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !2466
  %cmp2 = icmp eq %struct._Image* %4, null, !dbg !2468
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2469

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2470
  br label %return, !dbg !2470

if.end4:                                          ; preds = %if.end
  %5 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !2471
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2472
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 3, !dbg !2473
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2473
  %call5 = call %struct._Image* @CloneImage(%struct._Image* %5, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %7), !dbg !2474
  store %struct._Image* %call5, %struct._Image** %clone_image, align 8, !dbg !2475
  %8 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !2476
  %cmp6 = icmp eq %struct._Image* %8, null, !dbg !2478
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2479

if.then7:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !2480
  br label %return, !dbg !2480

if.end8:                                          ; preds = %if.end4
  %call9 = call %struct._ImageInfo* @AcquireImageInfo(), !dbg !2481
  store %struct._ImageInfo* %call9, %struct._ImageInfo** %image_info, align 8, !dbg !2482
  %9 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !2483
  %magick = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %9, i32 0, i32 48, !dbg !2484
  %arraydecay10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %magick, i64 0, i64 0, !dbg !2483
  %call11 = call i64 @CopyMagickString(i8* %arraydecay10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i64 4096), !dbg !2485
  store i64 2048, i64* %blob_length, align 8, !dbg !2486
  %10 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !2487
  %11 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !2488
  %12 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2489
  %exception12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %12, i32 0, i32 3, !dbg !2490
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception12, align 8, !dbg !2490
  %call13 = call i8* @ImageToBlob(%struct._ImageInfo* %10, %struct._Image* %11, i64* %blob_length, %struct._ExceptionInfo* %13), !dbg !2491
  store i8* %call13, i8** %blob, align 8, !dbg !2492
  %14 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !2493
  %call14 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %14), !dbg !2494
  store %struct._ImageInfo* %call14, %struct._ImageInfo** %image_info, align 8, !dbg !2495
  %15 = load %struct._Image*, %struct._Image** %clone_image, align 8, !dbg !2496
  %call15 = call %struct._Image* @DestroyImageList(%struct._Image* %15), !dbg !2497
  store %struct._Image* %call15, %struct._Image** %clone_image, align 8, !dbg !2498
  %16 = load i8*, i8** %blob, align 8, !dbg !2499
  %cmp16 = icmp eq i8* %16, null, !dbg !2501
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !2502

if.then17:                                        ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !2503
  br label %return, !dbg !2503

if.end18:                                         ; preds = %if.end8
  store i64 0, i64* %encoded_length, align 8, !dbg !2504
  %17 = load i8*, i8** %blob, align 8, !dbg !2505
  %18 = load i64, i64* %blob_length, align 8, !dbg !2506
  %call19 = call i8* @Base64Encode(i8* %17, i64 %18, i64* %encoded_length), !dbg !2507
  store i8* %call19, i8** %base64, align 8, !dbg !2508
  %19 = load i8*, i8** %blob, align 8, !dbg !2509
  %call20 = call i8* @RelinquishMagickMemory(i8* %19), !dbg !2510
  store i8* %call20, i8** %blob, align 8, !dbg !2511
  %20 = load i8*, i8** %base64, align 8, !dbg !2512
  %cmp21 = icmp eq i8* %20, null, !dbg !2514
  br i1 %cmp21, label %if.then22, label %if.end29, !dbg !2515

if.then22:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata [4096 x i8]* %buffer, metadata !2516, metadata !DIExpression()), !dbg !2518
  %arraydecay23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i64 0, i64 0, !dbg !2519
  %21 = load i64, i64* %blob_length, align 8, !dbg !2520
  %mul = mul i64 4, %21, !dbg !2521
  %div = udiv i64 %mul, 3, !dbg !2522
  %add = add i64 %div, 4, !dbg !2523
  %conv = uitofp i64 %add to double, !dbg !2524
  %call24 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay23, i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), double %conv), !dbg !2525
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2526
  %exception25 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %22, i32 0, i32 3, !dbg !2526
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception25, align 8, !dbg !2526
  %24 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2526
  %name26 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %24, i32 0, i32 1, !dbg !2526
  %arraydecay27 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name26, i64 0, i64 0, !dbg !2526
  %call28 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %23, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1044, i32 300, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay27), !dbg !2526
  store i32 0, i32* %retval, align 4, !dbg !2527
  br label %return, !dbg !2527

if.end29:                                         ; preds = %if.end18
  %25 = load i32, i32* %compose.addr, align 4, !dbg !2528
  %conv30 = zext i32 %25 to i64, !dbg !2529
  %call31 = call i8* @CommandOptionToMnemonic(i32 11, i64 %conv30), !dbg !2530
  store i8* %call31, i8** %mode, align 8, !dbg !2531
  %26 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !2532
  %magick32 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 55, !dbg !2533
  %arraydecay33 = getelementptr inbounds [4096 x i8], [4096 x i8]* %magick32, i64 0, i64 0, !dbg !2532
  %call34 = call i8* @MagickToMime(i8* %arraydecay33), !dbg !2534
  store i8* %call34, i8** %media_type, align 8, !dbg !2535
  %27 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2536
  %28 = load i8*, i8** %mode, align 8, !dbg !2537
  %29 = load double, double* %x.addr, align 8, !dbg !2538
  %30 = load double, double* %y.addr, align 8, !dbg !2539
  %31 = load double, double* %width.addr, align 8, !dbg !2540
  %32 = load double, double* %height.addr, align 8, !dbg !2541
  %33 = load i8*, i8** %media_type, align 8, !dbg !2542
  %call35 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %27, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* %28, double %29, double %30, double %31, double %32, i8* %33), !dbg !2543
  %34 = load i8*, i8** %base64, align 8, !dbg !2544
  store i8* %34, i8** %p, align 8, !dbg !2545
  %35 = load i64, i64* %encoded_length, align 8, !dbg !2546
  store i64 %35, i64* %i, align 8, !dbg !2548
  br label %for.cond, !dbg !2549

for.cond:                                         ; preds = %for.inc, %if.end29
  %36 = load i64, i64* %i, align 8, !dbg !2550
  %cmp36 = icmp sgt i64 %36, 0, !dbg !2552
  br i1 %cmp36, label %for.body, label %for.end, !dbg !2553

for.body:                                         ; preds = %for.cond
  %37 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2554
  %38 = load i8*, i8** %p, align 8, !dbg !2556
  %call38 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i8* %38), !dbg !2557
  %39 = load i8*, i8** %p, align 8, !dbg !2558
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 76, !dbg !2558
  store i8* %add.ptr, i8** %p, align 8, !dbg !2558
  %40 = load i64, i64* %i, align 8, !dbg !2559
  %cmp39 = icmp sgt i64 %40, 76, !dbg !2561
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !2562

if.then41:                                        ; preds = %for.body
  %41 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2563
  %call42 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !2564
  br label %if.end43, !dbg !2565

if.end43:                                         ; preds = %if.then41, %for.body
  br label %for.inc, !dbg !2566

for.inc:                                          ; preds = %if.end43
  %42 = load i64, i64* %i, align 8, !dbg !2567
  %sub = sub nsw i64 %42, 76, !dbg !2567
  store i64 %sub, i64* %i, align 8, !dbg !2567
  br label %for.cond, !dbg !2568, !llvm.loop !2569

for.end:                                          ; preds = %for.cond
  %43 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2571
  %call44 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)), !dbg !2572
  %44 = load i8*, i8** %media_type, align 8, !dbg !2573
  %call45 = call i8* @DestroyString(i8* %44), !dbg !2574
  store i8* %call45, i8** %media_type, align 8, !dbg !2575
  %45 = load i8*, i8** %base64, align 8, !dbg !2576
  %call46 = call i8* @DestroyString(i8* %45), !dbg !2577
  store i8* %call46, i8** %base64, align 8, !dbg !2578
  store i32 1, i32* %retval, align 4, !dbg !2579
  br label %return, !dbg !2579

return:                                           ; preds = %for.end, %if.then22, %if.then17, %if.then7, %if.then3
  %46 = load i32, i32* %retval, align 4, !dbg !2580
  ret i32 %46, !dbg !2580
}

declare dso_local %struct._Image* @GetImageFromMagickWand(%struct._MagickWand*) #2

declare dso_local %struct._ImageInfo* @AcquireImageInfo() #2

declare dso_local i64 @CopyMagickString(i8*, i8*, i64) #2

declare dso_local i8* @ImageToBlob(%struct._ImageInfo*, %struct._Image*, i64*, %struct._ExceptionInfo*) #2

declare dso_local %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo*) #2

declare dso_local %struct._Image* @DestroyImageList(%struct._Image*) #2

declare dso_local i8* @Base64Encode(i8*, i64, i64*) #2

declare dso_local i8* @CommandOptionToMnemonic(i32, i64) #2

declare dso_local i8* @MagickToMime(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawColor(%struct._DrawingWand* %wand, double %x, double %y, i32 %paint_method) #0 !dbg !2581 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  %paint_method.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2586, metadata !DIExpression()), !dbg !2587
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !2588, metadata !DIExpression()), !dbg !2589
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !2590, metadata !DIExpression()), !dbg !2591
  store i32 %paint_method, i32* %paint_method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %paint_method.addr, metadata !2592, metadata !DIExpression()), !dbg !2593
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2594
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2596
  %1 = load i32, i32* %debug, align 4, !dbg !2596
  %cmp = icmp ne i32 %1, 0, !dbg !2597
  br i1 %cmp, label %if.then, label %if.end, !dbg !2598

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2599
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2600
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2599
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1107, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2601
  br label %if.end, !dbg !2602

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2603
  %4 = load double, double* %x.addr, align 8, !dbg !2604
  %5 = load double, double* %y.addr, align 8, !dbg !2605
  %6 = load i32, i32* %paint_method.addr, align 4, !dbg !2606
  %conv = zext i32 %6 to i64, !dbg !2607
  %call1 = call i8* @CommandOptionToMnemonic(i32 43, i64 %conv), !dbg !2608
  %call2 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), double %4, double %5, i8* %call1), !dbg !2609
  ret void, !dbg !2610
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawComment(%struct._DrawingWand* %wand, i8* %comment) #0 !dbg !2611 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %comment.addr = alloca i8*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2614, metadata !DIExpression()), !dbg !2615
  store i8* %comment, i8** %comment.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %comment.addr, metadata !2616, metadata !DIExpression()), !dbg !2617
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2618
  %1 = load i8*, i8** %comment.addr, align 8, !dbg !2619
  %call = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), i8* %1), !dbg !2620
  ret void, !dbg !2621
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawEllipse(%struct._DrawingWand* %wand, double %ox, double %oy, double %rx, double %ry, double %start, double %end) #0 !dbg !2622 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %ox.addr = alloca double, align 8
  %oy.addr = alloca double, align 8
  %rx.addr = alloca double, align 8
  %ry.addr = alloca double, align 8
  %start.addr = alloca double, align 8
  %end.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2623, metadata !DIExpression()), !dbg !2624
  store double %ox, double* %ox.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ox.addr, metadata !2625, metadata !DIExpression()), !dbg !2626
  store double %oy, double* %oy.addr, align 8
  call void @llvm.dbg.declare(metadata double* %oy.addr, metadata !2627, metadata !DIExpression()), !dbg !2628
  store double %rx, double* %rx.addr, align 8
  call void @llvm.dbg.declare(metadata double* %rx.addr, metadata !2629, metadata !DIExpression()), !dbg !2630
  store double %ry, double* %ry.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ry.addr, metadata !2631, metadata !DIExpression()), !dbg !2632
  store double %start, double* %start.addr, align 8
  call void @llvm.dbg.declare(metadata double* %start.addr, metadata !2633, metadata !DIExpression()), !dbg !2634
  store double %end, double* %end.addr, align 8
  call void @llvm.dbg.declare(metadata double* %end.addr, metadata !2635, metadata !DIExpression()), !dbg !2636
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2637
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2639
  %1 = load i32, i32* %debug, align 4, !dbg !2639
  %cmp = icmp ne i32 %1, 0, !dbg !2640
  br i1 %cmp, label %if.then, label %if.end, !dbg !2641

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2642
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2643
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2642
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1182, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2644
  br label %if.end, !dbg !2645

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2646
  %4 = load double, double* %ox.addr, align 8, !dbg !2647
  %5 = load double, double* %oy.addr, align 8, !dbg !2648
  %6 = load double, double* %rx.addr, align 8, !dbg !2649
  %7 = load double, double* %ry.addr, align 8, !dbg !2650
  %8 = load double, double* %start.addr, align 8, !dbg !2651
  %9 = load double, double* %end.addr, align 8, !dbg !2652
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.19, i64 0, i64 0), double %4, double %5, double %6, double %7, double %8, double %9), !dbg !2653
  ret void, !dbg !2654
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawGetBorderColor(%struct._DrawingWand* %wand, %struct._PixelWand* %border_color) #0 !dbg !2655 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %border_color.addr = alloca %struct._PixelWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2662, metadata !DIExpression()), !dbg !2663
  store %struct._PixelWand* %border_color, %struct._PixelWand** %border_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %border_color.addr, metadata !2664, metadata !DIExpression()), !dbg !2665
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2666
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2668
  %1 = load i32, i32* %debug, align 4, !dbg !2668
  %cmp = icmp ne i32 %1, 0, !dbg !2669
  br i1 %cmp, label %if.then, label %if.end, !dbg !2670

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2671
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2672
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2671
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1220, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2673
  br label %if.end, !dbg !2674

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._PixelWand*, %struct._PixelWand** %border_color.addr, align 8, !dbg !2675
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2676
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 12, !dbg !2676
  %5 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !2676
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2676
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 11, !dbg !2676
  %7 = load i64, i64* %index, align 8, !dbg !2676
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %5, i64 %7, !dbg !2676
  %8 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !2676
  %border_color1 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %8, i32 0, i32 34, !dbg !2677
  call void @PixelSetQuantumColor(%struct._PixelWand* %3, %struct._PixelPacket* %border_color1), !dbg !2678
  ret void, !dbg !2679
}

declare dso_local void @PixelSetQuantumColor(%struct._PixelWand*, %struct._PixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DrawGetClipPath(%struct._DrawingWand* %wand) #0 !dbg !2680 {
entry:
  %retval = alloca i8*, align 8
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2683, metadata !DIExpression()), !dbg !2684
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2685
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2687
  %1 = load i32, i32* %debug, align 4, !dbg !2687
  %cmp = icmp ne i32 %1, 0, !dbg !2688
  br i1 %cmp, label %if.then, label %if.end, !dbg !2689

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2690
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2691
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2690
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1252, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2692
  br label %if.end, !dbg !2693

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2694
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !2694
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !2694
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2694
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !2694
  %6 = load i64, i64* %index, align 8, !dbg !2694
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !2694
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !2694
  %clip_mask = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 37, !dbg !2696
  %8 = load i8*, i8** %clip_mask, align 8, !dbg !2696
  %cmp1 = icmp ne i8* %8, null, !dbg !2697
  br i1 %cmp1, label %if.then2, label %if.end8, !dbg !2698

if.then2:                                         ; preds = %if.end
  %9 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2699
  %graphic_context3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %9, i32 0, i32 12, !dbg !2699
  %10 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context3, align 8, !dbg !2699
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2699
  %index4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 11, !dbg !2699
  %12 = load i64, i64* %index4, align 8, !dbg !2699
  %arrayidx5 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %10, i64 %12, !dbg !2699
  %13 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx5, align 8, !dbg !2699
  %clip_mask6 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %13, i32 0, i32 37, !dbg !2700
  %14 = load i8*, i8** %clip_mask6, align 8, !dbg !2700
  %call7 = call i8* @AcquireString(i8* %14), !dbg !2701
  store i8* %call7, i8** %retval, align 8, !dbg !2702
  br label %return, !dbg !2702

if.end8:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !2703
  br label %return, !dbg !2703

return:                                           ; preds = %if.end8, %if.then2
  %15 = load i8*, i8** %retval, align 8, !dbg !2704
  ret i8* %15, !dbg !2704
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetClipRule(%struct._DrawingWand* %wand) #0 !dbg !2705 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2708, metadata !DIExpression()), !dbg !2709
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2710
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2712
  %1 = load i32, i32* %debug, align 4, !dbg !2712
  %cmp = icmp ne i32 %1, 0, !dbg !2713
  br i1 %cmp, label %if.then, label %if.end, !dbg !2714

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2715
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2716
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2715
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1286, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2717
  br label %if.end, !dbg !2718

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2719
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !2719
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !2719
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2719
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !2719
  %6 = load i64, i64* %index, align 8, !dbg !2719
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !2719
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !2719
  %fill_rule = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 14, !dbg !2720
  %8 = load i32, i32* %fill_rule, align 8, !dbg !2720
  ret i32 %8, !dbg !2721
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetClipUnits(%struct._DrawingWand* %wand) #0 !dbg !2722 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2725, metadata !DIExpression()), !dbg !2726
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2727
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2729
  %1 = load i32, i32* %debug, align 4, !dbg !2729
  %cmp = icmp ne i32 %1, 0, !dbg !2730
  br i1 %cmp, label %if.then, label %if.end, !dbg !2731

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2732
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2733
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2732
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1317, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2734
  br label %if.end, !dbg !2735

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2736
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !2736
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !2736
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2736
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !2736
  %6 = load i64, i64* %index, align 8, !dbg !2736
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !2736
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !2736
  %clip_units = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 39, !dbg !2737
  %8 = load i32, i32* %clip_units, align 8, !dbg !2737
  ret i32 %8, !dbg !2738
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DrawGetException(%struct._DrawingWand* %wand, i32* %severity) #0 !dbg !2739 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %severity.addr = alloca i32*, align 8
  %description = alloca i8*, align 8
  %exception5 = alloca %struct._ExceptionInfo, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2743, metadata !DIExpression()), !dbg !2744
  store i32* %severity, i32** %severity.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %severity.addr, metadata !2745, metadata !DIExpression()), !dbg !2746
  call void @llvm.dbg.declare(metadata i8** %description, metadata !2747, metadata !DIExpression()), !dbg !2748
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2749
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2751
  %1 = load i32, i32* %debug, align 4, !dbg !2751
  %cmp = icmp ne i32 %1, 0, !dbg !2752
  br i1 %cmp, label %if.then, label %if.end, !dbg !2753

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2754
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2755
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2754
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1356, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2756
  br label %if.end, !dbg !2757

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2758
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 3, !dbg !2759
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2759
  %severity1 = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %4, i32 0, i32 0, !dbg !2760
  %5 = load i32, i32* %severity1, align 8, !dbg !2760
  %6 = load i32*, i32** %severity.addr, align 8, !dbg !2761
  store i32 %5, i32* %6, align 4, !dbg !2762
  %call2 = call i8* @AcquireQuantumMemory(i64 8192, i64 1) #16, !dbg !2763
  store i8* %call2, i8** %description, align 8, !dbg !2764
  %7 = load i8*, i8** %description, align 8, !dbg !2765
  %cmp3 = icmp eq i8* %7, null, !dbg !2767
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !2768

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception5, metadata !2769, metadata !DIExpression()), !dbg !2771
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception5), !dbg !2771
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2771
  %name6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 1, !dbg !2771
  %arraydecay7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name6, i64 0, i64 0, !dbg !2771
  %call8 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1363, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay7), !dbg !2771
  call void @CatchException(%struct._ExceptionInfo* %exception5), !dbg !2771
  %call9 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception5), !dbg !2771
  call void @MagickWandTerminus(), !dbg !2771
  call void @_exit(i32 1) #14, !dbg !2771
  unreachable, !dbg !2771

if.end10:                                         ; preds = %if.end
  %9 = load i8*, i8** %description, align 8, !dbg !2772
  store i8 0, i8* %9, align 1, !dbg !2773
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2774
  %exception11 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 3, !dbg !2776
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception11, align 8, !dbg !2776
  %reason = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %11, i32 0, i32 2, !dbg !2777
  %12 = load i8*, i8** %reason, align 8, !dbg !2777
  %cmp12 = icmp ne i8* %12, null, !dbg !2778
  br i1 %cmp12, label %if.then13, label %if.end20, !dbg !2779

if.then13:                                        ; preds = %if.end10
  %13 = load i8*, i8** %description, align 8, !dbg !2780
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2781
  %exception14 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 3, !dbg !2782
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception14, align 8, !dbg !2782
  %severity15 = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %15, i32 0, i32 0, !dbg !2783
  %16 = load i32, i32* %severity15, align 8, !dbg !2783
  %17 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2784
  %exception16 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %17, i32 0, i32 3, !dbg !2785
  %18 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception16, align 8, !dbg !2785
  %reason17 = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %18, i32 0, i32 2, !dbg !2786
  %19 = load i8*, i8** %reason17, align 8, !dbg !2786
  %call18 = call i8* @GetLocaleExceptionMessage(i32 %16, i8* %19), !dbg !2787
  %call19 = call i64 @CopyMagickString(i8* %13, i8* %call18, i64 4096), !dbg !2788
  br label %if.end20, !dbg !2789

if.end20:                                         ; preds = %if.then13, %if.end10
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2790
  %exception21 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %20, i32 0, i32 3, !dbg !2792
  %21 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception21, align 8, !dbg !2792
  %description22 = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %21, i32 0, i32 3, !dbg !2793
  %22 = load i8*, i8** %description22, align 8, !dbg !2793
  %cmp23 = icmp ne i8* %22, null, !dbg !2794
  br i1 %cmp23, label %if.then24, label %if.end33, !dbg !2795

if.then24:                                        ; preds = %if.end20
  %23 = load i8*, i8** %description, align 8, !dbg !2796
  %call25 = call i64 @ConcatenateMagickString(i8* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i64 4096), !dbg !2798
  %24 = load i8*, i8** %description, align 8, !dbg !2799
  %25 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2800
  %exception26 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %25, i32 0, i32 3, !dbg !2801
  %26 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception26, align 8, !dbg !2801
  %severity27 = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %26, i32 0, i32 0, !dbg !2802
  %27 = load i32, i32* %severity27, align 8, !dbg !2802
  %28 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2803
  %exception28 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %28, i32 0, i32 3, !dbg !2804
  %29 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception28, align 8, !dbg !2804
  %description29 = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %29, i32 0, i32 3, !dbg !2805
  %30 = load i8*, i8** %description29, align 8, !dbg !2805
  %call30 = call i8* @GetLocaleExceptionMessage(i32 %27, i8* %30), !dbg !2806
  %call31 = call i64 @ConcatenateMagickString(i8* %24, i8* %call30, i64 4096), !dbg !2807
  %31 = load i8*, i8** %description, align 8, !dbg !2808
  %call32 = call i64 @ConcatenateMagickString(i8* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), i64 4096), !dbg !2809
  br label %if.end33, !dbg !2810

if.end33:                                         ; preds = %if.then24, %if.end20
  %32 = load i8*, i8** %description, align 8, !dbg !2811
  ret i8* %32, !dbg !2812
}

declare dso_local i8* @GetLocaleExceptionMessage(i32, i8*) #2

declare dso_local i64 @ConcatenateMagickString(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetExceptionType(%struct._DrawingWand* %wand) #0 !dbg !2813 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2816, metadata !DIExpression()), !dbg !2817
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2818
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2820
  %1 = load i32, i32* %debug, align 4, !dbg !2820
  %cmp = icmp ne i32 %1, 0, !dbg !2821
  br i1 %cmp, label %if.then, label %if.end, !dbg !2822

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2823
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2824
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2823
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1408, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2825
  br label %if.end, !dbg !2826

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2827
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 3, !dbg !2828
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2828
  %severity = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %4, i32 0, i32 0, !dbg !2829
  %5 = load i32, i32* %severity, align 8, !dbg !2829
  ret i32 %5, !dbg !2830
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawGetFillColor(%struct._DrawingWand* %wand, %struct._PixelWand* %fill_color) #0 !dbg !2831 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %fill_color.addr = alloca %struct._PixelWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2832, metadata !DIExpression()), !dbg !2833
  store %struct._PixelWand* %fill_color, %struct._PixelWand** %fill_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %fill_color.addr, metadata !2834, metadata !DIExpression()), !dbg !2835
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2836
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2838
  %1 = load i32, i32* %debug, align 4, !dbg !2838
  %cmp = icmp ne i32 %1, 0, !dbg !2839
  br i1 %cmp, label %if.then, label %if.end, !dbg !2840

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2841
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2842
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2841
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1443, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2843
  br label %if.end, !dbg !2844

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._PixelWand*, %struct._PixelWand** %fill_color.addr, align 8, !dbg !2845
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2846
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 12, !dbg !2846
  %5 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !2846
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2846
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 11, !dbg !2846
  %7 = load i64, i64* %index, align 8, !dbg !2846
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %5, i64 %7, !dbg !2846
  %8 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !2846
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %8, i32 0, i32 5, !dbg !2847
  call void @PixelSetQuantumColor(%struct._PixelWand* %3, %struct._PixelPacket* %fill), !dbg !2848
  ret void, !dbg !2849
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @DrawGetFillOpacity(%struct._DrawingWand* %wand) #0 !dbg !2850 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %alpha = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2853, metadata !DIExpression()), !dbg !2854
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !2855, metadata !DIExpression()), !dbg !2856
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2857
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2859
  %1 = load i32, i32* %debug, align 4, !dbg !2859
  %cmp = icmp ne i32 %1, 0, !dbg !2860
  br i1 %cmp, label %if.then, label %if.end, !dbg !2861

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2862
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2863
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2862
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1478, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2864
  br label %if.end, !dbg !2865

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2866
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !2866
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !2866
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2866
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !2866
  %6 = load i64, i64* %index, align 8, !dbg !2866
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !2866
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !2866
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 5, !dbg !2867
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill, i32 0, i32 3, !dbg !2868
  %8 = load i16, i16* %opacity, align 2, !dbg !2868
  %conv = zext i16 %8 to i32, !dbg !2866
  %sub = sub nsw i32 65535, %conv, !dbg !2869
  %conv1 = sitofp i32 %sub to double, !dbg !2870
  %mul = fmul double 0x3EF0001000100010, %conv1, !dbg !2871
  store double %mul, double* %alpha, align 8, !dbg !2872
  %9 = load double, double* %alpha, align 8, !dbg !2873
  ret double %9, !dbg !2874
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetFillRule(%struct._DrawingWand* %wand) #0 !dbg !2875 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2876, metadata !DIExpression()), !dbg !2877
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2878
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2880
  %1 = load i32, i32* %debug, align 4, !dbg !2880
  %cmp = icmp ne i32 %1, 0, !dbg !2881
  br i1 %cmp, label %if.then, label %if.end, !dbg !2882

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2883
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2884
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2883
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1510, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2885
  br label %if.end, !dbg !2886

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2887
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !2887
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !2887
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2887
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !2887
  %6 = load i64, i64* %index, align 8, !dbg !2887
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !2887
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !2887
  %fill_rule = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 14, !dbg !2888
  %8 = load i32, i32* %fill_rule, align 8, !dbg !2888
  ret i32 %8, !dbg !2889
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DrawGetFont(%struct._DrawingWand* %wand) #0 !dbg !2890 {
entry:
  %retval = alloca i8*, align 8
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2891, metadata !DIExpression()), !dbg !2892
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2893
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2895
  %1 = load i32, i32* %debug, align 4, !dbg !2895
  %cmp = icmp ne i32 %1, 0, !dbg !2896
  br i1 %cmp, label %if.then, label %if.end, !dbg !2897

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2898
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2899
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2898
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1543, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2900
  br label %if.end, !dbg !2901

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2902
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !2902
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !2902
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2902
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !2902
  %6 = load i64, i64* %index, align 8, !dbg !2902
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !2902
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !2902
  %font = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 23, !dbg !2904
  %8 = load i8*, i8** %font, align 8, !dbg !2904
  %cmp1 = icmp ne i8* %8, null, !dbg !2905
  br i1 %cmp1, label %if.then2, label %if.end8, !dbg !2906

if.then2:                                         ; preds = %if.end
  %9 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2907
  %graphic_context3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %9, i32 0, i32 12, !dbg !2907
  %10 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context3, align 8, !dbg !2907
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2907
  %index4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 11, !dbg !2907
  %12 = load i64, i64* %index4, align 8, !dbg !2907
  %arrayidx5 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %10, i64 %12, !dbg !2907
  %13 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx5, align 8, !dbg !2907
  %font6 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %13, i32 0, i32 23, !dbg !2908
  %14 = load i8*, i8** %font6, align 8, !dbg !2908
  %call7 = call i8* @AcquireString(i8* %14), !dbg !2909
  store i8* %call7, i8** %retval, align 8, !dbg !2910
  br label %return, !dbg !2910

if.end8:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !2911
  br label %return, !dbg !2911

return:                                           ; preds = %if.end8, %if.then2
  %15 = load i8*, i8** %retval, align 8, !dbg !2912
  ret i8* %15, !dbg !2912
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DrawGetFontFamily(%struct._DrawingWand* %wand) #0 !dbg !2913 {
entry:
  %retval = alloca i8*, align 8
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2914, metadata !DIExpression()), !dbg !2915
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2916
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2918
  %1 = load i32, i32* %debug, align 4, !dbg !2918
  %cmp = icmp ne i32 %1, 0, !dbg !2919
  br i1 %cmp, label %if.then, label %if.end, !dbg !2920

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2921
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2922
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2921
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1577, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2923
  br label %if.end, !dbg !2924

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2925
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !2925
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !2925
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2925
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !2925
  %6 = load i64, i64* %index, align 8, !dbg !2925
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !2925
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !2925
  %family = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 25, !dbg !2927
  %8 = load i8*, i8** %family, align 8, !dbg !2927
  %cmp1 = icmp ne i8* %8, null, !dbg !2928
  br i1 %cmp1, label %if.then2, label %if.end8, !dbg !2929

if.then2:                                         ; preds = %if.end
  %9 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2930
  %graphic_context3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %9, i32 0, i32 12, !dbg !2930
  %10 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context3, align 8, !dbg !2930
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2930
  %index4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 11, !dbg !2930
  %12 = load i64, i64* %index4, align 8, !dbg !2930
  %arrayidx5 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %10, i64 %12, !dbg !2930
  %13 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx5, align 8, !dbg !2930
  %family6 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %13, i32 0, i32 25, !dbg !2931
  %14 = load i8*, i8** %family6, align 8, !dbg !2931
  %call7 = call i8* @AcquireString(i8* %14), !dbg !2932
  store i8* %call7, i8** %retval, align 8, !dbg !2933
  br label %return, !dbg !2933

if.end8:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !2934
  br label %return, !dbg !2934

return:                                           ; preds = %if.end8, %if.then2
  %15 = load i8*, i8** %retval, align 8, !dbg !2935
  ret i8* %15, !dbg !2935
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetFontResolution(%struct._DrawingWand* %wand, double* %x, double* %y) #0 !dbg !2936 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double*, align 8
  %y.addr = alloca double*, align 8
  %geometry_info = alloca %struct._GeometryInfo, align 8
  %flags = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !2939, metadata !DIExpression()), !dbg !2940
  store double* %x, double** %x.addr, align 8
  call void @llvm.dbg.declare(metadata double** %x.addr, metadata !2941, metadata !DIExpression()), !dbg !2942
  store double* %y, double** %y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %y.addr, metadata !2943, metadata !DIExpression()), !dbg !2944
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2945
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !2947
  %1 = load i32, i32* %debug, align 4, !dbg !2947
  %cmp = icmp ne i32 %1, 0, !dbg !2948
  br i1 %cmp, label %if.then, label %if.end, !dbg !2949

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2950
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !2951
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !2950
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1616, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2952
  br label %if.end, !dbg !2953

if.end:                                           ; preds = %if.then, %entry
  %3 = load double*, double** %x.addr, align 8, !dbg !2954
  store double 7.200000e+01, double* %3, align 8, !dbg !2955
  %4 = load double*, double** %y.addr, align 8, !dbg !2956
  store double 7.200000e+01, double* %4, align 8, !dbg !2957
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2958
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !2958
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !2958
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2958
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !2958
  %8 = load i64, i64* %index, align 8, !dbg !2958
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !2958
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !2958
  %density = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 31, !dbg !2960
  %10 = load i8*, i8** %density, align 8, !dbg !2960
  %cmp1 = icmp ne i8* %10, null, !dbg !2961
  br i1 %cmp1, label %if.then2, label %if.end11, !dbg !2962

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %geometry_info, metadata !2963, metadata !DIExpression()), !dbg !2973
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !2974, metadata !DIExpression()), !dbg !2976
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2977
  %graphic_context3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 12, !dbg !2977
  %12 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context3, align 8, !dbg !2977
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !2977
  %index4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 11, !dbg !2977
  %14 = load i64, i64* %index4, align 8, !dbg !2977
  %arrayidx5 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %12, i64 %14, !dbg !2977
  %15 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx5, align 8, !dbg !2977
  %density6 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %15, i32 0, i32 31, !dbg !2978
  %16 = load i8*, i8** %density6, align 8, !dbg !2978
  %call7 = call i32 @ParseGeometry(i8* %16, %struct._GeometryInfo* %geometry_info), !dbg !2979
  store i32 %call7, i32* %flags, align 4, !dbg !2980
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !2981
  %17 = load double, double* %rho, align 8, !dbg !2981
  %18 = load double*, double** %x.addr, align 8, !dbg !2982
  store double %17, double* %18, align 8, !dbg !2983
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !2984
  %19 = load double, double* %sigma, align 8, !dbg !2984
  %20 = load double*, double** %y.addr, align 8, !dbg !2985
  store double %19, double* %20, align 8, !dbg !2986
  %21 = load i32, i32* %flags, align 4, !dbg !2987
  %and = and i32 %21, 8, !dbg !2989
  %cmp8 = icmp eq i32 %and, 0, !dbg !2990
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2991

if.then9:                                         ; preds = %if.then2
  %22 = load double*, double** %x.addr, align 8, !dbg !2992
  %23 = load double, double* %22, align 8, !dbg !2993
  %24 = load double*, double** %y.addr, align 8, !dbg !2994
  store double %23, double* %24, align 8, !dbg !2995
  br label %if.end10, !dbg !2996

if.end10:                                         ; preds = %if.then9, %if.then2
  br label %if.end11, !dbg !2997

if.end11:                                         ; preds = %if.end10, %if.end
  ret i32 1, !dbg !2998
}

declare dso_local i32 @ParseGeometry(i8*, %struct._GeometryInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local double @DrawGetFontSize(%struct._DrawingWand* %wand) #0 !dbg !2999 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3000, metadata !DIExpression()), !dbg !3001
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3002
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3004
  %1 = load i32, i32* %debug, align 4, !dbg !3004
  %cmp = icmp ne i32 %1, 0, !dbg !3005
  br i1 %cmp, label %if.then, label %if.end, !dbg !3006

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3007
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3008
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3007
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1663, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3009
  br label %if.end, !dbg !3010

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3011
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3011
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3011
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3011
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3011
  %6 = load i64, i64* %index, align 8, !dbg !3011
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3011
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3011
  %pointsize = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 30, !dbg !3012
  %8 = load double, double* %pointsize, align 8, !dbg !3012
  ret double %8, !dbg !3013
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetFontStretch(%struct._DrawingWand* %wand) #0 !dbg !3014 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3017, metadata !DIExpression()), !dbg !3018
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3019
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3021
  %1 = load i32, i32* %debug, align 4, !dbg !3021
  %cmp = icmp ne i32 %1, 0, !dbg !3022
  br i1 %cmp, label %if.then, label %if.end, !dbg !3023

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3024
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3025
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3024
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1694, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3026
  br label %if.end, !dbg !3027

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3028
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3028
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3028
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3028
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3028
  %6 = load i64, i64* %index, align 8, !dbg !3028
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3028
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3028
  %stretch = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 27, !dbg !3029
  %8 = load i32, i32* %stretch, align 4, !dbg !3029
  ret i32 %8, !dbg !3030
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetFontStyle(%struct._DrawingWand* %wand) #0 !dbg !3031 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3034, metadata !DIExpression()), !dbg !3035
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3036
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3038
  %1 = load i32, i32* %debug, align 4, !dbg !3038
  %cmp = icmp ne i32 %1, 0, !dbg !3039
  br i1 %cmp, label %if.then, label %if.end, !dbg !3040

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3041
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3042
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3041
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1725, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3043
  br label %if.end, !dbg !3044

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3045
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3045
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3045
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3045
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3045
  %6 = load i64, i64* %index, align 8, !dbg !3045
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3045
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3045
  %style = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 26, !dbg !3046
  %8 = load i32, i32* %style, align 8, !dbg !3046
  ret i32 %8, !dbg !3047
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @DrawGetFontWeight(%struct._DrawingWand* %wand) #0 !dbg !3048 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3051, metadata !DIExpression()), !dbg !3052
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3053
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3055
  %1 = load i32, i32* %debug, align 4, !dbg !3055
  %cmp = icmp ne i32 %1, 0, !dbg !3056
  br i1 %cmp, label %if.then, label %if.end, !dbg !3057

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3058
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3059
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3058
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1756, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3060
  br label %if.end, !dbg !3061

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3062
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3062
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3062
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3062
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3062
  %6 = load i64, i64* %index, align 8, !dbg !3062
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3062
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3062
  %weight = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 28, !dbg !3063
  %8 = load i64, i64* %weight, align 8, !dbg !3063
  ret i64 %8, !dbg !3064
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetGravity(%struct._DrawingWand* %wand) #0 !dbg !3065 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3068, metadata !DIExpression()), !dbg !3069
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3070
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3072
  %1 = load i32, i32* %debug, align 4, !dbg !3072
  %cmp = icmp ne i32 %1, 0, !dbg !3073
  br i1 %cmp, label %if.then, label %if.end, !dbg !3074

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3075
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3076
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3075
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1788, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3077
  br label %if.end, !dbg !3078

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3079
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3079
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3079
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3079
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3079
  %6 = load i64, i64* %index, align 8, !dbg !3079
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3079
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3079
  %gravity = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 4, !dbg !3080
  %8 = load i32, i32* %gravity, align 8, !dbg !3080
  ret i32 %8, !dbg !3081
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @DrawGetOpacity(%struct._DrawingWand* %wand) #0 !dbg !3082 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %alpha = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3083, metadata !DIExpression()), !dbg !3084
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !3085, metadata !DIExpression()), !dbg !3086
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3087
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3089
  %1 = load i32, i32* %debug, align 4, !dbg !3089
  %cmp = icmp ne i32 %1, 0, !dbg !3090
  br i1 %cmp, label %if.then, label %if.end, !dbg !3091

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3092
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3093
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3092
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1823, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3094
  br label %if.end, !dbg !3095

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3096
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3096
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3096
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3096
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3096
  %6 = load i64, i64* %index, align 8, !dbg !3096
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3096
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3096
  %opacity = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 40, !dbg !3097
  %8 = load i16, i16* %opacity, align 4, !dbg !3097
  %conv = zext i16 %8 to i32, !dbg !3096
  %sub = sub nsw i32 65535, %conv, !dbg !3098
  %conv1 = sitofp i32 %sub to double, !dbg !3099
  %mul = fmul double 0x3EF0001000100010, %conv1, !dbg !3100
  store double %mul, double* %alpha, align 8, !dbg !3101
  %9 = load double, double* %alpha, align 8, !dbg !3102
  ret double %9, !dbg !3103
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetStrokeAntialias(%struct._DrawingWand* %wand) #0 !dbg !3104 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3107, metadata !DIExpression()), !dbg !3108
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3109
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3111
  %1 = load i32, i32* %debug, align 4, !dbg !3111
  %cmp = icmp ne i32 %1, 0, !dbg !3112
  br i1 %cmp, label %if.then, label %if.end, !dbg !3113

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3114
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3115
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3114
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1858, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3116
  br label %if.end, !dbg !3117

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3118
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3118
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3118
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3118
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3118
  %6 = load i64, i64* %index, align 8, !dbg !3118
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3118
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3118
  %stroke_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 12, !dbg !3119
  %8 = load i32, i32* %stroke_antialias, align 8, !dbg !3119
  ret i32 %8, !dbg !3120
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawGetStrokeColor(%struct._DrawingWand* %wand, %struct._PixelWand* %stroke_color) #0 !dbg !3121 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %stroke_color.addr = alloca %struct._PixelWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3122, metadata !DIExpression()), !dbg !3123
  store %struct._PixelWand* %stroke_color, %struct._PixelWand** %stroke_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %stroke_color.addr, metadata !3124, metadata !DIExpression()), !dbg !3125
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3126
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3128
  %1 = load i32, i32* %debug, align 4, !dbg !3128
  %cmp = icmp ne i32 %1, 0, !dbg !3129
  br i1 %cmp, label %if.then, label %if.end, !dbg !3130

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3131
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3132
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3131
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1894, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3133
  br label %if.end, !dbg !3134

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._PixelWand*, %struct._PixelWand** %stroke_color.addr, align 8, !dbg !3135
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3136
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 12, !dbg !3136
  %5 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3136
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3136
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 11, !dbg !3136
  %7 = load i64, i64* %index, align 8, !dbg !3136
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %5, i64 %7, !dbg !3136
  %8 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3136
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %8, i32 0, i32 6, !dbg !3137
  call void @PixelSetQuantumColor(%struct._PixelWand* %3, %struct._PixelPacket* %stroke), !dbg !3138
  ret void, !dbg !3139
}

; Function Attrs: noinline nounwind uwtable
define dso_local double* @DrawGetStrokeDashArray(%struct._DrawingWand* %wand, i64* %number_elements) #0 !dbg !3140 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %number_elements.addr = alloca i64*, align 8
  %dasharray = alloca double*, align 8
  %p = alloca double*, align 8
  %q = alloca double*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3144, metadata !DIExpression()), !dbg !3145
  store i64* %number_elements, i64** %number_elements.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %number_elements.addr, metadata !3146, metadata !DIExpression()), !dbg !3147
  call void @llvm.dbg.declare(metadata double** %dasharray, metadata !3148, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.declare(metadata double** %p, metadata !3150, metadata !DIExpression()), !dbg !3151
  call void @llvm.dbg.declare(metadata double** %q, metadata !3152, metadata !DIExpression()), !dbg !3153
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3154, metadata !DIExpression()), !dbg !3155
  call void @llvm.dbg.declare(metadata i64* %n, metadata !3156, metadata !DIExpression()), !dbg !3157
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3158
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3160
  %1 = load i32, i32* %debug, align 4, !dbg !3160
  %cmp = icmp ne i32 %1, 0, !dbg !3161
  br i1 %cmp, label %if.then, label %if.end, !dbg !3162

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3163
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3164
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3163
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1946, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3165
  br label %if.end, !dbg !3166

if.end:                                           ; preds = %if.then, %entry
  store i64 0, i64* %n, align 8, !dbg !3167
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3168
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3168
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3168
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3168
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3168
  %6 = load i64, i64* %index, align 8, !dbg !3168
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3168
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3168
  %dash_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 36, !dbg !3169
  %8 = load double*, double** %dash_pattern, align 8, !dbg !3169
  store double* %8, double** %p, align 8, !dbg !3170
  %9 = load double*, double** %p, align 8, !dbg !3171
  %cmp1 = icmp ne double* %9, null, !dbg !3173
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !3174

if.then2:                                         ; preds = %if.end
  br label %while.cond, !dbg !3175

while.cond:                                       ; preds = %while.body, %if.then2
  %10 = load double*, double** %p, align 8, !dbg !3176
  %incdec.ptr = getelementptr inbounds double, double* %10, i32 1, !dbg !3176
  store double* %incdec.ptr, double** %p, align 8, !dbg !3176
  %11 = load double, double* %10, align 8, !dbg !3177
  %cmp3 = fcmp une double %11, 0.000000e+00, !dbg !3178
  br i1 %cmp3, label %while.body, label %while.end, !dbg !3175

while.body:                                       ; preds = %while.cond
  %12 = load i64, i64* %n, align 8, !dbg !3179
  %inc = add i64 %12, 1, !dbg !3179
  store i64 %inc, i64* %n, align 8, !dbg !3179
  br label %while.cond, !dbg !3175, !llvm.loop !3180

while.end:                                        ; preds = %while.cond
  br label %if.end4, !dbg !3175

if.end4:                                          ; preds = %while.end, %if.end
  %13 = load i64, i64* %n, align 8, !dbg !3181
  %14 = load i64*, i64** %number_elements.addr, align 8, !dbg !3182
  store i64 %13, i64* %14, align 8, !dbg !3183
  store double* null, double** %dasharray, align 8, !dbg !3184
  %15 = load i64, i64* %n, align 8, !dbg !3185
  %cmp5 = icmp ne i64 %15, 0, !dbg !3187
  br i1 %cmp5, label %if.then6, label %if.end16, !dbg !3188

if.then6:                                         ; preds = %if.end4
  %16 = load i64, i64* %n, align 8, !dbg !3189
  %add = add i64 %16, 1, !dbg !3191
  %call7 = call i8* @AcquireQuantumMemory(i64 %add, i64 8) #16, !dbg !3192
  %17 = bitcast i8* %call7 to double*, !dbg !3193
  store double* %17, double** %dasharray, align 8, !dbg !3194
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3195
  %graphic_context8 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %18, i32 0, i32 12, !dbg !3195
  %19 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context8, align 8, !dbg !3195
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3195
  %index9 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %20, i32 0, i32 11, !dbg !3195
  %21 = load i64, i64* %index9, align 8, !dbg !3195
  %arrayidx10 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %19, i64 %21, !dbg !3195
  %22 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx10, align 8, !dbg !3195
  %dash_pattern11 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %22, i32 0, i32 36, !dbg !3196
  %23 = load double*, double** %dash_pattern11, align 8, !dbg !3196
  store double* %23, double** %p, align 8, !dbg !3197
  %24 = load double*, double** %dasharray, align 8, !dbg !3198
  store double* %24, double** %q, align 8, !dbg !3199
  store i64 0, i64* %i, align 8, !dbg !3200
  br label %for.cond, !dbg !3202

for.cond:                                         ; preds = %for.inc, %if.then6
  %25 = load i64, i64* %i, align 8, !dbg !3203
  %26 = load i64, i64* %n, align 8, !dbg !3205
  %cmp12 = icmp slt i64 %25, %26, !dbg !3206
  br i1 %cmp12, label %for.body, label %for.end, !dbg !3207

for.body:                                         ; preds = %for.cond
  %27 = load double*, double** %p, align 8, !dbg !3208
  %incdec.ptr13 = getelementptr inbounds double, double* %27, i32 1, !dbg !3208
  store double* %incdec.ptr13, double** %p, align 8, !dbg !3208
  %28 = load double, double* %27, align 8, !dbg !3209
  %29 = load double*, double** %q, align 8, !dbg !3210
  %incdec.ptr14 = getelementptr inbounds double, double* %29, i32 1, !dbg !3210
  store double* %incdec.ptr14, double** %q, align 8, !dbg !3210
  store double %28, double* %29, align 8, !dbg !3211
  br label %for.inc, !dbg !3212

for.inc:                                          ; preds = %for.body
  %30 = load i64, i64* %i, align 8, !dbg !3213
  %inc15 = add nsw i64 %30, 1, !dbg !3213
  store i64 %inc15, i64* %i, align 8, !dbg !3213
  br label %for.cond, !dbg !3214, !llvm.loop !3215

for.end:                                          ; preds = %for.cond
  %31 = load double*, double** %q, align 8, !dbg !3217
  store double 0.000000e+00, double* %31, align 8, !dbg !3218
  br label %if.end16, !dbg !3219

if.end16:                                         ; preds = %for.end, %if.end4
  %32 = load double*, double** %dasharray, align 8, !dbg !3220
  ret double* %32, !dbg !3221
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @DrawGetStrokeDashOffset(%struct._DrawingWand* %wand) #0 !dbg !3222 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3223, metadata !DIExpression()), !dbg !3224
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3225
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3227
  %1 = load i32, i32* %debug, align 4, !dbg !3227
  %cmp = icmp ne i32 %1, 0, !dbg !3228
  br i1 %cmp, label %if.then, label %if.end, !dbg !3229

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3230
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3231
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3230
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1996, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3232
  br label %if.end, !dbg !3233

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3234
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3234
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3234
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3234
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3234
  %6 = load i64, i64* %index, align 8, !dbg !3234
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3234
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3234
  %dash_offset = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 18, !dbg !3235
  %8 = load double, double* %dash_offset, align 8, !dbg !3235
  ret double %8, !dbg !3236
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetStrokeLineCap(%struct._DrawingWand* %wand) #0 !dbg !3237 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3240, metadata !DIExpression()), !dbg !3241
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3242
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3244
  %1 = load i32, i32* %debug, align 4, !dbg !3244
  %cmp = icmp ne i32 %1, 0, !dbg !3245
  br i1 %cmp, label %if.then, label %if.end, !dbg !3246

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3247
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3248
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3247
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2029, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3249
  br label %if.end, !dbg !3250

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3251
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3251
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3251
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3251
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3251
  %6 = load i64, i64* %index, align 8, !dbg !3251
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3251
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3251
  %linecap = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 15, !dbg !3252
  %8 = load i32, i32* %linecap, align 4, !dbg !3252
  ret i32 %8, !dbg !3253
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetStrokeLineJoin(%struct._DrawingWand* %wand) #0 !dbg !3254 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3257, metadata !DIExpression()), !dbg !3258
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3259
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3261
  %1 = load i32, i32* %debug, align 4, !dbg !3261
  %cmp = icmp ne i32 %1, 0, !dbg !3262
  br i1 %cmp, label %if.then, label %if.end, !dbg !3263

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3264
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3265
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3264
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2063, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3266
  br label %if.end, !dbg !3267

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3268
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3268
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3268
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3268
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3268
  %6 = load i64, i64* %index, align 8, !dbg !3268
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3268
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3268
  %linejoin = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 16, !dbg !3269
  %8 = load i32, i32* %linejoin, align 8, !dbg !3269
  ret i32 %8, !dbg !3270
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @DrawGetStrokeMiterLimit(%struct._DrawingWand* %wand) #0 !dbg !3271 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3272, metadata !DIExpression()), !dbg !3273
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3274
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3276
  %1 = load i32, i32* %debug, align 4, !dbg !3276
  %cmp = icmp ne i32 %1, 0, !dbg !3277
  br i1 %cmp, label %if.then, label %if.end, !dbg !3278

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3279
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3280
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3279
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2098, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3281
  br label %if.end, !dbg !3282

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3283
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3283
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3283
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3283
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3283
  %6 = load i64, i64* %index, align 8, !dbg !3283
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3283
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3283
  %miterlimit = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 17, !dbg !3284
  %8 = load i64, i64* %miterlimit, align 8, !dbg !3284
  ret i64 %8, !dbg !3285
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @DrawGetStrokeOpacity(%struct._DrawingWand* %wand) #0 !dbg !3286 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %alpha = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3287, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !3289, metadata !DIExpression()), !dbg !3290
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3291
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3293
  %1 = load i32, i32* %debug, align 4, !dbg !3293
  %cmp = icmp ne i32 %1, 0, !dbg !3294
  br i1 %cmp, label %if.then, label %if.end, !dbg !3295

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3296
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3297
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3296
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2132, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3298
  br label %if.end, !dbg !3299

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3300
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3300
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3300
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3300
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3300
  %6 = load i64, i64* %index, align 8, !dbg !3300
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3300
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3300
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 6, !dbg !3301
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke, i32 0, i32 3, !dbg !3302
  %8 = load i16, i16* %opacity, align 2, !dbg !3302
  %conv = zext i16 %8 to i32, !dbg !3300
  %sub = sub nsw i32 65535, %conv, !dbg !3303
  %conv1 = sitofp i32 %sub to double, !dbg !3304
  %mul = fmul double 0x3EF0001000100010, %conv1, !dbg !3305
  store double %mul, double* %alpha, align 8, !dbg !3306
  %9 = load double, double* %alpha, align 8, !dbg !3307
  ret double %9, !dbg !3308
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @DrawGetStrokeWidth(%struct._DrawingWand* %wand) #0 !dbg !3309 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3310, metadata !DIExpression()), !dbg !3311
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3312
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3314
  %1 = load i32, i32* %debug, align 4, !dbg !3314
  %cmp = icmp ne i32 %1, 0, !dbg !3315
  br i1 %cmp, label %if.then, label %if.end, !dbg !3316

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3317
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3318
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3317
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2165, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3319
  br label %if.end, !dbg !3320

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3321
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3321
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3321
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3321
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3321
  %6 = load i64, i64* %index, align 8, !dbg !3321
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3321
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3321
  %stroke_width = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 7, !dbg !3322
  %8 = load double, double* %stroke_width, align 8, !dbg !3322
  ret double %8, !dbg !3323
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetTextAlignment(%struct._DrawingWand* %wand) #0 !dbg !3324 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3327, metadata !DIExpression()), !dbg !3328
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3329
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3331
  %1 = load i32, i32* %debug, align 4, !dbg !3331
  %cmp = icmp ne i32 %1, 0, !dbg !3332
  br i1 %cmp, label %if.then, label %if.end, !dbg !3333

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3334
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3335
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3334
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2197, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3336
  br label %if.end, !dbg !3337

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3338
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3338
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3338
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3338
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3338
  %6 = load i64, i64* %index, align 8, !dbg !3338
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3338
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3338
  %align = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 32, !dbg !3339
  %8 = load i32, i32* %align, align 8, !dbg !3339
  ret i32 %8, !dbg !3340
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetTextAntialias(%struct._DrawingWand* %wand) #0 !dbg !3341 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3342, metadata !DIExpression()), !dbg !3343
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3344
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3346
  %1 = load i32, i32* %debug, align 4, !dbg !3346
  %cmp = icmp ne i32 %1, 0, !dbg !3347
  br i1 %cmp, label %if.then, label %if.end, !dbg !3348

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3349
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3350
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3349
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2229, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3351
  br label %if.end, !dbg !3352

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3353
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3353
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3353
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3353
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3353
  %6 = load i64, i64* %index, align 8, !dbg !3353
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3353
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3353
  %text_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 13, !dbg !3354
  %8 = load i32, i32* %text_antialias, align 4, !dbg !3354
  ret i32 %8, !dbg !3355
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetTextDecoration(%struct._DrawingWand* %wand) #0 !dbg !3356 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3359, metadata !DIExpression()), !dbg !3360
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3361
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3363
  %1 = load i32, i32* %debug, align 4, !dbg !3363
  %cmp = icmp ne i32 %1, 0, !dbg !3364
  br i1 %cmp, label %if.then, label %if.end, !dbg !3365

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3366
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3367
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3366
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2261, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3368
  br label %if.end, !dbg !3369

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3370
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3370
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3370
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3370
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3370
  %6 = load i64, i64* %index, align 8, !dbg !3370
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3370
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3370
  %decorate = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 19, !dbg !3371
  %8 = load i32, i32* %decorate, align 8, !dbg !3371
  ret i32 %8, !dbg !3372
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGetTextDirection(%struct._DrawingWand* %wand) #0 !dbg !3373 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3376, metadata !DIExpression()), !dbg !3377
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3378
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3380
  %1 = load i32, i32* %debug, align 4, !dbg !3380
  %cmp = icmp ne i32 %1, 0, !dbg !3381
  br i1 %cmp, label %if.then, label %if.end, !dbg !3382

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3383
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3384
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3383
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2293, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3385
  br label %if.end, !dbg !3386

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3387
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3387
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3387
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3387
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3387
  %6 = load i64, i64* %index, align 8, !dbg !3387
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3387
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3387
  %direction = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 48, !dbg !3388
  %8 = load i32, i32* %direction, align 8, !dbg !3388
  ret i32 %8, !dbg !3389
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DrawGetTextEncoding(%struct._DrawingWand* %wand) #0 !dbg !3390 {
entry:
  %retval = alloca i8*, align 8
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3391, metadata !DIExpression()), !dbg !3392
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3393
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3395
  %1 = load i32, i32* %debug, align 4, !dbg !3395
  %cmp = icmp ne i32 %1, 0, !dbg !3396
  br i1 %cmp, label %if.then, label %if.end, !dbg !3397

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3398
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3399
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3398
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2326, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3400
  br label %if.end, !dbg !3401

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3402
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3402
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3402
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3402
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3402
  %6 = load i64, i64* %index, align 8, !dbg !3402
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3402
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3402
  %encoding = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 29, !dbg !3404
  %8 = load i8*, i8** %encoding, align 8, !dbg !3404
  %cmp1 = icmp ne i8* %8, null, !dbg !3405
  br i1 %cmp1, label %if.then2, label %if.end8, !dbg !3406

if.then2:                                         ; preds = %if.end
  %9 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3407
  %graphic_context3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %9, i32 0, i32 12, !dbg !3407
  %10 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context3, align 8, !dbg !3407
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3407
  %index4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 11, !dbg !3407
  %12 = load i64, i64* %index4, align 8, !dbg !3407
  %arrayidx5 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %10, i64 %12, !dbg !3407
  %13 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx5, align 8, !dbg !3407
  %encoding6 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %13, i32 0, i32 29, !dbg !3408
  %14 = load i8*, i8** %encoding6, align 8, !dbg !3408
  %call7 = call i8* @AcquireString(i8* %14), !dbg !3409
  store i8* %call7, i8** %retval, align 8, !dbg !3410
  br label %return, !dbg !3410

if.end8:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !3411
  br label %return, !dbg !3411

return:                                           ; preds = %if.end8, %if.then2
  %15 = load i8*, i8** %retval, align 8, !dbg !3412
  ret i8* %15, !dbg !3412
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @DrawGetTextKerning(%struct._DrawingWand* %wand) #0 !dbg !3413 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3416, metadata !DIExpression()), !dbg !3417
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3418
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3420
  %1 = load i32, i32* %debug, align 4, !dbg !3420
  %cmp = icmp ne i32 %1, 0, !dbg !3421
  br i1 %cmp, label %if.then, label %if.end, !dbg !3422

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3423
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3424
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3423
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2360, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3425
  br label %if.end, !dbg !3426

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3427
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3427
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3427
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3427
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3427
  %6 = load i64, i64* %index, align 8, !dbg !3427
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3427
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3427
  %kerning = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 45, !dbg !3428
  %8 = load double, double* %kerning, align 8, !dbg !3428
  ret double %8, !dbg !3429
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @DrawGetTextInterlineSpacing(%struct._DrawingWand* %wand) #0 !dbg !3430 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3431, metadata !DIExpression()), !dbg !3432
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3433
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3435
  %1 = load i32, i32* %debug, align 4, !dbg !3435
  %cmp = icmp ne i32 %1, 0, !dbg !3436
  br i1 %cmp, label %if.then, label %if.end, !dbg !3437

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3438
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3439
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3438
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2391, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3440
  br label %if.end, !dbg !3441

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3442
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3442
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3442
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3442
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3442
  %6 = load i64, i64* %index, align 8, !dbg !3442
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3442
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3442
  %interline_spacing = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 47, !dbg !3443
  %8 = load double, double* %interline_spacing, align 8, !dbg !3443
  ret double %8, !dbg !3444
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @DrawGetTextInterwordSpacing(%struct._DrawingWand* %wand) #0 !dbg !3445 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3446, metadata !DIExpression()), !dbg !3447
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3448
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3450
  %1 = load i32, i32* %debug, align 4, !dbg !3450
  %cmp = icmp ne i32 %1, 0, !dbg !3451
  br i1 %cmp, label %if.then, label %if.end, !dbg !3452

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3453
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3454
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3453
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2422, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3455
  br label %if.end, !dbg !3456

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3457
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !3457
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3457
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3457
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !3457
  %6 = load i64, i64* %index, align 8, !dbg !3457
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !3457
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3457
  %interword_spacing = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 46, !dbg !3458
  %8 = load double, double* %interword_spacing, align 8, !dbg !3458
  ret double %8, !dbg !3459
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @DrawGetVectorGraphics(%struct._DrawingWand* %wand) #0 !dbg !3460 {
entry:
  %retval = alloca i8*, align 8
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %value = alloca [4096 x i8], align 16
  %xml = alloca i8*, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %i = alloca i64, align 8
  %child = alloca %struct._XMLTreeInfo*, align 8
  %xml_info = alloca %struct._XMLTreeInfo*, align 8
  %dash_pattern245 = alloca i8*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !3463, metadata !DIExpression()), !dbg !3464
  call void @llvm.dbg.declare(metadata [4096 x i8]* %value, metadata !3465, metadata !DIExpression()), !dbg !3466
  call void @llvm.dbg.declare(metadata i8** %xml, metadata !3467, metadata !DIExpression()), !dbg !3468
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !3469, metadata !DIExpression()), !dbg !3470
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3471, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.declare(metadata %struct._XMLTreeInfo** %child, metadata !3473, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.declare(metadata %struct._XMLTreeInfo** %xml_info, metadata !3475, metadata !DIExpression()), !dbg !3476
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3477
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !3479
  %1 = load i32, i32* %debug, align 4, !dbg !3479
  %cmp = icmp ne i32 %1, 0, !dbg !3480
  br i1 %cmp, label %if.then, label %if.end, !dbg !3481

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3482
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !3483
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !3482
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2485, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3484
  br label %if.end, !dbg !3485

if.end:                                           ; preds = %if.then, %entry
  %call1 = call %struct._XMLTreeInfo* @NewXMLTreeTag(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0)), !dbg !3486
  store %struct._XMLTreeInfo* %call1, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3487
  %3 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3488
  %cmp2 = icmp eq %struct._XMLTreeInfo* %3, null, !dbg !3490
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3491

if.then3:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !3492
  br label %return, !dbg !3492

if.end4:                                          ; preds = %if.end
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3493
  %image = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 2, !dbg !3494
  %5 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !3494
  call void @GetMagickPixelPacket(%struct._Image* %5, %struct._MagickPixelPacket* %pixel), !dbg !3495
  %6 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3496
  %call5 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), i64 0), !dbg !3497
  store %struct._XMLTreeInfo* %call5, %struct._XMLTreeInfo** %child, align 8, !dbg !3498
  %7 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3499
  %cmp6 = icmp ne %struct._XMLTreeInfo* %7, null, !dbg !3501
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !3502

if.then7:                                         ; preds = %if.end4
  %8 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3503
  %9 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3504
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %9, i32 0, i32 12, !dbg !3504
  %10 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3504
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3504
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 11, !dbg !3504
  %12 = load i64, i64* %index, align 8, !dbg !3504
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %10, i64 %12, !dbg !3504
  %13 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3504
  %clip_mask = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %13, i32 0, i32 37, !dbg !3505
  %14 = load i8*, i8** %clip_mask, align 8, !dbg !3505
  %call8 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %8, i8* %14), !dbg !3506
  br label %if.end9, !dbg !3507

if.end9:                                          ; preds = %if.then7, %if.end4
  %15 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3508
  %call10 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i64 0), !dbg !3509
  store %struct._XMLTreeInfo* %call10, %struct._XMLTreeInfo** %child, align 8, !dbg !3510
  %16 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3511
  %cmp11 = icmp ne %struct._XMLTreeInfo* %16, null, !dbg !3513
  br i1 %cmp11, label %if.then12, label %if.end21, !dbg !3514

if.then12:                                        ; preds = %if.end9
  %arraydecay13 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3515
  %17 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3517
  %graphic_context14 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %17, i32 0, i32 12, !dbg !3517
  %18 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context14, align 8, !dbg !3517
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3517
  %index15 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %19, i32 0, i32 11, !dbg !3517
  %20 = load i64, i64* %index15, align 8, !dbg !3517
  %arrayidx16 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %18, i64 %20, !dbg !3517
  %21 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx16, align 8, !dbg !3517
  %clip_units = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %21, i32 0, i32 39, !dbg !3518
  %22 = load i32, i32* %clip_units, align 8, !dbg !3518
  %conv = zext i32 %22 to i64, !dbg !3519
  %call17 = call i8* @CommandOptionToMnemonic(i32 6, i64 %conv), !dbg !3520
  %call18 = call i64 @CopyMagickString(i8* %arraydecay13, i8* %call17, i64 4096), !dbg !3521
  %23 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3522
  %arraydecay19 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3523
  %call20 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %23, i8* %arraydecay19), !dbg !3524
  br label %if.end21, !dbg !3525

if.end21:                                         ; preds = %if.then12, %if.end9
  %24 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3526
  %call22 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i64 0), !dbg !3527
  store %struct._XMLTreeInfo* %call22, %struct._XMLTreeInfo** %child, align 8, !dbg !3528
  %25 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3529
  %cmp23 = icmp ne %struct._XMLTreeInfo* %25, null, !dbg !3531
  br i1 %cmp23, label %if.then25, label %if.end35, !dbg !3532

if.then25:                                        ; preds = %if.end21
  %arraydecay26 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3533
  %26 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3535
  %graphic_context27 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %26, i32 0, i32 12, !dbg !3535
  %27 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context27, align 8, !dbg !3535
  %28 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3535
  %index28 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %28, i32 0, i32 11, !dbg !3535
  %29 = load i64, i64* %index28, align 8, !dbg !3535
  %arrayidx29 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %27, i64 %29, !dbg !3535
  %30 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx29, align 8, !dbg !3535
  %decorate = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %30, i32 0, i32 19, !dbg !3536
  %31 = load i32, i32* %decorate, align 8, !dbg !3536
  %conv30 = zext i32 %31 to i64, !dbg !3537
  %call31 = call i8* @CommandOptionToMnemonic(i32 16, i64 %conv30), !dbg !3538
  %call32 = call i64 @CopyMagickString(i8* %arraydecay26, i8* %call31, i64 4096), !dbg !3539
  %32 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3540
  %arraydecay33 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3541
  %call34 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %32, i8* %arraydecay33), !dbg !3542
  br label %if.end35, !dbg !3543

if.end35:                                         ; preds = %if.then25, %if.end21
  %33 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3544
  %call36 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0), i64 0), !dbg !3545
  store %struct._XMLTreeInfo* %call36, %struct._XMLTreeInfo** %child, align 8, !dbg !3546
  %34 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3547
  %cmp37 = icmp ne %struct._XMLTreeInfo* %34, null, !dbg !3549
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !3550

if.then39:                                        ; preds = %if.end35
  %35 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3551
  %36 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3552
  %graphic_context40 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %36, i32 0, i32 12, !dbg !3552
  %37 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context40, align 8, !dbg !3552
  %38 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3552
  %index41 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %38, i32 0, i32 11, !dbg !3552
  %39 = load i64, i64* %index41, align 8, !dbg !3552
  %arrayidx42 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %37, i64 %39, !dbg !3552
  %40 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx42, align 8, !dbg !3552
  %encoding = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %40, i32 0, i32 29, !dbg !3553
  %41 = load i8*, i8** %encoding, align 8, !dbg !3553
  %call43 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %35, i8* %41), !dbg !3554
  br label %if.end44, !dbg !3555

if.end44:                                         ; preds = %if.then39, %if.end35
  %42 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3556
  %call45 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i64 0), !dbg !3557
  store %struct._XMLTreeInfo* %call45, %struct._XMLTreeInfo** %child, align 8, !dbg !3558
  %43 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3559
  %cmp46 = icmp ne %struct._XMLTreeInfo* %43, null, !dbg !3561
  br i1 %cmp46, label %if.then48, label %if.end73, !dbg !3562

if.then48:                                        ; preds = %if.end44
  %44 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3563
  %graphic_context49 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %44, i32 0, i32 12, !dbg !3563
  %45 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context49, align 8, !dbg !3563
  %46 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3563
  %index50 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %46, i32 0, i32 11, !dbg !3563
  %47 = load i64, i64* %index50, align 8, !dbg !3563
  %arrayidx51 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %45, i64 %47, !dbg !3563
  %48 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx51, align 8, !dbg !3563
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %48, i32 0, i32 5, !dbg !3566
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill, i32 0, i32 3, !dbg !3567
  %49 = load i16, i16* %opacity, align 2, !dbg !3567
  %conv52 = zext i16 %49 to i32, !dbg !3563
  %cmp53 = icmp ne i32 %conv52, 0, !dbg !3568
  br i1 %cmp53, label %if.then55, label %if.end64, !dbg !3569

if.then55:                                        ; preds = %if.then48
  %50 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3570
  %graphic_context56 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %50, i32 0, i32 12, !dbg !3570
  %51 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context56, align 8, !dbg !3570
  %52 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3570
  %index57 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %52, i32 0, i32 11, !dbg !3570
  %53 = load i64, i64* %index57, align 8, !dbg !3570
  %arrayidx58 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %51, i64 %53, !dbg !3570
  %54 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx58, align 8, !dbg !3570
  %fill59 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %54, i32 0, i32 5, !dbg !3571
  %opacity60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill59, i32 0, i32 3, !dbg !3572
  %55 = load i16, i16* %opacity60, align 2, !dbg !3572
  %conv61 = zext i16 %55 to i32, !dbg !3570
  %cmp62 = icmp ne i32 %conv61, 0, !dbg !3573
  %56 = zext i1 %cmp62 to i64, !dbg !3570
  %cond = select i1 %cmp62, i32 1, i32 0, !dbg !3570
  %matte = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 2, !dbg !3574
  store i32 %cond, i32* %matte, align 8, !dbg !3575
  br label %if.end64, !dbg !3576

if.end64:                                         ; preds = %if.then55, %if.then48
  %57 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3577
  %image65 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %57, i32 0, i32 2, !dbg !3578
  %58 = load %struct._Image*, %struct._Image** %image65, align 8, !dbg !3578
  %59 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3579
  %graphic_context66 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %59, i32 0, i32 12, !dbg !3579
  %60 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context66, align 8, !dbg !3579
  %61 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3579
  %index67 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %61, i32 0, i32 11, !dbg !3579
  %62 = load i64, i64* %index67, align 8, !dbg !3579
  %arrayidx68 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %60, i64 %62, !dbg !3579
  %63 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx68, align 8, !dbg !3579
  %fill69 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %63, i32 0, i32 5, !dbg !3580
  call void @SetMagickPixelPacket(%struct._Image* %58, %struct._PixelPacket* %fill69, i16* null, %struct._MagickPixelPacket* %pixel), !dbg !3581
  %arraydecay70 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3582
  call void @GetColorTuple(%struct._MagickPixelPacket* %pixel, i32 1, i8* %arraydecay70), !dbg !3583
  %64 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3584
  %arraydecay71 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3585
  %call72 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %64, i8* %arraydecay71), !dbg !3586
  br label %if.end73, !dbg !3587

if.end73:                                         ; preds = %if.end64, %if.end44
  %65 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3588
  %call74 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %65, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i64 0), !dbg !3589
  store %struct._XMLTreeInfo* %call74, %struct._XMLTreeInfo** %child, align 8, !dbg !3590
  %66 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3591
  %cmp75 = icmp ne %struct._XMLTreeInfo* %66, null, !dbg !3593
  br i1 %cmp75, label %if.then77, label %if.end89, !dbg !3594

if.then77:                                        ; preds = %if.end73
  %arraydecay78 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3595
  %67 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3597
  %graphic_context79 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %67, i32 0, i32 12, !dbg !3597
  %68 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context79, align 8, !dbg !3597
  %69 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3597
  %index80 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %69, i32 0, i32 11, !dbg !3597
  %70 = load i64, i64* %index80, align 8, !dbg !3597
  %arrayidx81 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %68, i64 %70, !dbg !3597
  %71 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx81, align 8, !dbg !3597
  %fill82 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %71, i32 0, i32 5, !dbg !3598
  %opacity83 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill82, i32 0, i32 3, !dbg !3599
  %72 = load i16, i16* %opacity83, align 2, !dbg !3599
  %conv84 = zext i16 %72 to i32, !dbg !3597
  %sub = sub nsw i32 65535, %conv84, !dbg !3600
  %conv85 = sitofp i32 %sub to double, !dbg !3601
  %mul = fmul double 0x3EF0001000100010, %conv85, !dbg !3602
  %call86 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay78, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), double %mul), !dbg !3603
  %73 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3604
  %arraydecay87 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3605
  %call88 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %73, i8* %arraydecay87), !dbg !3606
  br label %if.end89, !dbg !3607

if.end89:                                         ; preds = %if.then77, %if.end73
  %74 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3608
  %call90 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %74, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0), i64 0), !dbg !3609
  store %struct._XMLTreeInfo* %call90, %struct._XMLTreeInfo** %child, align 8, !dbg !3610
  %75 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3611
  %cmp91 = icmp ne %struct._XMLTreeInfo* %75, null, !dbg !3613
  br i1 %cmp91, label %if.then93, label %if.end103, !dbg !3614

if.then93:                                        ; preds = %if.end89
  %arraydecay94 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3615
  %76 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3617
  %graphic_context95 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %76, i32 0, i32 12, !dbg !3617
  %77 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context95, align 8, !dbg !3617
  %78 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3617
  %index96 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %78, i32 0, i32 11, !dbg !3617
  %79 = load i64, i64* %index96, align 8, !dbg !3617
  %arrayidx97 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %77, i64 %79, !dbg !3617
  %80 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx97, align 8, !dbg !3617
  %fill_rule = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %80, i32 0, i32 14, !dbg !3618
  %81 = load i32, i32* %fill_rule, align 8, !dbg !3618
  %conv98 = zext i32 %81 to i64, !dbg !3619
  %call99 = call i8* @CommandOptionToMnemonic(i32 24, i64 %conv98), !dbg !3620
  %call100 = call i64 @CopyMagickString(i8* %arraydecay94, i8* %call99, i64 4096), !dbg !3621
  %82 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3622
  %arraydecay101 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3623
  %call102 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %82, i8* %arraydecay101), !dbg !3624
  br label %if.end103, !dbg !3625

if.end103:                                        ; preds = %if.then93, %if.end89
  %83 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3626
  %call104 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0), i64 0), !dbg !3627
  store %struct._XMLTreeInfo* %call104, %struct._XMLTreeInfo** %child, align 8, !dbg !3628
  %84 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3629
  %cmp105 = icmp ne %struct._XMLTreeInfo* %84, null, !dbg !3631
  br i1 %cmp105, label %if.then107, label %if.end112, !dbg !3632

if.then107:                                       ; preds = %if.end103
  %85 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3633
  %86 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3634
  %graphic_context108 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %86, i32 0, i32 12, !dbg !3634
  %87 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context108, align 8, !dbg !3634
  %88 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3634
  %index109 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %88, i32 0, i32 11, !dbg !3634
  %89 = load i64, i64* %index109, align 8, !dbg !3634
  %arrayidx110 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %87, i64 %89, !dbg !3634
  %90 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx110, align 8, !dbg !3634
  %font = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %90, i32 0, i32 23, !dbg !3635
  %91 = load i8*, i8** %font, align 8, !dbg !3635
  %call111 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %85, i8* %91), !dbg !3636
  br label %if.end112, !dbg !3637

if.end112:                                        ; preds = %if.then107, %if.end103
  %92 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3638
  %call113 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %92, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0), i64 0), !dbg !3639
  store %struct._XMLTreeInfo* %call113, %struct._XMLTreeInfo** %child, align 8, !dbg !3640
  %93 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3641
  %cmp114 = icmp ne %struct._XMLTreeInfo* %93, null, !dbg !3643
  br i1 %cmp114, label %if.then116, label %if.end121, !dbg !3644

if.then116:                                       ; preds = %if.end112
  %94 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3645
  %95 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3646
  %graphic_context117 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %95, i32 0, i32 12, !dbg !3646
  %96 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context117, align 8, !dbg !3646
  %97 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3646
  %index118 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %97, i32 0, i32 11, !dbg !3646
  %98 = load i64, i64* %index118, align 8, !dbg !3646
  %arrayidx119 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %96, i64 %98, !dbg !3646
  %99 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx119, align 8, !dbg !3646
  %family = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %99, i32 0, i32 25, !dbg !3647
  %100 = load i8*, i8** %family, align 8, !dbg !3647
  %call120 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %94, i8* %100), !dbg !3648
  br label %if.end121, !dbg !3649

if.end121:                                        ; preds = %if.then116, %if.end112
  %101 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3650
  %call122 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %101, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i64 0), !dbg !3651
  store %struct._XMLTreeInfo* %call122, %struct._XMLTreeInfo** %child, align 8, !dbg !3652
  %102 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3653
  %cmp123 = icmp ne %struct._XMLTreeInfo* %102, null, !dbg !3655
  br i1 %cmp123, label %if.then125, label %if.end133, !dbg !3656

if.then125:                                       ; preds = %if.end121
  %arraydecay126 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3657
  %103 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3659
  %graphic_context127 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %103, i32 0, i32 12, !dbg !3659
  %104 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context127, align 8, !dbg !3659
  %105 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3659
  %index128 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %105, i32 0, i32 11, !dbg !3659
  %106 = load i64, i64* %index128, align 8, !dbg !3659
  %arrayidx129 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %104, i64 %106, !dbg !3659
  %107 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx129, align 8, !dbg !3659
  %pointsize = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %107, i32 0, i32 30, !dbg !3660
  %108 = load double, double* %pointsize, align 8, !dbg !3660
  %call130 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay126, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), double %108), !dbg !3661
  %109 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3662
  %arraydecay131 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3663
  %call132 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %109, i8* %arraydecay131), !dbg !3664
  br label %if.end133, !dbg !3665

if.end133:                                        ; preds = %if.then125, %if.end121
  %110 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3666
  %call134 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %110, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i64 0), !dbg !3667
  store %struct._XMLTreeInfo* %call134, %struct._XMLTreeInfo** %child, align 8, !dbg !3668
  %111 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3669
  %cmp135 = icmp ne %struct._XMLTreeInfo* %111, null, !dbg !3671
  br i1 %cmp135, label %if.then137, label %if.end147, !dbg !3672

if.then137:                                       ; preds = %if.end133
  %arraydecay138 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3673
  %112 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3675
  %graphic_context139 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %112, i32 0, i32 12, !dbg !3675
  %113 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context139, align 8, !dbg !3675
  %114 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3675
  %index140 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %114, i32 0, i32 11, !dbg !3675
  %115 = load i64, i64* %index140, align 8, !dbg !3675
  %arrayidx141 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %113, i64 %115, !dbg !3675
  %116 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx141, align 8, !dbg !3675
  %stretch = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %116, i32 0, i32 27, !dbg !3676
  %117 = load i32, i32* %stretch, align 4, !dbg !3676
  %conv142 = zext i32 %117 to i64, !dbg !3677
  %call143 = call i8* @CommandOptionToMnemonic(i32 63, i64 %conv142), !dbg !3678
  %call144 = call i64 @CopyMagickString(i8* %arraydecay138, i8* %call143, i64 4096), !dbg !3679
  %118 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3680
  %arraydecay145 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3681
  %call146 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %118, i8* %arraydecay145), !dbg !3682
  br label %if.end147, !dbg !3683

if.end147:                                        ; preds = %if.then137, %if.end133
  %119 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3684
  %call148 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %119, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0), i64 0), !dbg !3685
  store %struct._XMLTreeInfo* %call148, %struct._XMLTreeInfo** %child, align 8, !dbg !3686
  %120 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3687
  %cmp149 = icmp ne %struct._XMLTreeInfo* %120, null, !dbg !3689
  br i1 %cmp149, label %if.then151, label %if.end161, !dbg !3690

if.then151:                                       ; preds = %if.end147
  %arraydecay152 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3691
  %121 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3693
  %graphic_context153 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %121, i32 0, i32 12, !dbg !3693
  %122 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context153, align 8, !dbg !3693
  %123 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3693
  %index154 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %123, i32 0, i32 11, !dbg !3693
  %124 = load i64, i64* %index154, align 8, !dbg !3693
  %arrayidx155 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %122, i64 %124, !dbg !3693
  %125 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx155, align 8, !dbg !3693
  %style = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %125, i32 0, i32 26, !dbg !3694
  %126 = load i32, i32* %style, align 8, !dbg !3694
  %conv156 = zext i32 %126 to i64, !dbg !3695
  %call157 = call i8* @CommandOptionToMnemonic(i32 64, i64 %conv156), !dbg !3696
  %call158 = call i64 @CopyMagickString(i8* %arraydecay152, i8* %call157, i64 4096), !dbg !3697
  %127 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3698
  %arraydecay159 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3699
  %call160 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %127, i8* %arraydecay159), !dbg !3700
  br label %if.end161, !dbg !3701

if.end161:                                        ; preds = %if.then151, %if.end147
  %128 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3702
  %call162 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0), i64 0), !dbg !3703
  store %struct._XMLTreeInfo* %call162, %struct._XMLTreeInfo** %child, align 8, !dbg !3704
  %129 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3705
  %cmp163 = icmp ne %struct._XMLTreeInfo* %129, null, !dbg !3707
  br i1 %cmp163, label %if.then165, label %if.end174, !dbg !3708

if.then165:                                       ; preds = %if.end161
  %arraydecay166 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3709
  %130 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3711
  %graphic_context167 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %130, i32 0, i32 12, !dbg !3711
  %131 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context167, align 8, !dbg !3711
  %132 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3711
  %index168 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %132, i32 0, i32 11, !dbg !3711
  %133 = load i64, i64* %index168, align 8, !dbg !3711
  %arrayidx169 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %131, i64 %133, !dbg !3711
  %134 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx169, align 8, !dbg !3711
  %weight = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %134, i32 0, i32 28, !dbg !3712
  %135 = load i64, i64* %weight, align 8, !dbg !3712
  %conv170 = uitofp i64 %135 to double, !dbg !3713
  %call171 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay166, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), double %conv170), !dbg !3714
  %136 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3715
  %arraydecay172 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3716
  %call173 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %136, i8* %arraydecay172), !dbg !3717
  br label %if.end174, !dbg !3718

if.end174:                                        ; preds = %if.then165, %if.end161
  %137 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3719
  %call175 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %137, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0), i64 0), !dbg !3720
  store %struct._XMLTreeInfo* %call175, %struct._XMLTreeInfo** %child, align 8, !dbg !3721
  %138 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3722
  %cmp176 = icmp ne %struct._XMLTreeInfo* %138, null, !dbg !3724
  br i1 %cmp176, label %if.then178, label %if.end188, !dbg !3725

if.then178:                                       ; preds = %if.end174
  %arraydecay179 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3726
  %139 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3728
  %graphic_context180 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %139, i32 0, i32 12, !dbg !3728
  %140 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context180, align 8, !dbg !3728
  %141 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3728
  %index181 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %141, i32 0, i32 11, !dbg !3728
  %142 = load i64, i64* %index181, align 8, !dbg !3728
  %arrayidx182 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %140, i64 %142, !dbg !3728
  %143 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx182, align 8, !dbg !3728
  %gravity = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %143, i32 0, i32 4, !dbg !3729
  %144 = load i32, i32* %gravity, align 8, !dbg !3729
  %conv183 = zext i32 %144 to i64, !dbg !3730
  %call184 = call i8* @CommandOptionToMnemonic(i32 30, i64 %conv183), !dbg !3731
  %call185 = call i64 @CopyMagickString(i8* %arraydecay179, i8* %call184, i64 4096), !dbg !3732
  %145 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3733
  %arraydecay186 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3734
  %call187 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %145, i8* %arraydecay186), !dbg !3735
  br label %if.end188, !dbg !3736

if.end188:                                        ; preds = %if.then178, %if.end174
  %146 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3737
  %call189 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %146, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i64 0), !dbg !3738
  store %struct._XMLTreeInfo* %call189, %struct._XMLTreeInfo** %child, align 8, !dbg !3739
  %147 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3740
  %cmp190 = icmp ne %struct._XMLTreeInfo* %147, null, !dbg !3742
  br i1 %cmp190, label %if.then192, label %if.end220, !dbg !3743

if.then192:                                       ; preds = %if.end188
  %148 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3744
  %graphic_context193 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %148, i32 0, i32 12, !dbg !3744
  %149 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context193, align 8, !dbg !3744
  %150 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3744
  %index194 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %150, i32 0, i32 11, !dbg !3744
  %151 = load i64, i64* %index194, align 8, !dbg !3744
  %arrayidx195 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %149, i64 %151, !dbg !3744
  %152 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx195, align 8, !dbg !3744
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %152, i32 0, i32 6, !dbg !3747
  %opacity196 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke, i32 0, i32 3, !dbg !3748
  %153 = load i16, i16* %opacity196, align 2, !dbg !3748
  %conv197 = zext i16 %153 to i32, !dbg !3744
  %cmp198 = icmp ne i32 %conv197, 0, !dbg !3749
  br i1 %cmp198, label %if.then200, label %if.end211, !dbg !3750

if.then200:                                       ; preds = %if.then192
  %154 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3751
  %graphic_context201 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %154, i32 0, i32 12, !dbg !3751
  %155 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context201, align 8, !dbg !3751
  %156 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3751
  %index202 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %156, i32 0, i32 11, !dbg !3751
  %157 = load i64, i64* %index202, align 8, !dbg !3751
  %arrayidx203 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %155, i64 %157, !dbg !3751
  %158 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx203, align 8, !dbg !3751
  %stroke204 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %158, i32 0, i32 6, !dbg !3752
  %opacity205 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke204, i32 0, i32 3, !dbg !3753
  %159 = load i16, i16* %opacity205, align 2, !dbg !3753
  %conv206 = zext i16 %159 to i32, !dbg !3751
  %cmp207 = icmp ne i32 %conv206, 0, !dbg !3754
  %160 = zext i1 %cmp207 to i64, !dbg !3751
  %cond209 = select i1 %cmp207, i32 1, i32 0, !dbg !3751
  %matte210 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 2, !dbg !3755
  store i32 %cond209, i32* %matte210, align 8, !dbg !3756
  br label %if.end211, !dbg !3757

if.end211:                                        ; preds = %if.then200, %if.then192
  %161 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3758
  %image212 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %161, i32 0, i32 2, !dbg !3759
  %162 = load %struct._Image*, %struct._Image** %image212, align 8, !dbg !3759
  %163 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3760
  %graphic_context213 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %163, i32 0, i32 12, !dbg !3760
  %164 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context213, align 8, !dbg !3760
  %165 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3760
  %index214 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %165, i32 0, i32 11, !dbg !3760
  %166 = load i64, i64* %index214, align 8, !dbg !3760
  %arrayidx215 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %164, i64 %166, !dbg !3760
  %167 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx215, align 8, !dbg !3760
  %stroke216 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %167, i32 0, i32 6, !dbg !3761
  call void @SetMagickPixelPacket(%struct._Image* %162, %struct._PixelPacket* %stroke216, i16* null, %struct._MagickPixelPacket* %pixel), !dbg !3762
  %arraydecay217 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3763
  call void @GetColorTuple(%struct._MagickPixelPacket* %pixel, i32 1, i8* %arraydecay217), !dbg !3764
  %168 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3765
  %arraydecay218 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3766
  %call219 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %168, i8* %arraydecay218), !dbg !3767
  br label %if.end220, !dbg !3768

if.end220:                                        ; preds = %if.end211, %if.end188
  %169 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3769
  %call221 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %169, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i64 0, i64 0), i64 0), !dbg !3770
  store %struct._XMLTreeInfo* %call221, %struct._XMLTreeInfo** %child, align 8, !dbg !3771
  %170 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3772
  %cmp222 = icmp ne %struct._XMLTreeInfo* %170, null, !dbg !3774
  br i1 %cmp222, label %if.then224, label %if.end235, !dbg !3775

if.then224:                                       ; preds = %if.end220
  %arraydecay225 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3776
  %171 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3778
  %graphic_context226 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %171, i32 0, i32 12, !dbg !3778
  %172 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context226, align 8, !dbg !3778
  %173 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3778
  %index227 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %173, i32 0, i32 11, !dbg !3778
  %174 = load i64, i64* %index227, align 8, !dbg !3778
  %arrayidx228 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %172, i64 %174, !dbg !3778
  %175 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx228, align 8, !dbg !3778
  %stroke_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %175, i32 0, i32 12, !dbg !3779
  %176 = load i32, i32* %stroke_antialias, align 8, !dbg !3779
  %cmp229 = icmp ne i32 %176, 0, !dbg !3780
  %177 = zext i1 %cmp229 to i64, !dbg !3778
  %cond231 = select i1 %cmp229, i32 1, i32 0, !dbg !3778
  %call232 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay225, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40, i64 0, i64 0), i32 %cond231), !dbg !3781
  %178 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3782
  %arraydecay233 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3783
  %call234 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %178, i8* %arraydecay233), !dbg !3784
  br label %if.end235, !dbg !3785

if.end235:                                        ; preds = %if.then224, %if.end220
  %179 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3786
  %call236 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %179, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i64 0, i64 0), i64 0), !dbg !3787
  store %struct._XMLTreeInfo* %call236, %struct._XMLTreeInfo** %child, align 8, !dbg !3788
  %180 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3789
  %cmp237 = icmp ne %struct._XMLTreeInfo* %180, null, !dbg !3791
  br i1 %cmp237, label %land.lhs.true, label %if.end270, !dbg !3792

land.lhs.true:                                    ; preds = %if.end235
  %181 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3793
  %graphic_context239 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %181, i32 0, i32 12, !dbg !3793
  %182 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context239, align 8, !dbg !3793
  %183 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3793
  %index240 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %183, i32 0, i32 11, !dbg !3793
  %184 = load i64, i64* %index240, align 8, !dbg !3793
  %arrayidx241 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %182, i64 %184, !dbg !3793
  %185 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx241, align 8, !dbg !3793
  %dash_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %185, i32 0, i32 36, !dbg !3794
  %186 = load double*, double** %dash_pattern, align 8, !dbg !3794
  %cmp242 = icmp ne double* %186, null, !dbg !3795
  br i1 %cmp242, label %if.then244, label %if.end270, !dbg !3796

if.then244:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %dash_pattern245, metadata !3797, metadata !DIExpression()), !dbg !3799
  %call246 = call i8* @AcquireString(i8* null), !dbg !3800
  store i8* %call246, i8** %dash_pattern245, align 8, !dbg !3801
  store i64 0, i64* %i, align 8, !dbg !3802
  br label %for.cond, !dbg !3804

for.cond:                                         ; preds = %for.inc, %if.then244
  %187 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3805
  %graphic_context247 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %187, i32 0, i32 12, !dbg !3805
  %188 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context247, align 8, !dbg !3805
  %189 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3805
  %index248 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %189, i32 0, i32 11, !dbg !3805
  %190 = load i64, i64* %index248, align 8, !dbg !3805
  %arrayidx249 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %188, i64 %190, !dbg !3805
  %191 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx249, align 8, !dbg !3805
  %dash_pattern250 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %191, i32 0, i32 36, !dbg !3807
  %192 = load double*, double** %dash_pattern250, align 8, !dbg !3807
  %193 = load i64, i64* %i, align 8, !dbg !3808
  %arrayidx251 = getelementptr inbounds double, double* %192, i64 %193, !dbg !3805
  %194 = load double, double* %arrayidx251, align 8, !dbg !3805
  %cmp252 = fcmp une double %194, 0.000000e+00, !dbg !3809
  br i1 %cmp252, label %for.body, label %for.end, !dbg !3810

for.body:                                         ; preds = %for.cond
  %195 = load i64, i64* %i, align 8, !dbg !3811
  %cmp254 = icmp ne i64 %195, 0, !dbg !3814
  br i1 %cmp254, label %if.then256, label %if.end258, !dbg !3815

if.then256:                                       ; preds = %for.body
  %call257 = call i32 @ConcatenateString(i8** %dash_pattern245, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0)), !dbg !3816
  br label %if.end258, !dbg !3817

if.end258:                                        ; preds = %if.then256, %for.body
  %arraydecay259 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3818
  %196 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3819
  %graphic_context260 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %196, i32 0, i32 12, !dbg !3819
  %197 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context260, align 8, !dbg !3819
  %198 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3819
  %index261 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %198, i32 0, i32 11, !dbg !3819
  %199 = load i64, i64* %index261, align 8, !dbg !3819
  %arrayidx262 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %197, i64 %199, !dbg !3819
  %200 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx262, align 8, !dbg !3819
  %dash_pattern263 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %200, i32 0, i32 36, !dbg !3820
  %201 = load double*, double** %dash_pattern263, align 8, !dbg !3820
  %202 = load i64, i64* %i, align 8, !dbg !3821
  %arrayidx264 = getelementptr inbounds double, double* %201, i64 %202, !dbg !3819
  %203 = load double, double* %arrayidx264, align 8, !dbg !3819
  %call265 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay259, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), double %203), !dbg !3822
  %arraydecay266 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3823
  %call267 = call i32 @ConcatenateString(i8** %dash_pattern245, i8* %arraydecay266), !dbg !3824
  br label %for.inc, !dbg !3825

for.inc:                                          ; preds = %if.end258
  %204 = load i64, i64* %i, align 8, !dbg !3826
  %inc = add nsw i64 %204, 1, !dbg !3826
  store i64 %inc, i64* %i, align 8, !dbg !3826
  br label %for.cond, !dbg !3827, !llvm.loop !3828

for.end:                                          ; preds = %for.cond
  %205 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3830
  %206 = load i8*, i8** %dash_pattern245, align 8, !dbg !3831
  %call268 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %205, i8* %206), !dbg !3832
  %207 = load i8*, i8** %dash_pattern245, align 8, !dbg !3833
  %call269 = call i8* @DestroyString(i8* %207), !dbg !3834
  store i8* %call269, i8** %dash_pattern245, align 8, !dbg !3835
  br label %if.end270, !dbg !3836

if.end270:                                        ; preds = %for.end, %land.lhs.true, %if.end235
  %208 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3837
  %call271 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %208, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0), i64 0), !dbg !3838
  store %struct._XMLTreeInfo* %call271, %struct._XMLTreeInfo** %child, align 8, !dbg !3839
  %209 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3840
  %cmp272 = icmp ne %struct._XMLTreeInfo* %209, null, !dbg !3842
  br i1 %cmp272, label %if.then274, label %if.end282, !dbg !3843

if.then274:                                       ; preds = %if.end270
  %arraydecay275 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3844
  %210 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3846
  %graphic_context276 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %210, i32 0, i32 12, !dbg !3846
  %211 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context276, align 8, !dbg !3846
  %212 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3846
  %index277 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %212, i32 0, i32 11, !dbg !3846
  %213 = load i64, i64* %index277, align 8, !dbg !3846
  %arrayidx278 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %211, i64 %213, !dbg !3846
  %214 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx278, align 8, !dbg !3846
  %dash_offset = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %214, i32 0, i32 18, !dbg !3847
  %215 = load double, double* %dash_offset, align 8, !dbg !3847
  %call279 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay275, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), double %215), !dbg !3848
  %216 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3849
  %arraydecay280 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3850
  %call281 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %216, i8* %arraydecay280), !dbg !3851
  br label %if.end282, !dbg !3852

if.end282:                                        ; preds = %if.then274, %if.end270
  %217 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3853
  %call283 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %217, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i64 0, i64 0), i64 0), !dbg !3854
  store %struct._XMLTreeInfo* %call283, %struct._XMLTreeInfo** %child, align 8, !dbg !3855
  %218 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3856
  %cmp284 = icmp ne %struct._XMLTreeInfo* %218, null, !dbg !3858
  br i1 %cmp284, label %if.then286, label %if.end296, !dbg !3859

if.then286:                                       ; preds = %if.end282
  %arraydecay287 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3860
  %219 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3862
  %graphic_context288 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %219, i32 0, i32 12, !dbg !3862
  %220 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context288, align 8, !dbg !3862
  %221 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3862
  %index289 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %221, i32 0, i32 11, !dbg !3862
  %222 = load i64, i64* %index289, align 8, !dbg !3862
  %arrayidx290 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %220, i64 %222, !dbg !3862
  %223 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx290, align 8, !dbg !3862
  %linecap = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %223, i32 0, i32 15, !dbg !3863
  %224 = load i32, i32* %linecap, align 4, !dbg !3863
  %conv291 = zext i32 %224 to i64, !dbg !3864
  %call292 = call i8* @CommandOptionToMnemonic(i32 36, i64 %conv291), !dbg !3865
  %call293 = call i64 @CopyMagickString(i8* %arraydecay287, i8* %call292, i64 4096), !dbg !3866
  %225 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3867
  %arraydecay294 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3868
  %call295 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %225, i8* %arraydecay294), !dbg !3869
  br label %if.end296, !dbg !3870

if.end296:                                        ; preds = %if.then286, %if.end282
  %226 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3871
  %call297 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %226, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i64 0, i64 0), i64 0), !dbg !3872
  store %struct._XMLTreeInfo* %call297, %struct._XMLTreeInfo** %child, align 8, !dbg !3873
  %227 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3874
  %cmp298 = icmp ne %struct._XMLTreeInfo* %227, null, !dbg !3876
  br i1 %cmp298, label %if.then300, label %if.end310, !dbg !3877

if.then300:                                       ; preds = %if.end296
  %arraydecay301 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3878
  %228 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3880
  %graphic_context302 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %228, i32 0, i32 12, !dbg !3880
  %229 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context302, align 8, !dbg !3880
  %230 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3880
  %index303 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %230, i32 0, i32 11, !dbg !3880
  %231 = load i64, i64* %index303, align 8, !dbg !3880
  %arrayidx304 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %229, i64 %231, !dbg !3880
  %232 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx304, align 8, !dbg !3880
  %linejoin = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %232, i32 0, i32 16, !dbg !3881
  %233 = load i32, i32* %linejoin, align 8, !dbg !3881
  %conv305 = zext i32 %233 to i64, !dbg !3882
  %call306 = call i8* @CommandOptionToMnemonic(i32 37, i64 %conv305), !dbg !3883
  %call307 = call i64 @CopyMagickString(i8* %arraydecay301, i8* %call306, i64 4096), !dbg !3884
  %234 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3885
  %arraydecay308 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3886
  %call309 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %234, i8* %arraydecay308), !dbg !3887
  br label %if.end310, !dbg !3888

if.end310:                                        ; preds = %if.then300, %if.end296
  %235 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3889
  %call311 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %235, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i64 0, i64 0), i64 0), !dbg !3890
  store %struct._XMLTreeInfo* %call311, %struct._XMLTreeInfo** %child, align 8, !dbg !3891
  %236 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3892
  %cmp312 = icmp ne %struct._XMLTreeInfo* %236, null, !dbg !3894
  br i1 %cmp312, label %if.then314, label %if.end323, !dbg !3895

if.then314:                                       ; preds = %if.end310
  %arraydecay315 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3896
  %237 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3898
  %graphic_context316 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %237, i32 0, i32 12, !dbg !3898
  %238 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context316, align 8, !dbg !3898
  %239 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3898
  %index317 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %239, i32 0, i32 11, !dbg !3898
  %240 = load i64, i64* %index317, align 8, !dbg !3898
  %arrayidx318 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %238, i64 %240, !dbg !3898
  %241 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx318, align 8, !dbg !3898
  %miterlimit = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %241, i32 0, i32 17, !dbg !3899
  %242 = load i64, i64* %miterlimit, align 8, !dbg !3899
  %conv319 = uitofp i64 %242 to double, !dbg !3900
  %call320 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay315, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), double %conv319), !dbg !3901
  %243 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3902
  %arraydecay321 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3903
  %call322 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %243, i8* %arraydecay321), !dbg !3904
  br label %if.end323, !dbg !3905

if.end323:                                        ; preds = %if.then314, %if.end310
  %244 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3906
  %call324 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %244, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i64 0, i64 0), i64 0), !dbg !3907
  store %struct._XMLTreeInfo* %call324, %struct._XMLTreeInfo** %child, align 8, !dbg !3908
  %245 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3909
  %cmp325 = icmp ne %struct._XMLTreeInfo* %245, null, !dbg !3911
  br i1 %cmp325, label %if.then327, label %if.end341, !dbg !3912

if.then327:                                       ; preds = %if.end323
  %arraydecay328 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3913
  %246 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3915
  %graphic_context329 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %246, i32 0, i32 12, !dbg !3915
  %247 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context329, align 8, !dbg !3915
  %248 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3915
  %index330 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %248, i32 0, i32 11, !dbg !3915
  %249 = load i64, i64* %index330, align 8, !dbg !3915
  %arrayidx331 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %247, i64 %249, !dbg !3915
  %250 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx331, align 8, !dbg !3915
  %stroke332 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %250, i32 0, i32 6, !dbg !3916
  %opacity333 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke332, i32 0, i32 3, !dbg !3917
  %251 = load i16, i16* %opacity333, align 2, !dbg !3917
  %conv334 = zext i16 %251 to i32, !dbg !3915
  %sub335 = sub nsw i32 65535, %conv334, !dbg !3918
  %conv336 = sitofp i32 %sub335 to double, !dbg !3919
  %mul337 = fmul double 0x3EF0001000100010, %conv336, !dbg !3920
  %call338 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay328, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), double %mul337), !dbg !3921
  %252 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3922
  %arraydecay339 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3923
  %call340 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %252, i8* %arraydecay339), !dbg !3924
  br label %if.end341, !dbg !3925

if.end341:                                        ; preds = %if.then327, %if.end323
  %253 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3926
  %call342 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %253, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i64 0, i64 0), i64 0), !dbg !3927
  store %struct._XMLTreeInfo* %call342, %struct._XMLTreeInfo** %child, align 8, !dbg !3928
  %254 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3929
  %cmp343 = icmp ne %struct._XMLTreeInfo* %254, null, !dbg !3931
  br i1 %cmp343, label %if.then345, label %if.end353, !dbg !3932

if.then345:                                       ; preds = %if.end341
  %arraydecay346 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3933
  %255 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3935
  %graphic_context347 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %255, i32 0, i32 12, !dbg !3935
  %256 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context347, align 8, !dbg !3935
  %257 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3935
  %index348 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %257, i32 0, i32 11, !dbg !3935
  %258 = load i64, i64* %index348, align 8, !dbg !3935
  %arrayidx349 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %256, i64 %258, !dbg !3935
  %259 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx349, align 8, !dbg !3935
  %stroke_width = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %259, i32 0, i32 7, !dbg !3936
  %260 = load double, double* %stroke_width, align 8, !dbg !3936
  %call350 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay346, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), double %260), !dbg !3937
  %261 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3938
  %arraydecay351 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3939
  %call352 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %261, i8* %arraydecay351), !dbg !3940
  br label %if.end353, !dbg !3941

if.end353:                                        ; preds = %if.then345, %if.end341
  %262 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3942
  %call354 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %262, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49, i64 0, i64 0), i64 0), !dbg !3943
  store %struct._XMLTreeInfo* %call354, %struct._XMLTreeInfo** %child, align 8, !dbg !3944
  %263 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3945
  %cmp355 = icmp ne %struct._XMLTreeInfo* %263, null, !dbg !3947
  br i1 %cmp355, label %if.then357, label %if.end367, !dbg !3948

if.then357:                                       ; preds = %if.end353
  %arraydecay358 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3949
  %264 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3951
  %graphic_context359 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %264, i32 0, i32 12, !dbg !3951
  %265 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context359, align 8, !dbg !3951
  %266 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3951
  %index360 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %266, i32 0, i32 11, !dbg !3951
  %267 = load i64, i64* %index360, align 8, !dbg !3951
  %arrayidx361 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %265, i64 %267, !dbg !3951
  %268 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx361, align 8, !dbg !3951
  %align = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %268, i32 0, i32 32, !dbg !3952
  %269 = load i32, i32* %align, align 8, !dbg !3952
  %conv362 = zext i32 %269 to i64, !dbg !3953
  %call363 = call i8* @CommandOptionToMnemonic(i32 0, i64 %conv362), !dbg !3954
  %call364 = call i64 @CopyMagickString(i8* %arraydecay358, i8* %call363, i64 4096), !dbg !3955
  %270 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3956
  %arraydecay365 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3957
  %call366 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %270, i8* %arraydecay365), !dbg !3958
  br label %if.end367, !dbg !3959

if.end367:                                        ; preds = %if.then357, %if.end353
  %271 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3960
  %call368 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %271, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0), i64 0), !dbg !3961
  store %struct._XMLTreeInfo* %call368, %struct._XMLTreeInfo** %child, align 8, !dbg !3962
  %272 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3963
  %cmp369 = icmp ne %struct._XMLTreeInfo* %272, null, !dbg !3965
  br i1 %cmp369, label %if.then371, label %if.end382, !dbg !3966

if.then371:                                       ; preds = %if.end367
  %arraydecay372 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3967
  %273 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3969
  %graphic_context373 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %273, i32 0, i32 12, !dbg !3969
  %274 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context373, align 8, !dbg !3969
  %275 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3969
  %index374 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %275, i32 0, i32 11, !dbg !3969
  %276 = load i64, i64* %index374, align 8, !dbg !3969
  %arrayidx375 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %274, i64 %276, !dbg !3969
  %277 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx375, align 8, !dbg !3969
  %text_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %277, i32 0, i32 13, !dbg !3970
  %278 = load i32, i32* %text_antialias, align 4, !dbg !3970
  %cmp376 = icmp ne i32 %278, 0, !dbg !3971
  %279 = zext i1 %cmp376 to i64, !dbg !3969
  %cond378 = select i1 %cmp376, i32 1, i32 0, !dbg !3969
  %call379 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay372, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.40, i64 0, i64 0), i32 %cond378), !dbg !3972
  %280 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3973
  %arraydecay380 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3974
  %call381 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %280, i8* %arraydecay380), !dbg !3975
  br label %if.end382, !dbg !3976

if.end382:                                        ; preds = %if.then371, %if.end367
  %281 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !3977
  %call383 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %281, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i64 0, i64 0), i64 0), !dbg !3978
  store %struct._XMLTreeInfo* %call383, %struct._XMLTreeInfo** %child, align 8, !dbg !3979
  %282 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !3980
  %cmp384 = icmp ne %struct._XMLTreeInfo* %282, null, !dbg !3982
  br i1 %cmp384, label %if.then386, label %if.end414, !dbg !3983

if.then386:                                       ; preds = %if.end382
  %283 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3984
  %graphic_context387 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %283, i32 0, i32 12, !dbg !3984
  %284 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context387, align 8, !dbg !3984
  %285 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3984
  %index388 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %285, i32 0, i32 11, !dbg !3984
  %286 = load i64, i64* %index388, align 8, !dbg !3984
  %arrayidx389 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %284, i64 %286, !dbg !3984
  %287 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx389, align 8, !dbg !3984
  %undercolor = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %287, i32 0, i32 33, !dbg !3987
  %opacity390 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %undercolor, i32 0, i32 3, !dbg !3988
  %288 = load i16, i16* %opacity390, align 2, !dbg !3988
  %conv391 = zext i16 %288 to i32, !dbg !3984
  %cmp392 = icmp ne i32 %conv391, 0, !dbg !3989
  br i1 %cmp392, label %if.then394, label %if.end405, !dbg !3990

if.then394:                                       ; preds = %if.then386
  %289 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3991
  %graphic_context395 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %289, i32 0, i32 12, !dbg !3991
  %290 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context395, align 8, !dbg !3991
  %291 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3991
  %index396 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %291, i32 0, i32 11, !dbg !3991
  %292 = load i64, i64* %index396, align 8, !dbg !3991
  %arrayidx397 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %290, i64 %292, !dbg !3991
  %293 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx397, align 8, !dbg !3991
  %undercolor398 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %293, i32 0, i32 33, !dbg !3992
  %opacity399 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %undercolor398, i32 0, i32 3, !dbg !3993
  %294 = load i16, i16* %opacity399, align 2, !dbg !3993
  %conv400 = zext i16 %294 to i32, !dbg !3991
  %cmp401 = icmp ne i32 %conv400, 0, !dbg !3994
  %295 = zext i1 %cmp401 to i64, !dbg !3991
  %cond403 = select i1 %cmp401, i32 1, i32 0, !dbg !3991
  %matte404 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 2, !dbg !3995
  store i32 %cond403, i32* %matte404, align 8, !dbg !3996
  br label %if.end405, !dbg !3997

if.end405:                                        ; preds = %if.then394, %if.then386
  %296 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !3998
  %image406 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %296, i32 0, i32 2, !dbg !3999
  %297 = load %struct._Image*, %struct._Image** %image406, align 8, !dbg !3999
  %298 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4000
  %graphic_context407 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %298, i32 0, i32 12, !dbg !4000
  %299 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context407, align 8, !dbg !4000
  %300 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4000
  %index408 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %300, i32 0, i32 11, !dbg !4000
  %301 = load i64, i64* %index408, align 8, !dbg !4000
  %arrayidx409 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %299, i64 %301, !dbg !4000
  %302 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx409, align 8, !dbg !4000
  %undercolor410 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %302, i32 0, i32 33, !dbg !4001
  call void @SetMagickPixelPacket(%struct._Image* %297, %struct._PixelPacket* %undercolor410, i16* null, %struct._MagickPixelPacket* %pixel), !dbg !4002
  %arraydecay411 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !4003
  call void @GetColorTuple(%struct._MagickPixelPacket* %pixel, i32 1, i8* %arraydecay411), !dbg !4004
  %303 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !4005
  %arraydecay412 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !4006
  %call413 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %303, i8* %arraydecay412), !dbg !4007
  br label %if.end414, !dbg !4008

if.end414:                                        ; preds = %if.end405, %if.end382
  %304 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !4009
  %call415 = call %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo* %304, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.52, i64 0, i64 0), i64 0), !dbg !4010
  store %struct._XMLTreeInfo* %call415, %struct._XMLTreeInfo** %child, align 8, !dbg !4011
  %305 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !4012
  %cmp416 = icmp ne %struct._XMLTreeInfo* %305, null, !dbg !4014
  br i1 %cmp416, label %if.then418, label %if.end420, !dbg !4015

if.then418:                                       ; preds = %if.end414
  %306 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !4016
  %307 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4017
  %mvg = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %307, i32 0, i32 4, !dbg !4018
  %308 = load i8*, i8** %mvg, align 8, !dbg !4018
  %call419 = call %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo* %306, i8* %308), !dbg !4019
  br label %if.end420, !dbg !4020

if.end420:                                        ; preds = %if.then418, %if.end414
  %309 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !4021
  %call421 = call i8* @XMLTreeInfoToXML(%struct._XMLTreeInfo* %309), !dbg !4022
  store i8* %call421, i8** %xml, align 8, !dbg !4023
  %310 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !4024
  %call422 = call %struct._XMLTreeInfo* @DestroyXMLTree(%struct._XMLTreeInfo* %310), !dbg !4025
  store %struct._XMLTreeInfo* %call422, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !4026
  %311 = load i8*, i8** %xml, align 8, !dbg !4027
  store i8* %311, i8** %retval, align 8, !dbg !4028
  br label %return, !dbg !4028

return:                                           ; preds = %if.end420, %if.then3
  %312 = load i8*, i8** %retval, align 8, !dbg !4029
  ret i8* %312, !dbg !4029
}

declare dso_local %struct._XMLTreeInfo* @NewXMLTreeTag(i8*) #2

declare dso_local void @GetMagickPixelPacket(%struct._Image*, %struct._MagickPixelPacket*) #2

declare dso_local %struct._XMLTreeInfo* @AddChildToXMLTree(%struct._XMLTreeInfo*, i8*, i64) #2

declare dso_local %struct._XMLTreeInfo* @SetXMLTreeContent(%struct._XMLTreeInfo*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @SetMagickPixelPacket(%struct._Image* %image, %struct._PixelPacket* %color, i16* %index, %struct._MagickPixelPacket* %pixel) #0 !dbg !4030 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4036, metadata !DIExpression()), !dbg !4037
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !4038, metadata !DIExpression()), !dbg !4039
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !4040, metadata !DIExpression()), !dbg !4041
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !4042, metadata !DIExpression()), !dbg !4043
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !4044
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !4044
  %1 = load i16, i16* %red, align 2, !dbg !4044
  %conv = uitofp i16 %1 to float, !dbg !4045
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !4046
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !4047
  store float %conv, float* %red1, align 8, !dbg !4048
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !4049
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %3, i32 0, i32 1, !dbg !4049
  %4 = load i16, i16* %green, align 2, !dbg !4049
  %conv2 = uitofp i16 %4 to float, !dbg !4050
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !4051
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 6, !dbg !4052
  store float %conv2, float* %green3, align 4, !dbg !4053
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !4054
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !4054
  %7 = load i16, i16* %blue, align 2, !dbg !4054
  %conv4 = uitofp i16 %7 to float, !dbg !4055
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !4056
  %blue5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !4057
  store float %conv4, float* %blue5, align 8, !dbg !4058
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4059
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 6, !dbg !4061
  %10 = load i32, i32* %matte, align 8, !dbg !4061
  %cmp = icmp ne i32 %10, 0, !dbg !4062
  br i1 %cmp, label %if.then, label %if.end, !dbg !4063

if.then:                                          ; preds = %entry
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !4064
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 3, !dbg !4064
  %12 = load i16, i16* %opacity, align 2, !dbg !4064
  %conv7 = uitofp i16 %12 to float, !dbg !4065
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !4066
  %opacity8 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %13, i32 0, i32 8, !dbg !4067
  store float %conv7, float* %opacity8, align 4, !dbg !4068
  br label %if.end, !dbg !4066

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4069
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 1, !dbg !4071
  %15 = load i32, i32* %colorspace, align 4, !dbg !4071
  %cmp9 = icmp eq i32 %15, 12, !dbg !4072
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false, !dbg !4073

lor.lhs.false:                                    ; preds = %if.end
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4074
  %class = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 0, !dbg !4075
  %17 = load i32, i32* %class, align 8, !dbg !4075
  %cmp11 = icmp eq i32 %17, 2, !dbg !4076
  br i1 %cmp11, label %land.lhs.true, label %if.end21, !dbg !4077

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %18 = load i16*, i16** %index.addr, align 8, !dbg !4078
  %cmp13 = icmp ne i16* %18, null, !dbg !4079
  br i1 %cmp13, label %if.then15, label %if.end21, !dbg !4080

if.then15:                                        ; preds = %land.lhs.true
  %19 = load i16*, i16** %index.addr, align 8, !dbg !4081
  %cmp16 = icmp eq i16* %19, null, !dbg !4081
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !4081

cond.true:                                        ; preds = %if.then15
  br label %cond.end, !dbg !4081

cond.false:                                       ; preds = %if.then15
  %20 = load i16*, i16** %index.addr, align 8, !dbg !4081
  %21 = load i16, i16* %20, align 2, !dbg !4081
  %conv18 = zext i16 %21 to i32, !dbg !4081
  br label %cond.end, !dbg !4081

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv18, %cond.false ], !dbg !4081
  %conv19 = sitofp i32 %cond to float, !dbg !4082
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !4083
  %index20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 9, !dbg !4084
  store float %conv19, float* %index20, align 8, !dbg !4085
  br label %if.end21, !dbg !4083

if.end21:                                         ; preds = %cond.end, %land.lhs.true, %lor.lhs.false
  ret void, !dbg !4086
}

declare dso_local void @GetColorTuple(%struct._MagickPixelPacket*, i32, i8*) #2

declare dso_local i32 @ConcatenateString(i8**, i8*) #2

declare dso_local i8* @XMLTreeInfoToXML(%struct._XMLTreeInfo*) #2

declare dso_local %struct._XMLTreeInfo* @DestroyXMLTree(%struct._XMLTreeInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawGetTextUnderColor(%struct._DrawingWand* %wand, %struct._PixelWand* %under_color) #0 !dbg !4087 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %under_color.addr = alloca %struct._PixelWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4088, metadata !DIExpression()), !dbg !4089
  store %struct._PixelWand* %under_color, %struct._PixelWand** %under_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %under_color.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4092
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4094
  %1 = load i32, i32* %debug, align 4, !dbg !4094
  %cmp = icmp ne i32 %1, 0, !dbg !4095
  br i1 %cmp, label %if.then, label %if.end, !dbg !4096

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4097
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4098
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4097
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2723, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4099
  br label %if.end, !dbg !4100

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._PixelWand*, %struct._PixelWand** %under_color.addr, align 8, !dbg !4101
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4102
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 12, !dbg !4102
  %5 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4102
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4102
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 11, !dbg !4102
  %7 = load i64, i64* %index, align 8, !dbg !4102
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %5, i64 %7, !dbg !4102
  %8 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !4102
  %undercolor = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %8, i32 0, i32 33, !dbg !4103
  call void @PixelSetQuantumColor(%struct._PixelWand* %3, %struct._PixelPacket* %undercolor), !dbg !4104
  ret void, !dbg !4105
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawLine(%struct._DrawingWand* %wand, double %sx, double %sy, double %ex, double %ey) #0 !dbg !4106 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %sx.addr = alloca double, align 8
  %sy.addr = alloca double, align 8
  %ex.addr = alloca double, align 8
  %ey.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4107, metadata !DIExpression()), !dbg !4108
  store double %sx, double* %sx.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sx.addr, metadata !4109, metadata !DIExpression()), !dbg !4110
  store double %sy, double* %sy.addr, align 8
  call void @llvm.dbg.declare(metadata double* %sy.addr, metadata !4111, metadata !DIExpression()), !dbg !4112
  store double %ex, double* %ex.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ex.addr, metadata !4113, metadata !DIExpression()), !dbg !4114
  store double %ey, double* %ey.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ey.addr, metadata !4115, metadata !DIExpression()), !dbg !4116
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4117
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4119
  %1 = load i32, i32* %debug, align 4, !dbg !4119
  %cmp = icmp ne i32 %1, 0, !dbg !4120
  br i1 %cmp, label %if.then, label %if.end, !dbg !4121

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4122
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4123
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4122
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2765, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4124
  br label %if.end, !dbg !4125

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4126
  %4 = load double, double* %sx.addr, align 8, !dbg !4127
  %5 = load double, double* %sy.addr, align 8, !dbg !4128
  %6 = load double, double* %ex.addr, align 8, !dbg !4129
  %7 = load double, double* %ey.addr, align 8, !dbg !4130
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i64 0, i64 0), double %4, double %5, double %6, double %7), !dbg !4131
  ret void, !dbg !4132
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawMatte(%struct._DrawingWand* %wand, double %x, double %y, i32 %paint_method) #0 !dbg !4133 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  %paint_method.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4134, metadata !DIExpression()), !dbg !4135
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4136, metadata !DIExpression()), !dbg !4137
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4138, metadata !DIExpression()), !dbg !4139
  store i32 %paint_method, i32* %paint_method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %paint_method.addr, metadata !4140, metadata !DIExpression()), !dbg !4141
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4142
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4144
  %1 = load i32, i32* %debug, align 4, !dbg !4144
  %cmp = icmp ne i32 %1, 0, !dbg !4145
  br i1 %cmp, label %if.then, label %if.end, !dbg !4146

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4147
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4148
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4147
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2814, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4149
  br label %if.end, !dbg !4150

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4151
  %4 = load double, double* %x.addr, align 8, !dbg !4152
  %5 = load double, double* %y.addr, align 8, !dbg !4153
  %6 = load i32, i32* %paint_method.addr, align 4, !dbg !4154
  %conv = zext i32 %6 to i64, !dbg !4155
  %call1 = call i8* @CommandOptionToMnemonic(i32 43, i64 %conv), !dbg !4156
  %call2 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.54, i64 0, i64 0), double %4, double %5, i8* %call1), !dbg !4157
  ret void, !dbg !4158
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathClose(%struct._DrawingWand* %wand) #0 !dbg !4159 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4160, metadata !DIExpression()), !dbg !4161
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4162
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4164
  %1 = load i32, i32* %debug, align 4, !dbg !4164
  %cmp = icmp ne i32 %1, 0, !dbg !4165
  br i1 %cmp, label %if.then, label %if.end, !dbg !4166

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4167
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4168
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4167
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2849, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4169
  br label %if.end, !dbg !4170

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4171
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4172
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 16, !dbg !4173
  %5 = load i32, i32* %path_mode, align 4, !dbg !4173
  %cmp1 = icmp eq i32 %5, 1, !dbg !4174
  %6 = zext i1 %cmp1 to i64, !dbg !4172
  %cond = select i1 %cmp1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.56, i64 0, i64 0), !dbg !4172
  %call2 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %cond), !dbg !4175
  ret void, !dbg !4176
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @MvgAutoWrapPrintf(%struct._DrawingWand* %wand, i8* %format, ...) #0 !dbg !4177 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %format.addr = alloca i8*, align 8
  %buffer = alloca [4096 x i8], align 16
  %count = alloca i32, align 4
  %argp = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4178, metadata !DIExpression()), !dbg !4179
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !4180, metadata !DIExpression()), !dbg !4181
  call void @llvm.dbg.declare(metadata [4096 x i8]* %buffer, metadata !4182, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.declare(metadata i32* %count, metadata !4184, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %argp, metadata !4186, metadata !DIExpression()), !dbg !4187
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0, !dbg !4188
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !4188
  call void @llvm.va_start(i8* %arraydecay1), !dbg !4188
  %arraydecay2 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i64 0, i64 0, !dbg !4189
  %0 = load i8*, i8** %format.addr, align 8, !dbg !4190
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0, !dbg !4191
  %call = call i32 @vsnprintf(i8* %arraydecay2, i64 4095, i8* %0, %struct.__va_list_tag* %arraydecay3) #10, !dbg !4192
  store i32 %call, i32* %count, align 4, !dbg !4193
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0, !dbg !4194
  %arraydecay45 = bitcast %struct.__va_list_tag* %arraydecay4 to i8*, !dbg !4194
  call void @llvm.va_end(i8* %arraydecay45), !dbg !4194
  %arrayidx = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i64 0, i64 4095, !dbg !4195
  store i8 0, i8* %arrayidx, align 1, !dbg !4196
  %1 = load i32, i32* %count, align 4, !dbg !4197
  %cmp = icmp slt i32 %1, 0, !dbg !4199
  br i1 %cmp, label %if.then, label %if.else, !dbg !4200

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4201
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 3, !dbg !4201
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4201
  %4 = load i8*, i8** %format.addr, align 8, !dbg !4201
  %call6 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 378, i32 460, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %4), !dbg !4201
  br label %if.end17, !dbg !4201

if.else:                                          ; preds = %entry
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4202
  %mvg_width = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 7, !dbg !4205
  %6 = load i64, i64* %mvg_width, align 8, !dbg !4205
  %7 = load i32, i32* %count, align 4, !dbg !4206
  %conv = sext i32 %7 to i64, !dbg !4206
  %add = add i64 %6, %conv, !dbg !4207
  %cmp7 = icmp ugt i64 %add, 78, !dbg !4208
  br i1 %cmp7, label %land.lhs.true, label %if.end, !dbg !4209

land.lhs.true:                                    ; preds = %if.else
  %8 = load i32, i32* %count, align 4, !dbg !4210
  %sub = sub nsw i32 %8, 1, !dbg !4211
  %idxprom = sext i32 %sub to i64, !dbg !4212
  %arrayidx9 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i64 0, i64 %idxprom, !dbg !4212
  %9 = load i8, i8* %arrayidx9, align 1, !dbg !4212
  %conv10 = sext i8 %9 to i32, !dbg !4212
  %cmp11 = icmp ne i32 %conv10, 10, !dbg !4213
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !4214

if.then13:                                        ; preds = %land.lhs.true
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4215
  %call14 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !4216
  br label %if.end, !dbg !4217

if.end:                                           ; preds = %if.then13, %land.lhs.true, %if.else
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4218
  %arraydecay15 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buffer, i64 0, i64 0, !dbg !4219
  %call16 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay15), !dbg !4220
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  %12 = load i32, i32* %count, align 4, !dbg !4221
  ret i32 %12, !dbg !4222
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathCurveToAbsolute(%struct._DrawingWand* %wand, double %x1, double %y1, double %x2, double %y2, double %x, double %y) #0 !dbg !4223 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x1.addr = alloca double, align 8
  %y1.addr = alloca double, align 8
  %x2.addr = alloca double, align 8
  %y2.addr = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4224, metadata !DIExpression()), !dbg !4225
  store double %x1, double* %x1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x1.addr, metadata !4226, metadata !DIExpression()), !dbg !4227
  store double %y1, double* %y1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y1.addr, metadata !4228, metadata !DIExpression()), !dbg !4229
  store double %x2, double* %x2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x2.addr, metadata !4230, metadata !DIExpression()), !dbg !4231
  store double %y2, double* %y2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y2.addr, metadata !4232, metadata !DIExpression()), !dbg !4233
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4234, metadata !DIExpression()), !dbg !4235
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4236, metadata !DIExpression()), !dbg !4237
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4238
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4240
  %1 = load i32, i32* %debug, align 4, !dbg !4240
  %cmp = icmp ne i32 %1, 0, !dbg !4241
  br i1 %cmp, label %if.then, label %if.end, !dbg !4242

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4243
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4244
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4243
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2922, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4245
  br label %if.end, !dbg !4246

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4247
  %4 = load double, double* %x1.addr, align 8, !dbg !4248
  %5 = load double, double* %y1.addr, align 8, !dbg !4249
  %6 = load double, double* %x2.addr, align 8, !dbg !4250
  %7 = load double, double* %y2.addr, align 8, !dbg !4251
  %8 = load double, double* %x.addr, align 8, !dbg !4252
  %9 = load double, double* %y.addr, align 8, !dbg !4253
  call void @DrawPathCurveTo(%struct._DrawingWand* %3, i32 1, double %4, double %5, double %6, double %7, double %8, double %9), !dbg !4254
  ret void, !dbg !4255
}

; Function Attrs: noinline nounwind uwtable
define internal void @DrawPathCurveTo(%struct._DrawingWand* %wand, i32 %mode, double %x1, double %y1, double %x2, double %y2, double %x, double %y) #0 !dbg !4256 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %mode.addr = alloca i32, align 4
  %x1.addr = alloca double, align 8
  %y1.addr = alloca double, align 8
  %x2.addr = alloca double, align 8
  %y2.addr = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4260, metadata !DIExpression()), !dbg !4261
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4262, metadata !DIExpression()), !dbg !4263
  store double %x1, double* %x1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x1.addr, metadata !4264, metadata !DIExpression()), !dbg !4265
  store double %y1, double* %y1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y1.addr, metadata !4266, metadata !DIExpression()), !dbg !4267
  store double %x2, double* %x2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x2.addr, metadata !4268, metadata !DIExpression()), !dbg !4269
  store double %y2, double* %y2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y2.addr, metadata !4270, metadata !DIExpression()), !dbg !4271
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4272, metadata !DIExpression()), !dbg !4273
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4274, metadata !DIExpression()), !dbg !4275
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4276
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4278
  %1 = load i32, i32* %debug, align 4, !dbg !4278
  %cmp = icmp ne i32 %1, 0, !dbg !4279
  br i1 %cmp, label %if.then, label %if.end, !dbg !4280

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4281
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4282
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4281
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2902, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4283
  br label %if.end, !dbg !4284

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4285
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 15, !dbg !4287
  %4 = load i32, i32* %path_operation, align 8, !dbg !4287
  %cmp1 = icmp ne i32 %4, 2, !dbg !4288
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !4289

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4290
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 16, !dbg !4291
  %6 = load i32, i32* %path_mode, align 4, !dbg !4291
  %7 = load i32, i32* %mode.addr, align 4, !dbg !4292
  %cmp2 = icmp ne i32 %6, %7, !dbg !4293
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !4294

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4295
  %path_operation4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 15, !dbg !4297
  store i32 2, i32* %path_operation4, align 8, !dbg !4298
  %9 = load i32, i32* %mode.addr, align 4, !dbg !4299
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4300
  %path_mode5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 16, !dbg !4301
  store i32 %9, i32* %path_mode5, align 4, !dbg !4302
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4303
  %12 = load i32, i32* %mode.addr, align 4, !dbg !4304
  %cmp6 = icmp eq i32 %12, 1, !dbg !4305
  %13 = zext i1 %cmp6 to i64, !dbg !4304
  %cond = select i1 %cmp6, i32 67, i32 99, !dbg !4304
  %14 = load double, double* %x1.addr, align 8, !dbg !4306
  %15 = load double, double* %y1.addr, align 8, !dbg !4307
  %16 = load double, double* %x2.addr, align 8, !dbg !4308
  %17 = load double, double* %y2.addr, align 8, !dbg !4309
  %18 = load double, double* %x.addr, align 8, !dbg !4310
  %19 = load double, double* %y.addr, align 8, !dbg !4311
  %call7 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.128, i64 0, i64 0), i32 %cond, double %14, double %15, double %16, double %17, double %18, double %19), !dbg !4312
  br label %if.end9, !dbg !4313

if.else:                                          ; preds = %lor.lhs.false
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4314
  %21 = load double, double* %x1.addr, align 8, !dbg !4315
  %22 = load double, double* %y1.addr, align 8, !dbg !4316
  %23 = load double, double* %x2.addr, align 8, !dbg !4317
  %24 = load double, double* %y2.addr, align 8, !dbg !4318
  %25 = load double, double* %x.addr, align 8, !dbg !4319
  %26 = load double, double* %y.addr, align 8, !dbg !4320
  %call8 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %20, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.129, i64 0, i64 0), double %21, double %22, double %23, double %24, double %25, double %26), !dbg !4321
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !4322
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathCurveToRelative(%struct._DrawingWand* %wand, double %x1, double %y1, double %x2, double %y2, double %x, double %y) #0 !dbg !4323 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x1.addr = alloca double, align 8
  %y1.addr = alloca double, align 8
  %x2.addr = alloca double, align 8
  %y2.addr = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4324, metadata !DIExpression()), !dbg !4325
  store double %x1, double* %x1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x1.addr, metadata !4326, metadata !DIExpression()), !dbg !4327
  store double %y1, double* %y1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y1.addr, metadata !4328, metadata !DIExpression()), !dbg !4329
  store double %x2, double* %x2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x2.addr, metadata !4330, metadata !DIExpression()), !dbg !4331
  store double %y2, double* %y2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y2.addr, metadata !4332, metadata !DIExpression()), !dbg !4333
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4334, metadata !DIExpression()), !dbg !4335
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4336, metadata !DIExpression()), !dbg !4337
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4338
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4340
  %1 = load i32, i32* %debug, align 4, !dbg !4340
  %cmp = icmp ne i32 %1, 0, !dbg !4341
  br i1 %cmp, label %if.then, label %if.end, !dbg !4342

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4343
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4344
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4343
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2972, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4345
  br label %if.end, !dbg !4346

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4347
  %4 = load double, double* %x1.addr, align 8, !dbg !4348
  %5 = load double, double* %y1.addr, align 8, !dbg !4349
  %6 = load double, double* %x2.addr, align 8, !dbg !4350
  %7 = load double, double* %y2.addr, align 8, !dbg !4351
  %8 = load double, double* %x.addr, align 8, !dbg !4352
  %9 = load double, double* %y.addr, align 8, !dbg !4353
  call void @DrawPathCurveTo(%struct._DrawingWand* %3, i32 2, double %4, double %5, double %6, double %7, double %8, double %9), !dbg !4354
  ret void, !dbg !4355
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathCurveToQuadraticBezierAbsolute(%struct._DrawingWand* %wand, double %x1, double %y1, double %x, double %y) #0 !dbg !4356 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x1.addr = alloca double, align 8
  %y1.addr = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4357, metadata !DIExpression()), !dbg !4358
  store double %x1, double* %x1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x1.addr, metadata !4359, metadata !DIExpression()), !dbg !4360
  store double %y1, double* %y1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y1.addr, metadata !4361, metadata !DIExpression()), !dbg !4362
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4363, metadata !DIExpression()), !dbg !4364
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4365, metadata !DIExpression()), !dbg !4366
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4367
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4369
  %1 = load i32, i32* %debug, align 4, !dbg !4369
  %cmp = icmp ne i32 %1, 0, !dbg !4370
  br i1 %cmp, label %if.then, label %if.end, !dbg !4371

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4372
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4373
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4372
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3036, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4374
  br label %if.end, !dbg !4375

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4376
  %4 = load double, double* %x1.addr, align 8, !dbg !4377
  %5 = load double, double* %y1.addr, align 8, !dbg !4378
  %6 = load double, double* %x.addr, align 8, !dbg !4379
  %7 = load double, double* %y.addr, align 8, !dbg !4380
  call void @DrawPathCurveToQuadraticBezier(%struct._DrawingWand* %3, i32 1, double %4, double %5, double %6, double %7), !dbg !4381
  ret void, !dbg !4382
}

; Function Attrs: noinline nounwind uwtable
define internal void @DrawPathCurveToQuadraticBezier(%struct._DrawingWand* %wand, i32 %mode, double %x1, double %y1, double %x, double %y) #0 !dbg !4383 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %mode.addr = alloca i32, align 4
  %x1.addr = alloca double, align 8
  %y1.addr = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4386, metadata !DIExpression()), !dbg !4387
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4388, metadata !DIExpression()), !dbg !4389
  store double %x1, double* %x1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x1.addr, metadata !4390, metadata !DIExpression()), !dbg !4391
  store double %y1, double* %y1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y1.addr, metadata !4392, metadata !DIExpression()), !dbg !4393
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4394, metadata !DIExpression()), !dbg !4395
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4396, metadata !DIExpression()), !dbg !4397
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4398
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4400
  %1 = load i32, i32* %debug, align 4, !dbg !4400
  %cmp = icmp ne i32 %1, 0, !dbg !4401
  br i1 %cmp, label %if.then, label %if.end, !dbg !4402

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4403
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4404
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4403
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3017, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4405
  br label %if.end, !dbg !4406

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4407
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 15, !dbg !4409
  %4 = load i32, i32* %path_operation, align 8, !dbg !4409
  %cmp1 = icmp ne i32 %4, 3, !dbg !4410
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !4411

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4412
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 16, !dbg !4413
  %6 = load i32, i32* %path_mode, align 4, !dbg !4413
  %7 = load i32, i32* %mode.addr, align 4, !dbg !4414
  %cmp2 = icmp ne i32 %6, %7, !dbg !4415
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !4416

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4417
  %path_operation4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 15, !dbg !4419
  store i32 3, i32* %path_operation4, align 8, !dbg !4420
  %9 = load i32, i32* %mode.addr, align 4, !dbg !4421
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4422
  %path_mode5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 16, !dbg !4423
  store i32 %9, i32* %path_mode5, align 4, !dbg !4424
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4425
  %12 = load i32, i32* %mode.addr, align 4, !dbg !4426
  %cmp6 = icmp eq i32 %12, 1, !dbg !4427
  %13 = zext i1 %cmp6 to i64, !dbg !4426
  %cond = select i1 %cmp6, i32 81, i32 113, !dbg !4426
  %14 = load double, double* %x1.addr, align 8, !dbg !4428
  %15 = load double, double* %y1.addr, align 8, !dbg !4429
  %16 = load double, double* %x.addr, align 8, !dbg !4430
  %17 = load double, double* %y.addr, align 8, !dbg !4431
  %call7 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %11, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.130, i64 0, i64 0), i32 %cond, double %14, double %15, double %16, double %17), !dbg !4432
  br label %if.end9, !dbg !4433

if.else:                                          ; preds = %lor.lhs.false
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4434
  %19 = load double, double* %x1.addr, align 8, !dbg !4435
  %20 = load double, double* %y1.addr, align 8, !dbg !4436
  %21 = load double, double* %x.addr, align 8, !dbg !4437
  %22 = load double, double* %y.addr, align 8, !dbg !4438
  %call8 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.131, i64 0, i64 0), double %19, double %20, double %21, double %22), !dbg !4439
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !4440
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathCurveToQuadraticBezierRelative(%struct._DrawingWand* %wand, double %x1, double %y1, double %x, double %y) #0 !dbg !4441 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x1.addr = alloca double, align 8
  %y1.addr = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4442, metadata !DIExpression()), !dbg !4443
  store double %x1, double* %x1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x1.addr, metadata !4444, metadata !DIExpression()), !dbg !4445
  store double %y1, double* %y1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y1.addr, metadata !4446, metadata !DIExpression()), !dbg !4447
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4448, metadata !DIExpression()), !dbg !4449
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4450, metadata !DIExpression()), !dbg !4451
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4452
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4454
  %1 = load i32, i32* %debug, align 4, !dbg !4454
  %cmp = icmp ne i32 %1, 0, !dbg !4455
  br i1 %cmp, label %if.then, label %if.end, !dbg !4456

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4457
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4458
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4457
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3080, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4459
  br label %if.end, !dbg !4460

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4461
  %4 = load double, double* %x1.addr, align 8, !dbg !4462
  %5 = load double, double* %y1.addr, align 8, !dbg !4463
  %6 = load double, double* %x.addr, align 8, !dbg !4464
  %7 = load double, double* %y.addr, align 8, !dbg !4465
  call void @DrawPathCurveToQuadraticBezier(%struct._DrawingWand* %3, i32 2, double %4, double %5, double %6, double %7), !dbg !4466
  ret void, !dbg !4467
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathCurveToQuadraticBezierSmoothAbsolute(%struct._DrawingWand* %wand, double %x, double %y) #0 !dbg !4468 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4471, metadata !DIExpression()), !dbg !4472
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4473, metadata !DIExpression()), !dbg !4474
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4475, metadata !DIExpression()), !dbg !4476
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4477
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4479
  %1 = load i32, i32* %debug, align 4, !dbg !4479
  %cmp = icmp ne i32 %1, 0, !dbg !4480
  br i1 %cmp, label %if.then, label %if.end, !dbg !4481

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4482
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4483
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4482
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3148, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4484
  br label %if.end, !dbg !4485

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4486
  %4 = load double, double* %x.addr, align 8, !dbg !4487
  %5 = load double, double* %y.addr, align 8, !dbg !4488
  call void @DrawPathCurveToQuadraticBezierSmooth(%struct._DrawingWand* %3, i32 1, double %4, double %5), !dbg !4489
  ret void, !dbg !4490
}

; Function Attrs: noinline nounwind uwtable
define internal void @DrawPathCurveToQuadraticBezierSmooth(%struct._DrawingWand* %wand, i32 %mode, double %x, double %y) #0 !dbg !4491 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %mode.addr = alloca i32, align 4
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4494, metadata !DIExpression()), !dbg !4495
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4496, metadata !DIExpression()), !dbg !4497
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4498, metadata !DIExpression()), !dbg !4499
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4500, metadata !DIExpression()), !dbg !4501
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4502
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4504
  %1 = load i32, i32* %debug, align 4, !dbg !4504
  %cmp = icmp ne i32 %1, 0, !dbg !4505
  br i1 %cmp, label %if.then, label %if.end, !dbg !4506

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4507
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4508
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4507
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3129, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4509
  br label %if.end, !dbg !4510

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4511
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 15, !dbg !4513
  %4 = load i32, i32* %path_operation, align 8, !dbg !4513
  %cmp1 = icmp ne i32 %4, 4, !dbg !4514
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !4515

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4516
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 16, !dbg !4517
  %6 = load i32, i32* %path_mode, align 4, !dbg !4517
  %7 = load i32, i32* %mode.addr, align 4, !dbg !4518
  %cmp2 = icmp ne i32 %6, %7, !dbg !4519
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !4520

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4521
  %path_operation4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 15, !dbg !4523
  store i32 4, i32* %path_operation4, align 8, !dbg !4524
  %9 = load i32, i32* %mode.addr, align 4, !dbg !4525
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4526
  %path_mode5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 16, !dbg !4527
  store i32 %9, i32* %path_mode5, align 4, !dbg !4528
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4529
  %12 = load i32, i32* %mode.addr, align 4, !dbg !4530
  %cmp6 = icmp eq i32 %12, 1, !dbg !4531
  %13 = zext i1 %cmp6 to i64, !dbg !4530
  %cond = select i1 %cmp6, i32 84, i32 116, !dbg !4530
  %14 = load double, double* %x.addr, align 8, !dbg !4532
  %15 = load double, double* %y.addr, align 8, !dbg !4533
  %call7 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.132, i64 0, i64 0), i32 %cond, double %14, double %15), !dbg !4534
  br label %if.end9, !dbg !4535

if.else:                                          ; preds = %lor.lhs.false
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4536
  %17 = load double, double* %x.addr, align 8, !dbg !4537
  %18 = load double, double* %y.addr, align 8, !dbg !4538
  %call8 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.127, i64 0, i64 0), double %17, double %18), !dbg !4539
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !4540
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathCurveToQuadraticBezierSmoothRelative(%struct._DrawingWand* %wand, double %x, double %y) #0 !dbg !4541 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4542, metadata !DIExpression()), !dbg !4543
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4544, metadata !DIExpression()), !dbg !4545
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4546, metadata !DIExpression()), !dbg !4547
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4548
  %1 = load double, double* %x.addr, align 8, !dbg !4549
  %2 = load double, double* %y.addr, align 8, !dbg !4550
  call void @DrawPathCurveToQuadraticBezierSmooth(%struct._DrawingWand* %0, i32 2, double %1, double %2), !dbg !4551
  ret void, !dbg !4552
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathCurveToSmoothAbsolute(%struct._DrawingWand* %wand, double %x2, double %y2, double %x, double %y) #0 !dbg !4553 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x2.addr = alloca double, align 8
  %y2.addr = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4554, metadata !DIExpression()), !dbg !4555
  store double %x2, double* %x2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x2.addr, metadata !4556, metadata !DIExpression()), !dbg !4557
  store double %y2, double* %y2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y2.addr, metadata !4558, metadata !DIExpression()), !dbg !4559
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4560, metadata !DIExpression()), !dbg !4561
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4562, metadata !DIExpression()), !dbg !4563
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4564
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4566
  %1 = load i32, i32* %debug, align 4, !dbg !4566
  %cmp = icmp ne i32 %1, 0, !dbg !4567
  br i1 %cmp, label %if.then, label %if.end, !dbg !4568

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4569
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4570
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4569
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3262, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4571
  br label %if.end, !dbg !4572

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4573
  %4 = load double, double* %x2.addr, align 8, !dbg !4574
  %5 = load double, double* %y2.addr, align 8, !dbg !4575
  %6 = load double, double* %x.addr, align 8, !dbg !4576
  %7 = load double, double* %y.addr, align 8, !dbg !4577
  call void @DrawPathCurveToSmooth(%struct._DrawingWand* %3, i32 1, double %4, double %5, double %6, double %7), !dbg !4578
  ret void, !dbg !4579
}

; Function Attrs: noinline nounwind uwtable
define internal void @DrawPathCurveToSmooth(%struct._DrawingWand* %wand, i32 %mode, double %x2, double %y2, double %x, double %y) #0 !dbg !4580 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %mode.addr = alloca i32, align 4
  %x2.addr = alloca double, align 8
  %y2.addr = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4583, metadata !DIExpression()), !dbg !4584
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4585, metadata !DIExpression()), !dbg !4586
  store double %x2, double* %x2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x2.addr, metadata !4587, metadata !DIExpression()), !dbg !4588
  store double %y2, double* %y2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y2.addr, metadata !4589, metadata !DIExpression()), !dbg !4590
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4591, metadata !DIExpression()), !dbg !4592
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4593, metadata !DIExpression()), !dbg !4594
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4595
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4597
  %1 = load i32, i32* %debug, align 4, !dbg !4597
  %cmp = icmp ne i32 %1, 0, !dbg !4598
  br i1 %cmp, label %if.then, label %if.end, !dbg !4599

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4600
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4601
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4600
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3243, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4602
  br label %if.end, !dbg !4603

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4604
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 15, !dbg !4606
  %4 = load i32, i32* %path_operation, align 8, !dbg !4606
  %cmp1 = icmp ne i32 %4, 5, !dbg !4607
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !4608

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4609
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 16, !dbg !4610
  %6 = load i32, i32* %path_mode, align 4, !dbg !4610
  %7 = load i32, i32* %mode.addr, align 4, !dbg !4611
  %cmp2 = icmp ne i32 %6, %7, !dbg !4612
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !4613

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4614
  %path_operation4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 15, !dbg !4616
  store i32 5, i32* %path_operation4, align 8, !dbg !4617
  %9 = load i32, i32* %mode.addr, align 4, !dbg !4618
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4619
  %path_mode5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 16, !dbg !4620
  store i32 %9, i32* %path_mode5, align 4, !dbg !4621
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4622
  %12 = load i32, i32* %mode.addr, align 4, !dbg !4623
  %cmp6 = icmp eq i32 %12, 1, !dbg !4624
  %13 = zext i1 %cmp6 to i64, !dbg !4623
  %cond = select i1 %cmp6, i32 83, i32 115, !dbg !4623
  %14 = load double, double* %x2.addr, align 8, !dbg !4625
  %15 = load double, double* %y2.addr, align 8, !dbg !4626
  %16 = load double, double* %x.addr, align 8, !dbg !4627
  %17 = load double, double* %y.addr, align 8, !dbg !4628
  %call7 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %11, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.130, i64 0, i64 0), i32 %cond, double %14, double %15, double %16, double %17), !dbg !4629
  br label %if.end9, !dbg !4630

if.else:                                          ; preds = %lor.lhs.false
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4631
  %19 = load double, double* %x2.addr, align 8, !dbg !4632
  %20 = load double, double* %y2.addr, align 8, !dbg !4633
  %21 = load double, double* %x.addr, align 8, !dbg !4634
  %22 = load double, double* %y.addr, align 8, !dbg !4635
  %call8 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.131, i64 0, i64 0), double %19, double %20, double %21, double %22), !dbg !4636
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !4637
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathCurveToSmoothRelative(%struct._DrawingWand* %wand, double %x2, double %y2, double %x, double %y) #0 !dbg !4638 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x2.addr = alloca double, align 8
  %y2.addr = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4639, metadata !DIExpression()), !dbg !4640
  store double %x2, double* %x2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x2.addr, metadata !4641, metadata !DIExpression()), !dbg !4642
  store double %y2, double* %y2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y2.addr, metadata !4643, metadata !DIExpression()), !dbg !4644
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4645, metadata !DIExpression()), !dbg !4646
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4647, metadata !DIExpression()), !dbg !4648
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4649
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4651
  %1 = load i32, i32* %debug, align 4, !dbg !4651
  %cmp = icmp ne i32 %1, 0, !dbg !4652
  br i1 %cmp, label %if.then, label %if.end, !dbg !4653

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4654
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4655
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4654
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3312, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4656
  br label %if.end, !dbg !4657

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4658
  %4 = load double, double* %x2.addr, align 8, !dbg !4659
  %5 = load double, double* %y2.addr, align 8, !dbg !4660
  %6 = load double, double* %x.addr, align 8, !dbg !4661
  %7 = load double, double* %y.addr, align 8, !dbg !4662
  call void @DrawPathCurveToSmooth(%struct._DrawingWand* %3, i32 2, double %4, double %5, double %6, double %7), !dbg !4663
  ret void, !dbg !4664
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathEllipticArcAbsolute(%struct._DrawingWand* %wand, double %rx, double %ry, double %x_axis_rotation, i32 %large_arc_flag, i32 %sweep_flag, double %x, double %y) #0 !dbg !4665 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %rx.addr = alloca double, align 8
  %ry.addr = alloca double, align 8
  %x_axis_rotation.addr = alloca double, align 8
  %large_arc_flag.addr = alloca i32, align 4
  %sweep_flag.addr = alloca i32, align 4
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4669, metadata !DIExpression()), !dbg !4670
  store double %rx, double* %rx.addr, align 8
  call void @llvm.dbg.declare(metadata double* %rx.addr, metadata !4671, metadata !DIExpression()), !dbg !4672
  store double %ry, double* %ry.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ry.addr, metadata !4673, metadata !DIExpression()), !dbg !4674
  store double %x_axis_rotation, double* %x_axis_rotation.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x_axis_rotation.addr, metadata !4675, metadata !DIExpression()), !dbg !4676
  store i32 %large_arc_flag, i32* %large_arc_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %large_arc_flag.addr, metadata !4677, metadata !DIExpression()), !dbg !4678
  store i32 %sweep_flag, i32* %sweep_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sweep_flag.addr, metadata !4679, metadata !DIExpression()), !dbg !4680
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4681, metadata !DIExpression()), !dbg !4682
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4683, metadata !DIExpression()), !dbg !4684
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4685
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4687
  %1 = load i32, i32* %debug, align 4, !dbg !4687
  %cmp = icmp ne i32 %1, 0, !dbg !4688
  br i1 %cmp, label %if.then, label %if.end, !dbg !4689

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4690
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4691
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4690
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3396, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4692
  br label %if.end, !dbg !4693

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4694
  %4 = load double, double* %rx.addr, align 8, !dbg !4695
  %5 = load double, double* %ry.addr, align 8, !dbg !4696
  %6 = load double, double* %x_axis_rotation.addr, align 8, !dbg !4697
  %7 = load i32, i32* %large_arc_flag.addr, align 4, !dbg !4698
  %8 = load i32, i32* %sweep_flag.addr, align 4, !dbg !4699
  %9 = load double, double* %x.addr, align 8, !dbg !4700
  %10 = load double, double* %y.addr, align 8, !dbg !4701
  call void @DrawPathEllipticArc(%struct._DrawingWand* %3, i32 1, double %4, double %5, double %6, i32 %7, i32 %8, double %9, double %10), !dbg !4702
  ret void, !dbg !4703
}

; Function Attrs: noinline nounwind uwtable
define internal void @DrawPathEllipticArc(%struct._DrawingWand* %wand, i32 %mode, double %rx, double %ry, double %x_axis_rotation, i32 %large_arc_flag, i32 %sweep_flag, double %x, double %y) #0 !dbg !4704 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %mode.addr = alloca i32, align 4
  %rx.addr = alloca double, align 8
  %ry.addr = alloca double, align 8
  %x_axis_rotation.addr = alloca double, align 8
  %large_arc_flag.addr = alloca i32, align 4
  %sweep_flag.addr = alloca i32, align 4
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4707, metadata !DIExpression()), !dbg !4708
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4709, metadata !DIExpression()), !dbg !4710
  store double %rx, double* %rx.addr, align 8
  call void @llvm.dbg.declare(metadata double* %rx.addr, metadata !4711, metadata !DIExpression()), !dbg !4712
  store double %ry, double* %ry.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ry.addr, metadata !4713, metadata !DIExpression()), !dbg !4714
  store double %x_axis_rotation, double* %x_axis_rotation.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x_axis_rotation.addr, metadata !4715, metadata !DIExpression()), !dbg !4716
  store i32 %large_arc_flag, i32* %large_arc_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %large_arc_flag.addr, metadata !4717, metadata !DIExpression()), !dbg !4718
  store i32 %sweep_flag, i32* %sweep_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sweep_flag.addr, metadata !4719, metadata !DIExpression()), !dbg !4720
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4721, metadata !DIExpression()), !dbg !4722
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4723, metadata !DIExpression()), !dbg !4724
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4725
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4727
  %1 = load i32, i32* %debug, align 4, !dbg !4727
  %cmp = icmp ne i32 %1, 0, !dbg !4728
  br i1 %cmp, label %if.then, label %if.end, !dbg !4729

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4730
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4731
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4730
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3373, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4732
  br label %if.end, !dbg !4733

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4734
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 15, !dbg !4736
  %4 = load i32, i32* %path_operation, align 8, !dbg !4736
  %cmp1 = icmp ne i32 %4, 6, !dbg !4737
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !4738

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4739
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 16, !dbg !4740
  %6 = load i32, i32* %path_mode, align 4, !dbg !4740
  %7 = load i32, i32* %mode.addr, align 4, !dbg !4741
  %cmp2 = icmp ne i32 %6, %7, !dbg !4742
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !4743

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4744
  %path_operation4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 15, !dbg !4746
  store i32 6, i32* %path_operation4, align 8, !dbg !4747
  %9 = load i32, i32* %mode.addr, align 4, !dbg !4748
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4749
  %path_mode5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 16, !dbg !4750
  store i32 %9, i32* %path_mode5, align 4, !dbg !4751
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4752
  %12 = load i32, i32* %mode.addr, align 4, !dbg !4753
  %cmp6 = icmp eq i32 %12, 1, !dbg !4754
  %13 = zext i1 %cmp6 to i64, !dbg !4753
  %cond = select i1 %cmp6, i32 65, i32 97, !dbg !4753
  %14 = load double, double* %rx.addr, align 8, !dbg !4755
  %15 = load double, double* %ry.addr, align 8, !dbg !4756
  %16 = load double, double* %x_axis_rotation.addr, align 8, !dbg !4757
  %17 = load i32, i32* %large_arc_flag.addr, align 4, !dbg !4758
  %18 = load i32, i32* %sweep_flag.addr, align 4, !dbg !4759
  %19 = load double, double* %x.addr, align 8, !dbg !4760
  %20 = load double, double* %y.addr, align 8, !dbg !4761
  %call7 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.133, i64 0, i64 0), i32 %cond, double %14, double %15, double %16, i32 %17, i32 %18, double %19, double %20), !dbg !4762
  br label %if.end9, !dbg !4763

if.else:                                          ; preds = %lor.lhs.false
  %21 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4764
  %22 = load double, double* %rx.addr, align 8, !dbg !4765
  %23 = load double, double* %ry.addr, align 8, !dbg !4766
  %24 = load double, double* %x_axis_rotation.addr, align 8, !dbg !4767
  %25 = load i32, i32* %large_arc_flag.addr, align 4, !dbg !4768
  %26 = load i32, i32* %sweep_flag.addr, align 4, !dbg !4769
  %27 = load double, double* %x.addr, align 8, !dbg !4770
  %28 = load double, double* %y.addr, align 8, !dbg !4771
  %call8 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %21, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.134, i64 0, i64 0), double %22, double %23, double %24, i32 %25, i32 %26, double %27, double %28), !dbg !4772
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !4773
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathEllipticArcRelative(%struct._DrawingWand* %wand, double %rx, double %ry, double %x_axis_rotation, i32 %large_arc_flag, i32 %sweep_flag, double %x, double %y) #0 !dbg !4774 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %rx.addr = alloca double, align 8
  %ry.addr = alloca double, align 8
  %x_axis_rotation.addr = alloca double, align 8
  %large_arc_flag.addr = alloca i32, align 4
  %sweep_flag.addr = alloca i32, align 4
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4775, metadata !DIExpression()), !dbg !4776
  store double %rx, double* %rx.addr, align 8
  call void @llvm.dbg.declare(metadata double* %rx.addr, metadata !4777, metadata !DIExpression()), !dbg !4778
  store double %ry, double* %ry.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ry.addr, metadata !4779, metadata !DIExpression()), !dbg !4780
  store double %x_axis_rotation, double* %x_axis_rotation.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x_axis_rotation.addr, metadata !4781, metadata !DIExpression()), !dbg !4782
  store i32 %large_arc_flag, i32* %large_arc_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %large_arc_flag.addr, metadata !4783, metadata !DIExpression()), !dbg !4784
  store i32 %sweep_flag, i32* %sweep_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sweep_flag.addr, metadata !4785, metadata !DIExpression()), !dbg !4786
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4787, metadata !DIExpression()), !dbg !4788
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4789, metadata !DIExpression()), !dbg !4790
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4791
  %1 = load double, double* %rx.addr, align 8, !dbg !4792
  %2 = load double, double* %ry.addr, align 8, !dbg !4793
  %3 = load double, double* %x_axis_rotation.addr, align 8, !dbg !4794
  %4 = load i32, i32* %large_arc_flag.addr, align 4, !dbg !4795
  %5 = load i32, i32* %sweep_flag.addr, align 4, !dbg !4796
  %6 = load double, double* %x.addr, align 8, !dbg !4797
  %7 = load double, double* %y.addr, align 8, !dbg !4798
  call void @DrawPathEllipticArc(%struct._DrawingWand* %0, i32 2, double %1, double %2, double %3, i32 %4, i32 %5, double %6, double %7), !dbg !4799
  ret void, !dbg !4800
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathFinish(%struct._DrawingWand* %wand) #0 !dbg !4801 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4802, metadata !DIExpression()), !dbg !4803
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4804
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4806
  %1 = load i32, i32* %debug, align 4, !dbg !4806
  %cmp = icmp ne i32 %1, 0, !dbg !4807
  br i1 %cmp, label %if.then, label %if.end, !dbg !4808

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4809
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4810
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4809
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3484, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4811
  br label %if.end, !dbg !4812

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4813
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)), !dbg !4814
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4815
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 15, !dbg !4816
  store i32 0, i32* %path_operation, align 8, !dbg !4817
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4818
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 16, !dbg !4819
  store i32 0, i32* %path_mode, align 4, !dbg !4820
  ret void, !dbg !4821
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathLineToAbsolute(%struct._DrawingWand* %wand, double %x, double %y) #0 !dbg !4822 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4823, metadata !DIExpression()), !dbg !4824
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4825, metadata !DIExpression()), !dbg !4826
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4827, metadata !DIExpression()), !dbg !4828
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4829
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4831
  %1 = load i32, i32* %debug, align 4, !dbg !4831
  %cmp = icmp ne i32 %1, 0, !dbg !4832
  br i1 %cmp, label %if.then, label %if.end, !dbg !4833

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4834
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4835
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4834
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3544, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4836
  br label %if.end, !dbg !4837

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4838
  %4 = load double, double* %x.addr, align 8, !dbg !4839
  %5 = load double, double* %y.addr, align 8, !dbg !4840
  call void @DrawPathLineTo(%struct._DrawingWand* %3, i32 1, double %4, double %5), !dbg !4841
  ret void, !dbg !4842
}

; Function Attrs: noinline nounwind uwtable
define internal void @DrawPathLineTo(%struct._DrawingWand* %wand, i32 %mode, double %x, double %y) #0 !dbg !4843 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %mode.addr = alloca i32, align 4
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4844, metadata !DIExpression()), !dbg !4845
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4846, metadata !DIExpression()), !dbg !4847
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4848, metadata !DIExpression()), !dbg !4849
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4850, metadata !DIExpression()), !dbg !4851
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4852
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4854
  %1 = load i32, i32* %debug, align 4, !dbg !4854
  %cmp = icmp ne i32 %1, 0, !dbg !4855
  br i1 %cmp, label %if.then, label %if.end, !dbg !4856

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4857
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4858
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4857
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3525, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4859
  br label %if.end, !dbg !4860

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4861
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 15, !dbg !4863
  %4 = load i32, i32* %path_operation, align 8, !dbg !4863
  %cmp1 = icmp ne i32 %4, 8, !dbg !4864
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !4865

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4866
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 16, !dbg !4867
  %6 = load i32, i32* %path_mode, align 4, !dbg !4867
  %7 = load i32, i32* %mode.addr, align 4, !dbg !4868
  %cmp2 = icmp ne i32 %6, %7, !dbg !4869
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !4870

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4871
  %path_operation4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 15, !dbg !4873
  store i32 8, i32* %path_operation4, align 8, !dbg !4874
  %9 = load i32, i32* %mode.addr, align 4, !dbg !4875
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4876
  %path_mode5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 16, !dbg !4877
  store i32 %9, i32* %path_mode5, align 4, !dbg !4878
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4879
  %12 = load i32, i32* %mode.addr, align 4, !dbg !4880
  %cmp6 = icmp eq i32 %12, 1, !dbg !4881
  %13 = zext i1 %cmp6 to i64, !dbg !4880
  %cond = select i1 %cmp6, i32 76, i32 108, !dbg !4880
  %14 = load double, double* %x.addr, align 8, !dbg !4882
  %15 = load double, double* %y.addr, align 8, !dbg !4883
  %call7 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.132, i64 0, i64 0), i32 %cond, double %14, double %15), !dbg !4884
  br label %if.end9, !dbg !4885

if.else:                                          ; preds = %lor.lhs.false
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4886
  %17 = load double, double* %x.addr, align 8, !dbg !4887
  %18 = load double, double* %y.addr, align 8, !dbg !4888
  %call8 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.127, i64 0, i64 0), double %17, double %18), !dbg !4889
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !4890
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathLineToRelative(%struct._DrawingWand* %wand, double %x, double %y) #0 !dbg !4891 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4892, metadata !DIExpression()), !dbg !4893
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4894, metadata !DIExpression()), !dbg !4895
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4896, metadata !DIExpression()), !dbg !4897
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4898
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4900
  %1 = load i32, i32* %debug, align 4, !dbg !4900
  %cmp = icmp ne i32 %1, 0, !dbg !4901
  br i1 %cmp, label %if.then, label %if.end, !dbg !4902

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4903
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4904
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4903
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3583, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4905
  br label %if.end, !dbg !4906

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4907
  %4 = load double, double* %x.addr, align 8, !dbg !4908
  %5 = load double, double* %y.addr, align 8, !dbg !4909
  call void @DrawPathLineTo(%struct._DrawingWand* %3, i32 2, double %4, double %5), !dbg !4910
  ret void, !dbg !4911
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathLineToHorizontalAbsolute(%struct._DrawingWand* %wand, double %x) #0 !dbg !4912 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4915, metadata !DIExpression()), !dbg !4916
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4917, metadata !DIExpression()), !dbg !4918
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4919
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4921
  %1 = load i32, i32* %debug, align 4, !dbg !4921
  %cmp = icmp ne i32 %1, 0, !dbg !4922
  br i1 %cmp, label %if.then, label %if.end, !dbg !4923

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4924
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4925
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4924
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3640, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4926
  br label %if.end, !dbg !4927

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4928
  %4 = load double, double* %x.addr, align 8, !dbg !4929
  call void @DrawPathLineToHorizontal(%struct._DrawingWand* %3, i32 1, double %4), !dbg !4930
  ret void, !dbg !4931
}

; Function Attrs: noinline nounwind uwtable
define internal void @DrawPathLineToHorizontal(%struct._DrawingWand* %wand, i32 %mode, double %x) #0 !dbg !4932 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %mode.addr = alloca i32, align 4
  %x.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4935, metadata !DIExpression()), !dbg !4936
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4937, metadata !DIExpression()), !dbg !4938
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4939, metadata !DIExpression()), !dbg !4940
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4941
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4943
  %1 = load i32, i32* %debug, align 4, !dbg !4943
  %cmp = icmp ne i32 %1, 0, !dbg !4944
  br i1 %cmp, label %if.then, label %if.end, !dbg !4945

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4946
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4947
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4946
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3621, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4948
  br label %if.end, !dbg !4949

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4950
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 15, !dbg !4952
  %4 = load i32, i32* %path_operation, align 8, !dbg !4952
  %cmp1 = icmp ne i32 %4, 7, !dbg !4953
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !4954

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4955
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 16, !dbg !4956
  %6 = load i32, i32* %path_mode, align 4, !dbg !4956
  %7 = load i32, i32* %mode.addr, align 4, !dbg !4957
  %cmp2 = icmp ne i32 %6, %7, !dbg !4958
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !4959

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4960
  %path_operation4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 15, !dbg !4962
  store i32 7, i32* %path_operation4, align 8, !dbg !4963
  %9 = load i32, i32* %mode.addr, align 4, !dbg !4964
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4965
  %path_mode5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 16, !dbg !4966
  store i32 %9, i32* %path_mode5, align 4, !dbg !4967
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4968
  %12 = load i32, i32* %mode.addr, align 4, !dbg !4969
  %cmp6 = icmp eq i32 %12, 1, !dbg !4970
  %13 = zext i1 %cmp6 to i64, !dbg !4969
  %cond = select i1 %cmp6, i32 72, i32 104, !dbg !4969
  %14 = load double, double* %x.addr, align 8, !dbg !4971
  %call7 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.135, i64 0, i64 0), i32 %cond, double %14), !dbg !4972
  br label %if.end9, !dbg !4973

if.else:                                          ; preds = %lor.lhs.false
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4974
  %16 = load double, double* %x.addr, align 8, !dbg !4975
  %call8 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i64 0, i64 0), double %16), !dbg !4976
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !4977
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathLineToHorizontalRelative(%struct._DrawingWand* %wand, double %x) #0 !dbg !4978 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4979, metadata !DIExpression()), !dbg !4980
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4981, metadata !DIExpression()), !dbg !4982
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4983
  %1 = load double, double* %x.addr, align 8, !dbg !4984
  call void @DrawPathLineToHorizontal(%struct._DrawingWand* %0, i32 2, double %1), !dbg !4985
  ret void, !dbg !4986
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathLineToVerticalAbsolute(%struct._DrawingWand* %wand, double %y) #0 !dbg !4987 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !4988, metadata !DIExpression()), !dbg !4989
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4990, metadata !DIExpression()), !dbg !4991
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4992
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !4994
  %1 = load i32, i32* %debug, align 4, !dbg !4994
  %cmp = icmp ne i32 %1, 0, !dbg !4995
  br i1 %cmp, label %if.then, label %if.end, !dbg !4996

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !4997
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !4998
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4997
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3729, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4999
  br label %if.end, !dbg !5000

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5001
  %4 = load double, double* %y.addr, align 8, !dbg !5002
  call void @DrawPathLineToVertical(%struct._DrawingWand* %3, i32 1, double %4), !dbg !5003
  ret void, !dbg !5004
}

; Function Attrs: noinline nounwind uwtable
define internal void @DrawPathLineToVertical(%struct._DrawingWand* %wand, i32 %mode, double %y) #0 !dbg !5005 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %mode.addr = alloca i32, align 4
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5006, metadata !DIExpression()), !dbg !5007
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5008, metadata !DIExpression()), !dbg !5009
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !5010, metadata !DIExpression()), !dbg !5011
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5012
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5014
  %1 = load i32, i32* %debug, align 4, !dbg !5014
  %cmp = icmp ne i32 %1, 0, !dbg !5015
  br i1 %cmp, label %if.then, label %if.end, !dbg !5016

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5017
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5018
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5017
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3711, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5019
  br label %if.end, !dbg !5020

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5021
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 15, !dbg !5023
  %4 = load i32, i32* %path_operation, align 8, !dbg !5023
  %cmp1 = icmp ne i32 %4, 9, !dbg !5024
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !5025

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5026
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 16, !dbg !5027
  %6 = load i32, i32* %path_mode, align 4, !dbg !5027
  %7 = load i32, i32* %mode.addr, align 4, !dbg !5028
  %cmp2 = icmp ne i32 %6, %7, !dbg !5029
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !5030

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5031
  %path_operation4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 15, !dbg !5033
  store i32 9, i32* %path_operation4, align 8, !dbg !5034
  %9 = load i32, i32* %mode.addr, align 4, !dbg !5035
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5036
  %path_mode5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 16, !dbg !5037
  store i32 %9, i32* %path_mode5, align 4, !dbg !5038
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5039
  %12 = load i32, i32* %mode.addr, align 4, !dbg !5040
  %cmp6 = icmp eq i32 %12, 1, !dbg !5041
  %13 = zext i1 %cmp6 to i64, !dbg !5040
  %cond = select i1 %cmp6, i32 86, i32 118, !dbg !5040
  %14 = load double, double* %y.addr, align 8, !dbg !5042
  %call7 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.135, i64 0, i64 0), i32 %cond, double %14), !dbg !5043
  br label %if.end9, !dbg !5044

if.else:                                          ; preds = %lor.lhs.false
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5045
  %16 = load double, double* %y.addr, align 8, !dbg !5046
  %call8 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i64 0, i64 0), double %16), !dbg !5047
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !5048
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathLineToVerticalRelative(%struct._DrawingWand* %wand, double %y) #0 !dbg !5049 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5050, metadata !DIExpression()), !dbg !5051
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !5052, metadata !DIExpression()), !dbg !5053
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5054
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5056
  %1 = load i32, i32* %debug, align 4, !dbg !5056
  %cmp = icmp ne i32 %1, 0, !dbg !5057
  br i1 %cmp, label %if.then, label %if.end, !dbg !5058

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5059
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5060
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5059
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3765, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5061
  br label %if.end, !dbg !5062

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5063
  %4 = load double, double* %y.addr, align 8, !dbg !5064
  call void @DrawPathLineToVertical(%struct._DrawingWand* %3, i32 2, double %4), !dbg !5065
  ret void, !dbg !5066
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathMoveToAbsolute(%struct._DrawingWand* %wand, double %x, double %y) #0 !dbg !5067 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5068, metadata !DIExpression()), !dbg !5069
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !5070, metadata !DIExpression()), !dbg !5071
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !5072, metadata !DIExpression()), !dbg !5073
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5074
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5076
  %1 = load i32, i32* %debug, align 4, !dbg !5076
  %cmp = icmp ne i32 %1, 0, !dbg !5077
  br i1 %cmp, label %if.then, label %if.end, !dbg !5078

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5079
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5080
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5079
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3823, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5081
  br label %if.end, !dbg !5082

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5083
  %4 = load double, double* %x.addr, align 8, !dbg !5084
  %5 = load double, double* %y.addr, align 8, !dbg !5085
  call void @DrawPathMoveTo(%struct._DrawingWand* %3, i32 1, double %4, double %5), !dbg !5086
  ret void, !dbg !5087
}

; Function Attrs: noinline nounwind uwtable
define internal void @DrawPathMoveTo(%struct._DrawingWand* %wand, i32 %mode, double %x, double %y) #0 !dbg !5088 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %mode.addr = alloca i32, align 4
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5089, metadata !DIExpression()), !dbg !5090
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5091, metadata !DIExpression()), !dbg !5092
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !5093, metadata !DIExpression()), !dbg !5094
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !5095, metadata !DIExpression()), !dbg !5096
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5097
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5099
  %1 = load i32, i32* %debug, align 4, !dbg !5099
  %cmp = icmp ne i32 %1, 0, !dbg !5100
  br i1 %cmp, label %if.then, label %if.end, !dbg !5101

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5102
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5103
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5102
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3804, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5104
  br label %if.end, !dbg !5105

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5106
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 15, !dbg !5108
  %4 = load i32, i32* %path_operation, align 8, !dbg !5108
  %cmp1 = icmp ne i32 %4, 10, !dbg !5109
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !5110

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5111
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 16, !dbg !5112
  %6 = load i32, i32* %path_mode, align 4, !dbg !5112
  %7 = load i32, i32* %mode.addr, align 4, !dbg !5113
  %cmp2 = icmp ne i32 %6, %7, !dbg !5114
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !5115

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5116
  %path_operation4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 15, !dbg !5118
  store i32 10, i32* %path_operation4, align 8, !dbg !5119
  %9 = load i32, i32* %mode.addr, align 4, !dbg !5120
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5121
  %path_mode5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 16, !dbg !5122
  store i32 %9, i32* %path_mode5, align 4, !dbg !5123
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5124
  %12 = load i32, i32* %mode.addr, align 4, !dbg !5125
  %cmp6 = icmp eq i32 %12, 1, !dbg !5126
  %13 = zext i1 %cmp6 to i64, !dbg !5125
  %cond = select i1 %cmp6, i32 77, i32 109, !dbg !5125
  %14 = load double, double* %x.addr, align 8, !dbg !5127
  %15 = load double, double* %y.addr, align 8, !dbg !5128
  %call7 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.132, i64 0, i64 0), i32 %cond, double %14, double %15), !dbg !5129
  br label %if.end9, !dbg !5130

if.else:                                          ; preds = %lor.lhs.false
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5131
  %17 = load double, double* %x.addr, align 8, !dbg !5132
  %18 = load double, double* %y.addr, align 8, !dbg !5133
  %call8 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgAutoWrapPrintf(%struct._DrawingWand* %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.127, i64 0, i64 0), double %17, double %18), !dbg !5134
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then3
  ret void, !dbg !5135
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathMoveToRelative(%struct._DrawingWand* %wand, double %x, double %y) #0 !dbg !5136 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5137, metadata !DIExpression()), !dbg !5138
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !5139, metadata !DIExpression()), !dbg !5140
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !5141, metadata !DIExpression()), !dbg !5142
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5143
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5145
  %1 = load i32, i32* %debug, align 4, !dbg !5145
  %cmp = icmp ne i32 %1, 0, !dbg !5146
  br i1 %cmp, label %if.then, label %if.end, !dbg !5147

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5148
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5149
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5148
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3862, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5150
  br label %if.end, !dbg !5151

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5152
  %4 = load double, double* %x.addr, align 8, !dbg !5153
  %5 = load double, double* %y.addr, align 8, !dbg !5154
  call void @DrawPathMoveTo(%struct._DrawingWand* %3, i32 2, double %4, double %5), !dbg !5155
  ret void, !dbg !5156
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPathStart(%struct._DrawingWand* %wand) #0 !dbg !5157 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5158, metadata !DIExpression()), !dbg !5159
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5160
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5162
  %1 = load i32, i32* %debug, align 4, !dbg !5162
  %cmp = icmp ne i32 %1, 0, !dbg !5163
  br i1 %cmp, label %if.then, label %if.end, !dbg !5164

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5165
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5166
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5165
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3897, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5167
  br label %if.end, !dbg !5168

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5169
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0)), !dbg !5170
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5171
  %path_operation = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 15, !dbg !5172
  store i32 0, i32* %path_operation, align 8, !dbg !5173
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5174
  %path_mode = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 16, !dbg !5175
  store i32 0, i32* %path_mode, align 4, !dbg !5176
  ret void, !dbg !5177
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPoint(%struct._DrawingWand* %wand, double %x, double %y) #0 !dbg !5178 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5179, metadata !DIExpression()), !dbg !5180
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !5181, metadata !DIExpression()), !dbg !5182
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !5183, metadata !DIExpression()), !dbg !5184
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5185
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5187
  %1 = load i32, i32* %debug, align 4, !dbg !5187
  %cmp = icmp ne i32 %1, 0, !dbg !5188
  br i1 %cmp, label %if.then, label %if.end, !dbg !5189

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5190
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5191
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5190
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3934, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5192
  br label %if.end, !dbg !5193

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5194
  %4 = load double, double* %x.addr, align 8, !dbg !5195
  %5 = load double, double* %y.addr, align 8, !dbg !5196
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58, i64 0, i64 0), double %4, double %5), !dbg !5197
  ret void, !dbg !5198
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPolygon(%struct._DrawingWand* %wand, i64 %number_coordinates, %struct._PointInfo* %coordinates) #0 !dbg !5199 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %number_coordinates.addr = alloca i64, align 8
  %coordinates.addr = alloca %struct._PointInfo*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5200, metadata !DIExpression()), !dbg !5201
  store i64 %number_coordinates, i64* %number_coordinates.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_coordinates.addr, metadata !5202, metadata !DIExpression()), !dbg !5203
  store %struct._PointInfo* %coordinates, %struct._PointInfo** %coordinates.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %coordinates.addr, metadata !5204, metadata !DIExpression()), !dbg !5205
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5206
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5208
  %1 = load i32, i32* %debug, align 4, !dbg !5208
  %cmp = icmp ne i32 %1, 0, !dbg !5209
  br i1 %cmp, label %if.then, label %if.end, !dbg !5210

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5211
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5212
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5211
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3972, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5213
  br label %if.end, !dbg !5214

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5215
  %4 = load i64, i64* %number_coordinates.addr, align 8, !dbg !5216
  %5 = load %struct._PointInfo*, %struct._PointInfo** %coordinates.addr, align 8, !dbg !5217
  call void @MvgAppendPointsCommand(%struct._DrawingWand* %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0), i64 %4, %struct._PointInfo* %5), !dbg !5218
  ret void, !dbg !5219
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPolyline(%struct._DrawingWand* %wand, i64 %number_coordinates, %struct._PointInfo* %coordinates) #0 !dbg !5220 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %number_coordinates.addr = alloca i64, align 8
  %coordinates.addr = alloca %struct._PointInfo*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5221, metadata !DIExpression()), !dbg !5222
  store i64 %number_coordinates, i64* %number_coordinates.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_coordinates.addr, metadata !5223, metadata !DIExpression()), !dbg !5224
  store %struct._PointInfo* %coordinates, %struct._PointInfo** %coordinates.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %coordinates.addr, metadata !5225, metadata !DIExpression()), !dbg !5226
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5227
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5229
  %1 = load i32, i32* %debug, align 4, !dbg !5229
  %cmp = icmp ne i32 %1, 0, !dbg !5230
  br i1 %cmp, label %if.then, label %if.end, !dbg !5231

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5232
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5233
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5232
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4010, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5234
  br label %if.end, !dbg !5235

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5236
  %4 = load i64, i64* %number_coordinates.addr, align 8, !dbg !5237
  %5 = load %struct._PointInfo*, %struct._PointInfo** %coordinates.addr, align 8, !dbg !5238
  call void @MvgAppendPointsCommand(%struct._DrawingWand* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i64 0, i64 0), i64 %4, %struct._PointInfo* %5), !dbg !5239
  ret void, !dbg !5240
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPopClipPath(%struct._DrawingWand* %wand) #0 !dbg !5241 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5242, metadata !DIExpression()), !dbg !5243
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5244
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5246
  %1 = load i32, i32* %debug, align 4, !dbg !5246
  %cmp = icmp ne i32 %1, 0, !dbg !5247
  br i1 %cmp, label %if.then, label %if.end, !dbg !5248

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5249
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5250
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5249
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4041, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5251
  br label %if.end, !dbg !5252

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5253
  %indent_depth = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 14, !dbg !5255
  %4 = load i64, i64* %indent_depth, align 8, !dbg !5255
  %cmp1 = icmp ugt i64 %4, 0, !dbg !5256
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !5257

if.then2:                                         ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5258
  %indent_depth3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 14, !dbg !5259
  %6 = load i64, i64* %indent_depth3, align 8, !dbg !5260
  %dec = add i64 %6, -1, !dbg !5260
  store i64 %dec, i64* %indent_depth3, align 8, !dbg !5260
  br label %if.end4, !dbg !5258

if.end4:                                          ; preds = %if.then2, %if.end
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5261
  %call5 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)), !dbg !5262
  ret void, !dbg !5263
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPopDefs(%struct._DrawingWand* %wand) #0 !dbg !5264 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5265, metadata !DIExpression()), !dbg !5266
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5267
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5269
  %1 = load i32, i32* %debug, align 4, !dbg !5269
  %cmp = icmp ne i32 %1, 0, !dbg !5270
  br i1 %cmp, label %if.then, label %if.end, !dbg !5271

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5272
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5273
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5272
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4074, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5274
  br label %if.end, !dbg !5275

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5276
  %indent_depth = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 14, !dbg !5278
  %4 = load i64, i64* %indent_depth, align 8, !dbg !5278
  %cmp1 = icmp ugt i64 %4, 0, !dbg !5279
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !5280

if.then2:                                         ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5281
  %indent_depth3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 14, !dbg !5282
  %6 = load i64, i64* %indent_depth3, align 8, !dbg !5283
  %dec = add i64 %6, -1, !dbg !5283
  store i64 %dec, i64* %indent_depth3, align 8, !dbg !5283
  br label %if.end4, !dbg !5281

if.end4:                                          ; preds = %if.then2, %if.end
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5284
  %call5 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0)), !dbg !5285
  ret void, !dbg !5286
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawPopPattern(%struct._DrawingWand* %wand) #0 !dbg !5287 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %geometry = alloca [4096 x i8], align 16
  %key = alloca [4096 x i8], align 16
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5288, metadata !DIExpression()), !dbg !5289
  call void @llvm.dbg.declare(metadata [4096 x i8]* %geometry, metadata !5290, metadata !DIExpression()), !dbg !5291
  call void @llvm.dbg.declare(metadata [4096 x i8]* %key, metadata !5292, metadata !DIExpression()), !dbg !5293
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5294
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5296
  %1 = load i32, i32* %debug, align 4, !dbg !5296
  %cmp = icmp ne i32 %1, 0, !dbg !5297
  br i1 %cmp, label %if.then, label %if.end, !dbg !5298

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5299
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5300
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5299
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5301
  br label %if.end, !dbg !5302

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5303
  %image = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 2, !dbg !5305
  %4 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !5305
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !5306
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5307

if.then2:                                         ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5308
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 3, !dbg !5308
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5308
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5308
  %name3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 1, !dbg !5308
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !5308
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4113, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !5308
  br label %if.end6, !dbg !5308

if.end6:                                          ; preds = %if.then2, %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5309
  %pattern_id = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 8, !dbg !5311
  %9 = load i8*, i8** %pattern_id, align 8, !dbg !5311
  %cmp7 = icmp eq i8* %9, null, !dbg !5312
  br i1 %cmp7, label %if.then8, label %if.end13, !dbg !5313

if.then8:                                         ; preds = %if.end6
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5314
  %exception9 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 3, !dbg !5314
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception9, align 8, !dbg !5314
  %12 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5314
  %name10 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %12, i32 0, i32 1, !dbg !5314
  %arraydecay11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name10, i64 0, i64 0, !dbg !5314
  %call12 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4117, i32 360, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay11), !dbg !5314
  store i32 0, i32* %retval, align 4, !dbg !5316
  br label %return, !dbg !5316

if.end13:                                         ; preds = %if.end6
  %arraydecay14 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !5317
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5318
  %pattern_id15 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 8, !dbg !5319
  %14 = load i8*, i8** %pattern_id15, align 8, !dbg !5319
  %call16 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay14, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %14), !dbg !5320
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5321
  %image17 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 2, !dbg !5322
  %16 = load %struct._Image*, %struct._Image** %image17, align 8, !dbg !5322
  %arraydecay18 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !5323
  %17 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5324
  %mvg = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %17, i32 0, i32 4, !dbg !5325
  %18 = load i8*, i8** %mvg, align 8, !dbg !5325
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5326
  %pattern_offset = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %19, i32 0, i32 10, !dbg !5327
  %20 = load i64, i64* %pattern_offset, align 8, !dbg !5327
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %20, !dbg !5328
  %call19 = call i32 @SetImageArtifact(%struct._Image* %16, i8* %arraydecay18, i8* %add.ptr), !dbg !5329
  %arraydecay20 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry, i64 0, i64 0, !dbg !5330
  %21 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5331
  %pattern_bounds = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %21, i32 0, i32 9, !dbg !5332
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds, i32 0, i32 0, !dbg !5333
  %22 = load i64, i64* %width, align 8, !dbg !5333
  %conv = uitofp i64 %22 to double, !dbg !5334
  %23 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5335
  %pattern_bounds21 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %23, i32 0, i32 9, !dbg !5336
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds21, i32 0, i32 1, !dbg !5337
  %24 = load i64, i64* %height, align 8, !dbg !5337
  %conv22 = uitofp i64 %24 to double, !dbg !5338
  %25 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5339
  %pattern_bounds23 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %25, i32 0, i32 9, !dbg !5340
  %x = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds23, i32 0, i32 2, !dbg !5341
  %26 = load i64, i64* %x, align 8, !dbg !5341
  %conv24 = sitofp i64 %26 to double, !dbg !5342
  %27 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5343
  %pattern_bounds25 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %27, i32 0, i32 9, !dbg !5344
  %y = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds25, i32 0, i32 3, !dbg !5345
  %28 = load i64, i64* %y, align 8, !dbg !5345
  %conv26 = sitofp i64 %28 to double, !dbg !5346
  %call27 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay20, i64 4096, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.65, i64 0, i64 0), double %conv, double %conv22, double %conv24, double %conv26), !dbg !5347
  %29 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5348
  %image28 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %29, i32 0, i32 2, !dbg !5349
  %30 = load %struct._Image*, %struct._Image** %image28, align 8, !dbg !5349
  %arraydecay29 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !5350
  %arraydecay30 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry, i64 0, i64 0, !dbg !5351
  %call31 = call i32 @SetImageArtifact(%struct._Image* %30, i8* %arraydecay29, i8* %arraydecay30), !dbg !5352
  %31 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5353
  %pattern_id32 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %31, i32 0, i32 8, !dbg !5354
  %32 = load i8*, i8** %pattern_id32, align 8, !dbg !5354
  %call33 = call i8* @DestroyString(i8* %32), !dbg !5355
  %33 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5356
  %pattern_id34 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %33, i32 0, i32 8, !dbg !5357
  store i8* %call33, i8** %pattern_id34, align 8, !dbg !5358
  %34 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5359
  %pattern_offset35 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %34, i32 0, i32 10, !dbg !5360
  store i64 0, i64* %pattern_offset35, align 8, !dbg !5361
  %35 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5362
  %pattern_bounds36 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %35, i32 0, i32 9, !dbg !5363
  %x37 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds36, i32 0, i32 2, !dbg !5364
  store i64 0, i64* %x37, align 8, !dbg !5365
  %36 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5366
  %pattern_bounds38 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %36, i32 0, i32 9, !dbg !5367
  %y39 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds38, i32 0, i32 3, !dbg !5368
  store i64 0, i64* %y39, align 8, !dbg !5369
  %37 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5370
  %pattern_bounds40 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %37, i32 0, i32 9, !dbg !5371
  %width41 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds40, i32 0, i32 0, !dbg !5372
  store i64 0, i64* %width41, align 8, !dbg !5373
  %38 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5374
  %pattern_bounds42 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %38, i32 0, i32 9, !dbg !5375
  %height43 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds42, i32 0, i32 1, !dbg !5376
  store i64 0, i64* %height43, align 8, !dbg !5377
  %39 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5378
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %39, i32 0, i32 13, !dbg !5379
  store i32 1, i32* %filter_off, align 8, !dbg !5380
  %40 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5381
  %indent_depth = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %40, i32 0, i32 14, !dbg !5383
  %41 = load i64, i64* %indent_depth, align 8, !dbg !5383
  %cmp44 = icmp ugt i64 %41, 0, !dbg !5384
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !5385

if.then46:                                        ; preds = %if.end13
  %42 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5386
  %indent_depth47 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %42, i32 0, i32 14, !dbg !5387
  %43 = load i64, i64* %indent_depth47, align 8, !dbg !5388
  %dec = add i64 %43, -1, !dbg !5388
  store i64 %dec, i64* %indent_depth47, align 8, !dbg !5388
  br label %if.end48, !dbg !5386

if.end48:                                         ; preds = %if.then46, %if.end13
  %44 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5389
  %call49 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %44, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i64 0, i64 0)), !dbg !5390
  store i32 1, i32* %retval, align 4, !dbg !5391
  br label %return, !dbg !5391

return:                                           ; preds = %if.end48, %if.then8
  %45 = load i32, i32* %retval, align 4, !dbg !5392
  ret i32 %45, !dbg !5392
}

declare dso_local i32 @SetImageArtifact(%struct._Image*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPushClipPath(%struct._DrawingWand* %wand, i8* %clip_mask_id) #0 !dbg !5393 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %clip_mask_id.addr = alloca i8*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5394, metadata !DIExpression()), !dbg !5395
  store i8* %clip_mask_id, i8** %clip_mask_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %clip_mask_id.addr, metadata !5396, metadata !DIExpression()), !dbg !5397
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5398
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5400
  %1 = load i32, i32* %debug, align 4, !dbg !5400
  %cmp = icmp ne i32 %1, 0, !dbg !5401
  br i1 %cmp, label %if.then, label %if.end, !dbg !5402

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5403
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5404
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5403
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4170, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5405
  br label %if.end, !dbg !5406

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5407
  %4 = load i8*, i8** %clip_mask_id.addr, align 8, !dbg !5408
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0), i8* %4), !dbg !5409
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5410
  %indent_depth = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 14, !dbg !5411
  %6 = load i64, i64* %indent_depth, align 8, !dbg !5412
  %inc = add i64 %6, 1, !dbg !5412
  store i64 %inc, i64* %indent_depth, align 8, !dbg !5412
  ret void, !dbg !5413
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawPushDefs(%struct._DrawingWand* %wand) #0 !dbg !5414 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5415, metadata !DIExpression()), !dbg !5416
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5417
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5419
  %1 = load i32, i32* %debug, align 4, !dbg !5419
  %cmp = icmp ne i32 %1, 0, !dbg !5420
  br i1 %cmp, label %if.then, label %if.end, !dbg !5421

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5422
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5423
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5422
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4205, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5424
  br label %if.end, !dbg !5425

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5426
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0)), !dbg !5427
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5428
  %indent_depth = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 14, !dbg !5429
  %5 = load i64, i64* %indent_depth, align 8, !dbg !5430
  %inc = add i64 %5, 1, !dbg !5430
  store i64 %inc, i64* %indent_depth, align 8, !dbg !5430
  ret void, !dbg !5431
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawPushPattern(%struct._DrawingWand* %wand, i8* %pattern_id, double %x, double %y, double %width, double %height) #0 !dbg !5432 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %pattern_id.addr = alloca i8*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  %width.addr = alloca double, align 8
  %height.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5435, metadata !DIExpression()), !dbg !5436
  store i8* %pattern_id, i8** %pattern_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pattern_id.addr, metadata !5437, metadata !DIExpression()), !dbg !5438
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !5439, metadata !DIExpression()), !dbg !5440
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !5441, metadata !DIExpression()), !dbg !5442
  store double %width, double* %width.addr, align 8
  call void @llvm.dbg.declare(metadata double* %width.addr, metadata !5443, metadata !DIExpression()), !dbg !5444
  store double %height, double* %height.addr, align 8
  call void @llvm.dbg.declare(metadata double* %height.addr, metadata !5445, metadata !DIExpression()), !dbg !5446
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5447
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5449
  %1 = load i32, i32* %debug, align 4, !dbg !5449
  %cmp = icmp ne i32 %1, 0, !dbg !5450
  br i1 %cmp, label %if.then, label %if.end, !dbg !5451

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5452
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5453
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5452
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4256, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5454
  br label %if.end, !dbg !5455

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5456
  %pattern_id1 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 8, !dbg !5458
  %4 = load i8*, i8** %pattern_id1, align 8, !dbg !5458
  %cmp2 = icmp ne i8* %4, null, !dbg !5459
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !5460

if.then3:                                         ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5461
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 3, !dbg !5461
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5461
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5461
  %pattern_id4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 8, !dbg !5461
  %8 = load i8*, i8** %pattern_id4, align 8, !dbg !5461
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4261, i32 460, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %8), !dbg !5461
  store i32 0, i32* %retval, align 4, !dbg !5463
  br label %return, !dbg !5463

if.end6:                                          ; preds = %if.end
  %9 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5464
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %9, i32 0, i32 13, !dbg !5465
  store i32 1, i32* %filter_off, align 8, !dbg !5466
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5467
  %11 = load i8*, i8** %pattern_id.addr, align 8, !dbg !5468
  %12 = load double, double* %x.addr, align 8, !dbg !5469
  %13 = load double, double* %y.addr, align 8, !dbg !5470
  %14 = load double, double* %width.addr, align 8, !dbg !5471
  %15 = load double, double* %height.addr, align 8, !dbg !5472
  %call7 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %10, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.70, i64 0, i64 0), i8* %11, double %12, double %13, double %14, double %15), !dbg !5473
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5474
  %indent_depth = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 14, !dbg !5475
  %17 = load i64, i64* %indent_depth, align 8, !dbg !5476
  %inc = add i64 %17, 1, !dbg !5476
  store i64 %inc, i64* %indent_depth, align 8, !dbg !5476
  %18 = load i8*, i8** %pattern_id.addr, align 8, !dbg !5477
  %call8 = call i8* @AcquireString(i8* %18), !dbg !5478
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5479
  %pattern_id9 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %19, i32 0, i32 8, !dbg !5480
  store i8* %call8, i8** %pattern_id9, align 8, !dbg !5481
  %20 = load double, double* %x.addr, align 8, !dbg !5482
  %sub = fsub double %20, 5.000000e-01, !dbg !5483
  %21 = call double @llvm.ceil.f64(double %sub), !dbg !5484
  %conv = fptosi double %21 to i64, !dbg !5485
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5486
  %pattern_bounds = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %22, i32 0, i32 9, !dbg !5487
  %x10 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds, i32 0, i32 2, !dbg !5488
  store i64 %conv, i64* %x10, align 8, !dbg !5489
  %23 = load double, double* %y.addr, align 8, !dbg !5490
  %sub11 = fsub double %23, 5.000000e-01, !dbg !5491
  %24 = call double @llvm.ceil.f64(double %sub11), !dbg !5492
  %conv12 = fptosi double %24 to i64, !dbg !5493
  %25 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5494
  %pattern_bounds13 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %25, i32 0, i32 9, !dbg !5495
  %y14 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds13, i32 0, i32 3, !dbg !5496
  store i64 %conv12, i64* %y14, align 8, !dbg !5497
  %26 = load double, double* %width.addr, align 8, !dbg !5498
  %add = fadd double %26, 5.000000e-01, !dbg !5499
  %27 = call double @llvm.floor.f64(double %add), !dbg !5500
  %conv15 = fptoui double %27 to i64, !dbg !5501
  %28 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5502
  %pattern_bounds16 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %28, i32 0, i32 9, !dbg !5503
  %width17 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds16, i32 0, i32 0, !dbg !5504
  store i64 %conv15, i64* %width17, align 8, !dbg !5505
  %29 = load double, double* %height.addr, align 8, !dbg !5506
  %add18 = fadd double %29, 5.000000e-01, !dbg !5507
  %30 = call double @llvm.floor.f64(double %add18), !dbg !5508
  %conv19 = fptoui double %30 to i64, !dbg !5509
  %31 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5510
  %pattern_bounds20 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %31, i32 0, i32 9, !dbg !5511
  %height21 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %pattern_bounds20, i32 0, i32 1, !dbg !5512
  store i64 %conv19, i64* %height21, align 8, !dbg !5513
  %32 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5514
  %mvg_length = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %32, i32 0, i32 6, !dbg !5515
  %33 = load i64, i64* %mvg_length, align 8, !dbg !5515
  %34 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5516
  %pattern_offset = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %34, i32 0, i32 10, !dbg !5517
  store i64 %33, i64* %pattern_offset, align 8, !dbg !5518
  store i32 1, i32* %retval, align 4, !dbg !5519
  br label %return, !dbg !5519

return:                                           ; preds = %if.end6, %if.then3
  %35 = load i32, i32* %retval, align 4, !dbg !5520
  ret i32 %35, !dbg !5520
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawRectangle(%struct._DrawingWand* %wand, double %x1, double %y1, double %x2, double %y2) #0 !dbg !5521 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x1.addr = alloca double, align 8
  %y1.addr = alloca double, align 8
  %x2.addr = alloca double, align 8
  %y2.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5522, metadata !DIExpression()), !dbg !5523
  store double %x1, double* %x1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x1.addr, metadata !5524, metadata !DIExpression()), !dbg !5525
  store double %y1, double* %y1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y1.addr, metadata !5526, metadata !DIExpression()), !dbg !5527
  store double %x2, double* %x2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x2.addr, metadata !5528, metadata !DIExpression()), !dbg !5529
  store double %y2, double* %y2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y2.addr, metadata !5530, metadata !DIExpression()), !dbg !5531
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5532
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5534
  %1 = load i32, i32* %debug, align 4, !dbg !5534
  %cmp = icmp ne i32 %1, 0, !dbg !5535
  br i1 %cmp, label %if.then, label %if.end, !dbg !5536

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5537
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5538
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5537
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4313, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5539
  br label %if.end, !dbg !5540

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5541
  %4 = load double, double* %x1.addr, align 8, !dbg !5542
  %5 = load double, double* %y1.addr, align 8, !dbg !5543
  %6 = load double, double* %x2.addr, align 8, !dbg !5544
  %7 = load double, double* %y2.addr, align 8, !dbg !5545
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.71, i64 0, i64 0), double %4, double %5, double %6, double %7), !dbg !5546
  ret void, !dbg !5547
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawRender(%struct._DrawingWand* %wand) #0 !dbg !5548 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %status = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5549, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5551, metadata !DIExpression()), !dbg !5552
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5553
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5555
  %1 = load i32, i32* %debug, align 4, !dbg !5555
  %cmp = icmp ne i32 %1, 0, !dbg !5556
  br i1 %cmp, label %if.then, label %if.end, !dbg !5557

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5558
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5559
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5558
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4347, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5560
  br label %if.end, !dbg !5561

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5562
  %mvg = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 4, !dbg !5563
  %4 = load i8*, i8** %mvg, align 8, !dbg !5563
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5564
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !5564
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5564
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5564
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !5564
  %8 = load i64, i64* %index, align 8, !dbg !5564
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !5564
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !5564
  %primitive = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 0, !dbg !5565
  store i8* %4, i8** %primitive, align 8, !dbg !5566
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5567
  %debug1 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 18, !dbg !5569
  %11 = load i32, i32* %debug1, align 4, !dbg !5569
  %cmp2 = icmp ne i32 %11, 0, !dbg !5570
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !5571

if.then3:                                         ; preds = %if.end
  %12 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5572
  %mvg4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %12, i32 0, i32 4, !dbg !5573
  %13 = load i8*, i8** %mvg4, align 8, !dbg !5573
  %call5 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4350, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.72, i64 0, i64 0), i8* %13), !dbg !5574
  br label %if.end6, !dbg !5575

if.end6:                                          ; preds = %if.then3, %if.end
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5576
  %image = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 2, !dbg !5578
  %15 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !5578
  %cmp7 = icmp eq %struct._Image* %15, null, !dbg !5579
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !5580

if.then8:                                         ; preds = %if.end6
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5581
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 3, !dbg !5581
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5581
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5581
  %name9 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %18, i32 0, i32 1, !dbg !5581
  %arraydecay10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name9, i64 0, i64 0, !dbg !5581
  %call11 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %17, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4352, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay10), !dbg !5581
  br label %if.end12, !dbg !5581

if.end12:                                         ; preds = %if.then8, %if.end6
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5582
  %image13 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %19, i32 0, i32 2, !dbg !5583
  %20 = load %struct._Image*, %struct._Image** %image13, align 8, !dbg !5583
  %21 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5584
  %graphic_context14 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %21, i32 0, i32 12, !dbg !5584
  %22 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context14, align 8, !dbg !5584
  %23 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5584
  %index15 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %23, i32 0, i32 11, !dbg !5584
  %24 = load i64, i64* %index15, align 8, !dbg !5584
  %arrayidx16 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %22, i64 %24, !dbg !5584
  %25 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx16, align 8, !dbg !5584
  %call17 = call i32 @DrawImage(%struct._Image* %20, %struct._DrawInfo* %25), !dbg !5585
  store i32 %call17, i32* %status, align 4, !dbg !5586
  %26 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5587
  %exception18 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %26, i32 0, i32 3, !dbg !5588
  %27 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception18, align 8, !dbg !5588
  %28 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5589
  %image19 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %28, i32 0, i32 2, !dbg !5590
  %29 = load %struct._Image*, %struct._Image** %image19, align 8, !dbg !5590
  %exception20 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 58, !dbg !5591
  call void @InheritException(%struct._ExceptionInfo* %27, %struct._ExceptionInfo* %exception20), !dbg !5592
  %30 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5593
  %graphic_context21 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %30, i32 0, i32 12, !dbg !5593
  %31 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context21, align 8, !dbg !5593
  %32 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5593
  %index22 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %32, i32 0, i32 11, !dbg !5593
  %33 = load i64, i64* %index22, align 8, !dbg !5593
  %arrayidx23 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %31, i64 %33, !dbg !5593
  %34 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx23, align 8, !dbg !5593
  %primitive24 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %34, i32 0, i32 0, !dbg !5594
  store i8* null, i8** %primitive24, align 8, !dbg !5595
  %35 = load i32, i32* %status, align 4, !dbg !5596
  ret i32 %35, !dbg !5597
}

declare dso_local i32 @DrawImage(%struct._Image*, %struct._DrawInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawResetVectorGraphics(%struct._DrawingWand* %wand) #0 !dbg !5598 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5599, metadata !DIExpression()), !dbg !5600
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5601
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5603
  %1 = load i32, i32* %debug, align 4, !dbg !5603
  %cmp = icmp ne i32 %1, 0, !dbg !5604
  br i1 %cmp, label %if.then, label %if.end, !dbg !5605

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5606
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5607
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5606
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4387, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5608
  br label %if.end, !dbg !5609

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5610
  %mvg = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 4, !dbg !5612
  %4 = load i8*, i8** %mvg, align 8, !dbg !5612
  %cmp1 = icmp ne i8* %4, null, !dbg !5613
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5614

if.then2:                                         ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5615
  %mvg3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 4, !dbg !5616
  %6 = load i8*, i8** %mvg3, align 8, !dbg !5616
  %call4 = call i8* @DestroyString(i8* %6), !dbg !5617
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5618
  %mvg5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 4, !dbg !5619
  store i8* %call4, i8** %mvg5, align 8, !dbg !5620
  br label %if.end6, !dbg !5618

if.end6:                                          ; preds = %if.then2, %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5621
  %mvg_alloc = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 5, !dbg !5622
  store i64 0, i64* %mvg_alloc, align 8, !dbg !5623
  %9 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5624
  %mvg_length = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %9, i32 0, i32 6, !dbg !5625
  store i64 0, i64* %mvg_length, align 8, !dbg !5626
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5627
  %mvg_width = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 7, !dbg !5628
  store i64 0, i64* %mvg_width, align 8, !dbg !5629
  ret void, !dbg !5630
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawRotate(%struct._DrawingWand* %wand, double %degrees) #0 !dbg !5631 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %degrees.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5632, metadata !DIExpression()), !dbg !5633
  store double %degrees, double* %degrees.addr, align 8
  call void @llvm.dbg.declare(metadata double* %degrees.addr, metadata !5634, metadata !DIExpression()), !dbg !5635
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5636
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5638
  %1 = load i32, i32* %debug, align 4, !dbg !5638
  %cmp = icmp ne i32 %1, 0, !dbg !5639
  br i1 %cmp, label %if.then, label %if.end, !dbg !5640

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5641
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5642
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5641
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4424, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5643
  br label %if.end, !dbg !5644

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5645
  %4 = load double, double* %degrees.addr, align 8, !dbg !5646
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73, i64 0, i64 0), double %4), !dbg !5647
  ret void, !dbg !5648
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawRoundRectangle(%struct._DrawingWand* %wand, double %x1, double %y1, double %x2, double %y2, double %rx, double %ry) #0 !dbg !5649 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x1.addr = alloca double, align 8
  %y1.addr = alloca double, align 8
  %x2.addr = alloca double, align 8
  %y2.addr = alloca double, align 8
  %rx.addr = alloca double, align 8
  %ry.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5652, metadata !DIExpression()), !dbg !5653
  store double %x1, double* %x1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x1.addr, metadata !5654, metadata !DIExpression()), !dbg !5655
  store double %y1, double* %y1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y1.addr, metadata !5656, metadata !DIExpression()), !dbg !5657
  store double %x2, double* %x2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x2.addr, metadata !5658, metadata !DIExpression()), !dbg !5659
  store double %y2, double* %y2.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y2.addr, metadata !5660, metadata !DIExpression()), !dbg !5661
  store double %rx, double* %rx.addr, align 8
  call void @llvm.dbg.declare(metadata double* %rx.addr, metadata !5662, metadata !DIExpression()), !dbg !5663
  store double %ry, double* %ry.addr, align 8
  call void @llvm.dbg.declare(metadata double* %ry.addr, metadata !5664, metadata !DIExpression()), !dbg !5665
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5666
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5668
  %1 = load i32, i32* %debug, align 4, !dbg !5668
  %cmp = icmp ne i32 %1, 0, !dbg !5669
  br i1 %cmp, label %if.then, label %if.end, !dbg !5670

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5671
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5672
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5671
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4471, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5673
  br label %if.end, !dbg !5674

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5675
  %4 = load double, double* %x1.addr, align 8, !dbg !5676
  %5 = load double, double* %y1.addr, align 8, !dbg !5677
  %6 = load double, double* %x2.addr, align 8, !dbg !5678
  %7 = load double, double* %y2.addr, align 8, !dbg !5679
  %8 = load double, double* %rx.addr, align 8, !dbg !5680
  %9 = load double, double* %ry.addr, align 8, !dbg !5681
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.74, i64 0, i64 0), double %4, double %5, double %6, double %7, double %8, double %9), !dbg !5682
  ret void, !dbg !5683
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawScale(%struct._DrawingWand* %wand, double %x, double %y) #0 !dbg !5684 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5685, metadata !DIExpression()), !dbg !5686
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !5687, metadata !DIExpression()), !dbg !5688
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !5689, metadata !DIExpression()), !dbg !5690
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5691
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5693
  %1 = load i32, i32* %debug, align 4, !dbg !5693
  %cmp = icmp ne i32 %1, 0, !dbg !5694
  br i1 %cmp, label %if.then, label %if.end, !dbg !5695

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5696
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5697
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5696
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4508, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5698
  br label %if.end, !dbg !5699

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5700
  %4 = load double, double* %x.addr, align 8, !dbg !5701
  %5 = load double, double* %y.addr, align 8, !dbg !5702
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75, i64 0, i64 0), double %4, double %5), !dbg !5703
  ret void, !dbg !5704
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetBorderColor(%struct._DrawingWand* %wand, %struct._PixelWand* %border_wand) #0 !dbg !5705 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %border_wand.addr = alloca %struct._PixelWand*, align 8
  %current_border = alloca %struct._PixelPacket*, align 8
  %border_color = alloca %struct._PixelPacket, align 2
  %new_border = alloca %struct._PixelPacket, align 2
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5710, metadata !DIExpression()), !dbg !5711
  store %struct._PixelWand* %border_wand, %struct._PixelWand** %border_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %border_wand.addr, metadata !5712, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %current_border, metadata !5714, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %border_color, metadata !5716, metadata !DIExpression()), !dbg !5717
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %new_border, metadata !5718, metadata !DIExpression()), !dbg !5719
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5720
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5722
  %1 = load i32, i32* %debug, align 4, !dbg !5722
  %cmp = icmp ne i32 %1, 0, !dbg !5723
  br i1 %cmp, label %if.then, label %if.end, !dbg !5724

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5725
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5726
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5725
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4562, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5727
  br label %if.end, !dbg !5728

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._PixelWand*, %struct._PixelWand** %border_wand.addr, align 8, !dbg !5729
  call void @PixelGetQuantumColor(%struct._PixelWand* %3, %struct._PixelPacket* %border_color), !dbg !5730
  %4 = bitcast %struct._PixelPacket* %new_border to i8*, !dbg !5731
  %5 = bitcast %struct._PixelPacket* %border_color to i8*, !dbg !5731
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %4, i8* align 2 %5, i64 8, i1 false), !dbg !5731
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5732
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 12, !dbg !5732
  %7 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5732
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5732
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 11, !dbg !5732
  %9 = load i64, i64* %index, align 8, !dbg !5732
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %7, i64 %9, !dbg !5732
  %10 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !5732
  %border_color1 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %10, i32 0, i32 34, !dbg !5733
  store %struct._PixelPacket* %border_color1, %struct._PixelPacket** %current_border, align 8, !dbg !5734
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5735
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 13, !dbg !5737
  %12 = load i32, i32* %filter_off, align 8, !dbg !5737
  %cmp2 = icmp ne i32 %12, 0, !dbg !5738
  br i1 %cmp2, label %if.then5, label %lor.lhs.false, !dbg !5739

lor.lhs.false:                                    ; preds = %if.end
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %current_border, align 8, !dbg !5740
  %call3 = call i32 @IsColorEqual(%struct._PixelPacket* %13, %struct._PixelPacket* %new_border), !dbg !5741
  %cmp4 = icmp eq i32 %call3, 0, !dbg !5742
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !5743

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5744
  %graphic_context6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 12, !dbg !5744
  %15 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context6, align 8, !dbg !5744
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5744
  %index7 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 11, !dbg !5744
  %17 = load i64, i64* %index7, align 8, !dbg !5744
  %arrayidx8 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %15, i64 %17, !dbg !5744
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx8, align 8, !dbg !5744
  %border_color9 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 34, !dbg !5746
  %19 = bitcast %struct._PixelPacket* %border_color9 to i8*, !dbg !5747
  %20 = bitcast %struct._PixelPacket* %new_border to i8*, !dbg !5747
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 2 %20, i64 8, i1 false), !dbg !5747
  %21 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5748
  %call10 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i64 0, i64 0)), !dbg !5749
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5750
  call void @MvgAppendColor(%struct._DrawingWand* %22, %struct._PixelPacket* %border_color), !dbg !5751
  %23 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5752
  %call11 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)), !dbg !5753
  br label %if.end12, !dbg !5754

if.end12:                                         ; preds = %if.then5, %lor.lhs.false
  ret void, !dbg !5755
}

declare dso_local void @PixelGetQuantumColor(%struct._PixelWand*, %struct._PixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsColorEqual(%struct._PixelPacket* %p, %struct._PixelPacket* %q) #0 !dbg !5756 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !5759, metadata !DIExpression()), !dbg !5760
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !5761, metadata !DIExpression()), !dbg !5762
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5763
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !5763
  %1 = load i16, i16* %red, align 2, !dbg !5763
  %conv = zext i16 %1 to i32, !dbg !5763
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5765
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 2, !dbg !5765
  %3 = load i16, i16* %red1, align 2, !dbg !5765
  %conv2 = zext i16 %3 to i32, !dbg !5765
  %cmp = icmp ne i32 %conv, %conv2, !dbg !5766
  br i1 %cmp, label %if.then, label %if.end, !dbg !5767

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5768
  br label %return, !dbg !5768

if.end:                                           ; preds = %entry
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5769
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 1, !dbg !5769
  %5 = load i16, i16* %green, align 2, !dbg !5769
  %conv4 = zext i16 %5 to i32, !dbg !5769
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5771
  %green5 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 1, !dbg !5771
  %7 = load i16, i16* %green5, align 2, !dbg !5771
  %conv6 = zext i16 %7 to i32, !dbg !5771
  %cmp7 = icmp ne i32 %conv4, %conv6, !dbg !5772
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !5773

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5774
  br label %return, !dbg !5774

if.end10:                                         ; preds = %if.end
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5775
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 0, !dbg !5775
  %9 = load i16, i16* %blue, align 2, !dbg !5775
  %conv11 = zext i16 %9 to i32, !dbg !5775
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5777
  %blue12 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 0, i32 0, !dbg !5777
  %11 = load i16, i16* %blue12, align 2, !dbg !5777
  %conv13 = zext i16 %11 to i32, !dbg !5777
  %cmp14 = icmp ne i32 %conv11, %conv13, !dbg !5778
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !5779

if.then16:                                        ; preds = %if.end10
  store i32 0, i32* %retval, align 4, !dbg !5780
  br label %return, !dbg !5780

if.end17:                                         ; preds = %if.end10
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !5781
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 3, !dbg !5781
  %13 = load i16, i16* %opacity, align 2, !dbg !5781
  %conv18 = zext i16 %13 to i32, !dbg !5781
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5783
  %opacity19 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %14, i32 0, i32 3, !dbg !5783
  %15 = load i16, i16* %opacity19, align 2, !dbg !5783
  %conv20 = zext i16 %15 to i32, !dbg !5783
  %cmp21 = icmp ne i32 %conv18, %conv20, !dbg !5784
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !5785

if.then23:                                        ; preds = %if.end17
  store i32 0, i32* %retval, align 4, !dbg !5786
  br label %return, !dbg !5786

if.end24:                                         ; preds = %if.end17
  store i32 1, i32* %retval, align 4, !dbg !5787
  br label %return, !dbg !5787

return:                                           ; preds = %if.end24, %if.then23, %if.then16, %if.then9, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !5788
  ret i32 %16, !dbg !5788
}

; Function Attrs: noinline nounwind uwtable
define internal void @MvgAppendColor(%struct._DrawingWand* %wand, %struct._PixelPacket* %color) #0 !dbg !5789 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %tuple = alloca [4096 x i8], align 16
  %pixel = alloca %struct._MagickPixelPacket, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5792, metadata !DIExpression()), !dbg !5793
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !5794, metadata !DIExpression()), !dbg !5795
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5796
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !5796
  %1 = load i16, i16* %red, align 2, !dbg !5796
  %conv = zext i16 %1 to i32, !dbg !5796
  %cmp = icmp eq i32 %conv, 0, !dbg !5798
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5799

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5800
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 1, !dbg !5800
  %3 = load i16, i16* %green, align 2, !dbg !5800
  %conv2 = zext i16 %3 to i32, !dbg !5800
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !5801
  br i1 %cmp3, label %land.lhs.true5, label %if.else, !dbg !5802

land.lhs.true5:                                   ; preds = %land.lhs.true
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5803
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 0, !dbg !5803
  %5 = load i16, i16* %blue, align 2, !dbg !5803
  %conv6 = zext i16 %5 to i32, !dbg !5803
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !5804
  br i1 %cmp7, label %land.lhs.true9, label %if.else, !dbg !5805

land.lhs.true9:                                   ; preds = %land.lhs.true5
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5806
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 3, !dbg !5806
  %7 = load i16, i16* %opacity, align 2, !dbg !5806
  %conv10 = zext i16 %7 to i32, !dbg !5806
  %cmp11 = icmp eq i32 %conv10, 65535, !dbg !5807
  br i1 %cmp11, label %if.then, label %if.else, !dbg !5808

if.then:                                          ; preds = %land.lhs.true9
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5809
  %call = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.137, i64 0, i64 0)), !dbg !5810
  br label %if.end, !dbg !5811

if.else:                                          ; preds = %land.lhs.true9, %land.lhs.true5, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata [4096 x i8]* %tuple, metadata !5812, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !5815, metadata !DIExpression()), !dbg !5816
  %9 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5817
  %image = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %9, i32 0, i32 2, !dbg !5818
  %10 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !5818
  call void @GetMagickPixelPacket(%struct._Image* %10, %struct._MagickPixelPacket* %pixel), !dbg !5819
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 1, !dbg !5820
  store i32 13, i32* %colorspace, align 4, !dbg !5821
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5822
  %opacity13 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 3, !dbg !5823
  %12 = load i16, i16* %opacity13, align 2, !dbg !5823
  %conv14 = zext i16 %12 to i32, !dbg !5822
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !5824
  %13 = zext i1 %cmp15 to i64, !dbg !5822
  %cond = select i1 %cmp15, i32 1, i32 0, !dbg !5822
  %matte = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 2, !dbg !5825
  store i32 %cond, i32* %matte, align 8, !dbg !5826
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5827
  %red17 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %14, i32 0, i32 2, !dbg !5827
  %15 = load i16, i16* %red17, align 2, !dbg !5827
  %conv18 = uitofp i16 %15 to float, !dbg !5828
  %red19 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5829
  store float %conv18, float* %red19, align 8, !dbg !5830
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5831
  %green20 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %16, i32 0, i32 1, !dbg !5831
  %17 = load i16, i16* %green20, align 2, !dbg !5831
  %conv21 = uitofp i16 %17 to float, !dbg !5832
  %green22 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !5833
  store float %conv21, float* %green22, align 4, !dbg !5834
  %18 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5835
  %blue23 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %18, i32 0, i32 0, !dbg !5835
  %19 = load i16, i16* %blue23, align 2, !dbg !5835
  %conv24 = uitofp i16 %19 to float, !dbg !5836
  %blue25 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !5837
  store float %conv24, float* %blue25, align 8, !dbg !5838
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5839
  %opacity26 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %20, i32 0, i32 3, !dbg !5839
  %21 = load i16, i16* %opacity26, align 2, !dbg !5839
  %conv27 = uitofp i16 %21 to float, !dbg !5840
  %opacity28 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !5841
  store float %conv27, float* %opacity28, align 4, !dbg !5842
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %tuple, i64 0, i64 0, !dbg !5843
  call void @GetColorTuple(%struct._MagickPixelPacket* %pixel, i32 1, i8* %arraydecay), !dbg !5844
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5845
  %arraydecay29 = getelementptr inbounds [4096 x i8], [4096 x i8]* %tuple, i64 0, i64 0, !dbg !5846
  %call30 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay29), !dbg !5847
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5848
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawSetClipPath(%struct._DrawingWand* %wand, i8* %clip_mask) #0 !dbg !5849 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %clip_mask.addr = alloca i8*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5852, metadata !DIExpression()), !dbg !5853
  store i8* %clip_mask, i8** %clip_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %clip_mask.addr, metadata !5854, metadata !DIExpression()), !dbg !5855
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5856
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5858
  %1 = load i32, i32* %debug, align 4, !dbg !5858
  %cmp = icmp ne i32 %1, 0, !dbg !5859
  br i1 %cmp, label %if.then, label %if.end, !dbg !5860

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %clip_mask.addr, align 8, !dbg !5861
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4608, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %2), !dbg !5862
  br label %if.end, !dbg !5863

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5864
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !5864
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5864
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5864
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !5864
  %6 = load i64, i64* %index, align 8, !dbg !5864
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !5864
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !5864
  %clip_mask1 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 37, !dbg !5866
  %8 = load i8*, i8** %clip_mask1, align 8, !dbg !5866
  %cmp2 = icmp eq i8* %8, null, !dbg !5867
  br i1 %cmp2, label %if.then11, label %lor.lhs.false, !dbg !5868

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5869
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %9, i32 0, i32 13, !dbg !5870
  %10 = load i32, i32* %filter_off, align 8, !dbg !5870
  %cmp3 = icmp ne i32 %10, 0, !dbg !5871
  br i1 %cmp3, label %if.then11, label %lor.lhs.false4, !dbg !5872

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5873
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 12, !dbg !5873
  %12 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !5873
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5873
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 11, !dbg !5873
  %14 = load i64, i64* %index6, align 8, !dbg !5873
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %12, i64 %14, !dbg !5873
  %15 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !5873
  %clip_mask8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %15, i32 0, i32 37, !dbg !5874
  %16 = load i8*, i8** %clip_mask8, align 8, !dbg !5874
  %17 = load i8*, i8** %clip_mask.addr, align 8, !dbg !5875
  %call9 = call i32 @LocaleCompare(i8* %16, i8* %17), !dbg !5876
  %cmp10 = icmp ne i32 %call9, 0, !dbg !5877
  br i1 %cmp10, label %if.then11, label %if.end18, !dbg !5878

if.then11:                                        ; preds = %lor.lhs.false4, %lor.lhs.false, %if.end
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5879
  %graphic_context12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %18, i32 0, i32 12, !dbg !5879
  %19 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context12, align 8, !dbg !5879
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5879
  %index13 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %20, i32 0, i32 11, !dbg !5879
  %21 = load i64, i64* %index13, align 8, !dbg !5879
  %arrayidx14 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %19, i64 %21, !dbg !5879
  %22 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx14, align 8, !dbg !5879
  %clip_mask15 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %22, i32 0, i32 37, !dbg !5881
  %23 = load i8*, i8** %clip_mask.addr, align 8, !dbg !5882
  %call16 = call i8* @CloneString(i8** %clip_mask15, i8* %23), !dbg !5883
  %24 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5884
  %25 = load i8*, i8** %clip_mask.addr, align 8, !dbg !5885
  %call17 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %24, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.77, i64 0, i64 0), i8* %25), !dbg !5886
  br label %if.end18, !dbg !5887

if.end18:                                         ; preds = %if.then11, %lor.lhs.false4
  ret i32 1, !dbg !5888
}

declare dso_local i32 @LocaleCompare(i8*, i8*) #2

declare dso_local i8* @CloneString(i8**, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetClipRule(%struct._DrawingWand* %wand, i32 %fill_rule) #0 !dbg !5889 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %fill_rule.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5893, metadata !DIExpression()), !dbg !5894
  store i32 %fill_rule, i32* %fill_rule.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fill_rule.addr, metadata !5895, metadata !DIExpression()), !dbg !5896
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5897
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5899
  %1 = load i32, i32* %debug, align 4, !dbg !5899
  %cmp = icmp ne i32 %1, 0, !dbg !5900
  br i1 %cmp, label %if.then, label %if.end, !dbg !5901

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5902
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5903
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5902
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4656, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5904
  br label %if.end, !dbg !5905

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5906
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !5908
  %4 = load i32, i32* %filter_off, align 8, !dbg !5908
  %cmp1 = icmp ne i32 %4, 0, !dbg !5909
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !5910

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5911
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !5911
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5911
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5911
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !5911
  %8 = load i64, i64* %index, align 8, !dbg !5911
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !5911
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !5911
  %fill_rule2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 14, !dbg !5912
  %10 = load i32, i32* %fill_rule2, align 8, !dbg !5912
  %11 = load i32, i32* %fill_rule.addr, align 4, !dbg !5913
  %cmp3 = icmp ne i32 %10, %11, !dbg !5914
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !5915

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %fill_rule.addr, align 4, !dbg !5916
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5918
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !5918
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !5918
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5918
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !5918
  %16 = load i64, i64* %index6, align 8, !dbg !5918
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !5918
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !5918
  %fill_rule8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 14, !dbg !5919
  store i32 %12, i32* %fill_rule8, align 8, !dbg !5920
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5921
  %19 = load i32, i32* %fill_rule.addr, align 4, !dbg !5922
  %conv = zext i32 %19 to i64, !dbg !5923
  %call9 = call i8* @CommandOptionToMnemonic(i32 24, i64 %conv), !dbg !5924
  %call10 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.78, i64 0, i64 0), i8* %call9), !dbg !5925
  br label %if.end11, !dbg !5926

if.end11:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !5927
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetClipUnits(%struct._DrawingWand* %wand, i32 %clip_units) #0 !dbg !5928 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %clip_units.addr = alloca i32, align 4
  %affine = alloca %struct._AffineMatrix, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5932, metadata !DIExpression()), !dbg !5933
  store i32 %clip_units, i32* %clip_units.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clip_units.addr, metadata !5934, metadata !DIExpression()), !dbg !5935
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5936
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !5938
  %1 = load i32, i32* %debug, align 4, !dbg !5938
  %cmp = icmp ne i32 %1, 0, !dbg !5939
  br i1 %cmp, label %if.then, label %if.end, !dbg !5940

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5941
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !5942
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !5941
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4698, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5943
  br label %if.end, !dbg !5944

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5945
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !5947
  %4 = load i32, i32* %filter_off, align 8, !dbg !5947
  %cmp1 = icmp ne i32 %4, 0, !dbg !5948
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !5949

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5950
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !5950
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5950
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5950
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !5950
  %8 = load i64, i64* %index, align 8, !dbg !5950
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !5950
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !5950
  %clip_units2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 39, !dbg !5951
  %10 = load i32, i32* %clip_units2, align 8, !dbg !5951
  %11 = load i32, i32* %clip_units.addr, align 4, !dbg !5952
  %cmp3 = icmp ne i32 %10, %11, !dbg !5953
  br i1 %cmp3, label %if.then4, label %if.end29, !dbg !5954

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %clip_units.addr, align 4, !dbg !5955
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5957
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !5957
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !5957
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5957
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !5957
  %16 = load i64, i64* %index6, align 8, !dbg !5957
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !5957
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !5957
  %clip_units8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 39, !dbg !5958
  store i32 %12, i32* %clip_units8, align 8, !dbg !5959
  %18 = load i32, i32* %clip_units.addr, align 4, !dbg !5960
  %cmp9 = icmp eq i32 %18, 3, !dbg !5962
  br i1 %cmp9, label %if.then10, label %if.end26, !dbg !5963

if.then10:                                        ; preds = %if.then4
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix* %affine, metadata !5964, metadata !DIExpression()), !dbg !5966
  call void @GetAffineMatrix(%struct._AffineMatrix* %affine), !dbg !5967
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5968
  %graphic_context11 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %19, i32 0, i32 12, !dbg !5968
  %20 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context11, align 8, !dbg !5968
  %21 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5968
  %index12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %21, i32 0, i32 11, !dbg !5968
  %22 = load i64, i64* %index12, align 8, !dbg !5968
  %arrayidx13 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %20, i64 %22, !dbg !5968
  %23 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx13, align 8, !dbg !5968
  %bounds = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %23, i32 0, i32 38, !dbg !5969
  %x2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !5970
  %24 = load double, double* %x2, align 8, !dbg !5970
  %sx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 0, !dbg !5971
  store double %24, double* %sx, align 8, !dbg !5972
  %25 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5973
  %graphic_context14 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %25, i32 0, i32 12, !dbg !5973
  %26 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context14, align 8, !dbg !5973
  %27 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5973
  %index15 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %27, i32 0, i32 11, !dbg !5973
  %28 = load i64, i64* %index15, align 8, !dbg !5973
  %arrayidx16 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %26, i64 %28, !dbg !5973
  %29 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx16, align 8, !dbg !5973
  %bounds17 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %29, i32 0, i32 38, !dbg !5974
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds17, i32 0, i32 3, !dbg !5975
  %30 = load double, double* %y2, align 8, !dbg !5975
  %sy = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 3, !dbg !5976
  store double %30, double* %sy, align 8, !dbg !5977
  %31 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5978
  %graphic_context18 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %31, i32 0, i32 12, !dbg !5978
  %32 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context18, align 8, !dbg !5978
  %33 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5978
  %index19 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %33, i32 0, i32 11, !dbg !5978
  %34 = load i64, i64* %index19, align 8, !dbg !5978
  %arrayidx20 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %32, i64 %34, !dbg !5978
  %35 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx20, align 8, !dbg !5978
  %bounds21 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %35, i32 0, i32 38, !dbg !5979
  %x1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds21, i32 0, i32 0, !dbg !5980
  %36 = load double, double* %x1, align 8, !dbg !5980
  %tx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 4, !dbg !5981
  store double %36, double* %tx, align 8, !dbg !5982
  %37 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5983
  %graphic_context22 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %37, i32 0, i32 12, !dbg !5983
  %38 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context22, align 8, !dbg !5983
  %39 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5983
  %index23 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %39, i32 0, i32 11, !dbg !5983
  %40 = load i64, i64* %index23, align 8, !dbg !5983
  %arrayidx24 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %38, i64 %40, !dbg !5983
  %41 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx24, align 8, !dbg !5983
  %bounds25 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %41, i32 0, i32 38, !dbg !5984
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds25, i32 0, i32 1, !dbg !5985
  %42 = load double, double* %y1, align 8, !dbg !5985
  %ty = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 5, !dbg !5986
  store double %42, double* %ty, align 8, !dbg !5987
  %43 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5988
  call void @AdjustAffine(%struct._DrawingWand* %43, %struct._AffineMatrix* %affine), !dbg !5989
  br label %if.end26, !dbg !5990

if.end26:                                         ; preds = %if.then10, %if.then4
  %44 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !5991
  %45 = load i32, i32* %clip_units.addr, align 4, !dbg !5992
  %conv = zext i32 %45 to i64, !dbg !5993
  %call27 = call i8* @CommandOptionToMnemonic(i32 6, i64 %conv), !dbg !5994
  %call28 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %44, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.79, i64 0, i64 0), i8* %call27), !dbg !5995
  br label %if.end29, !dbg !5996

if.end29:                                         ; preds = %if.end26, %lor.lhs.false
  ret void, !dbg !5997
}

declare dso_local void @GetAffineMatrix(%struct._AffineMatrix*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetFillColor(%struct._DrawingWand* %wand, %struct._PixelWand* %fill_wand) #0 !dbg !5998 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %fill_wand.addr = alloca %struct._PixelWand*, align 8
  %current_fill = alloca %struct._PixelPacket*, align 8
  %fill_color = alloca %struct._PixelPacket, align 2
  %new_fill = alloca %struct._PixelPacket, align 2
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !5999, metadata !DIExpression()), !dbg !6000
  store %struct._PixelWand* %fill_wand, %struct._PixelWand** %fill_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %fill_wand.addr, metadata !6001, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %current_fill, metadata !6003, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %fill_color, metadata !6005, metadata !DIExpression()), !dbg !6006
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %new_fill, metadata !6007, metadata !DIExpression()), !dbg !6008
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6009
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6011
  %1 = load i32, i32* %debug, align 4, !dbg !6011
  %cmp = icmp ne i32 %1, 0, !dbg !6012
  br i1 %cmp, label %if.then, label %if.end, !dbg !6013

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6014
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6015
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6014
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4754, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6016
  br label %if.end, !dbg !6017

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._PixelWand*, %struct._PixelWand** %fill_wand.addr, align 8, !dbg !6018
  call void @PixelGetQuantumColor(%struct._PixelWand* %3, %struct._PixelPacket* %fill_color), !dbg !6019
  %4 = bitcast %struct._PixelPacket* %new_fill to i8*, !dbg !6020
  %5 = bitcast %struct._PixelPacket* %fill_color to i8*, !dbg !6020
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %4, i8* align 2 %5, i64 8, i1 false), !dbg !6020
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6021
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 12, !dbg !6021
  %7 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6021
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6021
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 11, !dbg !6021
  %9 = load i64, i64* %index, align 8, !dbg !6021
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %7, i64 %9, !dbg !6021
  %10 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6021
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %10, i32 0, i32 5, !dbg !6022
  store %struct._PixelPacket* %fill, %struct._PixelPacket** %current_fill, align 8, !dbg !6023
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6024
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 13, !dbg !6026
  %12 = load i32, i32* %filter_off, align 8, !dbg !6026
  %cmp1 = icmp ne i32 %12, 0, !dbg !6027
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !6028

lor.lhs.false:                                    ; preds = %if.end
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %current_fill, align 8, !dbg !6029
  %call2 = call i32 @IsColorEqual(%struct._PixelPacket* %13, %struct._PixelPacket* %new_fill), !dbg !6030
  %cmp3 = icmp eq i32 %call2, 0, !dbg !6031
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !6032

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6033
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 12, !dbg !6033
  %15 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !6033
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6033
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 11, !dbg !6033
  %17 = load i64, i64* %index6, align 8, !dbg !6033
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %15, i64 %17, !dbg !6033
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !6033
  %fill8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 5, !dbg !6035
  %19 = bitcast %struct._PixelPacket* %fill8 to i8*, !dbg !6036
  %20 = bitcast %struct._PixelPacket* %new_fill to i8*, !dbg !6036
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 2 %20, i64 8, i1 false), !dbg !6036
  %21 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6037
  %call9 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0)), !dbg !6038
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6039
  call void @MvgAppendColor(%struct._DrawingWand* %22, %struct._PixelPacket* %fill_color), !dbg !6040
  %23 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6041
  %call10 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)), !dbg !6042
  br label %if.end11, !dbg !6043

if.end11:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !6044
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetFillOpacity(%struct._DrawingWand* %wand, double %fill_opacity) #0 !dbg !6045 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %fill_opacity.addr = alloca double, align 8
  %opacity = alloca i16, align 2
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6046, metadata !DIExpression()), !dbg !6047
  store double %fill_opacity, double* %fill_opacity.addr, align 8
  call void @llvm.dbg.declare(metadata double* %fill_opacity.addr, metadata !6048, metadata !DIExpression()), !dbg !6049
  call void @llvm.dbg.declare(metadata i16* %opacity, metadata !6050, metadata !DIExpression()), !dbg !6051
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6052
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6054
  %1 = load i32, i32* %debug, align 4, !dbg !6054
  %cmp = icmp ne i32 %1, 0, !dbg !6055
  br i1 %cmp, label %if.then, label %if.end, !dbg !6056

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6057
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6058
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6057
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4802, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6059
  br label %if.end, !dbg !6060

if.end:                                           ; preds = %if.then, %entry
  %3 = load double, double* %fill_opacity.addr, align 8, !dbg !6061
  %sub = fsub double 1.000000e+00, %3, !dbg !6062
  %mul = fmul double 6.553500e+04, %sub, !dbg !6063
  %conv = fptrunc double %mul to float, !dbg !6064
  %call1 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !6065
  store i16 %call1, i16* %opacity, align 2, !dbg !6066
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6067
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 13, !dbg !6069
  %5 = load i32, i32* %filter_off, align 8, !dbg !6069
  %cmp2 = icmp ne i32 %5, 0, !dbg !6070
  br i1 %cmp2, label %if.then9, label %lor.lhs.false, !dbg !6071

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6072
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 12, !dbg !6072
  %7 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6072
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6072
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 11, !dbg !6072
  %9 = load i64, i64* %index, align 8, !dbg !6072
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %7, i64 %9, !dbg !6072
  %10 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6072
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %10, i32 0, i32 5, !dbg !6073
  %opacity4 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill, i32 0, i32 3, !dbg !6074
  %11 = load i16, i16* %opacity4, align 2, !dbg !6074
  %conv5 = zext i16 %11 to i32, !dbg !6072
  %12 = load i16, i16* %opacity, align 2, !dbg !6075
  %conv6 = zext i16 %12 to i32, !dbg !6075
  %cmp7 = icmp ne i32 %conv5, %conv6, !dbg !6076
  br i1 %cmp7, label %if.then9, label %if.end16, !dbg !6077

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %13 = load i16, i16* %opacity, align 2, !dbg !6078
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6080
  %graphic_context10 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 12, !dbg !6080
  %15 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context10, align 8, !dbg !6080
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6080
  %index11 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 11, !dbg !6080
  %17 = load i64, i64* %index11, align 8, !dbg !6080
  %arrayidx12 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %15, i64 %17, !dbg !6080
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx12, align 8, !dbg !6080
  %fill13 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 5, !dbg !6081
  %opacity14 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill13, i32 0, i32 3, !dbg !6082
  store i16 %13, i16* %opacity14, align 2, !dbg !6083
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6084
  %20 = load double, double* %fill_opacity.addr, align 8, !dbg !6085
  %call15 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %19, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.81, i64 0, i64 0), double %20), !dbg !6086
  br label %if.end16, !dbg !6087

if.end16:                                         ; preds = %if.then9, %lor.lhs.false
  ret void, !dbg !6088
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !6089 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !6093, metadata !DIExpression()), !dbg !6094
  %0 = load float, float* %value.addr, align 4, !dbg !6095
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !6097
  br i1 %cmp, label %if.then, label %if.end, !dbg !6098

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !6099
  br label %return, !dbg !6099

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !6100
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !6102
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6103

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !6104
  br label %return, !dbg !6104

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !6105
  %add = fadd float %2, 5.000000e-01, !dbg !6106
  %conv = fptoui float %add to i16, !dbg !6107
  store i16 %conv, i16* %retval, align 2, !dbg !6108
  br label %return, !dbg !6108

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !6109
  ret i16 %3, !dbg !6109
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawSetFontResolution(%struct._DrawingWand* %wand, double %x_resolution, double %y_resolution) #0 !dbg !6110 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x_resolution.addr = alloca double, align 8
  %y_resolution.addr = alloca double, align 8
  %density = alloca [4096 x i8], align 16
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6113, metadata !DIExpression()), !dbg !6114
  store double %x_resolution, double* %x_resolution.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x_resolution.addr, metadata !6115, metadata !DIExpression()), !dbg !6116
  store double %y_resolution, double* %y_resolution.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y_resolution.addr, metadata !6117, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.declare(metadata [4096 x i8]* %density, metadata !6119, metadata !DIExpression()), !dbg !6120
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6121
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6123
  %1 = load i32, i32* %debug, align 4, !dbg !6123
  %cmp = icmp ne i32 %1, 0, !dbg !6124
  br i1 %cmp, label %if.then, label %if.end, !dbg !6125

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6126
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6127
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6126
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4848, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6128
  br label %if.end, !dbg !6129

if.end:                                           ; preds = %if.then, %entry
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %density, i64 0, i64 0, !dbg !6130
  %3 = load double, double* %x_resolution.addr, align 8, !dbg !6131
  %4 = load double, double* %y_resolution.addr, align 8, !dbg !6132
  %call2 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay1, i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.82, i64 0, i64 0), double %3, double %4), !dbg !6133
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6134
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !6134
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6134
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6134
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !6134
  %8 = load i64, i64* %index, align 8, !dbg !6134
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !6134
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6134
  %density3 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 31, !dbg !6135
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %density, i64 0, i64 0, !dbg !6136
  %call5 = call i8* @CloneString(i8** %density3, i8* %arraydecay4), !dbg !6137
  ret i32 1, !dbg !6138
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetOpacity(%struct._DrawingWand* %wand, double %opacity) #0 !dbg !6139 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %opacity.addr = alloca double, align 8
  %quantum_opacity = alloca i16, align 2
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6140, metadata !DIExpression()), !dbg !6141
  store double %opacity, double* %opacity.addr, align 8
  call void @llvm.dbg.declare(metadata double* %opacity.addr, metadata !6142, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.declare(metadata i16* %quantum_opacity, metadata !6144, metadata !DIExpression()), !dbg !6145
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6146
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6148
  %1 = load i32, i32* %debug, align 4, !dbg !6148
  %cmp = icmp ne i32 %1, 0, !dbg !6149
  br i1 %cmp, label %if.then, label %if.end, !dbg !6150

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6151
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6152
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6151
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4888, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6153
  br label %if.end, !dbg !6154

if.end:                                           ; preds = %if.then, %entry
  %3 = load double, double* %opacity.addr, align 8, !dbg !6155
  %sub = fsub double 1.000000e+00, %3, !dbg !6156
  %mul = fmul double 6.553500e+04, %sub, !dbg !6157
  %conv = fptrunc double %mul to float, !dbg !6158
  %call1 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !6159
  store i16 %call1, i16* %quantum_opacity, align 2, !dbg !6160
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6161
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 13, !dbg !6163
  %5 = load i32, i32* %filter_off, align 8, !dbg !6163
  %cmp2 = icmp ne i32 %5, 0, !dbg !6164
  br i1 %cmp2, label %if.then9, label %lor.lhs.false, !dbg !6165

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6166
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 12, !dbg !6166
  %7 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6166
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6166
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 11, !dbg !6166
  %9 = load i64, i64* %index, align 8, !dbg !6166
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %7, i64 %9, !dbg !6166
  %10 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6166
  %opacity4 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %10, i32 0, i32 40, !dbg !6167
  %11 = load i16, i16* %opacity4, align 4, !dbg !6167
  %conv5 = zext i16 %11 to i32, !dbg !6166
  %12 = load i16, i16* %quantum_opacity, align 2, !dbg !6168
  %conv6 = zext i16 %12 to i32, !dbg !6168
  %cmp7 = icmp ne i32 %conv5, %conv6, !dbg !6169
  br i1 %cmp7, label %if.then9, label %if.end16, !dbg !6170

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %13 = load double, double* %opacity.addr, align 8, !dbg !6171
  %conv10 = fptoui double %13 to i16, !dbg !6173
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6174
  %graphic_context11 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 12, !dbg !6174
  %15 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context11, align 8, !dbg !6174
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6174
  %index12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 11, !dbg !6174
  %17 = load i64, i64* %index12, align 8, !dbg !6174
  %arrayidx13 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %15, i64 %17, !dbg !6174
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx13, align 8, !dbg !6174
  %opacity14 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 40, !dbg !6175
  store i16 %conv10, i16* %opacity14, align 4, !dbg !6176
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6177
  %20 = load double, double* %opacity.addr, align 8, !dbg !6178
  %call15 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.83, i64 0, i64 0), double %20), !dbg !6179
  br label %if.end16, !dbg !6180

if.end16:                                         ; preds = %if.then9, %lor.lhs.false
  ret void, !dbg !6181
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawSetFillPatternURL(%struct._DrawingWand* %wand, i8* %fill_url) #0 !dbg !6182 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %fill_url.addr = alloca i8*, align 8
  %pattern = alloca [4096 x i8], align 16
  %pattern_spec = alloca [4096 x i8], align 16
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6183, metadata !DIExpression()), !dbg !6184
  store i8* %fill_url, i8** %fill_url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fill_url.addr, metadata !6185, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.declare(metadata [4096 x i8]* %pattern, metadata !6187, metadata !DIExpression()), !dbg !6188
  call void @llvm.dbg.declare(metadata [4096 x i8]* %pattern_spec, metadata !6189, metadata !DIExpression()), !dbg !6190
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6191
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6193
  %1 = load i32, i32* %debug, align 4, !dbg !6193
  %cmp = icmp ne i32 %1, 0, !dbg !6194
  br i1 %cmp, label %if.then, label %if.end, !dbg !6195

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %fill_url.addr, align 8, !dbg !6196
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4936, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %2), !dbg !6197
  br label %if.end, !dbg !6198

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6199
  %image = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 2, !dbg !6201
  %4 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !6201
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6202
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !6203

if.then2:                                         ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6204
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 3, !dbg !6204
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6204
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6204
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 1, !dbg !6204
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6204
  %call3 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4938, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !6204
  br label %if.end4, !dbg !6204

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load i8*, i8** %fill_url.addr, align 8, !dbg !6205
  %9 = load i8, i8* %8, align 1, !dbg !6207
  %conv = sext i8 %9 to i32, !dbg !6207
  %cmp5 = icmp ne i32 %conv, 35, !dbg !6208
  br i1 %cmp5, label %if.then7, label %if.end10, !dbg !6209

if.then7:                                         ; preds = %if.end4
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6210
  %exception8 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 3, !dbg !6210
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception8, align 8, !dbg !6210
  %12 = load i8*, i8** %fill_url.addr, align 8, !dbg !6210
  %call9 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4942, i32 460, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %12), !dbg !6210
  store i32 0, i32* %retval, align 4, !dbg !6212
  br label %return, !dbg !6212

if.end10:                                         ; preds = %if.end4
  %arraydecay11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %pattern, i64 0, i64 0, !dbg !6213
  %13 = load i8*, i8** %fill_url.addr, align 8, !dbg !6214
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 1, !dbg !6215
  %call12 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay11, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %add.ptr), !dbg !6216
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6217
  %image13 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 2, !dbg !6219
  %15 = load %struct._Image*, %struct._Image** %image13, align 8, !dbg !6219
  %arraydecay14 = getelementptr inbounds [4096 x i8], [4096 x i8]* %pattern, i64 0, i64 0, !dbg !6220
  %call15 = call i8* @GetImageArtifact(%struct._Image* %15, i8* %arraydecay14), !dbg !6221
  %cmp16 = icmp eq i8* %call15, null, !dbg !6222
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !6223

if.then18:                                        ; preds = %if.end10
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6224
  %exception19 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 3, !dbg !6224
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception19, align 8, !dbg !6224
  %18 = load i8*, i8** %fill_url.addr, align 8, !dbg !6224
  %call20 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %17, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4948, i32 460, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %18), !dbg !6224
  store i32 0, i32* %retval, align 4, !dbg !6226
  br label %return, !dbg !6226

if.end21:                                         ; preds = %if.end10
  %arraydecay22 = getelementptr inbounds [4096 x i8], [4096 x i8]* %pattern_spec, i64 0, i64 0, !dbg !6227
  %19 = load i8*, i8** %fill_url.addr, align 8, !dbg !6228
  %call23 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay22, i64 4096, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i64 0, i64 0), i8* %19), !dbg !6229
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6230
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %20, i32 0, i32 12, !dbg !6230
  %21 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6230
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6230
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %22, i32 0, i32 11, !dbg !6230
  %23 = load i64, i64* %index, align 8, !dbg !6230
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %21, i64 %23, !dbg !6230
  %24 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6230
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %24, i32 0, i32 5, !dbg !6232
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill, i32 0, i32 3, !dbg !6233
  %25 = load i16, i16* %opacity, align 2, !dbg !6233
  %conv24 = zext i16 %25 to i32, !dbg !6230
  %cmp25 = icmp ne i32 %conv24, 65535, !dbg !6234
  br i1 %cmp25, label %if.then27, label %if.end37, !dbg !6235

if.then27:                                        ; preds = %if.end21
  %26 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6236
  %graphic_context28 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %26, i32 0, i32 12, !dbg !6236
  %27 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context28, align 8, !dbg !6236
  %28 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6236
  %index29 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %28, i32 0, i32 11, !dbg !6236
  %29 = load i64, i64* %index29, align 8, !dbg !6236
  %arrayidx30 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %27, i64 %29, !dbg !6236
  %30 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx30, align 8, !dbg !6236
  %opacity31 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %30, i32 0, i32 40, !dbg !6237
  %31 = load i16, i16* %opacity31, align 4, !dbg !6237
  %32 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6238
  %graphic_context32 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %32, i32 0, i32 12, !dbg !6238
  %33 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context32, align 8, !dbg !6238
  %34 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6238
  %index33 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %34, i32 0, i32 11, !dbg !6238
  %35 = load i64, i64* %index33, align 8, !dbg !6238
  %arrayidx34 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %33, i64 %35, !dbg !6238
  %36 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx34, align 8, !dbg !6238
  %fill35 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %36, i32 0, i32 5, !dbg !6239
  %opacity36 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill35, i32 0, i32 3, !dbg !6240
  store i16 %31, i16* %opacity36, align 2, !dbg !6241
  br label %if.end37, !dbg !6238

if.end37:                                         ; preds = %if.then27, %if.end21
  %37 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6242
  %arraydecay38 = getelementptr inbounds [4096 x i8], [4096 x i8]* %pattern_spec, i64 0, i64 0, !dbg !6243
  %call39 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %37, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0), i8* %arraydecay38), !dbg !6244
  store i32 1, i32* %retval, align 4, !dbg !6245
  br label %return, !dbg !6245

return:                                           ; preds = %if.end37, %if.then18, %if.then7
  %38 = load i32, i32* %retval, align 4, !dbg !6246
  ret i32 %38, !dbg !6246
}

declare dso_local i8* @GetImageArtifact(%struct._Image*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetFillRule(%struct._DrawingWand* %wand, i32 %fill_rule) #0 !dbg !6247 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %fill_rule.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6248, metadata !DIExpression()), !dbg !6249
  store i32 %fill_rule, i32* %fill_rule.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fill_rule.addr, metadata !6250, metadata !DIExpression()), !dbg !6251
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6252
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6254
  %1 = load i32, i32* %debug, align 4, !dbg !6254
  %cmp = icmp ne i32 %1, 0, !dbg !6255
  br i1 %cmp, label %if.then, label %if.end, !dbg !6256

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6257
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6258
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6257
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4991, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6259
  br label %if.end, !dbg !6260

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6261
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !6263
  %4 = load i32, i32* %filter_off, align 8, !dbg !6263
  %cmp1 = icmp ne i32 %4, 0, !dbg !6264
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !6265

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6266
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !6266
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6266
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6266
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !6266
  %8 = load i64, i64* %index, align 8, !dbg !6266
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !6266
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6266
  %fill_rule2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 14, !dbg !6267
  %10 = load i32, i32* %fill_rule2, align 8, !dbg !6267
  %11 = load i32, i32* %fill_rule.addr, align 4, !dbg !6268
  %cmp3 = icmp ne i32 %10, %11, !dbg !6269
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !6270

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %fill_rule.addr, align 4, !dbg !6271
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6273
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !6273
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !6273
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6273
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !6273
  %16 = load i64, i64* %index6, align 8, !dbg !6273
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !6273
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !6273
  %fill_rule8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 14, !dbg !6274
  store i32 %12, i32* %fill_rule8, align 8, !dbg !6275
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6276
  %19 = load i32, i32* %fill_rule.addr, align 4, !dbg !6277
  %conv = zext i32 %19 to i64, !dbg !6278
  %call9 = call i8* @CommandOptionToMnemonic(i32 24, i64 %conv), !dbg !6279
  %call10 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i64 0, i64 0), i8* %call9), !dbg !6280
  br label %if.end11, !dbg !6281

if.end11:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !6282
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawSetFont(%struct._DrawingWand* %wand, i8* %font_name) #0 !dbg !6283 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %font_name.addr = alloca i8*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6284, metadata !DIExpression()), !dbg !6285
  store i8* %font_name, i8** %font_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %font_name.addr, metadata !6286, metadata !DIExpression()), !dbg !6287
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6288
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6290
  %1 = load i32, i32* %debug, align 4, !dbg !6290
  %cmp = icmp ne i32 %1, 0, !dbg !6291
  br i1 %cmp, label %if.then, label %if.end, !dbg !6292

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6293
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6294
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6293
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5032, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6295
  br label %if.end, !dbg !6296

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6297
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !6299
  %4 = load i32, i32* %filter_off, align 8, !dbg !6299
  %cmp1 = icmp ne i32 %4, 0, !dbg !6300
  br i1 %cmp1, label %if.then10, label %lor.lhs.false, !dbg !6301

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6302
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !6302
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6302
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6302
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !6302
  %8 = load i64, i64* %index, align 8, !dbg !6302
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !6302
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6302
  %font = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 23, !dbg !6303
  %10 = load i8*, i8** %font, align 8, !dbg !6303
  %cmp2 = icmp eq i8* %10, null, !dbg !6304
  br i1 %cmp2, label %if.then10, label %lor.lhs.false3, !dbg !6305

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6306
  %graphic_context4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 12, !dbg !6306
  %12 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context4, align 8, !dbg !6306
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6306
  %index5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 11, !dbg !6306
  %14 = load i64, i64* %index5, align 8, !dbg !6306
  %arrayidx6 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %12, i64 %14, !dbg !6306
  %15 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx6, align 8, !dbg !6306
  %font7 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %15, i32 0, i32 23, !dbg !6307
  %16 = load i8*, i8** %font7, align 8, !dbg !6307
  %17 = load i8*, i8** %font_name.addr, align 8, !dbg !6308
  %call8 = call i32 @LocaleCompare(i8* %16, i8* %17), !dbg !6309
  %cmp9 = icmp ne i32 %call8, 0, !dbg !6310
  br i1 %cmp9, label %if.then10, label %if.end17, !dbg !6311

if.then10:                                        ; preds = %lor.lhs.false3, %lor.lhs.false, %if.end
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6312
  %graphic_context11 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %18, i32 0, i32 12, !dbg !6312
  %19 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context11, align 8, !dbg !6312
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6312
  %index12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %20, i32 0, i32 11, !dbg !6312
  %21 = load i64, i64* %index12, align 8, !dbg !6312
  %arrayidx13 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %19, i64 %21, !dbg !6312
  %22 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx13, align 8, !dbg !6312
  %font14 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %22, i32 0, i32 23, !dbg !6314
  %23 = load i8*, i8** %font_name.addr, align 8, !dbg !6315
  %call15 = call i8* @CloneString(i8** %font14, i8* %23), !dbg !6316
  %24 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6317
  %25 = load i8*, i8** %font_name.addr, align 8, !dbg !6318
  %call16 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.89, i64 0, i64 0), i8* %25), !dbg !6319
  br label %if.end17, !dbg !6320

if.end17:                                         ; preds = %if.then10, %lor.lhs.false3
  ret i32 1, !dbg !6321
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawSetFontFamily(%struct._DrawingWand* %wand, i8* %font_family) #0 !dbg !6322 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %font_family.addr = alloca i8*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6323, metadata !DIExpression()), !dbg !6324
  store i8* %font_family, i8** %font_family.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %font_family.addr, metadata !6325, metadata !DIExpression()), !dbg !6326
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6327
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6329
  %1 = load i32, i32* %debug, align 4, !dbg !6329
  %cmp = icmp ne i32 %1, 0, !dbg !6330
  br i1 %cmp, label %if.then, label %if.end, !dbg !6331

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6332
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6333
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6332
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5075, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6334
  br label %if.end, !dbg !6335

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6336
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !6338
  %4 = load i32, i32* %filter_off, align 8, !dbg !6338
  %cmp1 = icmp ne i32 %4, 0, !dbg !6339
  br i1 %cmp1, label %if.then10, label %lor.lhs.false, !dbg !6340

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6341
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !6341
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6341
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6341
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !6341
  %8 = load i64, i64* %index, align 8, !dbg !6341
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !6341
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6341
  %family = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 25, !dbg !6342
  %10 = load i8*, i8** %family, align 8, !dbg !6342
  %cmp2 = icmp eq i8* %10, null, !dbg !6343
  br i1 %cmp2, label %if.then10, label %lor.lhs.false3, !dbg !6344

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6345
  %graphic_context4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 12, !dbg !6345
  %12 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context4, align 8, !dbg !6345
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6345
  %index5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 11, !dbg !6345
  %14 = load i64, i64* %index5, align 8, !dbg !6345
  %arrayidx6 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %12, i64 %14, !dbg !6345
  %15 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx6, align 8, !dbg !6345
  %family7 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %15, i32 0, i32 25, !dbg !6346
  %16 = load i8*, i8** %family7, align 8, !dbg !6346
  %17 = load i8*, i8** %font_family.addr, align 8, !dbg !6347
  %call8 = call i32 @LocaleCompare(i8* %16, i8* %17), !dbg !6348
  %cmp9 = icmp ne i32 %call8, 0, !dbg !6349
  br i1 %cmp9, label %if.then10, label %if.end17, !dbg !6350

if.then10:                                        ; preds = %lor.lhs.false3, %lor.lhs.false, %if.end
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6351
  %graphic_context11 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %18, i32 0, i32 12, !dbg !6351
  %19 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context11, align 8, !dbg !6351
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6351
  %index12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %20, i32 0, i32 11, !dbg !6351
  %21 = load i64, i64* %index12, align 8, !dbg !6351
  %arrayidx13 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %19, i64 %21, !dbg !6351
  %22 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx13, align 8, !dbg !6351
  %family14 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %22, i32 0, i32 25, !dbg !6353
  %23 = load i8*, i8** %font_family.addr, align 8, !dbg !6354
  %call15 = call i8* @CloneString(i8** %family14, i8* %23), !dbg !6355
  %24 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6356
  %25 = load i8*, i8** %font_family.addr, align 8, !dbg !6357
  %call16 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %24, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.90, i64 0, i64 0), i8* %25), !dbg !6358
  br label %if.end17, !dbg !6359

if.end17:                                         ; preds = %if.then10, %lor.lhs.false3
  ret i32 1, !dbg !6360
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetFontSize(%struct._DrawingWand* %wand, double %pointsize) #0 !dbg !6361 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %pointsize.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6362, metadata !DIExpression()), !dbg !6363
  store double %pointsize, double* %pointsize.addr, align 8
  call void @llvm.dbg.declare(metadata double* %pointsize.addr, metadata !6364, metadata !DIExpression()), !dbg !6365
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6366
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6368
  %1 = load i32, i32* %debug, align 4, !dbg !6368
  %cmp = icmp ne i32 %1, 0, !dbg !6369
  br i1 %cmp, label %if.then, label %if.end, !dbg !6370

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6371
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6372
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6371
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5116, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6373
  br label %if.end, !dbg !6374

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6375
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !6377
  %4 = load i32, i32* %filter_off, align 8, !dbg !6377
  %cmp1 = icmp ne i32 %4, 0, !dbg !6378
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !6379

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6380
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !6380
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6380
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6380
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !6380
  %8 = load i64, i64* %index, align 8, !dbg !6380
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !6380
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6380
  %pointsize2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 30, !dbg !6381
  %10 = load double, double* %pointsize2, align 8, !dbg !6381
  %11 = load double, double* %pointsize.addr, align 8, !dbg !6382
  %sub = fsub double %10, %11, !dbg !6383
  %12 = call double @llvm.fabs.f64(double %sub), !dbg !6384
  %cmp3 = fcmp oge double %12, 1.000000e-15, !dbg !6385
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !6386

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %13 = load double, double* %pointsize.addr, align 8, !dbg !6387
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6389
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 12, !dbg !6389
  %15 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !6389
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6389
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 11, !dbg !6389
  %17 = load i64, i64* %index6, align 8, !dbg !6389
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %15, i64 %17, !dbg !6389
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !6389
  %pointsize8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 30, !dbg !6390
  store double %13, double* %pointsize8, align 8, !dbg !6391
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6392
  %20 = load double, double* %pointsize.addr, align 8, !dbg !6393
  %call9 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91, i64 0, i64 0), double %20), !dbg !6394
  br label %if.end10, !dbg !6395

if.end10:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !6396
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetFontStretch(%struct._DrawingWand* %wand, i32 %font_stretch) #0 !dbg !6397 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %font_stretch.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6401, metadata !DIExpression()), !dbg !6402
  store i32 %font_stretch, i32* %font_stretch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %font_stretch.addr, metadata !6403, metadata !DIExpression()), !dbg !6404
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6405
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6407
  %1 = load i32, i32* %debug, align 4, !dbg !6407
  %cmp = icmp ne i32 %1, 0, !dbg !6408
  br i1 %cmp, label %if.then, label %if.end, !dbg !6409

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6410
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6411
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6410
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5160, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6412
  br label %if.end, !dbg !6413

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6414
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !6416
  %4 = load i32, i32* %filter_off, align 8, !dbg !6416
  %cmp1 = icmp ne i32 %4, 0, !dbg !6417
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !6418

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6419
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !6419
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6419
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6419
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !6419
  %8 = load i64, i64* %index, align 8, !dbg !6419
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !6419
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6419
  %stretch = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 27, !dbg !6420
  %10 = load i32, i32* %stretch, align 4, !dbg !6420
  %11 = load i32, i32* %font_stretch.addr, align 4, !dbg !6421
  %cmp2 = icmp ne i32 %10, %11, !dbg !6422
  br i1 %cmp2, label %if.then3, label %if.end10, !dbg !6423

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %font_stretch.addr, align 4, !dbg !6424
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6426
  %graphic_context4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !6426
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context4, align 8, !dbg !6426
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6426
  %index5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !6426
  %16 = load i64, i64* %index5, align 8, !dbg !6426
  %arrayidx6 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !6426
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx6, align 8, !dbg !6426
  %stretch7 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 27, !dbg !6427
  store i32 %12, i32* %stretch7, align 4, !dbg !6428
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6429
  %19 = load i32, i32* %font_stretch.addr, align 4, !dbg !6430
  %conv = zext i32 %19 to i64, !dbg !6431
  %call8 = call i8* @CommandOptionToMnemonic(i32 63, i64 %conv), !dbg !6432
  %call9 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.92, i64 0, i64 0), i8* %call8), !dbg !6433
  br label %if.end10, !dbg !6434

if.end10:                                         ; preds = %if.then3, %lor.lhs.false
  ret void, !dbg !6435
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetFontStyle(%struct._DrawingWand* %wand, i32 %style) #0 !dbg !6436 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %style.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6440, metadata !DIExpression()), !dbg !6441
  store i32 %style, i32* %style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !6442, metadata !DIExpression()), !dbg !6443
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6444
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6446
  %1 = load i32, i32* %debug, align 4, !dbg !6446
  %cmp = icmp ne i32 %1, 0, !dbg !6447
  br i1 %cmp, label %if.then, label %if.end, !dbg !6448

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6449
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6450
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6449
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5200, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6451
  br label %if.end, !dbg !6452

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6453
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !6455
  %4 = load i32, i32* %filter_off, align 8, !dbg !6455
  %cmp1 = icmp ne i32 %4, 0, !dbg !6456
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !6457

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6458
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !6458
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6458
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6458
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !6458
  %8 = load i64, i64* %index, align 8, !dbg !6458
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !6458
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6458
  %style2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 26, !dbg !6459
  %10 = load i32, i32* %style2, align 8, !dbg !6459
  %11 = load i32, i32* %style.addr, align 4, !dbg !6460
  %cmp3 = icmp ne i32 %10, %11, !dbg !6461
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !6462

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %style.addr, align 4, !dbg !6463
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6465
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !6465
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !6465
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6465
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !6465
  %16 = load i64, i64* %index6, align 8, !dbg !6465
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !6465
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !6465
  %style8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 26, !dbg !6466
  store i32 %12, i32* %style8, align 8, !dbg !6467
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6468
  %19 = load i32, i32* %style.addr, align 4, !dbg !6469
  %conv = zext i32 %19 to i64, !dbg !6470
  %call9 = call i8* @CommandOptionToMnemonic(i32 64, i64 %conv), !dbg !6471
  %call10 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.93, i64 0, i64 0), i8* %call9), !dbg !6472
  br label %if.end11, !dbg !6473

if.end11:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !6474
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetFontWeight(%struct._DrawingWand* %wand, i64 %font_weight) #0 !dbg !6475 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %font_weight.addr = alloca i64, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6478, metadata !DIExpression()), !dbg !6479
  store i64 %font_weight, i64* %font_weight.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %font_weight.addr, metadata !6480, metadata !DIExpression()), !dbg !6481
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6482
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6484
  %1 = load i32, i32* %debug, align 4, !dbg !6484
  %cmp = icmp ne i32 %1, 0, !dbg !6485
  br i1 %cmp, label %if.then, label %if.end, !dbg !6486

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6487
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6488
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6487
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5241, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6489
  br label %if.end, !dbg !6490

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6491
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !6493
  %4 = load i32, i32* %filter_off, align 8, !dbg !6493
  %cmp1 = icmp ne i32 %4, 0, !dbg !6494
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !6495

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6496
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !6496
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6496
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6496
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !6496
  %8 = load i64, i64* %index, align 8, !dbg !6496
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !6496
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6496
  %weight = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 28, !dbg !6497
  %10 = load i64, i64* %weight, align 8, !dbg !6497
  %11 = load i64, i64* %font_weight.addr, align 8, !dbg !6498
  %cmp2 = icmp ne i64 %10, %11, !dbg !6499
  br i1 %cmp2, label %if.then3, label %if.end9, !dbg !6500

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i64, i64* %font_weight.addr, align 8, !dbg !6501
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6503
  %graphic_context4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !6503
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context4, align 8, !dbg !6503
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6503
  %index5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !6503
  %16 = load i64, i64* %index5, align 8, !dbg !6503
  %arrayidx6 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !6503
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx6, align 8, !dbg !6503
  %weight7 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 28, !dbg !6504
  store i64 %12, i64* %weight7, align 8, !dbg !6505
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6506
  %19 = load i64, i64* %font_weight.addr, align 8, !dbg !6507
  %conv = uitofp i64 %19 to double, !dbg !6508
  %call8 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.94, i64 0, i64 0), double %conv), !dbg !6509
  br label %if.end9, !dbg !6510

if.end9:                                          ; preds = %if.then3, %lor.lhs.false
  ret void, !dbg !6511
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetGravity(%struct._DrawingWand* %wand, i32 %gravity) #0 !dbg !6512 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %gravity.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6516, metadata !DIExpression()), !dbg !6517
  store i32 %gravity, i32* %gravity.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gravity.addr, metadata !6518, metadata !DIExpression()), !dbg !6519
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6520
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6522
  %1 = load i32, i32* %debug, align 4, !dbg !6522
  %cmp = icmp ne i32 %1, 0, !dbg !6523
  br i1 %cmp, label %if.then, label %if.end, !dbg !6524

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6525
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6526
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6525
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5283, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6527
  br label %if.end, !dbg !6528

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6529
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !6531
  %4 = load i32, i32* %filter_off, align 8, !dbg !6531
  %cmp1 = icmp ne i32 %4, 0, !dbg !6532
  br i1 %cmp1, label %if.then6, label %lor.lhs.false, !dbg !6533

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6534
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !6534
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6534
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6534
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !6534
  %8 = load i64, i64* %index, align 8, !dbg !6534
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !6534
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6534
  %gravity2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 4, !dbg !6535
  %10 = load i32, i32* %gravity2, align 8, !dbg !6535
  %11 = load i32, i32* %gravity.addr, align 4, !dbg !6536
  %cmp3 = icmp ne i32 %10, %11, !dbg !6537
  br i1 %cmp3, label %if.then6, label %lor.lhs.false4, !dbg !6538

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %12 = load i32, i32* %gravity.addr, align 4, !dbg !6539
  %cmp5 = icmp ne i32 %12, 0, !dbg !6540
  br i1 %cmp5, label %if.then6, label %if.end13, !dbg !6541

if.then6:                                         ; preds = %lor.lhs.false4, %lor.lhs.false, %if.end
  %13 = load i32, i32* %gravity.addr, align 4, !dbg !6542
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6544
  %graphic_context7 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 12, !dbg !6544
  %15 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context7, align 8, !dbg !6544
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6544
  %index8 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 11, !dbg !6544
  %17 = load i64, i64* %index8, align 8, !dbg !6544
  %arrayidx9 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %15, i64 %17, !dbg !6544
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx9, align 8, !dbg !6544
  %gravity10 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 4, !dbg !6545
  store i32 %13, i32* %gravity10, align 8, !dbg !6546
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6547
  %20 = load i32, i32* %gravity.addr, align 4, !dbg !6548
  %conv = zext i32 %20 to i64, !dbg !6549
  %call11 = call i8* @CommandOptionToMnemonic(i32 30, i64 %conv), !dbg !6550
  %call12 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i64 0, i64 0), i8* %call11), !dbg !6551
  br label %if.end13, !dbg !6552

if.end13:                                         ; preds = %if.then6, %lor.lhs.false4
  ret void, !dbg !6553
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetStrokeColor(%struct._DrawingWand* %wand, %struct._PixelWand* %stroke_wand) #0 !dbg !6554 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %stroke_wand.addr = alloca %struct._PixelWand*, align 8
  %current_stroke = alloca %struct._PixelPacket*, align 8
  %new_stroke = alloca %struct._PixelPacket, align 2
  %stroke_color = alloca %struct._PixelPacket, align 2
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6555, metadata !DIExpression()), !dbg !6556
  store %struct._PixelWand* %stroke_wand, %struct._PixelWand** %stroke_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %stroke_wand.addr, metadata !6557, metadata !DIExpression()), !dbg !6558
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %current_stroke, metadata !6559, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %new_stroke, metadata !6561, metadata !DIExpression()), !dbg !6562
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %stroke_color, metadata !6563, metadata !DIExpression()), !dbg !6564
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6565
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6567
  %1 = load i32, i32* %debug, align 4, !dbg !6567
  %cmp = icmp ne i32 %1, 0, !dbg !6568
  br i1 %cmp, label %if.then, label %if.end, !dbg !6569

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6570
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6571
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6570
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5329, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6572
  br label %if.end, !dbg !6573

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._PixelWand*, %struct._PixelWand** %stroke_wand.addr, align 8, !dbg !6574
  call void @PixelGetQuantumColor(%struct._PixelWand* %3, %struct._PixelPacket* %stroke_color), !dbg !6575
  %4 = bitcast %struct._PixelPacket* %new_stroke to i8*, !dbg !6576
  %5 = bitcast %struct._PixelPacket* %stroke_color to i8*, !dbg !6576
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %4, i8* align 2 %5, i64 8, i1 false), !dbg !6576
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6577
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 12, !dbg !6577
  %7 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6577
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6577
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 11, !dbg !6577
  %9 = load i64, i64* %index, align 8, !dbg !6577
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %7, i64 %9, !dbg !6577
  %10 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6577
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %10, i32 0, i32 6, !dbg !6578
  store %struct._PixelPacket* %stroke, %struct._PixelPacket** %current_stroke, align 8, !dbg !6579
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6580
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 13, !dbg !6582
  %12 = load i32, i32* %filter_off, align 8, !dbg !6582
  %cmp1 = icmp ne i32 %12, 0, !dbg !6583
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !6584

lor.lhs.false:                                    ; preds = %if.end
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %current_stroke, align 8, !dbg !6585
  %call2 = call i32 @IsColorEqual(%struct._PixelPacket* %13, %struct._PixelPacket* %new_stroke), !dbg !6586
  %cmp3 = icmp eq i32 %call2, 0, !dbg !6587
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !6588

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6589
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 12, !dbg !6589
  %15 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !6589
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6589
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 11, !dbg !6589
  %17 = load i64, i64* %index6, align 8, !dbg !6589
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %15, i64 %17, !dbg !6589
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !6589
  %stroke8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 6, !dbg !6591
  %19 = bitcast %struct._PixelPacket* %stroke8 to i8*, !dbg !6592
  %20 = bitcast %struct._PixelPacket* %new_stroke to i8*, !dbg !6592
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 2 %20, i64 8, i1 false), !dbg !6592
  %21 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6593
  %call9 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %21, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.96, i64 0, i64 0)), !dbg !6594
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6595
  call void @MvgAppendColor(%struct._DrawingWand* %22, %struct._PixelPacket* %stroke_color), !dbg !6596
  %23 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6597
  %call10 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)), !dbg !6598
  br label %if.end11, !dbg !6599

if.end11:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !6600
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawSetStrokePatternURL(%struct._DrawingWand* %wand, i8* %stroke_url) #0 !dbg !6601 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %stroke_url.addr = alloca i8*, align 8
  %pattern = alloca [4096 x i8], align 16
  %pattern_spec = alloca [4096 x i8], align 16
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6602, metadata !DIExpression()), !dbg !6603
  store i8* %stroke_url, i8** %stroke_url.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stroke_url.addr, metadata !6604, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.declare(metadata [4096 x i8]* %pattern, metadata !6606, metadata !DIExpression()), !dbg !6607
  call void @llvm.dbg.declare(metadata [4096 x i8]* %pattern_spec, metadata !6608, metadata !DIExpression()), !dbg !6609
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6610
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6612
  %1 = load i32, i32* %debug, align 4, !dbg !6612
  %cmp = icmp ne i32 %1, 0, !dbg !6613
  br i1 %cmp, label %if.then, label %if.end, !dbg !6614

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6615
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6616
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6615
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5379, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6617
  br label %if.end, !dbg !6618

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6619
  %image = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 2, !dbg !6621
  %4 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !6621
  %cmp1 = icmp eq %struct._Image* %4, null, !dbg !6622
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !6623

if.then2:                                         ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6624
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 3, !dbg !6624
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6624
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6624
  %name3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 1, !dbg !6624
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !6624
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5381, i32 470, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !6624
  br label %if.end6, !dbg !6624

if.end6:                                          ; preds = %if.then2, %if.end
  %8 = load i8*, i8** %stroke_url.addr, align 8, !dbg !6625
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 0, !dbg !6625
  %9 = load i8, i8* %arrayidx, align 1, !dbg !6625
  %conv = sext i8 %9 to i32, !dbg !6625
  %cmp7 = icmp ne i32 %conv, 35, !dbg !6627
  br i1 %cmp7, label %if.then9, label %if.end12, !dbg !6628

if.then9:                                         ; preds = %if.end6
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6629
  %exception10 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 3, !dbg !6629
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception10, align 8, !dbg !6629
  %12 = load i8*, i8** %stroke_url.addr, align 8, !dbg !6629
  %call11 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5384, i32 460, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %12), !dbg !6629
  br label %if.end12, !dbg !6629

if.end12:                                         ; preds = %if.then9, %if.end6
  %arraydecay13 = getelementptr inbounds [4096 x i8], [4096 x i8]* %pattern, i64 0, i64 0, !dbg !6630
  %13 = load i8*, i8** %stroke_url.addr, align 8, !dbg !6631
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 1, !dbg !6632
  %call14 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay13, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %add.ptr), !dbg !6633
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6634
  %image15 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 2, !dbg !6636
  %15 = load %struct._Image*, %struct._Image** %image15, align 8, !dbg !6636
  %arraydecay16 = getelementptr inbounds [4096 x i8], [4096 x i8]* %pattern, i64 0, i64 0, !dbg !6637
  %call17 = call i8* @GetImageArtifact(%struct._Image* %15, i8* %arraydecay16), !dbg !6638
  %cmp18 = icmp eq i8* %call17, null, !dbg !6639
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !6640

if.then20:                                        ; preds = %if.end12
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6641
  %exception21 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 3, !dbg !6641
  %17 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception21, align 8, !dbg !6641
  %18 = load i8*, i8** %stroke_url.addr, align 8, !dbg !6641
  %call22 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %17, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5388, i32 460, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %18), !dbg !6641
  store i32 0, i32* %retval, align 4, !dbg !6643
  br label %return, !dbg !6643

if.end23:                                         ; preds = %if.end12
  %arraydecay24 = getelementptr inbounds [4096 x i8], [4096 x i8]* %pattern_spec, i64 0, i64 0, !dbg !6644
  %19 = load i8*, i8** %stroke_url.addr, align 8, !dbg !6645
  %call25 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay24, i64 4096, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i64 0, i64 0), i8* %19), !dbg !6646
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6647
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %20, i32 0, i32 12, !dbg !6647
  %21 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6647
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6647
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %22, i32 0, i32 11, !dbg !6647
  %23 = load i64, i64* %index, align 8, !dbg !6647
  %arrayidx26 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %21, i64 %23, !dbg !6647
  %24 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx26, align 8, !dbg !6647
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %24, i32 0, i32 6, !dbg !6649
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke, i32 0, i32 3, !dbg !6650
  %25 = load i16, i16* %opacity, align 2, !dbg !6650
  %conv27 = zext i16 %25 to i32, !dbg !6647
  %cmp28 = icmp ne i32 %conv27, 65535, !dbg !6651
  br i1 %cmp28, label %if.then30, label %if.end40, !dbg !6652

if.then30:                                        ; preds = %if.end23
  %26 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6653
  %graphic_context31 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %26, i32 0, i32 12, !dbg !6653
  %27 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context31, align 8, !dbg !6653
  %28 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6653
  %index32 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %28, i32 0, i32 11, !dbg !6653
  %29 = load i64, i64* %index32, align 8, !dbg !6653
  %arrayidx33 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %27, i64 %29, !dbg !6653
  %30 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx33, align 8, !dbg !6653
  %opacity34 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %30, i32 0, i32 40, !dbg !6654
  %31 = load i16, i16* %opacity34, align 4, !dbg !6654
  %32 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6655
  %graphic_context35 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %32, i32 0, i32 12, !dbg !6655
  %33 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context35, align 8, !dbg !6655
  %34 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6655
  %index36 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %34, i32 0, i32 11, !dbg !6655
  %35 = load i64, i64* %index36, align 8, !dbg !6655
  %arrayidx37 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %33, i64 %35, !dbg !6655
  %36 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx37, align 8, !dbg !6655
  %stroke38 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %36, i32 0, i32 6, !dbg !6656
  %opacity39 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke38, i32 0, i32 3, !dbg !6657
  store i16 %31, i16* %opacity39, align 2, !dbg !6658
  br label %if.end40, !dbg !6655

if.end40:                                         ; preds = %if.then30, %if.end23
  %37 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6659
  %arraydecay41 = getelementptr inbounds [4096 x i8], [4096 x i8]* %pattern_spec, i64 0, i64 0, !dbg !6660
  %call42 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %37, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.97, i64 0, i64 0), i8* %arraydecay41), !dbg !6661
  store i32 1, i32* %retval, align 4, !dbg !6662
  br label %return, !dbg !6662

return:                                           ; preds = %if.end40, %if.then20
  %38 = load i32, i32* %retval, align 4, !dbg !6663
  ret i32 %38, !dbg !6663
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetStrokeAntialias(%struct._DrawingWand* %wand, i32 %stroke_antialias) #0 !dbg !6664 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %stroke_antialias.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6667, metadata !DIExpression()), !dbg !6668
  store i32 %stroke_antialias, i32* %stroke_antialias.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stroke_antialias.addr, metadata !6669, metadata !DIExpression()), !dbg !6670
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6671
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6673
  %1 = load i32, i32* %debug, align 4, !dbg !6673
  %cmp = icmp ne i32 %1, 0, !dbg !6674
  br i1 %cmp, label %if.then, label %if.end, !dbg !6675

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6676
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6677
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6676
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5436, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6678
  br label %if.end, !dbg !6679

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6680
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !6682
  %4 = load i32, i32* %filter_off, align 8, !dbg !6682
  %cmp1 = icmp ne i32 %4, 0, !dbg !6683
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !6684

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6685
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !6685
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6685
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6685
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !6685
  %8 = load i64, i64* %index, align 8, !dbg !6685
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !6685
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6685
  %stroke_antialias2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 12, !dbg !6686
  %10 = load i32, i32* %stroke_antialias2, align 8, !dbg !6686
  %11 = load i32, i32* %stroke_antialias.addr, align 4, !dbg !6687
  %cmp3 = icmp ne i32 %10, %11, !dbg !6688
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !6689

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %stroke_antialias.addr, align 4, !dbg !6690
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6692
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !6692
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !6692
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6692
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !6692
  %16 = load i64, i64* %index6, align 8, !dbg !6692
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !6692
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !6692
  %stroke_antialias8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 12, !dbg !6693
  store i32 %12, i32* %stroke_antialias8, align 8, !dbg !6694
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6695
  %19 = load i32, i32* %stroke_antialias.addr, align 4, !dbg !6696
  %cmp9 = icmp ne i32 %19, 0, !dbg !6697
  %20 = zext i1 %cmp9 to i64, !dbg !6696
  %cond = select i1 %cmp9, i32 1, i32 0, !dbg !6696
  %call10 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.98, i64 0, i64 0), i32 %cond), !dbg !6698
  br label %if.end11, !dbg !6699

if.end11:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !6700
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawSetStrokeDashArray(%struct._DrawingWand* %wand, i64 %number_elements, double* %dasharray) #0 !dbg !6701 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %number_elements.addr = alloca i64, align 8
  %dasharray.addr = alloca double*, align 8
  %update = alloca i32, align 4
  %p = alloca double*, align 8
  %q = alloca double*, align 8
  %i = alloca i64, align 8
  %n_new = alloca i64, align 8
  %n_old = alloca i64, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6704, metadata !DIExpression()), !dbg !6705
  store i64 %number_elements, i64* %number_elements.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_elements.addr, metadata !6706, metadata !DIExpression()), !dbg !6707
  store double* %dasharray, double** %dasharray.addr, align 8
  call void @llvm.dbg.declare(metadata double** %dasharray.addr, metadata !6708, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.declare(metadata i32* %update, metadata !6710, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.declare(metadata double** %p, metadata !6712, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.declare(metadata double** %q, metadata !6714, metadata !DIExpression()), !dbg !6715
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6716, metadata !DIExpression()), !dbg !6717
  call void @llvm.dbg.declare(metadata i64* %n_new, metadata !6718, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.declare(metadata i64* %n_old, metadata !6720, metadata !DIExpression()), !dbg !6721
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6722
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6724
  %1 = load i32, i32* %debug, align 4, !dbg !6724
  %cmp = icmp ne i32 %1, 0, !dbg !6725
  br i1 %cmp, label %if.then, label %if.end, !dbg !6726

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6727
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6728
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6727
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5501, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6729
  br label %if.end, !dbg !6730

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %number_elements.addr, align 8, !dbg !6731
  store i64 %3, i64* %n_new, align 8, !dbg !6732
  store i64 0, i64* %n_old, align 8, !dbg !6733
  store i32 0, i32* %update, align 4, !dbg !6734
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6735
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 12, !dbg !6735
  %5 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6735
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6735
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 11, !dbg !6735
  %7 = load i64, i64* %index, align 8, !dbg !6735
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %5, i64 %7, !dbg !6735
  %8 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6735
  %dash_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %8, i32 0, i32 36, !dbg !6736
  %9 = load double*, double** %dash_pattern, align 8, !dbg !6736
  store double* %9, double** %q, align 8, !dbg !6737
  %10 = load double*, double** %q, align 8, !dbg !6738
  %cmp1 = icmp ne double* %10, null, !dbg !6740
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !6741

if.then2:                                         ; preds = %if.end
  br label %while.cond, !dbg !6742

while.cond:                                       ; preds = %while.body, %if.then2
  %11 = load double*, double** %q, align 8, !dbg !6743
  %incdec.ptr = getelementptr inbounds double, double* %11, i32 1, !dbg !6743
  store double* %incdec.ptr, double** %q, align 8, !dbg !6743
  %12 = load double, double* %11, align 8, !dbg !6744
  %cmp3 = fcmp une double %12, 0.000000e+00, !dbg !6745
  br i1 %cmp3, label %while.body, label %while.end, !dbg !6742

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_old, align 8, !dbg !6746
  %inc = add i64 %13, 1, !dbg !6746
  store i64 %inc, i64* %n_old, align 8, !dbg !6746
  br label %while.cond, !dbg !6742, !llvm.loop !6747

while.end:                                        ; preds = %while.cond
  br label %if.end4, !dbg !6742

if.end4:                                          ; preds = %while.end, %if.end
  %14 = load i64, i64* %n_old, align 8, !dbg !6748
  %cmp5 = icmp eq i64 %14, 0, !dbg !6750
  br i1 %cmp5, label %land.lhs.true, label %if.else, !dbg !6751

land.lhs.true:                                    ; preds = %if.end4
  %15 = load i64, i64* %n_new, align 8, !dbg !6752
  %cmp6 = icmp eq i64 %15, 0, !dbg !6753
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !6754

if.then7:                                         ; preds = %land.lhs.true
  store i32 0, i32* %update, align 4, !dbg !6755
  br label %if.end32, !dbg !6756

if.else:                                          ; preds = %land.lhs.true, %if.end4
  %16 = load i64, i64* %n_old, align 8, !dbg !6757
  %17 = load i64, i64* %n_new, align 8, !dbg !6759
  %cmp8 = icmp ne i64 %16, %17, !dbg !6760
  br i1 %cmp8, label %if.then9, label %if.else10, !dbg !6761

if.then9:                                         ; preds = %if.else
  store i32 1, i32* %update, align 4, !dbg !6762
  br label %if.end31, !dbg !6763

if.else10:                                        ; preds = %if.else
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6764
  %graphic_context11 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %18, i32 0, i32 12, !dbg !6764
  %19 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context11, align 8, !dbg !6764
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6764
  %index12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %20, i32 0, i32 11, !dbg !6764
  %21 = load i64, i64* %index12, align 8, !dbg !6764
  %arrayidx13 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %19, i64 %21, !dbg !6764
  %22 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx13, align 8, !dbg !6764
  %dash_pattern14 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %22, i32 0, i32 36, !dbg !6766
  %23 = load double*, double** %dash_pattern14, align 8, !dbg !6766
  %cmp15 = icmp ne double* %23, null, !dbg !6767
  br i1 %cmp15, label %land.lhs.true16, label %if.end30, !dbg !6768

land.lhs.true16:                                  ; preds = %if.else10
  %24 = load double*, double** %dasharray.addr, align 8, !dbg !6769
  %cmp17 = icmp ne double* %24, null, !dbg !6770
  br i1 %cmp17, label %if.then18, label %if.end30, !dbg !6771

if.then18:                                        ; preds = %land.lhs.true16
  %25 = load double*, double** %dasharray.addr, align 8, !dbg !6772
  store double* %25, double** %p, align 8, !dbg !6774
  %26 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6775
  %graphic_context19 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %26, i32 0, i32 12, !dbg !6775
  %27 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context19, align 8, !dbg !6775
  %28 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6775
  %index20 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %28, i32 0, i32 11, !dbg !6775
  %29 = load i64, i64* %index20, align 8, !dbg !6775
  %arrayidx21 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %27, i64 %29, !dbg !6775
  %30 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx21, align 8, !dbg !6775
  %dash_pattern22 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %30, i32 0, i32 36, !dbg !6776
  %31 = load double*, double** %dash_pattern22, align 8, !dbg !6776
  store double* %31, double** %q, align 8, !dbg !6777
  store i64 0, i64* %i, align 8, !dbg !6778
  br label %for.cond, !dbg !6780

for.cond:                                         ; preds = %for.inc, %if.then18
  %32 = load i64, i64* %i, align 8, !dbg !6781
  %33 = load i64, i64* %n_new, align 8, !dbg !6783
  %cmp23 = icmp slt i64 %32, %33, !dbg !6784
  br i1 %cmp23, label %for.body, label %for.end, !dbg !6785

for.body:                                         ; preds = %for.cond
  %34 = load double*, double** %p, align 8, !dbg !6786
  %35 = load double, double* %34, align 8, !dbg !6789
  %36 = load double*, double** %q, align 8, !dbg !6790
  %37 = load double, double* %36, align 8, !dbg !6791
  %sub = fsub double %35, %37, !dbg !6792
  %38 = call double @llvm.fabs.f64(double %sub), !dbg !6793
  %cmp24 = fcmp oge double %38, 1.000000e-15, !dbg !6794
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !6795

if.then25:                                        ; preds = %for.body
  store i32 1, i32* %update, align 4, !dbg !6796
  br label %for.end, !dbg !6798

if.end26:                                         ; preds = %for.body
  %39 = load double*, double** %p, align 8, !dbg !6799
  %incdec.ptr27 = getelementptr inbounds double, double* %39, i32 1, !dbg !6799
  store double* %incdec.ptr27, double** %p, align 8, !dbg !6799
  %40 = load double*, double** %q, align 8, !dbg !6800
  %incdec.ptr28 = getelementptr inbounds double, double* %40, i32 1, !dbg !6800
  store double* %incdec.ptr28, double** %q, align 8, !dbg !6800
  br label %for.inc, !dbg !6801

for.inc:                                          ; preds = %if.end26
  %41 = load i64, i64* %i, align 8, !dbg !6802
  %inc29 = add nsw i64 %41, 1, !dbg !6802
  store i64 %inc29, i64* %i, align 8, !dbg !6802
  br label %for.cond, !dbg !6803, !llvm.loop !6804

for.end:                                          ; preds = %if.then25, %for.cond
  br label %if.end30, !dbg !6806

if.end30:                                         ; preds = %for.end, %land.lhs.true16, %if.else10
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then9
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then7
  %42 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6807
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %42, i32 0, i32 13, !dbg !6809
  %43 = load i32, i32* %filter_off, align 8, !dbg !6809
  %cmp33 = icmp ne i32 %43, 0, !dbg !6810
  br i1 %cmp33, label %if.then35, label %lor.lhs.false, !dbg !6811

lor.lhs.false:                                    ; preds = %if.end32
  %44 = load i32, i32* %update, align 4, !dbg !6812
  %cmp34 = icmp ne i32 %44, 0, !dbg !6813
  br i1 %cmp34, label %if.then35, label %if.end117, !dbg !6814

if.then35:                                        ; preds = %lor.lhs.false, %if.end32
  %45 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6815
  %graphic_context36 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %45, i32 0, i32 12, !dbg !6815
  %46 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context36, align 8, !dbg !6815
  %47 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6815
  %index37 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %47, i32 0, i32 11, !dbg !6815
  %48 = load i64, i64* %index37, align 8, !dbg !6815
  %arrayidx38 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %46, i64 %48, !dbg !6815
  %49 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx38, align 8, !dbg !6815
  %dash_pattern39 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %49, i32 0, i32 36, !dbg !6818
  %50 = load double*, double** %dash_pattern39, align 8, !dbg !6818
  %cmp40 = icmp ne double* %50, null, !dbg !6819
  br i1 %cmp40, label %if.then41, label %if.end51, !dbg !6820

if.then41:                                        ; preds = %if.then35
  %51 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6821
  %graphic_context42 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %51, i32 0, i32 12, !dbg !6821
  %52 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context42, align 8, !dbg !6821
  %53 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6821
  %index43 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %53, i32 0, i32 11, !dbg !6821
  %54 = load i64, i64* %index43, align 8, !dbg !6821
  %arrayidx44 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %52, i64 %54, !dbg !6821
  %55 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx44, align 8, !dbg !6821
  %dash_pattern45 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %55, i32 0, i32 36, !dbg !6822
  %56 = load double*, double** %dash_pattern45, align 8, !dbg !6822
  %57 = bitcast double* %56 to i8*, !dbg !6821
  %call46 = call i8* @RelinquishMagickMemory(i8* %57), !dbg !6823
  %58 = bitcast i8* %call46 to double*, !dbg !6824
  %59 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6825
  %graphic_context47 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %59, i32 0, i32 12, !dbg !6825
  %60 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context47, align 8, !dbg !6825
  %61 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6825
  %index48 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %61, i32 0, i32 11, !dbg !6825
  %62 = load i64, i64* %index48, align 8, !dbg !6825
  %arrayidx49 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %60, i64 %62, !dbg !6825
  %63 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx49, align 8, !dbg !6825
  %dash_pattern50 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %63, i32 0, i32 36, !dbg !6826
  store double* %58, double** %dash_pattern50, align 8, !dbg !6827
  br label %if.end51, !dbg !6825

if.end51:                                         ; preds = %if.then41, %if.then35
  %64 = load i64, i64* %n_new, align 8, !dbg !6828
  %cmp52 = icmp ne i64 %64, 0, !dbg !6830
  br i1 %cmp52, label %if.then53, label %if.end94, !dbg !6831

if.then53:                                        ; preds = %if.end51
  %65 = load i64, i64* %n_new, align 8, !dbg !6832
  %add = add i64 %65, 1, !dbg !6834
  %call54 = call i8* @AcquireQuantumMemory(i64 %add, i64 8) #16, !dbg !6835
  %66 = bitcast i8* %call54 to double*, !dbg !6836
  %67 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6837
  %graphic_context55 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %67, i32 0, i32 12, !dbg !6837
  %68 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context55, align 8, !dbg !6837
  %69 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6837
  %index56 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %69, i32 0, i32 11, !dbg !6837
  %70 = load i64, i64* %index56, align 8, !dbg !6837
  %arrayidx57 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %68, i64 %70, !dbg !6837
  %71 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx57, align 8, !dbg !6837
  %dash_pattern58 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %71, i32 0, i32 36, !dbg !6838
  store double* %66, double** %dash_pattern58, align 8, !dbg !6839
  %72 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6840
  %graphic_context59 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %72, i32 0, i32 12, !dbg !6840
  %73 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context59, align 8, !dbg !6840
  %74 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6840
  %index60 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %74, i32 0, i32 11, !dbg !6840
  %75 = load i64, i64* %index60, align 8, !dbg !6840
  %arrayidx61 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %73, i64 %75, !dbg !6840
  %76 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx61, align 8, !dbg !6840
  %dash_pattern62 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %76, i32 0, i32 36, !dbg !6842
  %77 = load double*, double** %dash_pattern62, align 8, !dbg !6842
  %cmp63 = icmp eq double* %77, null, !dbg !6843
  br i1 %cmp63, label %if.then64, label %if.end68, !dbg !6844

if.then64:                                        ; preds = %if.then53
  %78 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6845
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %78, i32 0, i32 3, !dbg !6845
  %79 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6845
  %80 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6845
  %name65 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %80, i32 0, i32 1, !dbg !6845
  %arraydecay66 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name65, i64 0, i64 0, !dbg !6845
  %call67 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %79, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5543, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay66), !dbg !6845
  store i32 0, i32* %retval, align 4, !dbg !6847
  br label %return, !dbg !6847

if.end68:                                         ; preds = %if.then53
  store i64 0, i64* %i, align 8, !dbg !6848
  br label %for.cond69, !dbg !6850

for.cond69:                                       ; preds = %for.inc86, %if.end68
  %81 = load i64, i64* %i, align 8, !dbg !6851
  %82 = load i64, i64* %n_new, align 8, !dbg !6853
  %cmp70 = icmp slt i64 %81, %82, !dbg !6854
  br i1 %cmp70, label %for.body71, label %for.end88, !dbg !6855

for.body71:                                       ; preds = %for.cond69
  %83 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6856
  %graphic_context72 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %83, i32 0, i32 12, !dbg !6856
  %84 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context72, align 8, !dbg !6856
  %85 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6856
  %index73 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %85, i32 0, i32 11, !dbg !6856
  %86 = load i64, i64* %index73, align 8, !dbg !6856
  %arrayidx74 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %84, i64 %86, !dbg !6856
  %87 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx74, align 8, !dbg !6856
  %dash_pattern75 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %87, i32 0, i32 36, !dbg !6858
  %88 = load double*, double** %dash_pattern75, align 8, !dbg !6858
  %89 = load i64, i64* %i, align 8, !dbg !6859
  %arrayidx76 = getelementptr inbounds double, double* %88, i64 %89, !dbg !6856
  store double 0.000000e+00, double* %arrayidx76, align 8, !dbg !6860
  %90 = load double*, double** %dasharray.addr, align 8, !dbg !6861
  %cmp77 = icmp ne double* %90, null, !dbg !6863
  br i1 %cmp77, label %if.then78, label %if.end85, !dbg !6864

if.then78:                                        ; preds = %for.body71
  %91 = load double*, double** %dasharray.addr, align 8, !dbg !6865
  %92 = load i64, i64* %i, align 8, !dbg !6866
  %arrayidx79 = getelementptr inbounds double, double* %91, i64 %92, !dbg !6865
  %93 = load double, double* %arrayidx79, align 8, !dbg !6865
  %94 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6867
  %graphic_context80 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %94, i32 0, i32 12, !dbg !6867
  %95 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context80, align 8, !dbg !6867
  %96 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6867
  %index81 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %96, i32 0, i32 11, !dbg !6867
  %97 = load i64, i64* %index81, align 8, !dbg !6867
  %arrayidx82 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %95, i64 %97, !dbg !6867
  %98 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx82, align 8, !dbg !6867
  %dash_pattern83 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %98, i32 0, i32 36, !dbg !6868
  %99 = load double*, double** %dash_pattern83, align 8, !dbg !6868
  %100 = load i64, i64* %i, align 8, !dbg !6869
  %arrayidx84 = getelementptr inbounds double, double* %99, i64 %100, !dbg !6867
  store double %93, double* %arrayidx84, align 8, !dbg !6870
  br label %if.end85, !dbg !6867

if.end85:                                         ; preds = %if.then78, %for.body71
  br label %for.inc86, !dbg !6871

for.inc86:                                        ; preds = %if.end85
  %101 = load i64, i64* %i, align 8, !dbg !6872
  %inc87 = add nsw i64 %101, 1, !dbg !6872
  store i64 %inc87, i64* %i, align 8, !dbg !6872
  br label %for.cond69, !dbg !6873, !llvm.loop !6874

for.end88:                                        ; preds = %for.cond69
  %102 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6876
  %graphic_context89 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %102, i32 0, i32 12, !dbg !6876
  %103 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context89, align 8, !dbg !6876
  %104 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6876
  %index90 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %104, i32 0, i32 11, !dbg !6876
  %105 = load i64, i64* %index90, align 8, !dbg !6876
  %arrayidx91 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %103, i64 %105, !dbg !6876
  %106 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx91, align 8, !dbg !6876
  %dash_pattern92 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %106, i32 0, i32 36, !dbg !6877
  %107 = load double*, double** %dash_pattern92, align 8, !dbg !6877
  %108 = load i64, i64* %n_new, align 8, !dbg !6878
  %arrayidx93 = getelementptr inbounds double, double* %107, i64 %108, !dbg !6876
  store double 0.000000e+00, double* %arrayidx93, align 8, !dbg !6879
  br label %if.end94, !dbg !6880

if.end94:                                         ; preds = %for.end88, %if.end51
  %109 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6881
  %call95 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %109, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.99, i64 0, i64 0)), !dbg !6882
  %110 = load i64, i64* %n_new, align 8, !dbg !6883
  %cmp96 = icmp eq i64 %110, 0, !dbg !6885
  br i1 %cmp96, label %if.then97, label %if.else99, !dbg !6886

if.then97:                                        ; preds = %if.end94
  %111 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6887
  %call98 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %111, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i64 0, i64 0)), !dbg !6888
  br label %if.end116, !dbg !6889

if.else99:                                        ; preds = %if.end94
  %112 = load double*, double** %dasharray.addr, align 8, !dbg !6890
  %cmp100 = icmp ne double* %112, null, !dbg !6892
  br i1 %cmp100, label %if.then101, label %if.end115, !dbg !6893

if.then101:                                       ; preds = %if.else99
  store i64 0, i64* %i, align 8, !dbg !6894
  br label %for.cond102, !dbg !6897

for.cond102:                                      ; preds = %for.inc111, %if.then101
  %113 = load i64, i64* %i, align 8, !dbg !6898
  %114 = load i64, i64* %n_new, align 8, !dbg !6900
  %cmp103 = icmp slt i64 %113, %114, !dbg !6901
  br i1 %cmp103, label %for.body104, label %for.end113, !dbg !6902

for.body104:                                      ; preds = %for.cond102
  %115 = load i64, i64* %i, align 8, !dbg !6903
  %cmp105 = icmp ne i64 %115, 0, !dbg !6906
  br i1 %cmp105, label %if.then106, label %if.end108, !dbg !6907

if.then106:                                       ; preds = %for.body104
  %116 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6908
  %call107 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %116, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0)), !dbg !6909
  br label %if.end108, !dbg !6910

if.end108:                                        ; preds = %if.then106, %for.body104
  %117 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6911
  %118 = load double*, double** %dasharray.addr, align 8, !dbg !6912
  %119 = load i64, i64* %i, align 8, !dbg !6913
  %arrayidx109 = getelementptr inbounds double, double* %118, i64 %119, !dbg !6912
  %120 = load double, double* %arrayidx109, align 8, !dbg !6912
  %call110 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %117, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), double %120), !dbg !6914
  br label %for.inc111, !dbg !6915

for.inc111:                                       ; preds = %if.end108
  %121 = load i64, i64* %i, align 8, !dbg !6916
  %inc112 = add nsw i64 %121, 1, !dbg !6916
  store i64 %inc112, i64* %i, align 8, !dbg !6916
  br label %for.cond102, !dbg !6917, !llvm.loop !6918

for.end113:                                       ; preds = %for.cond102
  %122 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6920
  %call114 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %122, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !6921
  br label %if.end115, !dbg !6922

if.end115:                                        ; preds = %for.end113, %if.else99
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then97
  br label %if.end117, !dbg !6923

if.end117:                                        ; preds = %if.end116, %lor.lhs.false
  store i32 1, i32* %retval, align 4, !dbg !6924
  br label %return, !dbg !6924

return:                                           ; preds = %if.end117, %if.then64
  %123 = load i32, i32* %retval, align 4, !dbg !6925
  ret i32 %123, !dbg !6925
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetStrokeDashOffset(%struct._DrawingWand* %wand, double %dash_offset) #0 !dbg !6926 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %dash_offset.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6927, metadata !DIExpression()), !dbg !6928
  store double %dash_offset, double* %dash_offset.addr, align 8
  call void @llvm.dbg.declare(metadata double* %dash_offset.addr, metadata !6929, metadata !DIExpression()), !dbg !6930
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6931
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6933
  %1 = load i32, i32* %debug, align 4, !dbg !6933
  %cmp = icmp ne i32 %1, 0, !dbg !6934
  br i1 %cmp, label %if.then, label %if.end, !dbg !6935

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6936
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6937
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6936
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5604, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6938
  br label %if.end, !dbg !6939

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6940
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !6942
  %4 = load i32, i32* %filter_off, align 8, !dbg !6942
  %cmp1 = icmp ne i32 %4, 0, !dbg !6943
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !6944

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6945
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !6945
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6945
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6945
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !6945
  %8 = load i64, i64* %index, align 8, !dbg !6945
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !6945
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6945
  %dash_offset2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 18, !dbg !6946
  %10 = load double, double* %dash_offset2, align 8, !dbg !6946
  %11 = load double, double* %dash_offset.addr, align 8, !dbg !6947
  %sub = fsub double %10, %11, !dbg !6948
  %12 = call double @llvm.fabs.f64(double %sub), !dbg !6949
  %cmp3 = fcmp oge double %12, 1.000000e-15, !dbg !6950
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !6951

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %13 = load double, double* %dash_offset.addr, align 8, !dbg !6952
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6954
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 12, !dbg !6954
  %15 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !6954
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6954
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 11, !dbg !6954
  %17 = load i64, i64* %index6, align 8, !dbg !6954
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %15, i64 %17, !dbg !6954
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !6954
  %dash_offset8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 18, !dbg !6955
  store double %13, double* %dash_offset8, align 8, !dbg !6956
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6957
  %20 = load double, double* %dash_offset.addr, align 8, !dbg !6958
  %call9 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %19, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.101, i64 0, i64 0), double %20), !dbg !6959
  br label %if.end10, !dbg !6960

if.end10:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !6961
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetStrokeLineCap(%struct._DrawingWand* %wand, i32 %linecap) #0 !dbg !6962 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %linecap.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !6966, metadata !DIExpression()), !dbg !6967
  store i32 %linecap, i32* %linecap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %linecap.addr, metadata !6968, metadata !DIExpression()), !dbg !6969
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6970
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !6972
  %1 = load i32, i32* %debug, align 4, !dbg !6972
  %cmp = icmp ne i32 %1, 0, !dbg !6973
  br i1 %cmp, label %if.then, label %if.end, !dbg !6974

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6975
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !6976
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !6975
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5645, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6977
  br label %if.end, !dbg !6978

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6979
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !6981
  %4 = load i32, i32* %filter_off, align 8, !dbg !6981
  %cmp1 = icmp ne i32 %4, 0, !dbg !6982
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !6983

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6984
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !6984
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6984
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6984
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !6984
  %8 = load i64, i64* %index, align 8, !dbg !6984
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !6984
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !6984
  %linecap2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 15, !dbg !6985
  %10 = load i32, i32* %linecap2, align 4, !dbg !6985
  %11 = load i32, i32* %linecap.addr, align 4, !dbg !6986
  %cmp3 = icmp ne i32 %10, %11, !dbg !6987
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !6988

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %linecap.addr, align 4, !dbg !6989
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6991
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !6991
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !6991
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6991
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !6991
  %16 = load i64, i64* %index6, align 8, !dbg !6991
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !6991
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !6991
  %linecap8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 15, !dbg !6992
  store i32 %12, i32* %linecap8, align 4, !dbg !6993
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !6994
  %19 = load i32, i32* %linecap.addr, align 4, !dbg !6995
  %conv = zext i32 %19 to i64, !dbg !6996
  %call9 = call i8* @CommandOptionToMnemonic(i32 36, i64 %conv), !dbg !6997
  %call10 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i64 0, i64 0), i8* %call9), !dbg !6998
  br label %if.end11, !dbg !6999

if.end11:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !7000
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetStrokeLineJoin(%struct._DrawingWand* %wand, i32 %linejoin) #0 !dbg !7001 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %linejoin.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7005, metadata !DIExpression()), !dbg !7006
  store i32 %linejoin, i32* %linejoin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %linejoin.addr, metadata !7007, metadata !DIExpression()), !dbg !7008
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7009
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7011
  %1 = load i32, i32* %debug, align 4, !dbg !7011
  %cmp = icmp ne i32 %1, 0, !dbg !7012
  br i1 %cmp, label %if.then, label %if.end, !dbg !7013

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7014
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7015
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7014
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5687, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7016
  br label %if.end, !dbg !7017

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7018
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !7020
  %4 = load i32, i32* %filter_off, align 8, !dbg !7020
  %cmp1 = icmp ne i32 %4, 0, !dbg !7021
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !7022

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7023
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !7023
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7023
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7023
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !7023
  %8 = load i64, i64* %index, align 8, !dbg !7023
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !7023
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7023
  %linejoin2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 16, !dbg !7024
  %10 = load i32, i32* %linejoin2, align 8, !dbg !7024
  %11 = load i32, i32* %linejoin.addr, align 4, !dbg !7025
  %cmp3 = icmp ne i32 %10, %11, !dbg !7026
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !7027

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %linejoin.addr, align 4, !dbg !7028
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7030
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !7030
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !7030
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7030
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !7030
  %16 = load i64, i64* %index6, align 8, !dbg !7030
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !7030
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !7030
  %linejoin8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 16, !dbg !7031
  store i32 %12, i32* %linejoin8, align 8, !dbg !7032
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7033
  %19 = load i32, i32* %linejoin.addr, align 4, !dbg !7034
  %conv = zext i32 %19 to i64, !dbg !7035
  %call9 = call i8* @CommandOptionToMnemonic(i32 37, i64 %conv), !dbg !7036
  %call10 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.103, i64 0, i64 0), i8* %call9), !dbg !7037
  br label %if.end11, !dbg !7038

if.end11:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !7039
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetStrokeMiterLimit(%struct._DrawingWand* %wand, i64 %miterlimit) #0 !dbg !7040 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %miterlimit.addr = alloca i64, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7041, metadata !DIExpression()), !dbg !7042
  store i64 %miterlimit, i64* %miterlimit.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %miterlimit.addr, metadata !7043, metadata !DIExpression()), !dbg !7044
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7045
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7047
  %1 = load i32, i32* %debug, align 4, !dbg !7047
  %cmp = icmp ne i32 %1, 0, !dbg !7048
  br i1 %cmp, label %if.then, label %if.end, !dbg !7049

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7050
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7051
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7050
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5732, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7052
  br label %if.end, !dbg !7053

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7054
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !7054
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7054
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7054
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !7054
  %6 = load i64, i64* %index, align 8, !dbg !7054
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !7054
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7054
  %miterlimit1 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 17, !dbg !7056
  %8 = load i64, i64* %miterlimit1, align 8, !dbg !7056
  %9 = load i64, i64* %miterlimit.addr, align 8, !dbg !7057
  %cmp2 = icmp ne i64 %8, %9, !dbg !7058
  br i1 %cmp2, label %if.then3, label %if.end9, !dbg !7059

if.then3:                                         ; preds = %if.end
  %10 = load i64, i64* %miterlimit.addr, align 8, !dbg !7060
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7062
  %graphic_context4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 12, !dbg !7062
  %12 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context4, align 8, !dbg !7062
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7062
  %index5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 11, !dbg !7062
  %14 = load i64, i64* %index5, align 8, !dbg !7062
  %arrayidx6 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %12, i64 %14, !dbg !7062
  %15 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx6, align 8, !dbg !7062
  %miterlimit7 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %15, i32 0, i32 17, !dbg !7063
  store i64 %10, i64* %miterlimit7, align 8, !dbg !7064
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7065
  %17 = load i64, i64* %miterlimit.addr, align 8, !dbg !7066
  %conv = uitofp i64 %17 to double, !dbg !7067
  %call8 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.104, i64 0, i64 0), double %conv), !dbg !7068
  br label %if.end9, !dbg !7069

if.end9:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !7070
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetStrokeOpacity(%struct._DrawingWand* %wand, double %stroke_opacity) #0 !dbg !7071 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %stroke_opacity.addr = alloca double, align 8
  %opacity = alloca i16, align 2
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7072, metadata !DIExpression()), !dbg !7073
  store double %stroke_opacity, double* %stroke_opacity.addr, align 8
  call void @llvm.dbg.declare(metadata double* %stroke_opacity.addr, metadata !7074, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.declare(metadata i16* %opacity, metadata !7076, metadata !DIExpression()), !dbg !7077
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7078
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7080
  %1 = load i32, i32* %debug, align 4, !dbg !7080
  %cmp = icmp ne i32 %1, 0, !dbg !7081
  br i1 %cmp, label %if.then, label %if.end, !dbg !7082

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7083
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7084
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7083
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5774, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7085
  br label %if.end, !dbg !7086

if.end:                                           ; preds = %if.then, %entry
  %3 = load double, double* %stroke_opacity.addr, align 8, !dbg !7087
  %sub = fsub double 1.000000e+00, %3, !dbg !7088
  %mul = fmul double 6.553500e+04, %sub, !dbg !7089
  %conv = fptrunc double %mul to float, !dbg !7090
  %call1 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !7091
  store i16 %call1, i16* %opacity, align 2, !dbg !7092
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7093
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 13, !dbg !7095
  %5 = load i32, i32* %filter_off, align 8, !dbg !7095
  %cmp2 = icmp ne i32 %5, 0, !dbg !7096
  br i1 %cmp2, label %if.then9, label %lor.lhs.false, !dbg !7097

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7098
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 12, !dbg !7098
  %7 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7098
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7098
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 11, !dbg !7098
  %9 = load i64, i64* %index, align 8, !dbg !7098
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %7, i64 %9, !dbg !7098
  %10 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7098
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %10, i32 0, i32 6, !dbg !7099
  %opacity4 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke, i32 0, i32 3, !dbg !7100
  %11 = load i16, i16* %opacity4, align 2, !dbg !7100
  %conv5 = zext i16 %11 to i32, !dbg !7098
  %12 = load i16, i16* %opacity, align 2, !dbg !7101
  %conv6 = zext i16 %12 to i32, !dbg !7101
  %cmp7 = icmp ne i32 %conv5, %conv6, !dbg !7102
  br i1 %cmp7, label %if.then9, label %if.end16, !dbg !7103

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %13 = load i16, i16* %opacity, align 2, !dbg !7104
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7106
  %graphic_context10 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 12, !dbg !7106
  %15 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context10, align 8, !dbg !7106
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7106
  %index11 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 11, !dbg !7106
  %17 = load i64, i64* %index11, align 8, !dbg !7106
  %arrayidx12 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %15, i64 %17, !dbg !7106
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx12, align 8, !dbg !7106
  %stroke13 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 6, !dbg !7107
  %opacity14 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke13, i32 0, i32 3, !dbg !7108
  store i16 %13, i16* %opacity14, align 2, !dbg !7109
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7110
  %20 = load double, double* %stroke_opacity.addr, align 8, !dbg !7111
  %call15 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %19, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.105, i64 0, i64 0), double %20), !dbg !7112
  br label %if.end16, !dbg !7113

if.end16:                                         ; preds = %if.then9, %lor.lhs.false
  ret void, !dbg !7114
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetStrokeWidth(%struct._DrawingWand* %wand, double %stroke_width) #0 !dbg !7115 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %stroke_width.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7116, metadata !DIExpression()), !dbg !7117
  store double %stroke_width, double* %stroke_width.addr, align 8
  call void @llvm.dbg.declare(metadata double* %stroke_width.addr, metadata !7118, metadata !DIExpression()), !dbg !7119
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7120
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7122
  %1 = load i32, i32* %debug, align 4, !dbg !7122
  %cmp = icmp ne i32 %1, 0, !dbg !7123
  br i1 %cmp, label %if.then, label %if.end, !dbg !7124

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7125
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7126
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7125
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5815, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7127
  br label %if.end, !dbg !7128

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7129
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !7131
  %4 = load i32, i32* %filter_off, align 8, !dbg !7131
  %cmp1 = icmp ne i32 %4, 0, !dbg !7132
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !7133

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7134
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !7134
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7134
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7134
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !7134
  %8 = load i64, i64* %index, align 8, !dbg !7134
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !7134
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7134
  %stroke_width2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 7, !dbg !7135
  %10 = load double, double* %stroke_width2, align 8, !dbg !7135
  %11 = load double, double* %stroke_width.addr, align 8, !dbg !7136
  %sub = fsub double %10, %11, !dbg !7137
  %12 = call double @llvm.fabs.f64(double %sub), !dbg !7138
  %cmp3 = fcmp oge double %12, 1.000000e-15, !dbg !7139
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !7140

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %13 = load double, double* %stroke_width.addr, align 8, !dbg !7141
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7143
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 12, !dbg !7143
  %15 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !7143
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7143
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 11, !dbg !7143
  %17 = load i64, i64* %index6, align 8, !dbg !7143
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %15, i64 %17, !dbg !7143
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !7143
  %stroke_width8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 7, !dbg !7144
  store double %13, double* %stroke_width8, align 8, !dbg !7145
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7146
  %20 = load double, double* %stroke_width.addr, align 8, !dbg !7147
  %call9 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %19, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.106, i64 0, i64 0), double %20), !dbg !7148
  br label %if.end10, !dbg !7149

if.end10:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !7150
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetTextAlignment(%struct._DrawingWand* %wand, i32 %alignment) #0 !dbg !7151 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %alignment.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7155, metadata !DIExpression()), !dbg !7156
  store i32 %alignment, i32* %alignment.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alignment.addr, metadata !7157, metadata !DIExpression()), !dbg !7158
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7159
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7161
  %1 = load i32, i32* %debug, align 4, !dbg !7161
  %cmp = icmp ne i32 %1, 0, !dbg !7162
  br i1 %cmp, label %if.then, label %if.end, !dbg !7163

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7164
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7165
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7164
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5856, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7166
  br label %if.end, !dbg !7167

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7168
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !7170
  %4 = load i32, i32* %filter_off, align 8, !dbg !7170
  %cmp1 = icmp ne i32 %4, 0, !dbg !7171
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !7172

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7173
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !7173
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7173
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7173
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !7173
  %8 = load i64, i64* %index, align 8, !dbg !7173
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !7173
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7173
  %align = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 32, !dbg !7174
  %10 = load i32, i32* %align, align 8, !dbg !7174
  %11 = load i32, i32* %alignment.addr, align 4, !dbg !7175
  %cmp2 = icmp ne i32 %10, %11, !dbg !7176
  br i1 %cmp2, label %if.then3, label %if.end10, !dbg !7177

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %alignment.addr, align 4, !dbg !7178
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7180
  %graphic_context4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !7180
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context4, align 8, !dbg !7180
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7180
  %index5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !7180
  %16 = load i64, i64* %index5, align 8, !dbg !7180
  %arrayidx6 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !7180
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx6, align 8, !dbg !7180
  %align7 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 32, !dbg !7181
  store i32 %12, i32* %align7, align 8, !dbg !7182
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7183
  %19 = load i32, i32* %alignment.addr, align 4, !dbg !7184
  %conv = zext i32 %19 to i64, !dbg !7185
  %call8 = call i8* @CommandOptionToMnemonic(i32 0, i64 %conv), !dbg !7186
  %call9 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.107, i64 0, i64 0), i8* %call8), !dbg !7187
  br label %if.end10, !dbg !7188

if.end10:                                         ; preds = %if.then3, %lor.lhs.false
  ret void, !dbg !7189
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetTextAntialias(%struct._DrawingWand* %wand, i32 %text_antialias) #0 !dbg !7190 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %text_antialias.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7191, metadata !DIExpression()), !dbg !7192
  store i32 %text_antialias, i32* %text_antialias.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %text_antialias.addr, metadata !7193, metadata !DIExpression()), !dbg !7194
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7195
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7197
  %1 = load i32, i32* %debug, align 4, !dbg !7197
  %cmp = icmp ne i32 %1, 0, !dbg !7198
  br i1 %cmp, label %if.then, label %if.end, !dbg !7199

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7200
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7201
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7200
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5899, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7202
  br label %if.end, !dbg !7203

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7204
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !7206
  %4 = load i32, i32* %filter_off, align 8, !dbg !7206
  %cmp1 = icmp ne i32 %4, 0, !dbg !7207
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !7208

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7209
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !7209
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7209
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7209
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !7209
  %8 = load i64, i64* %index, align 8, !dbg !7209
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !7209
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7209
  %text_antialias2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 13, !dbg !7210
  %10 = load i32, i32* %text_antialias2, align 4, !dbg !7210
  %11 = load i32, i32* %text_antialias.addr, align 4, !dbg !7211
  %cmp3 = icmp ne i32 %10, %11, !dbg !7212
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !7213

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %text_antialias.addr, align 4, !dbg !7214
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7216
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !7216
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !7216
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7216
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !7216
  %16 = load i64, i64* %index6, align 8, !dbg !7216
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !7216
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !7216
  %text_antialias8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 13, !dbg !7217
  store i32 %12, i32* %text_antialias8, align 4, !dbg !7218
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7219
  %19 = load i32, i32* %text_antialias.addr, align 4, !dbg !7220
  %cmp9 = icmp ne i32 %19, 0, !dbg !7221
  %20 = zext i1 %cmp9 to i64, !dbg !7220
  %cond = select i1 %cmp9, i32 1, i32 0, !dbg !7220
  %call10 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.108, i64 0, i64 0), i32 %cond), !dbg !7222
  br label %if.end11, !dbg !7223

if.end11:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !7224
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetTextDecoration(%struct._DrawingWand* %wand, i32 %decoration) #0 !dbg !7225 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %decoration.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7229, metadata !DIExpression()), !dbg !7230
  store i32 %decoration, i32* %decoration.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %decoration.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7233
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7235
  %1 = load i32, i32* %debug, align 4, !dbg !7235
  %cmp = icmp ne i32 %1, 0, !dbg !7236
  br i1 %cmp, label %if.then, label %if.end, !dbg !7237

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7238
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7239
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7238
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5941, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7240
  br label %if.end, !dbg !7241

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7242
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !7244
  %4 = load i32, i32* %filter_off, align 8, !dbg !7244
  %cmp1 = icmp ne i32 %4, 0, !dbg !7245
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !7246

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7247
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !7247
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7247
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7247
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !7247
  %8 = load i64, i64* %index, align 8, !dbg !7247
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !7247
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7247
  %decorate = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 19, !dbg !7248
  %10 = load i32, i32* %decorate, align 8, !dbg !7248
  %11 = load i32, i32* %decoration.addr, align 4, !dbg !7249
  %cmp2 = icmp ne i32 %10, %11, !dbg !7250
  br i1 %cmp2, label %if.then3, label %if.end10, !dbg !7251

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %decoration.addr, align 4, !dbg !7252
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7254
  %graphic_context4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !7254
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context4, align 8, !dbg !7254
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7254
  %index5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !7254
  %16 = load i64, i64* %index5, align 8, !dbg !7254
  %arrayidx6 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !7254
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx6, align 8, !dbg !7254
  %decorate7 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 19, !dbg !7255
  store i32 %12, i32* %decorate7, align 8, !dbg !7256
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7257
  %19 = load i32, i32* %decoration.addr, align 4, !dbg !7258
  %conv = zext i32 %19 to i64, !dbg !7259
  %call8 = call i8* @CommandOptionToMnemonic(i32 16, i64 %conv), !dbg !7260
  %call9 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.109, i64 0, i64 0), i8* %call8), !dbg !7261
  br label %if.end10, !dbg !7262

if.end10:                                         ; preds = %if.then3, %lor.lhs.false
  ret void, !dbg !7263
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetTextDirection(%struct._DrawingWand* %wand, i32 %direction) #0 !dbg !7264 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %direction.addr = alloca i32, align 4
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7268, metadata !DIExpression()), !dbg !7269
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !7270, metadata !DIExpression()), !dbg !7271
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7272
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7274
  %1 = load i32, i32* %debug, align 4, !dbg !7274
  %cmp = icmp ne i32 %1, 0, !dbg !7275
  br i1 %cmp, label %if.then, label %if.end, !dbg !7276

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7277
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7278
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7277
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5985, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7279
  br label %if.end, !dbg !7280

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7281
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !7283
  %4 = load i32, i32* %filter_off, align 8, !dbg !7283
  %cmp1 = icmp ne i32 %4, 0, !dbg !7284
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !7285

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7286
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !7286
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7286
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7286
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !7286
  %8 = load i64, i64* %index, align 8, !dbg !7286
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !7286
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7286
  %direction2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 48, !dbg !7287
  %10 = load i32, i32* %direction2, align 8, !dbg !7287
  %11 = load i32, i32* %direction.addr, align 4, !dbg !7288
  %cmp3 = icmp ne i32 %10, %11, !dbg !7289
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !7290

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load i32, i32* %direction.addr, align 4, !dbg !7291
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7293
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !7293
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !7293
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7293
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !7293
  %16 = load i64, i64* %index6, align 8, !dbg !7293
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !7293
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !7293
  %direction8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 48, !dbg !7294
  store i32 %12, i32* %direction8, align 8, !dbg !7295
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7296
  %19 = load i32, i32* %direction.addr, align 4, !dbg !7297
  %conv = zext i32 %19 to i64, !dbg !7298
  %call9 = call i8* @CommandOptionToMnemonic(i32 18, i64 %conv), !dbg !7299
  %call10 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.110, i64 0, i64 0), i8* %call9), !dbg !7300
  br label %if.end11, !dbg !7301

if.end11:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !7302
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetTextEncoding(%struct._DrawingWand* %wand, i8* %encoding) #0 !dbg !7303 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %encoding.addr = alloca i8*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7304, metadata !DIExpression()), !dbg !7305
  store i8* %encoding, i8** %encoding.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %encoding.addr, metadata !7306, metadata !DIExpression()), !dbg !7307
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7308
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7310
  %1 = load i32, i32* %debug, align 4, !dbg !7310
  %cmp = icmp ne i32 %1, 0, !dbg !7311
  br i1 %cmp, label %if.then, label %if.end, !dbg !7312

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7313
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7314
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7313
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6029, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7315
  br label %if.end, !dbg !7316

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7317
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !7319
  %4 = load i32, i32* %filter_off, align 8, !dbg !7319
  %cmp1 = icmp ne i32 %4, 0, !dbg !7320
  br i1 %cmp1, label %if.then11, label %lor.lhs.false, !dbg !7321

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7322
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !7322
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7322
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7322
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !7322
  %8 = load i64, i64* %index, align 8, !dbg !7322
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !7322
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7322
  %encoding2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 29, !dbg !7323
  %10 = load i8*, i8** %encoding2, align 8, !dbg !7323
  %cmp3 = icmp eq i8* %10, null, !dbg !7324
  br i1 %cmp3, label %if.then11, label %lor.lhs.false4, !dbg !7325

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7326
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 12, !dbg !7326
  %12 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !7326
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7326
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 11, !dbg !7326
  %14 = load i64, i64* %index6, align 8, !dbg !7326
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %12, i64 %14, !dbg !7326
  %15 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !7326
  %encoding8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %15, i32 0, i32 29, !dbg !7327
  %16 = load i8*, i8** %encoding8, align 8, !dbg !7327
  %17 = load i8*, i8** %encoding.addr, align 8, !dbg !7328
  %call9 = call i32 @LocaleCompare(i8* %16, i8* %17), !dbg !7329
  %cmp10 = icmp ne i32 %call9, 0, !dbg !7330
  br i1 %cmp10, label %if.then11, label %if.end18, !dbg !7331

if.then11:                                        ; preds = %lor.lhs.false4, %lor.lhs.false, %if.end
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7332
  %graphic_context12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %18, i32 0, i32 12, !dbg !7332
  %19 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context12, align 8, !dbg !7332
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7332
  %index13 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %20, i32 0, i32 11, !dbg !7332
  %21 = load i64, i64* %index13, align 8, !dbg !7332
  %arrayidx14 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %19, i64 %21, !dbg !7332
  %22 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx14, align 8, !dbg !7332
  %encoding15 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %22, i32 0, i32 29, !dbg !7334
  %23 = load i8*, i8** %encoding.addr, align 8, !dbg !7335
  %call16 = call i8* @CloneString(i8** %encoding15, i8* %23), !dbg !7336
  %24 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7337
  %25 = load i8*, i8** %encoding.addr, align 8, !dbg !7338
  %call17 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %24, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.111, i64 0, i64 0), i8* %25), !dbg !7339
  br label %if.end18, !dbg !7340

if.end18:                                         ; preds = %if.then11, %lor.lhs.false4
  ret void, !dbg !7341
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetTextKerning(%struct._DrawingWand* %wand, double %kerning) #0 !dbg !7342 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %kerning.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7343, metadata !DIExpression()), !dbg !7344
  store double %kerning, double* %kerning.addr, align 8
  call void @llvm.dbg.declare(metadata double* %kerning.addr, metadata !7345, metadata !DIExpression()), !dbg !7346
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7347
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7349
  %1 = load i32, i32* %debug, align 4, !dbg !7349
  %cmp = icmp ne i32 %1, 0, !dbg !7350
  br i1 %cmp, label %if.then, label %if.end, !dbg !7351

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7352
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7353
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7352
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6070, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7354
  br label %if.end, !dbg !7355

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7356
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !7358
  %4 = load i32, i32* %filter_off, align 8, !dbg !7358
  %cmp1 = icmp ne i32 %4, 0, !dbg !7359
  br i1 %cmp1, label %land.lhs.true, label %if.end10, !dbg !7360

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7361
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !7361
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7361
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7361
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !7361
  %8 = load i64, i64* %index, align 8, !dbg !7361
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !7361
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7361
  %kerning2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 45, !dbg !7362
  %10 = load double, double* %kerning2, align 8, !dbg !7362
  %11 = load double, double* %kerning.addr, align 8, !dbg !7363
  %cmp3 = fcmp une double %10, %11, !dbg !7364
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !7365

if.then4:                                         ; preds = %land.lhs.true
  %12 = load double, double* %kerning.addr, align 8, !dbg !7366
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7368
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !7368
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !7368
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7368
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !7368
  %16 = load i64, i64* %index6, align 8, !dbg !7368
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !7368
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !7368
  %kerning8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 45, !dbg !7369
  store double %12, double* %kerning8, align 8, !dbg !7370
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7371
  %19 = load double, double* %kerning.addr, align 8, !dbg !7372
  %call9 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i64 0, i64 0), double %19), !dbg !7373
  br label %if.end10, !dbg !7374

if.end10:                                         ; preds = %if.then4, %land.lhs.true, %if.end
  ret void, !dbg !7375
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetTextInterlineSpacing(%struct._DrawingWand* %wand, double %interline_spacing) #0 !dbg !7376 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %interline_spacing.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7377, metadata !DIExpression()), !dbg !7378
  store double %interline_spacing, double* %interline_spacing.addr, align 8
  call void @llvm.dbg.declare(metadata double* %interline_spacing.addr, metadata !7379, metadata !DIExpression()), !dbg !7380
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7381
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7383
  %1 = load i32, i32* %debug, align 4, !dbg !7383
  %cmp = icmp ne i32 %1, 0, !dbg !7384
  br i1 %cmp, label %if.then, label %if.end, !dbg !7385

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7386
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7387
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7386
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7388
  br label %if.end, !dbg !7389

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7390
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !7392
  %4 = load i32, i32* %filter_off, align 8, !dbg !7392
  %cmp1 = icmp ne i32 %4, 0, !dbg !7393
  br i1 %cmp1, label %land.lhs.true, label %if.end10, !dbg !7394

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7395
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !7395
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7395
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7395
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !7395
  %8 = load i64, i64* %index, align 8, !dbg !7395
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !7395
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7395
  %interline_spacing2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 47, !dbg !7396
  %10 = load double, double* %interline_spacing2, align 8, !dbg !7396
  %11 = load double, double* %interline_spacing.addr, align 8, !dbg !7397
  %cmp3 = fcmp une double %10, %11, !dbg !7398
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !7399

if.then4:                                         ; preds = %land.lhs.true
  %12 = load double, double* %interline_spacing.addr, align 8, !dbg !7400
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7402
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !7402
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !7402
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7402
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !7402
  %16 = load i64, i64* %index6, align 8, !dbg !7402
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !7402
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !7402
  %interline_spacing8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 47, !dbg !7403
  store double %12, double* %interline_spacing8, align 8, !dbg !7404
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7405
  %19 = load double, double* %interline_spacing.addr, align 8, !dbg !7406
  %call9 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.113, i64 0, i64 0), double %19), !dbg !7407
  br label %if.end10, !dbg !7408

if.end10:                                         ; preds = %if.then4, %land.lhs.true, %if.end
  ret void, !dbg !7409
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetTextInterwordSpacing(%struct._DrawingWand* %wand, double %interword_spacing) #0 !dbg !7410 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %interword_spacing.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7411, metadata !DIExpression()), !dbg !7412
  store double %interword_spacing, double* %interword_spacing.addr, align 8
  call void @llvm.dbg.declare(metadata double* %interword_spacing.addr, metadata !7413, metadata !DIExpression()), !dbg !7414
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7415
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7417
  %1 = load i32, i32* %debug, align 4, !dbg !7417
  %cmp = icmp ne i32 %1, 0, !dbg !7418
  br i1 %cmp, label %if.then, label %if.end, !dbg !7419

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7420
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7421
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7420
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7422
  br label %if.end, !dbg !7423

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7424
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 13, !dbg !7426
  %4 = load i32, i32* %filter_off, align 8, !dbg !7426
  %cmp1 = icmp ne i32 %4, 0, !dbg !7427
  br i1 %cmp1, label %land.lhs.true, label %if.end10, !dbg !7428

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7429
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !7429
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7429
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7429
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 11, !dbg !7429
  %8 = load i64, i64* %index, align 8, !dbg !7429
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %6, i64 %8, !dbg !7429
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7429
  %interword_spacing2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 46, !dbg !7430
  %10 = load double, double* %interword_spacing2, align 8, !dbg !7430
  %11 = load double, double* %interword_spacing.addr, align 8, !dbg !7431
  %cmp3 = fcmp une double %10, %11, !dbg !7432
  br i1 %cmp3, label %if.then4, label %if.end10, !dbg !7433

if.then4:                                         ; preds = %land.lhs.true
  %12 = load double, double* %interword_spacing.addr, align 8, !dbg !7434
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7436
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !7436
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !7436
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7436
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !7436
  %16 = load i64, i64* %index6, align 8, !dbg !7436
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !7436
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !7436
  %interword_spacing8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 46, !dbg !7437
  store double %12, double* %interword_spacing8, align 8, !dbg !7438
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7439
  %19 = load double, double* %interword_spacing.addr, align 8, !dbg !7440
  %call9 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.114, i64 0, i64 0), double %19), !dbg !7441
  br label %if.end10, !dbg !7442

if.end10:                                         ; preds = %if.then4, %land.lhs.true, %if.end
  ret void, !dbg !7443
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetTextUnderColor(%struct._DrawingWand* %wand, %struct._PixelWand* %under_wand) #0 !dbg !7444 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %under_wand.addr = alloca %struct._PixelWand*, align 8
  %under_color = alloca %struct._PixelPacket, align 2
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7445, metadata !DIExpression()), !dbg !7446
  store %struct._PixelWand* %under_wand, %struct._PixelWand** %under_wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelWand** %under_wand.addr, metadata !7447, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %under_color, metadata !7449, metadata !DIExpression()), !dbg !7450
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7451
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7453
  %1 = load i32, i32* %debug, align 4, !dbg !7453
  %cmp = icmp ne i32 %1, 0, !dbg !7454
  br i1 %cmp, label %if.then, label %if.end, !dbg !7455

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7456
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7457
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7456
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6196, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7458
  br label %if.end, !dbg !7459

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._PixelWand*, %struct._PixelWand** %under_wand.addr, align 8, !dbg !7460
  call void @PixelGetQuantumColor(%struct._PixelWand* %3, %struct._PixelPacket* %under_color), !dbg !7461
  %4 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7462
  %filter_off = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %4, i32 0, i32 13, !dbg !7464
  %5 = load i32, i32* %filter_off, align 8, !dbg !7464
  %cmp1 = icmp ne i32 %5, 0, !dbg !7465
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !7466

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7467
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %6, i32 0, i32 12, !dbg !7467
  %7 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7467
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7467
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 11, !dbg !7467
  %9 = load i64, i64* %index, align 8, !dbg !7467
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %7, i64 %9, !dbg !7467
  %10 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7467
  %undercolor = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %10, i32 0, i32 33, !dbg !7468
  %call2 = call i32 @IsColorEqual(%struct._PixelPacket* %undercolor, %struct._PixelPacket* %under_color), !dbg !7469
  %cmp3 = icmp eq i32 %call2, 0, !dbg !7470
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !7471

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7472
  %graphic_context5 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 12, !dbg !7472
  %12 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context5, align 8, !dbg !7472
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7472
  %index6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 11, !dbg !7472
  %14 = load i64, i64* %index6, align 8, !dbg !7472
  %arrayidx7 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %12, i64 %14, !dbg !7472
  %15 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx7, align 8, !dbg !7472
  %undercolor8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %15, i32 0, i32 33, !dbg !7474
  %16 = bitcast %struct._PixelPacket* %undercolor8 to i8*, !dbg !7475
  %17 = bitcast %struct._PixelPacket* %under_color to i8*, !dbg !7475
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 2 %17, i64 8, i1 false), !dbg !7475
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7476
  %call9 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %18, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.115, i64 0, i64 0)), !dbg !7477
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7478
  call void @MvgAppendColor(%struct._DrawingWand* %19, %struct._PixelPacket* %under_color), !dbg !7479
  %20 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7480
  %call10 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)), !dbg !7481
  br label %if.end11, !dbg !7482

if.end11:                                         ; preds = %if.then4, %lor.lhs.false
  ret void, !dbg !7483
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawSetVectorGraphics(%struct._DrawingWand* %wand, i8* %xml) #0 !dbg !7484 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %xml.addr = alloca i8*, align 8
  %value = alloca i8*, align 8
  %child = alloca %struct._XMLTreeInfo*, align 8
  %xml_info = alloca %struct._XMLTreeInfo*, align 8
  %token = alloca [4096 x i8], align 16
  %q = alloca i8*, align 8
  %x = alloca i64, align 8
  %j = alloca i64, align 8
  %p = alloca i8*, align 8
  %exception294 = alloca %struct._ExceptionInfo, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !7485, metadata !DIExpression()), !dbg !7486
  store i8* %xml, i8** %xml.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %xml.addr, metadata !7487, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.declare(metadata i8** %value, metadata !7489, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.declare(metadata %struct._XMLTreeInfo** %child, metadata !7491, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.declare(metadata %struct._XMLTreeInfo** %xml_info, metadata !7493, metadata !DIExpression()), !dbg !7494
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7495
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !7497
  %1 = load i32, i32* %debug, align 4, !dbg !7497
  %cmp = icmp ne i32 %1, 0, !dbg !7498
  br i1 %cmp, label %if.then, label %if.end, !dbg !7499

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7500
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !7501
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !7500
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6263, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7502
  br label %if.end, !dbg !7503

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7504
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !7504
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !7504
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7504
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !7504
  %6 = load i64, i64* %index, align 8, !dbg !7504
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !7504
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !7504
  %call1 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %7), !dbg !7505
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7506
  %graphic_context2 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 12, !dbg !7506
  %9 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context2, align 8, !dbg !7506
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7506
  %index3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 11, !dbg !7506
  %11 = load i64, i64* %index3, align 8, !dbg !7506
  %arrayidx4 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %9, i64 %11, !dbg !7506
  store %struct._DrawInfo* %call1, %struct._DrawInfo** %arrayidx4, align 8, !dbg !7507
  %call5 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* null), !dbg !7508
  %12 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7509
  %graphic_context6 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %12, i32 0, i32 12, !dbg !7509
  %13 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context6, align 8, !dbg !7509
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7509
  %index7 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 11, !dbg !7509
  %15 = load i64, i64* %index7, align 8, !dbg !7509
  %arrayidx8 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %13, i64 %15, !dbg !7509
  store %struct._DrawInfo* %call5, %struct._DrawInfo** %arrayidx8, align 8, !dbg !7510
  %16 = load i8*, i8** %xml.addr, align 8, !dbg !7511
  %cmp9 = icmp eq i8* %16, null, !dbg !7513
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7514

if.then10:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7515
  br label %return, !dbg !7515

if.end11:                                         ; preds = %if.end
  %17 = load i8*, i8** %xml.addr, align 8, !dbg !7516
  %18 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7517
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %18, i32 0, i32 3, !dbg !7518
  %19 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7518
  %call12 = call %struct._XMLTreeInfo* @NewXMLTree(i8* %17, %struct._ExceptionInfo* %19), !dbg !7519
  store %struct._XMLTreeInfo* %call12, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7520
  %20 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7521
  %cmp13 = icmp eq %struct._XMLTreeInfo* %20, null, !dbg !7523
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !7524

if.then14:                                        ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !7525
  br label %return, !dbg !7525

if.end15:                                         ; preds = %if.end11
  %21 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7526
  %call16 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0)), !dbg !7527
  store %struct._XMLTreeInfo* %call16, %struct._XMLTreeInfo** %child, align 8, !dbg !7528
  %22 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7529
  %cmp17 = icmp ne %struct._XMLTreeInfo* %22, null, !dbg !7531
  br i1 %cmp17, label %if.then18, label %if.end24, !dbg !7532

if.then18:                                        ; preds = %if.end15
  %23 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7533
  %graphic_context19 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %23, i32 0, i32 12, !dbg !7533
  %24 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context19, align 8, !dbg !7533
  %25 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7533
  %index20 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %25, i32 0, i32 11, !dbg !7533
  %26 = load i64, i64* %index20, align 8, !dbg !7533
  %arrayidx21 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %24, i64 %26, !dbg !7533
  %27 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx21, align 8, !dbg !7533
  %clip_mask = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %27, i32 0, i32 37, !dbg !7534
  %28 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7535
  %call22 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %28), !dbg !7536
  %call23 = call i8* @CloneString(i8** %clip_mask, i8* %call22), !dbg !7537
  br label %if.end24, !dbg !7538

if.end24:                                         ; preds = %if.then18, %if.end15
  %29 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7539
  %call25 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %29, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0)), !dbg !7540
  store %struct._XMLTreeInfo* %call25, %struct._XMLTreeInfo** %child, align 8, !dbg !7541
  %30 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7542
  %cmp26 = icmp ne %struct._XMLTreeInfo* %30, null, !dbg !7544
  br i1 %cmp26, label %if.then27, label %if.end36, !dbg !7545

if.then27:                                        ; preds = %if.end24
  %31 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7546
  %call28 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %31), !dbg !7548
  store i8* %call28, i8** %value, align 8, !dbg !7549
  %32 = load i8*, i8** %value, align 8, !dbg !7550
  %cmp29 = icmp ne i8* %32, null, !dbg !7552
  br i1 %cmp29, label %if.then30, label %if.end35, !dbg !7553

if.then30:                                        ; preds = %if.then27
  %33 = load i8*, i8** %value, align 8, !dbg !7554
  %call31 = call i64 @ParseCommandOption(i32 6, i32 0, i8* %33), !dbg !7555
  %conv = trunc i64 %call31 to i32, !dbg !7556
  %34 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7557
  %graphic_context32 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %34, i32 0, i32 12, !dbg !7557
  %35 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context32, align 8, !dbg !7557
  %36 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7557
  %index33 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %36, i32 0, i32 11, !dbg !7557
  %37 = load i64, i64* %index33, align 8, !dbg !7557
  %arrayidx34 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %35, i64 %37, !dbg !7557
  %38 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx34, align 8, !dbg !7557
  %clip_units = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %38, i32 0, i32 39, !dbg !7558
  store i32 %conv, i32* %clip_units, align 8, !dbg !7559
  br label %if.end35, !dbg !7557

if.end35:                                         ; preds = %if.then30, %if.then27
  br label %if.end36, !dbg !7560

if.end36:                                         ; preds = %if.end35, %if.end24
  %39 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7561
  %call37 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0)), !dbg !7562
  store %struct._XMLTreeInfo* %call37, %struct._XMLTreeInfo** %child, align 8, !dbg !7563
  %40 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7564
  %cmp38 = icmp ne %struct._XMLTreeInfo* %40, null, !dbg !7566
  br i1 %cmp38, label %if.then40, label %if.end51, !dbg !7567

if.then40:                                        ; preds = %if.end36
  %41 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7568
  %call41 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %41), !dbg !7570
  store i8* %call41, i8** %value, align 8, !dbg !7571
  %42 = load i8*, i8** %value, align 8, !dbg !7572
  %cmp42 = icmp ne i8* %42, null, !dbg !7574
  br i1 %cmp42, label %if.then44, label %if.end50, !dbg !7575

if.then44:                                        ; preds = %if.then40
  %43 = load i8*, i8** %value, align 8, !dbg !7576
  %call45 = call i64 @ParseCommandOption(i32 16, i32 0, i8* %43), !dbg !7577
  %conv46 = trunc i64 %call45 to i32, !dbg !7578
  %44 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7579
  %graphic_context47 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %44, i32 0, i32 12, !dbg !7579
  %45 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context47, align 8, !dbg !7579
  %46 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7579
  %index48 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %46, i32 0, i32 11, !dbg !7579
  %47 = load i64, i64* %index48, align 8, !dbg !7579
  %arrayidx49 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %45, i64 %47, !dbg !7579
  %48 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx49, align 8, !dbg !7579
  %decorate = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %48, i32 0, i32 19, !dbg !7580
  store i32 %conv46, i32* %decorate, align 8, !dbg !7581
  br label %if.end50, !dbg !7579

if.end50:                                         ; preds = %if.then44, %if.then40
  br label %if.end51, !dbg !7582

if.end51:                                         ; preds = %if.end50, %if.end36
  %49 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7583
  %call52 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %49, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0)), !dbg !7584
  store %struct._XMLTreeInfo* %call52, %struct._XMLTreeInfo** %child, align 8, !dbg !7585
  %50 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7586
  %cmp53 = icmp ne %struct._XMLTreeInfo* %50, null, !dbg !7588
  br i1 %cmp53, label %if.then55, label %if.end61, !dbg !7589

if.then55:                                        ; preds = %if.end51
  %51 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7590
  %graphic_context56 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %51, i32 0, i32 12, !dbg !7590
  %52 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context56, align 8, !dbg !7590
  %53 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7590
  %index57 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %53, i32 0, i32 11, !dbg !7590
  %54 = load i64, i64* %index57, align 8, !dbg !7590
  %arrayidx58 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %52, i64 %54, !dbg !7590
  %55 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx58, align 8, !dbg !7590
  %encoding = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %55, i32 0, i32 29, !dbg !7591
  %56 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7592
  %call59 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %56), !dbg !7593
  %call60 = call i8* @CloneString(i8** %encoding, i8* %call59), !dbg !7594
  br label %if.end61, !dbg !7595

if.end61:                                         ; preds = %if.then55, %if.end51
  %57 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7596
  %call62 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0)), !dbg !7597
  store %struct._XMLTreeInfo* %call62, %struct._XMLTreeInfo** %child, align 8, !dbg !7598
  %58 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7599
  %cmp63 = icmp ne %struct._XMLTreeInfo* %58, null, !dbg !7601
  br i1 %cmp63, label %if.then65, label %if.end76, !dbg !7602

if.then65:                                        ; preds = %if.end61
  %59 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7603
  %call66 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %59), !dbg !7605
  store i8* %call66, i8** %value, align 8, !dbg !7606
  %60 = load i8*, i8** %value, align 8, !dbg !7607
  %cmp67 = icmp ne i8* %60, null, !dbg !7609
  br i1 %cmp67, label %if.then69, label %if.end75, !dbg !7610

if.then69:                                        ; preds = %if.then65
  %61 = load i8*, i8** %value, align 8, !dbg !7611
  %62 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7612
  %graphic_context70 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %62, i32 0, i32 12, !dbg !7612
  %63 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context70, align 8, !dbg !7612
  %64 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7612
  %index71 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %64, i32 0, i32 11, !dbg !7612
  %65 = load i64, i64* %index71, align 8, !dbg !7612
  %arrayidx72 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %63, i64 %65, !dbg !7612
  %66 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx72, align 8, !dbg !7612
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %66, i32 0, i32 5, !dbg !7613
  %67 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7614
  %exception73 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %67, i32 0, i32 3, !dbg !7615
  %68 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception73, align 8, !dbg !7615
  %call74 = call i32 @QueryColorDatabase(i8* %61, %struct._PixelPacket* %fill, %struct._ExceptionInfo* %68), !dbg !7616
  br label %if.end75, !dbg !7617

if.end75:                                         ; preds = %if.then69, %if.then65
  br label %if.end76, !dbg !7618

if.end76:                                         ; preds = %if.end75, %if.end61
  %69 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7619
  %call77 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %69, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0)), !dbg !7620
  store %struct._XMLTreeInfo* %call77, %struct._XMLTreeInfo** %child, align 8, !dbg !7621
  %70 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7622
  %cmp78 = icmp ne %struct._XMLTreeInfo* %70, null, !dbg !7624
  br i1 %cmp78, label %if.then80, label %if.end93, !dbg !7625

if.then80:                                        ; preds = %if.end76
  %71 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7626
  %call81 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %71), !dbg !7628
  store i8* %call81, i8** %value, align 8, !dbg !7629
  %72 = load i8*, i8** %value, align 8, !dbg !7630
  %cmp82 = icmp ne i8* %72, null, !dbg !7632
  br i1 %cmp82, label %if.then84, label %if.end92, !dbg !7633

if.then84:                                        ; preds = %if.then80
  %73 = load i8*, i8** %value, align 8, !dbg !7634
  %call85 = call double @StringToDouble(i8* %73, i8** null), !dbg !7635
  %sub = fsub double 1.000000e+00, %call85, !dbg !7636
  %mul = fmul double 6.553500e+04, %sub, !dbg !7637
  %conv86 = fptrunc double %mul to float, !dbg !7638
  %call87 = call zeroext i16 @ClampToQuantum(float %conv86), !dbg !7639
  %74 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7640
  %graphic_context88 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %74, i32 0, i32 12, !dbg !7640
  %75 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context88, align 8, !dbg !7640
  %76 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7640
  %index89 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %76, i32 0, i32 11, !dbg !7640
  %77 = load i64, i64* %index89, align 8, !dbg !7640
  %arrayidx90 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %75, i64 %77, !dbg !7640
  %78 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx90, align 8, !dbg !7640
  %fill91 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %78, i32 0, i32 5, !dbg !7641
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill91, i32 0, i32 3, !dbg !7642
  store i16 %call87, i16* %opacity, align 2, !dbg !7643
  br label %if.end92, !dbg !7640

if.end92:                                         ; preds = %if.then84, %if.then80
  br label %if.end93, !dbg !7644

if.end93:                                         ; preds = %if.end92, %if.end76
  %79 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7645
  %call94 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %79, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0)), !dbg !7646
  store %struct._XMLTreeInfo* %call94, %struct._XMLTreeInfo** %child, align 8, !dbg !7647
  %80 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7648
  %cmp95 = icmp ne %struct._XMLTreeInfo* %80, null, !dbg !7650
  br i1 %cmp95, label %if.then97, label %if.end108, !dbg !7651

if.then97:                                        ; preds = %if.end93
  %81 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7652
  %call98 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %81), !dbg !7654
  store i8* %call98, i8** %value, align 8, !dbg !7655
  %82 = load i8*, i8** %value, align 8, !dbg !7656
  %cmp99 = icmp ne i8* %82, null, !dbg !7658
  br i1 %cmp99, label %if.then101, label %if.end107, !dbg !7659

if.then101:                                       ; preds = %if.then97
  %83 = load i8*, i8** %value, align 8, !dbg !7660
  %call102 = call i64 @ParseCommandOption(i32 24, i32 0, i8* %83), !dbg !7661
  %conv103 = trunc i64 %call102 to i32, !dbg !7662
  %84 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7663
  %graphic_context104 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %84, i32 0, i32 12, !dbg !7663
  %85 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context104, align 8, !dbg !7663
  %86 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7663
  %index105 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %86, i32 0, i32 11, !dbg !7663
  %87 = load i64, i64* %index105, align 8, !dbg !7663
  %arrayidx106 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %85, i64 %87, !dbg !7663
  %88 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx106, align 8, !dbg !7663
  %fill_rule = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %88, i32 0, i32 14, !dbg !7664
  store i32 %conv103, i32* %fill_rule, align 8, !dbg !7665
  br label %if.end107, !dbg !7663

if.end107:                                        ; preds = %if.then101, %if.then97
  br label %if.end108, !dbg !7666

if.end108:                                        ; preds = %if.end107, %if.end93
  %89 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7667
  %call109 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %89, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0)), !dbg !7668
  store %struct._XMLTreeInfo* %call109, %struct._XMLTreeInfo** %child, align 8, !dbg !7669
  %90 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7670
  %cmp110 = icmp ne %struct._XMLTreeInfo* %90, null, !dbg !7672
  br i1 %cmp110, label %if.then112, label %if.end118, !dbg !7673

if.then112:                                       ; preds = %if.end108
  %91 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7674
  %graphic_context113 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %91, i32 0, i32 12, !dbg !7674
  %92 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context113, align 8, !dbg !7674
  %93 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7674
  %index114 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %93, i32 0, i32 11, !dbg !7674
  %94 = load i64, i64* %index114, align 8, !dbg !7674
  %arrayidx115 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %92, i64 %94, !dbg !7674
  %95 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx115, align 8, !dbg !7674
  %font = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %95, i32 0, i32 23, !dbg !7675
  %96 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7676
  %call116 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %96), !dbg !7677
  %call117 = call i8* @CloneString(i8** %font, i8* %call116), !dbg !7678
  br label %if.end118, !dbg !7679

if.end118:                                        ; preds = %if.then112, %if.end108
  %97 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7680
  %call119 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %97, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0)), !dbg !7681
  store %struct._XMLTreeInfo* %call119, %struct._XMLTreeInfo** %child, align 8, !dbg !7682
  %98 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7683
  %cmp120 = icmp ne %struct._XMLTreeInfo* %98, null, !dbg !7685
  br i1 %cmp120, label %if.then122, label %if.end128, !dbg !7686

if.then122:                                       ; preds = %if.end118
  %99 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7687
  %graphic_context123 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %99, i32 0, i32 12, !dbg !7687
  %100 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context123, align 8, !dbg !7687
  %101 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7687
  %index124 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %101, i32 0, i32 11, !dbg !7687
  %102 = load i64, i64* %index124, align 8, !dbg !7687
  %arrayidx125 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %100, i64 %102, !dbg !7687
  %103 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx125, align 8, !dbg !7687
  %family = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %103, i32 0, i32 25, !dbg !7688
  %104 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7689
  %call126 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %104), !dbg !7690
  %call127 = call i8* @CloneString(i8** %family, i8* %call126), !dbg !7691
  br label %if.end128, !dbg !7692

if.end128:                                        ; preds = %if.then122, %if.end118
  %105 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7693
  %call129 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %105, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0)), !dbg !7694
  store %struct._XMLTreeInfo* %call129, %struct._XMLTreeInfo** %child, align 8, !dbg !7695
  %106 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7696
  %cmp130 = icmp ne %struct._XMLTreeInfo* %106, null, !dbg !7698
  br i1 %cmp130, label %if.then132, label %if.end142, !dbg !7699

if.then132:                                       ; preds = %if.end128
  %107 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7700
  %call133 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %107), !dbg !7702
  store i8* %call133, i8** %value, align 8, !dbg !7703
  %108 = load i8*, i8** %value, align 8, !dbg !7704
  %cmp134 = icmp ne i8* %108, null, !dbg !7706
  br i1 %cmp134, label %if.then136, label %if.end141, !dbg !7707

if.then136:                                       ; preds = %if.then132
  %109 = load i8*, i8** %value, align 8, !dbg !7708
  %call137 = call double @StringToDouble(i8* %109, i8** null), !dbg !7709
  %110 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7710
  %graphic_context138 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %110, i32 0, i32 12, !dbg !7710
  %111 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context138, align 8, !dbg !7710
  %112 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7710
  %index139 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %112, i32 0, i32 11, !dbg !7710
  %113 = load i64, i64* %index139, align 8, !dbg !7710
  %arrayidx140 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %111, i64 %113, !dbg !7710
  %114 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx140, align 8, !dbg !7710
  %pointsize = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %114, i32 0, i32 30, !dbg !7711
  store double %call137, double* %pointsize, align 8, !dbg !7712
  br label %if.end141, !dbg !7710

if.end141:                                        ; preds = %if.then136, %if.then132
  br label %if.end142, !dbg !7713

if.end142:                                        ; preds = %if.end141, %if.end128
  %115 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7714
  %call143 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %115, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0)), !dbg !7715
  store %struct._XMLTreeInfo* %call143, %struct._XMLTreeInfo** %child, align 8, !dbg !7716
  %116 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7717
  %cmp144 = icmp ne %struct._XMLTreeInfo* %116, null, !dbg !7719
  br i1 %cmp144, label %if.then146, label %if.end157, !dbg !7720

if.then146:                                       ; preds = %if.end142
  %117 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7721
  %call147 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %117), !dbg !7723
  store i8* %call147, i8** %value, align 8, !dbg !7724
  %118 = load i8*, i8** %value, align 8, !dbg !7725
  %cmp148 = icmp ne i8* %118, null, !dbg !7727
  br i1 %cmp148, label %if.then150, label %if.end156, !dbg !7728

if.then150:                                       ; preds = %if.then146
  %119 = load i8*, i8** %value, align 8, !dbg !7729
  %call151 = call i64 @ParseCommandOption(i32 63, i32 0, i8* %119), !dbg !7730
  %conv152 = trunc i64 %call151 to i32, !dbg !7731
  %120 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7732
  %graphic_context153 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %120, i32 0, i32 12, !dbg !7732
  %121 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context153, align 8, !dbg !7732
  %122 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7732
  %index154 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %122, i32 0, i32 11, !dbg !7732
  %123 = load i64, i64* %index154, align 8, !dbg !7732
  %arrayidx155 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %121, i64 %123, !dbg !7732
  %124 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx155, align 8, !dbg !7732
  %stretch = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %124, i32 0, i32 27, !dbg !7733
  store i32 %conv152, i32* %stretch, align 4, !dbg !7734
  br label %if.end156, !dbg !7732

if.end156:                                        ; preds = %if.then150, %if.then146
  br label %if.end157, !dbg !7735

if.end157:                                        ; preds = %if.end156, %if.end142
  %125 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7736
  %call158 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %125, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0)), !dbg !7737
  store %struct._XMLTreeInfo* %call158, %struct._XMLTreeInfo** %child, align 8, !dbg !7738
  %126 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7739
  %cmp159 = icmp ne %struct._XMLTreeInfo* %126, null, !dbg !7741
  br i1 %cmp159, label %if.then161, label %if.end172, !dbg !7742

if.then161:                                       ; preds = %if.end157
  %127 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7743
  %call162 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %127), !dbg !7745
  store i8* %call162, i8** %value, align 8, !dbg !7746
  %128 = load i8*, i8** %value, align 8, !dbg !7747
  %cmp163 = icmp ne i8* %128, null, !dbg !7749
  br i1 %cmp163, label %if.then165, label %if.end171, !dbg !7750

if.then165:                                       ; preds = %if.then161
  %129 = load i8*, i8** %value, align 8, !dbg !7751
  %call166 = call i64 @ParseCommandOption(i32 64, i32 0, i8* %129), !dbg !7752
  %conv167 = trunc i64 %call166 to i32, !dbg !7753
  %130 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7754
  %graphic_context168 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %130, i32 0, i32 12, !dbg !7754
  %131 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context168, align 8, !dbg !7754
  %132 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7754
  %index169 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %132, i32 0, i32 11, !dbg !7754
  %133 = load i64, i64* %index169, align 8, !dbg !7754
  %arrayidx170 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %131, i64 %133, !dbg !7754
  %134 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx170, align 8, !dbg !7754
  %style = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %134, i32 0, i32 26, !dbg !7755
  store i32 %conv167, i32* %style, align 8, !dbg !7756
  br label %if.end171, !dbg !7754

if.end171:                                        ; preds = %if.then165, %if.then161
  br label %if.end172, !dbg !7757

if.end172:                                        ; preds = %if.end171, %if.end157
  %135 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7758
  %call173 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %135, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0)), !dbg !7759
  store %struct._XMLTreeInfo* %call173, %struct._XMLTreeInfo** %child, align 8, !dbg !7760
  %136 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7761
  %cmp174 = icmp ne %struct._XMLTreeInfo* %136, null, !dbg !7763
  br i1 %cmp174, label %if.then176, label %if.end186, !dbg !7764

if.then176:                                       ; preds = %if.end172
  %137 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7765
  %call177 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %137), !dbg !7767
  store i8* %call177, i8** %value, align 8, !dbg !7768
  %138 = load i8*, i8** %value, align 8, !dbg !7769
  %cmp178 = icmp ne i8* %138, null, !dbg !7771
  br i1 %cmp178, label %if.then180, label %if.end185, !dbg !7772

if.then180:                                       ; preds = %if.then176
  %139 = load i8*, i8** %value, align 8, !dbg !7773
  %call181 = call i64 @StringToUnsignedLong(i8* %139), !dbg !7774
  %140 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7775
  %graphic_context182 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %140, i32 0, i32 12, !dbg !7775
  %141 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context182, align 8, !dbg !7775
  %142 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7775
  %index183 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %142, i32 0, i32 11, !dbg !7775
  %143 = load i64, i64* %index183, align 8, !dbg !7775
  %arrayidx184 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %141, i64 %143, !dbg !7775
  %144 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx184, align 8, !dbg !7775
  %weight = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %144, i32 0, i32 28, !dbg !7776
  store i64 %call181, i64* %weight, align 8, !dbg !7777
  br label %if.end185, !dbg !7775

if.end185:                                        ; preds = %if.then180, %if.then176
  br label %if.end186, !dbg !7778

if.end186:                                        ; preds = %if.end185, %if.end172
  %145 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7779
  %call187 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %145, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0)), !dbg !7780
  store %struct._XMLTreeInfo* %call187, %struct._XMLTreeInfo** %child, align 8, !dbg !7781
  %146 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7782
  %cmp188 = icmp ne %struct._XMLTreeInfo* %146, null, !dbg !7784
  br i1 %cmp188, label %if.then190, label %if.end201, !dbg !7785

if.then190:                                       ; preds = %if.end186
  %147 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7786
  %call191 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %147), !dbg !7788
  store i8* %call191, i8** %value, align 8, !dbg !7789
  %148 = load i8*, i8** %value, align 8, !dbg !7790
  %cmp192 = icmp ne i8* %148, null, !dbg !7792
  br i1 %cmp192, label %if.then194, label %if.end200, !dbg !7793

if.then194:                                       ; preds = %if.then190
  %149 = load i8*, i8** %value, align 8, !dbg !7794
  %call195 = call i64 @ParseCommandOption(i32 30, i32 0, i8* %149), !dbg !7795
  %conv196 = trunc i64 %call195 to i32, !dbg !7796
  %150 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7797
  %graphic_context197 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %150, i32 0, i32 12, !dbg !7797
  %151 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context197, align 8, !dbg !7797
  %152 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7797
  %index198 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %152, i32 0, i32 11, !dbg !7797
  %153 = load i64, i64* %index198, align 8, !dbg !7797
  %arrayidx199 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %151, i64 %153, !dbg !7797
  %154 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx199, align 8, !dbg !7797
  %gravity = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %154, i32 0, i32 4, !dbg !7798
  store i32 %conv196, i32* %gravity, align 8, !dbg !7799
  br label %if.end200, !dbg !7797

if.end200:                                        ; preds = %if.then194, %if.then190
  br label %if.end201, !dbg !7800

if.end201:                                        ; preds = %if.end200, %if.end186
  %155 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7801
  %call202 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %155, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0)), !dbg !7802
  store %struct._XMLTreeInfo* %call202, %struct._XMLTreeInfo** %child, align 8, !dbg !7803
  %156 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7804
  %cmp203 = icmp ne %struct._XMLTreeInfo* %156, null, !dbg !7806
  br i1 %cmp203, label %if.then205, label %if.end216, !dbg !7807

if.then205:                                       ; preds = %if.end201
  %157 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7808
  %call206 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %157), !dbg !7810
  store i8* %call206, i8** %value, align 8, !dbg !7811
  %158 = load i8*, i8** %value, align 8, !dbg !7812
  %cmp207 = icmp ne i8* %158, null, !dbg !7814
  br i1 %cmp207, label %if.then209, label %if.end215, !dbg !7815

if.then209:                                       ; preds = %if.then205
  %159 = load i8*, i8** %value, align 8, !dbg !7816
  %160 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7817
  %graphic_context210 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %160, i32 0, i32 12, !dbg !7817
  %161 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context210, align 8, !dbg !7817
  %162 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7817
  %index211 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %162, i32 0, i32 11, !dbg !7817
  %163 = load i64, i64* %index211, align 8, !dbg !7817
  %arrayidx212 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %161, i64 %163, !dbg !7817
  %164 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx212, align 8, !dbg !7817
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %164, i32 0, i32 6, !dbg !7818
  %165 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7819
  %exception213 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %165, i32 0, i32 3, !dbg !7820
  %166 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception213, align 8, !dbg !7820
  %call214 = call i32 @QueryColorDatabase(i8* %159, %struct._PixelPacket* %stroke, %struct._ExceptionInfo* %166), !dbg !7821
  br label %if.end215, !dbg !7822

if.end215:                                        ; preds = %if.then209, %if.then205
  br label %if.end216, !dbg !7823

if.end216:                                        ; preds = %if.end215, %if.end201
  %167 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7824
  %call217 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %167, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i64 0, i64 0)), !dbg !7825
  store %struct._XMLTreeInfo* %call217, %struct._XMLTreeInfo** %child, align 8, !dbg !7826
  %168 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7827
  %cmp218 = icmp ne %struct._XMLTreeInfo* %168, null, !dbg !7829
  br i1 %cmp218, label %if.then220, label %if.end232, !dbg !7830

if.then220:                                       ; preds = %if.end216
  %169 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7831
  %call221 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %169), !dbg !7833
  store i8* %call221, i8** %value, align 8, !dbg !7834
  %170 = load i8*, i8** %value, align 8, !dbg !7835
  %cmp222 = icmp ne i8* %170, null, !dbg !7837
  br i1 %cmp222, label %if.then224, label %if.end231, !dbg !7838

if.then224:                                       ; preds = %if.then220
  %171 = load i8*, i8** %value, align 8, !dbg !7839
  %call225 = call i64 @StringToLong(i8* %171), !dbg !7840
  %cmp226 = icmp ne i64 %call225, 0, !dbg !7841
  %172 = zext i1 %cmp226 to i64, !dbg !7840
  %cond = select i1 %cmp226, i32 1, i32 0, !dbg !7840
  %173 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7842
  %graphic_context228 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %173, i32 0, i32 12, !dbg !7842
  %174 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context228, align 8, !dbg !7842
  %175 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7842
  %index229 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %175, i32 0, i32 11, !dbg !7842
  %176 = load i64, i64* %index229, align 8, !dbg !7842
  %arrayidx230 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %174, i64 %176, !dbg !7842
  %177 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx230, align 8, !dbg !7842
  %stroke_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %177, i32 0, i32 12, !dbg !7843
  store i32 %cond, i32* %stroke_antialias, align 8, !dbg !7844
  br label %if.end231, !dbg !7842

if.end231:                                        ; preds = %if.then224, %if.then220
  br label %if.end232, !dbg !7845

if.end232:                                        ; preds = %if.end231, %if.end216
  %178 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !7846
  %call233 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %178, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i64 0, i64 0)), !dbg !7847
  store %struct._XMLTreeInfo* %call233, %struct._XMLTreeInfo** %child, align 8, !dbg !7848
  %179 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7849
  %cmp234 = icmp ne %struct._XMLTreeInfo* %179, null, !dbg !7851
  br i1 %cmp234, label %if.then236, label %if.end352, !dbg !7852

if.then236:                                       ; preds = %if.end232
  call void @llvm.dbg.declare(metadata [4096 x i8]* %token, metadata !7853, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.declare(metadata i8** %q, metadata !7856, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7858, metadata !DIExpression()), !dbg !7859
  call void @llvm.dbg.declare(metadata i64* %j, metadata !7860, metadata !DIExpression()), !dbg !7861
  %180 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !7862
  %call237 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %180), !dbg !7863
  store i8* %call237, i8** %value, align 8, !dbg !7864
  %181 = load i8*, i8** %value, align 8, !dbg !7865
  %cmp238 = icmp ne i8* %181, null, !dbg !7867
  br i1 %cmp238, label %if.then240, label %if.end351, !dbg !7868

if.then240:                                       ; preds = %if.then236
  %182 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7869
  %graphic_context241 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %182, i32 0, i32 12, !dbg !7869
  %183 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context241, align 8, !dbg !7869
  %184 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7869
  %index242 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %184, i32 0, i32 11, !dbg !7869
  %185 = load i64, i64* %index242, align 8, !dbg !7869
  %arrayidx243 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %183, i64 %185, !dbg !7869
  %186 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx243, align 8, !dbg !7869
  %dash_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %186, i32 0, i32 36, !dbg !7872
  %187 = load double*, double** %dash_pattern, align 8, !dbg !7872
  %cmp244 = icmp ne double* %187, null, !dbg !7873
  br i1 %cmp244, label %if.then246, label %if.end256, !dbg !7874

if.then246:                                       ; preds = %if.then240
  %188 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7875
  %graphic_context247 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %188, i32 0, i32 12, !dbg !7875
  %189 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context247, align 8, !dbg !7875
  %190 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7875
  %index248 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %190, i32 0, i32 11, !dbg !7875
  %191 = load i64, i64* %index248, align 8, !dbg !7875
  %arrayidx249 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %189, i64 %191, !dbg !7875
  %192 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx249, align 8, !dbg !7875
  %dash_pattern250 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %192, i32 0, i32 36, !dbg !7876
  %193 = load double*, double** %dash_pattern250, align 8, !dbg !7876
  %194 = bitcast double* %193 to i8*, !dbg !7875
  %call251 = call i8* @RelinquishMagickMemory(i8* %194), !dbg !7877
  %195 = bitcast i8* %call251 to double*, !dbg !7878
  %196 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7879
  %graphic_context252 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %196, i32 0, i32 12, !dbg !7879
  %197 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context252, align 8, !dbg !7879
  %198 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7879
  %index253 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %198, i32 0, i32 11, !dbg !7879
  %199 = load i64, i64* %index253, align 8, !dbg !7879
  %arrayidx254 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %197, i64 %199, !dbg !7879
  %200 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx254, align 8, !dbg !7879
  %dash_pattern255 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %200, i32 0, i32 36, !dbg !7880
  store double* %195, double** %dash_pattern255, align 8, !dbg !7881
  br label %if.end256, !dbg !7879

if.end256:                                        ; preds = %if.then246, %if.then240
  %201 = load i8*, i8** %value, align 8, !dbg !7882
  store i8* %201, i8** %q, align 8, !dbg !7883
  %202 = load i8*, i8** %q, align 8, !dbg !7884
  %call257 = call i32 @IsPoint(i8* %202), !dbg !7886
  %cmp258 = icmp ne i32 %call257, 0, !dbg !7887
  br i1 %cmp258, label %if.then260, label %if.end350, !dbg !7888

if.then260:                                       ; preds = %if.end256
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7889, metadata !DIExpression()), !dbg !7891
  %203 = load i8*, i8** %q, align 8, !dbg !7892
  store i8* %203, i8** %p, align 8, !dbg !7893
  %204 = load i8*, i8** %p, align 8, !dbg !7894
  %arraydecay261 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !7895
  call void @GetMagickToken(i8* %204, i8** %p, i8* %arraydecay261), !dbg !7896
  %arraydecay262 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !7897
  %205 = load i8, i8* %arraydecay262, align 16, !dbg !7897
  %conv263 = sext i8 %205 to i32, !dbg !7897
  %cmp264 = icmp eq i32 %conv263, 44, !dbg !7899
  br i1 %cmp264, label %if.then266, label %if.end268, !dbg !7900

if.then266:                                       ; preds = %if.then260
  %206 = load i8*, i8** %p, align 8, !dbg !7901
  %arraydecay267 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !7902
  call void @GetMagickToken(i8* %206, i8** %p, i8* %arraydecay267), !dbg !7903
  br label %if.end268, !dbg !7903

if.end268:                                        ; preds = %if.then266, %if.then260
  store i64 0, i64* %x, align 8, !dbg !7904
  br label %for.cond, !dbg !7906

for.cond:                                         ; preds = %for.inc, %if.end268
  %arraydecay269 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !7907
  %call270 = call i32 @IsPoint(i8* %arraydecay269), !dbg !7909
  %cmp271 = icmp ne i32 %call270, 0, !dbg !7910
  br i1 %cmp271, label %for.body, label %for.end, !dbg !7911

for.body:                                         ; preds = %for.cond
  %207 = load i8*, i8** %p, align 8, !dbg !7912
  %arraydecay273 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !7914
  call void @GetMagickToken(i8* %207, i8** %p, i8* %arraydecay273), !dbg !7915
  %arraydecay274 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !7916
  %208 = load i8, i8* %arraydecay274, align 16, !dbg !7916
  %conv275 = sext i8 %208 to i32, !dbg !7916
  %cmp276 = icmp eq i32 %conv275, 44, !dbg !7918
  br i1 %cmp276, label %if.then278, label %if.end280, !dbg !7919

if.then278:                                       ; preds = %for.body
  %209 = load i8*, i8** %p, align 8, !dbg !7920
  %arraydecay279 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !7921
  call void @GetMagickToken(i8* %209, i8** %p, i8* %arraydecay279), !dbg !7922
  br label %if.end280, !dbg !7922

if.end280:                                        ; preds = %if.then278, %for.body
  br label %for.inc, !dbg !7923

for.inc:                                          ; preds = %if.end280
  %210 = load i64, i64* %x, align 8, !dbg !7924
  %inc = add nsw i64 %210, 1, !dbg !7924
  store i64 %inc, i64* %x, align 8, !dbg !7924
  br label %for.cond, !dbg !7925, !llvm.loop !7926

for.end:                                          ; preds = %for.cond
  %211 = load i64, i64* %x, align 8, !dbg !7928
  %mul281 = mul i64 2, %211, !dbg !7929
  %add = add i64 %mul281, 1, !dbg !7930
  %call282 = call i8* @AcquireQuantumMemory(i64 %add, i64 8) #16, !dbg !7931
  %212 = bitcast i8* %call282 to double*, !dbg !7932
  %213 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7933
  %graphic_context283 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %213, i32 0, i32 12, !dbg !7933
  %214 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context283, align 8, !dbg !7933
  %215 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7933
  %index284 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %215, i32 0, i32 11, !dbg !7933
  %216 = load i64, i64* %index284, align 8, !dbg !7933
  %arrayidx285 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %214, i64 %216, !dbg !7933
  %217 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx285, align 8, !dbg !7933
  %dash_pattern286 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %217, i32 0, i32 36, !dbg !7934
  store double* %212, double** %dash_pattern286, align 8, !dbg !7935
  %218 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7936
  %graphic_context287 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %218, i32 0, i32 12, !dbg !7936
  %219 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context287, align 8, !dbg !7936
  %220 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7936
  %index288 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %220, i32 0, i32 11, !dbg !7936
  %221 = load i64, i64* %index288, align 8, !dbg !7936
  %arrayidx289 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %219, i64 %221, !dbg !7936
  %222 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx289, align 8, !dbg !7936
  %dash_pattern290 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %222, i32 0, i32 36, !dbg !7938
  %223 = load double*, double** %dash_pattern290, align 8, !dbg !7938
  %cmp291 = icmp eq double* %223, null, !dbg !7939
  br i1 %cmp291, label %if.then293, label %if.end299, !dbg !7940

if.then293:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception294, metadata !7941, metadata !DIExpression()), !dbg !7943
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception294), !dbg !7943
  %224 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7943
  %name295 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %224, i32 0, i32 1, !dbg !7943
  %arraydecay296 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name295, i64 0, i64 0, !dbg !7943
  %call297 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception294, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6417, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay296), !dbg !7943
  call void @CatchException(%struct._ExceptionInfo* %exception294), !dbg !7943
  %call298 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception294), !dbg !7943
  call void @MagickWandTerminus(), !dbg !7943
  call void @_exit(i32 1) #14, !dbg !7943
  unreachable, !dbg !7943

if.end299:                                        ; preds = %for.end
  store i64 0, i64* %j, align 8, !dbg !7944
  br label %for.cond300, !dbg !7946

for.cond300:                                      ; preds = %for.inc319, %if.end299
  %225 = load i64, i64* %j, align 8, !dbg !7947
  %226 = load i64, i64* %x, align 8, !dbg !7949
  %cmp301 = icmp slt i64 %225, %226, !dbg !7950
  br i1 %cmp301, label %for.body303, label %for.end321, !dbg !7951

for.body303:                                      ; preds = %for.cond300
  %227 = load i8*, i8** %q, align 8, !dbg !7952
  %arraydecay304 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !7954
  call void @GetMagickToken(i8* %227, i8** %q, i8* %arraydecay304), !dbg !7955
  %arraydecay305 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !7956
  %228 = load i8, i8* %arraydecay305, align 16, !dbg !7956
  %conv306 = sext i8 %228 to i32, !dbg !7956
  %cmp307 = icmp eq i32 %conv306, 44, !dbg !7958
  br i1 %cmp307, label %if.then309, label %if.end311, !dbg !7959

if.then309:                                       ; preds = %for.body303
  %229 = load i8*, i8** %q, align 8, !dbg !7960
  %arraydecay310 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !7961
  call void @GetMagickToken(i8* %229, i8** %q, i8* %arraydecay310), !dbg !7962
  br label %if.end311, !dbg !7962

if.end311:                                        ; preds = %if.then309, %for.body303
  %arraydecay312 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !7963
  %call313 = call double @StringToDouble(i8* %arraydecay312, i8** null), !dbg !7964
  %230 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7965
  %graphic_context314 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %230, i32 0, i32 12, !dbg !7965
  %231 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context314, align 8, !dbg !7965
  %232 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7965
  %index315 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %232, i32 0, i32 11, !dbg !7965
  %233 = load i64, i64* %index315, align 8, !dbg !7965
  %arrayidx316 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %231, i64 %233, !dbg !7965
  %234 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx316, align 8, !dbg !7965
  %dash_pattern317 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %234, i32 0, i32 36, !dbg !7966
  %235 = load double*, double** %dash_pattern317, align 8, !dbg !7966
  %236 = load i64, i64* %j, align 8, !dbg !7967
  %arrayidx318 = getelementptr inbounds double, double* %235, i64 %236, !dbg !7965
  store double %call313, double* %arrayidx318, align 8, !dbg !7968
  br label %for.inc319, !dbg !7969

for.inc319:                                       ; preds = %if.end311
  %237 = load i64, i64* %j, align 8, !dbg !7970
  %inc320 = add nsw i64 %237, 1, !dbg !7970
  store i64 %inc320, i64* %j, align 8, !dbg !7970
  br label %for.cond300, !dbg !7971, !llvm.loop !7972

for.end321:                                       ; preds = %for.cond300
  %238 = load i64, i64* %x, align 8, !dbg !7974
  %and = and i64 %238, 1, !dbg !7976
  %cmp322 = icmp ne i64 %and, 0, !dbg !7977
  br i1 %cmp322, label %if.then324, label %if.end344, !dbg !7978

if.then324:                                       ; preds = %for.end321
  br label %for.cond325, !dbg !7979

for.cond325:                                      ; preds = %for.inc341, %if.then324
  %239 = load i64, i64* %j, align 8, !dbg !7980
  %240 = load i64, i64* %x, align 8, !dbg !7983
  %mul326 = mul nsw i64 2, %240, !dbg !7984
  %cmp327 = icmp slt i64 %239, %mul326, !dbg !7985
  br i1 %cmp327, label %for.body329, label %for.end343, !dbg !7986

for.body329:                                      ; preds = %for.cond325
  %241 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7987
  %graphic_context330 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %241, i32 0, i32 12, !dbg !7987
  %242 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context330, align 8, !dbg !7987
  %243 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7987
  %index331 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %243, i32 0, i32 11, !dbg !7987
  %244 = load i64, i64* %index331, align 8, !dbg !7987
  %arrayidx332 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %242, i64 %244, !dbg !7987
  %245 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx332, align 8, !dbg !7987
  %dash_pattern333 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %245, i32 0, i32 36, !dbg !7988
  %246 = load double*, double** %dash_pattern333, align 8, !dbg !7988
  %247 = load i64, i64* %j, align 8, !dbg !7989
  %248 = load i64, i64* %x, align 8, !dbg !7990
  %sub334 = sub nsw i64 %247, %248, !dbg !7991
  %arrayidx335 = getelementptr inbounds double, double* %246, i64 %sub334, !dbg !7987
  %249 = load double, double* %arrayidx335, align 8, !dbg !7987
  %250 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7992
  %graphic_context336 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %250, i32 0, i32 12, !dbg !7992
  %251 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context336, align 8, !dbg !7992
  %252 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !7992
  %index337 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %252, i32 0, i32 11, !dbg !7992
  %253 = load i64, i64* %index337, align 8, !dbg !7992
  %arrayidx338 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %251, i64 %253, !dbg !7992
  %254 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx338, align 8, !dbg !7992
  %dash_pattern339 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %254, i32 0, i32 36, !dbg !7993
  %255 = load double*, double** %dash_pattern339, align 8, !dbg !7993
  %256 = load i64, i64* %j, align 8, !dbg !7994
  %arrayidx340 = getelementptr inbounds double, double* %255, i64 %256, !dbg !7992
  store double %249, double* %arrayidx340, align 8, !dbg !7995
  br label %for.inc341, !dbg !7992

for.inc341:                                       ; preds = %for.body329
  %257 = load i64, i64* %j, align 8, !dbg !7996
  %inc342 = add nsw i64 %257, 1, !dbg !7996
  store i64 %inc342, i64* %j, align 8, !dbg !7996
  br label %for.cond325, !dbg !7997, !llvm.loop !7998

for.end343:                                       ; preds = %for.cond325
  br label %if.end344, !dbg !7999

if.end344:                                        ; preds = %for.end343, %for.end321
  %258 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8000
  %graphic_context345 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %258, i32 0, i32 12, !dbg !8000
  %259 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context345, align 8, !dbg !8000
  %260 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8000
  %index346 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %260, i32 0, i32 11, !dbg !8000
  %261 = load i64, i64* %index346, align 8, !dbg !8000
  %arrayidx347 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %259, i64 %261, !dbg !8000
  %262 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx347, align 8, !dbg !8000
  %dash_pattern348 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %262, i32 0, i32 36, !dbg !8001
  %263 = load double*, double** %dash_pattern348, align 8, !dbg !8001
  %264 = load i64, i64* %j, align 8, !dbg !8002
  %arrayidx349 = getelementptr inbounds double, double* %263, i64 %264, !dbg !8000
  store double 0.000000e+00, double* %arrayidx349, align 8, !dbg !8003
  br label %if.end350, !dbg !8004

if.end350:                                        ; preds = %if.end344, %if.end256
  br label %if.end351, !dbg !8005

if.end351:                                        ; preds = %if.end350, %if.then236
  br label %if.end352, !dbg !8006

if.end352:                                        ; preds = %if.end351, %if.end232
  %265 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !8007
  %call353 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %265, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0)), !dbg !8008
  store %struct._XMLTreeInfo* %call353, %struct._XMLTreeInfo** %child, align 8, !dbg !8009
  %266 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8010
  %cmp354 = icmp ne %struct._XMLTreeInfo* %266, null, !dbg !8012
  br i1 %cmp354, label %if.then356, label %if.end366, !dbg !8013

if.then356:                                       ; preds = %if.end352
  %267 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8014
  %call357 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %267), !dbg !8016
  store i8* %call357, i8** %value, align 8, !dbg !8017
  %268 = load i8*, i8** %value, align 8, !dbg !8018
  %cmp358 = icmp ne i8* %268, null, !dbg !8020
  br i1 %cmp358, label %if.then360, label %if.end365, !dbg !8021

if.then360:                                       ; preds = %if.then356
  %269 = load i8*, i8** %value, align 8, !dbg !8022
  %call361 = call double @StringToDouble(i8* %269, i8** null), !dbg !8023
  %270 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8024
  %graphic_context362 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %270, i32 0, i32 12, !dbg !8024
  %271 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context362, align 8, !dbg !8024
  %272 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8024
  %index363 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %272, i32 0, i32 11, !dbg !8024
  %273 = load i64, i64* %index363, align 8, !dbg !8024
  %arrayidx364 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %271, i64 %273, !dbg !8024
  %274 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx364, align 8, !dbg !8024
  %dash_offset = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %274, i32 0, i32 18, !dbg !8025
  store double %call361, double* %dash_offset, align 8, !dbg !8026
  br label %if.end365, !dbg !8024

if.end365:                                        ; preds = %if.then360, %if.then356
  br label %if.end366, !dbg !8027

if.end366:                                        ; preds = %if.end365, %if.end352
  %275 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !8028
  %call367 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %275, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i64 0, i64 0)), !dbg !8029
  store %struct._XMLTreeInfo* %call367, %struct._XMLTreeInfo** %child, align 8, !dbg !8030
  %276 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8031
  %cmp368 = icmp ne %struct._XMLTreeInfo* %276, null, !dbg !8033
  br i1 %cmp368, label %if.then370, label %if.end381, !dbg !8034

if.then370:                                       ; preds = %if.end366
  %277 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8035
  %call371 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %277), !dbg !8037
  store i8* %call371, i8** %value, align 8, !dbg !8038
  %278 = load i8*, i8** %value, align 8, !dbg !8039
  %cmp372 = icmp ne i8* %278, null, !dbg !8041
  br i1 %cmp372, label %if.then374, label %if.end380, !dbg !8042

if.then374:                                       ; preds = %if.then370
  %279 = load i8*, i8** %value, align 8, !dbg !8043
  %call375 = call i64 @ParseCommandOption(i32 36, i32 0, i8* %279), !dbg !8044
  %conv376 = trunc i64 %call375 to i32, !dbg !8045
  %280 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8046
  %graphic_context377 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %280, i32 0, i32 12, !dbg !8046
  %281 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context377, align 8, !dbg !8046
  %282 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8046
  %index378 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %282, i32 0, i32 11, !dbg !8046
  %283 = load i64, i64* %index378, align 8, !dbg !8046
  %arrayidx379 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %281, i64 %283, !dbg !8046
  %284 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx379, align 8, !dbg !8046
  %linecap = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %284, i32 0, i32 15, !dbg !8047
  store i32 %conv376, i32* %linecap, align 4, !dbg !8048
  br label %if.end380, !dbg !8046

if.end380:                                        ; preds = %if.then374, %if.then370
  br label %if.end381, !dbg !8049

if.end381:                                        ; preds = %if.end380, %if.end366
  %285 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !8050
  %call382 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %285, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i64 0, i64 0)), !dbg !8051
  store %struct._XMLTreeInfo* %call382, %struct._XMLTreeInfo** %child, align 8, !dbg !8052
  %286 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8053
  %cmp383 = icmp ne %struct._XMLTreeInfo* %286, null, !dbg !8055
  br i1 %cmp383, label %if.then385, label %if.end396, !dbg !8056

if.then385:                                       ; preds = %if.end381
  %287 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8057
  %call386 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %287), !dbg !8059
  store i8* %call386, i8** %value, align 8, !dbg !8060
  %288 = load i8*, i8** %value, align 8, !dbg !8061
  %cmp387 = icmp ne i8* %288, null, !dbg !8063
  br i1 %cmp387, label %if.then389, label %if.end395, !dbg !8064

if.then389:                                       ; preds = %if.then385
  %289 = load i8*, i8** %value, align 8, !dbg !8065
  %call390 = call i64 @ParseCommandOption(i32 37, i32 0, i8* %289), !dbg !8066
  %conv391 = trunc i64 %call390 to i32, !dbg !8067
  %290 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8068
  %graphic_context392 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %290, i32 0, i32 12, !dbg !8068
  %291 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context392, align 8, !dbg !8068
  %292 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8068
  %index393 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %292, i32 0, i32 11, !dbg !8068
  %293 = load i64, i64* %index393, align 8, !dbg !8068
  %arrayidx394 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %291, i64 %293, !dbg !8068
  %294 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx394, align 8, !dbg !8068
  %linejoin = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %294, i32 0, i32 16, !dbg !8069
  store i32 %conv391, i32* %linejoin, align 8, !dbg !8070
  br label %if.end395, !dbg !8068

if.end395:                                        ; preds = %if.then389, %if.then385
  br label %if.end396, !dbg !8071

if.end396:                                        ; preds = %if.end395, %if.end381
  %295 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !8072
  %call397 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %295, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i64 0, i64 0)), !dbg !8073
  store %struct._XMLTreeInfo* %call397, %struct._XMLTreeInfo** %child, align 8, !dbg !8074
  %296 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8075
  %cmp398 = icmp ne %struct._XMLTreeInfo* %296, null, !dbg !8077
  br i1 %cmp398, label %if.then400, label %if.end410, !dbg !8078

if.then400:                                       ; preds = %if.end396
  %297 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8079
  %call401 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %297), !dbg !8081
  store i8* %call401, i8** %value, align 8, !dbg !8082
  %298 = load i8*, i8** %value, align 8, !dbg !8083
  %cmp402 = icmp ne i8* %298, null, !dbg !8085
  br i1 %cmp402, label %if.then404, label %if.end409, !dbg !8086

if.then404:                                       ; preds = %if.then400
  %299 = load i8*, i8** %value, align 8, !dbg !8087
  %call405 = call i64 @StringToUnsignedLong(i8* %299), !dbg !8088
  %300 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8089
  %graphic_context406 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %300, i32 0, i32 12, !dbg !8089
  %301 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context406, align 8, !dbg !8089
  %302 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8089
  %index407 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %302, i32 0, i32 11, !dbg !8089
  %303 = load i64, i64* %index407, align 8, !dbg !8089
  %arrayidx408 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %301, i64 %303, !dbg !8089
  %304 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx408, align 8, !dbg !8089
  %miterlimit = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %304, i32 0, i32 17, !dbg !8090
  store i64 %call405, i64* %miterlimit, align 8, !dbg !8091
  br label %if.end409, !dbg !8089

if.end409:                                        ; preds = %if.then404, %if.then400
  br label %if.end410, !dbg !8092

if.end410:                                        ; preds = %if.end409, %if.end396
  %305 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !8093
  %call411 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %305, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i64 0, i64 0)), !dbg !8094
  store %struct._XMLTreeInfo* %call411, %struct._XMLTreeInfo** %child, align 8, !dbg !8095
  %306 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8096
  %cmp412 = icmp ne %struct._XMLTreeInfo* %306, null, !dbg !8098
  br i1 %cmp412, label %if.then414, label %if.end430, !dbg !8099

if.then414:                                       ; preds = %if.end410
  %307 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8100
  %call415 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %307), !dbg !8102
  store i8* %call415, i8** %value, align 8, !dbg !8103
  %308 = load i8*, i8** %value, align 8, !dbg !8104
  %cmp416 = icmp ne i8* %308, null, !dbg !8106
  br i1 %cmp416, label %if.then418, label %if.end429, !dbg !8107

if.then418:                                       ; preds = %if.then414
  %309 = load i8*, i8** %value, align 8, !dbg !8108
  %call419 = call double @StringToDouble(i8* %309, i8** null), !dbg !8109
  %sub420 = fsub double 1.000000e+00, %call419, !dbg !8110
  %mul421 = fmul double 6.553500e+04, %sub420, !dbg !8111
  %conv422 = fptrunc double %mul421 to float, !dbg !8112
  %call423 = call zeroext i16 @ClampToQuantum(float %conv422), !dbg !8113
  %310 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8114
  %graphic_context424 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %310, i32 0, i32 12, !dbg !8114
  %311 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context424, align 8, !dbg !8114
  %312 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8114
  %index425 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %312, i32 0, i32 11, !dbg !8114
  %313 = load i64, i64* %index425, align 8, !dbg !8114
  %arrayidx426 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %311, i64 %313, !dbg !8114
  %314 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx426, align 8, !dbg !8114
  %stroke427 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %314, i32 0, i32 6, !dbg !8115
  %opacity428 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke427, i32 0, i32 3, !dbg !8116
  store i16 %call423, i16* %opacity428, align 2, !dbg !8117
  br label %if.end429, !dbg !8114

if.end429:                                        ; preds = %if.then418, %if.then414
  br label %if.end430, !dbg !8118

if.end430:                                        ; preds = %if.end429, %if.end410
  %315 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !8119
  %call431 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %315, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i64 0, i64 0)), !dbg !8120
  store %struct._XMLTreeInfo* %call431, %struct._XMLTreeInfo** %child, align 8, !dbg !8121
  %316 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8122
  %cmp432 = icmp ne %struct._XMLTreeInfo* %316, null, !dbg !8124
  br i1 %cmp432, label %if.then434, label %if.end444, !dbg !8125

if.then434:                                       ; preds = %if.end430
  %317 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8126
  %call435 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %317), !dbg !8128
  store i8* %call435, i8** %value, align 8, !dbg !8129
  %318 = load i8*, i8** %value, align 8, !dbg !8130
  %cmp436 = icmp ne i8* %318, null, !dbg !8132
  br i1 %cmp436, label %if.then438, label %if.end443, !dbg !8133

if.then438:                                       ; preds = %if.then434
  %319 = load i8*, i8** %value, align 8, !dbg !8134
  %call439 = call double @StringToDouble(i8* %319, i8** null), !dbg !8135
  %320 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8136
  %graphic_context440 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %320, i32 0, i32 12, !dbg !8136
  %321 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context440, align 8, !dbg !8136
  %322 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8136
  %index441 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %322, i32 0, i32 11, !dbg !8136
  %323 = load i64, i64* %index441, align 8, !dbg !8136
  %arrayidx442 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %321, i64 %323, !dbg !8136
  %324 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx442, align 8, !dbg !8136
  %stroke_width = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %324, i32 0, i32 7, !dbg !8137
  store double %call439, double* %stroke_width, align 8, !dbg !8138
  br label %if.end443, !dbg !8136

if.end443:                                        ; preds = %if.then438, %if.then434
  br label %if.end444, !dbg !8139

if.end444:                                        ; preds = %if.end443, %if.end430
  %325 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !8140
  %call445 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %325, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49, i64 0, i64 0)), !dbg !8141
  store %struct._XMLTreeInfo* %call445, %struct._XMLTreeInfo** %child, align 8, !dbg !8142
  %326 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8143
  %cmp446 = icmp ne %struct._XMLTreeInfo* %326, null, !dbg !8145
  br i1 %cmp446, label %if.then448, label %if.end459, !dbg !8146

if.then448:                                       ; preds = %if.end444
  %327 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8147
  %call449 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %327), !dbg !8149
  store i8* %call449, i8** %value, align 8, !dbg !8150
  %328 = load i8*, i8** %value, align 8, !dbg !8151
  %cmp450 = icmp ne i8* %328, null, !dbg !8153
  br i1 %cmp450, label %if.then452, label %if.end458, !dbg !8154

if.then452:                                       ; preds = %if.then448
  %329 = load i8*, i8** %value, align 8, !dbg !8155
  %call453 = call i64 @ParseCommandOption(i32 0, i32 0, i8* %329), !dbg !8156
  %conv454 = trunc i64 %call453 to i32, !dbg !8157
  %330 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8158
  %graphic_context455 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %330, i32 0, i32 12, !dbg !8158
  %331 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context455, align 8, !dbg !8158
  %332 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8158
  %index456 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %332, i32 0, i32 11, !dbg !8158
  %333 = load i64, i64* %index456, align 8, !dbg !8158
  %arrayidx457 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %331, i64 %333, !dbg !8158
  %334 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx457, align 8, !dbg !8158
  %align = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %334, i32 0, i32 32, !dbg !8159
  store i32 %conv454, i32* %align, align 8, !dbg !8160
  br label %if.end458, !dbg !8158

if.end458:                                        ; preds = %if.then452, %if.then448
  br label %if.end459, !dbg !8161

if.end459:                                        ; preds = %if.end458, %if.end444
  %335 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !8162
  %call460 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %335, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0)), !dbg !8163
  store %struct._XMLTreeInfo* %call460, %struct._XMLTreeInfo** %child, align 8, !dbg !8164
  %336 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8165
  %cmp461 = icmp ne %struct._XMLTreeInfo* %336, null, !dbg !8167
  br i1 %cmp461, label %if.then463, label %if.end476, !dbg !8168

if.then463:                                       ; preds = %if.end459
  %337 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8169
  %call464 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %337), !dbg !8171
  store i8* %call464, i8** %value, align 8, !dbg !8172
  %338 = load i8*, i8** %value, align 8, !dbg !8173
  %cmp465 = icmp ne i8* %338, null, !dbg !8175
  br i1 %cmp465, label %if.then467, label %if.end475, !dbg !8176

if.then467:                                       ; preds = %if.then463
  %339 = load i8*, i8** %value, align 8, !dbg !8177
  %call468 = call i64 @StringToLong(i8* %339), !dbg !8178
  %cmp469 = icmp ne i64 %call468, 0, !dbg !8179
  %340 = zext i1 %cmp469 to i64, !dbg !8178
  %cond471 = select i1 %cmp469, i32 1, i32 0, !dbg !8178
  %341 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8180
  %graphic_context472 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %341, i32 0, i32 12, !dbg !8180
  %342 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context472, align 8, !dbg !8180
  %343 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8180
  %index473 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %343, i32 0, i32 11, !dbg !8180
  %344 = load i64, i64* %index473, align 8, !dbg !8180
  %arrayidx474 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %342, i64 %344, !dbg !8180
  %345 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx474, align 8, !dbg !8180
  %text_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %345, i32 0, i32 13, !dbg !8181
  store i32 %cond471, i32* %text_antialias, align 4, !dbg !8182
  br label %if.end475, !dbg !8180

if.end475:                                        ; preds = %if.then467, %if.then463
  br label %if.end476, !dbg !8183

if.end476:                                        ; preds = %if.end475, %if.end459
  %346 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !8184
  %call477 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %346, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i64 0, i64 0)), !dbg !8185
  store %struct._XMLTreeInfo* %call477, %struct._XMLTreeInfo** %child, align 8, !dbg !8186
  %347 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8187
  %cmp478 = icmp ne %struct._XMLTreeInfo* %347, null, !dbg !8189
  br i1 %cmp478, label %if.then480, label %if.end491, !dbg !8190

if.then480:                                       ; preds = %if.end476
  %348 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8191
  %call481 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %348), !dbg !8193
  store i8* %call481, i8** %value, align 8, !dbg !8194
  %349 = load i8*, i8** %value, align 8, !dbg !8195
  %cmp482 = icmp ne i8* %349, null, !dbg !8197
  br i1 %cmp482, label %if.then484, label %if.end490, !dbg !8198

if.then484:                                       ; preds = %if.then480
  %350 = load i8*, i8** %value, align 8, !dbg !8199
  %351 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8200
  %graphic_context485 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %351, i32 0, i32 12, !dbg !8200
  %352 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context485, align 8, !dbg !8200
  %353 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8200
  %index486 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %353, i32 0, i32 11, !dbg !8200
  %354 = load i64, i64* %index486, align 8, !dbg !8200
  %arrayidx487 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %352, i64 %354, !dbg !8200
  %355 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx487, align 8, !dbg !8200
  %undercolor = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %355, i32 0, i32 33, !dbg !8201
  %356 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8202
  %exception488 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %356, i32 0, i32 3, !dbg !8203
  %357 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception488, align 8, !dbg !8203
  %call489 = call i32 @QueryColorDatabase(i8* %350, %struct._PixelPacket* %undercolor, %struct._ExceptionInfo* %357), !dbg !8204
  br label %if.end490, !dbg !8205

if.end490:                                        ; preds = %if.then484, %if.then480
  br label %if.end491, !dbg !8206

if.end491:                                        ; preds = %if.end490, %if.end476
  %358 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !8207
  %call492 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %358, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.52, i64 0, i64 0)), !dbg !8208
  store %struct._XMLTreeInfo* %call492, %struct._XMLTreeInfo** %child, align 8, !dbg !8209
  %359 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8210
  %cmp493 = icmp ne %struct._XMLTreeInfo* %359, null, !dbg !8212
  br i1 %cmp493, label %if.then495, label %if.end502, !dbg !8213

if.then495:                                       ; preds = %if.end491
  %360 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8214
  %mvg = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %360, i32 0, i32 4, !dbg !8216
  %361 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %child, align 8, !dbg !8217
  %call496 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %361), !dbg !8218
  %call497 = call i8* @CloneString(i8** %mvg, i8* %call496), !dbg !8219
  %362 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8220
  %mvg498 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %362, i32 0, i32 4, !dbg !8221
  %363 = load i8*, i8** %mvg498, align 8, !dbg !8221
  %call499 = call i64 @strlen(i8* %363) #15, !dbg !8222
  %364 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8223
  %mvg_length = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %364, i32 0, i32 6, !dbg !8224
  store i64 %call499, i64* %mvg_length, align 8, !dbg !8225
  %365 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8226
  %mvg_length500 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %365, i32 0, i32 6, !dbg !8227
  %366 = load i64, i64* %mvg_length500, align 8, !dbg !8227
  %add501 = add i64 %366, 1, !dbg !8228
  %367 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8229
  %mvg_alloc = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %367, i32 0, i32 5, !dbg !8230
  store i64 %add501, i64* %mvg_alloc, align 8, !dbg !8231
  br label %if.end502, !dbg !8232

if.end502:                                        ; preds = %if.then495, %if.end491
  %368 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !8233
  %call503 = call %struct._XMLTreeInfo* @DestroyXMLTree(%struct._XMLTreeInfo* %368), !dbg !8234
  store %struct._XMLTreeInfo* %call503, %struct._XMLTreeInfo** %xml_info, align 8, !dbg !8235
  store i32 1, i32* %retval, align 4, !dbg !8236
  br label %return, !dbg !8236

return:                                           ; preds = %if.end502, %if.then14, %if.then10
  %369 = load i32, i32* %retval, align 4, !dbg !8237
  ret i32 %369, !dbg !8237
}

declare dso_local %struct._XMLTreeInfo* @NewXMLTree(i8*, %struct._ExceptionInfo*) #2

declare dso_local %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo*, i8*) #2

declare dso_local i8* @GetXMLTreeContent(%struct._XMLTreeInfo*) #2

declare dso_local i64 @ParseCommandOption(i32, i32, i8*) #2

declare dso_local i32 @QueryColorDatabase(i8*, %struct._PixelPacket*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal double @StringToDouble(i8* noalias %string, i8** noalias %sentinal) #0 !dbg !8238 {
entry:
  %string.addr = alloca i8*, align 8
  %sentinal.addr = alloca i8**, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !8244, metadata !DIExpression()), !dbg !8245
  store i8** %sentinal, i8*** %sentinal.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %sentinal.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  %0 = load i8*, i8** %string.addr, align 8, !dbg !8248
  %1 = load i8**, i8*** %sentinal.addr, align 8, !dbg !8249
  %call = call double @InterpretLocaleValue(i8* %0, i8** %1), !dbg !8250
  ret double %call, !dbg !8251
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @StringToUnsignedLong(i8* noalias %value) #0 !dbg !8252 {
entry:
  %value.addr = alloca i8*, align 8
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !8255, metadata !DIExpression()), !dbg !8256
  %0 = load i8*, i8** %value.addr, align 8, !dbg !8257
  %call = call i64 @strtoul(i8* %0, i8** null, i32 10) #10, !dbg !8258
  ret i64 %call, !dbg !8259
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @StringToLong(i8* noalias %value) #0 !dbg !8260 {
entry:
  %value.addr = alloca i8*, align 8
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !8263, metadata !DIExpression()), !dbg !8264
  %0 = load i8*, i8** %value.addr, align 8, !dbg !8265
  %call = call i64 @strtol(i8* %0, i8** null, i32 10) #10, !dbg !8266
  ret i64 %call, !dbg !8267
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsPoint(i8* %point) #0 !dbg !8268 {
entry:
  %point.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %value = alloca i64, align 8
  store i8* %point, i8** %point.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %point.addr, metadata !8271, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8273, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.declare(metadata i64* %value, metadata !8275, metadata !DIExpression()), !dbg !8276
  %0 = load i8*, i8** %point.addr, align 8, !dbg !8277
  %call = call i64 @strtol(i8* %0, i8** %p, i32 10) #10, !dbg !8278
  store i64 %call, i64* %value, align 8, !dbg !8279
  %1 = load i64, i64* %value, align 8, !dbg !8280
  %2 = load i8*, i8** %p, align 8, !dbg !8281
  %3 = load i8*, i8** %point.addr, align 8, !dbg !8282
  %cmp = icmp ne i8* %2, %3, !dbg !8283
  %4 = zext i1 %cmp to i64, !dbg !8281
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !8281
  ret i32 %cond, !dbg !8284
}

declare dso_local void @GetMagickToken(i8*, i8**, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSkewX(%struct._DrawingWand* %wand, double %degrees) #0 !dbg !8285 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %degrees.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !8286, metadata !DIExpression()), !dbg !8287
  store double %degrees, double* %degrees.addr, align 8
  call void @llvm.dbg.declare(metadata double* %degrees.addr, metadata !8288, metadata !DIExpression()), !dbg !8289
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8290
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !8292
  %1 = load i32, i32* %debug, align 4, !dbg !8292
  %cmp = icmp ne i32 %1, 0, !dbg !8293
  br i1 %cmp, label %if.then, label %if.end, !dbg !8294

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8295
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !8296
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8295
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6544, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8297
  br label %if.end, !dbg !8298

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8299
  %4 = load double, double* %degrees.addr, align 8, !dbg !8300
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.116, i64 0, i64 0), double %4), !dbg !8301
  ret void, !dbg !8302
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSkewY(%struct._DrawingWand* %wand, double %degrees) #0 !dbg !8303 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %degrees.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !8304, metadata !DIExpression()), !dbg !8305
  store double %degrees, double* %degrees.addr, align 8
  call void @llvm.dbg.declare(metadata double* %degrees.addr, metadata !8306, metadata !DIExpression()), !dbg !8307
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8308
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !8310
  %1 = load i32, i32* %debug, align 4, !dbg !8310
  %cmp = icmp ne i32 %1, 0, !dbg !8311
  br i1 %cmp, label %if.then, label %if.end, !dbg !8312

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8313
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !8314
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8313
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6578, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8315
  br label %if.end, !dbg !8316

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8317
  %4 = load double, double* %degrees.addr, align 8, !dbg !8318
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.117, i64 0, i64 0), double %4), !dbg !8319
  ret void, !dbg !8320
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawTranslate(%struct._DrawingWand* %wand, double %x, double %y) #0 !dbg !8321 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !8322, metadata !DIExpression()), !dbg !8323
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !8324, metadata !DIExpression()), !dbg !8325
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !8326, metadata !DIExpression()), !dbg !8327
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8328
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !8330
  %1 = load i32, i32* %debug, align 4, !dbg !8330
  %cmp = icmp ne i32 %1, 0, !dbg !8331
  br i1 %cmp, label %if.then, label %if.end, !dbg !8332

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8333
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !8334
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8333
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6616, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8335
  br label %if.end, !dbg !8336

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8337
  %4 = load double, double* %x.addr, align 8, !dbg !8338
  %5 = load double, double* %y.addr, align 8, !dbg !8339
  %call1 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.118, i64 0, i64 0), double %4, double %5), !dbg !8340
  ret void, !dbg !8341
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DrawSetViewbox(%struct._DrawingWand* %wand, i64 %x1, i64 %y1, i64 %x2, i64 %y2) #0 !dbg !8342 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %x1.addr = alloca i64, align 8
  %y1.addr = alloca i64, align 8
  %x2.addr = alloca i64, align 8
  %y2.addr = alloca i64, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !8345, metadata !DIExpression()), !dbg !8346
  store i64 %x1, i64* %x1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x1.addr, metadata !8347, metadata !DIExpression()), !dbg !8348
  store i64 %y1, i64* %y1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y1.addr, metadata !8349, metadata !DIExpression()), !dbg !8350
  store i64 %x2, i64* %x2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x2.addr, metadata !8351, metadata !DIExpression()), !dbg !8352
  store i64 %y2, i64* %y2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y2.addr, metadata !8353, metadata !DIExpression()), !dbg !8354
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8355
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !8357
  %1 = load i32, i32* %debug, align 4, !dbg !8357
  %cmp = icmp ne i32 %1, 0, !dbg !8358
  br i1 %cmp, label %if.then, label %if.end, !dbg !8359

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8360
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !8361
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8360
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6661, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8362
  br label %if.end, !dbg !8363

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8364
  %4 = load i64, i64* %x1.addr, align 8, !dbg !8365
  %conv = sitofp i64 %4 to double, !dbg !8366
  %5 = load i64, i64* %y1.addr, align 8, !dbg !8367
  %conv1 = sitofp i64 %5 to double, !dbg !8368
  %6 = load i64, i64* %x2.addr, align 8, !dbg !8369
  %conv2 = sitofp i64 %6 to double, !dbg !8370
  %7 = load i64, i64* %y2.addr, align 8, !dbg !8371
  %conv3 = sitofp i64 %7 to double, !dbg !8372
  %call4 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.119, i64 0, i64 0), double %conv, double %conv1, double %conv2, double %conv3), !dbg !8373
  ret void, !dbg !8374
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @IsDrawingWand(%struct._DrawingWand* %wand) #0 !dbg !8375 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !8376, metadata !DIExpression()), !dbg !8377
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8378
  %cmp = icmp eq %struct._DrawingWand* %0, null, !dbg !8380
  br i1 %cmp, label %if.then, label %if.end, !dbg !8381

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8382
  br label %return, !dbg !8382

if.end:                                           ; preds = %entry
  %1 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8383
  %signature = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %1, i32 0, i32 19, !dbg !8385
  %2 = load i64, i64* %signature, align 8, !dbg !8385
  %cmp1 = icmp ne i64 %2, 2880220587, !dbg !8386
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8387

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8388
  br label %return, !dbg !8388

if.end3:                                          ; preds = %if.end
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8389
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 1, !dbg !8391
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8389
  %call = call i32 @LocaleNCompare(i8* %arraydecay, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.120, i64 0, i64 0), i64 11), !dbg !8392
  %cmp4 = icmp ne i32 %call, 0, !dbg !8393
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !8394

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !8395
  br label %return, !dbg !8395

if.end6:                                          ; preds = %if.end3
  store i32 1, i32* %retval, align 4, !dbg !8396
  br label %return, !dbg !8396

return:                                           ; preds = %if.end6, %if.then5, %if.then2, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8397
  ret i32 %4, !dbg !8397
}

declare dso_local i32 @LocaleNCompare(i8*, i8*, i64) #2

declare dso_local i8* @GetMagickQuantumDepth(i64*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._DrawInfo* @PeekDrawingWand(%struct._DrawingWand* %wand) #0 !dbg !8398 {
entry:
  %wand.addr = alloca %struct._DrawingWand*, align 8
  %draw_info = alloca %struct._DrawInfo*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !8401, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info, metadata !8403, metadata !DIExpression()), !dbg !8404
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8405
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !8407
  %1 = load i32, i32* %debug, align 4, !dbg !8407
  %cmp = icmp ne i32 %1, 0, !dbg !8408
  br i1 %cmp, label %if.then, label %if.end, !dbg !8409

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8410
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !8411
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8410
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6801, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8412
  br label %if.end, !dbg !8413

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8414
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 12, !dbg !8414
  %4 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !8414
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8414
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 11, !dbg !8414
  %6 = load i64, i64* %index, align 8, !dbg !8414
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %4, i64 %6, !dbg !8414
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !8414
  %call1 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %7), !dbg !8415
  store %struct._DrawInfo* %call1, %struct._DrawInfo** %draw_info, align 8, !dbg !8416
  %8 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !8417
  %affine = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %8, i32 0, i32 3, !dbg !8418
  call void @GetAffineMatrix(%struct._AffineMatrix* %affine), !dbg !8419
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !8420
  %primitive = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 0, !dbg !8421
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8422
  %mvg = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 4, !dbg !8423
  %11 = load i8*, i8** %mvg, align 8, !dbg !8423
  %call2 = call i8* @CloneString(i8** %primitive, i8* %11), !dbg !8424
  %12 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !8425
  ret %struct._DrawInfo* %12, !dbg !8426
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PopDrawingWand(%struct._DrawingWand* %wand) #0 !dbg !8427 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !8428, metadata !DIExpression()), !dbg !8429
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8430
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !8432
  %1 = load i32, i32* %debug, align 4, !dbg !8432
  %cmp = icmp ne i32 %1, 0, !dbg !8433
  br i1 %cmp, label %if.then, label %if.end, !dbg !8434

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8435
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !8436
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8435
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6838, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8437
  br label %if.end, !dbg !8438

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8439
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 11, !dbg !8441
  %4 = load i64, i64* %index, align 8, !dbg !8441
  %cmp1 = icmp eq i64 %4, 0, !dbg !8442
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !8443

if.then2:                                         ; preds = %if.end
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8444
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 3, !dbg !8444
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8444
  %7 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8444
  %name3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %7, i32 0, i32 1, !dbg !8444
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name3, i64 0, i64 0, !dbg !8444
  %call5 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6841, i32 460, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay4), !dbg !8444
  store i32 0, i32* %retval, align 4, !dbg !8446
  br label %return, !dbg !8446

if.end6:                                          ; preds = %if.end
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8447
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 12, !dbg !8447
  %9 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !8447
  %10 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8447
  %index7 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %10, i32 0, i32 11, !dbg !8447
  %11 = load i64, i64* %index7, align 8, !dbg !8447
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %9, i64 %11, !dbg !8447
  %12 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !8447
  %call8 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %12), !dbg !8448
  %13 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8449
  %graphic_context9 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %13, i32 0, i32 12, !dbg !8449
  %14 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context9, align 8, !dbg !8449
  %15 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8449
  %index10 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %15, i32 0, i32 11, !dbg !8449
  %16 = load i64, i64* %index10, align 8, !dbg !8449
  %arrayidx11 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %14, i64 %16, !dbg !8449
  store %struct._DrawInfo* %call8, %struct._DrawInfo** %arrayidx11, align 8, !dbg !8450
  %17 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8451
  %index12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %17, i32 0, i32 11, !dbg !8452
  %18 = load i64, i64* %index12, align 8, !dbg !8453
  %dec = add i64 %18, -1, !dbg !8453
  store i64 %dec, i64* %index12, align 8, !dbg !8453
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8454
  %indent_depth = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %19, i32 0, i32 14, !dbg !8456
  %20 = load i64, i64* %indent_depth, align 8, !dbg !8456
  %cmp13 = icmp ugt i64 %20, 0, !dbg !8457
  br i1 %cmp13, label %if.then14, label %if.end17, !dbg !8458

if.then14:                                        ; preds = %if.end6
  %21 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8459
  %indent_depth15 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %21, i32 0, i32 14, !dbg !8460
  %22 = load i64, i64* %indent_depth15, align 8, !dbg !8461
  %dec16 = add i64 %22, -1, !dbg !8461
  store i64 %dec16, i64* %indent_depth15, align 8, !dbg !8461
  br label %if.end17, !dbg !8459

if.end17:                                         ; preds = %if.then14, %if.end6
  %23 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8462
  %call18 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.124, i64 0, i64 0)), !dbg !8463
  store i32 1, i32* %retval, align 4, !dbg !8464
  br label %return, !dbg !8464

return:                                           ; preds = %if.end17, %if.then2
  %24 = load i32, i32* %retval, align 4, !dbg !8465
  ret i32 %24, !dbg !8465
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PushDrawingWand(%struct._DrawingWand* %wand) #0 !dbg !8466 {
entry:
  %retval = alloca i32, align 4
  %wand.addr = alloca %struct._DrawingWand*, align 8
  store %struct._DrawingWand* %wand, %struct._DrawingWand** %wand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawingWand** %wand.addr, metadata !8467, metadata !DIExpression()), !dbg !8468
  %0 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8469
  %debug = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %0, i32 0, i32 18, !dbg !8471
  %1 = load i32, i32* %debug, align 4, !dbg !8471
  %cmp = icmp ne i32 %1, 0, !dbg !8472
  br i1 %cmp, label %if.then, label %if.end, !dbg !8473

if.then:                                          ; preds = %entry
  %2 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8474
  %name = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %2, i32 0, i32 1, !dbg !8475
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !8474
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 65536, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6893, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8476
  br label %if.end, !dbg !8477

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8478
  %index = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %3, i32 0, i32 11, !dbg !8479
  %4 = load i64, i64* %index, align 8, !dbg !8480
  %inc = add i64 %4, 1, !dbg !8480
  store i64 %inc, i64* %index, align 8, !dbg !8480
  %5 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8481
  %graphic_context = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %5, i32 0, i32 12, !dbg !8482
  %6 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !8482
  %7 = bitcast %struct._DrawInfo** %6 to i8*, !dbg !8481
  %8 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8483
  %index1 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %8, i32 0, i32 11, !dbg !8484
  %9 = load i64, i64* %index1, align 8, !dbg !8484
  %add = add i64 %9, 1, !dbg !8485
  %call2 = call i8* @ResizeQuantumMemory(i8* %7, i64 %add, i64 8) #17, !dbg !8486
  %10 = bitcast i8* %call2 to %struct._DrawInfo**, !dbg !8487
  %11 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8488
  %graphic_context3 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %11, i32 0, i32 12, !dbg !8489
  store %struct._DrawInfo** %10, %struct._DrawInfo*** %graphic_context3, align 8, !dbg !8490
  %12 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8491
  %graphic_context4 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %12, i32 0, i32 12, !dbg !8493
  %13 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context4, align 8, !dbg !8493
  %cmp5 = icmp eq %struct._DrawInfo** %13, null, !dbg !8494
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !8495

if.then6:                                         ; preds = %if.end
  %14 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8496
  %exception = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %14, i32 0, i32 3, !dbg !8496
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8496
  %16 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8496
  %name7 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %16, i32 0, i32 1, !dbg !8496
  %arraydecay8 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name7, i64 0, i64 0, !dbg !8496
  %call9 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6900, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay8), !dbg !8496
  store i32 0, i32* %retval, align 4, !dbg !8498
  br label %return, !dbg !8498

if.end10:                                         ; preds = %if.end
  %17 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8499
  %graphic_context11 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %17, i32 0, i32 12, !dbg !8500
  %18 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context11, align 8, !dbg !8500
  %19 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8501
  %index12 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %19, i32 0, i32 11, !dbg !8502
  %20 = load i64, i64* %index12, align 8, !dbg !8502
  %sub = sub i64 %20, 1, !dbg !8503
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %18, i64 %sub, !dbg !8499
  %21 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !8499
  %call13 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %21), !dbg !8504
  %22 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8505
  %graphic_context14 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %22, i32 0, i32 12, !dbg !8505
  %23 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context14, align 8, !dbg !8505
  %24 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8505
  %index15 = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %24, i32 0, i32 11, !dbg !8505
  %25 = load i64, i64* %index15, align 8, !dbg !8505
  %arrayidx16 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %23, i64 %25, !dbg !8505
  store %struct._DrawInfo* %call13, %struct._DrawInfo** %arrayidx16, align 8, !dbg !8506
  %26 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8507
  %call17 = call i32 (%struct._DrawingWand*, i8*, ...) @MvgPrintf(%struct._DrawingWand* %26, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.125, i64 0, i64 0)), !dbg !8508
  %27 = load %struct._DrawingWand*, %struct._DrawingWand** %wand.addr, align 8, !dbg !8509
  %indent_depth = getelementptr inbounds %struct._DrawingWand, %struct._DrawingWand* %27, i32 0, i32 14, !dbg !8510
  %28 = load i64, i64* %indent_depth, align 8, !dbg !8511
  %inc18 = add i64 %28, 1, !dbg !8511
  store i64 %inc18, i64* %indent_depth, align 8, !dbg !8511
  store i32 1, i32* %retval, align 4, !dbg !8512
  br label %return, !dbg !8512

return:                                           ; preds = %if.end10, %if.then6
  %29 = load i32, i32* %retval, align 4, !dbg !8513
  ret i32 %29, !dbg !8513
}

; Function Attrs: allocsize(1,2)
declare dso_local i8* @ResizeQuantumMemory(i8*, i64, i64) #9

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare dso_local i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) #11

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

declare dso_local double @InterpretLocaleValue(i8*, i8**) #2

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #11

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8*, i8**, i32) #11

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind willreturn }
attributes #8 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { allocsize(1,2) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { allocsize(0) }
attributes #13 = { nounwind readnone }
attributes #14 = { noreturn }
attributes #15 = { nounwind readonly }
attributes #16 = { allocsize(0,1) }
attributes #17 = { allocsize(1,2) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1214, !1215, !1216}
!llvm.ident = !{!1217}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !684, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "wand/drawing-wand.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !10, !47, !72, !84, !88, !96, !101, !136, !146, !152, !167, !238, !246, !252, !325, !342, !356, !368, !374, !380, !385, !391, !397, !404, !412, !425, !431, !437, !441, !446, !459, !464, !489, !522, !544, !565, !572, !648, !656}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 204, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9}
!7 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11, line: 25, baseType: !5, size: 32, elements: !12)
!11 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!12 = !{!13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!13 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!14 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!17 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!18 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!19 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!20 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!21 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!22 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!23 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!24 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!25 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!26 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!27 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!28 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!29 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!30 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!31 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!32 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!33 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!34 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!35 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!36 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!37 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!38 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!39 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!40 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!41 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!42 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!43 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!44 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!45 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!46 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !48, line: 25, baseType: !5, size: 32, elements: !49)
!48 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!49 = !{!50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!50 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!54 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!55 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!56 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!57 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!58 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!59 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!60 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!61 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!62 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!63 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!64 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!65 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!66 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!67 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!68 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!69 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!70 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!71 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 75, baseType: !5, size: 32, elements: !74)
!73 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!74 = !{!75, !76, !77, !78, !79, !80, !81, !82, !83}
!75 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!79 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!80 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!81 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!82 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!83 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 211, baseType: !5, size: 32, elements: !85)
!85 = !{!86, !87}
!86 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 42, baseType: !5, size: 32, elements: !90)
!89 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!90 = !{!91, !92, !93, !94, !95}
!91 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!95 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 88, baseType: !5, size: 32, elements: !97)
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !102, line: 32, baseType: !5, size: 32, elements: !103)
!102 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!104 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!113 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!114 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!115 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!116 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!117 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!118 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!119 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!120 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!121 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!122 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!123 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!124 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!125 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!126 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!127 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!128 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!129 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!130 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!131 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!132 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!133 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!134 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!135 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 63, baseType: !5, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143, !144, !145}
!138 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!141 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!142 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!143 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!144 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!145 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 30, baseType: !5, size: 32, elements: !148)
!147 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 77, baseType: !5, size: 32, elements: !154)
!153 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166}
!155 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!158 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!159 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!160 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!161 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!162 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!163 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!164 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!165 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!166 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !168, line: 25, baseType: !5, size: 32, elements: !169)
!168 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237}
!170 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!171 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!172 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!173 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!174 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!175 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!176 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!177 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!178 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!179 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!180 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!181 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!182 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!183 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!184 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!185 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!186 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!187 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!188 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!189 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!190 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!191 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!192 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!193 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!194 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!195 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!196 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!197 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!198 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!199 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!200 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!201 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!202 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!203 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!204 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!205 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!206 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!207 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!208 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!209 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!210 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!211 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!212 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!213 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!214 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!215 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!216 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!217 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!218 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!219 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!220 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!221 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!222 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!223 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!224 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!225 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!226 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!227 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!228 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!229 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!230 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!231 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!232 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!233 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!234 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!235 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!236 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!237 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 25, baseType: !5, size: 32, elements: !240)
!239 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!244 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!245 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !247, line: 25, baseType: !5, size: 32, elements: !248)
!247 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!248 = !{!249, !250, !251}
!249 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!250 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!251 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !253, line: 28, baseType: !5, size: 32, elements: !254)
!253 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324}
!255 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!256 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!257 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!258 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!259 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!260 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!261 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!262 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!263 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!264 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!265 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!266 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!267 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!268 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!269 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!270 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!271 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!272 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!273 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!274 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!275 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!276 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!277 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!278 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!279 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!280 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!281 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!282 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!283 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!284 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!285 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!286 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!287 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!288 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!289 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!290 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!291 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!292 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!293 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!294 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!295 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!296 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!297 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!298 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!299 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!300 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!301 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!302 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!303 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!304 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!305 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!306 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!307 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!308 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!309 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!310 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!311 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!312 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!313 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!314 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!315 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!316 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!317 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!318 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!319 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!320 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!321 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!322 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!323 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!324 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 31, baseType: !5, size: 32, elements: !327)
!326 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!327 = !{!328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341}
!328 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!329 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!330 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!331 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!332 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!333 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!334 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!335 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!336 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!337 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!338 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!339 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!340 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!341 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 47, baseType: !5, size: 32, elements: !343)
!343 = !{!344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355}
!344 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!347 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!348 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!349 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!350 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!351 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!352 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!353 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!354 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!355 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 67, baseType: !5, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!358 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!362 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!363 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!364 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!365 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!366 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!367 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 70, baseType: !5, size: 32, elements: !370)
!369 = !DIFile(filename: "./magick/draw.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!370 = !{!371, !372, !373}
!371 = !DIEnumerator(name: "UndefinedGradient", value: 0, isUnsigned: true)
!372 = !DIEnumerator(name: "LinearGradient", value: 1, isUnsigned: true)
!373 = !DIEnumerator(name: "RadialGradient", value: 2, isUnsigned: true)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 129, baseType: !5, size: 32, elements: !375)
!375 = !{!376, !377, !378, !379}
!376 = !DIEnumerator(name: "UndefinedSpread", value: 0, isUnsigned: true)
!377 = !DIEnumerator(name: "PadSpread", value: 1, isUnsigned: true)
!378 = !DIEnumerator(name: "ReflectSpread", value: 2, isUnsigned: true)
!379 = !DIEnumerator(name: "RepeatSpread", value: 3, isUnsigned: true)
!380 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 62, baseType: !5, size: 32, elements: !381)
!381 = !{!382, !383, !384}
!382 = !DIEnumerator(name: "UndefinedRule", value: 0, isUnsigned: true)
!383 = !DIEnumerator(name: "EvenOddRule", value: 1, isUnsigned: true)
!384 = !DIEnumerator(name: "NonZeroRule", value: 2, isUnsigned: true)
!385 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 77, baseType: !5, size: 32, elements: !386)
!386 = !{!387, !388, !389, !390}
!387 = !DIEnumerator(name: "UndefinedCap", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "ButtCap", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "RoundCap", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "SquareCap", value: 3, isUnsigned: true)
!391 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 85, baseType: !5, size: 32, elements: !392)
!392 = !{!393, !394, !395, !396}
!393 = !DIEnumerator(name: "UndefinedJoin", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "MiterJoin", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "RoundJoin", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "BevelJoin", value: 3, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 46, baseType: !5, size: 32, elements: !398)
!398 = !{!399, !400, !401, !402, !403}
!399 = !DIEnumerator(name: "UndefinedDecoration", value: 0, isUnsigned: true)
!400 = !DIEnumerator(name: "NoDecoration", value: 1, isUnsigned: true)
!401 = !DIEnumerator(name: "UnderlineDecoration", value: 2, isUnsigned: true)
!402 = !DIEnumerator(name: "OverlineDecoration", value: 3, isUnsigned: true)
!403 = !DIEnumerator(name: "LineThroughDecoration", value: 4, isUnsigned: true)
!404 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 40, baseType: !5, size: 32, elements: !406)
!405 = !DIFile(filename: "./magick/type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!406 = !{!407, !408, !409, !410, !411}
!407 = !DIEnumerator(name: "UndefinedStyle", value: 0, isUnsigned: true)
!408 = !DIEnumerator(name: "NormalStyle", value: 1, isUnsigned: true)
!409 = !DIEnumerator(name: "ItalicStyle", value: 2, isUnsigned: true)
!410 = !DIEnumerator(name: "ObliqueStyle", value: 3, isUnsigned: true)
!411 = !DIEnumerator(name: "AnyStyle", value: 4, isUnsigned: true)
!412 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 25, baseType: !5, size: 32, elements: !413)
!413 = !{!414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424}
!414 = !DIEnumerator(name: "UndefinedStretch", value: 0, isUnsigned: true)
!415 = !DIEnumerator(name: "NormalStretch", value: 1, isUnsigned: true)
!416 = !DIEnumerator(name: "UltraCondensedStretch", value: 2, isUnsigned: true)
!417 = !DIEnumerator(name: "ExtraCondensedStretch", value: 3, isUnsigned: true)
!418 = !DIEnumerator(name: "CondensedStretch", value: 4, isUnsigned: true)
!419 = !DIEnumerator(name: "SemiCondensedStretch", value: 5, isUnsigned: true)
!420 = !DIEnumerator(name: "SemiExpandedStretch", value: 6, isUnsigned: true)
!421 = !DIEnumerator(name: "ExpandedStretch", value: 7, isUnsigned: true)
!422 = !DIEnumerator(name: "ExtraExpandedStretch", value: 8, isUnsigned: true)
!423 = !DIEnumerator(name: "UltraExpandedStretch", value: 9, isUnsigned: true)
!424 = !DIEnumerator(name: "AnyStretch", value: 10, isUnsigned: true)
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 30, baseType: !5, size: 32, elements: !426)
!426 = !{!427, !428, !429, !430}
!427 = !DIEnumerator(name: "UndefinedAlign", value: 0, isUnsigned: true)
!428 = !DIEnumerator(name: "LeftAlign", value: 1, isUnsigned: true)
!429 = !DIEnumerator(name: "CenterAlign", value: 2, isUnsigned: true)
!430 = !DIEnumerator(name: "RightAlign", value: 3, isUnsigned: true)
!431 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 38, baseType: !5, size: 32, elements: !432)
!432 = !{!433, !434, !435, !436}
!433 = !DIEnumerator(name: "UndefinedPathUnits", value: 0, isUnsigned: true)
!434 = !DIEnumerator(name: "UserSpace", value: 1, isUnsigned: true)
!435 = !DIEnumerator(name: "UserSpaceOnUse", value: 2, isUnsigned: true)
!436 = !DIEnumerator(name: "ObjectBoundingBox", value: 3, isUnsigned: true)
!437 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 123, baseType: !5, size: 32, elements: !438)
!438 = !{!439, !440}
!439 = !DIEnumerator(name: "UndefinedReference", value: 0, isUnsigned: true)
!440 = !DIEnumerator(name: "GradientReference", value: 1, isUnsigned: true)
!441 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 55, baseType: !5, size: 32, elements: !442)
!442 = !{!443, !444, !445}
!443 = !DIEnumerator(name: "UndefinedDirection", value: 0, isUnsigned: true)
!444 = !DIEnumerator(name: "RightToLeftDirection", value: 1, isUnsigned: true)
!445 = !DIEnumerator(name: "LeftToRightDirection", value: 2, isUnsigned: true)
!446 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1, line: 68, baseType: !5, size: 32, elements: !447)
!447 = !{!448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458}
!448 = !DIEnumerator(name: "PathDefaultOperation", value: 0, isUnsigned: true)
!449 = !DIEnumerator(name: "PathCloseOperation", value: 1, isUnsigned: true)
!450 = !DIEnumerator(name: "PathCurveToOperation", value: 2, isUnsigned: true)
!451 = !DIEnumerator(name: "PathCurveToQuadraticBezierOperation", value: 3, isUnsigned: true)
!452 = !DIEnumerator(name: "PathCurveToQuadraticBezierSmoothOperation", value: 4, isUnsigned: true)
!453 = !DIEnumerator(name: "PathCurveToSmoothOperation", value: 5, isUnsigned: true)
!454 = !DIEnumerator(name: "PathEllipticArcOperation", value: 6, isUnsigned: true)
!455 = !DIEnumerator(name: "PathLineToHorizontalOperation", value: 7, isUnsigned: true)
!456 = !DIEnumerator(name: "PathLineToOperation", value: 8, isUnsigned: true)
!457 = !DIEnumerator(name: "PathLineToVerticalOperation", value: 9, isUnsigned: true)
!458 = !DIEnumerator(name: "PathMoveToOperation", value: 10, isUnsigned: true)
!459 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1, line: 83, baseType: !5, size: 32, elements: !460)
!460 = !{!461, !462, !463}
!461 = !DIEnumerator(name: "DefaultPathMode", value: 0, isUnsigned: true)
!462 = !DIEnumerator(name: "AbsolutePathMode", value: 1, isUnsigned: true)
!463 = !DIEnumerator(name: "RelativePathMode", value: 2, isUnsigned: true)
!464 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !465, line: 34, baseType: !5, size: 32, elements: !466)
!465 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!466 = !{!467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488}
!467 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!468 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!469 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!470 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!471 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!472 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!473 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!474 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!475 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!476 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!477 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!478 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!479 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!480 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!481 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!482 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!483 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!484 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!485 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!486 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!487 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!488 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!489 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !490, line: 27, baseType: !5, size: 32, elements: !491)
!490 = !DIFile(filename: "./magick/effect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!491 = !{!492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521}
!492 = !DIEnumerator(name: "UndefinedPreview", value: 0, isUnsigned: true)
!493 = !DIEnumerator(name: "RotatePreview", value: 1, isUnsigned: true)
!494 = !DIEnumerator(name: "ShearPreview", value: 2, isUnsigned: true)
!495 = !DIEnumerator(name: "RollPreview", value: 3, isUnsigned: true)
!496 = !DIEnumerator(name: "HuePreview", value: 4, isUnsigned: true)
!497 = !DIEnumerator(name: "SaturationPreview", value: 5, isUnsigned: true)
!498 = !DIEnumerator(name: "BrightnessPreview", value: 6, isUnsigned: true)
!499 = !DIEnumerator(name: "GammaPreview", value: 7, isUnsigned: true)
!500 = !DIEnumerator(name: "SpiffPreview", value: 8, isUnsigned: true)
!501 = !DIEnumerator(name: "DullPreview", value: 9, isUnsigned: true)
!502 = !DIEnumerator(name: "GrayscalePreview", value: 10, isUnsigned: true)
!503 = !DIEnumerator(name: "QuantizePreview", value: 11, isUnsigned: true)
!504 = !DIEnumerator(name: "DespecklePreview", value: 12, isUnsigned: true)
!505 = !DIEnumerator(name: "ReduceNoisePreview", value: 13, isUnsigned: true)
!506 = !DIEnumerator(name: "AddNoisePreview", value: 14, isUnsigned: true)
!507 = !DIEnumerator(name: "SharpenPreview", value: 15, isUnsigned: true)
!508 = !DIEnumerator(name: "BlurPreview", value: 16, isUnsigned: true)
!509 = !DIEnumerator(name: "ThresholdPreview", value: 17, isUnsigned: true)
!510 = !DIEnumerator(name: "EdgeDetectPreview", value: 18, isUnsigned: true)
!511 = !DIEnumerator(name: "SpreadPreview", value: 19, isUnsigned: true)
!512 = !DIEnumerator(name: "SolarizePreview", value: 20, isUnsigned: true)
!513 = !DIEnumerator(name: "ShadePreview", value: 21, isUnsigned: true)
!514 = !DIEnumerator(name: "RaisePreview", value: 22, isUnsigned: true)
!515 = !DIEnumerator(name: "SegmentPreview", value: 23, isUnsigned: true)
!516 = !DIEnumerator(name: "SwirlPreview", value: 24, isUnsigned: true)
!517 = !DIEnumerator(name: "ImplodePreview", value: 25, isUnsigned: true)
!518 = !DIEnumerator(name: "WavePreview", value: 26, isUnsigned: true)
!519 = !DIEnumerator(name: "OilPaintPreview", value: 27, isUnsigned: true)
!520 = !DIEnumerator(name: "CharcoalDrawingPreview", value: 28, isUnsigned: true)
!521 = !DIEnumerator(name: "JPEGPreview", value: 29, isUnsigned: true)
!522 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 177, baseType: !5, size: 32, elements: !523)
!523 = !{!524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543}
!524 = !DIEnumerator(name: "UndefinedChannel", value: 0, isUnsigned: true)
!525 = !DIEnumerator(name: "RedChannel", value: 1, isUnsigned: true)
!526 = !DIEnumerator(name: "GrayChannel", value: 1, isUnsigned: true)
!527 = !DIEnumerator(name: "CyanChannel", value: 1, isUnsigned: true)
!528 = !DIEnumerator(name: "GreenChannel", value: 2, isUnsigned: true)
!529 = !DIEnumerator(name: "MagentaChannel", value: 2, isUnsigned: true)
!530 = !DIEnumerator(name: "BlueChannel", value: 4, isUnsigned: true)
!531 = !DIEnumerator(name: "YellowChannel", value: 4, isUnsigned: true)
!532 = !DIEnumerator(name: "AlphaChannel", value: 8, isUnsigned: true)
!533 = !DIEnumerator(name: "OpacityChannel", value: 8, isUnsigned: true)
!534 = !DIEnumerator(name: "MatteChannel", value: 8, isUnsigned: true)
!535 = !DIEnumerator(name: "BlackChannel", value: 32, isUnsigned: true)
!536 = !DIEnumerator(name: "IndexChannel", value: 32, isUnsigned: true)
!537 = !DIEnumerator(name: "CompositeChannels", value: 47, isUnsigned: true)
!538 = !DIEnumerator(name: "AllChannels", value: 134217727, isUnsigned: true)
!539 = !DIEnumerator(name: "TrueAlphaChannel", value: 64, isUnsigned: true)
!540 = !DIEnumerator(name: "RGBChannels", value: 128, isUnsigned: true)
!541 = !DIEnumerator(name: "GrayChannels", value: 128, isUnsigned: true)
!542 = !DIEnumerator(name: "SyncChannels", value: 256, isUnsigned: true)
!543 = !DIEnumerator(name: "DefaultChannels", value: 134217719, isUnsigned: true)
!544 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !545, line: 27, baseType: !5, size: 32, elements: !546)
!545 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!546 = !{!547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564}
!547 = !DIEnumerator(name: "UndefinedVirtualPixelMethod", value: 0, isUnsigned: true)
!548 = !DIEnumerator(name: "BackgroundVirtualPixelMethod", value: 1, isUnsigned: true)
!549 = !DIEnumerator(name: "ConstantVirtualPixelMethod", value: 2, isUnsigned: true)
!550 = !DIEnumerator(name: "DitherVirtualPixelMethod", value: 3, isUnsigned: true)
!551 = !DIEnumerator(name: "EdgeVirtualPixelMethod", value: 4, isUnsigned: true)
!552 = !DIEnumerator(name: "MirrorVirtualPixelMethod", value: 5, isUnsigned: true)
!553 = !DIEnumerator(name: "RandomVirtualPixelMethod", value: 6, isUnsigned: true)
!554 = !DIEnumerator(name: "TileVirtualPixelMethod", value: 7, isUnsigned: true)
!555 = !DIEnumerator(name: "TransparentVirtualPixelMethod", value: 8, isUnsigned: true)
!556 = !DIEnumerator(name: "MaskVirtualPixelMethod", value: 9, isUnsigned: true)
!557 = !DIEnumerator(name: "BlackVirtualPixelMethod", value: 10, isUnsigned: true)
!558 = !DIEnumerator(name: "GrayVirtualPixelMethod", value: 11, isUnsigned: true)
!559 = !DIEnumerator(name: "WhiteVirtualPixelMethod", value: 12, isUnsigned: true)
!560 = !DIEnumerator(name: "HorizontalTileVirtualPixelMethod", value: 13, isUnsigned: true)
!561 = !DIEnumerator(name: "VerticalTileVirtualPixelMethod", value: 14, isUnsigned: true)
!562 = !DIEnumerator(name: "HorizontalTileEdgeVirtualPixelMethod", value: 15, isUnsigned: true)
!563 = !DIEnumerator(name: "VerticalTileEdgeVirtualPixelMethod", value: 16, isUnsigned: true)
!564 = !DIEnumerator(name: "CheckerTileVirtualPixelMethod", value: 17, isUnsigned: true)
!565 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !566, line: 27, baseType: !5, size: 32, elements: !567)
!566 = !DIFile(filename: "./magick/quantize.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!567 = !{!568, !569, !570, !571}
!568 = !DIEnumerator(name: "UndefinedDitherMethod", value: 0, isUnsigned: true)
!569 = !DIEnumerator(name: "NoDitherMethod", value: 1, isUnsigned: true)
!570 = !DIEnumerator(name: "RiemersmaDitherMethod", value: 2, isUnsigned: true)
!571 = !DIEnumerator(name: "FloydSteinbergDitherMethod", value: 3, isUnsigned: true)
!572 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !573, line: 25, baseType: !574, size: 32, elements: !575)
!573 = !DIFile(filename: "./magick/option.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!574 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!575 = !{!576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647}
!576 = !DIEnumerator(name: "MagickUndefinedOptions", value: -1)
!577 = !DIEnumerator(name: "MagickAlignOptions", value: 0)
!578 = !DIEnumerator(name: "MagickAlphaOptions", value: 1)
!579 = !DIEnumerator(name: "MagickBooleanOptions", value: 2)
!580 = !DIEnumerator(name: "MagickCacheOptions", value: 3)
!581 = !DIEnumerator(name: "MagickChannelOptions", value: 4)
!582 = !DIEnumerator(name: "MagickClassOptions", value: 5)
!583 = !DIEnumerator(name: "MagickClipPathOptions", value: 6)
!584 = !DIEnumerator(name: "MagickCoderOptions", value: 7)
!585 = !DIEnumerator(name: "MagickColorOptions", value: 8)
!586 = !DIEnumerator(name: "MagickColorspaceOptions", value: 9)
!587 = !DIEnumerator(name: "MagickCommandOptions", value: 10)
!588 = !DIEnumerator(name: "MagickComposeOptions", value: 11)
!589 = !DIEnumerator(name: "MagickCompressOptions", value: 12)
!590 = !DIEnumerator(name: "MagickConfigureOptions", value: 13)
!591 = !DIEnumerator(name: "MagickDataTypeOptions", value: 14)
!592 = !DIEnumerator(name: "MagickDebugOptions", value: 15)
!593 = !DIEnumerator(name: "MagickDecorateOptions", value: 16)
!594 = !DIEnumerator(name: "MagickDelegateOptions", value: 17)
!595 = !DIEnumerator(name: "MagickDirectionOptions", value: 18)
!596 = !DIEnumerator(name: "MagickDisposeOptions", value: 19)
!597 = !DIEnumerator(name: "MagickDistortOptions", value: 20)
!598 = !DIEnumerator(name: "MagickDitherOptions", value: 21)
!599 = !DIEnumerator(name: "MagickEndianOptions", value: 22)
!600 = !DIEnumerator(name: "MagickEvaluateOptions", value: 23)
!601 = !DIEnumerator(name: "MagickFillRuleOptions", value: 24)
!602 = !DIEnumerator(name: "MagickFilterOptions", value: 25)
!603 = !DIEnumerator(name: "MagickFontOptions", value: 26)
!604 = !DIEnumerator(name: "MagickFontsOptions", value: 27)
!605 = !DIEnumerator(name: "MagickFormatOptions", value: 28)
!606 = !DIEnumerator(name: "MagickFunctionOptions", value: 29)
!607 = !DIEnumerator(name: "MagickGravityOptions", value: 30)
!608 = !DIEnumerator(name: "MagickIntentOptions", value: 31)
!609 = !DIEnumerator(name: "MagickInterlaceOptions", value: 32)
!610 = !DIEnumerator(name: "MagickInterpolateOptions", value: 33)
!611 = !DIEnumerator(name: "MagickKernelOptions", value: 34)
!612 = !DIEnumerator(name: "MagickLayerOptions", value: 35)
!613 = !DIEnumerator(name: "MagickLineCapOptions", value: 36)
!614 = !DIEnumerator(name: "MagickLineJoinOptions", value: 37)
!615 = !DIEnumerator(name: "MagickListOptions", value: 38)
!616 = !DIEnumerator(name: "MagickLocaleOptions", value: 39)
!617 = !DIEnumerator(name: "MagickLogEventOptions", value: 40)
!618 = !DIEnumerator(name: "MagickLogOptions", value: 41)
!619 = !DIEnumerator(name: "MagickMagicOptions", value: 42)
!620 = !DIEnumerator(name: "MagickMethodOptions", value: 43)
!621 = !DIEnumerator(name: "MagickMetricOptions", value: 44)
!622 = !DIEnumerator(name: "MagickMimeOptions", value: 45)
!623 = !DIEnumerator(name: "MagickModeOptions", value: 46)
!624 = !DIEnumerator(name: "MagickModuleOptions", value: 47)
!625 = !DIEnumerator(name: "MagickMorphologyOptions", value: 48)
!626 = !DIEnumerator(name: "MagickNoiseOptions", value: 49)
!627 = !DIEnumerator(name: "MagickOrientationOptions", value: 50)
!628 = !DIEnumerator(name: "MagickPixelIntensityOptions", value: 51)
!629 = !DIEnumerator(name: "MagickPolicyOptions", value: 52)
!630 = !DIEnumerator(name: "MagickPolicyDomainOptions", value: 53)
!631 = !DIEnumerator(name: "MagickPolicyRightsOptions", value: 54)
!632 = !DIEnumerator(name: "MagickPreviewOptions", value: 55)
!633 = !DIEnumerator(name: "MagickPrimitiveOptions", value: 56)
!634 = !DIEnumerator(name: "MagickQuantumFormatOptions", value: 57)
!635 = !DIEnumerator(name: "MagickResolutionOptions", value: 58)
!636 = !DIEnumerator(name: "MagickResourceOptions", value: 59)
!637 = !DIEnumerator(name: "MagickSparseColorOptions", value: 60)
!638 = !DIEnumerator(name: "MagickStatisticOptions", value: 61)
!639 = !DIEnumerator(name: "MagickStorageOptions", value: 62)
!640 = !DIEnumerator(name: "MagickStretchOptions", value: 63)
!641 = !DIEnumerator(name: "MagickStyleOptions", value: 64)
!642 = !DIEnumerator(name: "MagickThresholdOptions", value: 65)
!643 = !DIEnumerator(name: "MagickTypeOptions", value: 66)
!644 = !DIEnumerator(name: "MagickValidateOptions", value: 67)
!645 = !DIEnumerator(name: "MagickVirtualPixelOptions", value: 68)
!646 = !DIEnumerator(name: "MagickComplexOptions", value: 69)
!647 = !DIEnumerator(name: "MagickIntensityOptions", value: 70)
!648 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 93, baseType: !5, size: 32, elements: !649)
!649 = !{!650, !651, !652, !653, !654, !655}
!650 = !DIEnumerator(name: "UndefinedMethod", value: 0, isUnsigned: true)
!651 = !DIEnumerator(name: "PointMethod", value: 1, isUnsigned: true)
!652 = !DIEnumerator(name: "ReplaceMethod", value: 2, isUnsigned: true)
!653 = !DIEnumerator(name: "FloodfillMethod", value: 3, isUnsigned: true)
!654 = !DIEnumerator(name: "FillToBorderMethod", value: 4, isUnsigned: true)
!655 = !DIEnumerator(name: "ResetMethod", value: 5, isUnsigned: true)
!656 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 25, baseType: !5, size: 32, elements: !657)
!657 = !{!658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683}
!658 = !DIEnumerator(name: "NoValue", value: 0, isUnsigned: true)
!659 = !DIEnumerator(name: "XValue", value: 1, isUnsigned: true)
!660 = !DIEnumerator(name: "XiValue", value: 1, isUnsigned: true)
!661 = !DIEnumerator(name: "YValue", value: 2, isUnsigned: true)
!662 = !DIEnumerator(name: "PsiValue", value: 2, isUnsigned: true)
!663 = !DIEnumerator(name: "WidthValue", value: 4, isUnsigned: true)
!664 = !DIEnumerator(name: "RhoValue", value: 4, isUnsigned: true)
!665 = !DIEnumerator(name: "HeightValue", value: 8, isUnsigned: true)
!666 = !DIEnumerator(name: "SigmaValue", value: 8, isUnsigned: true)
!667 = !DIEnumerator(name: "ChiValue", value: 16, isUnsigned: true)
!668 = !DIEnumerator(name: "XiNegative", value: 32, isUnsigned: true)
!669 = !DIEnumerator(name: "XNegative", value: 32, isUnsigned: true)
!670 = !DIEnumerator(name: "PsiNegative", value: 64, isUnsigned: true)
!671 = !DIEnumerator(name: "YNegative", value: 64, isUnsigned: true)
!672 = !DIEnumerator(name: "ChiNegative", value: 128, isUnsigned: true)
!673 = !DIEnumerator(name: "PercentValue", value: 4096, isUnsigned: true)
!674 = !DIEnumerator(name: "AspectValue", value: 8192, isUnsigned: true)
!675 = !DIEnumerator(name: "NormalizeValue", value: 8192, isUnsigned: true)
!676 = !DIEnumerator(name: "LessValue", value: 16384, isUnsigned: true)
!677 = !DIEnumerator(name: "GreaterValue", value: 32768, isUnsigned: true)
!678 = !DIEnumerator(name: "MinimumValue", value: 65536, isUnsigned: true)
!679 = !DIEnumerator(name: "CorrelateNormalizeValue", value: 65536, isUnsigned: true)
!680 = !DIEnumerator(name: "AreaValue", value: 131072, isUnsigned: true)
!681 = !DIEnumerator(name: "DecimalValue", value: 262144, isUnsigned: true)
!682 = !DIEnumerator(name: "SeparatorValue", value: 524288, isUnsigned: true)
!683 = !DIEnumerator(name: "AllValues", value: 2147483647, isUnsigned: true)
!684 = !{!685, !686, !692, !828, !788, !1038, !687, !1170, !1172, !574, !715, !700, !704, !1200, !891, !946, !728, !1202, !1012, !1204, !1208, !1016, !991, !768, !1211, !983, !1001, !999, !722, !985, !987, !1007, !1212}
!685 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "DrawInfo", file: !369, line: 333, baseType: !689)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_DrawInfo", file: !369, line: 205, size: 5760, elements: !690)
!690 = !{!691, !694, !695, !710, !721, !723, !733, !734, !735, !787, !978, !979, !980, !981, !982, !984, !986, !988, !989, !990, !992, !993, !994, !995, !996, !997, !998, !1000, !1002, !1003, !1004, !1005, !1006, !1008, !1009, !1010, !1011, !1013, !1014, !1015, !1017, !1018, !1019, !1031, !1032, !1033, !1034, !1035, !1036}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "primitive", scope: !689, file: !369, line: 208, baseType: !692, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !689, file: !369, line: 209, baseType: !692, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "viewbox", scope: !689, file: !369, line: 212, baseType: !696, size: 256, offset: 128)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !153, line: 130, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !153, line: 121, size: 256, elements: !698)
!698 = !{!699, !702, !703, !709}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !697, file: !153, line: 124, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !701, line: 46, baseType: !685)
!701 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!702 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !697, file: !153, line: 125, baseType: !700, size: 64, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !697, file: !153, line: 128, baseType: !704, size: 64, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !705, line: 77, baseType: !706)
!705 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !707, line: 193, baseType: !708)
!707 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!708 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !697, file: !153, line: 129, baseType: !704, size: 64, offset: 192)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "affine", scope: !689, file: !369, line: 215, baseType: !711, size: 384, offset: 384)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "AffineMatrix", file: !153, line: 102, baseType: !712)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_AffineMatrix", file: !153, line: 93, size: 384, elements: !713)
!713 = !{!714, !716, !717, !718, !719, !720}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !712, file: !153, line: 96, baseType: !715, size: 64)
!715 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !712, file: !153, line: 97, baseType: !715, size: 64, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "ry", scope: !712, file: !153, line: 98, baseType: !715, size: 64, offset: 128)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !712, file: !153, line: 99, baseType: !715, size: 64, offset: 192)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !712, file: !153, line: 100, baseType: !715, size: 64, offset: 256)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "ty", scope: !712, file: !153, line: 101, baseType: !715, size: 64, offset: 320)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !689, file: !369, line: 218, baseType: !722, size: 32, offset: 768)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !153, line: 91, baseType: !152)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !689, file: !369, line: 221, baseType: !724, size: 64, offset: 800)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !326, line: 148, baseType: !725)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !326, line: 131, size: 64, elements: !726)
!726 = !{!727, !730, !731, !732}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !725, file: !326, line: 143, baseType: !728, size: 16)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !4, line: 93, baseType: !729)
!729 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !725, file: !326, line: 144, baseType: !728, size: 16, offset: 16)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !725, file: !326, line: 145, baseType: !728, size: 16, offset: 32)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !725, file: !326, line: 146, baseType: !728, size: 16, offset: 48)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !689, file: !369, line: 222, baseType: !724, size: 64, offset: 864)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_width", scope: !689, file: !369, line: 225, baseType: !715, size: 64, offset: 960)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !689, file: !369, line: 228, baseType: !736, size: 1024, offset: 1024)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "GradientInfo", file: !369, line: 184, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GradientInfo", file: !369, line: 153, size: 1024, elements: !738)
!738 = !{!739, !741, !742, !750, !775, !776, !778, !779, !780, !786}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !737, file: !369, line: 156, baseType: !740, size: 32)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "GradientType", file: !369, line: 75, baseType: !368)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "bounding_box", scope: !737, file: !369, line: 159, baseType: !696, size: 256, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_vector", scope: !737, file: !369, line: 162, baseType: !743, size: 256, offset: 320)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "SegmentInfo", file: !73, line: 110, baseType: !744)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_SegmentInfo", file: !73, line: 103, size: 256, elements: !745)
!745 = !{!746, !747, !748, !749}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !744, file: !73, line: 106, baseType: !715, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !744, file: !73, line: 107, baseType: !715, size: 64, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !744, file: !73, line: 108, baseType: !715, size: 64, offset: 128)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !744, file: !73, line: 109, baseType: !715, size: 64, offset: 192)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "stops", scope: !737, file: !369, line: 165, baseType: !751, size: 64, offset: 576)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_typedef, name: "StopInfo", file: !369, line: 151, baseType: !753)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_StopInfo", file: !369, line: 144, size: 512, elements: !754)
!754 = !{!755, !774}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !753, file: !369, line: 147, baseType: !756, size: 448)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !326, line: 127, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !326, line: 104, size: 448, elements: !758)
!758 = !{!759, !761, !763, !765, !766, !767, !770, !771, !772, !773}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !757, file: !326, line: 107, baseType: !760, size: 32)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !4, line: 209, baseType: !3)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !757, file: !326, line: 110, baseType: !762, size: 32, offset: 32)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !11, line: 61, baseType: !10)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !757, file: !326, line: 113, baseType: !764, size: 32, offset: 64)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !4, line: 215, baseType: !84)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !757, file: !326, line: 116, baseType: !715, size: 64, offset: 128)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !757, file: !326, line: 119, baseType: !700, size: 64, offset: 192)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !757, file: !326, line: 122, baseType: !768, size: 32, offset: 256)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !4, line: 78, baseType: !769)
!769 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !757, file: !326, line: 123, baseType: !768, size: 32, offset: 288)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !757, file: !326, line: 124, baseType: !768, size: 32, offset: 320)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !757, file: !326, line: 125, baseType: !768, size: 32, offset: 352)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !757, file: !326, line: 126, baseType: !768, size: 32, offset: 384)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !753, file: !369, line: 150, baseType: !768, size: 32, offset: 448)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "number_stops", scope: !737, file: !369, line: 168, baseType: !700, size: 64, offset: 640)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !737, file: !369, line: 171, baseType: !777, size: 32, offset: 704)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpreadMethod", file: !369, line: 135, baseType: !374)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !737, file: !369, line: 174, baseType: !764, size: 32, offset: 736)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !737, file: !369, line: 177, baseType: !700, size: 64, offset: 768)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !737, file: !369, line: 180, baseType: !781, size: 128, offset: 832)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointInfo", file: !369, line: 142, baseType: !782)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PointInfo", file: !369, line: 137, size: 128, elements: !783)
!783 = !{!784, !785}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !782, file: !369, line: 140, baseType: !715, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !782, file: !369, line: 141, baseType: !715, size: 64, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !737, file: !369, line: 183, baseType: !768, size: 32, offset: 960)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "fill_pattern", scope: !689, file: !369, line: 231, baseType: !788, size: 64, offset: 2048)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !4, line: 221, baseType: !790)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !73, line: 150, size: 105920, elements: !791)
!791 = !{!792, !793, !794, !796, !797, !799, !800, !801, !802, !803, !804, !805, !807, !808, !809, !810, !811, !825, !827, !829, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !845, !847, !849, !850, !852, !854, !856, !857, !858, !859, !860, !861, !862, !870, !885, !899, !900, !901, !902, !906, !910, !914, !915, !916, !917, !918, !935, !936, !938, !939, !949, !950, !952, !953, !954, !955, !956, !957, !959, !960, !961, !962, !963, !964, !965, !967, !968, !969, !970, !971, !975, !977}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !790, file: !73, line: 153, baseType: !760, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !790, file: !73, line: 156, baseType: !762, size: 32, offset: 32)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !790, file: !73, line: 159, baseType: !795, size: 32, offset: 64)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !48, line: 49, baseType: !47)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !790, file: !73, line: 162, baseType: !700, size: 64, offset: 128)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !790, file: !73, line: 165, baseType: !798, size: 32, offset: 192)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !73, line: 86, baseType: !72)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !790, file: !73, line: 168, baseType: !764, size: 32, offset: 224)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !790, file: !73, line: 169, baseType: !764, size: 32, offset: 256)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !790, file: !73, line: 172, baseType: !700, size: 64, offset: 320)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !790, file: !73, line: 173, baseType: !700, size: 64, offset: 384)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !790, file: !73, line: 174, baseType: !700, size: 64, offset: 448)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !790, file: !73, line: 175, baseType: !700, size: 64, offset: 512)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !790, file: !73, line: 178, baseType: !806, size: 64, offset: 576)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !790, file: !73, line: 179, baseType: !724, size: 64, offset: 640)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !790, file: !73, line: 180, baseType: !724, size: 64, offset: 704)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !790, file: !73, line: 181, baseType: !724, size: 64, offset: 768)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !790, file: !73, line: 184, baseType: !715, size: 64, offset: 832)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !790, file: !73, line: 187, baseType: !812, size: 768, offset: 896)
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !73, line: 128, baseType: !813)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !73, line: 121, size: 768, elements: !814)
!814 = !{!815, !822, !823, !824}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !813, file: !73, line: 124, baseType: !816, size: 192)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !73, line: 101, baseType: !817)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !73, line: 95, size: 192, elements: !818)
!818 = !{!819, !820, !821}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !817, file: !73, line: 98, baseType: !715, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !817, file: !73, line: 99, baseType: !715, size: 64, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !817, file: !73, line: 100, baseType: !715, size: 64, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !813, file: !73, line: 125, baseType: !816, size: 192, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !813, file: !73, line: 126, baseType: !816, size: 192, offset: 384)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !813, file: !73, line: 127, baseType: !816, size: 192, offset: 576)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !790, file: !73, line: 190, baseType: !826, size: 32, offset: 1664)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !89, line: 49, baseType: !88)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !790, file: !73, line: 193, baseType: !828, size: 64, offset: 1728)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !790, file: !73, line: 196, baseType: !830, size: 32, offset: 1792)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !73, line: 93, baseType: !96)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !790, file: !73, line: 199, baseType: !692, size: 64, offset: 1856)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !790, file: !73, line: 200, baseType: !692, size: 64, offset: 1920)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !790, file: !73, line: 201, baseType: !692, size: 64, offset: 1984)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !790, file: !73, line: 204, baseType: !704, size: 64, offset: 2048)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !790, file: !73, line: 207, baseType: !715, size: 64, offset: 2112)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !790, file: !73, line: 208, baseType: !715, size: 64, offset: 2176)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !790, file: !73, line: 211, baseType: !696, size: 256, offset: 2240)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !790, file: !73, line: 212, baseType: !696, size: 256, offset: 2496)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !790, file: !73, line: 213, baseType: !696, size: 256, offset: 2752)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !790, file: !73, line: 216, baseType: !715, size: 64, offset: 3008)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !790, file: !73, line: 217, baseType: !715, size: 64, offset: 3072)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !790, file: !73, line: 218, baseType: !715, size: 64, offset: 3136)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !790, file: !73, line: 221, baseType: !844, size: 32, offset: 3200)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !102, line: 66, baseType: !101)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !790, file: !73, line: 224, baseType: !846, size: 32, offset: 3232)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !73, line: 73, baseType: !136)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !790, file: !73, line: 227, baseType: !848, size: 32, offset: 3264)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !147, line: 35, baseType: !146)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !790, file: !73, line: 230, baseType: !722, size: 32, offset: 3296)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !790, file: !73, line: 233, baseType: !851, size: 32, offset: 3328)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !168, line: 99, baseType: !167)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !790, file: !73, line: 236, baseType: !853, size: 32, offset: 3360)
!853 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !239, line: 32, baseType: !238)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !790, file: !73, line: 239, baseType: !855, size: 64, offset: 3392)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !790, file: !73, line: 242, baseType: !700, size: 64, offset: 3456)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !790, file: !73, line: 243, baseType: !700, size: 64, offset: 3520)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !790, file: !73, line: 246, baseType: !704, size: 64, offset: 3584)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !790, file: !73, line: 249, baseType: !700, size: 64, offset: 3648)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !790, file: !73, line: 250, baseType: !700, size: 64, offset: 3712)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !790, file: !73, line: 253, baseType: !704, size: 64, offset: 3776)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !790, file: !73, line: 256, baseType: !863, size: 192, offset: 3840)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !864, line: 68, baseType: !865)
!864 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !864, line: 62, size: 192, elements: !866)
!866 = !{!867, !868, !869}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !865, file: !864, line: 65, baseType: !715, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !865, file: !864, line: 66, baseType: !715, size: 64, offset: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !865, file: !864, line: 67, baseType: !715, size: 64, offset: 128)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !790, file: !73, line: 259, baseType: !871, size: 512, offset: 4032)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !247, line: 51, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !247, line: 40, size: 512, elements: !873)
!873 = !{!874, !881, !882, !884}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !872, file: !247, line: 43, baseType: !875, size: 192)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !247, line: 38, baseType: !876)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !247, line: 32, size: 192, elements: !877)
!877 = !{!878, !879, !880}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !876, file: !247, line: 35, baseType: !715, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !876, file: !247, line: 36, baseType: !715, size: 64, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !876, file: !247, line: 37, baseType: !715, size: 64, offset: 128)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !872, file: !247, line: 44, baseType: !875, size: 192, offset: 192)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !872, file: !247, line: 47, baseType: !883, size: 32, offset: 384)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !247, line: 30, baseType: !246)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !872, file: !247, line: 50, baseType: !700, size: 64, offset: 448)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !790, file: !73, line: 262, baseType: !886, size: 64, offset: 4544)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !887, line: 26, baseType: !888)
!887 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DISubroutineType(types: !890)
!890 = !{!764, !891, !893, !896, !828}
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !693)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !894)
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !4, line: 150, baseType: !895)
!895 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !4, line: 151, baseType: !898)
!898 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !790, file: !73, line: 265, baseType: !828, size: 64, offset: 4608)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !790, file: !73, line: 266, baseType: !828, size: 64, offset: 4672)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !790, file: !73, line: 267, baseType: !828, size: 64, offset: 4736)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !790, file: !73, line: 270, baseType: !903, size: 64, offset: 4800)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !48, line: 52, baseType: !905)
!905 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !48, line: 51, flags: DIFlagFwdDecl)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !790, file: !73, line: 273, baseType: !907, size: 64, offset: 4864)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !4, line: 217, baseType: !909)
!909 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !4, line: 217, flags: DIFlagFwdDecl)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !790, file: !73, line: 276, baseType: !911, size: 32768, offset: 4928)
!911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !693, size: 32768, elements: !912)
!912 = !{!913}
!913 = !DISubrange(count: 4096)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !790, file: !73, line: 277, baseType: !911, size: 32768, offset: 37696)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !790, file: !73, line: 278, baseType: !911, size: 32768, offset: 70464)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !790, file: !73, line: 281, baseType: !700, size: 64, offset: 103232)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !790, file: !73, line: 282, baseType: !700, size: 64, offset: 103296)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !790, file: !73, line: 285, baseType: !919, size: 448, offset: 103360)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !4, line: 219, baseType: !920)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !253, line: 102, size: 448, elements: !921)
!921 = !{!922, !924, !925, !926, !927, !928, !929, !934}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !920, file: !253, line: 105, baseType: !923, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !253, line: 100, baseType: !252)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !920, file: !253, line: 108, baseType: !574, size: 32, offset: 32)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !920, file: !253, line: 111, baseType: !692, size: 64, offset: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !920, file: !253, line: 112, baseType: !692, size: 64, offset: 128)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !920, file: !253, line: 115, baseType: !828, size: 64, offset: 192)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !920, file: !253, line: 118, baseType: !764, size: 32, offset: 256)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !920, file: !253, line: 121, baseType: !930, size: 64, offset: 320)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !932, line: 26, baseType: !933)
!932 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!933 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !932, line: 25, flags: DIFlagFwdDecl)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !920, file: !253, line: 124, baseType: !700, size: 64, offset: 384)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !790, file: !73, line: 288, baseType: !764, size: 32, offset: 103808)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !790, file: !73, line: 291, baseType: !937, size: 64, offset: 103872)
!937 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !704)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !790, file: !73, line: 294, baseType: !930, size: 64, offset: 103936)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !790, file: !73, line: 297, baseType: !940, size: 256, offset: 104000)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !89, line: 40, baseType: !941)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !89, line: 27, size: 256, elements: !942)
!942 = !{!943, !944, !945, !948}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !941, file: !89, line: 30, baseType: !692, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !941, file: !89, line: 33, baseType: !700, size: 64, offset: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !941, file: !89, line: 36, baseType: !946, size: 64, offset: 128)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !941, file: !89, line: 39, baseType: !700, size: 64, offset: 192)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !790, file: !73, line: 298, baseType: !940, size: 256, offset: 104256)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !790, file: !73, line: 299, baseType: !951, size: 64, offset: 104512)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !790, file: !73, line: 302, baseType: !700, size: 64, offset: 104576)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !790, file: !73, line: 305, baseType: !700, size: 64, offset: 104640)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !790, file: !73, line: 308, baseType: !855, size: 64, offset: 104704)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !790, file: !73, line: 309, baseType: !855, size: 64, offset: 104768)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !790, file: !73, line: 310, baseType: !855, size: 64, offset: 104832)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !790, file: !73, line: 313, baseType: !958, size: 32, offset: 104896)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !326, line: 47, baseType: !325)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !790, file: !73, line: 316, baseType: !764, size: 32, offset: 104928)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !790, file: !73, line: 319, baseType: !724, size: 64, offset: 104960)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !790, file: !73, line: 322, baseType: !855, size: 64, offset: 105024)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !790, file: !73, line: 325, baseType: !696, size: 256, offset: 105088)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !790, file: !73, line: 328, baseType: !828, size: 64, offset: 105344)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !790, file: !73, line: 329, baseType: !828, size: 64, offset: 105408)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !790, file: !73, line: 332, baseType: !966, size: 32, offset: 105472)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !73, line: 61, baseType: !342)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !790, file: !73, line: 335, baseType: !764, size: 32, offset: 105504)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !790, file: !73, line: 338, baseType: !897, size: 64, offset: 105536)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !790, file: !73, line: 341, baseType: !764, size: 32, offset: 105600)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !790, file: !73, line: 344, baseType: !700, size: 64, offset: 105664)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !790, file: !73, line: 347, baseType: !972, size: 64, offset: 105728)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !973, line: 7, baseType: !974)
!973 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !707, line: 160, baseType: !708)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !790, file: !73, line: 350, baseType: !976, size: 32, offset: 105792)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !326, line: 79, baseType: !356)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !790, file: !73, line: 353, baseType: !700, size: 64, offset: 105856)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !689, file: !369, line: 232, baseType: !788, size: 64, offset: 2112)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_pattern", scope: !689, file: !369, line: 233, baseType: !788, size: 64, offset: 2176)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_antialias", scope: !689, file: !369, line: 236, baseType: !764, size: 32, offset: 2240)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "text_antialias", scope: !689, file: !369, line: 237, baseType: !764, size: 32, offset: 2272)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "fill_rule", scope: !689, file: !369, line: 240, baseType: !983, size: 32, offset: 2304)
!983 = !DIDerivedType(tag: DW_TAG_typedef, name: "FillRule", file: !369, line: 68, baseType: !380)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "linecap", scope: !689, file: !369, line: 243, baseType: !985, size: 32, offset: 2336)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineCap", file: !369, line: 83, baseType: !385)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "linejoin", scope: !689, file: !369, line: 246, baseType: !987, size: 32, offset: 2368)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineJoin", file: !369, line: 91, baseType: !391)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "miterlimit", scope: !689, file: !369, line: 249, baseType: !700, size: 64, offset: 2432)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "dash_offset", scope: !689, file: !369, line: 252, baseType: !715, size: 64, offset: 2496)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "decorate", scope: !689, file: !369, line: 255, baseType: !991, size: 32, offset: 2560)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecorationType", file: !369, line: 53, baseType: !397)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !689, file: !369, line: 258, baseType: !851, size: 32, offset: 2592)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !689, file: !369, line: 261, baseType: !692, size: 64, offset: 2624)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !689, file: !369, line: 264, baseType: !700, size: 64, offset: 2688)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !689, file: !369, line: 267, baseType: !692, size: 64, offset: 2752)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "metrics", scope: !689, file: !369, line: 268, baseType: !692, size: 64, offset: 2816)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !689, file: !369, line: 269, baseType: !692, size: 64, offset: 2880)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !689, file: !369, line: 272, baseType: !999, size: 32, offset: 2944)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "StyleType", file: !405, line: 47, baseType: !404)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "stretch", scope: !689, file: !369, line: 275, baseType: !1001, size: 32, offset: 2976)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "StretchType", file: !405, line: 38, baseType: !412)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !689, file: !369, line: 278, baseType: !700, size: 64, offset: 3008)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !689, file: !369, line: 281, baseType: !692, size: 64, offset: 3072)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "pointsize", scope: !689, file: !369, line: 284, baseType: !715, size: 64, offset: 3136)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !689, file: !369, line: 287, baseType: !692, size: 64, offset: 3200)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !689, file: !369, line: 290, baseType: !1007, size: 32, offset: 3264)
!1007 = !DIDerivedType(tag: DW_TAG_typedef, name: "AlignType", file: !369, line: 36, baseType: !425)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "undercolor", scope: !689, file: !369, line: 293, baseType: !724, size: 64, offset: 3296)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !689, file: !369, line: 294, baseType: !724, size: 64, offset: 3360)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "server_name", scope: !689, file: !369, line: 297, baseType: !692, size: 64, offset: 3456)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "dash_pattern", scope: !689, file: !369, line: 300, baseType: !1012, size: 64, offset: 3520)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !689, file: !369, line: 303, baseType: !692, size: 64, offset: 3584)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !689, file: !369, line: 306, baseType: !743, size: 256, offset: 3648)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "clip_units", scope: !689, file: !369, line: 309, baseType: !1016, size: 32, offset: 3904)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClipPathUnits", file: !369, line: 44, baseType: !431)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !689, file: !369, line: 312, baseType: !728, size: 16, offset: 3936)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "render", scope: !689, file: !369, line: 315, baseType: !764, size: 32, offset: 3968)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "element_reference", scope: !689, file: !369, line: 318, baseType: !1020, size: 1344, offset: 4032)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "ElementReference", file: !369, line: 203, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ElementReference", file: !369, line: 186, size: 1344, elements: !1022)
!1022 = !{!1023, !1024, !1026, !1027, !1028, !1030}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1021, file: !369, line: 189, baseType: !692, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1021, file: !369, line: 192, baseType: !1025, size: 32, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReferenceType", file: !369, line: 127, baseType: !437)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1021, file: !369, line: 195, baseType: !736, size: 1024, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1021, file: !369, line: 198, baseType: !700, size: 64, offset: 1152)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1021, file: !369, line: 201, baseType: !1029, size: 64, offset: 1216)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1021, file: !369, line: 202, baseType: !1029, size: 64, offset: 1280)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !689, file: !369, line: 321, baseType: !764, size: 32, offset: 5376)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !689, file: !369, line: 324, baseType: !700, size: 64, offset: 5440)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "kerning", scope: !689, file: !369, line: 327, baseType: !715, size: 64, offset: 5504)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "interword_spacing", scope: !689, file: !369, line: 328, baseType: !715, size: 64, offset: 5568)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "interline_spacing", scope: !689, file: !369, line: 329, baseType: !715, size: 64, offset: 5632)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !689, file: !369, line: 332, baseType: !1037, size: 32, offset: 5696)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "DirectionType", file: !369, line: 60, baseType: !441)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageInfo", file: !4, line: 223, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ImageInfo", file: !73, line: 356, size: 134336, elements: !1041)
!1041 = !{!1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1076, !1077, !1078, !1079, !1080, !1081, !1083, !1084, !1085, !1086, !1087, !1088, !1099, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1167, !1168, !1169}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !1040, file: !73, line: 359, baseType: !795, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !1040, file: !73, line: 362, baseType: !798, size: 32, offset: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "temporary", scope: !1040, file: !73, line: 365, baseType: !764, size: 32, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "adjoin", scope: !1040, file: !73, line: 366, baseType: !764, size: 32, offset: 96)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "affirm", scope: !1040, file: !73, line: 367, baseType: !764, size: 32, offset: 128)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "antialias", scope: !1040, file: !73, line: 368, baseType: !764, size: 32, offset: 160)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1040, file: !73, line: 371, baseType: !692, size: 64, offset: 192)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "extract", scope: !1040, file: !73, line: 372, baseType: !692, size: 64, offset: 256)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1040, file: !73, line: 373, baseType: !692, size: 64, offset: 320)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "scenes", scope: !1040, file: !73, line: 374, baseType: !692, size: 64, offset: 384)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1040, file: !73, line: 377, baseType: !700, size: 64, offset: 448)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "number_scenes", scope: !1040, file: !73, line: 378, baseType: !700, size: 64, offset: 512)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1040, file: !73, line: 379, baseType: !700, size: 64, offset: 576)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !1040, file: !73, line: 382, baseType: !846, size: 32, offset: 640)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !1040, file: !73, line: 385, baseType: !848, size: 32, offset: 672)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1040, file: !73, line: 388, baseType: !830, size: 32, offset: 704)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1040, file: !73, line: 391, baseType: !700, size: 64, offset: 768)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_factor", scope: !1040, file: !73, line: 394, baseType: !692, size: 64, offset: 832)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "server_name", scope: !1040, file: !73, line: 395, baseType: !692, size: 64, offset: 896)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !1040, file: !73, line: 396, baseType: !692, size: 64, offset: 960)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "texture", scope: !1040, file: !73, line: 397, baseType: !692, size: 64, offset: 1024)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !1040, file: !73, line: 398, baseType: !692, size: 64, offset: 1088)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pointsize", scope: !1040, file: !73, line: 401, baseType: !715, size: 64, offset: 1152)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !1040, file: !73, line: 402, baseType: !715, size: 64, offset: 1216)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !1040, file: !73, line: 405, baseType: !724, size: 64, offset: 1280)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !1040, file: !73, line: 406, baseType: !724, size: 64, offset: 1344)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !1040, file: !73, line: 407, baseType: !724, size: 64, offset: 1408)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1040, file: !73, line: 410, baseType: !764, size: 32, offset: 1472)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "monochrome", scope: !1040, file: !73, line: 411, baseType: !764, size: 32, offset: 1504)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1040, file: !73, line: 414, baseType: !700, size: 64, offset: 1536)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1040, file: !73, line: 417, baseType: !762, size: 32, offset: 1600)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1040, file: !73, line: 420, baseType: !966, size: 32, offset: 1632)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "preview_type", scope: !1040, file: !73, line: 423, baseType: !1075, size: 32, offset: 1664)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewType", file: !490, line: 59, baseType: !489)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1040, file: !73, line: 426, baseType: !704, size: 64, offset: 1728)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !1040, file: !73, line: 429, baseType: !764, size: 32, offset: 1792)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !1040, file: !73, line: 430, baseType: !764, size: 32, offset: 1824)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !1040, file: !73, line: 433, baseType: !692, size: 64, offset: 1856)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "authenticate", scope: !1040, file: !73, line: 434, baseType: !692, size: 64, offset: 1920)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !1040, file: !73, line: 437, baseType: !1082, size: 32, offset: 1984)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelType", file: !4, line: 202, baseType: !522)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1040, file: !73, line: 440, baseType: !788, size: 64, offset: 2048)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !1040, file: !73, line: 443, baseType: !828, size: 64, offset: 2112)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !1040, file: !73, line: 446, baseType: !886, size: 64, offset: 2176)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !1040, file: !73, line: 449, baseType: !828, size: 64, offset: 2240)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1040, file: !73, line: 450, baseType: !828, size: 64, offset: 2304)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !1040, file: !73, line: 453, baseType: !1089, size: 64, offset: 2368)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "StreamHandler", file: !1090, line: 26, baseType: !1091)
!1090 = !DIFile(filename: "./magick/stream.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!700, !1094, !1096, !1098}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !789)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !700)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1040, file: !73, line: 456, baseType: !1100, size: 64, offset: 2432)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1102, line: 7, baseType: !1103)
!1102 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1104, line: 49, size: 1728, elements: !1105)
!1104 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1105 = !{!1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1121, !1123, !1124, !1125, !1127, !1128, !1130, !1134, !1137, !1139, !1142, !1145, !1146, !1147, !1148, !1149}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1103, file: !1104, line: 51, baseType: !574, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1103, file: !1104, line: 54, baseType: !692, size: 64, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1103, file: !1104, line: 55, baseType: !692, size: 64, offset: 128)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1103, file: !1104, line: 56, baseType: !692, size: 64, offset: 192)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1103, file: !1104, line: 57, baseType: !692, size: 64, offset: 256)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1103, file: !1104, line: 58, baseType: !692, size: 64, offset: 320)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1103, file: !1104, line: 59, baseType: !692, size: 64, offset: 384)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1103, file: !1104, line: 60, baseType: !692, size: 64, offset: 448)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1103, file: !1104, line: 61, baseType: !692, size: 64, offset: 512)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1103, file: !1104, line: 64, baseType: !692, size: 64, offset: 576)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1103, file: !1104, line: 65, baseType: !692, size: 64, offset: 640)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1103, file: !1104, line: 66, baseType: !692, size: 64, offset: 704)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1103, file: !1104, line: 68, baseType: !1119, size: 64, offset: 768)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1104, line: 36, flags: DIFlagFwdDecl)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1103, file: !1104, line: 70, baseType: !1122, size: 64, offset: 832)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1103, file: !1104, line: 72, baseType: !574, size: 32, offset: 896)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1103, file: !1104, line: 73, baseType: !574, size: 32, offset: 928)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1103, file: !1104, line: 74, baseType: !1126, size: 64, offset: 960)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !707, line: 152, baseType: !708)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1103, file: !1104, line: 77, baseType: !729, size: 16, offset: 1024)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1103, file: !1104, line: 78, baseType: !1129, size: 8, offset: 1040)
!1129 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1103, file: !1104, line: 79, baseType: !1131, size: 8, offset: 1048)
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !693, size: 8, elements: !1132)
!1132 = !{!1133}
!1133 = !DISubrange(count: 1)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1103, file: !1104, line: 81, baseType: !1135, size: 64, offset: 1088)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1104, line: 43, baseType: null)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1103, file: !1104, line: 89, baseType: !1138, size: 64, offset: 1152)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !707, line: 153, baseType: !708)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1103, file: !1104, line: 91, baseType: !1140, size: 64, offset: 1216)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1104, line: 37, flags: DIFlagFwdDecl)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1103, file: !1104, line: 92, baseType: !1143, size: 64, offset: 1280)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1104, line: 38, flags: DIFlagFwdDecl)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1103, file: !1104, line: 93, baseType: !1122, size: 64, offset: 1344)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1103, file: !1104, line: 94, baseType: !828, size: 64, offset: 1408)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1103, file: !1104, line: 95, baseType: !700, size: 64, offset: 1472)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1103, file: !1104, line: 96, baseType: !574, size: 32, offset: 1536)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1103, file: !1104, line: 98, baseType: !1150, size: 160, offset: 1568)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !693, size: 160, elements: !1151)
!1151 = !{!1152}
!1152 = !DISubrange(count: 20)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !1040, file: !73, line: 459, baseType: !828, size: 64, offset: 2496)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1040, file: !73, line: 462, baseType: !700, size: 64, offset: 2560)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !1040, file: !73, line: 465, baseType: !911, size: 32768, offset: 2624)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "unique", scope: !1040, file: !73, line: 466, baseType: !911, size: 32768, offset: 35392)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !1040, file: !73, line: 467, baseType: !911, size: 32768, offset: 68160)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1040, file: !73, line: 468, baseType: !911, size: 32768, offset: 100928)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1040, file: !73, line: 471, baseType: !764, size: 32, offset: 133696)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1040, file: !73, line: 474, baseType: !692, size: 64, offset: 133760)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "subimage", scope: !1040, file: !73, line: 477, baseType: !700, size: 64, offset: 133824)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "subrange", scope: !1040, file: !73, line: 478, baseType: !700, size: 64, offset: 133888)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "pen", scope: !1040, file: !73, line: 481, baseType: !724, size: 64, offset: 133952)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1040, file: !73, line: 484, baseType: !700, size: 64, offset: 134016)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_pixel_method", scope: !1040, file: !73, line: 487, baseType: !1166, size: 32, offset: 134080)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "VirtualPixelMethod", file: !545, line: 47, baseType: !544)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !1040, file: !73, line: 490, baseType: !724, size: 64, offset: 134112)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1040, file: !73, line: 493, baseType: !828, size: 64, offset: 134208)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "synchronize", scope: !1040, file: !73, line: 496, baseType: !764, size: 32, offset: 134272)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "DrawingWand", file: !1174, line: 28, baseType: !1175)
!1174 = !DIFile(filename: "./wand/drawing-wand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_DrawingWand", file: !1, line: 90, size: 34048, elements: !1176)
!1176 = !{!1177, !1178, !1179, !1180, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1195, !1197, !1198, !1199}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1175, file: !1, line: 93, baseType: !700, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1175, file: !1, line: 96, baseType: !911, size: 32768, offset: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1175, file: !1, line: 100, baseType: !788, size: 64, offset: 32832)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !1175, file: !1, line: 103, baseType: !1181, size: 64, offset: 32896)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "mvg", scope: !1175, file: !1, line: 107, baseType: !692, size: 64, offset: 32960)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "mvg_alloc", scope: !1175, file: !1, line: 110, baseType: !700, size: 64, offset: 33024)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "mvg_length", scope: !1175, file: !1, line: 111, baseType: !700, size: 64, offset: 33088)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "mvg_width", scope: !1175, file: !1, line: 114, baseType: !700, size: 64, offset: 33152)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_id", scope: !1175, file: !1, line: 118, baseType: !692, size: 64, offset: 33216)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_bounds", scope: !1175, file: !1, line: 121, baseType: !696, size: 256, offset: 33280)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_offset", scope: !1175, file: !1, line: 124, baseType: !700, size: 64, offset: 33536)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1175, file: !1, line: 128, baseType: !700, size: 64, offset: 33600)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "graphic_context", scope: !1175, file: !1, line: 131, baseType: !686, size: 64, offset: 33664)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "filter_off", scope: !1175, file: !1, line: 134, baseType: !764, size: 32, offset: 33728)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "indent_depth", scope: !1175, file: !1, line: 138, baseType: !700, size: 64, offset: 33792)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "path_operation", scope: !1175, file: !1, line: 142, baseType: !1194, size: 32, offset: 33856)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "PathOperation", file: !1, line: 81, baseType: !446)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "path_mode", scope: !1175, file: !1, line: 145, baseType: !1196, size: 32, offset: 33888)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "PathMode", file: !1, line: 88, baseType: !459)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !1175, file: !1, line: 148, baseType: !764, size: 32, offset: 33920)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1175, file: !1, line: 149, baseType: !764, size: 32, offset: 33952)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1175, file: !1, line: 152, baseType: !700, size: 64, offset: 33984)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !688)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !715)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMLTreeInfo", file: !1206, line: 29, baseType: !1207)
!1206 = !DIFile(filename: "./magick/xml-tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1207 = !DICompositeType(tag: DW_TAG_structure_type, name: "_XMLTreeInfo", file: !1206, line: 28, flags: DIFlagFwdDecl)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1210)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !326, line: 129, baseType: !728)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1173)
!1214 = !{i32 7, !"Dwarf Version", i32 4}
!1215 = !{i32 2, !"Debug Info Version", i32 3}
!1216 = !{i32 1, !"wchar_size", i32 4}
!1217 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1218 = distinct !DISubprogram(name: "ClearDrawingWand", scope: !1, file: !1, line: 479, type: !1219, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{null, !1172}
!1221 = !{}
!1222 = !DILocalVariable(name: "wand", arg: 1, scope: !1218, file: !1, line: 479, type: !1172)
!1223 = !DILocation(line: 479, column: 47, scope: !1218)
!1224 = !DILocation(line: 483, column: 7, scope: !1225)
!1225 = distinct !DILexicalBlock(scope: !1218, file: !1, line: 483, column: 7)
!1226 = !DILocation(line: 483, column: 13, scope: !1225)
!1227 = !DILocation(line: 483, column: 19, scope: !1225)
!1228 = !DILocation(line: 483, column: 7, scope: !1218)
!1229 = !DILocation(line: 484, column: 60, scope: !1225)
!1230 = !DILocation(line: 484, column: 66, scope: !1225)
!1231 = !DILocation(line: 484, column: 12, scope: !1225)
!1232 = !DILocation(line: 484, column: 5, scope: !1225)
!1233 = !DILocation(line: 485, column: 3, scope: !1218)
!1234 = !DILocation(line: 485, column: 11, scope: !1235)
!1235 = distinct !DILexicalBlock(scope: !1236, file: !1, line: 485, column: 3)
!1236 = distinct !DILexicalBlock(scope: !1218, file: !1, line: 485, column: 3)
!1237 = !DILocation(line: 485, column: 17, scope: !1235)
!1238 = !DILocation(line: 485, column: 23, scope: !1235)
!1239 = !DILocation(line: 485, column: 3, scope: !1236)
!1240 = !DILocation(line: 486, column: 36, scope: !1235)
!1241 = !DILocation(line: 486, column: 20, scope: !1235)
!1242 = !DILocation(line: 486, column: 5, scope: !1235)
!1243 = !DILocation(line: 486, column: 19, scope: !1235)
!1244 = !DILocation(line: 485, column: 28, scope: !1235)
!1245 = !DILocation(line: 485, column: 34, scope: !1235)
!1246 = !DILocation(line: 485, column: 39, scope: !1235)
!1247 = !DILocation(line: 485, column: 3, scope: !1235)
!1248 = distinct !{!1248, !1239, !1249}
!1249 = !DILocation(line: 486, column: 50, scope: !1236)
!1250 = !DILocation(line: 487, column: 34, scope: !1218)
!1251 = !DILocation(line: 487, column: 18, scope: !1218)
!1252 = !DILocation(line: 487, column: 3, scope: !1218)
!1253 = !DILocation(line: 487, column: 17, scope: !1218)
!1254 = !DILocation(line: 489, column: 5, scope: !1218)
!1255 = !DILocation(line: 489, column: 11, scope: !1218)
!1256 = !DILocation(line: 488, column: 39, scope: !1218)
!1257 = !DILocation(line: 488, column: 25, scope: !1218)
!1258 = !DILocation(line: 488, column: 3, scope: !1218)
!1259 = !DILocation(line: 488, column: 9, scope: !1218)
!1260 = !DILocation(line: 488, column: 24, scope: !1218)
!1261 = !DILocation(line: 490, column: 7, scope: !1262)
!1262 = distinct !DILexicalBlock(scope: !1218, file: !1, line: 490, column: 7)
!1263 = !DILocation(line: 490, column: 13, scope: !1262)
!1264 = !DILocation(line: 490, column: 24, scope: !1262)
!1265 = !DILocation(line: 490, column: 7, scope: !1218)
!1266 = !DILocation(line: 491, column: 36, scope: !1262)
!1267 = !DILocation(line: 491, column: 42, scope: !1262)
!1268 = !DILocation(line: 491, column: 22, scope: !1262)
!1269 = !DILocation(line: 491, column: 5, scope: !1262)
!1270 = !DILocation(line: 491, column: 11, scope: !1262)
!1271 = !DILocation(line: 491, column: 21, scope: !1262)
!1272 = !DILocation(line: 492, column: 27, scope: !1218)
!1273 = !DILocation(line: 492, column: 33, scope: !1218)
!1274 = !DILocation(line: 492, column: 13, scope: !1218)
!1275 = !DILocation(line: 492, column: 3, scope: !1218)
!1276 = !DILocation(line: 492, column: 9, scope: !1218)
!1277 = !DILocation(line: 492, column: 12, scope: !1218)
!1278 = !DILocation(line: 493, column: 8, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1218, file: !1, line: 493, column: 7)
!1280 = !DILocation(line: 493, column: 14, scope: !1279)
!1281 = !DILocation(line: 493, column: 22, scope: !1279)
!1282 = !DILocation(line: 493, column: 38, scope: !1279)
!1283 = !DILocation(line: 493, column: 42, scope: !1279)
!1284 = !DILocation(line: 493, column: 48, scope: !1279)
!1285 = !DILocation(line: 493, column: 54, scope: !1279)
!1286 = !DILocation(line: 493, column: 7, scope: !1218)
!1287 = !DILocation(line: 494, column: 30, scope: !1279)
!1288 = !DILocation(line: 494, column: 36, scope: !1279)
!1289 = !DILocation(line: 494, column: 17, scope: !1279)
!1290 = !DILocation(line: 494, column: 5, scope: !1279)
!1291 = !DILocation(line: 494, column: 11, scope: !1279)
!1292 = !DILocation(line: 494, column: 16, scope: !1279)
!1293 = !DILocation(line: 496, column: 5, scope: !1279)
!1294 = !DILocation(line: 496, column: 11, scope: !1279)
!1295 = !DILocation(line: 496, column: 16, scope: !1279)
!1296 = !DILocation(line: 497, column: 3, scope: !1218)
!1297 = !DILocation(line: 497, column: 9, scope: !1218)
!1298 = !DILocation(line: 497, column: 12, scope: !1218)
!1299 = !DILocation(line: 498, column: 3, scope: !1218)
!1300 = !DILocation(line: 498, column: 9, scope: !1218)
!1301 = !DILocation(line: 498, column: 18, scope: !1218)
!1302 = !DILocation(line: 499, column: 3, scope: !1218)
!1303 = !DILocation(line: 499, column: 9, scope: !1218)
!1304 = !DILocation(line: 499, column: 19, scope: !1218)
!1305 = !DILocation(line: 500, column: 3, scope: !1218)
!1306 = !DILocation(line: 500, column: 9, scope: !1218)
!1307 = !DILocation(line: 500, column: 18, scope: !1218)
!1308 = !DILocation(line: 501, column: 3, scope: !1218)
!1309 = !DILocation(line: 501, column: 9, scope: !1218)
!1310 = !DILocation(line: 501, column: 19, scope: !1218)
!1311 = !DILocation(line: 502, column: 3, scope: !1218)
!1312 = !DILocation(line: 502, column: 9, scope: !1218)
!1313 = !DILocation(line: 502, column: 23, scope: !1218)
!1314 = !DILocation(line: 503, column: 3, scope: !1218)
!1315 = !DILocation(line: 503, column: 9, scope: !1218)
!1316 = !DILocation(line: 503, column: 24, scope: !1218)
!1317 = !DILocation(line: 503, column: 25, scope: !1218)
!1318 = !DILocation(line: 504, column: 3, scope: !1218)
!1319 = !DILocation(line: 504, column: 9, scope: !1218)
!1320 = !DILocation(line: 504, column: 24, scope: !1218)
!1321 = !DILocation(line: 504, column: 25, scope: !1218)
!1322 = !DILocation(line: 505, column: 3, scope: !1218)
!1323 = !DILocation(line: 505, column: 9, scope: !1218)
!1324 = !DILocation(line: 505, column: 24, scope: !1218)
!1325 = !DILocation(line: 505, column: 29, scope: !1218)
!1326 = !DILocation(line: 506, column: 3, scope: !1218)
!1327 = !DILocation(line: 506, column: 9, scope: !1218)
!1328 = !DILocation(line: 506, column: 24, scope: !1218)
!1329 = !DILocation(line: 506, column: 30, scope: !1218)
!1330 = !DILocation(line: 507, column: 3, scope: !1218)
!1331 = !DILocation(line: 507, column: 9, scope: !1218)
!1332 = !DILocation(line: 507, column: 14, scope: !1218)
!1333 = !DILocation(line: 508, column: 39, scope: !1218)
!1334 = !DILocation(line: 508, column: 25, scope: !1218)
!1335 = !DILocation(line: 508, column: 3, scope: !1218)
!1336 = !DILocation(line: 508, column: 9, scope: !1218)
!1337 = !DILocation(line: 508, column: 24, scope: !1218)
!1338 = !DILocation(line: 510, column: 7, scope: !1339)
!1339 = distinct !DILexicalBlock(scope: !1218, file: !1, line: 510, column: 7)
!1340 = !DILocation(line: 510, column: 13, scope: !1339)
!1341 = !DILocation(line: 510, column: 29, scope: !1339)
!1342 = !DILocation(line: 510, column: 7, scope: !1218)
!1343 = !DILocation(line: 512, column: 7, scope: !1344)
!1344 = distinct !DILexicalBlock(scope: !1339, file: !1, line: 511, column: 5)
!1345 = !DILocation(line: 514, column: 7, scope: !1344)
!1346 = !DILocation(line: 516, column: 18, scope: !1218)
!1347 = !DILocation(line: 516, column: 3, scope: !1218)
!1348 = !DILocation(line: 516, column: 17, scope: !1218)
!1349 = !DILocation(line: 517, column: 3, scope: !1218)
!1350 = !DILocation(line: 517, column: 9, scope: !1218)
!1351 = !DILocation(line: 517, column: 19, scope: !1218)
!1352 = !DILocation(line: 518, column: 3, scope: !1218)
!1353 = !DILocation(line: 518, column: 9, scope: !1218)
!1354 = !DILocation(line: 518, column: 21, scope: !1218)
!1355 = !DILocation(line: 519, column: 3, scope: !1218)
!1356 = !DILocation(line: 519, column: 9, scope: !1218)
!1357 = !DILocation(line: 519, column: 23, scope: !1218)
!1358 = !DILocation(line: 520, column: 3, scope: !1218)
!1359 = !DILocation(line: 520, column: 9, scope: !1218)
!1360 = !DILocation(line: 520, column: 18, scope: !1218)
!1361 = !DILocation(line: 521, column: 15, scope: !1218)
!1362 = !DILocation(line: 521, column: 3, scope: !1218)
!1363 = !DILocation(line: 521, column: 9, scope: !1218)
!1364 = !DILocation(line: 521, column: 14, scope: !1218)
!1365 = !DILocation(line: 522, column: 24, scope: !1218)
!1366 = !DILocation(line: 522, column: 30, scope: !1218)
!1367 = !DILocation(line: 522, column: 3, scope: !1218)
!1368 = !DILocation(line: 523, column: 3, scope: !1218)
!1369 = !DILocation(line: 523, column: 9, scope: !1218)
!1370 = !DILocation(line: 523, column: 16, scope: !1218)
!1371 = !DILocation(line: 524, column: 15, scope: !1218)
!1372 = !DILocation(line: 524, column: 3, scope: !1218)
!1373 = !DILocation(line: 524, column: 9, scope: !1218)
!1374 = !DILocation(line: 524, column: 14, scope: !1218)
!1375 = !DILocation(line: 525, column: 1, scope: !1218)
!1376 = distinct !DISubprogram(name: "CloneDrawingWand", scope: !1, file: !1, line: 549, type: !1377, scopeLine: 550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{!1172, !1212}
!1379 = !DILocalVariable(name: "wand", arg: 1, scope: !1376, file: !1, line: 549, type: !1212)
!1380 = !DILocation(line: 549, column: 61, scope: !1376)
!1381 = !DILocalVariable(name: "clone_wand", scope: !1376, file: !1, line: 552, type: !1172)
!1382 = !DILocation(line: 552, column: 6, scope: !1376)
!1383 = !DILocalVariable(name: "i", scope: !1376, file: !1, line: 555, type: !704)
!1384 = !DILocation(line: 555, column: 5, scope: !1376)
!1385 = !DILocation(line: 559, column: 7, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !1376, file: !1, line: 559, column: 7)
!1387 = !DILocation(line: 559, column: 13, scope: !1386)
!1388 = !DILocation(line: 559, column: 19, scope: !1386)
!1389 = !DILocation(line: 559, column: 7, scope: !1376)
!1390 = !DILocation(line: 560, column: 60, scope: !1386)
!1391 = !DILocation(line: 560, column: 66, scope: !1386)
!1392 = !DILocation(line: 560, column: 12, scope: !1386)
!1393 = !DILocation(line: 560, column: 5, scope: !1386)
!1394 = !DILocation(line: 561, column: 30, scope: !1376)
!1395 = !DILocation(line: 561, column: 14, scope: !1376)
!1396 = !DILocation(line: 561, column: 13, scope: !1376)
!1397 = !DILocation(line: 562, column: 7, scope: !1398)
!1398 = distinct !DILexicalBlock(scope: !1376, file: !1, line: 562, column: 7)
!1399 = !DILocation(line: 562, column: 18, scope: !1398)
!1400 = !DILocation(line: 562, column: 7, scope: !1376)
!1401 = !DILocalVariable(name: "exception", scope: !1402, file: !1, line: 563, type: !919)
!1402 = distinct !DILexicalBlock(scope: !1398, file: !1, line: 563, column: 5)
!1403 = !DILocation(line: 563, column: 5, scope: !1402)
!1404 = !DILocation(line: 565, column: 28, scope: !1376)
!1405 = !DILocation(line: 565, column: 10, scope: !1376)
!1406 = !DILocation(line: 566, column: 18, scope: !1376)
!1407 = !DILocation(line: 566, column: 3, scope: !1376)
!1408 = !DILocation(line: 566, column: 15, scope: !1376)
!1409 = !DILocation(line: 566, column: 17, scope: !1376)
!1410 = !DILocation(line: 567, column: 29, scope: !1376)
!1411 = !DILocation(line: 567, column: 41, scope: !1376)
!1412 = !DILocation(line: 568, column: 14, scope: !1376)
!1413 = !DILocation(line: 568, column: 26, scope: !1376)
!1414 = !DILocation(line: 568, column: 5, scope: !1376)
!1415 = !DILocation(line: 567, column: 10, scope: !1376)
!1416 = !DILocation(line: 569, column: 25, scope: !1376)
!1417 = !DILocation(line: 569, column: 3, scope: !1376)
!1418 = !DILocation(line: 569, column: 15, scope: !1376)
!1419 = !DILocation(line: 569, column: 24, scope: !1376)
!1420 = !DILocation(line: 570, column: 20, scope: !1376)
!1421 = !DILocation(line: 570, column: 32, scope: !1376)
!1422 = !DILocation(line: 570, column: 42, scope: !1376)
!1423 = !DILocation(line: 570, column: 48, scope: !1376)
!1424 = !DILocation(line: 570, column: 3, scope: !1376)
!1425 = !DILocation(line: 571, column: 33, scope: !1376)
!1426 = !DILocation(line: 571, column: 39, scope: !1376)
!1427 = !DILocation(line: 571, column: 19, scope: !1376)
!1428 = !DILocation(line: 571, column: 3, scope: !1376)
!1429 = !DILocation(line: 571, column: 15, scope: !1376)
!1430 = !DILocation(line: 571, column: 18, scope: !1376)
!1431 = !DILocation(line: 572, column: 33, scope: !1376)
!1432 = !DILocation(line: 572, column: 45, scope: !1376)
!1433 = !DILocation(line: 572, column: 26, scope: !1376)
!1434 = !DILocation(line: 572, column: 3, scope: !1376)
!1435 = !DILocation(line: 572, column: 15, scope: !1376)
!1436 = !DILocation(line: 572, column: 25, scope: !1376)
!1437 = !DILocation(line: 573, column: 25, scope: !1376)
!1438 = !DILocation(line: 573, column: 31, scope: !1376)
!1439 = !DILocation(line: 573, column: 41, scope: !1376)
!1440 = !DILocation(line: 573, column: 3, scope: !1376)
!1441 = !DILocation(line: 573, column: 15, scope: !1376)
!1442 = !DILocation(line: 573, column: 24, scope: !1376)
!1443 = !DILocation(line: 574, column: 25, scope: !1376)
!1444 = !DILocation(line: 574, column: 31, scope: !1376)
!1445 = !DILocation(line: 574, column: 3, scope: !1376)
!1446 = !DILocation(line: 574, column: 15, scope: !1376)
!1447 = !DILocation(line: 574, column: 24, scope: !1376)
!1448 = !DILocation(line: 575, column: 40, scope: !1376)
!1449 = !DILocation(line: 575, column: 46, scope: !1376)
!1450 = !DILocation(line: 575, column: 26, scope: !1376)
!1451 = !DILocation(line: 575, column: 3, scope: !1376)
!1452 = !DILocation(line: 575, column: 15, scope: !1376)
!1453 = !DILocation(line: 575, column: 25, scope: !1376)
!1454 = !DILocation(line: 576, column: 30, scope: !1376)
!1455 = !DILocation(line: 576, column: 36, scope: !1376)
!1456 = !DILocation(line: 576, column: 3, scope: !1376)
!1457 = !DILocation(line: 576, column: 15, scope: !1376)
!1458 = !DILocation(line: 576, column: 29, scope: !1376)
!1459 = !DILocation(line: 577, column: 3, scope: !1376)
!1460 = !DILocation(line: 577, column: 15, scope: !1376)
!1461 = !DILocation(line: 577, column: 30, scope: !1376)
!1462 = !DILocation(line: 577, column: 36, scope: !1376)
!1463 = !DILocation(line: 578, column: 21, scope: !1376)
!1464 = !DILocation(line: 578, column: 27, scope: !1376)
!1465 = !DILocation(line: 578, column: 3, scope: !1376)
!1466 = !DILocation(line: 578, column: 15, scope: !1376)
!1467 = !DILocation(line: 578, column: 20, scope: !1376)
!1468 = !DILocation(line: 580, column: 5, scope: !1376)
!1469 = !DILocation(line: 580, column: 11, scope: !1376)
!1470 = !DILocation(line: 580, column: 16, scope: !1376)
!1471 = !DILocation(line: 579, column: 45, scope: !1376)
!1472 = !DILocation(line: 579, column: 31, scope: !1376)
!1473 = !DILocation(line: 579, column: 3, scope: !1376)
!1474 = !DILocation(line: 579, column: 15, scope: !1376)
!1475 = !DILocation(line: 579, column: 30, scope: !1376)
!1476 = !DILocation(line: 581, column: 7, scope: !1477)
!1477 = distinct !DILexicalBlock(scope: !1376, file: !1, line: 581, column: 7)
!1478 = !DILocation(line: 581, column: 19, scope: !1477)
!1479 = !DILocation(line: 581, column: 35, scope: !1477)
!1480 = !DILocation(line: 581, column: 7, scope: !1376)
!1481 = !DILocalVariable(name: "exception", scope: !1482, file: !1, line: 582, type: !919)
!1482 = distinct !DILexicalBlock(scope: !1477, file: !1, line: 582, column: 5)
!1483 = !DILocation(line: 582, column: 5, scope: !1482)
!1484 = !DILocation(line: 584, column: 9, scope: !1485)
!1485 = distinct !DILexicalBlock(scope: !1376, file: !1, line: 584, column: 3)
!1486 = !DILocation(line: 584, column: 8, scope: !1485)
!1487 = !DILocation(line: 584, column: 13, scope: !1488)
!1488 = distinct !DILexicalBlock(scope: !1485, file: !1, line: 584, column: 3)
!1489 = !DILocation(line: 584, column: 28, scope: !1488)
!1490 = !DILocation(line: 584, column: 34, scope: !1488)
!1491 = !DILocation(line: 584, column: 15, scope: !1488)
!1492 = !DILocation(line: 584, column: 3, scope: !1485)
!1493 = !DILocation(line: 586, column: 40, scope: !1488)
!1494 = !DILocation(line: 586, column: 46, scope: !1488)
!1495 = !DILocation(line: 586, column: 62, scope: !1488)
!1496 = !DILocation(line: 586, column: 7, scope: !1488)
!1497 = !DILocation(line: 585, column: 5, scope: !1488)
!1498 = !DILocation(line: 585, column: 17, scope: !1488)
!1499 = !DILocation(line: 585, column: 33, scope: !1488)
!1500 = !DILocation(line: 585, column: 35, scope: !1488)
!1501 = !DILocation(line: 584, column: 42, scope: !1488)
!1502 = !DILocation(line: 584, column: 3, scope: !1488)
!1503 = distinct !{!1503, !1492, !1504}
!1504 = !DILocation(line: 586, column: 64, scope: !1485)
!1505 = !DILocation(line: 587, column: 26, scope: !1376)
!1506 = !DILocation(line: 587, column: 32, scope: !1376)
!1507 = !DILocation(line: 587, column: 3, scope: !1376)
!1508 = !DILocation(line: 587, column: 15, scope: !1376)
!1509 = !DILocation(line: 587, column: 25, scope: !1376)
!1510 = !DILocation(line: 588, column: 28, scope: !1376)
!1511 = !DILocation(line: 588, column: 34, scope: !1376)
!1512 = !DILocation(line: 588, column: 3, scope: !1376)
!1513 = !DILocation(line: 588, column: 15, scope: !1376)
!1514 = !DILocation(line: 588, column: 27, scope: !1376)
!1515 = !DILocation(line: 589, column: 30, scope: !1376)
!1516 = !DILocation(line: 589, column: 36, scope: !1376)
!1517 = !DILocation(line: 589, column: 3, scope: !1376)
!1518 = !DILocation(line: 589, column: 15, scope: !1376)
!1519 = !DILocation(line: 589, column: 29, scope: !1376)
!1520 = !DILocation(line: 590, column: 25, scope: !1376)
!1521 = !DILocation(line: 590, column: 31, scope: !1376)
!1522 = !DILocation(line: 590, column: 3, scope: !1376)
!1523 = !DILocation(line: 590, column: 15, scope: !1376)
!1524 = !DILocation(line: 590, column: 24, scope: !1376)
!1525 = !DILocation(line: 591, column: 21, scope: !1376)
!1526 = !DILocation(line: 591, column: 27, scope: !1376)
!1527 = !DILocation(line: 591, column: 3, scope: !1376)
!1528 = !DILocation(line: 591, column: 15, scope: !1376)
!1529 = !DILocation(line: 591, column: 20, scope: !1376)
!1530 = !DILocation(line: 592, column: 7, scope: !1531)
!1531 = distinct !DILexicalBlock(scope: !1376, file: !1, line: 592, column: 7)
!1532 = !DILocation(line: 592, column: 13, scope: !1531)
!1533 = !DILocation(line: 592, column: 19, scope: !1531)
!1534 = !DILocation(line: 592, column: 7, scope: !1376)
!1535 = !DILocation(line: 593, column: 34, scope: !1531)
!1536 = !DILocation(line: 593, column: 40, scope: !1531)
!1537 = !DILocation(line: 594, column: 7, scope: !1531)
!1538 = !DILocation(line: 594, column: 19, scope: !1531)
!1539 = !DILocation(line: 593, column: 23, scope: !1531)
!1540 = !DILocation(line: 593, column: 5, scope: !1531)
!1541 = !DILocation(line: 593, column: 17, scope: !1531)
!1542 = !DILocation(line: 593, column: 22, scope: !1531)
!1543 = !DILocation(line: 595, column: 3, scope: !1376)
!1544 = !DILocation(line: 595, column: 15, scope: !1376)
!1545 = !DILocation(line: 595, column: 22, scope: !1376)
!1546 = !DILocation(line: 596, column: 21, scope: !1376)
!1547 = !DILocation(line: 596, column: 3, scope: !1376)
!1548 = !DILocation(line: 596, column: 15, scope: !1376)
!1549 = !DILocation(line: 596, column: 20, scope: !1376)
!1550 = !DILocation(line: 597, column: 7, scope: !1551)
!1551 = distinct !DILexicalBlock(scope: !1376, file: !1, line: 597, column: 7)
!1552 = !DILocation(line: 597, column: 19, scope: !1551)
!1553 = !DILocation(line: 597, column: 25, scope: !1551)
!1554 = !DILocation(line: 597, column: 7, scope: !1376)
!1555 = !DILocation(line: 598, column: 60, scope: !1551)
!1556 = !DILocation(line: 598, column: 72, scope: !1551)
!1557 = !DILocation(line: 598, column: 12, scope: !1551)
!1558 = !DILocation(line: 598, column: 5, scope: !1551)
!1559 = !DILocation(line: 599, column: 3, scope: !1376)
!1560 = !DILocation(line: 599, column: 15, scope: !1376)
!1561 = !DILocation(line: 599, column: 24, scope: !1376)
!1562 = !DILocation(line: 600, column: 10, scope: !1376)
!1563 = !DILocation(line: 600, column: 3, scope: !1376)
!1564 = distinct !DISubprogram(name: "DestroyDrawingWand", scope: !1, file: !1, line: 627, type: !1565, scopeLine: 628, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!1172, !1172}
!1567 = !DILocalVariable(name: "wand", arg: 1, scope: !1564, file: !1, line: 627, type: !1172)
!1568 = !DILocation(line: 627, column: 57, scope: !1564)
!1569 = !DILocation(line: 631, column: 7, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !1564, file: !1, line: 631, column: 7)
!1571 = !DILocation(line: 631, column: 13, scope: !1570)
!1572 = !DILocation(line: 631, column: 19, scope: !1570)
!1573 = !DILocation(line: 631, column: 7, scope: !1564)
!1574 = !DILocation(line: 632, column: 60, scope: !1570)
!1575 = !DILocation(line: 632, column: 66, scope: !1570)
!1576 = !DILocation(line: 632, column: 12, scope: !1570)
!1577 = !DILocation(line: 632, column: 5, scope: !1570)
!1578 = !DILocation(line: 633, column: 3, scope: !1564)
!1579 = !DILocation(line: 633, column: 11, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1581, file: !1, line: 633, column: 3)
!1581 = distinct !DILexicalBlock(scope: !1564, file: !1, line: 633, column: 3)
!1582 = !DILocation(line: 633, column: 17, scope: !1580)
!1583 = !DILocation(line: 633, column: 23, scope: !1580)
!1584 = !DILocation(line: 633, column: 3, scope: !1581)
!1585 = !DILocation(line: 634, column: 36, scope: !1580)
!1586 = !DILocation(line: 634, column: 20, scope: !1580)
!1587 = !DILocation(line: 634, column: 5, scope: !1580)
!1588 = !DILocation(line: 634, column: 19, scope: !1580)
!1589 = !DILocation(line: 633, column: 28, scope: !1580)
!1590 = !DILocation(line: 633, column: 34, scope: !1580)
!1591 = !DILocation(line: 633, column: 39, scope: !1580)
!1592 = !DILocation(line: 633, column: 3, scope: !1580)
!1593 = distinct !{!1593, !1584, !1594}
!1594 = !DILocation(line: 634, column: 50, scope: !1581)
!1595 = !DILocation(line: 635, column: 34, scope: !1564)
!1596 = !DILocation(line: 635, column: 18, scope: !1564)
!1597 = !DILocation(line: 635, column: 3, scope: !1564)
!1598 = !DILocation(line: 635, column: 17, scope: !1564)
!1599 = !DILocation(line: 637, column: 5, scope: !1564)
!1600 = !DILocation(line: 637, column: 11, scope: !1564)
!1601 = !DILocation(line: 636, column: 39, scope: !1564)
!1602 = !DILocation(line: 636, column: 25, scope: !1564)
!1603 = !DILocation(line: 636, column: 3, scope: !1564)
!1604 = !DILocation(line: 636, column: 9, scope: !1564)
!1605 = !DILocation(line: 636, column: 24, scope: !1564)
!1606 = !DILocation(line: 638, column: 7, scope: !1607)
!1607 = distinct !DILexicalBlock(scope: !1564, file: !1, line: 638, column: 7)
!1608 = !DILocation(line: 638, column: 13, scope: !1607)
!1609 = !DILocation(line: 638, column: 24, scope: !1607)
!1610 = !DILocation(line: 638, column: 7, scope: !1564)
!1611 = !DILocation(line: 639, column: 36, scope: !1607)
!1612 = !DILocation(line: 639, column: 42, scope: !1607)
!1613 = !DILocation(line: 639, column: 22, scope: !1607)
!1614 = !DILocation(line: 639, column: 5, scope: !1607)
!1615 = !DILocation(line: 639, column: 11, scope: !1607)
!1616 = !DILocation(line: 639, column: 21, scope: !1607)
!1617 = !DILocation(line: 640, column: 27, scope: !1564)
!1618 = !DILocation(line: 640, column: 33, scope: !1564)
!1619 = !DILocation(line: 640, column: 13, scope: !1564)
!1620 = !DILocation(line: 640, column: 3, scope: !1564)
!1621 = !DILocation(line: 640, column: 9, scope: !1564)
!1622 = !DILocation(line: 640, column: 12, scope: !1564)
!1623 = !DILocation(line: 641, column: 8, scope: !1624)
!1624 = distinct !DILexicalBlock(scope: !1564, file: !1, line: 641, column: 7)
!1625 = !DILocation(line: 641, column: 14, scope: !1624)
!1626 = !DILocation(line: 641, column: 22, scope: !1624)
!1627 = !DILocation(line: 641, column: 38, scope: !1624)
!1628 = !DILocation(line: 641, column: 42, scope: !1624)
!1629 = !DILocation(line: 641, column: 48, scope: !1624)
!1630 = !DILocation(line: 641, column: 54, scope: !1624)
!1631 = !DILocation(line: 641, column: 7, scope: !1564)
!1632 = !DILocation(line: 642, column: 30, scope: !1624)
!1633 = !DILocation(line: 642, column: 36, scope: !1624)
!1634 = !DILocation(line: 642, column: 17, scope: !1624)
!1635 = !DILocation(line: 642, column: 5, scope: !1624)
!1636 = !DILocation(line: 642, column: 11, scope: !1624)
!1637 = !DILocation(line: 642, column: 16, scope: !1624)
!1638 = !DILocation(line: 643, column: 3, scope: !1564)
!1639 = !DILocation(line: 643, column: 9, scope: !1564)
!1640 = !DILocation(line: 643, column: 14, scope: !1564)
!1641 = !DILocation(line: 644, column: 40, scope: !1564)
!1642 = !DILocation(line: 644, column: 46, scope: !1564)
!1643 = !DILocation(line: 644, column: 19, scope: !1564)
!1644 = !DILocation(line: 644, column: 3, scope: !1564)
!1645 = !DILocation(line: 644, column: 9, scope: !1564)
!1646 = !DILocation(line: 644, column: 18, scope: !1564)
!1647 = !DILocation(line: 645, column: 3, scope: !1564)
!1648 = !DILocation(line: 645, column: 9, scope: !1564)
!1649 = !DILocation(line: 645, column: 18, scope: !1564)
!1650 = !DILocation(line: 646, column: 20, scope: !1564)
!1651 = !DILocation(line: 646, column: 26, scope: !1564)
!1652 = !DILocation(line: 646, column: 3, scope: !1564)
!1653 = !DILocation(line: 647, column: 47, scope: !1564)
!1654 = !DILocation(line: 647, column: 24, scope: !1564)
!1655 = !DILocation(line: 647, column: 8, scope: !1564)
!1656 = !DILocation(line: 647, column: 7, scope: !1564)
!1657 = !DILocation(line: 648, column: 10, scope: !1564)
!1658 = !DILocation(line: 648, column: 3, scope: !1564)
!1659 = distinct !DISubprogram(name: "DrawAffine", scope: !1, file: !1, line: 677, type: !1660, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!1660 = !DISubroutineType(types: !1661)
!1661 = !{null, !1172, !1662}
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !711)
!1664 = !DILocalVariable(name: "wand", arg: 1, scope: !1659, file: !1, line: 677, type: !1172)
!1665 = !DILocation(line: 677, column: 41, scope: !1659)
!1666 = !DILocalVariable(name: "affine", arg: 2, scope: !1659, file: !1, line: 677, type: !1662)
!1667 = !DILocation(line: 677, column: 66, scope: !1659)
!1668 = !DILocation(line: 681, column: 7, scope: !1669)
!1669 = distinct !DILexicalBlock(scope: !1659, file: !1, line: 681, column: 7)
!1670 = !DILocation(line: 681, column: 13, scope: !1669)
!1671 = !DILocation(line: 681, column: 19, scope: !1669)
!1672 = !DILocation(line: 681, column: 7, scope: !1659)
!1673 = !DILocation(line: 682, column: 60, scope: !1669)
!1674 = !DILocation(line: 682, column: 66, scope: !1669)
!1675 = !DILocation(line: 682, column: 12, scope: !1669)
!1676 = !DILocation(line: 682, column: 5, scope: !1669)
!1677 = !DILocation(line: 684, column: 16, scope: !1659)
!1678 = !DILocation(line: 684, column: 21, scope: !1659)
!1679 = !DILocation(line: 684, column: 3, scope: !1659)
!1680 = !DILocation(line: 685, column: 20, scope: !1659)
!1681 = !DILocation(line: 686, column: 5, scope: !1659)
!1682 = !DILocation(line: 686, column: 13, scope: !1659)
!1683 = !DILocation(line: 686, column: 16, scope: !1659)
!1684 = !DILocation(line: 686, column: 24, scope: !1659)
!1685 = !DILocation(line: 686, column: 27, scope: !1659)
!1686 = !DILocation(line: 686, column: 35, scope: !1659)
!1687 = !DILocation(line: 686, column: 38, scope: !1659)
!1688 = !DILocation(line: 686, column: 46, scope: !1659)
!1689 = !DILocation(line: 686, column: 49, scope: !1659)
!1690 = !DILocation(line: 686, column: 57, scope: !1659)
!1691 = !DILocation(line: 686, column: 60, scope: !1659)
!1692 = !DILocation(line: 686, column: 68, scope: !1659)
!1693 = !DILocation(line: 685, column: 10, scope: !1659)
!1694 = !DILocation(line: 687, column: 1, scope: !1659)
!1695 = distinct !DISubprogram(name: "AdjustAffine", scope: !1, file: !1, line: 433, type: !1660, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!1696 = !DILocalVariable(name: "wand", arg: 1, scope: !1695, file: !1, line: 433, type: !1172)
!1697 = !DILocation(line: 433, column: 39, scope: !1695)
!1698 = !DILocalVariable(name: "affine", arg: 2, scope: !1695, file: !1, line: 433, type: !1662)
!1699 = !DILocation(line: 433, column: 64, scope: !1695)
!1700 = !DILocation(line: 437, column: 7, scope: !1701)
!1701 = distinct !DILexicalBlock(scope: !1695, file: !1, line: 437, column: 7)
!1702 = !DILocation(line: 437, column: 13, scope: !1701)
!1703 = !DILocation(line: 437, column: 19, scope: !1701)
!1704 = !DILocation(line: 437, column: 7, scope: !1695)
!1705 = !DILocation(line: 438, column: 60, scope: !1701)
!1706 = !DILocation(line: 438, column: 66, scope: !1701)
!1707 = !DILocation(line: 438, column: 12, scope: !1701)
!1708 = !DILocation(line: 438, column: 5, scope: !1701)
!1709 = !DILocation(line: 439, column: 8, scope: !1710)
!1710 = distinct !DILexicalBlock(scope: !1695, file: !1, line: 439, column: 7)
!1711 = !DILocation(line: 439, column: 16, scope: !1710)
!1712 = !DILocation(line: 439, column: 19, scope: !1710)
!1713 = !DILocation(line: 439, column: 27, scope: !1710)
!1714 = !DILocation(line: 439, column: 31, scope: !1710)
!1715 = !DILocation(line: 439, column: 39, scope: !1710)
!1716 = !DILocation(line: 439, column: 42, scope: !1710)
!1717 = !DILocation(line: 439, column: 50, scope: !1710)
!1718 = !DILocation(line: 439, column: 54, scope: !1710)
!1719 = !DILocation(line: 439, column: 62, scope: !1710)
!1720 = !DILocation(line: 439, column: 65, scope: !1710)
!1721 = !DILocation(line: 439, column: 73, scope: !1710)
!1722 = !DILocation(line: 440, column: 8, scope: !1710)
!1723 = !DILocation(line: 440, column: 16, scope: !1710)
!1724 = !DILocation(line: 440, column: 19, scope: !1710)
!1725 = !DILocation(line: 440, column: 27, scope: !1710)
!1726 = !DILocation(line: 440, column: 31, scope: !1710)
!1727 = !DILocation(line: 440, column: 39, scope: !1710)
!1728 = !DILocation(line: 440, column: 42, scope: !1710)
!1729 = !DILocation(line: 440, column: 50, scope: !1710)
!1730 = !DILocation(line: 440, column: 54, scope: !1710)
!1731 = !DILocation(line: 440, column: 62, scope: !1710)
!1732 = !DILocation(line: 440, column: 65, scope: !1710)
!1733 = !DILocation(line: 439, column: 7, scope: !1695)
!1734 = !DILocalVariable(name: "current", scope: !1735, file: !1, line: 443, type: !711)
!1735 = distinct !DILexicalBlock(scope: !1710, file: !1, line: 441, column: 5)
!1736 = !DILocation(line: 443, column: 9, scope: !1735)
!1737 = !DILocation(line: 445, column: 15, scope: !1735)
!1738 = !DILocation(line: 445, column: 31, scope: !1735)
!1739 = !DILocation(line: 446, column: 33, scope: !1735)
!1740 = !DILocation(line: 446, column: 41, scope: !1735)
!1741 = !DILocation(line: 446, column: 52, scope: !1735)
!1742 = !DILocation(line: 446, column: 43, scope: !1735)
!1743 = !DILocation(line: 446, column: 55, scope: !1735)
!1744 = !DILocation(line: 446, column: 63, scope: !1735)
!1745 = !DILocation(line: 446, column: 74, scope: !1735)
!1746 = !DILocation(line: 446, column: 65, scope: !1735)
!1747 = !DILocation(line: 446, column: 54, scope: !1735)
!1748 = !DILocation(line: 446, column: 7, scope: !1735)
!1749 = !DILocation(line: 446, column: 23, scope: !1735)
!1750 = !DILocation(line: 446, column: 30, scope: !1735)
!1751 = !DILocation(line: 446, column: 32, scope: !1735)
!1752 = !DILocation(line: 447, column: 33, scope: !1735)
!1753 = !DILocation(line: 447, column: 41, scope: !1735)
!1754 = !DILocation(line: 447, column: 52, scope: !1735)
!1755 = !DILocation(line: 447, column: 43, scope: !1735)
!1756 = !DILocation(line: 447, column: 55, scope: !1735)
!1757 = !DILocation(line: 447, column: 63, scope: !1735)
!1758 = !DILocation(line: 447, column: 74, scope: !1735)
!1759 = !DILocation(line: 447, column: 65, scope: !1735)
!1760 = !DILocation(line: 447, column: 54, scope: !1735)
!1761 = !DILocation(line: 447, column: 7, scope: !1735)
!1762 = !DILocation(line: 447, column: 23, scope: !1735)
!1763 = !DILocation(line: 447, column: 30, scope: !1735)
!1764 = !DILocation(line: 447, column: 32, scope: !1735)
!1765 = !DILocation(line: 448, column: 33, scope: !1735)
!1766 = !DILocation(line: 448, column: 41, scope: !1735)
!1767 = !DILocation(line: 448, column: 52, scope: !1735)
!1768 = !DILocation(line: 448, column: 43, scope: !1735)
!1769 = !DILocation(line: 448, column: 55, scope: !1735)
!1770 = !DILocation(line: 448, column: 63, scope: !1735)
!1771 = !DILocation(line: 448, column: 74, scope: !1735)
!1772 = !DILocation(line: 448, column: 65, scope: !1735)
!1773 = !DILocation(line: 448, column: 54, scope: !1735)
!1774 = !DILocation(line: 448, column: 7, scope: !1735)
!1775 = !DILocation(line: 448, column: 23, scope: !1735)
!1776 = !DILocation(line: 448, column: 30, scope: !1735)
!1777 = !DILocation(line: 448, column: 32, scope: !1735)
!1778 = !DILocation(line: 449, column: 33, scope: !1735)
!1779 = !DILocation(line: 449, column: 41, scope: !1735)
!1780 = !DILocation(line: 449, column: 52, scope: !1735)
!1781 = !DILocation(line: 449, column: 43, scope: !1735)
!1782 = !DILocation(line: 449, column: 55, scope: !1735)
!1783 = !DILocation(line: 449, column: 63, scope: !1735)
!1784 = !DILocation(line: 449, column: 74, scope: !1735)
!1785 = !DILocation(line: 449, column: 65, scope: !1735)
!1786 = !DILocation(line: 449, column: 54, scope: !1735)
!1787 = !DILocation(line: 449, column: 7, scope: !1735)
!1788 = !DILocation(line: 449, column: 23, scope: !1735)
!1789 = !DILocation(line: 449, column: 30, scope: !1735)
!1790 = !DILocation(line: 449, column: 32, scope: !1735)
!1791 = !DILocation(line: 450, column: 33, scope: !1735)
!1792 = !DILocation(line: 450, column: 41, scope: !1735)
!1793 = !DILocation(line: 450, column: 52, scope: !1735)
!1794 = !DILocation(line: 450, column: 43, scope: !1735)
!1795 = !DILocation(line: 450, column: 55, scope: !1735)
!1796 = !DILocation(line: 450, column: 63, scope: !1735)
!1797 = !DILocation(line: 450, column: 74, scope: !1735)
!1798 = !DILocation(line: 450, column: 65, scope: !1735)
!1799 = !DILocation(line: 450, column: 54, scope: !1735)
!1800 = !DILocation(line: 451, column: 9, scope: !1735)
!1801 = !DILocation(line: 451, column: 17, scope: !1735)
!1802 = !DILocation(line: 450, column: 76, scope: !1735)
!1803 = !DILocation(line: 450, column: 7, scope: !1735)
!1804 = !DILocation(line: 450, column: 23, scope: !1735)
!1805 = !DILocation(line: 450, column: 30, scope: !1735)
!1806 = !DILocation(line: 450, column: 32, scope: !1735)
!1807 = !DILocation(line: 452, column: 33, scope: !1735)
!1808 = !DILocation(line: 452, column: 41, scope: !1735)
!1809 = !DILocation(line: 452, column: 52, scope: !1735)
!1810 = !DILocation(line: 452, column: 43, scope: !1735)
!1811 = !DILocation(line: 452, column: 55, scope: !1735)
!1812 = !DILocation(line: 452, column: 63, scope: !1735)
!1813 = !DILocation(line: 452, column: 74, scope: !1735)
!1814 = !DILocation(line: 452, column: 65, scope: !1735)
!1815 = !DILocation(line: 452, column: 54, scope: !1735)
!1816 = !DILocation(line: 453, column: 9, scope: !1735)
!1817 = !DILocation(line: 453, column: 17, scope: !1735)
!1818 = !DILocation(line: 452, column: 76, scope: !1735)
!1819 = !DILocation(line: 452, column: 7, scope: !1735)
!1820 = !DILocation(line: 452, column: 23, scope: !1735)
!1821 = !DILocation(line: 452, column: 30, scope: !1735)
!1822 = !DILocation(line: 452, column: 32, scope: !1735)
!1823 = !DILocation(line: 454, column: 5, scope: !1735)
!1824 = !DILocation(line: 455, column: 1, scope: !1695)
!1825 = distinct !DISubprogram(name: "MvgPrintf", scope: !1, file: !1, line: 279, type: !1826, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!574, !1172, !891, null}
!1828 = !DILocalVariable(name: "wand", arg: 1, scope: !1825, file: !1, line: 279, type: !1172)
!1829 = !DILocation(line: 279, column: 35, scope: !1825)
!1830 = !DILocalVariable(name: "format", arg: 2, scope: !1825, file: !1, line: 279, type: !891)
!1831 = !DILocation(line: 279, column: 52, scope: !1825)
!1832 = !DILocalVariable(name: "extent", scope: !1825, file: !1, line: 282, type: !700)
!1833 = !DILocation(line: 282, column: 5, scope: !1825)
!1834 = !DILocation(line: 284, column: 7, scope: !1835)
!1835 = distinct !DILexicalBlock(scope: !1825, file: !1, line: 284, column: 7)
!1836 = !DILocation(line: 284, column: 13, scope: !1835)
!1837 = !DILocation(line: 284, column: 19, scope: !1835)
!1838 = !DILocation(line: 284, column: 7, scope: !1825)
!1839 = !DILocation(line: 285, column: 60, scope: !1835)
!1840 = !DILocation(line: 285, column: 12, scope: !1835)
!1841 = !DILocation(line: 285, column: 5, scope: !1835)
!1842 = !DILocation(line: 288, column: 9, scope: !1825)
!1843 = !DILocation(line: 289, column: 7, scope: !1844)
!1844 = distinct !DILexicalBlock(scope: !1825, file: !1, line: 289, column: 7)
!1845 = !DILocation(line: 289, column: 13, scope: !1844)
!1846 = !DILocation(line: 289, column: 17, scope: !1844)
!1847 = !DILocation(line: 289, column: 7, scope: !1825)
!1848 = !DILocation(line: 291, column: 47, scope: !1849)
!1849 = distinct !DILexicalBlock(scope: !1844, file: !1, line: 290, column: 5)
!1850 = !DILocation(line: 291, column: 26, scope: !1849)
!1851 = !DILocation(line: 291, column: 7, scope: !1849)
!1852 = !DILocation(line: 291, column: 13, scope: !1849)
!1853 = !DILocation(line: 291, column: 16, scope: !1849)
!1854 = !DILocation(line: 292, column: 11, scope: !1855)
!1855 = distinct !DILexicalBlock(scope: !1849, file: !1, line: 292, column: 11)
!1856 = !DILocation(line: 292, column: 17, scope: !1855)
!1857 = !DILocation(line: 292, column: 21, scope: !1855)
!1858 = !DILocation(line: 292, column: 11, scope: !1849)
!1859 = !DILocation(line: 294, column: 11, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1855, file: !1, line: 293, column: 9)
!1861 = !DILocation(line: 296, column: 11, scope: !1860)
!1862 = !DILocation(line: 298, column: 23, scope: !1849)
!1863 = !DILocation(line: 298, column: 7, scope: !1849)
!1864 = !DILocation(line: 298, column: 13, scope: !1849)
!1865 = !DILocation(line: 298, column: 22, scope: !1849)
!1866 = !DILocation(line: 299, column: 7, scope: !1849)
!1867 = !DILocation(line: 299, column: 13, scope: !1849)
!1868 = !DILocation(line: 299, column: 23, scope: !1849)
!1869 = !DILocation(line: 300, column: 5, scope: !1849)
!1870 = !DILocation(line: 301, column: 7, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !1825, file: !1, line: 301, column: 7)
!1872 = !DILocation(line: 301, column: 13, scope: !1871)
!1873 = !DILocation(line: 301, column: 26, scope: !1871)
!1874 = !DILocation(line: 301, column: 32, scope: !1871)
!1875 = !DILocation(line: 301, column: 42, scope: !1871)
!1876 = !DILocation(line: 301, column: 23, scope: !1871)
!1877 = !DILocation(line: 301, column: 7, scope: !1825)
!1878 = !DILocation(line: 303, column: 15, scope: !1879)
!1879 = distinct !DILexicalBlock(scope: !1871, file: !1, line: 302, column: 5)
!1880 = !DILocation(line: 303, column: 21, scope: !1879)
!1881 = !DILocation(line: 303, column: 13, scope: !1879)
!1882 = !DILocation(line: 304, column: 46, scope: !1879)
!1883 = !DILocation(line: 304, column: 52, scope: !1879)
!1884 = !DILocation(line: 304, column: 56, scope: !1879)
!1885 = !DILocation(line: 304, column: 26, scope: !1879)
!1886 = !DILocation(line: 304, column: 7, scope: !1879)
!1887 = !DILocation(line: 304, column: 13, scope: !1879)
!1888 = !DILocation(line: 304, column: 16, scope: !1879)
!1889 = !DILocation(line: 306, column: 11, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !1879, file: !1, line: 306, column: 11)
!1891 = !DILocation(line: 306, column: 17, scope: !1890)
!1892 = !DILocation(line: 306, column: 21, scope: !1890)
!1893 = !DILocation(line: 306, column: 11, scope: !1879)
!1894 = !DILocation(line: 308, column: 11, scope: !1895)
!1895 = distinct !DILexicalBlock(scope: !1890, file: !1, line: 307, column: 9)
!1896 = !DILocation(line: 310, column: 11, scope: !1895)
!1897 = !DILocation(line: 312, column: 23, scope: !1879)
!1898 = !DILocation(line: 312, column: 7, scope: !1879)
!1899 = !DILocation(line: 312, column: 13, scope: !1879)
!1900 = !DILocation(line: 312, column: 22, scope: !1879)
!1901 = !DILocation(line: 313, column: 5, scope: !1879)
!1902 = !DILocalVariable(name: "count", scope: !1903, file: !1, line: 316, type: !574)
!1903 = distinct !DILexicalBlock(scope: !1825, file: !1, line: 314, column: 3)
!1904 = !DILocation(line: 316, column: 7, scope: !1903)
!1905 = !DILocalVariable(name: "offset", scope: !1903, file: !1, line: 319, type: !704)
!1906 = !DILocation(line: 319, column: 7, scope: !1903)
!1907 = !DILocalVariable(name: "argp", scope: !1903, file: !1, line: 322, type: !1908)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !705, line: 52, baseType: !1909)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1910, line: 32, baseType: !1911)
!1910 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stdarg.h", directory: "/home/venkat/IF-DV")
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1, line: 322, baseType: !1912)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1913, size: 192, elements: !1132)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, line: 322, size: 192, elements: !1914)
!1914 = !{!1915, !1916, !1917, !1918}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1913, file: !1, line: 322, baseType: !5, size: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1913, file: !1, line: 322, baseType: !5, size: 32, offset: 32)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1913, file: !1, line: 322, baseType: !828, size: 64, offset: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1913, file: !1, line: 322, baseType: !828, size: 64, offset: 128)
!1919 = !DILocation(line: 322, column: 7, scope: !1903)
!1920 = !DILocation(line: 324, column: 5, scope: !1903)
!1921 = !DILocation(line: 324, column: 12, scope: !1903)
!1922 = !DILocation(line: 324, column: 18, scope: !1903)
!1923 = !DILocation(line: 324, column: 30, scope: !1903)
!1924 = !DILocation(line: 324, column: 36, scope: !1903)
!1925 = !DILocation(line: 324, column: 28, scope: !1903)
!1926 = !DILocation(line: 326, column: 7, scope: !1927)
!1927 = distinct !DILexicalBlock(scope: !1903, file: !1, line: 325, column: 5)
!1928 = !DILocation(line: 326, column: 13, scope: !1927)
!1929 = !DILocation(line: 326, column: 17, scope: !1927)
!1930 = !DILocation(line: 326, column: 23, scope: !1927)
!1931 = !DILocation(line: 326, column: 34, scope: !1927)
!1932 = !DILocation(line: 327, column: 7, scope: !1927)
!1933 = !DILocation(line: 327, column: 13, scope: !1927)
!1934 = !DILocation(line: 327, column: 23, scope: !1927)
!1935 = !DILocation(line: 328, column: 7, scope: !1927)
!1936 = !DILocation(line: 328, column: 13, scope: !1927)
!1937 = !DILocation(line: 328, column: 22, scope: !1927)
!1938 = distinct !{!1938, !1920, !1939}
!1939 = !DILocation(line: 329, column: 5, scope: !1903)
!1940 = !DILocation(line: 330, column: 5, scope: !1903)
!1941 = !DILocation(line: 330, column: 11, scope: !1903)
!1942 = !DILocation(line: 330, column: 15, scope: !1903)
!1943 = !DILocation(line: 330, column: 21, scope: !1903)
!1944 = !DILocation(line: 330, column: 32, scope: !1903)
!1945 = !DILocation(line: 331, column: 10, scope: !1903)
!1946 = !DILocation(line: 332, column: 22, scope: !1903)
!1947 = !DILocation(line: 332, column: 28, scope: !1903)
!1948 = !DILocation(line: 332, column: 38, scope: !1903)
!1949 = !DILocation(line: 332, column: 44, scope: !1903)
!1950 = !DILocation(line: 332, column: 37, scope: !1903)
!1951 = !DILocation(line: 332, column: 54, scope: !1903)
!1952 = !DILocation(line: 332, column: 11, scope: !1903)
!1953 = !DILocation(line: 333, column: 9, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1903, file: !1, line: 333, column: 9)
!1955 = !DILocation(line: 333, column: 16, scope: !1954)
!1956 = !DILocation(line: 333, column: 9, scope: !1903)
!1957 = !DILocation(line: 335, column: 9, scope: !1958)
!1958 = distinct !DILexicalBlock(scope: !1954, file: !1, line: 334, column: 7)
!1959 = !DILocation(line: 337, column: 25, scope: !1958)
!1960 = !DILocation(line: 337, column: 31, scope: !1958)
!1961 = !DILocation(line: 337, column: 35, scope: !1958)
!1962 = !DILocation(line: 337, column: 41, scope: !1958)
!1963 = !DILocation(line: 337, column: 34, scope: !1958)
!1964 = !DILocation(line: 337, column: 61, scope: !1958)
!1965 = !DILocation(line: 337, column: 68, scope: !1958)
!1966 = !DILocation(line: 337, column: 75, scope: !1958)
!1967 = !DILocation(line: 337, column: 15, scope: !1958)
!1968 = !DILocation(line: 337, column: 14, scope: !1958)
!1969 = !DILocation(line: 341, column: 9, scope: !1958)
!1970 = !DILocation(line: 342, column: 7, scope: !1958)
!1971 = !DILocation(line: 343, column: 10, scope: !1972)
!1972 = distinct !DILexicalBlock(scope: !1903, file: !1, line: 343, column: 9)
!1973 = !DILocation(line: 343, column: 16, scope: !1972)
!1974 = !DILocation(line: 343, column: 21, scope: !1972)
!1975 = !DILocation(line: 343, column: 25, scope: !1972)
!1976 = !DILocation(line: 343, column: 39, scope: !1972)
!1977 = !DILocation(line: 343, column: 33, scope: !1972)
!1978 = !DILocation(line: 343, column: 31, scope: !1972)
!1979 = !DILocation(line: 343, column: 9, scope: !1903)
!1980 = !DILocation(line: 344, column: 7, scope: !1972)
!1981 = !DILocation(line: 347, column: 27, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1972, file: !1, line: 346, column: 7)
!1983 = !DILocation(line: 347, column: 9, scope: !1982)
!1984 = !DILocation(line: 347, column: 15, scope: !1982)
!1985 = !DILocation(line: 347, column: 25, scope: !1982)
!1986 = !DILocation(line: 348, column: 26, scope: !1982)
!1987 = !DILocation(line: 348, column: 9, scope: !1982)
!1988 = !DILocation(line: 348, column: 15, scope: !1982)
!1989 = !DILocation(line: 348, column: 24, scope: !1982)
!1990 = !DILocation(line: 350, column: 5, scope: !1903)
!1991 = !DILocation(line: 350, column: 11, scope: !1903)
!1992 = !DILocation(line: 350, column: 15, scope: !1903)
!1993 = !DILocation(line: 350, column: 21, scope: !1903)
!1994 = !DILocation(line: 350, column: 32, scope: !1903)
!1995 = !DILocation(line: 351, column: 10, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !1903, file: !1, line: 351, column: 9)
!1997 = !DILocation(line: 351, column: 16, scope: !1996)
!1998 = !DILocation(line: 351, column: 27, scope: !1996)
!1999 = !DILocation(line: 351, column: 32, scope: !1996)
!2000 = !DILocation(line: 351, column: 36, scope: !1996)
!2001 = !DILocation(line: 351, column: 42, scope: !1996)
!2002 = !DILocation(line: 351, column: 46, scope: !1996)
!2003 = !DILocation(line: 351, column: 52, scope: !1996)
!2004 = !DILocation(line: 351, column: 62, scope: !1996)
!2005 = !DILocation(line: 351, column: 66, scope: !1996)
!2006 = !DILocation(line: 351, column: 9, scope: !1903)
!2007 = !DILocation(line: 352, column: 7, scope: !1996)
!2008 = !DILocation(line: 352, column: 13, scope: !1996)
!2009 = !DILocation(line: 352, column: 22, scope: !1996)
!2010 = !DILocation(line: 354, column: 12, scope: !1903)
!2011 = !DILocation(line: 354, column: 5, scope: !1903)
!2012 = !DILocation(line: 356, column: 1, scope: !1825)
!2013 = distinct !DISubprogram(name: "DrawAllocateWand", scope: !1, file: !1, line: 714, type: !2014, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!1172, !1200, !788}
!2016 = !DILocalVariable(name: "draw_info", arg: 1, scope: !2013, file: !1, line: 714, type: !1200)
!2017 = !DILocation(line: 714, column: 58, scope: !2013)
!2018 = !DILocalVariable(name: "image", arg: 2, scope: !2013, file: !1, line: 714, type: !788)
!2019 = !DILocation(line: 714, column: 75, scope: !2013)
!2020 = !DILocalVariable(name: "wand", scope: !2013, file: !1, line: 717, type: !1172)
!2021 = !DILocation(line: 717, column: 6, scope: !2013)
!2022 = !DILocation(line: 719, column: 8, scope: !2013)
!2023 = !DILocation(line: 719, column: 7, scope: !2013)
!2024 = !DILocation(line: 720, column: 7, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !2013, file: !1, line: 720, column: 7)
!2026 = !DILocation(line: 720, column: 17, scope: !2025)
!2027 = !DILocation(line: 720, column: 7, scope: !2013)
!2028 = !DILocation(line: 722, column: 38, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !2025, file: !1, line: 721, column: 5)
!2030 = !DILocation(line: 722, column: 22, scope: !2029)
!2031 = !DILocation(line: 722, column: 7, scope: !2029)
!2032 = !DILocation(line: 722, column: 21, scope: !2029)
!2033 = !DILocation(line: 723, column: 55, scope: !2029)
!2034 = !DILocation(line: 723, column: 22, scope: !2029)
!2035 = !DILocation(line: 723, column: 7, scope: !2029)
!2036 = !DILocation(line: 723, column: 21, scope: !2029)
!2037 = !DILocation(line: 724, column: 5, scope: !2029)
!2038 = !DILocation(line: 725, column: 7, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !2013, file: !1, line: 725, column: 7)
!2040 = !DILocation(line: 725, column: 13, scope: !2039)
!2041 = !DILocation(line: 725, column: 7, scope: !2013)
!2042 = !DILocation(line: 727, column: 32, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !2039, file: !1, line: 726, column: 5)
!2044 = !DILocation(line: 727, column: 38, scope: !2043)
!2045 = !DILocation(line: 727, column: 19, scope: !2043)
!2046 = !DILocation(line: 727, column: 7, scope: !2043)
!2047 = !DILocation(line: 727, column: 13, scope: !2043)
!2048 = !DILocation(line: 727, column: 18, scope: !2043)
!2049 = !DILocation(line: 728, column: 7, scope: !2043)
!2050 = !DILocation(line: 728, column: 13, scope: !2043)
!2051 = !DILocation(line: 728, column: 20, scope: !2043)
!2052 = !DILocation(line: 729, column: 5, scope: !2043)
!2053 = !DILocation(line: 730, column: 15, scope: !2013)
!2054 = !DILocation(line: 730, column: 3, scope: !2013)
!2055 = !DILocation(line: 730, column: 9, scope: !2013)
!2056 = !DILocation(line: 730, column: 14, scope: !2013)
!2057 = !DILocation(line: 731, column: 10, scope: !2013)
!2058 = !DILocation(line: 731, column: 3, scope: !2013)
!2059 = distinct !DISubprogram(name: "NewDrawingWand", scope: !1, file: !1, line: 6718, type: !2060, scopeLine: 6719, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{!1172}
!2062 = !DILocalVariable(name: "quantum", scope: !2059, file: !1, line: 6721, type: !891)
!2063 = !DILocation(line: 6721, column: 6, scope: !2059)
!2064 = !DILocalVariable(name: "wand", scope: !2059, file: !1, line: 6724, type: !1172)
!2065 = !DILocation(line: 6724, column: 6, scope: !2059)
!2066 = !DILocalVariable(name: "depth", scope: !2059, file: !1, line: 6727, type: !700)
!2067 = !DILocation(line: 6727, column: 5, scope: !2059)
!2068 = !DILocation(line: 6729, column: 11, scope: !2059)
!2069 = !DILocation(line: 6729, column: 10, scope: !2059)
!2070 = !DILocation(line: 6730, column: 7, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !2059, file: !1, line: 6730, column: 7)
!2072 = !DILocation(line: 6730, column: 13, scope: !2071)
!2073 = !DILocation(line: 6730, column: 7, scope: !2059)
!2074 = !DILocalVariable(name: "exception", scope: !2075, file: !1, line: 6731, type: !919)
!2075 = distinct !DILexicalBlock(scope: !2071, file: !1, line: 6731, column: 5)
!2076 = !DILocation(line: 6731, column: 5, scope: !2075)
!2077 = !DILocation(line: 6732, column: 24, scope: !2059)
!2078 = !DILocation(line: 6732, column: 8, scope: !2059)
!2079 = !DILocation(line: 6732, column: 7, scope: !2059)
!2080 = !DILocation(line: 6733, column: 7, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2059, file: !1, line: 6733, column: 7)
!2082 = !DILocation(line: 6733, column: 12, scope: !2081)
!2083 = !DILocation(line: 6733, column: 7, scope: !2059)
!2084 = !DILocalVariable(name: "exception", scope: !2085, file: !1, line: 6734, type: !919)
!2085 = distinct !DILexicalBlock(scope: !2081, file: !1, line: 6734, column: 5)
!2086 = !DILocation(line: 6734, column: 5, scope: !2085)
!2087 = !DILocation(line: 6736, column: 28, scope: !2059)
!2088 = !DILocation(line: 6736, column: 10, scope: !2059)
!2089 = !DILocation(line: 6737, column: 12, scope: !2059)
!2090 = !DILocation(line: 6737, column: 3, scope: !2059)
!2091 = !DILocation(line: 6737, column: 9, scope: !2059)
!2092 = !DILocation(line: 6737, column: 11, scope: !2059)
!2093 = !DILocation(line: 6738, column: 29, scope: !2059)
!2094 = !DILocation(line: 6738, column: 35, scope: !2059)
!2095 = !DILocation(line: 6739, column: 14, scope: !2059)
!2096 = !DILocation(line: 6739, column: 20, scope: !2059)
!2097 = !DILocation(line: 6739, column: 5, scope: !2059)
!2098 = !DILocation(line: 6738, column: 10, scope: !2059)
!2099 = !DILocation(line: 6740, column: 7, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2059, file: !1, line: 6740, column: 7)
!2101 = !DILocation(line: 6740, column: 13, scope: !2100)
!2102 = !DILocation(line: 6740, column: 19, scope: !2100)
!2103 = !DILocation(line: 6740, column: 7, scope: !2059)
!2104 = !DILocation(line: 6741, column: 60, scope: !2100)
!2105 = !DILocation(line: 6741, column: 66, scope: !2100)
!2106 = !DILocation(line: 6741, column: 12, scope: !2100)
!2107 = !DILocation(line: 6741, column: 5, scope: !2100)
!2108 = !DILocation(line: 6742, column: 3, scope: !2059)
!2109 = !DILocation(line: 6742, column: 9, scope: !2059)
!2110 = !DILocation(line: 6742, column: 12, scope: !2059)
!2111 = !DILocation(line: 6743, column: 3, scope: !2059)
!2112 = !DILocation(line: 6743, column: 9, scope: !2059)
!2113 = !DILocation(line: 6743, column: 18, scope: !2059)
!2114 = !DILocation(line: 6744, column: 3, scope: !2059)
!2115 = !DILocation(line: 6744, column: 9, scope: !2059)
!2116 = !DILocation(line: 6744, column: 19, scope: !2059)
!2117 = !DILocation(line: 6745, column: 3, scope: !2059)
!2118 = !DILocation(line: 6745, column: 9, scope: !2059)
!2119 = !DILocation(line: 6745, column: 18, scope: !2059)
!2120 = !DILocation(line: 6746, column: 3, scope: !2059)
!2121 = !DILocation(line: 6746, column: 9, scope: !2059)
!2122 = !DILocation(line: 6746, column: 19, scope: !2059)
!2123 = !DILocation(line: 6747, column: 3, scope: !2059)
!2124 = !DILocation(line: 6747, column: 9, scope: !2059)
!2125 = !DILocation(line: 6747, column: 23, scope: !2059)
!2126 = !DILocation(line: 6748, column: 3, scope: !2059)
!2127 = !DILocation(line: 6748, column: 9, scope: !2059)
!2128 = !DILocation(line: 6748, column: 24, scope: !2059)
!2129 = !DILocation(line: 6748, column: 25, scope: !2059)
!2130 = !DILocation(line: 6749, column: 3, scope: !2059)
!2131 = !DILocation(line: 6749, column: 9, scope: !2059)
!2132 = !DILocation(line: 6749, column: 24, scope: !2059)
!2133 = !DILocation(line: 6749, column: 25, scope: !2059)
!2134 = !DILocation(line: 6750, column: 3, scope: !2059)
!2135 = !DILocation(line: 6750, column: 9, scope: !2059)
!2136 = !DILocation(line: 6750, column: 24, scope: !2059)
!2137 = !DILocation(line: 6750, column: 29, scope: !2059)
!2138 = !DILocation(line: 6751, column: 3, scope: !2059)
!2139 = !DILocation(line: 6751, column: 9, scope: !2059)
!2140 = !DILocation(line: 6751, column: 24, scope: !2059)
!2141 = !DILocation(line: 6751, column: 30, scope: !2059)
!2142 = !DILocation(line: 6752, column: 3, scope: !2059)
!2143 = !DILocation(line: 6752, column: 9, scope: !2059)
!2144 = !DILocation(line: 6752, column: 14, scope: !2059)
!2145 = !DILocation(line: 6753, column: 39, scope: !2059)
!2146 = !DILocation(line: 6753, column: 25, scope: !2059)
!2147 = !DILocation(line: 6753, column: 3, scope: !2059)
!2148 = !DILocation(line: 6753, column: 9, scope: !2059)
!2149 = !DILocation(line: 6753, column: 24, scope: !2059)
!2150 = !DILocation(line: 6755, column: 7, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2059, file: !1, line: 6755, column: 7)
!2152 = !DILocation(line: 6755, column: 13, scope: !2151)
!2153 = !DILocation(line: 6755, column: 29, scope: !2151)
!2154 = !DILocation(line: 6755, column: 7, scope: !2059)
!2155 = !DILocalVariable(name: "exception", scope: !2156, file: !1, line: 6756, type: !919)
!2156 = distinct !DILexicalBlock(scope: !2151, file: !1, line: 6756, column: 5)
!2157 = !DILocation(line: 6756, column: 5, scope: !2156)
!2158 = !DILocation(line: 6758, column: 3, scope: !2059)
!2159 = !DILocation(line: 6758, column: 9, scope: !2059)
!2160 = !DILocation(line: 6758, column: 19, scope: !2059)
!2161 = !DILocation(line: 6759, column: 3, scope: !2059)
!2162 = !DILocation(line: 6759, column: 9, scope: !2059)
!2163 = !DILocation(line: 6759, column: 21, scope: !2059)
!2164 = !DILocation(line: 6760, column: 3, scope: !2059)
!2165 = !DILocation(line: 6760, column: 9, scope: !2059)
!2166 = !DILocation(line: 6760, column: 23, scope: !2059)
!2167 = !DILocation(line: 6761, column: 3, scope: !2059)
!2168 = !DILocation(line: 6761, column: 9, scope: !2059)
!2169 = !DILocation(line: 6761, column: 18, scope: !2059)
!2170 = !DILocation(line: 6762, column: 15, scope: !2059)
!2171 = !DILocation(line: 6762, column: 3, scope: !2059)
!2172 = !DILocation(line: 6762, column: 9, scope: !2059)
!2173 = !DILocation(line: 6762, column: 14, scope: !2059)
!2174 = !DILocation(line: 6763, column: 19, scope: !2059)
!2175 = !DILocation(line: 6763, column: 3, scope: !2059)
!2176 = !DILocation(line: 6763, column: 9, scope: !2059)
!2177 = !DILocation(line: 6763, column: 18, scope: !2059)
!2178 = !DILocation(line: 6764, column: 3, scope: !2059)
!2179 = !DILocation(line: 6764, column: 9, scope: !2059)
!2180 = !DILocation(line: 6764, column: 16, scope: !2059)
!2181 = !DILocation(line: 6765, column: 15, scope: !2059)
!2182 = !DILocation(line: 6765, column: 3, scope: !2059)
!2183 = !DILocation(line: 6765, column: 9, scope: !2059)
!2184 = !DILocation(line: 6765, column: 14, scope: !2059)
!2185 = !DILocation(line: 6766, column: 3, scope: !2059)
!2186 = !DILocation(line: 6766, column: 9, scope: !2059)
!2187 = !DILocation(line: 6766, column: 18, scope: !2059)
!2188 = !DILocation(line: 6767, column: 18, scope: !2059)
!2189 = !DILocation(line: 6767, column: 3, scope: !2059)
!2190 = !DILocation(line: 6767, column: 17, scope: !2059)
!2191 = !DILocation(line: 6768, column: 10, scope: !2059)
!2192 = !DILocation(line: 6768, column: 3, scope: !2059)
!2193 = distinct !DISubprogram(name: "DrawAnnotation", scope: !1, file: !1, line: 763, type: !2194, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2194 = !DISubroutineType(types: !2195)
!2195 = !{null, !1172, !1203, !1203, !2196}
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!2198 = !DILocalVariable(name: "wand", arg: 1, scope: !2193, file: !1, line: 763, type: !1172)
!2199 = !DILocation(line: 763, column: 45, scope: !2193)
!2200 = !DILocalVariable(name: "x", arg: 2, scope: !2193, file: !1, line: 763, type: !1203)
!2201 = !DILocation(line: 763, column: 63, scope: !2193)
!2202 = !DILocalVariable(name: "y", arg: 3, scope: !2193, file: !1, line: 763, type: !1203)
!2203 = !DILocation(line: 763, column: 78, scope: !2193)
!2204 = !DILocalVariable(name: "text", arg: 4, scope: !2193, file: !1, line: 764, type: !2196)
!2205 = !DILocation(line: 764, column: 24, scope: !2193)
!2206 = !DILocalVariable(name: "escaped_text", scope: !2193, file: !1, line: 767, type: !692)
!2207 = !DILocation(line: 767, column: 6, scope: !2193)
!2208 = !DILocation(line: 771, column: 7, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2193, file: !1, line: 771, column: 7)
!2210 = !DILocation(line: 771, column: 13, scope: !2209)
!2211 = !DILocation(line: 771, column: 19, scope: !2209)
!2212 = !DILocation(line: 771, column: 7, scope: !2193)
!2213 = !DILocation(line: 772, column: 60, scope: !2209)
!2214 = !DILocation(line: 772, column: 66, scope: !2209)
!2215 = !DILocation(line: 772, column: 12, scope: !2209)
!2216 = !DILocation(line: 772, column: 5, scope: !2209)
!2217 = !DILocation(line: 774, column: 44, scope: !2193)
!2218 = !DILocation(line: 774, column: 16, scope: !2193)
!2219 = !DILocation(line: 774, column: 15, scope: !2193)
!2220 = !DILocation(line: 775, column: 7, scope: !2221)
!2221 = distinct !DILexicalBlock(scope: !2193, file: !1, line: 775, column: 7)
!2222 = !DILocation(line: 775, column: 20, scope: !2221)
!2223 = !DILocation(line: 775, column: 7, scope: !2193)
!2224 = !DILocation(line: 777, column: 24, scope: !2225)
!2225 = distinct !DILexicalBlock(scope: !2221, file: !1, line: 776, column: 5)
!2226 = !DILocation(line: 777, column: 55, scope: !2225)
!2227 = !DILocation(line: 777, column: 57, scope: !2225)
!2228 = !DILocation(line: 777, column: 59, scope: !2225)
!2229 = !DILocation(line: 777, column: 14, scope: !2225)
!2230 = !DILocation(line: 778, column: 34, scope: !2225)
!2231 = !DILocation(line: 778, column: 20, scope: !2225)
!2232 = !DILocation(line: 778, column: 19, scope: !2225)
!2233 = !DILocation(line: 779, column: 5, scope: !2225)
!2234 = !DILocation(line: 780, column: 1, scope: !2193)
!2235 = distinct !DISubprogram(name: "DrawArc", scope: !1, file: !1, line: 818, type: !2236, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2236 = !DISubroutineType(types: !2237)
!2237 = !{null, !1172, !1203, !1203, !1203, !1203, !1203, !1203}
!2238 = !DILocalVariable(name: "wand", arg: 1, scope: !2235, file: !1, line: 818, type: !1172)
!2239 = !DILocation(line: 818, column: 38, scope: !2235)
!2240 = !DILocalVariable(name: "sx", arg: 2, scope: !2235, file: !1, line: 818, type: !1203)
!2241 = !DILocation(line: 818, column: 56, scope: !2235)
!2242 = !DILocalVariable(name: "sy", arg: 3, scope: !2235, file: !1, line: 818, type: !1203)
!2243 = !DILocation(line: 818, column: 72, scope: !2235)
!2244 = !DILocalVariable(name: "ex", arg: 4, scope: !2235, file: !1, line: 819, type: !1203)
!2245 = !DILocation(line: 819, column: 16, scope: !2235)
!2246 = !DILocalVariable(name: "ey", arg: 5, scope: !2235, file: !1, line: 819, type: !1203)
!2247 = !DILocation(line: 819, column: 32, scope: !2235)
!2248 = !DILocalVariable(name: "sd", arg: 6, scope: !2235, file: !1, line: 819, type: !1203)
!2249 = !DILocation(line: 819, column: 48, scope: !2235)
!2250 = !DILocalVariable(name: "ed", arg: 7, scope: !2235, file: !1, line: 819, type: !1203)
!2251 = !DILocation(line: 819, column: 64, scope: !2235)
!2252 = !DILocation(line: 823, column: 7, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2235, file: !1, line: 823, column: 7)
!2254 = !DILocation(line: 823, column: 13, scope: !2253)
!2255 = !DILocation(line: 823, column: 19, scope: !2253)
!2256 = !DILocation(line: 823, column: 7, scope: !2235)
!2257 = !DILocation(line: 824, column: 60, scope: !2253)
!2258 = !DILocation(line: 824, column: 66, scope: !2253)
!2259 = !DILocation(line: 824, column: 12, scope: !2253)
!2260 = !DILocation(line: 824, column: 5, scope: !2253)
!2261 = !DILocation(line: 825, column: 20, scope: !2235)
!2262 = !DILocation(line: 825, column: 69, scope: !2235)
!2263 = !DILocation(line: 825, column: 72, scope: !2235)
!2264 = !DILocation(line: 825, column: 75, scope: !2235)
!2265 = !DILocation(line: 826, column: 5, scope: !2235)
!2266 = !DILocation(line: 826, column: 8, scope: !2235)
!2267 = !DILocation(line: 826, column: 11, scope: !2235)
!2268 = !DILocation(line: 825, column: 10, scope: !2235)
!2269 = !DILocation(line: 827, column: 1, scope: !2235)
!2270 = distinct !DISubprogram(name: "DrawBezier", scope: !1, file: !1, line: 856, type: !2271, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2271 = !DISubroutineType(types: !2272)
!2272 = !{null, !1172, !1098, !2273}
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !781)
!2275 = !DILocalVariable(name: "wand", arg: 1, scope: !2270, file: !1, line: 856, type: !1172)
!2276 = !DILocation(line: 856, column: 41, scope: !2270)
!2277 = !DILocalVariable(name: "number_coordinates", arg: 2, scope: !2270, file: !1, line: 857, type: !1098)
!2278 = !DILocation(line: 857, column: 16, scope: !2270)
!2279 = !DILocalVariable(name: "coordinates", arg: 3, scope: !2270, file: !1, line: 857, type: !2273)
!2280 = !DILocation(line: 857, column: 52, scope: !2270)
!2281 = !DILocation(line: 861, column: 7, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2270, file: !1, line: 861, column: 7)
!2283 = !DILocation(line: 861, column: 13, scope: !2282)
!2284 = !DILocation(line: 861, column: 19, scope: !2282)
!2285 = !DILocation(line: 861, column: 7, scope: !2270)
!2286 = !DILocation(line: 862, column: 60, scope: !2282)
!2287 = !DILocation(line: 862, column: 66, scope: !2282)
!2288 = !DILocation(line: 862, column: 12, scope: !2282)
!2289 = !DILocation(line: 862, column: 5, scope: !2282)
!2290 = !DILocation(line: 864, column: 26, scope: !2270)
!2291 = !DILocation(line: 864, column: 40, scope: !2270)
!2292 = !DILocation(line: 864, column: 59, scope: !2270)
!2293 = !DILocation(line: 864, column: 3, scope: !2270)
!2294 = !DILocation(line: 865, column: 1, scope: !2270)
!2295 = distinct !DISubprogram(name: "MvgAppendPointsCommand", scope: !1, file: !1, line: 415, type: !2296, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{null, !1172, !891, !1098, !2273}
!2298 = !DILocalVariable(name: "wand", arg: 1, scope: !2295, file: !1, line: 415, type: !1172)
!2299 = !DILocation(line: 415, column: 49, scope: !2295)
!2300 = !DILocalVariable(name: "command", arg: 2, scope: !2295, file: !1, line: 415, type: !891)
!2301 = !DILocation(line: 415, column: 66, scope: !2295)
!2302 = !DILocalVariable(name: "number_coordinates", arg: 3, scope: !2295, file: !1, line: 416, type: !1098)
!2303 = !DILocation(line: 416, column: 16, scope: !2295)
!2304 = !DILocalVariable(name: "coordinates", arg: 4, scope: !2295, file: !1, line: 416, type: !2273)
!2305 = !DILocation(line: 416, column: 52, scope: !2295)
!2306 = !DILocalVariable(name: "coordinate", scope: !2295, file: !1, line: 419, type: !2273)
!2307 = !DILocation(line: 419, column: 6, scope: !2295)
!2308 = !DILocalVariable(name: "i", scope: !2295, file: !1, line: 422, type: !700)
!2309 = !DILocation(line: 422, column: 5, scope: !2295)
!2310 = !DILocation(line: 424, column: 20, scope: !2295)
!2311 = !DILocation(line: 424, column: 30, scope: !2295)
!2312 = !DILocation(line: 424, column: 10, scope: !2295)
!2313 = !DILocation(line: 425, column: 10, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2295, file: !1, line: 425, column: 3)
!2315 = !DILocation(line: 425, column: 9, scope: !2314)
!2316 = !DILocation(line: 425, column: 41, scope: !2314)
!2317 = !DILocation(line: 425, column: 40, scope: !2314)
!2318 = !DILocation(line: 425, column: 8, scope: !2314)
!2319 = !DILocation(line: 425, column: 54, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2314, file: !1, line: 425, column: 3)
!2321 = !DILocation(line: 425, column: 56, scope: !2320)
!2322 = !DILocation(line: 425, column: 3, scope: !2314)
!2323 = !DILocation(line: 427, column: 30, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2320, file: !1, line: 426, column: 3)
!2325 = !DILocation(line: 427, column: 50, scope: !2324)
!2326 = !DILocation(line: 427, column: 62, scope: !2324)
!2327 = !DILocation(line: 427, column: 64, scope: !2324)
!2328 = !DILocation(line: 427, column: 76, scope: !2324)
!2329 = !DILocation(line: 427, column: 12, scope: !2324)
!2330 = !DILocation(line: 428, column: 15, scope: !2324)
!2331 = !DILocation(line: 429, column: 3, scope: !2324)
!2332 = !DILocation(line: 425, column: 63, scope: !2320)
!2333 = !DILocation(line: 425, column: 3, scope: !2320)
!2334 = distinct !{!2334, !2322, !2335}
!2335 = !DILocation(line: 429, column: 3, scope: !2314)
!2336 = !DILocation(line: 430, column: 20, scope: !2295)
!2337 = !DILocation(line: 430, column: 10, scope: !2295)
!2338 = !DILocation(line: 431, column: 1, scope: !2295)
!2339 = distinct !DISubprogram(name: "DrawCircle", scope: !1, file: !1, line: 898, type: !2340, scopeLine: 900, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2340 = !DISubroutineType(types: !2341)
!2341 = !{null, !1172, !1203, !1203, !1203, !1203}
!2342 = !DILocalVariable(name: "wand", arg: 1, scope: !2339, file: !1, line: 898, type: !1172)
!2343 = !DILocation(line: 898, column: 41, scope: !2339)
!2344 = !DILocalVariable(name: "ox", arg: 2, scope: !2339, file: !1, line: 898, type: !1203)
!2345 = !DILocation(line: 898, column: 59, scope: !2339)
!2346 = !DILocalVariable(name: "oy", arg: 3, scope: !2339, file: !1, line: 898, type: !1203)
!2347 = !DILocation(line: 898, column: 75, scope: !2339)
!2348 = !DILocalVariable(name: "px", arg: 4, scope: !2339, file: !1, line: 899, type: !1203)
!2349 = !DILocation(line: 899, column: 16, scope: !2339)
!2350 = !DILocalVariable(name: "py", arg: 5, scope: !2339, file: !1, line: 899, type: !1203)
!2351 = !DILocation(line: 899, column: 32, scope: !2339)
!2352 = !DILocation(line: 903, column: 7, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !2339, file: !1, line: 903, column: 7)
!2354 = !DILocation(line: 903, column: 13, scope: !2353)
!2355 = !DILocation(line: 903, column: 19, scope: !2353)
!2356 = !DILocation(line: 903, column: 7, scope: !2339)
!2357 = !DILocation(line: 904, column: 60, scope: !2353)
!2358 = !DILocation(line: 904, column: 66, scope: !2353)
!2359 = !DILocation(line: 904, column: 12, scope: !2353)
!2360 = !DILocation(line: 904, column: 5, scope: !2353)
!2361 = !DILocation(line: 905, column: 20, scope: !2339)
!2362 = !DILocation(line: 905, column: 60, scope: !2339)
!2363 = !DILocation(line: 905, column: 63, scope: !2339)
!2364 = !DILocation(line: 905, column: 66, scope: !2339)
!2365 = !DILocation(line: 905, column: 69, scope: !2339)
!2366 = !DILocation(line: 905, column: 10, scope: !2339)
!2367 = !DILocation(line: 906, column: 1, scope: !2339)
!2368 = distinct !DISubprogram(name: "DrawClearException", scope: !1, file: !1, line: 930, type: !2369, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2369 = !DISubroutineType(types: !2370)
!2370 = !{!764, !1172}
!2371 = !DILocalVariable(name: "wand", arg: 1, scope: !2368, file: !1, line: 930, type: !1172)
!2372 = !DILocation(line: 930, column: 62, scope: !2368)
!2373 = !DILocation(line: 934, column: 7, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2368, file: !1, line: 934, column: 7)
!2375 = !DILocation(line: 934, column: 13, scope: !2374)
!2376 = !DILocation(line: 934, column: 19, scope: !2374)
!2377 = !DILocation(line: 934, column: 7, scope: !2368)
!2378 = !DILocation(line: 935, column: 60, scope: !2374)
!2379 = !DILocation(line: 935, column: 66, scope: !2374)
!2380 = !DILocation(line: 935, column: 12, scope: !2374)
!2381 = !DILocation(line: 935, column: 5, scope: !2374)
!2382 = !DILocation(line: 936, column: 24, scope: !2368)
!2383 = !DILocation(line: 936, column: 30, scope: !2368)
!2384 = !DILocation(line: 936, column: 3, scope: !2368)
!2385 = !DILocation(line: 937, column: 3, scope: !2368)
!2386 = distinct !DISubprogram(name: "DrawComposite", scope: !1, file: !1, line: 981, type: !2387, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{!764, !1172, !2389, !1203, !1203, !1203, !1203, !2390}
!2389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !851)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickWand", file: !2392, line: 69, baseType: !2393)
!2392 = !DIFile(filename: "./wand/MagickWand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickWand", file: !2394, line: 50, size: 33280, elements: !2395)
!2394 = !DIFile(filename: "./wand/magick-wand-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2395 = !{!2396, !2397, !2398, !2399, !2400, !2413, !2414, !2415, !2416, !2417}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2393, file: !2394, line: 53, baseType: !700, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2393, file: !2394, line: 56, baseType: !911, size: 32768, offset: 64)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !2393, file: !2394, line: 59, baseType: !1181, size: 64, offset: 32832)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "image_info", scope: !2393, file: !2394, line: 62, baseType: !1038, size: 64, offset: 32896)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_info", scope: !2393, file: !2394, line: 65, baseType: !2401, size: 64, offset: 32960)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantizeInfo", file: !566, line: 57, baseType: !2403)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_QuantizeInfo", file: !566, line: 35, size: 384, elements: !2404)
!2404 = !{!2405, !2406, !2407, !2408, !2409, !2410, !2411}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "number_colors", scope: !2403, file: !566, line: 38, baseType: !700, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "tree_depth", scope: !2403, file: !566, line: 41, baseType: !700, size: 64, offset: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !2403, file: !566, line: 44, baseType: !764, size: 32, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2403, file: !566, line: 47, baseType: !762, size: 32, offset: 160)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "measure_error", scope: !2403, file: !566, line: 50, baseType: !764, size: 32, offset: 192)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !2403, file: !566, line: 53, baseType: !700, size: 64, offset: 256)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "dither_method", scope: !2403, file: !566, line: 56, baseType: !2412, size: 32, offset: 320)
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "DitherMethod", file: !566, line: 33, baseType: !565)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2393, file: !2394, line: 68, baseType: !788, size: 64, offset: 33024)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "insert_before", scope: !2393, file: !2394, line: 71, baseType: !764, size: 32, offset: 33088)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "image_pending", scope: !2393, file: !2394, line: 72, baseType: !764, size: 32, offset: 33120)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !2393, file: !2394, line: 73, baseType: !764, size: 32, offset: 33152)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !2393, file: !2394, line: 76, baseType: !700, size: 64, offset: 33216)
!2418 = !DILocalVariable(name: "wand", arg: 1, scope: !2386, file: !1, line: 981, type: !1172)
!2419 = !DILocation(line: 981, column: 57, scope: !2386)
!2420 = !DILocalVariable(name: "compose", arg: 2, scope: !2386, file: !1, line: 982, type: !2389)
!2421 = !DILocation(line: 982, column: 27, scope: !2386)
!2422 = !DILocalVariable(name: "x", arg: 3, scope: !2386, file: !1, line: 982, type: !1203)
!2423 = !DILocation(line: 982, column: 48, scope: !2386)
!2424 = !DILocalVariable(name: "y", arg: 4, scope: !2386, file: !1, line: 982, type: !1203)
!2425 = !DILocation(line: 982, column: 63, scope: !2386)
!2426 = !DILocalVariable(name: "width", arg: 5, scope: !2386, file: !1, line: 983, type: !1203)
!2427 = !DILocation(line: 983, column: 16, scope: !2386)
!2428 = !DILocalVariable(name: "height", arg: 6, scope: !2386, file: !1, line: 983, type: !1203)
!2429 = !DILocation(line: 983, column: 35, scope: !2386)
!2430 = !DILocalVariable(name: "magick_wand", arg: 7, scope: !2386, file: !1, line: 983, type: !2390)
!2431 = !DILocation(line: 983, column: 54, scope: !2386)
!2432 = !DILocalVariable(name: "base64", scope: !2386, file: !1, line: 987, type: !692)
!2433 = !DILocation(line: 987, column: 6, scope: !2386)
!2434 = !DILocalVariable(name: "media_type", scope: !2386, file: !1, line: 988, type: !692)
!2435 = !DILocation(line: 988, column: 6, scope: !2386)
!2436 = !DILocalVariable(name: "mode", scope: !2386, file: !1, line: 991, type: !891)
!2437 = !DILocation(line: 991, column: 6, scope: !2386)
!2438 = !DILocalVariable(name: "image_info", scope: !2386, file: !1, line: 994, type: !1038)
!2439 = !DILocation(line: 994, column: 6, scope: !2386)
!2440 = !DILocalVariable(name: "clone_image", scope: !2386, file: !1, line: 997, type: !788)
!2441 = !DILocation(line: 997, column: 6, scope: !2386)
!2442 = !DILocalVariable(name: "image", scope: !2386, file: !1, line: 998, type: !788)
!2443 = !DILocation(line: 998, column: 6, scope: !2386)
!2444 = !DILocalVariable(name: "p", scope: !2386, file: !1, line: 1001, type: !692)
!2445 = !DILocation(line: 1001, column: 6, scope: !2386)
!2446 = !DILocalVariable(name: "i", scope: !2386, file: !1, line: 1004, type: !704)
!2447 = !DILocation(line: 1004, column: 5, scope: !2386)
!2448 = !DILocalVariable(name: "blob_length", scope: !2386, file: !1, line: 1007, type: !700)
!2449 = !DILocation(line: 1007, column: 5, scope: !2386)
!2450 = !DILocalVariable(name: "encoded_length", scope: !2386, file: !1, line: 1008, type: !700)
!2451 = !DILocation(line: 1008, column: 5, scope: !2386)
!2452 = !DILocalVariable(name: "blob", scope: !2386, file: !1, line: 1011, type: !946)
!2453 = !DILocation(line: 1011, column: 6, scope: !2386)
!2454 = !DILocation(line: 1015, column: 7, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 1015, column: 7)
!2456 = !DILocation(line: 1015, column: 13, scope: !2455)
!2457 = !DILocation(line: 1015, column: 19, scope: !2455)
!2458 = !DILocation(line: 1015, column: 7, scope: !2386)
!2459 = !DILocation(line: 1016, column: 60, scope: !2455)
!2460 = !DILocation(line: 1016, column: 66, scope: !2455)
!2461 = !DILocation(line: 1016, column: 12, scope: !2455)
!2462 = !DILocation(line: 1016, column: 5, scope: !2455)
!2463 = !DILocation(line: 1018, column: 32, scope: !2386)
!2464 = !DILocation(line: 1018, column: 9, scope: !2386)
!2465 = !DILocation(line: 1018, column: 8, scope: !2386)
!2466 = !DILocation(line: 1019, column: 7, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 1019, column: 7)
!2468 = !DILocation(line: 1019, column: 13, scope: !2467)
!2469 = !DILocation(line: 1019, column: 7, scope: !2386)
!2470 = !DILocation(line: 1020, column: 5, scope: !2467)
!2471 = !DILocation(line: 1021, column: 26, scope: !2386)
!2472 = !DILocation(line: 1021, column: 47, scope: !2386)
!2473 = !DILocation(line: 1021, column: 53, scope: !2386)
!2474 = !DILocation(line: 1021, column: 15, scope: !2386)
!2475 = !DILocation(line: 1021, column: 14, scope: !2386)
!2476 = !DILocation(line: 1022, column: 7, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 1022, column: 7)
!2478 = !DILocation(line: 1022, column: 19, scope: !2477)
!2479 = !DILocation(line: 1022, column: 7, scope: !2386)
!2480 = !DILocation(line: 1023, column: 5, scope: !2477)
!2481 = !DILocation(line: 1024, column: 14, scope: !2386)
!2482 = !DILocation(line: 1024, column: 13, scope: !2386)
!2483 = !DILocation(line: 1025, column: 27, scope: !2386)
!2484 = !DILocation(line: 1025, column: 39, scope: !2386)
!2485 = !DILocation(line: 1025, column: 10, scope: !2386)
!2486 = !DILocation(line: 1026, column: 14, scope: !2386)
!2487 = !DILocation(line: 1027, column: 38, scope: !2386)
!2488 = !DILocation(line: 1027, column: 49, scope: !2386)
!2489 = !DILocation(line: 1028, column: 5, scope: !2386)
!2490 = !DILocation(line: 1028, column: 11, scope: !2386)
!2491 = !DILocation(line: 1027, column: 26, scope: !2386)
!2492 = !DILocation(line: 1027, column: 7, scope: !2386)
!2493 = !DILocation(line: 1029, column: 31, scope: !2386)
!2494 = !DILocation(line: 1029, column: 14, scope: !2386)
!2495 = !DILocation(line: 1029, column: 13, scope: !2386)
!2496 = !DILocation(line: 1030, column: 32, scope: !2386)
!2497 = !DILocation(line: 1030, column: 15, scope: !2386)
!2498 = !DILocation(line: 1030, column: 14, scope: !2386)
!2499 = !DILocation(line: 1031, column: 7, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 1031, column: 7)
!2501 = !DILocation(line: 1031, column: 12, scope: !2500)
!2502 = !DILocation(line: 1031, column: 7, scope: !2386)
!2503 = !DILocation(line: 1032, column: 5, scope: !2500)
!2504 = !DILocation(line: 1033, column: 17, scope: !2386)
!2505 = !DILocation(line: 1034, column: 23, scope: !2386)
!2506 = !DILocation(line: 1034, column: 28, scope: !2386)
!2507 = !DILocation(line: 1034, column: 10, scope: !2386)
!2508 = !DILocation(line: 1034, column: 9, scope: !2386)
!2509 = !DILocation(line: 1035, column: 49, scope: !2386)
!2510 = !DILocation(line: 1035, column: 26, scope: !2386)
!2511 = !DILocation(line: 1035, column: 7, scope: !2386)
!2512 = !DILocation(line: 1036, column: 7, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 1036, column: 7)
!2514 = !DILocation(line: 1036, column: 14, scope: !2513)
!2515 = !DILocation(line: 1036, column: 7, scope: !2386)
!2516 = !DILocalVariable(name: "buffer", scope: !2517, file: !1, line: 1039, type: !911)
!2517 = distinct !DILexicalBlock(scope: !2513, file: !1, line: 1037, column: 5)
!2518 = !DILocation(line: 1039, column: 9, scope: !2517)
!2519 = !DILocation(line: 1041, column: 33, scope: !2517)
!2520 = !DILocation(line: 1042, column: 13, scope: !2517)
!2521 = !DILocation(line: 1042, column: 12, scope: !2517)
!2522 = !DILocation(line: 1042, column: 24, scope: !2517)
!2523 = !DILocation(line: 1042, column: 27, scope: !2517)
!2524 = !DILocation(line: 1041, column: 68, scope: !2517)
!2525 = !DILocation(line: 1041, column: 14, scope: !2517)
!2526 = !DILocation(line: 1043, column: 7, scope: !2517)
!2527 = !DILocation(line: 1045, column: 7, scope: !2517)
!2528 = !DILocation(line: 1047, column: 63, scope: !2386)
!2529 = !DILocation(line: 1047, column: 53, scope: !2386)
!2530 = !DILocation(line: 1047, column: 8, scope: !2386)
!2531 = !DILocation(line: 1047, column: 7, scope: !2386)
!2532 = !DILocation(line: 1048, column: 27, scope: !2386)
!2533 = !DILocation(line: 1048, column: 34, scope: !2386)
!2534 = !DILocation(line: 1048, column: 14, scope: !2386)
!2535 = !DILocation(line: 1048, column: 13, scope: !2386)
!2536 = !DILocation(line: 1049, column: 20, scope: !2386)
!2537 = !DILocation(line: 1050, column: 5, scope: !2386)
!2538 = !DILocation(line: 1050, column: 10, scope: !2386)
!2539 = !DILocation(line: 1050, column: 12, scope: !2386)
!2540 = !DILocation(line: 1050, column: 14, scope: !2386)
!2541 = !DILocation(line: 1050, column: 20, scope: !2386)
!2542 = !DILocation(line: 1050, column: 27, scope: !2386)
!2543 = !DILocation(line: 1049, column: 10, scope: !2386)
!2544 = !DILocation(line: 1051, column: 5, scope: !2386)
!2545 = !DILocation(line: 1051, column: 4, scope: !2386)
!2546 = !DILocation(line: 1052, column: 20, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 1052, column: 3)
!2548 = !DILocation(line: 1052, column: 9, scope: !2547)
!2549 = !DILocation(line: 1052, column: 8, scope: !2547)
!2550 = !DILocation(line: 1052, column: 36, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2547, file: !1, line: 1052, column: 3)
!2552 = !DILocation(line: 1052, column: 38, scope: !2551)
!2553 = !DILocation(line: 1052, column: 3, scope: !2547)
!2554 = !DILocation(line: 1054, column: 22, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2551, file: !1, line: 1053, column: 3)
!2556 = !DILocation(line: 1054, column: 35, scope: !2555)
!2557 = !DILocation(line: 1054, column: 12, scope: !2555)
!2558 = !DILocation(line: 1055, column: 6, scope: !2555)
!2559 = !DILocation(line: 1056, column: 9, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2555, file: !1, line: 1056, column: 9)
!2561 = !DILocation(line: 1056, column: 11, scope: !2560)
!2562 = !DILocation(line: 1056, column: 9, scope: !2555)
!2563 = !DILocation(line: 1057, column: 24, scope: !2560)
!2564 = !DILocation(line: 1057, column: 14, scope: !2560)
!2565 = !DILocation(line: 1057, column: 7, scope: !2560)
!2566 = !DILocation(line: 1058, column: 3, scope: !2555)
!2567 = !DILocation(line: 1052, column: 44, scope: !2551)
!2568 = !DILocation(line: 1052, column: 3, scope: !2551)
!2569 = distinct !{!2569, !2553, !2570}
!2570 = !DILocation(line: 1058, column: 3, scope: !2547)
!2571 = !DILocation(line: 1059, column: 20, scope: !2386)
!2572 = !DILocation(line: 1059, column: 10, scope: !2386)
!2573 = !DILocation(line: 1060, column: 28, scope: !2386)
!2574 = !DILocation(line: 1060, column: 14, scope: !2386)
!2575 = !DILocation(line: 1060, column: 13, scope: !2386)
!2576 = !DILocation(line: 1061, column: 24, scope: !2386)
!2577 = !DILocation(line: 1061, column: 10, scope: !2386)
!2578 = !DILocation(line: 1061, column: 9, scope: !2386)
!2579 = !DILocation(line: 1062, column: 3, scope: !2386)
!2580 = !DILocation(line: 1063, column: 1, scope: !2386)
!2581 = distinct !DISubprogram(name: "DrawColor", scope: !1, file: !1, line: 1101, type: !2582, scopeLine: 1103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2582 = !DISubroutineType(types: !2583)
!2583 = !{null, !1172, !1203, !1203, !2584}
!2584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2585)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintMethod", file: !369, line: 101, baseType: !648)
!2586 = !DILocalVariable(name: "wand", arg: 1, scope: !2581, file: !1, line: 1101, type: !1172)
!2587 = !DILocation(line: 1101, column: 40, scope: !2581)
!2588 = !DILocalVariable(name: "x", arg: 2, scope: !2581, file: !1, line: 1101, type: !1203)
!2589 = !DILocation(line: 1101, column: 58, scope: !2581)
!2590 = !DILocalVariable(name: "y", arg: 3, scope: !2581, file: !1, line: 1101, type: !1203)
!2591 = !DILocation(line: 1101, column: 73, scope: !2581)
!2592 = !DILocalVariable(name: "paint_method", arg: 4, scope: !2581, file: !1, line: 1102, type: !2584)
!2593 = !DILocation(line: 1102, column: 21, scope: !2581)
!2594 = !DILocation(line: 1106, column: 7, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2581, file: !1, line: 1106, column: 7)
!2596 = !DILocation(line: 1106, column: 13, scope: !2595)
!2597 = !DILocation(line: 1106, column: 19, scope: !2595)
!2598 = !DILocation(line: 1106, column: 7, scope: !2581)
!2599 = !DILocation(line: 1107, column: 60, scope: !2595)
!2600 = !DILocation(line: 1107, column: 66, scope: !2595)
!2601 = !DILocation(line: 1107, column: 12, scope: !2595)
!2602 = !DILocation(line: 1107, column: 5, scope: !2595)
!2603 = !DILocation(line: 1108, column: 20, scope: !2581)
!2604 = !DILocation(line: 1108, column: 52, scope: !2581)
!2605 = !DILocation(line: 1108, column: 54, scope: !2581)
!2606 = !DILocation(line: 1109, column: 35, scope: !2581)
!2607 = !DILocation(line: 1109, column: 25, scope: !2581)
!2608 = !DILocation(line: 1108, column: 56, scope: !2581)
!2609 = !DILocation(line: 1108, column: 10, scope: !2581)
!2610 = !DILocation(line: 1110, column: 1, scope: !2581)
!2611 = distinct !DISubprogram(name: "DrawComment", scope: !1, file: !1, line: 1136, type: !2612, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{null, !1172, !891}
!2614 = !DILocalVariable(name: "wand", arg: 1, scope: !2611, file: !1, line: 1136, type: !1172)
!2615 = !DILocation(line: 1136, column: 42, scope: !2611)
!2616 = !DILocalVariable(name: "comment", arg: 2, scope: !2611, file: !1, line: 1136, type: !891)
!2617 = !DILocation(line: 1136, column: 59, scope: !2611)
!2618 = !DILocation(line: 1138, column: 20, scope: !2611)
!2619 = !DILocation(line: 1138, column: 33, scope: !2611)
!2620 = !DILocation(line: 1138, column: 10, scope: !2611)
!2621 = !DILocation(line: 1139, column: 1, scope: !2611)
!2622 = distinct !DISubprogram(name: "DrawEllipse", scope: !1, file: !1, line: 1176, type: !2236, scopeLine: 1178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2623 = !DILocalVariable(name: "wand", arg: 1, scope: !2622, file: !1, line: 1176, type: !1172)
!2624 = !DILocation(line: 1176, column: 42, scope: !2622)
!2625 = !DILocalVariable(name: "ox", arg: 2, scope: !2622, file: !1, line: 1176, type: !1203)
!2626 = !DILocation(line: 1176, column: 60, scope: !2622)
!2627 = !DILocalVariable(name: "oy", arg: 3, scope: !2622, file: !1, line: 1176, type: !1203)
!2628 = !DILocation(line: 1176, column: 76, scope: !2622)
!2629 = !DILocalVariable(name: "rx", arg: 4, scope: !2622, file: !1, line: 1177, type: !1203)
!2630 = !DILocation(line: 1177, column: 16, scope: !2622)
!2631 = !DILocalVariable(name: "ry", arg: 5, scope: !2622, file: !1, line: 1177, type: !1203)
!2632 = !DILocation(line: 1177, column: 32, scope: !2622)
!2633 = !DILocalVariable(name: "start", arg: 6, scope: !2622, file: !1, line: 1177, type: !1203)
!2634 = !DILocation(line: 1177, column: 48, scope: !2622)
!2635 = !DILocalVariable(name: "end", arg: 7, scope: !2622, file: !1, line: 1177, type: !1203)
!2636 = !DILocation(line: 1177, column: 67, scope: !2622)
!2637 = !DILocation(line: 1181, column: 7, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2622, file: !1, line: 1181, column: 7)
!2639 = !DILocation(line: 1181, column: 13, scope: !2638)
!2640 = !DILocation(line: 1181, column: 19, scope: !2638)
!2641 = !DILocation(line: 1181, column: 7, scope: !2622)
!2642 = !DILocation(line: 1182, column: 60, scope: !2638)
!2643 = !DILocation(line: 1182, column: 66, scope: !2638)
!2644 = !DILocation(line: 1182, column: 12, scope: !2638)
!2645 = !DILocation(line: 1182, column: 5, scope: !2638)
!2646 = !DILocation(line: 1183, column: 20, scope: !2622)
!2647 = !DILocation(line: 1183, column: 73, scope: !2622)
!2648 = !DILocation(line: 1183, column: 76, scope: !2622)
!2649 = !DILocation(line: 1184, column: 5, scope: !2622)
!2650 = !DILocation(line: 1184, column: 8, scope: !2622)
!2651 = !DILocation(line: 1184, column: 11, scope: !2622)
!2652 = !DILocation(line: 1184, column: 17, scope: !2622)
!2653 = !DILocation(line: 1183, column: 10, scope: !2622)
!2654 = !DILocation(line: 1185, column: 1, scope: !2622)
!2655 = distinct !DISubprogram(name: "DrawGetBorderColor", scope: !1, file: !1, line: 1213, type: !2656, scopeLine: 1215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{null, !1212, !2658}
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelWand", file: !2660, line: 26, baseType: !2661)
!2660 = !DIFile(filename: "./wand/pixel-wand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2661 = !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelWand", file: !2660, line: 25, flags: DIFlagFwdDecl)
!2662 = !DILocalVariable(name: "wand", arg: 1, scope: !2655, file: !1, line: 1213, type: !1212)
!2663 = !DILocation(line: 1213, column: 55, scope: !2655)
!2664 = !DILocalVariable(name: "border_color", arg: 2, scope: !2655, file: !1, line: 1214, type: !2658)
!2665 = !DILocation(line: 1214, column: 14, scope: !2655)
!2666 = !DILocation(line: 1219, column: 7, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2655, file: !1, line: 1219, column: 7)
!2668 = !DILocation(line: 1219, column: 13, scope: !2667)
!2669 = !DILocation(line: 1219, column: 19, scope: !2667)
!2670 = !DILocation(line: 1219, column: 7, scope: !2655)
!2671 = !DILocation(line: 1220, column: 60, scope: !2667)
!2672 = !DILocation(line: 1220, column: 66, scope: !2667)
!2673 = !DILocation(line: 1220, column: 12, scope: !2667)
!2674 = !DILocation(line: 1220, column: 5, scope: !2667)
!2675 = !DILocation(line: 1221, column: 24, scope: !2655)
!2676 = !DILocation(line: 1221, column: 38, scope: !2655)
!2677 = !DILocation(line: 1221, column: 54, scope: !2655)
!2678 = !DILocation(line: 1221, column: 3, scope: !2655)
!2679 = !DILocation(line: 1222, column: 1, scope: !2655)
!2680 = distinct !DISubprogram(name: "DrawGetClipPath", scope: !1, file: !1, line: 1247, type: !2681, scopeLine: 1248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!692, !1212}
!2683 = !DILocalVariable(name: "wand", arg: 1, scope: !2680, file: !1, line: 1247, type: !1212)
!2684 = !DILocation(line: 1247, column: 53, scope: !2680)
!2685 = !DILocation(line: 1251, column: 7, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2680, file: !1, line: 1251, column: 7)
!2687 = !DILocation(line: 1251, column: 13, scope: !2686)
!2688 = !DILocation(line: 1251, column: 19, scope: !2686)
!2689 = !DILocation(line: 1251, column: 7, scope: !2680)
!2690 = !DILocation(line: 1252, column: 60, scope: !2686)
!2691 = !DILocation(line: 1252, column: 66, scope: !2686)
!2692 = !DILocation(line: 1252, column: 12, scope: !2686)
!2693 = !DILocation(line: 1252, column: 5, scope: !2686)
!2694 = !DILocation(line: 1253, column: 7, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2680, file: !1, line: 1253, column: 7)
!2696 = !DILocation(line: 1253, column: 23, scope: !2695)
!2697 = !DILocation(line: 1253, column: 33, scope: !2695)
!2698 = !DILocation(line: 1253, column: 7, scope: !2680)
!2699 = !DILocation(line: 1254, column: 35, scope: !2695)
!2700 = !DILocation(line: 1254, column: 51, scope: !2695)
!2701 = !DILocation(line: 1254, column: 21, scope: !2695)
!2702 = !DILocation(line: 1254, column: 5, scope: !2695)
!2703 = !DILocation(line: 1255, column: 3, scope: !2680)
!2704 = !DILocation(line: 1256, column: 1, scope: !2680)
!2705 = distinct !DISubprogram(name: "DrawGetClipRule", scope: !1, file: !1, line: 1281, type: !2706, scopeLine: 1282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{!983, !1212}
!2708 = !DILocalVariable(name: "wand", arg: 1, scope: !2705, file: !1, line: 1281, type: !1212)
!2709 = !DILocation(line: 1281, column: 56, scope: !2705)
!2710 = !DILocation(line: 1285, column: 7, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2705, file: !1, line: 1285, column: 7)
!2712 = !DILocation(line: 1285, column: 13, scope: !2711)
!2713 = !DILocation(line: 1285, column: 19, scope: !2711)
!2714 = !DILocation(line: 1285, column: 7, scope: !2705)
!2715 = !DILocation(line: 1286, column: 60, scope: !2711)
!2716 = !DILocation(line: 1286, column: 66, scope: !2711)
!2717 = !DILocation(line: 1286, column: 12, scope: !2711)
!2718 = !DILocation(line: 1286, column: 5, scope: !2711)
!2719 = !DILocation(line: 1287, column: 10, scope: !2705)
!2720 = !DILocation(line: 1287, column: 26, scope: !2705)
!2721 = !DILocation(line: 1287, column: 3, scope: !2705)
!2722 = distinct !DISubprogram(name: "DrawGetClipUnits", scope: !1, file: !1, line: 1312, type: !2723, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!1016, !1212}
!2725 = !DILocalVariable(name: "wand", arg: 1, scope: !2722, file: !1, line: 1312, type: !1212)
!2726 = !DILocation(line: 1312, column: 62, scope: !2722)
!2727 = !DILocation(line: 1316, column: 7, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2722, file: !1, line: 1316, column: 7)
!2729 = !DILocation(line: 1316, column: 13, scope: !2728)
!2730 = !DILocation(line: 1316, column: 19, scope: !2728)
!2731 = !DILocation(line: 1316, column: 7, scope: !2722)
!2732 = !DILocation(line: 1317, column: 60, scope: !2728)
!2733 = !DILocation(line: 1317, column: 66, scope: !2728)
!2734 = !DILocation(line: 1317, column: 12, scope: !2728)
!2735 = !DILocation(line: 1317, column: 5, scope: !2728)
!2736 = !DILocation(line: 1318, column: 10, scope: !2722)
!2737 = !DILocation(line: 1318, column: 26, scope: !2722)
!2738 = !DILocation(line: 1318, column: 3, scope: !2722)
!2739 = distinct !DISubprogram(name: "DrawGetException", scope: !1, file: !1, line: 1347, type: !2740, scopeLine: 1349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{!692, !1212, !2742}
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!2743 = !DILocalVariable(name: "wand", arg: 1, scope: !2739, file: !1, line: 1347, type: !1212)
!2744 = !DILocation(line: 1347, column: 54, scope: !2739)
!2745 = !DILocalVariable(name: "severity", arg: 2, scope: !2739, file: !1, line: 1348, type: !2742)
!2746 = !DILocation(line: 1348, column: 18, scope: !2739)
!2747 = !DILocalVariable(name: "description", scope: !2739, file: !1, line: 1351, type: !692)
!2748 = !DILocation(line: 1351, column: 6, scope: !2739)
!2749 = !DILocation(line: 1355, column: 7, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2739, file: !1, line: 1355, column: 7)
!2751 = !DILocation(line: 1355, column: 13, scope: !2750)
!2752 = !DILocation(line: 1355, column: 19, scope: !2750)
!2753 = !DILocation(line: 1355, column: 7, scope: !2739)
!2754 = !DILocation(line: 1356, column: 60, scope: !2750)
!2755 = !DILocation(line: 1356, column: 66, scope: !2750)
!2756 = !DILocation(line: 1356, column: 12, scope: !2750)
!2757 = !DILocation(line: 1356, column: 5, scope: !2750)
!2758 = !DILocation(line: 1358, column: 13, scope: !2739)
!2759 = !DILocation(line: 1358, column: 19, scope: !2739)
!2760 = !DILocation(line: 1358, column: 30, scope: !2739)
!2761 = !DILocation(line: 1358, column: 4, scope: !2739)
!2762 = !DILocation(line: 1358, column: 12, scope: !2739)
!2763 = !DILocation(line: 1359, column: 24, scope: !2739)
!2764 = !DILocation(line: 1359, column: 14, scope: !2739)
!2765 = !DILocation(line: 1361, column: 7, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2739, file: !1, line: 1361, column: 7)
!2767 = !DILocation(line: 1361, column: 19, scope: !2766)
!2768 = !DILocation(line: 1361, column: 7, scope: !2739)
!2769 = !DILocalVariable(name: "exception", scope: !2770, file: !1, line: 1362, type: !919)
!2770 = distinct !DILexicalBlock(scope: !2766, file: !1, line: 1362, column: 5)
!2771 = !DILocation(line: 1362, column: 5, scope: !2770)
!2772 = !DILocation(line: 1364, column: 4, scope: !2739)
!2773 = !DILocation(line: 1364, column: 15, scope: !2739)
!2774 = !DILocation(line: 1365, column: 7, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2739, file: !1, line: 1365, column: 7)
!2776 = !DILocation(line: 1365, column: 13, scope: !2775)
!2777 = !DILocation(line: 1365, column: 24, scope: !2775)
!2778 = !DILocation(line: 1365, column: 31, scope: !2775)
!2779 = !DILocation(line: 1365, column: 7, scope: !2739)
!2780 = !DILocation(line: 1366, column: 29, scope: !2775)
!2781 = !DILocation(line: 1367, column: 7, scope: !2775)
!2782 = !DILocation(line: 1367, column: 13, scope: !2775)
!2783 = !DILocation(line: 1367, column: 24, scope: !2775)
!2784 = !DILocation(line: 1367, column: 33, scope: !2775)
!2785 = !DILocation(line: 1367, column: 39, scope: !2775)
!2786 = !DILocation(line: 1367, column: 50, scope: !2775)
!2787 = !DILocation(line: 1366, column: 41, scope: !2775)
!2788 = !DILocation(line: 1366, column: 12, scope: !2775)
!2789 = !DILocation(line: 1366, column: 5, scope: !2775)
!2790 = !DILocation(line: 1369, column: 7, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2739, file: !1, line: 1369, column: 7)
!2792 = !DILocation(line: 1369, column: 13, scope: !2791)
!2793 = !DILocation(line: 1369, column: 24, scope: !2791)
!2794 = !DILocation(line: 1369, column: 36, scope: !2791)
!2795 = !DILocation(line: 1369, column: 7, scope: !2739)
!2796 = !DILocation(line: 1371, column: 38, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2791, file: !1, line: 1370, column: 5)
!2798 = !DILocation(line: 1371, column: 14, scope: !2797)
!2799 = !DILocation(line: 1372, column: 38, scope: !2797)
!2800 = !DILocation(line: 1373, column: 9, scope: !2797)
!2801 = !DILocation(line: 1373, column: 15, scope: !2797)
!2802 = !DILocation(line: 1373, column: 26, scope: !2797)
!2803 = !DILocation(line: 1373, column: 35, scope: !2797)
!2804 = !DILocation(line: 1373, column: 41, scope: !2797)
!2805 = !DILocation(line: 1373, column: 52, scope: !2797)
!2806 = !DILocation(line: 1372, column: 50, scope: !2797)
!2807 = !DILocation(line: 1372, column: 14, scope: !2797)
!2808 = !DILocation(line: 1375, column: 38, scope: !2797)
!2809 = !DILocation(line: 1375, column: 14, scope: !2797)
!2810 = !DILocation(line: 1376, column: 5, scope: !2797)
!2811 = !DILocation(line: 1377, column: 10, scope: !2739)
!2812 = !DILocation(line: 1377, column: 3, scope: !2739)
!2813 = distinct !DISubprogram(name: "DrawGetExceptionType", scope: !1, file: !1, line: 1403, type: !2814, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2814 = !DISubroutineType(types: !2815)
!2815 = !{!923, !1212}
!2816 = !DILocalVariable(name: "wand", arg: 1, scope: !2813, file: !1, line: 1403, type: !1212)
!2817 = !DILocation(line: 1403, column: 66, scope: !2813)
!2818 = !DILocation(line: 1407, column: 7, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2813, file: !1, line: 1407, column: 7)
!2820 = !DILocation(line: 1407, column: 13, scope: !2819)
!2821 = !DILocation(line: 1407, column: 19, scope: !2819)
!2822 = !DILocation(line: 1407, column: 7, scope: !2813)
!2823 = !DILocation(line: 1408, column: 60, scope: !2819)
!2824 = !DILocation(line: 1408, column: 66, scope: !2819)
!2825 = !DILocation(line: 1408, column: 12, scope: !2819)
!2826 = !DILocation(line: 1408, column: 5, scope: !2819)
!2827 = !DILocation(line: 1409, column: 10, scope: !2813)
!2828 = !DILocation(line: 1409, column: 16, scope: !2813)
!2829 = !DILocation(line: 1409, column: 27, scope: !2813)
!2830 = !DILocation(line: 1409, column: 3, scope: !2813)
!2831 = distinct !DISubprogram(name: "DrawGetFillColor", scope: !1, file: !1, line: 1437, type: !2656, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2832 = !DILocalVariable(name: "wand", arg: 1, scope: !2831, file: !1, line: 1437, type: !1212)
!2833 = !DILocation(line: 1437, column: 53, scope: !2831)
!2834 = !DILocalVariable(name: "fill_color", arg: 2, scope: !2831, file: !1, line: 1437, type: !2658)
!2835 = !DILocation(line: 1437, column: 69, scope: !2831)
!2836 = !DILocation(line: 1442, column: 7, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2831, file: !1, line: 1442, column: 7)
!2838 = !DILocation(line: 1442, column: 13, scope: !2837)
!2839 = !DILocation(line: 1442, column: 19, scope: !2837)
!2840 = !DILocation(line: 1442, column: 7, scope: !2831)
!2841 = !DILocation(line: 1443, column: 60, scope: !2837)
!2842 = !DILocation(line: 1443, column: 66, scope: !2837)
!2843 = !DILocation(line: 1443, column: 12, scope: !2837)
!2844 = !DILocation(line: 1443, column: 5, scope: !2837)
!2845 = !DILocation(line: 1444, column: 24, scope: !2831)
!2846 = !DILocation(line: 1444, column: 36, scope: !2831)
!2847 = !DILocation(line: 1444, column: 52, scope: !2831)
!2848 = !DILocation(line: 1444, column: 3, scope: !2831)
!2849 = !DILocation(line: 1445, column: 1, scope: !2831)
!2850 = distinct !DISubprogram(name: "DrawGetFillOpacity", scope: !1, file: !1, line: 1470, type: !2851, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2851 = !DISubroutineType(types: !2852)
!2852 = !{!715, !1212}
!2853 = !DILocalVariable(name: "wand", arg: 1, scope: !2850, file: !1, line: 1470, type: !1212)
!2854 = !DILocation(line: 1470, column: 57, scope: !2850)
!2855 = !DILocalVariable(name: "alpha", scope: !2850, file: !1, line: 1473, type: !715)
!2856 = !DILocation(line: 1473, column: 5, scope: !2850)
!2857 = !DILocation(line: 1477, column: 7, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2850, file: !1, line: 1477, column: 7)
!2859 = !DILocation(line: 1477, column: 13, scope: !2858)
!2860 = !DILocation(line: 1477, column: 19, scope: !2858)
!2861 = !DILocation(line: 1477, column: 7, scope: !2850)
!2862 = !DILocation(line: 1478, column: 60, scope: !2858)
!2863 = !DILocation(line: 1478, column: 66, scope: !2858)
!2864 = !DILocation(line: 1478, column: 12, scope: !2858)
!2865 = !DILocation(line: 1478, column: 5, scope: !2858)
!2866 = !DILocation(line: 1479, column: 45, scope: !2850)
!2867 = !DILocation(line: 1479, column: 61, scope: !2850)
!2868 = !DILocation(line: 1479, column: 66, scope: !2850)
!2869 = !DILocation(line: 1479, column: 44, scope: !2850)
!2870 = !DILocation(line: 1479, column: 31, scope: !2850)
!2871 = !DILocation(line: 1479, column: 30, scope: !2850)
!2872 = !DILocation(line: 1479, column: 8, scope: !2850)
!2873 = !DILocation(line: 1480, column: 10, scope: !2850)
!2874 = !DILocation(line: 1480, column: 3, scope: !2850)
!2875 = distinct !DISubprogram(name: "DrawGetFillRule", scope: !1, file: !1, line: 1505, type: !2706, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2876 = !DILocalVariable(name: "wand", arg: 1, scope: !2875, file: !1, line: 1505, type: !1212)
!2877 = !DILocation(line: 1505, column: 56, scope: !2875)
!2878 = !DILocation(line: 1509, column: 7, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2875, file: !1, line: 1509, column: 7)
!2880 = !DILocation(line: 1509, column: 13, scope: !2879)
!2881 = !DILocation(line: 1509, column: 19, scope: !2879)
!2882 = !DILocation(line: 1509, column: 7, scope: !2875)
!2883 = !DILocation(line: 1510, column: 60, scope: !2879)
!2884 = !DILocation(line: 1510, column: 66, scope: !2879)
!2885 = !DILocation(line: 1510, column: 12, scope: !2879)
!2886 = !DILocation(line: 1510, column: 5, scope: !2879)
!2887 = !DILocation(line: 1511, column: 10, scope: !2875)
!2888 = !DILocation(line: 1511, column: 26, scope: !2875)
!2889 = !DILocation(line: 1511, column: 3, scope: !2875)
!2890 = distinct !DISubprogram(name: "DrawGetFont", scope: !1, file: !1, line: 1538, type: !2681, scopeLine: 1539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2891 = !DILocalVariable(name: "wand", arg: 1, scope: !2890, file: !1, line: 1538, type: !1212)
!2892 = !DILocation(line: 1538, column: 49, scope: !2890)
!2893 = !DILocation(line: 1542, column: 7, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2890, file: !1, line: 1542, column: 7)
!2895 = !DILocation(line: 1542, column: 13, scope: !2894)
!2896 = !DILocation(line: 1542, column: 19, scope: !2894)
!2897 = !DILocation(line: 1542, column: 7, scope: !2890)
!2898 = !DILocation(line: 1543, column: 60, scope: !2894)
!2899 = !DILocation(line: 1543, column: 66, scope: !2894)
!2900 = !DILocation(line: 1543, column: 12, scope: !2894)
!2901 = !DILocation(line: 1543, column: 5, scope: !2894)
!2902 = !DILocation(line: 1544, column: 7, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2890, file: !1, line: 1544, column: 7)
!2904 = !DILocation(line: 1544, column: 23, scope: !2903)
!2905 = !DILocation(line: 1544, column: 28, scope: !2903)
!2906 = !DILocation(line: 1544, column: 7, scope: !2890)
!2907 = !DILocation(line: 1545, column: 26, scope: !2903)
!2908 = !DILocation(line: 1545, column: 42, scope: !2903)
!2909 = !DILocation(line: 1545, column: 12, scope: !2903)
!2910 = !DILocation(line: 1545, column: 5, scope: !2903)
!2911 = !DILocation(line: 1546, column: 3, scope: !2890)
!2912 = !DILocation(line: 1547, column: 1, scope: !2890)
!2913 = distinct !DISubprogram(name: "DrawGetFontFamily", scope: !1, file: !1, line: 1572, type: !2681, scopeLine: 1573, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2914 = !DILocalVariable(name: "wand", arg: 1, scope: !2913, file: !1, line: 1572, type: !1212)
!2915 = !DILocation(line: 1572, column: 55, scope: !2913)
!2916 = !DILocation(line: 1576, column: 7, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2913, file: !1, line: 1576, column: 7)
!2918 = !DILocation(line: 1576, column: 13, scope: !2917)
!2919 = !DILocation(line: 1576, column: 19, scope: !2917)
!2920 = !DILocation(line: 1576, column: 7, scope: !2913)
!2921 = !DILocation(line: 1577, column: 60, scope: !2917)
!2922 = !DILocation(line: 1577, column: 66, scope: !2917)
!2923 = !DILocation(line: 1577, column: 12, scope: !2917)
!2924 = !DILocation(line: 1577, column: 5, scope: !2917)
!2925 = !DILocation(line: 1578, column: 7, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2913, file: !1, line: 1578, column: 7)
!2927 = !DILocation(line: 1578, column: 23, scope: !2926)
!2928 = !DILocation(line: 1578, column: 30, scope: !2926)
!2929 = !DILocation(line: 1578, column: 7, scope: !2913)
!2930 = !DILocation(line: 1579, column: 26, scope: !2926)
!2931 = !DILocation(line: 1579, column: 42, scope: !2926)
!2932 = !DILocation(line: 1579, column: 12, scope: !2926)
!2933 = !DILocation(line: 1579, column: 5, scope: !2926)
!2934 = !DILocation(line: 1580, column: 3, scope: !2913)
!2935 = !DILocation(line: 1581, column: 1, scope: !2913)
!2936 = distinct !DISubprogram(name: "DrawGetFontResolution", scope: !1, file: !1, line: 1610, type: !2937, scopeLine: 1612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{!764, !1212, !1012, !1012}
!2939 = !DILocalVariable(name: "wand", arg: 1, scope: !2936, file: !1, line: 1610, type: !1212)
!2940 = !DILocation(line: 1610, column: 71, scope: !2936)
!2941 = !DILocalVariable(name: "x", arg: 2, scope: !2936, file: !1, line: 1611, type: !1012)
!2942 = !DILocation(line: 1611, column: 11, scope: !2936)
!2943 = !DILocalVariable(name: "y", arg: 3, scope: !2936, file: !1, line: 1611, type: !1012)
!2944 = !DILocation(line: 1611, column: 21, scope: !2936)
!2945 = !DILocation(line: 1615, column: 7, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2936, file: !1, line: 1615, column: 7)
!2947 = !DILocation(line: 1615, column: 13, scope: !2946)
!2948 = !DILocation(line: 1615, column: 19, scope: !2946)
!2949 = !DILocation(line: 1615, column: 7, scope: !2936)
!2950 = !DILocation(line: 1616, column: 60, scope: !2946)
!2951 = !DILocation(line: 1616, column: 66, scope: !2946)
!2952 = !DILocation(line: 1616, column: 12, scope: !2946)
!2953 = !DILocation(line: 1616, column: 5, scope: !2946)
!2954 = !DILocation(line: 1617, column: 4, scope: !2936)
!2955 = !DILocation(line: 1617, column: 5, scope: !2936)
!2956 = !DILocation(line: 1618, column: 4, scope: !2936)
!2957 = !DILocation(line: 1618, column: 5, scope: !2936)
!2958 = !DILocation(line: 1619, column: 7, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2936, file: !1, line: 1619, column: 7)
!2960 = !DILocation(line: 1619, column: 23, scope: !2959)
!2961 = !DILocation(line: 1619, column: 31, scope: !2959)
!2962 = !DILocation(line: 1619, column: 7, scope: !2936)
!2963 = !DILocalVariable(name: "geometry_info", scope: !2964, file: !1, line: 1622, type: !2965)
!2964 = distinct !DILexicalBlock(scope: !2959, file: !1, line: 1620, column: 5)
!2965 = !DIDerivedType(tag: DW_TAG_typedef, name: "GeometryInfo", file: !153, line: 112, baseType: !2966)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GeometryInfo", file: !153, line: 104, size: 320, elements: !2967)
!2967 = !{!2968, !2969, !2970, !2971, !2972}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "rho", scope: !2966, file: !153, line: 107, baseType: !715, size: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "sigma", scope: !2966, file: !153, line: 108, baseType: !715, size: 64, offset: 64)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "xi", scope: !2966, file: !153, line: 109, baseType: !715, size: 64, offset: 128)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "psi", scope: !2966, file: !153, line: 110, baseType: !715, size: 64, offset: 192)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "chi", scope: !2966, file: !153, line: 111, baseType: !715, size: 64, offset: 256)
!2973 = !DILocation(line: 1622, column: 9, scope: !2964)
!2974 = !DILocalVariable(name: "flags", scope: !2964, file: !1, line: 1625, type: !2975)
!2975 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickStatusType", file: !4, line: 147, baseType: !5)
!2976 = !DILocation(line: 1625, column: 9, scope: !2964)
!2977 = !DILocation(line: 1627, column: 27, scope: !2964)
!2978 = !DILocation(line: 1627, column: 43, scope: !2964)
!2979 = !DILocation(line: 1627, column: 13, scope: !2964)
!2980 = !DILocation(line: 1627, column: 12, scope: !2964)
!2981 = !DILocation(line: 1628, column: 24, scope: !2964)
!2982 = !DILocation(line: 1628, column: 8, scope: !2964)
!2983 = !DILocation(line: 1628, column: 9, scope: !2964)
!2984 = !DILocation(line: 1629, column: 24, scope: !2964)
!2985 = !DILocation(line: 1629, column: 8, scope: !2964)
!2986 = !DILocation(line: 1629, column: 9, scope: !2964)
!2987 = !DILocation(line: 1630, column: 12, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2964, file: !1, line: 1630, column: 11)
!2989 = !DILocation(line: 1630, column: 18, scope: !2988)
!2990 = !DILocation(line: 1630, column: 32, scope: !2988)
!2991 = !DILocation(line: 1630, column: 11, scope: !2964)
!2992 = !DILocation(line: 1631, column: 14, scope: !2988)
!2993 = !DILocation(line: 1631, column: 13, scope: !2988)
!2994 = !DILocation(line: 1631, column: 10, scope: !2988)
!2995 = !DILocation(line: 1631, column: 11, scope: !2988)
!2996 = !DILocation(line: 1631, column: 9, scope: !2988)
!2997 = !DILocation(line: 1632, column: 5, scope: !2964)
!2998 = !DILocation(line: 1633, column: 3, scope: !2936)
!2999 = distinct !DISubprogram(name: "DrawGetFontSize", scope: !1, file: !1, line: 1658, type: !2851, scopeLine: 1659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3000 = !DILocalVariable(name: "wand", arg: 1, scope: !2999, file: !1, line: 1658, type: !1212)
!3001 = !DILocation(line: 1658, column: 54, scope: !2999)
!3002 = !DILocation(line: 1662, column: 7, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2999, file: !1, line: 1662, column: 7)
!3004 = !DILocation(line: 1662, column: 13, scope: !3003)
!3005 = !DILocation(line: 1662, column: 19, scope: !3003)
!3006 = !DILocation(line: 1662, column: 7, scope: !2999)
!3007 = !DILocation(line: 1663, column: 60, scope: !3003)
!3008 = !DILocation(line: 1663, column: 66, scope: !3003)
!3009 = !DILocation(line: 1663, column: 12, scope: !3003)
!3010 = !DILocation(line: 1663, column: 5, scope: !3003)
!3011 = !DILocation(line: 1664, column: 10, scope: !2999)
!3012 = !DILocation(line: 1664, column: 26, scope: !2999)
!3013 = !DILocation(line: 1664, column: 3, scope: !2999)
!3014 = distinct !DISubprogram(name: "DrawGetFontStretch", scope: !1, file: !1, line: 1689, type: !3015, scopeLine: 1690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!1001, !1212}
!3017 = !DILocalVariable(name: "wand", arg: 1, scope: !3014, file: !1, line: 1689, type: !1212)
!3018 = !DILocation(line: 1689, column: 62, scope: !3014)
!3019 = !DILocation(line: 1693, column: 7, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3014, file: !1, line: 1693, column: 7)
!3021 = !DILocation(line: 1693, column: 13, scope: !3020)
!3022 = !DILocation(line: 1693, column: 19, scope: !3020)
!3023 = !DILocation(line: 1693, column: 7, scope: !3014)
!3024 = !DILocation(line: 1694, column: 60, scope: !3020)
!3025 = !DILocation(line: 1694, column: 66, scope: !3020)
!3026 = !DILocation(line: 1694, column: 12, scope: !3020)
!3027 = !DILocation(line: 1694, column: 5, scope: !3020)
!3028 = !DILocation(line: 1695, column: 10, scope: !3014)
!3029 = !DILocation(line: 1695, column: 26, scope: !3014)
!3030 = !DILocation(line: 1695, column: 3, scope: !3014)
!3031 = distinct !DISubprogram(name: "DrawGetFontStyle", scope: !1, file: !1, line: 1720, type: !3032, scopeLine: 1721, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3032 = !DISubroutineType(types: !3033)
!3033 = !{!999, !1212}
!3034 = !DILocalVariable(name: "wand", arg: 1, scope: !3031, file: !1, line: 1720, type: !1212)
!3035 = !DILocation(line: 1720, column: 58, scope: !3031)
!3036 = !DILocation(line: 1724, column: 7, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3031, file: !1, line: 1724, column: 7)
!3038 = !DILocation(line: 1724, column: 13, scope: !3037)
!3039 = !DILocation(line: 1724, column: 19, scope: !3037)
!3040 = !DILocation(line: 1724, column: 7, scope: !3031)
!3041 = !DILocation(line: 1725, column: 60, scope: !3037)
!3042 = !DILocation(line: 1725, column: 66, scope: !3037)
!3043 = !DILocation(line: 1725, column: 12, scope: !3037)
!3044 = !DILocation(line: 1725, column: 5, scope: !3037)
!3045 = !DILocation(line: 1726, column: 10, scope: !3031)
!3046 = !DILocation(line: 1726, column: 26, scope: !3031)
!3047 = !DILocation(line: 1726, column: 3, scope: !3031)
!3048 = distinct !DISubprogram(name: "DrawGetFontWeight", scope: !1, file: !1, line: 1751, type: !3049, scopeLine: 1752, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{!700, !1212}
!3051 = !DILocalVariable(name: "wand", arg: 1, scope: !3048, file: !1, line: 1751, type: !1212)
!3052 = !DILocation(line: 1751, column: 56, scope: !3048)
!3053 = !DILocation(line: 1755, column: 7, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !3048, file: !1, line: 1755, column: 7)
!3055 = !DILocation(line: 1755, column: 13, scope: !3054)
!3056 = !DILocation(line: 1755, column: 19, scope: !3054)
!3057 = !DILocation(line: 1755, column: 7, scope: !3048)
!3058 = !DILocation(line: 1756, column: 60, scope: !3054)
!3059 = !DILocation(line: 1756, column: 66, scope: !3054)
!3060 = !DILocation(line: 1756, column: 12, scope: !3054)
!3061 = !DILocation(line: 1756, column: 5, scope: !3054)
!3062 = !DILocation(line: 1757, column: 10, scope: !3048)
!3063 = !DILocation(line: 1757, column: 26, scope: !3048)
!3064 = !DILocation(line: 1757, column: 3, scope: !3048)
!3065 = distinct !DISubprogram(name: "DrawGetGravity", scope: !1, file: !1, line: 1783, type: !3066, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3066 = !DISubroutineType(types: !3067)
!3067 = !{!722, !1212}
!3068 = !DILocalVariable(name: "wand", arg: 1, scope: !3065, file: !1, line: 1783, type: !1212)
!3069 = !DILocation(line: 1783, column: 58, scope: !3065)
!3070 = !DILocation(line: 1787, column: 7, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3065, file: !1, line: 1787, column: 7)
!3072 = !DILocation(line: 1787, column: 13, scope: !3071)
!3073 = !DILocation(line: 1787, column: 19, scope: !3071)
!3074 = !DILocation(line: 1787, column: 7, scope: !3065)
!3075 = !DILocation(line: 1788, column: 60, scope: !3071)
!3076 = !DILocation(line: 1788, column: 66, scope: !3071)
!3077 = !DILocation(line: 1788, column: 12, scope: !3071)
!3078 = !DILocation(line: 1788, column: 5, scope: !3071)
!3079 = !DILocation(line: 1789, column: 10, scope: !3065)
!3080 = !DILocation(line: 1789, column: 26, scope: !3065)
!3081 = !DILocation(line: 1789, column: 3, scope: !3065)
!3082 = distinct !DISubprogram(name: "DrawGetOpacity", scope: !1, file: !1, line: 1815, type: !2851, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3083 = !DILocalVariable(name: "wand", arg: 1, scope: !3082, file: !1, line: 1815, type: !1212)
!3084 = !DILocation(line: 1815, column: 53, scope: !3082)
!3085 = !DILocalVariable(name: "alpha", scope: !3082, file: !1, line: 1818, type: !715)
!3086 = !DILocation(line: 1818, column: 5, scope: !3082)
!3087 = !DILocation(line: 1822, column: 7, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3082, file: !1, line: 1822, column: 7)
!3089 = !DILocation(line: 1822, column: 13, scope: !3088)
!3090 = !DILocation(line: 1822, column: 19, scope: !3088)
!3091 = !DILocation(line: 1822, column: 7, scope: !3082)
!3092 = !DILocation(line: 1823, column: 60, scope: !3088)
!3093 = !DILocation(line: 1823, column: 66, scope: !3088)
!3094 = !DILocation(line: 1823, column: 12, scope: !3088)
!3095 = !DILocation(line: 1823, column: 5, scope: !3088)
!3096 = !DILocation(line: 1824, column: 45, scope: !3082)
!3097 = !DILocation(line: 1824, column: 61, scope: !3082)
!3098 = !DILocation(line: 1824, column: 44, scope: !3082)
!3099 = !DILocation(line: 1824, column: 31, scope: !3082)
!3100 = !DILocation(line: 1824, column: 30, scope: !3082)
!3101 = !DILocation(line: 1824, column: 8, scope: !3082)
!3102 = !DILocation(line: 1825, column: 10, scope: !3082)
!3103 = !DILocation(line: 1825, column: 3, scope: !3082)
!3104 = distinct !DISubprogram(name: "DrawGetStrokeAntialias", scope: !1, file: !1, line: 1853, type: !3105, scopeLine: 1854, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3105 = !DISubroutineType(types: !3106)
!3106 = !{!764, !1212}
!3107 = !DILocalVariable(name: "wand", arg: 1, scope: !3104, file: !1, line: 1853, type: !1212)
!3108 = !DILocation(line: 1853, column: 72, scope: !3104)
!3109 = !DILocation(line: 1857, column: 7, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3104, file: !1, line: 1857, column: 7)
!3111 = !DILocation(line: 1857, column: 13, scope: !3110)
!3112 = !DILocation(line: 1857, column: 19, scope: !3110)
!3113 = !DILocation(line: 1857, column: 7, scope: !3104)
!3114 = !DILocation(line: 1858, column: 60, scope: !3110)
!3115 = !DILocation(line: 1858, column: 66, scope: !3110)
!3116 = !DILocation(line: 1858, column: 12, scope: !3110)
!3117 = !DILocation(line: 1858, column: 5, scope: !3110)
!3118 = !DILocation(line: 1859, column: 10, scope: !3104)
!3119 = !DILocation(line: 1859, column: 26, scope: !3104)
!3120 = !DILocation(line: 1859, column: 3, scope: !3104)
!3121 = distinct !DISubprogram(name: "DrawGetStrokeColor", scope: !1, file: !1, line: 1887, type: !2656, scopeLine: 1889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3122 = !DILocalVariable(name: "wand", arg: 1, scope: !3121, file: !1, line: 1887, type: !1212)
!3123 = !DILocation(line: 1887, column: 55, scope: !3121)
!3124 = !DILocalVariable(name: "stroke_color", arg: 2, scope: !3121, file: !1, line: 1888, type: !2658)
!3125 = !DILocation(line: 1888, column: 14, scope: !3121)
!3126 = !DILocation(line: 1893, column: 7, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3121, file: !1, line: 1893, column: 7)
!3128 = !DILocation(line: 1893, column: 13, scope: !3127)
!3129 = !DILocation(line: 1893, column: 19, scope: !3127)
!3130 = !DILocation(line: 1893, column: 7, scope: !3121)
!3131 = !DILocation(line: 1894, column: 60, scope: !3127)
!3132 = !DILocation(line: 1894, column: 66, scope: !3127)
!3133 = !DILocation(line: 1894, column: 12, scope: !3127)
!3134 = !DILocation(line: 1894, column: 5, scope: !3127)
!3135 = !DILocation(line: 1895, column: 24, scope: !3121)
!3136 = !DILocation(line: 1895, column: 38, scope: !3121)
!3137 = !DILocation(line: 1895, column: 54, scope: !3121)
!3138 = !DILocation(line: 1895, column: 3, scope: !3121)
!3139 = !DILocation(line: 1896, column: 1, scope: !3121)
!3140 = distinct !DISubprogram(name: "DrawGetStrokeDashArray", scope: !1, file: !1, line: 1925, type: !3141, scopeLine: 1927, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3141 = !DISubroutineType(types: !3142)
!3142 = !{!1012, !1212, !3143}
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!3144 = !DILocalVariable(name: "wand", arg: 1, scope: !3140, file: !1, line: 1925, type: !1212)
!3145 = !DILocation(line: 1925, column: 62, scope: !3140)
!3146 = !DILocalVariable(name: "number_elements", arg: 2, scope: !3140, file: !1, line: 1926, type: !3143)
!3147 = !DILocation(line: 1926, column: 11, scope: !3140)
!3148 = !DILocalVariable(name: "dasharray", scope: !3140, file: !1, line: 1929, type: !1012)
!3149 = !DILocation(line: 1929, column: 6, scope: !3140)
!3150 = !DILocalVariable(name: "p", scope: !3140, file: !1, line: 1932, type: !1202)
!3151 = !DILocation(line: 1932, column: 6, scope: !3140)
!3152 = !DILocalVariable(name: "q", scope: !3140, file: !1, line: 1935, type: !1012)
!3153 = !DILocation(line: 1935, column: 6, scope: !3140)
!3154 = !DILocalVariable(name: "i", scope: !3140, file: !1, line: 1938, type: !704)
!3155 = !DILocation(line: 1938, column: 5, scope: !3140)
!3156 = !DILocalVariable(name: "n", scope: !3140, file: !1, line: 1941, type: !700)
!3157 = !DILocation(line: 1941, column: 5, scope: !3140)
!3158 = !DILocation(line: 1945, column: 7, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 1945, column: 7)
!3160 = !DILocation(line: 1945, column: 13, scope: !3159)
!3161 = !DILocation(line: 1945, column: 19, scope: !3159)
!3162 = !DILocation(line: 1945, column: 7, scope: !3140)
!3163 = !DILocation(line: 1946, column: 60, scope: !3159)
!3164 = !DILocation(line: 1946, column: 66, scope: !3159)
!3165 = !DILocation(line: 1946, column: 12, scope: !3159)
!3166 = !DILocation(line: 1946, column: 5, scope: !3159)
!3167 = !DILocation(line: 1948, column: 4, scope: !3140)
!3168 = !DILocation(line: 1949, column: 5, scope: !3140)
!3169 = !DILocation(line: 1949, column: 21, scope: !3140)
!3170 = !DILocation(line: 1949, column: 4, scope: !3140)
!3171 = !DILocation(line: 1950, column: 7, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 1950, column: 7)
!3173 = !DILocation(line: 1950, column: 9, scope: !3172)
!3174 = !DILocation(line: 1950, column: 7, scope: !3140)
!3175 = !DILocation(line: 1951, column: 5, scope: !3172)
!3176 = !DILocation(line: 1951, column: 14, scope: !3172)
!3177 = !DILocation(line: 1951, column: 12, scope: !3172)
!3178 = !DILocation(line: 1951, column: 17, scope: !3172)
!3179 = !DILocation(line: 1952, column: 8, scope: !3172)
!3180 = distinct !{!3180, !3175, !3179}
!3181 = !DILocation(line: 1953, column: 20, scope: !3140)
!3182 = !DILocation(line: 1953, column: 4, scope: !3140)
!3183 = !DILocation(line: 1953, column: 19, scope: !3140)
!3184 = !DILocation(line: 1954, column: 12, scope: !3140)
!3185 = !DILocation(line: 1955, column: 7, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3140, file: !1, line: 1955, column: 7)
!3187 = !DILocation(line: 1955, column: 9, scope: !3186)
!3188 = !DILocation(line: 1955, column: 7, scope: !3140)
!3189 = !DILocation(line: 1957, column: 58, scope: !3190)
!3190 = distinct !DILexicalBlock(scope: !3186, file: !1, line: 1956, column: 5)
!3191 = !DILocation(line: 1957, column: 59, scope: !3190)
!3192 = !DILocation(line: 1957, column: 28, scope: !3190)
!3193 = !DILocation(line: 1957, column: 17, scope: !3190)
!3194 = !DILocation(line: 1957, column: 16, scope: !3190)
!3195 = !DILocation(line: 1959, column: 9, scope: !3190)
!3196 = !DILocation(line: 1959, column: 25, scope: !3190)
!3197 = !DILocation(line: 1959, column: 8, scope: !3190)
!3198 = !DILocation(line: 1960, column: 9, scope: !3190)
!3199 = !DILocation(line: 1960, column: 8, scope: !3190)
!3200 = !DILocation(line: 1961, column: 13, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3190, file: !1, line: 1961, column: 7)
!3202 = !DILocation(line: 1961, column: 12, scope: !3201)
!3203 = !DILocation(line: 1961, column: 17, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3201, file: !1, line: 1961, column: 7)
!3205 = !DILocation(line: 1961, column: 31, scope: !3204)
!3206 = !DILocation(line: 1961, column: 19, scope: !3204)
!3207 = !DILocation(line: 1961, column: 7, scope: !3201)
!3208 = !DILocation(line: 1962, column: 17, scope: !3204)
!3209 = !DILocation(line: 1962, column: 15, scope: !3204)
!3210 = !DILocation(line: 1962, column: 11, scope: !3204)
!3211 = !DILocation(line: 1962, column: 13, scope: !3204)
!3212 = !DILocation(line: 1962, column: 9, scope: !3204)
!3213 = !DILocation(line: 1961, column: 35, scope: !3204)
!3214 = !DILocation(line: 1961, column: 7, scope: !3204)
!3215 = distinct !{!3215, !3207, !3216}
!3216 = !DILocation(line: 1962, column: 19, scope: !3201)
!3217 = !DILocation(line: 1963, column: 8, scope: !3190)
!3218 = !DILocation(line: 1963, column: 9, scope: !3190)
!3219 = !DILocation(line: 1964, column: 5, scope: !3190)
!3220 = !DILocation(line: 1965, column: 10, scope: !3140)
!3221 = !DILocation(line: 1965, column: 3, scope: !3140)
!3222 = distinct !DISubprogram(name: "DrawGetStrokeDashOffset", scope: !1, file: !1, line: 1991, type: !2851, scopeLine: 1992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3223 = !DILocalVariable(name: "wand", arg: 1, scope: !3222, file: !1, line: 1991, type: !1212)
!3224 = !DILocation(line: 1991, column: 62, scope: !3222)
!3225 = !DILocation(line: 1995, column: 7, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3222, file: !1, line: 1995, column: 7)
!3227 = !DILocation(line: 1995, column: 13, scope: !3226)
!3228 = !DILocation(line: 1995, column: 19, scope: !3226)
!3229 = !DILocation(line: 1995, column: 7, scope: !3222)
!3230 = !DILocation(line: 1996, column: 60, scope: !3226)
!3231 = !DILocation(line: 1996, column: 66, scope: !3226)
!3232 = !DILocation(line: 1996, column: 12, scope: !3226)
!3233 = !DILocation(line: 1996, column: 5, scope: !3226)
!3234 = !DILocation(line: 1997, column: 10, scope: !3222)
!3235 = !DILocation(line: 1997, column: 26, scope: !3222)
!3236 = !DILocation(line: 1997, column: 3, scope: !3222)
!3237 = distinct !DISubprogram(name: "DrawGetStrokeLineCap", scope: !1, file: !1, line: 2024, type: !3238, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3238 = !DISubroutineType(types: !3239)
!3239 = !{!985, !1212}
!3240 = !DILocalVariable(name: "wand", arg: 1, scope: !3237, file: !1, line: 2024, type: !1212)
!3241 = !DILocation(line: 2024, column: 60, scope: !3237)
!3242 = !DILocation(line: 2028, column: 7, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3237, file: !1, line: 2028, column: 7)
!3244 = !DILocation(line: 2028, column: 13, scope: !3243)
!3245 = !DILocation(line: 2028, column: 19, scope: !3243)
!3246 = !DILocation(line: 2028, column: 7, scope: !3237)
!3247 = !DILocation(line: 2029, column: 60, scope: !3243)
!3248 = !DILocation(line: 2029, column: 66, scope: !3243)
!3249 = !DILocation(line: 2029, column: 12, scope: !3243)
!3250 = !DILocation(line: 2029, column: 5, scope: !3243)
!3251 = !DILocation(line: 2030, column: 10, scope: !3237)
!3252 = !DILocation(line: 2030, column: 26, scope: !3237)
!3253 = !DILocation(line: 2030, column: 3, scope: !3237)
!3254 = distinct !DISubprogram(name: "DrawGetStrokeLineJoin", scope: !1, file: !1, line: 2058, type: !3255, scopeLine: 2059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3255 = !DISubroutineType(types: !3256)
!3256 = !{!987, !1212}
!3257 = !DILocalVariable(name: "wand", arg: 1, scope: !3254, file: !1, line: 2058, type: !1212)
!3258 = !DILocation(line: 2058, column: 62, scope: !3254)
!3259 = !DILocation(line: 2062, column: 7, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3254, file: !1, line: 2062, column: 7)
!3261 = !DILocation(line: 2062, column: 13, scope: !3260)
!3262 = !DILocation(line: 2062, column: 19, scope: !3260)
!3263 = !DILocation(line: 2062, column: 7, scope: !3254)
!3264 = !DILocation(line: 2063, column: 60, scope: !3260)
!3265 = !DILocation(line: 2063, column: 66, scope: !3260)
!3266 = !DILocation(line: 2063, column: 12, scope: !3260)
!3267 = !DILocation(line: 2063, column: 5, scope: !3260)
!3268 = !DILocation(line: 2064, column: 10, scope: !3254)
!3269 = !DILocation(line: 2064, column: 26, scope: !3254)
!3270 = !DILocation(line: 2064, column: 3, scope: !3254)
!3271 = distinct !DISubprogram(name: "DrawGetStrokeMiterLimit", scope: !1, file: !1, line: 2093, type: !3049, scopeLine: 2094, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3272 = !DILocalVariable(name: "wand", arg: 1, scope: !3271, file: !1, line: 2093, type: !1212)
!3273 = !DILocation(line: 2093, column: 62, scope: !3271)
!3274 = !DILocation(line: 2097, column: 7, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3271, file: !1, line: 2097, column: 7)
!3276 = !DILocation(line: 2097, column: 13, scope: !3275)
!3277 = !DILocation(line: 2097, column: 19, scope: !3275)
!3278 = !DILocation(line: 2097, column: 7, scope: !3271)
!3279 = !DILocation(line: 2098, column: 60, scope: !3275)
!3280 = !DILocation(line: 2098, column: 66, scope: !3275)
!3281 = !DILocation(line: 2098, column: 12, scope: !3275)
!3282 = !DILocation(line: 2098, column: 5, scope: !3275)
!3283 = !DILocation(line: 2099, column: 10, scope: !3271)
!3284 = !DILocation(line: 2099, column: 26, scope: !3271)
!3285 = !DILocation(line: 2099, column: 3, scope: !3271)
!3286 = distinct !DISubprogram(name: "DrawGetStrokeOpacity", scope: !1, file: !1, line: 2124, type: !2851, scopeLine: 2125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3287 = !DILocalVariable(name: "wand", arg: 1, scope: !3286, file: !1, line: 2124, type: !1212)
!3288 = !DILocation(line: 2124, column: 59, scope: !3286)
!3289 = !DILocalVariable(name: "alpha", scope: !3286, file: !1, line: 2127, type: !715)
!3290 = !DILocation(line: 2127, column: 5, scope: !3286)
!3291 = !DILocation(line: 2131, column: 7, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3286, file: !1, line: 2131, column: 7)
!3293 = !DILocation(line: 2131, column: 13, scope: !3292)
!3294 = !DILocation(line: 2131, column: 19, scope: !3292)
!3295 = !DILocation(line: 2131, column: 7, scope: !3286)
!3296 = !DILocation(line: 2132, column: 60, scope: !3292)
!3297 = !DILocation(line: 2132, column: 66, scope: !3292)
!3298 = !DILocation(line: 2132, column: 12, scope: !3292)
!3299 = !DILocation(line: 2132, column: 5, scope: !3292)
!3300 = !DILocation(line: 2133, column: 45, scope: !3286)
!3301 = !DILocation(line: 2133, column: 61, scope: !3286)
!3302 = !DILocation(line: 2133, column: 68, scope: !3286)
!3303 = !DILocation(line: 2133, column: 44, scope: !3286)
!3304 = !DILocation(line: 2133, column: 31, scope: !3286)
!3305 = !DILocation(line: 2133, column: 30, scope: !3286)
!3306 = !DILocation(line: 2133, column: 8, scope: !3286)
!3307 = !DILocation(line: 2134, column: 10, scope: !3286)
!3308 = !DILocation(line: 2134, column: 3, scope: !3286)
!3309 = distinct !DISubprogram(name: "DrawGetStrokeWidth", scope: !1, file: !1, line: 2160, type: !2851, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3310 = !DILocalVariable(name: "wand", arg: 1, scope: !3309, file: !1, line: 2160, type: !1212)
!3311 = !DILocation(line: 2160, column: 57, scope: !3309)
!3312 = !DILocation(line: 2164, column: 7, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3309, file: !1, line: 2164, column: 7)
!3314 = !DILocation(line: 2164, column: 13, scope: !3313)
!3315 = !DILocation(line: 2164, column: 19, scope: !3313)
!3316 = !DILocation(line: 2164, column: 7, scope: !3309)
!3317 = !DILocation(line: 2165, column: 60, scope: !3313)
!3318 = !DILocation(line: 2165, column: 66, scope: !3313)
!3319 = !DILocation(line: 2165, column: 12, scope: !3313)
!3320 = !DILocation(line: 2165, column: 5, scope: !3313)
!3321 = !DILocation(line: 2166, column: 10, scope: !3309)
!3322 = !DILocation(line: 2166, column: 26, scope: !3309)
!3323 = !DILocation(line: 2166, column: 3, scope: !3309)
!3324 = distinct !DISubprogram(name: "DrawGetTextAlignment", scope: !1, file: !1, line: 2192, type: !3325, scopeLine: 2193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!1007, !1212}
!3327 = !DILocalVariable(name: "wand", arg: 1, scope: !3324, file: !1, line: 2192, type: !1212)
!3328 = !DILocation(line: 2192, column: 62, scope: !3324)
!3329 = !DILocation(line: 2196, column: 7, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3324, file: !1, line: 2196, column: 7)
!3331 = !DILocation(line: 2196, column: 13, scope: !3330)
!3332 = !DILocation(line: 2196, column: 19, scope: !3330)
!3333 = !DILocation(line: 2196, column: 7, scope: !3324)
!3334 = !DILocation(line: 2197, column: 60, scope: !3330)
!3335 = !DILocation(line: 2197, column: 66, scope: !3330)
!3336 = !DILocation(line: 2197, column: 12, scope: !3330)
!3337 = !DILocation(line: 2197, column: 5, scope: !3330)
!3338 = !DILocation(line: 2198, column: 10, scope: !3324)
!3339 = !DILocation(line: 2198, column: 26, scope: !3324)
!3340 = !DILocation(line: 2198, column: 3, scope: !3324)
!3341 = distinct !DISubprogram(name: "DrawGetTextAntialias", scope: !1, file: !1, line: 2224, type: !3105, scopeLine: 2225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3342 = !DILocalVariable(name: "wand", arg: 1, scope: !3341, file: !1, line: 2224, type: !1212)
!3343 = !DILocation(line: 2224, column: 70, scope: !3341)
!3344 = !DILocation(line: 2228, column: 7, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3341, file: !1, line: 2228, column: 7)
!3346 = !DILocation(line: 2228, column: 13, scope: !3345)
!3347 = !DILocation(line: 2228, column: 19, scope: !3345)
!3348 = !DILocation(line: 2228, column: 7, scope: !3341)
!3349 = !DILocation(line: 2229, column: 60, scope: !3345)
!3350 = !DILocation(line: 2229, column: 66, scope: !3345)
!3351 = !DILocation(line: 2229, column: 12, scope: !3345)
!3352 = !DILocation(line: 2229, column: 5, scope: !3345)
!3353 = !DILocation(line: 2230, column: 10, scope: !3341)
!3354 = !DILocation(line: 2230, column: 26, scope: !3341)
!3355 = !DILocation(line: 2230, column: 3, scope: !3341)
!3356 = distinct !DISubprogram(name: "DrawGetTextDecoration", scope: !1, file: !1, line: 2256, type: !3357, scopeLine: 2257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3357 = !DISubroutineType(types: !3358)
!3358 = !{!991, !1212}
!3359 = !DILocalVariable(name: "wand", arg: 1, scope: !3356, file: !1, line: 2256, type: !1212)
!3360 = !DILocation(line: 2256, column: 68, scope: !3356)
!3361 = !DILocation(line: 2260, column: 7, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3356, file: !1, line: 2260, column: 7)
!3363 = !DILocation(line: 2260, column: 13, scope: !3362)
!3364 = !DILocation(line: 2260, column: 19, scope: !3362)
!3365 = !DILocation(line: 2260, column: 7, scope: !3356)
!3366 = !DILocation(line: 2261, column: 60, scope: !3362)
!3367 = !DILocation(line: 2261, column: 66, scope: !3362)
!3368 = !DILocation(line: 2261, column: 12, scope: !3362)
!3369 = !DILocation(line: 2261, column: 5, scope: !3362)
!3370 = !DILocation(line: 2262, column: 10, scope: !3356)
!3371 = !DILocation(line: 2262, column: 26, scope: !3356)
!3372 = !DILocation(line: 2262, column: 3, scope: !3356)
!3373 = distinct !DISubprogram(name: "DrawGetTextDirection", scope: !1, file: !1, line: 2288, type: !3374, scopeLine: 2289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{!1037, !1212}
!3376 = !DILocalVariable(name: "wand", arg: 1, scope: !3373, file: !1, line: 2288, type: !1212)
!3377 = !DILocation(line: 2288, column: 66, scope: !3373)
!3378 = !DILocation(line: 2292, column: 7, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3373, file: !1, line: 2292, column: 7)
!3380 = !DILocation(line: 2292, column: 13, scope: !3379)
!3381 = !DILocation(line: 2292, column: 19, scope: !3379)
!3382 = !DILocation(line: 2292, column: 7, scope: !3373)
!3383 = !DILocation(line: 2293, column: 60, scope: !3379)
!3384 = !DILocation(line: 2293, column: 66, scope: !3379)
!3385 = !DILocation(line: 2293, column: 12, scope: !3379)
!3386 = !DILocation(line: 2293, column: 5, scope: !3379)
!3387 = !DILocation(line: 2294, column: 10, scope: !3373)
!3388 = !DILocation(line: 2294, column: 26, scope: !3373)
!3389 = !DILocation(line: 2294, column: 3, scope: !3373)
!3390 = distinct !DISubprogram(name: "DrawGetTextEncoding", scope: !1, file: !1, line: 2321, type: !2681, scopeLine: 2322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3391 = !DILocalVariable(name: "wand", arg: 1, scope: !3390, file: !1, line: 2321, type: !1212)
!3392 = !DILocation(line: 2321, column: 57, scope: !3390)
!3393 = !DILocation(line: 2325, column: 7, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3390, file: !1, line: 2325, column: 7)
!3395 = !DILocation(line: 2325, column: 13, scope: !3394)
!3396 = !DILocation(line: 2325, column: 19, scope: !3394)
!3397 = !DILocation(line: 2325, column: 7, scope: !3390)
!3398 = !DILocation(line: 2326, column: 60, scope: !3394)
!3399 = !DILocation(line: 2326, column: 66, scope: !3394)
!3400 = !DILocation(line: 2326, column: 12, scope: !3394)
!3401 = !DILocation(line: 2326, column: 5, scope: !3394)
!3402 = !DILocation(line: 2327, column: 7, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3390, file: !1, line: 2327, column: 7)
!3404 = !DILocation(line: 2327, column: 23, scope: !3403)
!3405 = !DILocation(line: 2327, column: 32, scope: !3403)
!3406 = !DILocation(line: 2327, column: 7, scope: !3390)
!3407 = !DILocation(line: 2328, column: 35, scope: !3403)
!3408 = !DILocation(line: 2328, column: 51, scope: !3403)
!3409 = !DILocation(line: 2328, column: 21, scope: !3403)
!3410 = !DILocation(line: 2328, column: 5, scope: !3403)
!3411 = !DILocation(line: 2329, column: 3, scope: !3390)
!3412 = !DILocation(line: 2330, column: 1, scope: !3390)
!3413 = distinct !DISubprogram(name: "DrawGetTextKerning", scope: !1, file: !1, line: 2354, type: !3414, scopeLine: 2355, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!715, !1172}
!3416 = !DILocalVariable(name: "wand", arg: 1, scope: !3413, file: !1, line: 2354, type: !1172)
!3417 = !DILocation(line: 2354, column: 51, scope: !3413)
!3418 = !DILocation(line: 2359, column: 7, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3413, file: !1, line: 2359, column: 7)
!3420 = !DILocation(line: 2359, column: 13, scope: !3419)
!3421 = !DILocation(line: 2359, column: 19, scope: !3419)
!3422 = !DILocation(line: 2359, column: 7, scope: !3413)
!3423 = !DILocation(line: 2360, column: 60, scope: !3419)
!3424 = !DILocation(line: 2360, column: 66, scope: !3419)
!3425 = !DILocation(line: 2360, column: 12, scope: !3419)
!3426 = !DILocation(line: 2360, column: 5, scope: !3419)
!3427 = !DILocation(line: 2361, column: 10, scope: !3413)
!3428 = !DILocation(line: 2361, column: 26, scope: !3413)
!3429 = !DILocation(line: 2361, column: 3, scope: !3413)
!3430 = distinct !DISubprogram(name: "DrawGetTextInterlineSpacing", scope: !1, file: !1, line: 2386, type: !3414, scopeLine: 2387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3431 = !DILocalVariable(name: "wand", arg: 1, scope: !3430, file: !1, line: 2386, type: !1172)
!3432 = !DILocation(line: 2386, column: 60, scope: !3430)
!3433 = !DILocation(line: 2390, column: 7, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3430, file: !1, line: 2390, column: 7)
!3435 = !DILocation(line: 2390, column: 13, scope: !3434)
!3436 = !DILocation(line: 2390, column: 19, scope: !3434)
!3437 = !DILocation(line: 2390, column: 7, scope: !3430)
!3438 = !DILocation(line: 2391, column: 60, scope: !3434)
!3439 = !DILocation(line: 2391, column: 66, scope: !3434)
!3440 = !DILocation(line: 2391, column: 12, scope: !3434)
!3441 = !DILocation(line: 2391, column: 5, scope: !3434)
!3442 = !DILocation(line: 2392, column: 10, scope: !3430)
!3443 = !DILocation(line: 2392, column: 26, scope: !3430)
!3444 = !DILocation(line: 2392, column: 3, scope: !3430)
!3445 = distinct !DISubprogram(name: "DrawGetTextInterwordSpacing", scope: !1, file: !1, line: 2417, type: !3414, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3446 = !DILocalVariable(name: "wand", arg: 1, scope: !3445, file: !1, line: 2417, type: !1172)
!3447 = !DILocation(line: 2417, column: 60, scope: !3445)
!3448 = !DILocation(line: 2421, column: 7, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3445, file: !1, line: 2421, column: 7)
!3450 = !DILocation(line: 2421, column: 13, scope: !3449)
!3451 = !DILocation(line: 2421, column: 19, scope: !3449)
!3452 = !DILocation(line: 2421, column: 7, scope: !3445)
!3453 = !DILocation(line: 2422, column: 60, scope: !3449)
!3454 = !DILocation(line: 2422, column: 66, scope: !3449)
!3455 = !DILocation(line: 2422, column: 12, scope: !3449)
!3456 = !DILocation(line: 2422, column: 5, scope: !3449)
!3457 = !DILocation(line: 2423, column: 10, scope: !3445)
!3458 = !DILocation(line: 2423, column: 26, scope: !3445)
!3459 = !DILocation(line: 2423, column: 3, scope: !3445)
!3460 = distinct !DISubprogram(name: "DrawGetVectorGraphics", scope: !1, file: !1, line: 2466, type: !3461, scopeLine: 2467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!692, !1172}
!3463 = !DILocalVariable(name: "wand", arg: 1, scope: !3460, file: !1, line: 2466, type: !1172)
!3464 = !DILocation(line: 2466, column: 53, scope: !3460)
!3465 = !DILocalVariable(name: "value", scope: !3460, file: !1, line: 2469, type: !911)
!3466 = !DILocation(line: 2469, column: 5, scope: !3460)
!3467 = !DILocalVariable(name: "xml", scope: !3460, file: !1, line: 2470, type: !692)
!3468 = !DILocation(line: 2470, column: 6, scope: !3460)
!3469 = !DILocalVariable(name: "pixel", scope: !3460, file: !1, line: 2473, type: !756)
!3470 = !DILocation(line: 2473, column: 5, scope: !3460)
!3471 = !DILocalVariable(name: "i", scope: !3460, file: !1, line: 2476, type: !704)
!3472 = !DILocation(line: 2476, column: 5, scope: !3460)
!3473 = !DILocalVariable(name: "child", scope: !3460, file: !1, line: 2479, type: !1204)
!3474 = !DILocation(line: 2479, column: 6, scope: !3460)
!3475 = !DILocalVariable(name: "xml_info", scope: !3460, file: !1, line: 2480, type: !1204)
!3476 = !DILocation(line: 2480, column: 6, scope: !3460)
!3477 = !DILocation(line: 2484, column: 7, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2484, column: 7)
!3479 = !DILocation(line: 2484, column: 13, scope: !3478)
!3480 = !DILocation(line: 2484, column: 19, scope: !3478)
!3481 = !DILocation(line: 2484, column: 7, scope: !3460)
!3482 = !DILocation(line: 2485, column: 60, scope: !3478)
!3483 = !DILocation(line: 2485, column: 66, scope: !3478)
!3484 = !DILocation(line: 2485, column: 12, scope: !3478)
!3485 = !DILocation(line: 2485, column: 5, scope: !3478)
!3486 = !DILocation(line: 2486, column: 12, scope: !3460)
!3487 = !DILocation(line: 2486, column: 11, scope: !3460)
!3488 = !DILocation(line: 2487, column: 7, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2487, column: 7)
!3490 = !DILocation(line: 2487, column: 16, scope: !3489)
!3491 = !DILocation(line: 2487, column: 7, scope: !3460)
!3492 = !DILocation(line: 2488, column: 5, scope: !3489)
!3493 = !DILocation(line: 2489, column: 24, scope: !3460)
!3494 = !DILocation(line: 2489, column: 30, scope: !3460)
!3495 = !DILocation(line: 2489, column: 3, scope: !3460)
!3496 = !DILocation(line: 2490, column: 27, scope: !3460)
!3497 = !DILocation(line: 2490, column: 9, scope: !3460)
!3498 = !DILocation(line: 2490, column: 8, scope: !3460)
!3499 = !DILocation(line: 2491, column: 7, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2491, column: 7)
!3501 = !DILocation(line: 2491, column: 13, scope: !3500)
!3502 = !DILocation(line: 2491, column: 7, scope: !3460)
!3503 = !DILocation(line: 2492, column: 30, scope: !3500)
!3504 = !DILocation(line: 2492, column: 36, scope: !3500)
!3505 = !DILocation(line: 2492, column: 52, scope: !3500)
!3506 = !DILocation(line: 2492, column: 12, scope: !3500)
!3507 = !DILocation(line: 2492, column: 5, scope: !3500)
!3508 = !DILocation(line: 2493, column: 27, scope: !3460)
!3509 = !DILocation(line: 2493, column: 9, scope: !3460)
!3510 = !DILocation(line: 2493, column: 8, scope: !3460)
!3511 = !DILocation(line: 2494, column: 7, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2494, column: 7)
!3513 = !DILocation(line: 2494, column: 13, scope: !3512)
!3514 = !DILocation(line: 2494, column: 7, scope: !3460)
!3515 = !DILocation(line: 2496, column: 31, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3512, file: !1, line: 2495, column: 5)
!3517 = !DILocation(line: 2497, column: 41, scope: !3516)
!3518 = !DILocation(line: 2497, column: 57, scope: !3516)
!3519 = !DILocation(line: 2497, column: 31, scope: !3516)
!3520 = !DILocation(line: 2496, column: 37, scope: !3516)
!3521 = !DILocation(line: 2496, column: 14, scope: !3516)
!3522 = !DILocation(line: 2498, column: 32, scope: !3516)
!3523 = !DILocation(line: 2498, column: 38, scope: !3516)
!3524 = !DILocation(line: 2498, column: 14, scope: !3516)
!3525 = !DILocation(line: 2499, column: 5, scope: !3516)
!3526 = !DILocation(line: 2500, column: 27, scope: !3460)
!3527 = !DILocation(line: 2500, column: 9, scope: !3460)
!3528 = !DILocation(line: 2500, column: 8, scope: !3460)
!3529 = !DILocation(line: 2501, column: 7, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2501, column: 7)
!3531 = !DILocation(line: 2501, column: 13, scope: !3530)
!3532 = !DILocation(line: 2501, column: 7, scope: !3460)
!3533 = !DILocation(line: 2503, column: 31, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3530, file: !1, line: 2502, column: 5)
!3535 = !DILocation(line: 2504, column: 41, scope: !3534)
!3536 = !DILocation(line: 2504, column: 57, scope: !3534)
!3537 = !DILocation(line: 2504, column: 31, scope: !3534)
!3538 = !DILocation(line: 2503, column: 37, scope: !3534)
!3539 = !DILocation(line: 2503, column: 14, scope: !3534)
!3540 = !DILocation(line: 2505, column: 32, scope: !3534)
!3541 = !DILocation(line: 2505, column: 38, scope: !3534)
!3542 = !DILocation(line: 2505, column: 14, scope: !3534)
!3543 = !DILocation(line: 2506, column: 5, scope: !3534)
!3544 = !DILocation(line: 2507, column: 27, scope: !3460)
!3545 = !DILocation(line: 2507, column: 9, scope: !3460)
!3546 = !DILocation(line: 2507, column: 8, scope: !3460)
!3547 = !DILocation(line: 2508, column: 7, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2508, column: 7)
!3549 = !DILocation(line: 2508, column: 13, scope: !3548)
!3550 = !DILocation(line: 2508, column: 7, scope: !3460)
!3551 = !DILocation(line: 2509, column: 30, scope: !3548)
!3552 = !DILocation(line: 2509, column: 36, scope: !3548)
!3553 = !DILocation(line: 2509, column: 52, scope: !3548)
!3554 = !DILocation(line: 2509, column: 12, scope: !3548)
!3555 = !DILocation(line: 2509, column: 5, scope: !3548)
!3556 = !DILocation(line: 2510, column: 27, scope: !3460)
!3557 = !DILocation(line: 2510, column: 9, scope: !3460)
!3558 = !DILocation(line: 2510, column: 8, scope: !3460)
!3559 = !DILocation(line: 2511, column: 7, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2511, column: 7)
!3561 = !DILocation(line: 2511, column: 13, scope: !3560)
!3562 = !DILocation(line: 2511, column: 7, scope: !3460)
!3563 = !DILocation(line: 2513, column: 11, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !1, line: 2513, column: 11)
!3565 = distinct !DILexicalBlock(scope: !3560, file: !1, line: 2512, column: 5)
!3566 = !DILocation(line: 2513, column: 27, scope: !3564)
!3567 = !DILocation(line: 2513, column: 32, scope: !3564)
!3568 = !DILocation(line: 2513, column: 40, scope: !3564)
!3569 = !DILocation(line: 2513, column: 11, scope: !3565)
!3570 = !DILocation(line: 2514, column: 21, scope: !3564)
!3571 = !DILocation(line: 2514, column: 37, scope: !3564)
!3572 = !DILocation(line: 2514, column: 42, scope: !3564)
!3573 = !DILocation(line: 2514, column: 50, scope: !3564)
!3574 = !DILocation(line: 2514, column: 15, scope: !3564)
!3575 = !DILocation(line: 2514, column: 20, scope: !3564)
!3576 = !DILocation(line: 2514, column: 9, scope: !3564)
!3577 = !DILocation(line: 2516, column: 28, scope: !3565)
!3578 = !DILocation(line: 2516, column: 34, scope: !3565)
!3579 = !DILocation(line: 2516, column: 41, scope: !3565)
!3580 = !DILocation(line: 2516, column: 57, scope: !3565)
!3581 = !DILocation(line: 2516, column: 7, scope: !3565)
!3582 = !DILocation(line: 2518, column: 39, scope: !3565)
!3583 = !DILocation(line: 2518, column: 7, scope: !3565)
!3584 = !DILocation(line: 2519, column: 32, scope: !3565)
!3585 = !DILocation(line: 2519, column: 38, scope: !3565)
!3586 = !DILocation(line: 2519, column: 14, scope: !3565)
!3587 = !DILocation(line: 2520, column: 5, scope: !3565)
!3588 = !DILocation(line: 2521, column: 27, scope: !3460)
!3589 = !DILocation(line: 2521, column: 9, scope: !3460)
!3590 = !DILocation(line: 2521, column: 8, scope: !3460)
!3591 = !DILocation(line: 2522, column: 7, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2522, column: 7)
!3593 = !DILocation(line: 2522, column: 13, scope: !3592)
!3594 = !DILocation(line: 2522, column: 7, scope: !3460)
!3595 = !DILocation(line: 2524, column: 33, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3592, file: !1, line: 2523, column: 5)
!3597 = !DILocation(line: 2525, column: 45, scope: !3596)
!3598 = !DILocation(line: 2525, column: 61, scope: !3596)
!3599 = !DILocation(line: 2525, column: 66, scope: !3596)
!3600 = !DILocation(line: 2525, column: 44, scope: !3596)
!3601 = !DILocation(line: 2525, column: 31, scope: !3596)
!3602 = !DILocation(line: 2525, column: 30, scope: !3596)
!3603 = !DILocation(line: 2524, column: 14, scope: !3596)
!3604 = !DILocation(line: 2526, column: 32, scope: !3596)
!3605 = !DILocation(line: 2526, column: 38, scope: !3596)
!3606 = !DILocation(line: 2526, column: 14, scope: !3596)
!3607 = !DILocation(line: 2527, column: 5, scope: !3596)
!3608 = !DILocation(line: 2528, column: 27, scope: !3460)
!3609 = !DILocation(line: 2528, column: 9, scope: !3460)
!3610 = !DILocation(line: 2528, column: 8, scope: !3460)
!3611 = !DILocation(line: 2529, column: 7, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2529, column: 7)
!3613 = !DILocation(line: 2529, column: 13, scope: !3612)
!3614 = !DILocation(line: 2529, column: 7, scope: !3460)
!3615 = !DILocation(line: 2531, column: 31, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3612, file: !1, line: 2530, column: 5)
!3617 = !DILocation(line: 2532, column: 41, scope: !3616)
!3618 = !DILocation(line: 2532, column: 57, scope: !3616)
!3619 = !DILocation(line: 2532, column: 31, scope: !3616)
!3620 = !DILocation(line: 2531, column: 37, scope: !3616)
!3621 = !DILocation(line: 2531, column: 14, scope: !3616)
!3622 = !DILocation(line: 2534, column: 32, scope: !3616)
!3623 = !DILocation(line: 2534, column: 38, scope: !3616)
!3624 = !DILocation(line: 2534, column: 14, scope: !3616)
!3625 = !DILocation(line: 2535, column: 5, scope: !3616)
!3626 = !DILocation(line: 2536, column: 27, scope: !3460)
!3627 = !DILocation(line: 2536, column: 9, scope: !3460)
!3628 = !DILocation(line: 2536, column: 8, scope: !3460)
!3629 = !DILocation(line: 2537, column: 7, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2537, column: 7)
!3631 = !DILocation(line: 2537, column: 13, scope: !3630)
!3632 = !DILocation(line: 2537, column: 7, scope: !3460)
!3633 = !DILocation(line: 2538, column: 30, scope: !3630)
!3634 = !DILocation(line: 2538, column: 36, scope: !3630)
!3635 = !DILocation(line: 2538, column: 52, scope: !3630)
!3636 = !DILocation(line: 2538, column: 12, scope: !3630)
!3637 = !DILocation(line: 2538, column: 5, scope: !3630)
!3638 = !DILocation(line: 2539, column: 27, scope: !3460)
!3639 = !DILocation(line: 2539, column: 9, scope: !3460)
!3640 = !DILocation(line: 2539, column: 8, scope: !3460)
!3641 = !DILocation(line: 2540, column: 7, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2540, column: 7)
!3643 = !DILocation(line: 2540, column: 13, scope: !3642)
!3644 = !DILocation(line: 2540, column: 7, scope: !3460)
!3645 = !DILocation(line: 2541, column: 30, scope: !3642)
!3646 = !DILocation(line: 2541, column: 36, scope: !3642)
!3647 = !DILocation(line: 2541, column: 52, scope: !3642)
!3648 = !DILocation(line: 2541, column: 12, scope: !3642)
!3649 = !DILocation(line: 2541, column: 5, scope: !3642)
!3650 = !DILocation(line: 2542, column: 27, scope: !3460)
!3651 = !DILocation(line: 2542, column: 9, scope: !3460)
!3652 = !DILocation(line: 2542, column: 8, scope: !3460)
!3653 = !DILocation(line: 2543, column: 7, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2543, column: 7)
!3655 = !DILocation(line: 2543, column: 13, scope: !3654)
!3656 = !DILocation(line: 2543, column: 7, scope: !3460)
!3657 = !DILocation(line: 2545, column: 33, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3654, file: !1, line: 2544, column: 5)
!3659 = !DILocation(line: 2546, column: 9, scope: !3658)
!3660 = !DILocation(line: 2546, column: 25, scope: !3658)
!3661 = !DILocation(line: 2545, column: 14, scope: !3658)
!3662 = !DILocation(line: 2547, column: 32, scope: !3658)
!3663 = !DILocation(line: 2547, column: 38, scope: !3658)
!3664 = !DILocation(line: 2547, column: 14, scope: !3658)
!3665 = !DILocation(line: 2548, column: 5, scope: !3658)
!3666 = !DILocation(line: 2549, column: 27, scope: !3460)
!3667 = !DILocation(line: 2549, column: 9, scope: !3460)
!3668 = !DILocation(line: 2549, column: 8, scope: !3460)
!3669 = !DILocation(line: 2550, column: 7, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2550, column: 7)
!3671 = !DILocation(line: 2550, column: 13, scope: !3670)
!3672 = !DILocation(line: 2550, column: 7, scope: !3460)
!3673 = !DILocation(line: 2552, column: 31, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3670, file: !1, line: 2551, column: 5)
!3675 = !DILocation(line: 2553, column: 40, scope: !3674)
!3676 = !DILocation(line: 2553, column: 56, scope: !3674)
!3677 = !DILocation(line: 2553, column: 30, scope: !3674)
!3678 = !DILocation(line: 2552, column: 37, scope: !3674)
!3679 = !DILocation(line: 2552, column: 14, scope: !3674)
!3680 = !DILocation(line: 2554, column: 32, scope: !3674)
!3681 = !DILocation(line: 2554, column: 38, scope: !3674)
!3682 = !DILocation(line: 2554, column: 14, scope: !3674)
!3683 = !DILocation(line: 2555, column: 5, scope: !3674)
!3684 = !DILocation(line: 2556, column: 27, scope: !3460)
!3685 = !DILocation(line: 2556, column: 9, scope: !3460)
!3686 = !DILocation(line: 2556, column: 8, scope: !3460)
!3687 = !DILocation(line: 2557, column: 7, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2557, column: 7)
!3689 = !DILocation(line: 2557, column: 13, scope: !3688)
!3690 = !DILocation(line: 2557, column: 7, scope: !3460)
!3691 = !DILocation(line: 2559, column: 31, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3688, file: !1, line: 2558, column: 5)
!3693 = !DILocation(line: 2560, column: 38, scope: !3692)
!3694 = !DILocation(line: 2560, column: 54, scope: !3692)
!3695 = !DILocation(line: 2560, column: 28, scope: !3692)
!3696 = !DILocation(line: 2559, column: 37, scope: !3692)
!3697 = !DILocation(line: 2559, column: 14, scope: !3692)
!3698 = !DILocation(line: 2561, column: 32, scope: !3692)
!3699 = !DILocation(line: 2561, column: 38, scope: !3692)
!3700 = !DILocation(line: 2561, column: 14, scope: !3692)
!3701 = !DILocation(line: 2562, column: 5, scope: !3692)
!3702 = !DILocation(line: 2563, column: 27, scope: !3460)
!3703 = !DILocation(line: 2563, column: 9, scope: !3460)
!3704 = !DILocation(line: 2563, column: 8, scope: !3460)
!3705 = !DILocation(line: 2564, column: 7, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2564, column: 7)
!3707 = !DILocation(line: 2564, column: 13, scope: !3706)
!3708 = !DILocation(line: 2564, column: 7, scope: !3460)
!3709 = !DILocation(line: 2566, column: 33, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3706, file: !1, line: 2565, column: 5)
!3711 = !DILocation(line: 2567, column: 9, scope: !3710)
!3712 = !DILocation(line: 2567, column: 25, scope: !3710)
!3713 = !DILocation(line: 2566, column: 61, scope: !3710)
!3714 = !DILocation(line: 2566, column: 14, scope: !3710)
!3715 = !DILocation(line: 2568, column: 32, scope: !3710)
!3716 = !DILocation(line: 2568, column: 38, scope: !3710)
!3717 = !DILocation(line: 2568, column: 14, scope: !3710)
!3718 = !DILocation(line: 2569, column: 5, scope: !3710)
!3719 = !DILocation(line: 2570, column: 27, scope: !3460)
!3720 = !DILocation(line: 2570, column: 9, scope: !3460)
!3721 = !DILocation(line: 2570, column: 8, scope: !3460)
!3722 = !DILocation(line: 2571, column: 7, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2571, column: 7)
!3724 = !DILocation(line: 2571, column: 13, scope: !3723)
!3725 = !DILocation(line: 2571, column: 7, scope: !3460)
!3726 = !DILocation(line: 2573, column: 31, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3723, file: !1, line: 2572, column: 5)
!3728 = !DILocation(line: 2574, column: 19, scope: !3727)
!3729 = !DILocation(line: 2574, column: 35, scope: !3727)
!3730 = !DILocation(line: 2574, column: 9, scope: !3727)
!3731 = !DILocation(line: 2573, column: 37, scope: !3727)
!3732 = !DILocation(line: 2573, column: 14, scope: !3727)
!3733 = !DILocation(line: 2575, column: 32, scope: !3727)
!3734 = !DILocation(line: 2575, column: 38, scope: !3727)
!3735 = !DILocation(line: 2575, column: 14, scope: !3727)
!3736 = !DILocation(line: 2576, column: 5, scope: !3727)
!3737 = !DILocation(line: 2577, column: 27, scope: !3460)
!3738 = !DILocation(line: 2577, column: 9, scope: !3460)
!3739 = !DILocation(line: 2577, column: 8, scope: !3460)
!3740 = !DILocation(line: 2578, column: 7, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2578, column: 7)
!3742 = !DILocation(line: 2578, column: 13, scope: !3741)
!3743 = !DILocation(line: 2578, column: 7, scope: !3460)
!3744 = !DILocation(line: 2580, column: 11, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !1, line: 2580, column: 11)
!3746 = distinct !DILexicalBlock(scope: !3741, file: !1, line: 2579, column: 5)
!3747 = !DILocation(line: 2580, column: 27, scope: !3745)
!3748 = !DILocation(line: 2580, column: 34, scope: !3745)
!3749 = !DILocation(line: 2580, column: 42, scope: !3745)
!3750 = !DILocation(line: 2580, column: 11, scope: !3746)
!3751 = !DILocation(line: 2581, column: 21, scope: !3745)
!3752 = !DILocation(line: 2581, column: 37, scope: !3745)
!3753 = !DILocation(line: 2581, column: 44, scope: !3745)
!3754 = !DILocation(line: 2581, column: 52, scope: !3745)
!3755 = !DILocation(line: 2581, column: 15, scope: !3745)
!3756 = !DILocation(line: 2581, column: 20, scope: !3745)
!3757 = !DILocation(line: 2581, column: 9, scope: !3745)
!3758 = !DILocation(line: 2583, column: 28, scope: !3746)
!3759 = !DILocation(line: 2583, column: 34, scope: !3746)
!3760 = !DILocation(line: 2583, column: 41, scope: !3746)
!3761 = !DILocation(line: 2583, column: 57, scope: !3746)
!3762 = !DILocation(line: 2583, column: 7, scope: !3746)
!3763 = !DILocation(line: 2585, column: 39, scope: !3746)
!3764 = !DILocation(line: 2585, column: 7, scope: !3746)
!3765 = !DILocation(line: 2586, column: 32, scope: !3746)
!3766 = !DILocation(line: 2586, column: 38, scope: !3746)
!3767 = !DILocation(line: 2586, column: 14, scope: !3746)
!3768 = !DILocation(line: 2587, column: 5, scope: !3746)
!3769 = !DILocation(line: 2588, column: 27, scope: !3460)
!3770 = !DILocation(line: 2588, column: 9, scope: !3460)
!3771 = !DILocation(line: 2588, column: 8, scope: !3460)
!3772 = !DILocation(line: 2589, column: 7, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2589, column: 7)
!3774 = !DILocation(line: 2589, column: 13, scope: !3773)
!3775 = !DILocation(line: 2589, column: 7, scope: !3460)
!3776 = !DILocation(line: 2591, column: 33, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3773, file: !1, line: 2590, column: 5)
!3778 = !DILocation(line: 2592, column: 9, scope: !3777)
!3779 = !DILocation(line: 2592, column: 25, scope: !3777)
!3780 = !DILocation(line: 2592, column: 42, scope: !3777)
!3781 = !DILocation(line: 2591, column: 14, scope: !3777)
!3782 = !DILocation(line: 2593, column: 32, scope: !3777)
!3783 = !DILocation(line: 2593, column: 38, scope: !3777)
!3784 = !DILocation(line: 2593, column: 14, scope: !3777)
!3785 = !DILocation(line: 2594, column: 5, scope: !3777)
!3786 = !DILocation(line: 2595, column: 27, scope: !3460)
!3787 = !DILocation(line: 2595, column: 9, scope: !3460)
!3788 = !DILocation(line: 2595, column: 8, scope: !3460)
!3789 = !DILocation(line: 2596, column: 8, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2596, column: 7)
!3791 = !DILocation(line: 2596, column: 14, scope: !3790)
!3792 = !DILocation(line: 2596, column: 39, scope: !3790)
!3793 = !DILocation(line: 2597, column: 8, scope: !3790)
!3794 = !DILocation(line: 2597, column: 24, scope: !3790)
!3795 = !DILocation(line: 2597, column: 37, scope: !3790)
!3796 = !DILocation(line: 2596, column: 7, scope: !3460)
!3797 = !DILocalVariable(name: "dash_pattern", scope: !3798, file: !1, line: 2600, type: !692)
!3798 = distinct !DILexicalBlock(scope: !3790, file: !1, line: 2598, column: 5)
!3799 = !DILocation(line: 2600, column: 10, scope: !3798)
!3800 = !DILocation(line: 2602, column: 20, scope: !3798)
!3801 = !DILocation(line: 2602, column: 19, scope: !3798)
!3802 = !DILocation(line: 2603, column: 13, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3798, file: !1, line: 2603, column: 7)
!3804 = !DILocation(line: 2603, column: 12, scope: !3803)
!3805 = !DILocation(line: 2603, column: 17, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3803, file: !1, line: 2603, column: 7)
!3807 = !DILocation(line: 2603, column: 33, scope: !3806)
!3808 = !DILocation(line: 2603, column: 46, scope: !3806)
!3809 = !DILocation(line: 2603, column: 49, scope: !3806)
!3810 = !DILocation(line: 2603, column: 7, scope: !3803)
!3811 = !DILocation(line: 2605, column: 13, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !1, line: 2605, column: 13)
!3813 = distinct !DILexicalBlock(scope: !3806, file: !1, line: 2604, column: 7)
!3814 = !DILocation(line: 2605, column: 15, scope: !3812)
!3815 = !DILocation(line: 2605, column: 13, scope: !3813)
!3816 = !DILocation(line: 2606, column: 18, scope: !3812)
!3817 = !DILocation(line: 2606, column: 11, scope: !3812)
!3818 = !DILocation(line: 2607, column: 35, scope: !3813)
!3819 = !DILocation(line: 2608, column: 11, scope: !3813)
!3820 = !DILocation(line: 2608, column: 27, scope: !3813)
!3821 = !DILocation(line: 2608, column: 40, scope: !3813)
!3822 = !DILocation(line: 2607, column: 16, scope: !3813)
!3823 = !DILocation(line: 2609, column: 48, scope: !3813)
!3824 = !DILocation(line: 2609, column: 16, scope: !3813)
!3825 = !DILocation(line: 2610, column: 7, scope: !3813)
!3826 = !DILocation(line: 2603, column: 58, scope: !3806)
!3827 = !DILocation(line: 2603, column: 7, scope: !3806)
!3828 = distinct !{!3828, !3810, !3829}
!3829 = !DILocation(line: 2610, column: 7, scope: !3803)
!3830 = !DILocation(line: 2611, column: 32, scope: !3798)
!3831 = !DILocation(line: 2611, column: 38, scope: !3798)
!3832 = !DILocation(line: 2611, column: 14, scope: !3798)
!3833 = !DILocation(line: 2612, column: 34, scope: !3798)
!3834 = !DILocation(line: 2612, column: 20, scope: !3798)
!3835 = !DILocation(line: 2612, column: 19, scope: !3798)
!3836 = !DILocation(line: 2613, column: 5, scope: !3798)
!3837 = !DILocation(line: 2614, column: 27, scope: !3460)
!3838 = !DILocation(line: 2614, column: 9, scope: !3460)
!3839 = !DILocation(line: 2614, column: 8, scope: !3460)
!3840 = !DILocation(line: 2615, column: 7, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2615, column: 7)
!3842 = !DILocation(line: 2615, column: 13, scope: !3841)
!3843 = !DILocation(line: 2615, column: 7, scope: !3460)
!3844 = !DILocation(line: 2617, column: 33, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3841, file: !1, line: 2616, column: 5)
!3846 = !DILocation(line: 2618, column: 9, scope: !3845)
!3847 = !DILocation(line: 2618, column: 25, scope: !3845)
!3848 = !DILocation(line: 2617, column: 14, scope: !3845)
!3849 = !DILocation(line: 2619, column: 32, scope: !3845)
!3850 = !DILocation(line: 2619, column: 38, scope: !3845)
!3851 = !DILocation(line: 2619, column: 14, scope: !3845)
!3852 = !DILocation(line: 2620, column: 5, scope: !3845)
!3853 = !DILocation(line: 2621, column: 27, scope: !3460)
!3854 = !DILocation(line: 2621, column: 9, scope: !3460)
!3855 = !DILocation(line: 2621, column: 8, scope: !3460)
!3856 = !DILocation(line: 2622, column: 7, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2622, column: 7)
!3858 = !DILocation(line: 2622, column: 13, scope: !3857)
!3859 = !DILocation(line: 2622, column: 7, scope: !3460)
!3860 = !DILocation(line: 2624, column: 31, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3857, file: !1, line: 2623, column: 5)
!3862 = !DILocation(line: 2625, column: 19, scope: !3861)
!3863 = !DILocation(line: 2625, column: 35, scope: !3861)
!3864 = !DILocation(line: 2625, column: 9, scope: !3861)
!3865 = !DILocation(line: 2624, column: 37, scope: !3861)
!3866 = !DILocation(line: 2624, column: 14, scope: !3861)
!3867 = !DILocation(line: 2626, column: 32, scope: !3861)
!3868 = !DILocation(line: 2626, column: 38, scope: !3861)
!3869 = !DILocation(line: 2626, column: 14, scope: !3861)
!3870 = !DILocation(line: 2627, column: 5, scope: !3861)
!3871 = !DILocation(line: 2628, column: 27, scope: !3460)
!3872 = !DILocation(line: 2628, column: 9, scope: !3460)
!3873 = !DILocation(line: 2628, column: 8, scope: !3460)
!3874 = !DILocation(line: 2629, column: 7, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2629, column: 7)
!3876 = !DILocation(line: 2629, column: 13, scope: !3875)
!3877 = !DILocation(line: 2629, column: 7, scope: !3460)
!3878 = !DILocation(line: 2631, column: 31, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3875, file: !1, line: 2630, column: 5)
!3880 = !DILocation(line: 2632, column: 41, scope: !3879)
!3881 = !DILocation(line: 2632, column: 57, scope: !3879)
!3882 = !DILocation(line: 2632, column: 31, scope: !3879)
!3883 = !DILocation(line: 2631, column: 37, scope: !3879)
!3884 = !DILocation(line: 2631, column: 14, scope: !3879)
!3885 = !DILocation(line: 2634, column: 32, scope: !3879)
!3886 = !DILocation(line: 2634, column: 38, scope: !3879)
!3887 = !DILocation(line: 2634, column: 14, scope: !3879)
!3888 = !DILocation(line: 2635, column: 5, scope: !3879)
!3889 = !DILocation(line: 2636, column: 27, scope: !3460)
!3890 = !DILocation(line: 2636, column: 9, scope: !3460)
!3891 = !DILocation(line: 2636, column: 8, scope: !3460)
!3892 = !DILocation(line: 2637, column: 7, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2637, column: 7)
!3894 = !DILocation(line: 2637, column: 13, scope: !3893)
!3895 = !DILocation(line: 2637, column: 7, scope: !3460)
!3896 = !DILocation(line: 2639, column: 33, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3893, file: !1, line: 2638, column: 5)
!3898 = !DILocation(line: 2640, column: 9, scope: !3897)
!3899 = !DILocation(line: 2640, column: 25, scope: !3897)
!3900 = !DILocation(line: 2639, column: 61, scope: !3897)
!3901 = !DILocation(line: 2639, column: 14, scope: !3897)
!3902 = !DILocation(line: 2641, column: 32, scope: !3897)
!3903 = !DILocation(line: 2641, column: 38, scope: !3897)
!3904 = !DILocation(line: 2641, column: 14, scope: !3897)
!3905 = !DILocation(line: 2642, column: 5, scope: !3897)
!3906 = !DILocation(line: 2643, column: 27, scope: !3460)
!3907 = !DILocation(line: 2643, column: 9, scope: !3460)
!3908 = !DILocation(line: 2643, column: 8, scope: !3460)
!3909 = !DILocation(line: 2644, column: 7, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2644, column: 7)
!3911 = !DILocation(line: 2644, column: 13, scope: !3910)
!3912 = !DILocation(line: 2644, column: 7, scope: !3460)
!3913 = !DILocation(line: 2646, column: 33, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3910, file: !1, line: 2645, column: 5)
!3915 = !DILocation(line: 2647, column: 45, scope: !3914)
!3916 = !DILocation(line: 2647, column: 61, scope: !3914)
!3917 = !DILocation(line: 2647, column: 68, scope: !3914)
!3918 = !DILocation(line: 2647, column: 44, scope: !3914)
!3919 = !DILocation(line: 2647, column: 31, scope: !3914)
!3920 = !DILocation(line: 2647, column: 30, scope: !3914)
!3921 = !DILocation(line: 2646, column: 14, scope: !3914)
!3922 = !DILocation(line: 2648, column: 32, scope: !3914)
!3923 = !DILocation(line: 2648, column: 38, scope: !3914)
!3924 = !DILocation(line: 2648, column: 14, scope: !3914)
!3925 = !DILocation(line: 2649, column: 5, scope: !3914)
!3926 = !DILocation(line: 2650, column: 27, scope: !3460)
!3927 = !DILocation(line: 2650, column: 9, scope: !3460)
!3928 = !DILocation(line: 2650, column: 8, scope: !3460)
!3929 = !DILocation(line: 2651, column: 7, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2651, column: 7)
!3931 = !DILocation(line: 2651, column: 13, scope: !3930)
!3932 = !DILocation(line: 2651, column: 7, scope: !3460)
!3933 = !DILocation(line: 2653, column: 33, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3930, file: !1, line: 2652, column: 5)
!3935 = !DILocation(line: 2654, column: 9, scope: !3934)
!3936 = !DILocation(line: 2654, column: 25, scope: !3934)
!3937 = !DILocation(line: 2653, column: 14, scope: !3934)
!3938 = !DILocation(line: 2655, column: 32, scope: !3934)
!3939 = !DILocation(line: 2655, column: 38, scope: !3934)
!3940 = !DILocation(line: 2655, column: 14, scope: !3934)
!3941 = !DILocation(line: 2656, column: 5, scope: !3934)
!3942 = !DILocation(line: 2657, column: 27, scope: !3460)
!3943 = !DILocation(line: 2657, column: 9, scope: !3460)
!3944 = !DILocation(line: 2657, column: 8, scope: !3460)
!3945 = !DILocation(line: 2658, column: 7, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2658, column: 7)
!3947 = !DILocation(line: 2658, column: 13, scope: !3946)
!3948 = !DILocation(line: 2658, column: 7, scope: !3460)
!3949 = !DILocation(line: 2660, column: 31, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3946, file: !1, line: 2659, column: 5)
!3951 = !DILocation(line: 2661, column: 19, scope: !3950)
!3952 = !DILocation(line: 2661, column: 35, scope: !3950)
!3953 = !DILocation(line: 2661, column: 9, scope: !3950)
!3954 = !DILocation(line: 2660, column: 37, scope: !3950)
!3955 = !DILocation(line: 2660, column: 14, scope: !3950)
!3956 = !DILocation(line: 2662, column: 32, scope: !3950)
!3957 = !DILocation(line: 2662, column: 38, scope: !3950)
!3958 = !DILocation(line: 2662, column: 14, scope: !3950)
!3959 = !DILocation(line: 2663, column: 5, scope: !3950)
!3960 = !DILocation(line: 2664, column: 27, scope: !3460)
!3961 = !DILocation(line: 2664, column: 9, scope: !3460)
!3962 = !DILocation(line: 2664, column: 8, scope: !3460)
!3963 = !DILocation(line: 2665, column: 7, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2665, column: 7)
!3965 = !DILocation(line: 2665, column: 13, scope: !3964)
!3966 = !DILocation(line: 2665, column: 7, scope: !3460)
!3967 = !DILocation(line: 2667, column: 33, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3964, file: !1, line: 2666, column: 5)
!3969 = !DILocation(line: 2668, column: 9, scope: !3968)
!3970 = !DILocation(line: 2668, column: 25, scope: !3968)
!3971 = !DILocation(line: 2668, column: 40, scope: !3968)
!3972 = !DILocation(line: 2667, column: 14, scope: !3968)
!3973 = !DILocation(line: 2669, column: 32, scope: !3968)
!3974 = !DILocation(line: 2669, column: 38, scope: !3968)
!3975 = !DILocation(line: 2669, column: 14, scope: !3968)
!3976 = !DILocation(line: 2670, column: 5, scope: !3968)
!3977 = !DILocation(line: 2671, column: 27, scope: !3460)
!3978 = !DILocation(line: 2671, column: 9, scope: !3460)
!3979 = !DILocation(line: 2671, column: 8, scope: !3460)
!3980 = !DILocation(line: 2672, column: 7, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2672, column: 7)
!3982 = !DILocation(line: 2672, column: 13, scope: !3981)
!3983 = !DILocation(line: 2672, column: 7, scope: !3460)
!3984 = !DILocation(line: 2674, column: 11, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !1, line: 2674, column: 11)
!3986 = distinct !DILexicalBlock(scope: !3981, file: !1, line: 2673, column: 5)
!3987 = !DILocation(line: 2674, column: 27, scope: !3985)
!3988 = !DILocation(line: 2674, column: 38, scope: !3985)
!3989 = !DILocation(line: 2674, column: 46, scope: !3985)
!3990 = !DILocation(line: 2674, column: 11, scope: !3986)
!3991 = !DILocation(line: 2675, column: 21, scope: !3985)
!3992 = !DILocation(line: 2675, column: 37, scope: !3985)
!3993 = !DILocation(line: 2675, column: 48, scope: !3985)
!3994 = !DILocation(line: 2675, column: 56, scope: !3985)
!3995 = !DILocation(line: 2675, column: 15, scope: !3985)
!3996 = !DILocation(line: 2675, column: 20, scope: !3985)
!3997 = !DILocation(line: 2675, column: 9, scope: !3985)
!3998 = !DILocation(line: 2677, column: 28, scope: !3986)
!3999 = !DILocation(line: 2677, column: 34, scope: !3986)
!4000 = !DILocation(line: 2677, column: 41, scope: !3986)
!4001 = !DILocation(line: 2677, column: 57, scope: !3986)
!4002 = !DILocation(line: 2677, column: 7, scope: !3986)
!4003 = !DILocation(line: 2679, column: 39, scope: !3986)
!4004 = !DILocation(line: 2679, column: 7, scope: !3986)
!4005 = !DILocation(line: 2680, column: 32, scope: !3986)
!4006 = !DILocation(line: 2680, column: 38, scope: !3986)
!4007 = !DILocation(line: 2680, column: 14, scope: !3986)
!4008 = !DILocation(line: 2681, column: 5, scope: !3986)
!4009 = !DILocation(line: 2682, column: 27, scope: !3460)
!4010 = !DILocation(line: 2682, column: 9, scope: !3460)
!4011 = !DILocation(line: 2682, column: 8, scope: !3460)
!4012 = !DILocation(line: 2683, column: 7, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 2683, column: 7)
!4014 = !DILocation(line: 2683, column: 13, scope: !4013)
!4015 = !DILocation(line: 2683, column: 7, scope: !3460)
!4016 = !DILocation(line: 2684, column: 30, scope: !4013)
!4017 = !DILocation(line: 2684, column: 36, scope: !4013)
!4018 = !DILocation(line: 2684, column: 42, scope: !4013)
!4019 = !DILocation(line: 2684, column: 12, scope: !4013)
!4020 = !DILocation(line: 2684, column: 5, scope: !4013)
!4021 = !DILocation(line: 2685, column: 24, scope: !3460)
!4022 = !DILocation(line: 2685, column: 7, scope: !3460)
!4023 = !DILocation(line: 2685, column: 6, scope: !3460)
!4024 = !DILocation(line: 2686, column: 27, scope: !3460)
!4025 = !DILocation(line: 2686, column: 12, scope: !3460)
!4026 = !DILocation(line: 2686, column: 11, scope: !3460)
!4027 = !DILocation(line: 2687, column: 10, scope: !3460)
!4028 = !DILocation(line: 2687, column: 3, scope: !3460)
!4029 = !DILocation(line: 2688, column: 1, scope: !3460)
!4030 = distinct !DISubprogram(name: "SetMagickPixelPacket", scope: !1, file: !1, line: 2452, type: !4031, scopeLine: 2454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{null, !1094, !4033, !1208, !4035}
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !724)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!4036 = !DILocalVariable(name: "image", arg: 1, scope: !4030, file: !1, line: 2452, type: !1094)
!4037 = !DILocation(line: 2452, column: 54, scope: !4030)
!4038 = !DILocalVariable(name: "color", arg: 2, scope: !4030, file: !1, line: 2453, type: !4033)
!4039 = !DILocation(line: 2453, column: 22, scope: !4030)
!4040 = !DILocalVariable(name: "index", arg: 3, scope: !4030, file: !1, line: 2453, type: !1208)
!4041 = !DILocation(line: 2453, column: 47, scope: !4030)
!4042 = !DILocalVariable(name: "pixel", arg: 4, scope: !4030, file: !1, line: 2453, type: !4035)
!4043 = !DILocation(line: 2453, column: 72, scope: !4030)
!4044 = !DILocation(line: 2455, column: 31, scope: !4030)
!4045 = !DILocation(line: 2455, column: 14, scope: !4030)
!4046 = !DILocation(line: 2455, column: 3, scope: !4030)
!4047 = !DILocation(line: 2455, column: 10, scope: !4030)
!4048 = !DILocation(line: 2455, column: 13, scope: !4030)
!4049 = !DILocation(line: 2456, column: 33, scope: !4030)
!4050 = !DILocation(line: 2456, column: 16, scope: !4030)
!4051 = !DILocation(line: 2456, column: 3, scope: !4030)
!4052 = !DILocation(line: 2456, column: 10, scope: !4030)
!4053 = !DILocation(line: 2456, column: 15, scope: !4030)
!4054 = !DILocation(line: 2457, column: 32, scope: !4030)
!4055 = !DILocation(line: 2457, column: 15, scope: !4030)
!4056 = !DILocation(line: 2457, column: 3, scope: !4030)
!4057 = !DILocation(line: 2457, column: 10, scope: !4030)
!4058 = !DILocation(line: 2457, column: 14, scope: !4030)
!4059 = !DILocation(line: 2458, column: 7, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4030, file: !1, line: 2458, column: 7)
!4061 = !DILocation(line: 2458, column: 14, scope: !4060)
!4062 = !DILocation(line: 2458, column: 20, scope: !4060)
!4063 = !DILocation(line: 2458, column: 7, scope: !4030)
!4064 = !DILocation(line: 2459, column: 37, scope: !4060)
!4065 = !DILocation(line: 2459, column: 20, scope: !4060)
!4066 = !DILocation(line: 2459, column: 5, scope: !4060)
!4067 = !DILocation(line: 2459, column: 12, scope: !4060)
!4068 = !DILocation(line: 2459, column: 19, scope: !4060)
!4069 = !DILocation(line: 2460, column: 9, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4030, file: !1, line: 2460, column: 7)
!4071 = !DILocation(line: 2460, column: 16, scope: !4070)
!4072 = !DILocation(line: 2460, column: 27, scope: !4070)
!4073 = !DILocation(line: 2460, column: 46, scope: !4070)
!4074 = !DILocation(line: 2461, column: 9, scope: !4070)
!4075 = !DILocation(line: 2461, column: 16, scope: !4070)
!4076 = !DILocation(line: 2461, column: 30, scope: !4070)
!4077 = !DILocation(line: 2461, column: 47, scope: !4070)
!4078 = !DILocation(line: 2462, column: 8, scope: !4070)
!4079 = !DILocation(line: 2462, column: 14, scope: !4070)
!4080 = !DILocation(line: 2460, column: 7, scope: !4030)
!4081 = !DILocation(line: 2463, column: 35, scope: !4070)
!4082 = !DILocation(line: 2463, column: 18, scope: !4070)
!4083 = !DILocation(line: 2463, column: 5, scope: !4070)
!4084 = !DILocation(line: 2463, column: 12, scope: !4070)
!4085 = !DILocation(line: 2463, column: 17, scope: !4070)
!4086 = !DILocation(line: 2464, column: 1, scope: !4030)
!4087 = distinct !DISubprogram(name: "DrawGetTextUnderColor", scope: !1, file: !1, line: 2716, type: !2656, scopeLine: 2718, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4088 = !DILocalVariable(name: "wand", arg: 1, scope: !4087, file: !1, line: 2716, type: !1212)
!4089 = !DILocation(line: 2716, column: 58, scope: !4087)
!4090 = !DILocalVariable(name: "under_color", arg: 2, scope: !4087, file: !1, line: 2717, type: !2658)
!4091 = !DILocation(line: 2717, column: 14, scope: !4087)
!4092 = !DILocation(line: 2722, column: 7, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4087, file: !1, line: 2722, column: 7)
!4094 = !DILocation(line: 2722, column: 13, scope: !4093)
!4095 = !DILocation(line: 2722, column: 19, scope: !4093)
!4096 = !DILocation(line: 2722, column: 7, scope: !4087)
!4097 = !DILocation(line: 2723, column: 60, scope: !4093)
!4098 = !DILocation(line: 2723, column: 66, scope: !4093)
!4099 = !DILocation(line: 2723, column: 12, scope: !4093)
!4100 = !DILocation(line: 2723, column: 5, scope: !4093)
!4101 = !DILocation(line: 2724, column: 24, scope: !4087)
!4102 = !DILocation(line: 2724, column: 37, scope: !4087)
!4103 = !DILocation(line: 2724, column: 53, scope: !4087)
!4104 = !DILocation(line: 2724, column: 3, scope: !4087)
!4105 = !DILocation(line: 2725, column: 1, scope: !4087)
!4106 = distinct !DISubprogram(name: "DrawLine", scope: !1, file: !1, line: 2759, type: !2340, scopeLine: 2761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4107 = !DILocalVariable(name: "wand", arg: 1, scope: !4106, file: !1, line: 2759, type: !1172)
!4108 = !DILocation(line: 2759, column: 39, scope: !4106)
!4109 = !DILocalVariable(name: "sx", arg: 2, scope: !4106, file: !1, line: 2759, type: !1203)
!4110 = !DILocation(line: 2759, column: 57, scope: !4106)
!4111 = !DILocalVariable(name: "sy", arg: 3, scope: !4106, file: !1, line: 2759, type: !1203)
!4112 = !DILocation(line: 2759, column: 73, scope: !4106)
!4113 = !DILocalVariable(name: "ex", arg: 4, scope: !4106, file: !1, line: 2760, type: !1203)
!4114 = !DILocation(line: 2760, column: 16, scope: !4106)
!4115 = !DILocalVariable(name: "ey", arg: 5, scope: !4106, file: !1, line: 2760, type: !1203)
!4116 = !DILocation(line: 2760, column: 32, scope: !4106)
!4117 = !DILocation(line: 2764, column: 7, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4106, file: !1, line: 2764, column: 7)
!4119 = !DILocation(line: 2764, column: 13, scope: !4118)
!4120 = !DILocation(line: 2764, column: 19, scope: !4118)
!4121 = !DILocation(line: 2764, column: 7, scope: !4106)
!4122 = !DILocation(line: 2765, column: 60, scope: !4118)
!4123 = !DILocation(line: 2765, column: 66, scope: !4118)
!4124 = !DILocation(line: 2765, column: 12, scope: !4118)
!4125 = !DILocation(line: 2765, column: 5, scope: !4118)
!4126 = !DILocation(line: 2766, column: 20, scope: !4106)
!4127 = !DILocation(line: 2766, column: 58, scope: !4106)
!4128 = !DILocation(line: 2766, column: 61, scope: !4106)
!4129 = !DILocation(line: 2766, column: 64, scope: !4106)
!4130 = !DILocation(line: 2766, column: 67, scope: !4106)
!4131 = !DILocation(line: 2766, column: 10, scope: !4106)
!4132 = !DILocation(line: 2767, column: 1, scope: !4106)
!4133 = distinct !DISubprogram(name: "DrawMatte", scope: !1, file: !1, line: 2808, type: !2582, scopeLine: 2810, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4134 = !DILocalVariable(name: "wand", arg: 1, scope: !4133, file: !1, line: 2808, type: !1172)
!4135 = !DILocation(line: 2808, column: 40, scope: !4133)
!4136 = !DILocalVariable(name: "x", arg: 2, scope: !4133, file: !1, line: 2808, type: !1203)
!4137 = !DILocation(line: 2808, column: 58, scope: !4133)
!4138 = !DILocalVariable(name: "y", arg: 3, scope: !4133, file: !1, line: 2808, type: !1203)
!4139 = !DILocation(line: 2808, column: 73, scope: !4133)
!4140 = !DILocalVariable(name: "paint_method", arg: 4, scope: !4133, file: !1, line: 2809, type: !2584)
!4141 = !DILocation(line: 2809, column: 21, scope: !4133)
!4142 = !DILocation(line: 2813, column: 7, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4133, file: !1, line: 2813, column: 7)
!4144 = !DILocation(line: 2813, column: 13, scope: !4143)
!4145 = !DILocation(line: 2813, column: 19, scope: !4143)
!4146 = !DILocation(line: 2813, column: 7, scope: !4133)
!4147 = !DILocation(line: 2814, column: 60, scope: !4143)
!4148 = !DILocation(line: 2814, column: 66, scope: !4143)
!4149 = !DILocation(line: 2814, column: 12, scope: !4143)
!4150 = !DILocation(line: 2814, column: 5, scope: !4143)
!4151 = !DILocation(line: 2815, column: 20, scope: !4133)
!4152 = !DILocation(line: 2815, column: 52, scope: !4133)
!4153 = !DILocation(line: 2815, column: 54, scope: !4133)
!4154 = !DILocation(line: 2816, column: 35, scope: !4133)
!4155 = !DILocation(line: 2816, column: 25, scope: !4133)
!4156 = !DILocation(line: 2815, column: 56, scope: !4133)
!4157 = !DILocation(line: 2815, column: 10, scope: !4133)
!4158 = !DILocation(line: 2817, column: 1, scope: !4133)
!4159 = distinct !DISubprogram(name: "DrawPathClose", scope: !1, file: !1, line: 2844, type: !1219, scopeLine: 2845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4160 = !DILocalVariable(name: "wand", arg: 1, scope: !4159, file: !1, line: 2844, type: !1172)
!4161 = !DILocation(line: 2844, column: 44, scope: !4159)
!4162 = !DILocation(line: 2848, column: 7, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4159, file: !1, line: 2848, column: 7)
!4164 = !DILocation(line: 2848, column: 13, scope: !4163)
!4165 = !DILocation(line: 2848, column: 19, scope: !4163)
!4166 = !DILocation(line: 2848, column: 7, scope: !4159)
!4167 = !DILocation(line: 2849, column: 60, scope: !4163)
!4168 = !DILocation(line: 2849, column: 66, scope: !4163)
!4169 = !DILocation(line: 2849, column: 12, scope: !4163)
!4170 = !DILocation(line: 2849, column: 5, scope: !4163)
!4171 = !DILocation(line: 2850, column: 28, scope: !4159)
!4172 = !DILocation(line: 2850, column: 38, scope: !4159)
!4173 = !DILocation(line: 2850, column: 44, scope: !4159)
!4174 = !DILocation(line: 2850, column: 54, scope: !4159)
!4175 = !DILocation(line: 2850, column: 10, scope: !4159)
!4176 = !DILocation(line: 2852, column: 1, scope: !4159)
!4177 = distinct !DISubprogram(name: "MvgAutoWrapPrintf", scope: !1, file: !1, line: 358, type: !1826, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4178 = !DILocalVariable(name: "wand", arg: 1, scope: !4177, file: !1, line: 358, type: !1172)
!4179 = !DILocation(line: 358, column: 43, scope: !4177)
!4180 = !DILocalVariable(name: "format", arg: 2, scope: !4177, file: !1, line: 358, type: !891)
!4181 = !DILocation(line: 358, column: 60, scope: !4177)
!4182 = !DILocalVariable(name: "buffer", scope: !4177, file: !1, line: 361, type: !911)
!4183 = !DILocation(line: 361, column: 5, scope: !4177)
!4184 = !DILocalVariable(name: "count", scope: !4177, file: !1, line: 364, type: !574)
!4185 = !DILocation(line: 364, column: 5, scope: !4177)
!4186 = !DILocalVariable(name: "argp", scope: !4177, file: !1, line: 367, type: !1908)
!4187 = !DILocation(line: 367, column: 5, scope: !4177)
!4188 = !DILocation(line: 369, column: 3, scope: !4177)
!4189 = !DILocation(line: 371, column: 19, scope: !4177)
!4190 = !DILocation(line: 371, column: 43, scope: !4177)
!4191 = !DILocation(line: 371, column: 50, scope: !4177)
!4192 = !DILocation(line: 371, column: 9, scope: !4177)
!4193 = !DILocation(line: 371, column: 8, scope: !4177)
!4194 = !DILocation(line: 375, column: 3, scope: !4177)
!4195 = !DILocation(line: 376, column: 3, scope: !4177)
!4196 = !DILocation(line: 376, column: 27, scope: !4177)
!4197 = !DILocation(line: 377, column: 7, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4177, file: !1, line: 377, column: 7)
!4199 = !DILocation(line: 377, column: 13, scope: !4198)
!4200 = !DILocation(line: 377, column: 7, scope: !4177)
!4201 = !DILocation(line: 378, column: 5, scope: !4198)
!4202 = !DILocation(line: 381, column: 13, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4204, file: !1, line: 381, column: 11)
!4204 = distinct !DILexicalBlock(scope: !4198, file: !1, line: 380, column: 5)
!4205 = !DILocation(line: 381, column: 19, scope: !4203)
!4206 = !DILocation(line: 381, column: 31, scope: !4203)
!4207 = !DILocation(line: 381, column: 29, scope: !4203)
!4208 = !DILocation(line: 381, column: 38, scope: !4203)
!4209 = !DILocation(line: 381, column: 44, scope: !4203)
!4210 = !DILocation(line: 381, column: 55, scope: !4203)
!4211 = !DILocation(line: 381, column: 60, scope: !4203)
!4212 = !DILocation(line: 381, column: 48, scope: !4203)
!4213 = !DILocation(line: 381, column: 64, scope: !4203)
!4214 = !DILocation(line: 381, column: 11, scope: !4204)
!4215 = !DILocation(line: 382, column: 26, scope: !4203)
!4216 = !DILocation(line: 382, column: 16, scope: !4203)
!4217 = !DILocation(line: 382, column: 9, scope: !4203)
!4218 = !DILocation(line: 383, column: 24, scope: !4204)
!4219 = !DILocation(line: 383, column: 34, scope: !4204)
!4220 = !DILocation(line: 383, column: 14, scope: !4204)
!4221 = !DILocation(line: 385, column: 10, scope: !4177)
!4222 = !DILocation(line: 385, column: 3, scope: !4177)
!4223 = distinct !DISubprogram(name: "DrawPathCurveToAbsolute", scope: !1, file: !1, line: 2916, type: !2236, scopeLine: 2918, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4224 = !DILocalVariable(name: "wand", arg: 1, scope: !4223, file: !1, line: 2916, type: !1172)
!4225 = !DILocation(line: 2916, column: 54, scope: !4223)
!4226 = !DILocalVariable(name: "x1", arg: 2, scope: !4223, file: !1, line: 2916, type: !1203)
!4227 = !DILocation(line: 2916, column: 72, scope: !4223)
!4228 = !DILocalVariable(name: "y1", arg: 3, scope: !4223, file: !1, line: 2917, type: !1203)
!4229 = !DILocation(line: 2917, column: 16, scope: !4223)
!4230 = !DILocalVariable(name: "x2", arg: 4, scope: !4223, file: !1, line: 2917, type: !1203)
!4231 = !DILocation(line: 2917, column: 32, scope: !4223)
!4232 = !DILocalVariable(name: "y2", arg: 5, scope: !4223, file: !1, line: 2917, type: !1203)
!4233 = !DILocation(line: 2917, column: 48, scope: !4223)
!4234 = !DILocalVariable(name: "x", arg: 6, scope: !4223, file: !1, line: 2917, type: !1203)
!4235 = !DILocation(line: 2917, column: 64, scope: !4223)
!4236 = !DILocalVariable(name: "y", arg: 7, scope: !4223, file: !1, line: 2917, type: !1203)
!4237 = !DILocation(line: 2917, column: 79, scope: !4223)
!4238 = !DILocation(line: 2921, column: 7, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4223, file: !1, line: 2921, column: 7)
!4240 = !DILocation(line: 2921, column: 13, scope: !4239)
!4241 = !DILocation(line: 2921, column: 19, scope: !4239)
!4242 = !DILocation(line: 2921, column: 7, scope: !4223)
!4243 = !DILocation(line: 2922, column: 60, scope: !4239)
!4244 = !DILocation(line: 2922, column: 66, scope: !4239)
!4245 = !DILocation(line: 2922, column: 12, scope: !4239)
!4246 = !DILocation(line: 2922, column: 5, scope: !4239)
!4247 = !DILocation(line: 2923, column: 19, scope: !4223)
!4248 = !DILocation(line: 2923, column: 41, scope: !4223)
!4249 = !DILocation(line: 2923, column: 44, scope: !4223)
!4250 = !DILocation(line: 2923, column: 47, scope: !4223)
!4251 = !DILocation(line: 2923, column: 50, scope: !4223)
!4252 = !DILocation(line: 2923, column: 53, scope: !4223)
!4253 = !DILocation(line: 2923, column: 55, scope: !4223)
!4254 = !DILocation(line: 2923, column: 3, scope: !4223)
!4255 = !DILocation(line: 2924, column: 1, scope: !4223)
!4256 = distinct !DISubprogram(name: "DrawPathCurveTo", scope: !1, file: !1, line: 2895, type: !4257, scopeLine: 2898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4257 = !DISubroutineType(types: !4258)
!4258 = !{null, !1172, !4259, !1203, !1203, !1203, !1203, !1203, !1203}
!4259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1196)
!4260 = !DILocalVariable(name: "wand", arg: 1, scope: !4256, file: !1, line: 2895, type: !1172)
!4261 = !DILocation(line: 2895, column: 42, scope: !4256)
!4262 = !DILocalVariable(name: "mode", arg: 2, scope: !4256, file: !1, line: 2895, type: !4259)
!4263 = !DILocation(line: 2895, column: 62, scope: !4256)
!4264 = !DILocalVariable(name: "x1", arg: 3, scope: !4256, file: !1, line: 2896, type: !1203)
!4265 = !DILocation(line: 2896, column: 16, scope: !4256)
!4266 = !DILocalVariable(name: "y1", arg: 4, scope: !4256, file: !1, line: 2896, type: !1203)
!4267 = !DILocation(line: 2896, column: 32, scope: !4256)
!4268 = !DILocalVariable(name: "x2", arg: 5, scope: !4256, file: !1, line: 2896, type: !1203)
!4269 = !DILocation(line: 2896, column: 48, scope: !4256)
!4270 = !DILocalVariable(name: "y2", arg: 6, scope: !4256, file: !1, line: 2896, type: !1203)
!4271 = !DILocation(line: 2896, column: 64, scope: !4256)
!4272 = !DILocalVariable(name: "x", arg: 7, scope: !4256, file: !1, line: 2897, type: !1203)
!4273 = !DILocation(line: 2897, column: 16, scope: !4256)
!4274 = !DILocalVariable(name: "y", arg: 8, scope: !4256, file: !1, line: 2897, type: !1203)
!4275 = !DILocation(line: 2897, column: 31, scope: !4256)
!4276 = !DILocation(line: 2901, column: 7, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4256, file: !1, line: 2901, column: 7)
!4278 = !DILocation(line: 2901, column: 13, scope: !4277)
!4279 = !DILocation(line: 2901, column: 19, scope: !4277)
!4280 = !DILocation(line: 2901, column: 7, scope: !4256)
!4281 = !DILocation(line: 2902, column: 60, scope: !4277)
!4282 = !DILocation(line: 2902, column: 66, scope: !4277)
!4283 = !DILocation(line: 2902, column: 12, scope: !4277)
!4284 = !DILocation(line: 2902, column: 5, scope: !4277)
!4285 = !DILocation(line: 2903, column: 8, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4256, file: !1, line: 2903, column: 7)
!4287 = !DILocation(line: 2903, column: 14, scope: !4286)
!4288 = !DILocation(line: 2903, column: 29, scope: !4286)
!4289 = !DILocation(line: 2903, column: 54, scope: !4286)
!4290 = !DILocation(line: 2904, column: 8, scope: !4286)
!4291 = !DILocation(line: 2904, column: 14, scope: !4286)
!4292 = !DILocation(line: 2904, column: 27, scope: !4286)
!4293 = !DILocation(line: 2904, column: 24, scope: !4286)
!4294 = !DILocation(line: 2903, column: 7, scope: !4256)
!4295 = !DILocation(line: 2906, column: 7, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4286, file: !1, line: 2905, column: 5)
!4297 = !DILocation(line: 2906, column: 13, scope: !4296)
!4298 = !DILocation(line: 2906, column: 27, scope: !4296)
!4299 = !DILocation(line: 2907, column: 23, scope: !4296)
!4300 = !DILocation(line: 2907, column: 7, scope: !4296)
!4301 = !DILocation(line: 2907, column: 13, scope: !4296)
!4302 = !DILocation(line: 2907, column: 22, scope: !4296)
!4303 = !DILocation(line: 2908, column: 32, scope: !4296)
!4304 = !DILocation(line: 2909, column: 9, scope: !4296)
!4305 = !DILocation(line: 2909, column: 14, scope: !4296)
!4306 = !DILocation(line: 2909, column: 46, scope: !4296)
!4307 = !DILocation(line: 2909, column: 49, scope: !4296)
!4308 = !DILocation(line: 2909, column: 52, scope: !4296)
!4309 = !DILocation(line: 2909, column: 55, scope: !4296)
!4310 = !DILocation(line: 2909, column: 58, scope: !4296)
!4311 = !DILocation(line: 2909, column: 60, scope: !4296)
!4312 = !DILocation(line: 2908, column: 14, scope: !4296)
!4313 = !DILocation(line: 2910, column: 5, scope: !4296)
!4314 = !DILocation(line: 2912, column: 30, scope: !4286)
!4315 = !DILocation(line: 2912, column: 74, scope: !4286)
!4316 = !DILocation(line: 2912, column: 77, scope: !4286)
!4317 = !DILocation(line: 2913, column: 7, scope: !4286)
!4318 = !DILocation(line: 2913, column: 10, scope: !4286)
!4319 = !DILocation(line: 2913, column: 13, scope: !4286)
!4320 = !DILocation(line: 2913, column: 15, scope: !4286)
!4321 = !DILocation(line: 2912, column: 12, scope: !4286)
!4322 = !DILocation(line: 2914, column: 1, scope: !4256)
!4323 = distinct !DISubprogram(name: "DrawPathCurveToRelative", scope: !1, file: !1, line: 2966, type: !2236, scopeLine: 2968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4324 = !DILocalVariable(name: "wand", arg: 1, scope: !4323, file: !1, line: 2966, type: !1172)
!4325 = !DILocation(line: 2966, column: 54, scope: !4323)
!4326 = !DILocalVariable(name: "x1", arg: 2, scope: !4323, file: !1, line: 2966, type: !1203)
!4327 = !DILocation(line: 2966, column: 72, scope: !4323)
!4328 = !DILocalVariable(name: "y1", arg: 3, scope: !4323, file: !1, line: 2967, type: !1203)
!4329 = !DILocation(line: 2967, column: 16, scope: !4323)
!4330 = !DILocalVariable(name: "x2", arg: 4, scope: !4323, file: !1, line: 2967, type: !1203)
!4331 = !DILocation(line: 2967, column: 32, scope: !4323)
!4332 = !DILocalVariable(name: "y2", arg: 5, scope: !4323, file: !1, line: 2967, type: !1203)
!4333 = !DILocation(line: 2967, column: 48, scope: !4323)
!4334 = !DILocalVariable(name: "x", arg: 6, scope: !4323, file: !1, line: 2967, type: !1203)
!4335 = !DILocation(line: 2967, column: 64, scope: !4323)
!4336 = !DILocalVariable(name: "y", arg: 7, scope: !4323, file: !1, line: 2967, type: !1203)
!4337 = !DILocation(line: 2967, column: 79, scope: !4323)
!4338 = !DILocation(line: 2971, column: 7, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4323, file: !1, line: 2971, column: 7)
!4340 = !DILocation(line: 2971, column: 13, scope: !4339)
!4341 = !DILocation(line: 2971, column: 19, scope: !4339)
!4342 = !DILocation(line: 2971, column: 7, scope: !4323)
!4343 = !DILocation(line: 2972, column: 60, scope: !4339)
!4344 = !DILocation(line: 2972, column: 66, scope: !4339)
!4345 = !DILocation(line: 2972, column: 12, scope: !4339)
!4346 = !DILocation(line: 2972, column: 5, scope: !4339)
!4347 = !DILocation(line: 2973, column: 19, scope: !4323)
!4348 = !DILocation(line: 2973, column: 41, scope: !4323)
!4349 = !DILocation(line: 2973, column: 44, scope: !4323)
!4350 = !DILocation(line: 2973, column: 47, scope: !4323)
!4351 = !DILocation(line: 2973, column: 50, scope: !4323)
!4352 = !DILocation(line: 2973, column: 53, scope: !4323)
!4353 = !DILocation(line: 2973, column: 55, scope: !4323)
!4354 = !DILocation(line: 2973, column: 3, scope: !4323)
!4355 = !DILocation(line: 2974, column: 1, scope: !4323)
!4356 = distinct !DISubprogram(name: "DrawPathCurveToQuadraticBezierAbsolute", scope: !1, file: !1, line: 3030, type: !2340, scopeLine: 3032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4357 = !DILocalVariable(name: "wand", arg: 1, scope: !4356, file: !1, line: 3030, type: !1172)
!4358 = !DILocation(line: 3030, column: 69, scope: !4356)
!4359 = !DILocalVariable(name: "x1", arg: 2, scope: !4356, file: !1, line: 3031, type: !1203)
!4360 = !DILocation(line: 3031, column: 16, scope: !4356)
!4361 = !DILocalVariable(name: "y1", arg: 3, scope: !4356, file: !1, line: 3031, type: !1203)
!4362 = !DILocation(line: 3031, column: 32, scope: !4356)
!4363 = !DILocalVariable(name: "x", arg: 4, scope: !4356, file: !1, line: 3031, type: !1203)
!4364 = !DILocation(line: 3031, column: 48, scope: !4356)
!4365 = !DILocalVariable(name: "y", arg: 5, scope: !4356, file: !1, line: 3031, type: !1203)
!4366 = !DILocation(line: 3031, column: 63, scope: !4356)
!4367 = !DILocation(line: 3035, column: 7, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4356, file: !1, line: 3035, column: 7)
!4369 = !DILocation(line: 3035, column: 13, scope: !4368)
!4370 = !DILocation(line: 3035, column: 19, scope: !4368)
!4371 = !DILocation(line: 3035, column: 7, scope: !4356)
!4372 = !DILocation(line: 3036, column: 60, scope: !4368)
!4373 = !DILocation(line: 3036, column: 66, scope: !4368)
!4374 = !DILocation(line: 3036, column: 12, scope: !4368)
!4375 = !DILocation(line: 3036, column: 5, scope: !4368)
!4376 = !DILocation(line: 3037, column: 34, scope: !4356)
!4377 = !DILocation(line: 3037, column: 56, scope: !4356)
!4378 = !DILocation(line: 3037, column: 59, scope: !4356)
!4379 = !DILocation(line: 3037, column: 62, scope: !4356)
!4380 = !DILocation(line: 3037, column: 64, scope: !4356)
!4381 = !DILocation(line: 3037, column: 3, scope: !4356)
!4382 = !DILocation(line: 3038, column: 1, scope: !4356)
!4383 = distinct !DISubprogram(name: "DrawPathCurveToQuadraticBezier", scope: !1, file: !1, line: 3011, type: !4384, scopeLine: 3013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{null, !1172, !4259, !1203, !715, !1203, !1203}
!4386 = !DILocalVariable(name: "wand", arg: 1, scope: !4383, file: !1, line: 3011, type: !1172)
!4387 = !DILocation(line: 3011, column: 57, scope: !4383)
!4388 = !DILocalVariable(name: "mode", arg: 2, scope: !4383, file: !1, line: 3012, type: !4259)
!4389 = !DILocation(line: 3012, column: 18, scope: !4383)
!4390 = !DILocalVariable(name: "x1", arg: 3, scope: !4383, file: !1, line: 3012, type: !1203)
!4391 = !DILocation(line: 3012, column: 36, scope: !4383)
!4392 = !DILocalVariable(name: "y1", arg: 4, scope: !4383, file: !1, line: 3012, type: !715)
!4393 = !DILocation(line: 3012, column: 46, scope: !4383)
!4394 = !DILocalVariable(name: "x", arg: 5, scope: !4383, file: !1, line: 3012, type: !1203)
!4395 = !DILocation(line: 3012, column: 62, scope: !4383)
!4396 = !DILocalVariable(name: "y", arg: 6, scope: !4383, file: !1, line: 3012, type: !1203)
!4397 = !DILocation(line: 3012, column: 77, scope: !4383)
!4398 = !DILocation(line: 3016, column: 7, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4383, file: !1, line: 3016, column: 7)
!4400 = !DILocation(line: 3016, column: 13, scope: !4399)
!4401 = !DILocation(line: 3016, column: 19, scope: !4399)
!4402 = !DILocation(line: 3016, column: 7, scope: !4383)
!4403 = !DILocation(line: 3017, column: 60, scope: !4399)
!4404 = !DILocation(line: 3017, column: 66, scope: !4399)
!4405 = !DILocation(line: 3017, column: 12, scope: !4399)
!4406 = !DILocation(line: 3017, column: 5, scope: !4399)
!4407 = !DILocation(line: 3018, column: 8, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4383, file: !1, line: 3018, column: 7)
!4409 = !DILocation(line: 3018, column: 14, scope: !4408)
!4410 = !DILocation(line: 3018, column: 29, scope: !4408)
!4411 = !DILocation(line: 3018, column: 69, scope: !4408)
!4412 = !DILocation(line: 3019, column: 8, scope: !4408)
!4413 = !DILocation(line: 3019, column: 14, scope: !4408)
!4414 = !DILocation(line: 3019, column: 27, scope: !4408)
!4415 = !DILocation(line: 3019, column: 24, scope: !4408)
!4416 = !DILocation(line: 3018, column: 7, scope: !4383)
!4417 = !DILocation(line: 3021, column: 7, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4408, file: !1, line: 3020, column: 5)
!4419 = !DILocation(line: 3021, column: 13, scope: !4418)
!4420 = !DILocation(line: 3021, column: 27, scope: !4418)
!4421 = !DILocation(line: 3022, column: 23, scope: !4418)
!4422 = !DILocation(line: 3022, column: 7, scope: !4418)
!4423 = !DILocation(line: 3022, column: 13, scope: !4418)
!4424 = !DILocation(line: 3022, column: 22, scope: !4418)
!4425 = !DILocation(line: 3023, column: 32, scope: !4418)
!4426 = !DILocation(line: 3024, column: 10, scope: !4418)
!4427 = !DILocation(line: 3024, column: 15, scope: !4418)
!4428 = !DILocation(line: 3024, column: 47, scope: !4418)
!4429 = !DILocation(line: 3024, column: 50, scope: !4418)
!4430 = !DILocation(line: 3024, column: 53, scope: !4418)
!4431 = !DILocation(line: 3024, column: 55, scope: !4418)
!4432 = !DILocation(line: 3023, column: 14, scope: !4418)
!4433 = !DILocation(line: 3025, column: 5, scope: !4418)
!4434 = !DILocation(line: 3027, column: 30, scope: !4408)
!4435 = !DILocation(line: 3027, column: 62, scope: !4408)
!4436 = !DILocation(line: 3027, column: 65, scope: !4408)
!4437 = !DILocation(line: 3027, column: 68, scope: !4408)
!4438 = !DILocation(line: 3027, column: 70, scope: !4408)
!4439 = !DILocation(line: 3027, column: 12, scope: !4408)
!4440 = !DILocation(line: 3028, column: 1, scope: !4383)
!4441 = distinct !DISubprogram(name: "DrawPathCurveToQuadraticBezierRelative", scope: !1, file: !1, line: 3074, type: !2340, scopeLine: 3076, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4442 = !DILocalVariable(name: "wand", arg: 1, scope: !4441, file: !1, line: 3074, type: !1172)
!4443 = !DILocation(line: 3074, column: 69, scope: !4441)
!4444 = !DILocalVariable(name: "x1", arg: 2, scope: !4441, file: !1, line: 3075, type: !1203)
!4445 = !DILocation(line: 3075, column: 16, scope: !4441)
!4446 = !DILocalVariable(name: "y1", arg: 3, scope: !4441, file: !1, line: 3075, type: !1203)
!4447 = !DILocation(line: 3075, column: 32, scope: !4441)
!4448 = !DILocalVariable(name: "x", arg: 4, scope: !4441, file: !1, line: 3075, type: !1203)
!4449 = !DILocation(line: 3075, column: 48, scope: !4441)
!4450 = !DILocalVariable(name: "y", arg: 5, scope: !4441, file: !1, line: 3075, type: !1203)
!4451 = !DILocation(line: 3075, column: 63, scope: !4441)
!4452 = !DILocation(line: 3079, column: 7, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4441, file: !1, line: 3079, column: 7)
!4454 = !DILocation(line: 3079, column: 13, scope: !4453)
!4455 = !DILocation(line: 3079, column: 19, scope: !4453)
!4456 = !DILocation(line: 3079, column: 7, scope: !4441)
!4457 = !DILocation(line: 3080, column: 60, scope: !4453)
!4458 = !DILocation(line: 3080, column: 66, scope: !4453)
!4459 = !DILocation(line: 3080, column: 12, scope: !4453)
!4460 = !DILocation(line: 3080, column: 5, scope: !4453)
!4461 = !DILocation(line: 3081, column: 34, scope: !4441)
!4462 = !DILocation(line: 3081, column: 56, scope: !4441)
!4463 = !DILocation(line: 3081, column: 59, scope: !4441)
!4464 = !DILocation(line: 3081, column: 62, scope: !4441)
!4465 = !DILocation(line: 3081, column: 64, scope: !4441)
!4466 = !DILocation(line: 3081, column: 3, scope: !4441)
!4467 = !DILocation(line: 3082, column: 1, scope: !4441)
!4468 = distinct !DISubprogram(name: "DrawPathCurveToQuadraticBezierSmoothAbsolute", scope: !1, file: !1, line: 3142, type: !4469, scopeLine: 3144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{null, !1172, !1203, !1203}
!4471 = !DILocalVariable(name: "wand", arg: 1, scope: !4468, file: !1, line: 3142, type: !1172)
!4472 = !DILocation(line: 3142, column: 75, scope: !4468)
!4473 = !DILocalVariable(name: "x", arg: 2, scope: !4468, file: !1, line: 3143, type: !1203)
!4474 = !DILocation(line: 3143, column: 16, scope: !4468)
!4475 = !DILocalVariable(name: "y", arg: 3, scope: !4468, file: !1, line: 3143, type: !1203)
!4476 = !DILocation(line: 3143, column: 31, scope: !4468)
!4477 = !DILocation(line: 3147, column: 7, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4468, file: !1, line: 3147, column: 7)
!4479 = !DILocation(line: 3147, column: 13, scope: !4478)
!4480 = !DILocation(line: 3147, column: 19, scope: !4478)
!4481 = !DILocation(line: 3147, column: 7, scope: !4468)
!4482 = !DILocation(line: 3148, column: 60, scope: !4478)
!4483 = !DILocation(line: 3148, column: 66, scope: !4478)
!4484 = !DILocation(line: 3148, column: 12, scope: !4478)
!4485 = !DILocation(line: 3148, column: 5, scope: !4478)
!4486 = !DILocation(line: 3149, column: 40, scope: !4468)
!4487 = !DILocation(line: 3149, column: 62, scope: !4468)
!4488 = !DILocation(line: 3149, column: 64, scope: !4468)
!4489 = !DILocation(line: 3149, column: 3, scope: !4468)
!4490 = !DILocation(line: 3150, column: 1, scope: !4468)
!4491 = distinct !DISubprogram(name: "DrawPathCurveToQuadraticBezierSmooth", scope: !1, file: !1, line: 3123, type: !4492, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{null, !1172, !4259, !1203, !1203}
!4494 = !DILocalVariable(name: "wand", arg: 1, scope: !4491, file: !1, line: 3123, type: !1172)
!4495 = !DILocation(line: 3123, column: 63, scope: !4491)
!4496 = !DILocalVariable(name: "mode", arg: 2, scope: !4491, file: !1, line: 3124, type: !4259)
!4497 = !DILocation(line: 3124, column: 18, scope: !4491)
!4498 = !DILocalVariable(name: "x", arg: 3, scope: !4491, file: !1, line: 3124, type: !1203)
!4499 = !DILocation(line: 3124, column: 36, scope: !4491)
!4500 = !DILocalVariable(name: "y", arg: 4, scope: !4491, file: !1, line: 3124, type: !1203)
!4501 = !DILocation(line: 3124, column: 51, scope: !4491)
!4502 = !DILocation(line: 3128, column: 7, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4491, file: !1, line: 3128, column: 7)
!4504 = !DILocation(line: 3128, column: 13, scope: !4503)
!4505 = !DILocation(line: 3128, column: 19, scope: !4503)
!4506 = !DILocation(line: 3128, column: 7, scope: !4491)
!4507 = !DILocation(line: 3129, column: 60, scope: !4503)
!4508 = !DILocation(line: 3129, column: 66, scope: !4503)
!4509 = !DILocation(line: 3129, column: 12, scope: !4503)
!4510 = !DILocation(line: 3129, column: 5, scope: !4503)
!4511 = !DILocation(line: 3130, column: 8, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4491, file: !1, line: 3130, column: 7)
!4513 = !DILocation(line: 3130, column: 14, scope: !4512)
!4514 = !DILocation(line: 3130, column: 29, scope: !4512)
!4515 = !DILocation(line: 3130, column: 75, scope: !4512)
!4516 = !DILocation(line: 3131, column: 8, scope: !4512)
!4517 = !DILocation(line: 3131, column: 14, scope: !4512)
!4518 = !DILocation(line: 3131, column: 27, scope: !4512)
!4519 = !DILocation(line: 3131, column: 24, scope: !4512)
!4520 = !DILocation(line: 3130, column: 7, scope: !4491)
!4521 = !DILocation(line: 3133, column: 7, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 3132, column: 5)
!4523 = !DILocation(line: 3133, column: 13, scope: !4522)
!4524 = !DILocation(line: 3133, column: 27, scope: !4522)
!4525 = !DILocation(line: 3134, column: 23, scope: !4522)
!4526 = !DILocation(line: 3134, column: 7, scope: !4522)
!4527 = !DILocation(line: 3134, column: 13, scope: !4522)
!4528 = !DILocation(line: 3134, column: 22, scope: !4522)
!4529 = !DILocation(line: 3135, column: 32, scope: !4522)
!4530 = !DILocation(line: 3135, column: 53, scope: !4522)
!4531 = !DILocation(line: 3135, column: 58, scope: !4522)
!4532 = !DILocation(line: 3136, column: 19, scope: !4522)
!4533 = !DILocation(line: 3136, column: 21, scope: !4522)
!4534 = !DILocation(line: 3135, column: 14, scope: !4522)
!4535 = !DILocation(line: 3137, column: 5, scope: !4522)
!4536 = !DILocation(line: 3139, column: 30, scope: !4512)
!4537 = !DILocation(line: 3139, column: 50, scope: !4512)
!4538 = !DILocation(line: 3139, column: 52, scope: !4512)
!4539 = !DILocation(line: 3139, column: 12, scope: !4512)
!4540 = !DILocation(line: 3140, column: 1, scope: !4491)
!4541 = distinct !DISubprogram(name: "DrawPathCurveToQuadraticBezierSmoothRelative", scope: !1, file: !1, line: 3189, type: !4469, scopeLine: 3191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4542 = !DILocalVariable(name: "wand", arg: 1, scope: !4541, file: !1, line: 3189, type: !1172)
!4543 = !DILocation(line: 3189, column: 75, scope: !4541)
!4544 = !DILocalVariable(name: "x", arg: 2, scope: !4541, file: !1, line: 3190, type: !1203)
!4545 = !DILocation(line: 3190, column: 16, scope: !4541)
!4546 = !DILocalVariable(name: "y", arg: 3, scope: !4541, file: !1, line: 3190, type: !1203)
!4547 = !DILocation(line: 3190, column: 31, scope: !4541)
!4548 = !DILocation(line: 3192, column: 40, scope: !4541)
!4549 = !DILocation(line: 3192, column: 62, scope: !4541)
!4550 = !DILocation(line: 3192, column: 64, scope: !4541)
!4551 = !DILocation(line: 3192, column: 3, scope: !4541)
!4552 = !DILocation(line: 3193, column: 1, scope: !4541)
!4553 = distinct !DISubprogram(name: "DrawPathCurveToSmoothAbsolute", scope: !1, file: !1, line: 3256, type: !2340, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4554 = !DILocalVariable(name: "wand", arg: 1, scope: !4553, file: !1, line: 3256, type: !1172)
!4555 = !DILocation(line: 3256, column: 60, scope: !4553)
!4556 = !DILocalVariable(name: "x2", arg: 2, scope: !4553, file: !1, line: 3256, type: !1203)
!4557 = !DILocation(line: 3256, column: 78, scope: !4553)
!4558 = !DILocalVariable(name: "y2", arg: 3, scope: !4553, file: !1, line: 3257, type: !1203)
!4559 = !DILocation(line: 3257, column: 16, scope: !4553)
!4560 = !DILocalVariable(name: "x", arg: 4, scope: !4553, file: !1, line: 3257, type: !1203)
!4561 = !DILocation(line: 3257, column: 32, scope: !4553)
!4562 = !DILocalVariable(name: "y", arg: 5, scope: !4553, file: !1, line: 3257, type: !1203)
!4563 = !DILocation(line: 3257, column: 47, scope: !4553)
!4564 = !DILocation(line: 3261, column: 7, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4553, file: !1, line: 3261, column: 7)
!4566 = !DILocation(line: 3261, column: 13, scope: !4565)
!4567 = !DILocation(line: 3261, column: 19, scope: !4565)
!4568 = !DILocation(line: 3261, column: 7, scope: !4553)
!4569 = !DILocation(line: 3262, column: 60, scope: !4565)
!4570 = !DILocation(line: 3262, column: 66, scope: !4565)
!4571 = !DILocation(line: 3262, column: 12, scope: !4565)
!4572 = !DILocation(line: 3262, column: 5, scope: !4565)
!4573 = !DILocation(line: 3263, column: 25, scope: !4553)
!4574 = !DILocation(line: 3263, column: 47, scope: !4553)
!4575 = !DILocation(line: 3263, column: 50, scope: !4553)
!4576 = !DILocation(line: 3263, column: 53, scope: !4553)
!4577 = !DILocation(line: 3263, column: 55, scope: !4553)
!4578 = !DILocation(line: 3263, column: 3, scope: !4553)
!4579 = !DILocation(line: 3264, column: 1, scope: !4553)
!4580 = distinct !DISubprogram(name: "DrawPathCurveToSmooth", scope: !1, file: !1, line: 3237, type: !4581, scopeLine: 3239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{null, !1172, !4259, !1203, !1203, !1203, !1203}
!4583 = !DILocalVariable(name: "wand", arg: 1, scope: !4580, file: !1, line: 3237, type: !1172)
!4584 = !DILocation(line: 3237, column: 48, scope: !4580)
!4585 = !DILocalVariable(name: "mode", arg: 2, scope: !4580, file: !1, line: 3237, type: !4259)
!4586 = !DILocation(line: 3237, column: 68, scope: !4580)
!4587 = !DILocalVariable(name: "x2", arg: 3, scope: !4580, file: !1, line: 3238, type: !1203)
!4588 = !DILocation(line: 3238, column: 16, scope: !4580)
!4589 = !DILocalVariable(name: "y2", arg: 4, scope: !4580, file: !1, line: 3238, type: !1203)
!4590 = !DILocation(line: 3238, column: 32, scope: !4580)
!4591 = !DILocalVariable(name: "x", arg: 5, scope: !4580, file: !1, line: 3238, type: !1203)
!4592 = !DILocation(line: 3238, column: 48, scope: !4580)
!4593 = !DILocalVariable(name: "y", arg: 6, scope: !4580, file: !1, line: 3238, type: !1203)
!4594 = !DILocation(line: 3238, column: 63, scope: !4580)
!4595 = !DILocation(line: 3242, column: 7, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4580, file: !1, line: 3242, column: 7)
!4597 = !DILocation(line: 3242, column: 13, scope: !4596)
!4598 = !DILocation(line: 3242, column: 19, scope: !4596)
!4599 = !DILocation(line: 3242, column: 7, scope: !4580)
!4600 = !DILocation(line: 3243, column: 60, scope: !4596)
!4601 = !DILocation(line: 3243, column: 66, scope: !4596)
!4602 = !DILocation(line: 3243, column: 12, scope: !4596)
!4603 = !DILocation(line: 3243, column: 5, scope: !4596)
!4604 = !DILocation(line: 3244, column: 8, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4580, file: !1, line: 3244, column: 7)
!4606 = !DILocation(line: 3244, column: 14, scope: !4605)
!4607 = !DILocation(line: 3244, column: 29, scope: !4605)
!4608 = !DILocation(line: 3244, column: 60, scope: !4605)
!4609 = !DILocation(line: 3245, column: 8, scope: !4605)
!4610 = !DILocation(line: 3245, column: 14, scope: !4605)
!4611 = !DILocation(line: 3245, column: 27, scope: !4605)
!4612 = !DILocation(line: 3245, column: 24, scope: !4605)
!4613 = !DILocation(line: 3244, column: 7, scope: !4580)
!4614 = !DILocation(line: 3247, column: 7, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4605, file: !1, line: 3246, column: 5)
!4616 = !DILocation(line: 3247, column: 13, scope: !4615)
!4617 = !DILocation(line: 3247, column: 27, scope: !4615)
!4618 = !DILocation(line: 3248, column: 23, scope: !4615)
!4619 = !DILocation(line: 3248, column: 7, scope: !4615)
!4620 = !DILocation(line: 3248, column: 13, scope: !4615)
!4621 = !DILocation(line: 3248, column: 22, scope: !4615)
!4622 = !DILocation(line: 3249, column: 32, scope: !4615)
!4623 = !DILocation(line: 3250, column: 9, scope: !4615)
!4624 = !DILocation(line: 3250, column: 14, scope: !4615)
!4625 = !DILocation(line: 3250, column: 46, scope: !4615)
!4626 = !DILocation(line: 3250, column: 49, scope: !4615)
!4627 = !DILocation(line: 3250, column: 52, scope: !4615)
!4628 = !DILocation(line: 3250, column: 54, scope: !4615)
!4629 = !DILocation(line: 3249, column: 14, scope: !4615)
!4630 = !DILocation(line: 3251, column: 5, scope: !4615)
!4631 = !DILocation(line: 3253, column: 30, scope: !4605)
!4632 = !DILocation(line: 3253, column: 62, scope: !4605)
!4633 = !DILocation(line: 3253, column: 65, scope: !4605)
!4634 = !DILocation(line: 3253, column: 68, scope: !4605)
!4635 = !DILocation(line: 3253, column: 70, scope: !4605)
!4636 = !DILocation(line: 3253, column: 12, scope: !4605)
!4637 = !DILocation(line: 3254, column: 1, scope: !4580)
!4638 = distinct !DISubprogram(name: "DrawPathCurveToSmoothRelative", scope: !1, file: !1, line: 3306, type: !2340, scopeLine: 3308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4639 = !DILocalVariable(name: "wand", arg: 1, scope: !4638, file: !1, line: 3306, type: !1172)
!4640 = !DILocation(line: 3306, column: 60, scope: !4638)
!4641 = !DILocalVariable(name: "x2", arg: 2, scope: !4638, file: !1, line: 3306, type: !1203)
!4642 = !DILocation(line: 3306, column: 78, scope: !4638)
!4643 = !DILocalVariable(name: "y2", arg: 3, scope: !4638, file: !1, line: 3307, type: !1203)
!4644 = !DILocation(line: 3307, column: 16, scope: !4638)
!4645 = !DILocalVariable(name: "x", arg: 4, scope: !4638, file: !1, line: 3307, type: !1203)
!4646 = !DILocation(line: 3307, column: 32, scope: !4638)
!4647 = !DILocalVariable(name: "y", arg: 5, scope: !4638, file: !1, line: 3307, type: !1203)
!4648 = !DILocation(line: 3307, column: 47, scope: !4638)
!4649 = !DILocation(line: 3311, column: 7, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4638, file: !1, line: 3311, column: 7)
!4651 = !DILocation(line: 3311, column: 13, scope: !4650)
!4652 = !DILocation(line: 3311, column: 19, scope: !4650)
!4653 = !DILocation(line: 3311, column: 7, scope: !4638)
!4654 = !DILocation(line: 3312, column: 60, scope: !4650)
!4655 = !DILocation(line: 3312, column: 66, scope: !4650)
!4656 = !DILocation(line: 3312, column: 12, scope: !4650)
!4657 = !DILocation(line: 3312, column: 5, scope: !4650)
!4658 = !DILocation(line: 3313, column: 25, scope: !4638)
!4659 = !DILocation(line: 3313, column: 47, scope: !4638)
!4660 = !DILocation(line: 3313, column: 50, scope: !4638)
!4661 = !DILocation(line: 3313, column: 53, scope: !4638)
!4662 = !DILocation(line: 3313, column: 55, scope: !4638)
!4663 = !DILocation(line: 3313, column: 3, scope: !4638)
!4664 = !DILocation(line: 3314, column: 1, scope: !4638)
!4665 = distinct !DISubprogram(name: "DrawPathEllipticArcAbsolute", scope: !1, file: !1, line: 3388, type: !4666, scopeLine: 3392, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{null, !1172, !1203, !1203, !1203, !4668, !4668, !1203, !1203}
!4668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !764)
!4669 = !DILocalVariable(name: "wand", arg: 1, scope: !4665, file: !1, line: 3388, type: !1172)
!4670 = !DILocation(line: 3388, column: 58, scope: !4665)
!4671 = !DILocalVariable(name: "rx", arg: 2, scope: !4665, file: !1, line: 3388, type: !1203)
!4672 = !DILocation(line: 3388, column: 76, scope: !4665)
!4673 = !DILocalVariable(name: "ry", arg: 3, scope: !4665, file: !1, line: 3389, type: !1203)
!4674 = !DILocation(line: 3389, column: 16, scope: !4665)
!4675 = !DILocalVariable(name: "x_axis_rotation", arg: 4, scope: !4665, file: !1, line: 3389, type: !1203)
!4676 = !DILocation(line: 3389, column: 32, scope: !4665)
!4677 = !DILocalVariable(name: "large_arc_flag", arg: 5, scope: !4665, file: !1, line: 3390, type: !4668)
!4678 = !DILocation(line: 3390, column: 27, scope: !4665)
!4679 = !DILocalVariable(name: "sweep_flag", arg: 6, scope: !4665, file: !1, line: 3390, type: !4668)
!4680 = !DILocation(line: 3390, column: 66, scope: !4665)
!4681 = !DILocalVariable(name: "x", arg: 7, scope: !4665, file: !1, line: 3391, type: !1203)
!4682 = !DILocation(line: 3391, column: 16, scope: !4665)
!4683 = !DILocalVariable(name: "y", arg: 8, scope: !4665, file: !1, line: 3391, type: !1203)
!4684 = !DILocation(line: 3391, column: 31, scope: !4665)
!4685 = !DILocation(line: 3395, column: 7, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4665, file: !1, line: 3395, column: 7)
!4687 = !DILocation(line: 3395, column: 13, scope: !4686)
!4688 = !DILocation(line: 3395, column: 19, scope: !4686)
!4689 = !DILocation(line: 3395, column: 7, scope: !4665)
!4690 = !DILocation(line: 3396, column: 60, scope: !4686)
!4691 = !DILocation(line: 3396, column: 66, scope: !4686)
!4692 = !DILocation(line: 3396, column: 12, scope: !4686)
!4693 = !DILocation(line: 3396, column: 5, scope: !4686)
!4694 = !DILocation(line: 3397, column: 23, scope: !4665)
!4695 = !DILocation(line: 3397, column: 45, scope: !4665)
!4696 = !DILocation(line: 3397, column: 48, scope: !4665)
!4697 = !DILocation(line: 3397, column: 51, scope: !4665)
!4698 = !DILocation(line: 3398, column: 5, scope: !4665)
!4699 = !DILocation(line: 3398, column: 20, scope: !4665)
!4700 = !DILocation(line: 3398, column: 31, scope: !4665)
!4701 = !DILocation(line: 3398, column: 33, scope: !4665)
!4702 = !DILocation(line: 3397, column: 3, scope: !4665)
!4703 = !DILocation(line: 3399, column: 1, scope: !4665)
!4704 = distinct !DISubprogram(name: "DrawPathEllipticArc", scope: !1, file: !1, line: 3365, type: !4705, scopeLine: 3369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4705 = !DISubroutineType(types: !4706)
!4706 = !{null, !1172, !4259, !1203, !1203, !1203, !4668, !4668, !1203, !1203}
!4707 = !DILocalVariable(name: "wand", arg: 1, scope: !4704, file: !1, line: 3365, type: !1172)
!4708 = !DILocation(line: 3365, column: 46, scope: !4704)
!4709 = !DILocalVariable(name: "mode", arg: 2, scope: !4704, file: !1, line: 3365, type: !4259)
!4710 = !DILocation(line: 3365, column: 67, scope: !4704)
!4711 = !DILocalVariable(name: "rx", arg: 3, scope: !4704, file: !1, line: 3366, type: !1203)
!4712 = !DILocation(line: 3366, column: 16, scope: !4704)
!4713 = !DILocalVariable(name: "ry", arg: 4, scope: !4704, file: !1, line: 3366, type: !1203)
!4714 = !DILocation(line: 3366, column: 32, scope: !4704)
!4715 = !DILocalVariable(name: "x_axis_rotation", arg: 5, scope: !4704, file: !1, line: 3366, type: !1203)
!4716 = !DILocation(line: 3366, column: 48, scope: !4704)
!4717 = !DILocalVariable(name: "large_arc_flag", arg: 6, scope: !4704, file: !1, line: 3367, type: !4668)
!4718 = !DILocation(line: 3367, column: 27, scope: !4704)
!4719 = !DILocalVariable(name: "sweep_flag", arg: 7, scope: !4704, file: !1, line: 3367, type: !4668)
!4720 = !DILocation(line: 3367, column: 66, scope: !4704)
!4721 = !DILocalVariable(name: "x", arg: 8, scope: !4704, file: !1, line: 3368, type: !1203)
!4722 = !DILocation(line: 3368, column: 16, scope: !4704)
!4723 = !DILocalVariable(name: "y", arg: 9, scope: !4704, file: !1, line: 3368, type: !1203)
!4724 = !DILocation(line: 3368, column: 31, scope: !4704)
!4725 = !DILocation(line: 3372, column: 7, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4704, file: !1, line: 3372, column: 7)
!4727 = !DILocation(line: 3372, column: 13, scope: !4726)
!4728 = !DILocation(line: 3372, column: 19, scope: !4726)
!4729 = !DILocation(line: 3372, column: 7, scope: !4704)
!4730 = !DILocation(line: 3373, column: 60, scope: !4726)
!4731 = !DILocation(line: 3373, column: 66, scope: !4726)
!4732 = !DILocation(line: 3373, column: 12, scope: !4726)
!4733 = !DILocation(line: 3373, column: 5, scope: !4726)
!4734 = !DILocation(line: 3374, column: 8, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4704, file: !1, line: 3374, column: 7)
!4736 = !DILocation(line: 3374, column: 14, scope: !4735)
!4737 = !DILocation(line: 3374, column: 29, scope: !4735)
!4738 = !DILocation(line: 3374, column: 58, scope: !4735)
!4739 = !DILocation(line: 3375, column: 8, scope: !4735)
!4740 = !DILocation(line: 3375, column: 14, scope: !4735)
!4741 = !DILocation(line: 3375, column: 27, scope: !4735)
!4742 = !DILocation(line: 3375, column: 24, scope: !4735)
!4743 = !DILocation(line: 3374, column: 7, scope: !4704)
!4744 = !DILocation(line: 3377, column: 7, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4735, file: !1, line: 3376, column: 5)
!4746 = !DILocation(line: 3377, column: 13, scope: !4745)
!4747 = !DILocation(line: 3377, column: 27, scope: !4745)
!4748 = !DILocation(line: 3378, column: 23, scope: !4745)
!4749 = !DILocation(line: 3378, column: 7, scope: !4745)
!4750 = !DILocation(line: 3378, column: 13, scope: !4745)
!4751 = !DILocation(line: 3378, column: 22, scope: !4745)
!4752 = !DILocation(line: 3379, column: 32, scope: !4745)
!4753 = !DILocation(line: 3380, column: 9, scope: !4745)
!4754 = !DILocation(line: 3380, column: 14, scope: !4745)
!4755 = !DILocation(line: 3380, column: 46, scope: !4745)
!4756 = !DILocation(line: 3380, column: 49, scope: !4745)
!4757 = !DILocation(line: 3380, column: 52, scope: !4745)
!4758 = !DILocation(line: 3381, column: 9, scope: !4745)
!4759 = !DILocation(line: 3381, column: 24, scope: !4745)
!4760 = !DILocation(line: 3381, column: 35, scope: !4745)
!4761 = !DILocation(line: 3381, column: 37, scope: !4745)
!4762 = !DILocation(line: 3379, column: 14, scope: !4745)
!4763 = !DILocation(line: 3382, column: 5, scope: !4745)
!4764 = !DILocation(line: 3384, column: 30, scope: !4735)
!4765 = !DILocation(line: 3384, column: 74, scope: !4735)
!4766 = !DILocation(line: 3384, column: 77, scope: !4735)
!4767 = !DILocation(line: 3385, column: 7, scope: !4735)
!4768 = !DILocation(line: 3385, column: 23, scope: !4735)
!4769 = !DILocation(line: 3385, column: 38, scope: !4735)
!4770 = !DILocation(line: 3385, column: 49, scope: !4735)
!4771 = !DILocation(line: 3385, column: 51, scope: !4735)
!4772 = !DILocation(line: 3384, column: 12, scope: !4735)
!4773 = !DILocation(line: 3386, column: 1, scope: !4704)
!4774 = distinct !DISubprogram(name: "DrawPathEllipticArcRelative", scope: !1, file: !1, line: 3448, type: !4666, scopeLine: 3452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4775 = !DILocalVariable(name: "wand", arg: 1, scope: !4774, file: !1, line: 3448, type: !1172)
!4776 = !DILocation(line: 3448, column: 58, scope: !4774)
!4777 = !DILocalVariable(name: "rx", arg: 2, scope: !4774, file: !1, line: 3448, type: !1203)
!4778 = !DILocation(line: 3448, column: 76, scope: !4774)
!4779 = !DILocalVariable(name: "ry", arg: 3, scope: !4774, file: !1, line: 3449, type: !1203)
!4780 = !DILocation(line: 3449, column: 16, scope: !4774)
!4781 = !DILocalVariable(name: "x_axis_rotation", arg: 4, scope: !4774, file: !1, line: 3449, type: !1203)
!4782 = !DILocation(line: 3449, column: 32, scope: !4774)
!4783 = !DILocalVariable(name: "large_arc_flag", arg: 5, scope: !4774, file: !1, line: 3450, type: !4668)
!4784 = !DILocation(line: 3450, column: 27, scope: !4774)
!4785 = !DILocalVariable(name: "sweep_flag", arg: 6, scope: !4774, file: !1, line: 3450, type: !4668)
!4786 = !DILocation(line: 3450, column: 66, scope: !4774)
!4787 = !DILocalVariable(name: "x", arg: 7, scope: !4774, file: !1, line: 3451, type: !1203)
!4788 = !DILocation(line: 3451, column: 16, scope: !4774)
!4789 = !DILocalVariable(name: "y", arg: 8, scope: !4774, file: !1, line: 3451, type: !1203)
!4790 = !DILocation(line: 3451, column: 31, scope: !4774)
!4791 = !DILocation(line: 3453, column: 23, scope: !4774)
!4792 = !DILocation(line: 3453, column: 45, scope: !4774)
!4793 = !DILocation(line: 3453, column: 48, scope: !4774)
!4794 = !DILocation(line: 3453, column: 51, scope: !4774)
!4795 = !DILocation(line: 3454, column: 5, scope: !4774)
!4796 = !DILocation(line: 3454, column: 20, scope: !4774)
!4797 = !DILocation(line: 3454, column: 31, scope: !4774)
!4798 = !DILocation(line: 3454, column: 33, scope: !4774)
!4799 = !DILocation(line: 3453, column: 3, scope: !4774)
!4800 = !DILocation(line: 3455, column: 1, scope: !4774)
!4801 = distinct !DISubprogram(name: "DrawPathFinish", scope: !1, file: !1, line: 3479, type: !1219, scopeLine: 3480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4802 = !DILocalVariable(name: "wand", arg: 1, scope: !4801, file: !1, line: 3479, type: !1172)
!4803 = !DILocation(line: 3479, column: 45, scope: !4801)
!4804 = !DILocation(line: 3483, column: 7, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4801, file: !1, line: 3483, column: 7)
!4806 = !DILocation(line: 3483, column: 13, scope: !4805)
!4807 = !DILocation(line: 3483, column: 19, scope: !4805)
!4808 = !DILocation(line: 3483, column: 7, scope: !4801)
!4809 = !DILocation(line: 3484, column: 60, scope: !4805)
!4810 = !DILocation(line: 3484, column: 66, scope: !4805)
!4811 = !DILocation(line: 3484, column: 12, scope: !4805)
!4812 = !DILocation(line: 3484, column: 5, scope: !4805)
!4813 = !DILocation(line: 3485, column: 20, scope: !4801)
!4814 = !DILocation(line: 3485, column: 10, scope: !4801)
!4815 = !DILocation(line: 3486, column: 3, scope: !4801)
!4816 = !DILocation(line: 3486, column: 9, scope: !4801)
!4817 = !DILocation(line: 3486, column: 23, scope: !4801)
!4818 = !DILocation(line: 3487, column: 3, scope: !4801)
!4819 = !DILocation(line: 3487, column: 9, scope: !4801)
!4820 = !DILocation(line: 3487, column: 18, scope: !4801)
!4821 = !DILocation(line: 3488, column: 1, scope: !4801)
!4822 = distinct !DISubprogram(name: "DrawPathLineToAbsolute", scope: !1, file: !1, line: 3538, type: !4469, scopeLine: 3540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4823 = !DILocalVariable(name: "wand", arg: 1, scope: !4822, file: !1, line: 3538, type: !1172)
!4824 = !DILocation(line: 3538, column: 53, scope: !4822)
!4825 = !DILocalVariable(name: "x", arg: 2, scope: !4822, file: !1, line: 3538, type: !1203)
!4826 = !DILocation(line: 3538, column: 71, scope: !4822)
!4827 = !DILocalVariable(name: "y", arg: 3, scope: !4822, file: !1, line: 3539, type: !1203)
!4828 = !DILocation(line: 3539, column: 16, scope: !4822)
!4829 = !DILocation(line: 3543, column: 7, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4822, file: !1, line: 3543, column: 7)
!4831 = !DILocation(line: 3543, column: 13, scope: !4830)
!4832 = !DILocation(line: 3543, column: 19, scope: !4830)
!4833 = !DILocation(line: 3543, column: 7, scope: !4822)
!4834 = !DILocation(line: 3544, column: 60, scope: !4830)
!4835 = !DILocation(line: 3544, column: 66, scope: !4830)
!4836 = !DILocation(line: 3544, column: 12, scope: !4830)
!4837 = !DILocation(line: 3544, column: 5, scope: !4830)
!4838 = !DILocation(line: 3545, column: 18, scope: !4822)
!4839 = !DILocation(line: 3545, column: 40, scope: !4822)
!4840 = !DILocation(line: 3545, column: 42, scope: !4822)
!4841 = !DILocation(line: 3545, column: 3, scope: !4822)
!4842 = !DILocation(line: 3546, column: 1, scope: !4822)
!4843 = distinct !DISubprogram(name: "DrawPathLineTo", scope: !1, file: !1, line: 3519, type: !4492, scopeLine: 3521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4844 = !DILocalVariable(name: "wand", arg: 1, scope: !4843, file: !1, line: 3519, type: !1172)
!4845 = !DILocation(line: 3519, column: 41, scope: !4843)
!4846 = !DILocalVariable(name: "mode", arg: 2, scope: !4843, file: !1, line: 3519, type: !4259)
!4847 = !DILocation(line: 3519, column: 61, scope: !4843)
!4848 = !DILocalVariable(name: "x", arg: 3, scope: !4843, file: !1, line: 3520, type: !1203)
!4849 = !DILocation(line: 3520, column: 16, scope: !4843)
!4850 = !DILocalVariable(name: "y", arg: 4, scope: !4843, file: !1, line: 3520, type: !1203)
!4851 = !DILocation(line: 3520, column: 31, scope: !4843)
!4852 = !DILocation(line: 3524, column: 7, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4843, file: !1, line: 3524, column: 7)
!4854 = !DILocation(line: 3524, column: 13, scope: !4853)
!4855 = !DILocation(line: 3524, column: 19, scope: !4853)
!4856 = !DILocation(line: 3524, column: 7, scope: !4843)
!4857 = !DILocation(line: 3525, column: 60, scope: !4853)
!4858 = !DILocation(line: 3525, column: 66, scope: !4853)
!4859 = !DILocation(line: 3525, column: 12, scope: !4853)
!4860 = !DILocation(line: 3525, column: 5, scope: !4853)
!4861 = !DILocation(line: 3526, column: 8, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4843, file: !1, line: 3526, column: 7)
!4863 = !DILocation(line: 3526, column: 14, scope: !4862)
!4864 = !DILocation(line: 3526, column: 29, scope: !4862)
!4865 = !DILocation(line: 3526, column: 53, scope: !4862)
!4866 = !DILocation(line: 3527, column: 8, scope: !4862)
!4867 = !DILocation(line: 3527, column: 14, scope: !4862)
!4868 = !DILocation(line: 3527, column: 27, scope: !4862)
!4869 = !DILocation(line: 3527, column: 24, scope: !4862)
!4870 = !DILocation(line: 3526, column: 7, scope: !4843)
!4871 = !DILocation(line: 3529, column: 7, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4862, file: !1, line: 3528, column: 5)
!4873 = !DILocation(line: 3529, column: 13, scope: !4872)
!4874 = !DILocation(line: 3529, column: 27, scope: !4872)
!4875 = !DILocation(line: 3530, column: 23, scope: !4872)
!4876 = !DILocation(line: 3530, column: 7, scope: !4872)
!4877 = !DILocation(line: 3530, column: 13, scope: !4872)
!4878 = !DILocation(line: 3530, column: 22, scope: !4872)
!4879 = !DILocation(line: 3531, column: 32, scope: !4872)
!4880 = !DILocation(line: 3531, column: 53, scope: !4872)
!4881 = !DILocation(line: 3531, column: 58, scope: !4872)
!4882 = !DILocation(line: 3532, column: 19, scope: !4872)
!4883 = !DILocation(line: 3532, column: 21, scope: !4872)
!4884 = !DILocation(line: 3531, column: 14, scope: !4872)
!4885 = !DILocation(line: 3533, column: 5, scope: !4872)
!4886 = !DILocation(line: 3535, column: 30, scope: !4862)
!4887 = !DILocation(line: 3535, column: 50, scope: !4862)
!4888 = !DILocation(line: 3535, column: 52, scope: !4862)
!4889 = !DILocation(line: 3535, column: 12, scope: !4862)
!4890 = !DILocation(line: 3536, column: 1, scope: !4843)
!4891 = distinct !DISubprogram(name: "DrawPathLineToRelative", scope: !1, file: !1, line: 3577, type: !4469, scopeLine: 3579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4892 = !DILocalVariable(name: "wand", arg: 1, scope: !4891, file: !1, line: 3577, type: !1172)
!4893 = !DILocation(line: 3577, column: 53, scope: !4891)
!4894 = !DILocalVariable(name: "x", arg: 2, scope: !4891, file: !1, line: 3577, type: !1203)
!4895 = !DILocation(line: 3577, column: 71, scope: !4891)
!4896 = !DILocalVariable(name: "y", arg: 3, scope: !4891, file: !1, line: 3578, type: !1203)
!4897 = !DILocation(line: 3578, column: 16, scope: !4891)
!4898 = !DILocation(line: 3582, column: 7, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4891, file: !1, line: 3582, column: 7)
!4900 = !DILocation(line: 3582, column: 13, scope: !4899)
!4901 = !DILocation(line: 3582, column: 19, scope: !4899)
!4902 = !DILocation(line: 3582, column: 7, scope: !4891)
!4903 = !DILocation(line: 3583, column: 60, scope: !4899)
!4904 = !DILocation(line: 3583, column: 66, scope: !4899)
!4905 = !DILocation(line: 3583, column: 12, scope: !4899)
!4906 = !DILocation(line: 3583, column: 5, scope: !4899)
!4907 = !DILocation(line: 3584, column: 18, scope: !4891)
!4908 = !DILocation(line: 3584, column: 40, scope: !4891)
!4909 = !DILocation(line: 3584, column: 42, scope: !4891)
!4910 = !DILocation(line: 3584, column: 3, scope: !4891)
!4911 = !DILocation(line: 3585, column: 1, scope: !4891)
!4912 = distinct !DISubprogram(name: "DrawPathLineToHorizontalAbsolute", scope: !1, file: !1, line: 3634, type: !4913, scopeLine: 3636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4913 = !DISubroutineType(types: !4914)
!4914 = !{null, !1172, !1203}
!4915 = !DILocalVariable(name: "wand", arg: 1, scope: !4912, file: !1, line: 3634, type: !1172)
!4916 = !DILocation(line: 3634, column: 63, scope: !4912)
!4917 = !DILocalVariable(name: "x", arg: 2, scope: !4912, file: !1, line: 3635, type: !1203)
!4918 = !DILocation(line: 3635, column: 16, scope: !4912)
!4919 = !DILocation(line: 3639, column: 7, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4912, file: !1, line: 3639, column: 7)
!4921 = !DILocation(line: 3639, column: 13, scope: !4920)
!4922 = !DILocation(line: 3639, column: 19, scope: !4920)
!4923 = !DILocation(line: 3639, column: 7, scope: !4912)
!4924 = !DILocation(line: 3640, column: 60, scope: !4920)
!4925 = !DILocation(line: 3640, column: 66, scope: !4920)
!4926 = !DILocation(line: 3640, column: 12, scope: !4920)
!4927 = !DILocation(line: 3640, column: 5, scope: !4920)
!4928 = !DILocation(line: 3641, column: 28, scope: !4912)
!4929 = !DILocation(line: 3641, column: 50, scope: !4912)
!4930 = !DILocation(line: 3641, column: 3, scope: !4912)
!4931 = !DILocation(line: 3642, column: 1, scope: !4912)
!4932 = distinct !DISubprogram(name: "DrawPathLineToHorizontal", scope: !1, file: !1, line: 3615, type: !4933, scopeLine: 3617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4933 = !DISubroutineType(types: !4934)
!4934 = !{null, !1172, !4259, !1203}
!4935 = !DILocalVariable(name: "wand", arg: 1, scope: !4932, file: !1, line: 3615, type: !1172)
!4936 = !DILocation(line: 3615, column: 51, scope: !4932)
!4937 = !DILocalVariable(name: "mode", arg: 2, scope: !4932, file: !1, line: 3615, type: !4259)
!4938 = !DILocation(line: 3615, column: 71, scope: !4932)
!4939 = !DILocalVariable(name: "x", arg: 3, scope: !4932, file: !1, line: 3616, type: !1203)
!4940 = !DILocation(line: 3616, column: 16, scope: !4932)
!4941 = !DILocation(line: 3620, column: 7, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4932, file: !1, line: 3620, column: 7)
!4943 = !DILocation(line: 3620, column: 13, scope: !4942)
!4944 = !DILocation(line: 3620, column: 19, scope: !4942)
!4945 = !DILocation(line: 3620, column: 7, scope: !4932)
!4946 = !DILocation(line: 3621, column: 60, scope: !4942)
!4947 = !DILocation(line: 3621, column: 66, scope: !4942)
!4948 = !DILocation(line: 3621, column: 12, scope: !4942)
!4949 = !DILocation(line: 3621, column: 5, scope: !4942)
!4950 = !DILocation(line: 3622, column: 8, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4932, file: !1, line: 3622, column: 7)
!4952 = !DILocation(line: 3622, column: 14, scope: !4951)
!4953 = !DILocation(line: 3622, column: 29, scope: !4951)
!4954 = !DILocation(line: 3622, column: 63, scope: !4951)
!4955 = !DILocation(line: 3623, column: 8, scope: !4951)
!4956 = !DILocation(line: 3623, column: 14, scope: !4951)
!4957 = !DILocation(line: 3623, column: 27, scope: !4951)
!4958 = !DILocation(line: 3623, column: 24, scope: !4951)
!4959 = !DILocation(line: 3622, column: 7, scope: !4932)
!4960 = !DILocation(line: 3625, column: 7, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4951, file: !1, line: 3624, column: 5)
!4962 = !DILocation(line: 3625, column: 13, scope: !4961)
!4963 = !DILocation(line: 3625, column: 27, scope: !4961)
!4964 = !DILocation(line: 3626, column: 23, scope: !4961)
!4965 = !DILocation(line: 3626, column: 7, scope: !4961)
!4966 = !DILocation(line: 3626, column: 13, scope: !4961)
!4967 = !DILocation(line: 3626, column: 22, scope: !4961)
!4968 = !DILocation(line: 3627, column: 32, scope: !4961)
!4969 = !DILocation(line: 3627, column: 47, scope: !4961)
!4970 = !DILocation(line: 3627, column: 52, scope: !4961)
!4971 = !DILocation(line: 3628, column: 19, scope: !4961)
!4972 = !DILocation(line: 3627, column: 14, scope: !4961)
!4973 = !DILocation(line: 3629, column: 5, scope: !4961)
!4974 = !DILocation(line: 3631, column: 30, scope: !4951)
!4975 = !DILocation(line: 3631, column: 44, scope: !4951)
!4976 = !DILocation(line: 3631, column: 12, scope: !4951)
!4977 = !DILocation(line: 3632, column: 1, scope: !4932)
!4978 = distinct !DISubprogram(name: "DrawPathLineToHorizontalRelative", scope: !1, file: !1, line: 3671, type: !4913, scopeLine: 3673, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4979 = !DILocalVariable(name: "wand", arg: 1, scope: !4978, file: !1, line: 3671, type: !1172)
!4980 = !DILocation(line: 3671, column: 63, scope: !4978)
!4981 = !DILocalVariable(name: "x", arg: 2, scope: !4978, file: !1, line: 3672, type: !1203)
!4982 = !DILocation(line: 3672, column: 16, scope: !4978)
!4983 = !DILocation(line: 3674, column: 28, scope: !4978)
!4984 = !DILocation(line: 3674, column: 50, scope: !4978)
!4985 = !DILocation(line: 3674, column: 3, scope: !4978)
!4986 = !DILocation(line: 3675, column: 1, scope: !4978)
!4987 = distinct !DISubprogram(name: "DrawPathLineToVerticalAbsolute", scope: !1, file: !1, line: 3724, type: !4913, scopeLine: 3725, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!4988 = !DILocalVariable(name: "wand", arg: 1, scope: !4987, file: !1, line: 3724, type: !1172)
!4989 = !DILocation(line: 3724, column: 61, scope: !4987)
!4990 = !DILocalVariable(name: "y", arg: 2, scope: !4987, file: !1, line: 3724, type: !1203)
!4991 = !DILocation(line: 3724, column: 79, scope: !4987)
!4992 = !DILocation(line: 3728, column: 7, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4987, file: !1, line: 3728, column: 7)
!4994 = !DILocation(line: 3728, column: 13, scope: !4993)
!4995 = !DILocation(line: 3728, column: 19, scope: !4993)
!4996 = !DILocation(line: 3728, column: 7, scope: !4987)
!4997 = !DILocation(line: 3729, column: 60, scope: !4993)
!4998 = !DILocation(line: 3729, column: 66, scope: !4993)
!4999 = !DILocation(line: 3729, column: 12, scope: !4993)
!5000 = !DILocation(line: 3729, column: 5, scope: !4993)
!5001 = !DILocation(line: 3730, column: 26, scope: !4987)
!5002 = !DILocation(line: 3730, column: 48, scope: !4987)
!5003 = !DILocation(line: 3730, column: 3, scope: !4987)
!5004 = !DILocation(line: 3731, column: 1, scope: !4987)
!5005 = distinct !DISubprogram(name: "DrawPathLineToVertical", scope: !1, file: !1, line: 3705, type: !4933, scopeLine: 3707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5006 = !DILocalVariable(name: "wand", arg: 1, scope: !5005, file: !1, line: 3705, type: !1172)
!5007 = !DILocation(line: 3705, column: 49, scope: !5005)
!5008 = !DILocalVariable(name: "mode", arg: 2, scope: !5005, file: !1, line: 3705, type: !4259)
!5009 = !DILocation(line: 3705, column: 69, scope: !5005)
!5010 = !DILocalVariable(name: "y", arg: 3, scope: !5005, file: !1, line: 3706, type: !1203)
!5011 = !DILocation(line: 3706, column: 16, scope: !5005)
!5012 = !DILocation(line: 3710, column: 7, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5005, file: !1, line: 3710, column: 7)
!5014 = !DILocation(line: 3710, column: 13, scope: !5013)
!5015 = !DILocation(line: 3710, column: 19, scope: !5013)
!5016 = !DILocation(line: 3710, column: 7, scope: !5005)
!5017 = !DILocation(line: 3711, column: 60, scope: !5013)
!5018 = !DILocation(line: 3711, column: 66, scope: !5013)
!5019 = !DILocation(line: 3711, column: 12, scope: !5013)
!5020 = !DILocation(line: 3711, column: 5, scope: !5013)
!5021 = !DILocation(line: 3712, column: 8, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5005, file: !1, line: 3712, column: 7)
!5023 = !DILocation(line: 3712, column: 14, scope: !5022)
!5024 = !DILocation(line: 3712, column: 29, scope: !5022)
!5025 = !DILocation(line: 3712, column: 61, scope: !5022)
!5026 = !DILocation(line: 3713, column: 8, scope: !5022)
!5027 = !DILocation(line: 3713, column: 14, scope: !5022)
!5028 = !DILocation(line: 3713, column: 27, scope: !5022)
!5029 = !DILocation(line: 3713, column: 24, scope: !5022)
!5030 = !DILocation(line: 3712, column: 7, scope: !5005)
!5031 = !DILocation(line: 3715, column: 7, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5022, file: !1, line: 3714, column: 5)
!5033 = !DILocation(line: 3715, column: 13, scope: !5032)
!5034 = !DILocation(line: 3715, column: 27, scope: !5032)
!5035 = !DILocation(line: 3716, column: 23, scope: !5032)
!5036 = !DILocation(line: 3716, column: 7, scope: !5032)
!5037 = !DILocation(line: 3716, column: 13, scope: !5032)
!5038 = !DILocation(line: 3716, column: 22, scope: !5032)
!5039 = !DILocation(line: 3717, column: 32, scope: !5032)
!5040 = !DILocation(line: 3717, column: 47, scope: !5032)
!5041 = !DILocation(line: 3717, column: 52, scope: !5032)
!5042 = !DILocation(line: 3718, column: 19, scope: !5032)
!5043 = !DILocation(line: 3717, column: 14, scope: !5032)
!5044 = !DILocation(line: 3719, column: 5, scope: !5032)
!5045 = !DILocation(line: 3721, column: 30, scope: !5022)
!5046 = !DILocation(line: 3721, column: 44, scope: !5022)
!5047 = !DILocation(line: 3721, column: 12, scope: !5022)
!5048 = !DILocation(line: 3722, column: 1, scope: !5005)
!5049 = distinct !DISubprogram(name: "DrawPathLineToVerticalRelative", scope: !1, file: !1, line: 3760, type: !4913, scopeLine: 3761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5050 = !DILocalVariable(name: "wand", arg: 1, scope: !5049, file: !1, line: 3760, type: !1172)
!5051 = !DILocation(line: 3760, column: 61, scope: !5049)
!5052 = !DILocalVariable(name: "y", arg: 2, scope: !5049, file: !1, line: 3760, type: !1203)
!5053 = !DILocation(line: 3760, column: 79, scope: !5049)
!5054 = !DILocation(line: 3764, column: 7, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5049, file: !1, line: 3764, column: 7)
!5056 = !DILocation(line: 3764, column: 13, scope: !5055)
!5057 = !DILocation(line: 3764, column: 19, scope: !5055)
!5058 = !DILocation(line: 3764, column: 7, scope: !5049)
!5059 = !DILocation(line: 3765, column: 60, scope: !5055)
!5060 = !DILocation(line: 3765, column: 66, scope: !5055)
!5061 = !DILocation(line: 3765, column: 12, scope: !5055)
!5062 = !DILocation(line: 3765, column: 5, scope: !5055)
!5063 = !DILocation(line: 3766, column: 26, scope: !5049)
!5064 = !DILocation(line: 3766, column: 48, scope: !5049)
!5065 = !DILocation(line: 3766, column: 3, scope: !5049)
!5066 = !DILocation(line: 3767, column: 1, scope: !5049)
!5067 = distinct !DISubprogram(name: "DrawPathMoveToAbsolute", scope: !1, file: !1, line: 3817, type: !4469, scopeLine: 3819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5068 = !DILocalVariable(name: "wand", arg: 1, scope: !5067, file: !1, line: 3817, type: !1172)
!5069 = !DILocation(line: 3817, column: 53, scope: !5067)
!5070 = !DILocalVariable(name: "x", arg: 2, scope: !5067, file: !1, line: 3817, type: !1203)
!5071 = !DILocation(line: 3817, column: 71, scope: !5067)
!5072 = !DILocalVariable(name: "y", arg: 3, scope: !5067, file: !1, line: 3818, type: !1203)
!5073 = !DILocation(line: 3818, column: 16, scope: !5067)
!5074 = !DILocation(line: 3822, column: 7, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5067, file: !1, line: 3822, column: 7)
!5076 = !DILocation(line: 3822, column: 13, scope: !5075)
!5077 = !DILocation(line: 3822, column: 19, scope: !5075)
!5078 = !DILocation(line: 3822, column: 7, scope: !5067)
!5079 = !DILocation(line: 3823, column: 60, scope: !5075)
!5080 = !DILocation(line: 3823, column: 66, scope: !5075)
!5081 = !DILocation(line: 3823, column: 12, scope: !5075)
!5082 = !DILocation(line: 3823, column: 5, scope: !5075)
!5083 = !DILocation(line: 3824, column: 18, scope: !5067)
!5084 = !DILocation(line: 3824, column: 40, scope: !5067)
!5085 = !DILocation(line: 3824, column: 42, scope: !5067)
!5086 = !DILocation(line: 3824, column: 3, scope: !5067)
!5087 = !DILocation(line: 3825, column: 1, scope: !5067)
!5088 = distinct !DISubprogram(name: "DrawPathMoveTo", scope: !1, file: !1, line: 3798, type: !4492, scopeLine: 3800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5089 = !DILocalVariable(name: "wand", arg: 1, scope: !5088, file: !1, line: 3798, type: !1172)
!5090 = !DILocation(line: 3798, column: 41, scope: !5088)
!5091 = !DILocalVariable(name: "mode", arg: 2, scope: !5088, file: !1, line: 3798, type: !4259)
!5092 = !DILocation(line: 3798, column: 61, scope: !5088)
!5093 = !DILocalVariable(name: "x", arg: 3, scope: !5088, file: !1, line: 3798, type: !1203)
!5094 = !DILocation(line: 3798, column: 79, scope: !5088)
!5095 = !DILocalVariable(name: "y", arg: 4, scope: !5088, file: !1, line: 3799, type: !1203)
!5096 = !DILocation(line: 3799, column: 16, scope: !5088)
!5097 = !DILocation(line: 3803, column: 7, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5088, file: !1, line: 3803, column: 7)
!5099 = !DILocation(line: 3803, column: 13, scope: !5098)
!5100 = !DILocation(line: 3803, column: 19, scope: !5098)
!5101 = !DILocation(line: 3803, column: 7, scope: !5088)
!5102 = !DILocation(line: 3804, column: 60, scope: !5098)
!5103 = !DILocation(line: 3804, column: 66, scope: !5098)
!5104 = !DILocation(line: 3804, column: 12, scope: !5098)
!5105 = !DILocation(line: 3804, column: 5, scope: !5098)
!5106 = !DILocation(line: 3805, column: 8, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5088, file: !1, line: 3805, column: 7)
!5108 = !DILocation(line: 3805, column: 14, scope: !5107)
!5109 = !DILocation(line: 3805, column: 29, scope: !5107)
!5110 = !DILocation(line: 3805, column: 53, scope: !5107)
!5111 = !DILocation(line: 3806, column: 8, scope: !5107)
!5112 = !DILocation(line: 3806, column: 14, scope: !5107)
!5113 = !DILocation(line: 3806, column: 27, scope: !5107)
!5114 = !DILocation(line: 3806, column: 24, scope: !5107)
!5115 = !DILocation(line: 3805, column: 7, scope: !5088)
!5116 = !DILocation(line: 3808, column: 7, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5107, file: !1, line: 3807, column: 5)
!5118 = !DILocation(line: 3808, column: 13, scope: !5117)
!5119 = !DILocation(line: 3808, column: 27, scope: !5117)
!5120 = !DILocation(line: 3809, column: 23, scope: !5117)
!5121 = !DILocation(line: 3809, column: 7, scope: !5117)
!5122 = !DILocation(line: 3809, column: 13, scope: !5117)
!5123 = !DILocation(line: 3809, column: 22, scope: !5117)
!5124 = !DILocation(line: 3810, column: 32, scope: !5117)
!5125 = !DILocation(line: 3810, column: 53, scope: !5117)
!5126 = !DILocation(line: 3810, column: 58, scope: !5117)
!5127 = !DILocation(line: 3811, column: 19, scope: !5117)
!5128 = !DILocation(line: 3811, column: 21, scope: !5117)
!5129 = !DILocation(line: 3810, column: 14, scope: !5117)
!5130 = !DILocation(line: 3812, column: 5, scope: !5117)
!5131 = !DILocation(line: 3814, column: 30, scope: !5107)
!5132 = !DILocation(line: 3814, column: 50, scope: !5107)
!5133 = !DILocation(line: 3814, column: 52, scope: !5107)
!5134 = !DILocation(line: 3814, column: 12, scope: !5107)
!5135 = !DILocation(line: 3815, column: 1, scope: !5088)
!5136 = distinct !DISubprogram(name: "DrawPathMoveToRelative", scope: !1, file: !1, line: 3856, type: !4469, scopeLine: 3858, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5137 = !DILocalVariable(name: "wand", arg: 1, scope: !5136, file: !1, line: 3856, type: !1172)
!5138 = !DILocation(line: 3856, column: 53, scope: !5136)
!5139 = !DILocalVariable(name: "x", arg: 2, scope: !5136, file: !1, line: 3856, type: !1203)
!5140 = !DILocation(line: 3856, column: 71, scope: !5136)
!5141 = !DILocalVariable(name: "y", arg: 3, scope: !5136, file: !1, line: 3857, type: !1203)
!5142 = !DILocation(line: 3857, column: 16, scope: !5136)
!5143 = !DILocation(line: 3861, column: 7, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5136, file: !1, line: 3861, column: 7)
!5145 = !DILocation(line: 3861, column: 13, scope: !5144)
!5146 = !DILocation(line: 3861, column: 19, scope: !5144)
!5147 = !DILocation(line: 3861, column: 7, scope: !5136)
!5148 = !DILocation(line: 3862, column: 60, scope: !5144)
!5149 = !DILocation(line: 3862, column: 66, scope: !5144)
!5150 = !DILocation(line: 3862, column: 12, scope: !5144)
!5151 = !DILocation(line: 3862, column: 5, scope: !5144)
!5152 = !DILocation(line: 3863, column: 18, scope: !5136)
!5153 = !DILocation(line: 3863, column: 40, scope: !5136)
!5154 = !DILocation(line: 3863, column: 42, scope: !5136)
!5155 = !DILocation(line: 3863, column: 3, scope: !5136)
!5156 = !DILocation(line: 3864, column: 1, scope: !5136)
!5157 = distinct !DISubprogram(name: "DrawPathStart", scope: !1, file: !1, line: 3892, type: !1219, scopeLine: 3893, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5158 = !DILocalVariable(name: "wand", arg: 1, scope: !5157, file: !1, line: 3892, type: !1172)
!5159 = !DILocation(line: 3892, column: 44, scope: !5157)
!5160 = !DILocation(line: 3896, column: 7, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5157, file: !1, line: 3896, column: 7)
!5162 = !DILocation(line: 3896, column: 13, scope: !5161)
!5163 = !DILocation(line: 3896, column: 19, scope: !5161)
!5164 = !DILocation(line: 3896, column: 7, scope: !5157)
!5165 = !DILocation(line: 3897, column: 60, scope: !5161)
!5166 = !DILocation(line: 3897, column: 66, scope: !5161)
!5167 = !DILocation(line: 3897, column: 12, scope: !5161)
!5168 = !DILocation(line: 3897, column: 5, scope: !5161)
!5169 = !DILocation(line: 3898, column: 20, scope: !5157)
!5170 = !DILocation(line: 3898, column: 10, scope: !5157)
!5171 = !DILocation(line: 3899, column: 3, scope: !5157)
!5172 = !DILocation(line: 3899, column: 9, scope: !5157)
!5173 = !DILocation(line: 3899, column: 23, scope: !5157)
!5174 = !DILocation(line: 3900, column: 3, scope: !5157)
!5175 = !DILocation(line: 3900, column: 9, scope: !5157)
!5176 = !DILocation(line: 3900, column: 18, scope: !5157)
!5177 = !DILocation(line: 3901, column: 1, scope: !5157)
!5178 = distinct !DISubprogram(name: "DrawPoint", scope: !1, file: !1, line: 3929, type: !4469, scopeLine: 3930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5179 = !DILocalVariable(name: "wand", arg: 1, scope: !5178, file: !1, line: 3929, type: !1172)
!5180 = !DILocation(line: 3929, column: 40, scope: !5178)
!5181 = !DILocalVariable(name: "x", arg: 2, scope: !5178, file: !1, line: 3929, type: !1203)
!5182 = !DILocation(line: 3929, column: 58, scope: !5178)
!5183 = !DILocalVariable(name: "y", arg: 3, scope: !5178, file: !1, line: 3929, type: !1203)
!5184 = !DILocation(line: 3929, column: 73, scope: !5178)
!5185 = !DILocation(line: 3933, column: 7, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5178, file: !1, line: 3933, column: 7)
!5187 = !DILocation(line: 3933, column: 13, scope: !5186)
!5188 = !DILocation(line: 3933, column: 19, scope: !5186)
!5189 = !DILocation(line: 3933, column: 7, scope: !5178)
!5190 = !DILocation(line: 3934, column: 60, scope: !5186)
!5191 = !DILocation(line: 3934, column: 66, scope: !5186)
!5192 = !DILocation(line: 3934, column: 12, scope: !5186)
!5193 = !DILocation(line: 3934, column: 5, scope: !5186)
!5194 = !DILocation(line: 3935, column: 20, scope: !5178)
!5195 = !DILocation(line: 3935, column: 47, scope: !5178)
!5196 = !DILocation(line: 3935, column: 49, scope: !5178)
!5197 = !DILocation(line: 3935, column: 10, scope: !5178)
!5198 = !DILocation(line: 3936, column: 1, scope: !5178)
!5199 = distinct !DISubprogram(name: "DrawPolygon", scope: !1, file: !1, line: 3966, type: !2271, scopeLine: 3968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5200 = !DILocalVariable(name: "wand", arg: 1, scope: !5199, file: !1, line: 3966, type: !1172)
!5201 = !DILocation(line: 3966, column: 42, scope: !5199)
!5202 = !DILocalVariable(name: "number_coordinates", arg: 2, scope: !5199, file: !1, line: 3967, type: !1098)
!5203 = !DILocation(line: 3967, column: 16, scope: !5199)
!5204 = !DILocalVariable(name: "coordinates", arg: 3, scope: !5199, file: !1, line: 3967, type: !2273)
!5205 = !DILocation(line: 3967, column: 52, scope: !5199)
!5206 = !DILocation(line: 3971, column: 7, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5199, file: !1, line: 3971, column: 7)
!5208 = !DILocation(line: 3971, column: 13, scope: !5207)
!5209 = !DILocation(line: 3971, column: 19, scope: !5207)
!5210 = !DILocation(line: 3971, column: 7, scope: !5199)
!5211 = !DILocation(line: 3972, column: 60, scope: !5207)
!5212 = !DILocation(line: 3972, column: 66, scope: !5207)
!5213 = !DILocation(line: 3972, column: 12, scope: !5207)
!5214 = !DILocation(line: 3972, column: 5, scope: !5207)
!5215 = !DILocation(line: 3973, column: 26, scope: !5199)
!5216 = !DILocation(line: 3973, column: 41, scope: !5199)
!5217 = !DILocation(line: 3973, column: 60, scope: !5199)
!5218 = !DILocation(line: 3973, column: 3, scope: !5199)
!5219 = !DILocation(line: 3974, column: 1, scope: !5199)
!5220 = distinct !DISubprogram(name: "DrawPolyline", scope: !1, file: !1, line: 4004, type: !2271, scopeLine: 4006, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5221 = !DILocalVariable(name: "wand", arg: 1, scope: !5220, file: !1, line: 4004, type: !1172)
!5222 = !DILocation(line: 4004, column: 43, scope: !5220)
!5223 = !DILocalVariable(name: "number_coordinates", arg: 2, scope: !5220, file: !1, line: 4005, type: !1098)
!5224 = !DILocation(line: 4005, column: 16, scope: !5220)
!5225 = !DILocalVariable(name: "coordinates", arg: 3, scope: !5220, file: !1, line: 4005, type: !2273)
!5226 = !DILocation(line: 4005, column: 52, scope: !5220)
!5227 = !DILocation(line: 4009, column: 7, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5220, file: !1, line: 4009, column: 7)
!5229 = !DILocation(line: 4009, column: 13, scope: !5228)
!5230 = !DILocation(line: 4009, column: 19, scope: !5228)
!5231 = !DILocation(line: 4009, column: 7, scope: !5220)
!5232 = !DILocation(line: 4010, column: 60, scope: !5228)
!5233 = !DILocation(line: 4010, column: 66, scope: !5228)
!5234 = !DILocation(line: 4010, column: 12, scope: !5228)
!5235 = !DILocation(line: 4010, column: 5, scope: !5228)
!5236 = !DILocation(line: 4011, column: 26, scope: !5220)
!5237 = !DILocation(line: 4011, column: 42, scope: !5220)
!5238 = !DILocation(line: 4011, column: 61, scope: !5220)
!5239 = !DILocation(line: 4011, column: 3, scope: !5220)
!5240 = !DILocation(line: 4012, column: 1, scope: !5220)
!5241 = distinct !DISubprogram(name: "DrawPopClipPath", scope: !1, file: !1, line: 4036, type: !1219, scopeLine: 4037, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5242 = !DILocalVariable(name: "wand", arg: 1, scope: !5241, file: !1, line: 4036, type: !1172)
!5243 = !DILocation(line: 4036, column: 46, scope: !5241)
!5244 = !DILocation(line: 4040, column: 7, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5241, file: !1, line: 4040, column: 7)
!5246 = !DILocation(line: 4040, column: 13, scope: !5245)
!5247 = !DILocation(line: 4040, column: 19, scope: !5245)
!5248 = !DILocation(line: 4040, column: 7, scope: !5241)
!5249 = !DILocation(line: 4041, column: 60, scope: !5245)
!5250 = !DILocation(line: 4041, column: 66, scope: !5245)
!5251 = !DILocation(line: 4041, column: 12, scope: !5245)
!5252 = !DILocation(line: 4041, column: 5, scope: !5245)
!5253 = !DILocation(line: 4042, column: 7, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5241, file: !1, line: 4042, column: 7)
!5255 = !DILocation(line: 4042, column: 13, scope: !5254)
!5256 = !DILocation(line: 4042, column: 26, scope: !5254)
!5257 = !DILocation(line: 4042, column: 7, scope: !5241)
!5258 = !DILocation(line: 4043, column: 5, scope: !5254)
!5259 = !DILocation(line: 4043, column: 11, scope: !5254)
!5260 = !DILocation(line: 4043, column: 23, scope: !5254)
!5261 = !DILocation(line: 4044, column: 20, scope: !5241)
!5262 = !DILocation(line: 4044, column: 10, scope: !5241)
!5263 = !DILocation(line: 4045, column: 1, scope: !5241)
!5264 = distinct !DISubprogram(name: "DrawPopDefs", scope: !1, file: !1, line: 4069, type: !1219, scopeLine: 4070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5265 = !DILocalVariable(name: "wand", arg: 1, scope: !5264, file: !1, line: 4069, type: !1172)
!5266 = !DILocation(line: 4069, column: 42, scope: !5264)
!5267 = !DILocation(line: 4073, column: 7, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5264, file: !1, line: 4073, column: 7)
!5269 = !DILocation(line: 4073, column: 13, scope: !5268)
!5270 = !DILocation(line: 4073, column: 19, scope: !5268)
!5271 = !DILocation(line: 4073, column: 7, scope: !5264)
!5272 = !DILocation(line: 4074, column: 60, scope: !5268)
!5273 = !DILocation(line: 4074, column: 66, scope: !5268)
!5274 = !DILocation(line: 4074, column: 12, scope: !5268)
!5275 = !DILocation(line: 4074, column: 5, scope: !5268)
!5276 = !DILocation(line: 4075, column: 7, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5264, file: !1, line: 4075, column: 7)
!5278 = !DILocation(line: 4075, column: 13, scope: !5277)
!5279 = !DILocation(line: 4075, column: 26, scope: !5277)
!5280 = !DILocation(line: 4075, column: 7, scope: !5264)
!5281 = !DILocation(line: 4076, column: 5, scope: !5277)
!5282 = !DILocation(line: 4076, column: 11, scope: !5277)
!5283 = !DILocation(line: 4076, column: 23, scope: !5277)
!5284 = !DILocation(line: 4077, column: 20, scope: !5264)
!5285 = !DILocation(line: 4077, column: 10, scope: !5264)
!5286 = !DILocation(line: 4078, column: 1, scope: !5264)
!5287 = distinct !DISubprogram(name: "DrawPopPattern", scope: !1, file: !1, line: 4102, type: !2369, scopeLine: 4103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5288 = !DILocalVariable(name: "wand", arg: 1, scope: !5287, file: !1, line: 4102, type: !1172)
!5289 = !DILocation(line: 4102, column: 58, scope: !5287)
!5290 = !DILocalVariable(name: "geometry", scope: !5287, file: !1, line: 4105, type: !911)
!5291 = !DILocation(line: 4105, column: 5, scope: !5287)
!5292 = !DILocalVariable(name: "key", scope: !5287, file: !1, line: 4106, type: !911)
!5293 = !DILocation(line: 4106, column: 5, scope: !5287)
!5294 = !DILocation(line: 4110, column: 7, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5287, file: !1, line: 4110, column: 7)
!5296 = !DILocation(line: 4110, column: 13, scope: !5295)
!5297 = !DILocation(line: 4110, column: 19, scope: !5295)
!5298 = !DILocation(line: 4110, column: 7, scope: !5287)
!5299 = !DILocation(line: 4111, column: 60, scope: !5295)
!5300 = !DILocation(line: 4111, column: 66, scope: !5295)
!5301 = !DILocation(line: 4111, column: 12, scope: !5295)
!5302 = !DILocation(line: 4111, column: 5, scope: !5295)
!5303 = !DILocation(line: 4112, column: 7, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5287, file: !1, line: 4112, column: 7)
!5305 = !DILocation(line: 4112, column: 13, scope: !5304)
!5306 = !DILocation(line: 4112, column: 19, scope: !5304)
!5307 = !DILocation(line: 4112, column: 7, scope: !5287)
!5308 = !DILocation(line: 4113, column: 5, scope: !5304)
!5309 = !DILocation(line: 4114, column: 7, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5287, file: !1, line: 4114, column: 7)
!5311 = !DILocation(line: 4114, column: 13, scope: !5310)
!5312 = !DILocation(line: 4114, column: 24, scope: !5310)
!5313 = !DILocation(line: 4114, column: 7, scope: !5287)
!5314 = !DILocation(line: 4116, column: 7, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5310, file: !1, line: 4115, column: 5)
!5316 = !DILocation(line: 4118, column: 7, scope: !5315)
!5317 = !DILocation(line: 4120, column: 29, scope: !5287)
!5318 = !DILocation(line: 4120, column: 52, scope: !5287)
!5319 = !DILocation(line: 4120, column: 58, scope: !5287)
!5320 = !DILocation(line: 4120, column: 10, scope: !5287)
!5321 = !DILocation(line: 4121, column: 27, scope: !5287)
!5322 = !DILocation(line: 4121, column: 33, scope: !5287)
!5323 = !DILocation(line: 4121, column: 39, scope: !5287)
!5324 = !DILocation(line: 4121, column: 43, scope: !5287)
!5325 = !DILocation(line: 4121, column: 49, scope: !5287)
!5326 = !DILocation(line: 4121, column: 53, scope: !5287)
!5327 = !DILocation(line: 4121, column: 59, scope: !5287)
!5328 = !DILocation(line: 4121, column: 52, scope: !5287)
!5329 = !DILocation(line: 4121, column: 10, scope: !5287)
!5330 = !DILocation(line: 4122, column: 29, scope: !5287)
!5331 = !DILocation(line: 4123, column: 14, scope: !5287)
!5332 = !DILocation(line: 4123, column: 20, scope: !5287)
!5333 = !DILocation(line: 4123, column: 35, scope: !5287)
!5334 = !DILocation(line: 4123, column: 5, scope: !5287)
!5335 = !DILocation(line: 4123, column: 50, scope: !5287)
!5336 = !DILocation(line: 4123, column: 56, scope: !5287)
!5337 = !DILocation(line: 4123, column: 71, scope: !5287)
!5338 = !DILocation(line: 4123, column: 41, scope: !5287)
!5339 = !DILocation(line: 4124, column: 14, scope: !5287)
!5340 = !DILocation(line: 4124, column: 20, scope: !5287)
!5341 = !DILocation(line: 4124, column: 35, scope: !5287)
!5342 = !DILocation(line: 4124, column: 5, scope: !5287)
!5343 = !DILocation(line: 4124, column: 46, scope: !5287)
!5344 = !DILocation(line: 4124, column: 52, scope: !5287)
!5345 = !DILocation(line: 4124, column: 67, scope: !5287)
!5346 = !DILocation(line: 4124, column: 37, scope: !5287)
!5347 = !DILocation(line: 4122, column: 10, scope: !5287)
!5348 = !DILocation(line: 4125, column: 27, scope: !5287)
!5349 = !DILocation(line: 4125, column: 33, scope: !5287)
!5350 = !DILocation(line: 4125, column: 39, scope: !5287)
!5351 = !DILocation(line: 4125, column: 43, scope: !5287)
!5352 = !DILocation(line: 4125, column: 10, scope: !5287)
!5353 = !DILocation(line: 4126, column: 34, scope: !5287)
!5354 = !DILocation(line: 4126, column: 40, scope: !5287)
!5355 = !DILocation(line: 4126, column: 20, scope: !5287)
!5356 = !DILocation(line: 4126, column: 3, scope: !5287)
!5357 = !DILocation(line: 4126, column: 9, scope: !5287)
!5358 = !DILocation(line: 4126, column: 19, scope: !5287)
!5359 = !DILocation(line: 4127, column: 3, scope: !5287)
!5360 = !DILocation(line: 4127, column: 9, scope: !5287)
!5361 = !DILocation(line: 4127, column: 23, scope: !5287)
!5362 = !DILocation(line: 4128, column: 3, scope: !5287)
!5363 = !DILocation(line: 4128, column: 9, scope: !5287)
!5364 = !DILocation(line: 4128, column: 24, scope: !5287)
!5365 = !DILocation(line: 4128, column: 25, scope: !5287)
!5366 = !DILocation(line: 4129, column: 3, scope: !5287)
!5367 = !DILocation(line: 4129, column: 9, scope: !5287)
!5368 = !DILocation(line: 4129, column: 24, scope: !5287)
!5369 = !DILocation(line: 4129, column: 25, scope: !5287)
!5370 = !DILocation(line: 4130, column: 3, scope: !5287)
!5371 = !DILocation(line: 4130, column: 9, scope: !5287)
!5372 = !DILocation(line: 4130, column: 24, scope: !5287)
!5373 = !DILocation(line: 4130, column: 29, scope: !5287)
!5374 = !DILocation(line: 4131, column: 3, scope: !5287)
!5375 = !DILocation(line: 4131, column: 9, scope: !5287)
!5376 = !DILocation(line: 4131, column: 24, scope: !5287)
!5377 = !DILocation(line: 4131, column: 30, scope: !5287)
!5378 = !DILocation(line: 4132, column: 3, scope: !5287)
!5379 = !DILocation(line: 4132, column: 9, scope: !5287)
!5380 = !DILocation(line: 4132, column: 19, scope: !5287)
!5381 = !DILocation(line: 4133, column: 7, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5287, file: !1, line: 4133, column: 7)
!5383 = !DILocation(line: 4133, column: 13, scope: !5382)
!5384 = !DILocation(line: 4133, column: 26, scope: !5382)
!5385 = !DILocation(line: 4133, column: 7, scope: !5287)
!5386 = !DILocation(line: 4134, column: 5, scope: !5382)
!5387 = !DILocation(line: 4134, column: 11, scope: !5382)
!5388 = !DILocation(line: 4134, column: 23, scope: !5382)
!5389 = !DILocation(line: 4135, column: 20, scope: !5287)
!5390 = !DILocation(line: 4135, column: 10, scope: !5287)
!5391 = !DILocation(line: 4136, column: 3, scope: !5287)
!5392 = !DILocation(line: 4137, column: 1, scope: !5287)
!5393 = distinct !DISubprogram(name: "DrawPushClipPath", scope: !1, file: !1, line: 4165, type: !2612, scopeLine: 4166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5394 = !DILocalVariable(name: "wand", arg: 1, scope: !5393, file: !1, line: 4165, type: !1172)
!5395 = !DILocation(line: 4165, column: 47, scope: !5393)
!5396 = !DILocalVariable(name: "clip_mask_id", arg: 2, scope: !5393, file: !1, line: 4165, type: !891)
!5397 = !DILocation(line: 4165, column: 64, scope: !5393)
!5398 = !DILocation(line: 4169, column: 7, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5393, file: !1, line: 4169, column: 7)
!5400 = !DILocation(line: 4169, column: 13, scope: !5399)
!5401 = !DILocation(line: 4169, column: 19, scope: !5399)
!5402 = !DILocation(line: 4169, column: 7, scope: !5393)
!5403 = !DILocation(line: 4170, column: 60, scope: !5399)
!5404 = !DILocation(line: 4170, column: 66, scope: !5399)
!5405 = !DILocation(line: 4170, column: 12, scope: !5399)
!5406 = !DILocation(line: 4170, column: 5, scope: !5399)
!5407 = !DILocation(line: 4172, column: 20, scope: !5393)
!5408 = !DILocation(line: 4172, column: 47, scope: !5393)
!5409 = !DILocation(line: 4172, column: 10, scope: !5393)
!5410 = !DILocation(line: 4173, column: 3, scope: !5393)
!5411 = !DILocation(line: 4173, column: 9, scope: !5393)
!5412 = !DILocation(line: 4173, column: 21, scope: !5393)
!5413 = !DILocation(line: 4174, column: 1, scope: !5393)
!5414 = distinct !DISubprogram(name: "DrawPushDefs", scope: !1, file: !1, line: 4200, type: !1219, scopeLine: 4201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5415 = !DILocalVariable(name: "wand", arg: 1, scope: !5414, file: !1, line: 4200, type: !1172)
!5416 = !DILocation(line: 4200, column: 43, scope: !5414)
!5417 = !DILocation(line: 4204, column: 7, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5414, file: !1, line: 4204, column: 7)
!5419 = !DILocation(line: 4204, column: 13, scope: !5418)
!5420 = !DILocation(line: 4204, column: 19, scope: !5418)
!5421 = !DILocation(line: 4204, column: 7, scope: !5414)
!5422 = !DILocation(line: 4205, column: 60, scope: !5418)
!5423 = !DILocation(line: 4205, column: 66, scope: !5418)
!5424 = !DILocation(line: 4205, column: 12, scope: !5418)
!5425 = !DILocation(line: 4205, column: 5, scope: !5418)
!5426 = !DILocation(line: 4206, column: 20, scope: !5414)
!5427 = !DILocation(line: 4206, column: 10, scope: !5414)
!5428 = !DILocation(line: 4207, column: 3, scope: !5414)
!5429 = !DILocation(line: 4207, column: 9, scope: !5414)
!5430 = !DILocation(line: 4207, column: 21, scope: !5414)
!5431 = !DILocation(line: 4208, column: 1, scope: !5414)
!5432 = distinct !DISubprogram(name: "DrawPushPattern", scope: !1, file: !1, line: 4249, type: !5433, scopeLine: 4252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5433 = !DISubroutineType(types: !5434)
!5434 = !{!764, !1172, !891, !1203, !1203, !1203, !1203}
!5435 = !DILocalVariable(name: "wand", arg: 1, scope: !5432, file: !1, line: 4249, type: !1172)
!5436 = !DILocation(line: 4249, column: 59, scope: !5432)
!5437 = !DILocalVariable(name: "pattern_id", arg: 2, scope: !5432, file: !1, line: 4250, type: !891)
!5438 = !DILocation(line: 4250, column: 15, scope: !5432)
!5439 = !DILocalVariable(name: "x", arg: 3, scope: !5432, file: !1, line: 4250, type: !1203)
!5440 = !DILocation(line: 4250, column: 39, scope: !5432)
!5441 = !DILocalVariable(name: "y", arg: 4, scope: !5432, file: !1, line: 4250, type: !1203)
!5442 = !DILocation(line: 4250, column: 54, scope: !5432)
!5443 = !DILocalVariable(name: "width", arg: 5, scope: !5432, file: !1, line: 4250, type: !1203)
!5444 = !DILocation(line: 4250, column: 69, scope: !5432)
!5445 = !DILocalVariable(name: "height", arg: 6, scope: !5432, file: !1, line: 4251, type: !1203)
!5446 = !DILocation(line: 4251, column: 16, scope: !5432)
!5447 = !DILocation(line: 4255, column: 7, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5432, file: !1, line: 4255, column: 7)
!5449 = !DILocation(line: 4255, column: 13, scope: !5448)
!5450 = !DILocation(line: 4255, column: 19, scope: !5448)
!5451 = !DILocation(line: 4255, column: 7, scope: !5432)
!5452 = !DILocation(line: 4256, column: 60, scope: !5448)
!5453 = !DILocation(line: 4256, column: 66, scope: !5448)
!5454 = !DILocation(line: 4256, column: 12, scope: !5448)
!5455 = !DILocation(line: 4256, column: 5, scope: !5448)
!5456 = !DILocation(line: 4258, column: 7, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5432, file: !1, line: 4258, column: 7)
!5458 = !DILocation(line: 4258, column: 13, scope: !5457)
!5459 = !DILocation(line: 4258, column: 24, scope: !5457)
!5460 = !DILocation(line: 4258, column: 7, scope: !5432)
!5461 = !DILocation(line: 4260, column: 7, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5457, file: !1, line: 4259, column: 5)
!5463 = !DILocation(line: 4262, column: 7, scope: !5462)
!5464 = !DILocation(line: 4264, column: 3, scope: !5432)
!5465 = !DILocation(line: 4264, column: 9, scope: !5432)
!5466 = !DILocation(line: 4264, column: 19, scope: !5432)
!5467 = !DILocation(line: 4265, column: 20, scope: !5432)
!5468 = !DILocation(line: 4265, column: 69, scope: !5432)
!5469 = !DILocation(line: 4266, column: 5, scope: !5432)
!5470 = !DILocation(line: 4266, column: 7, scope: !5432)
!5471 = !DILocation(line: 4266, column: 9, scope: !5432)
!5472 = !DILocation(line: 4266, column: 15, scope: !5432)
!5473 = !DILocation(line: 4265, column: 10, scope: !5432)
!5474 = !DILocation(line: 4267, column: 3, scope: !5432)
!5475 = !DILocation(line: 4267, column: 9, scope: !5432)
!5476 = !DILocation(line: 4267, column: 21, scope: !5432)
!5477 = !DILocation(line: 4268, column: 34, scope: !5432)
!5478 = !DILocation(line: 4268, column: 20, scope: !5432)
!5479 = !DILocation(line: 4268, column: 3, scope: !5432)
!5480 = !DILocation(line: 4268, column: 9, scope: !5432)
!5481 = !DILocation(line: 4268, column: 19, scope: !5432)
!5482 = !DILocation(line: 4269, column: 41, scope: !5432)
!5483 = !DILocation(line: 4269, column: 42, scope: !5432)
!5484 = !DILocation(line: 4269, column: 36, scope: !5432)
!5485 = !DILocation(line: 4269, column: 26, scope: !5432)
!5486 = !DILocation(line: 4269, column: 3, scope: !5432)
!5487 = !DILocation(line: 4269, column: 9, scope: !5432)
!5488 = !DILocation(line: 4269, column: 24, scope: !5432)
!5489 = !DILocation(line: 4269, column: 25, scope: !5432)
!5490 = !DILocation(line: 4270, column: 41, scope: !5432)
!5491 = !DILocation(line: 4270, column: 42, scope: !5432)
!5492 = !DILocation(line: 4270, column: 36, scope: !5432)
!5493 = !DILocation(line: 4270, column: 26, scope: !5432)
!5494 = !DILocation(line: 4270, column: 3, scope: !5432)
!5495 = !DILocation(line: 4270, column: 9, scope: !5432)
!5496 = !DILocation(line: 4270, column: 24, scope: !5432)
!5497 = !DILocation(line: 4270, column: 25, scope: !5432)
!5498 = !DILocation(line: 4271, column: 45, scope: !5432)
!5499 = !DILocation(line: 4271, column: 50, scope: !5432)
!5500 = !DILocation(line: 4271, column: 39, scope: !5432)
!5501 = !DILocation(line: 4271, column: 30, scope: !5432)
!5502 = !DILocation(line: 4271, column: 3, scope: !5432)
!5503 = !DILocation(line: 4271, column: 9, scope: !5432)
!5504 = !DILocation(line: 4271, column: 24, scope: !5432)
!5505 = !DILocation(line: 4271, column: 29, scope: !5432)
!5506 = !DILocation(line: 4272, column: 46, scope: !5432)
!5507 = !DILocation(line: 4272, column: 52, scope: !5432)
!5508 = !DILocation(line: 4272, column: 40, scope: !5432)
!5509 = !DILocation(line: 4272, column: 31, scope: !5432)
!5510 = !DILocation(line: 4272, column: 3, scope: !5432)
!5511 = !DILocation(line: 4272, column: 9, scope: !5432)
!5512 = !DILocation(line: 4272, column: 24, scope: !5432)
!5513 = !DILocation(line: 4272, column: 30, scope: !5432)
!5514 = !DILocation(line: 4273, column: 24, scope: !5432)
!5515 = !DILocation(line: 4273, column: 30, scope: !5432)
!5516 = !DILocation(line: 4273, column: 3, scope: !5432)
!5517 = !DILocation(line: 4273, column: 9, scope: !5432)
!5518 = !DILocation(line: 4273, column: 23, scope: !5432)
!5519 = !DILocation(line: 4274, column: 3, scope: !5432)
!5520 = !DILocation(line: 4275, column: 1, scope: !5432)
!5521 = distinct !DISubprogram(name: "DrawRectangle", scope: !1, file: !1, line: 4307, type: !2340, scopeLine: 4309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5522 = !DILocalVariable(name: "wand", arg: 1, scope: !5521, file: !1, line: 4307, type: !1172)
!5523 = !DILocation(line: 4307, column: 44, scope: !5521)
!5524 = !DILocalVariable(name: "x1", arg: 2, scope: !5521, file: !1, line: 4307, type: !1203)
!5525 = !DILocation(line: 4307, column: 62, scope: !5521)
!5526 = !DILocalVariable(name: "y1", arg: 3, scope: !5521, file: !1, line: 4307, type: !1203)
!5527 = !DILocation(line: 4307, column: 78, scope: !5521)
!5528 = !DILocalVariable(name: "x2", arg: 4, scope: !5521, file: !1, line: 4308, type: !1203)
!5529 = !DILocation(line: 4308, column: 16, scope: !5521)
!5530 = !DILocalVariable(name: "y2", arg: 5, scope: !5521, file: !1, line: 4308, type: !1203)
!5531 = !DILocation(line: 4308, column: 32, scope: !5521)
!5532 = !DILocation(line: 4312, column: 7, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5521, file: !1, line: 4312, column: 7)
!5534 = !DILocation(line: 4312, column: 13, scope: !5533)
!5535 = !DILocation(line: 4312, column: 19, scope: !5533)
!5536 = !DILocation(line: 4312, column: 7, scope: !5521)
!5537 = !DILocation(line: 4313, column: 60, scope: !5533)
!5538 = !DILocation(line: 4313, column: 66, scope: !5533)
!5539 = !DILocation(line: 4313, column: 12, scope: !5533)
!5540 = !DILocation(line: 4313, column: 5, scope: !5533)
!5541 = !DILocation(line: 4314, column: 20, scope: !5521)
!5542 = !DILocation(line: 4314, column: 63, scope: !5521)
!5543 = !DILocation(line: 4314, column: 66, scope: !5521)
!5544 = !DILocation(line: 4314, column: 69, scope: !5521)
!5545 = !DILocation(line: 4314, column: 72, scope: !5521)
!5546 = !DILocation(line: 4314, column: 10, scope: !5521)
!5547 = !DILocation(line: 4315, column: 1, scope: !5521)
!5548 = distinct !DISubprogram(name: "DrawRender", scope: !1, file: !1, line: 4339, type: !2369, scopeLine: 4340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5549 = !DILocalVariable(name: "wand", arg: 1, scope: !5548, file: !1, line: 4339, type: !1172)
!5550 = !DILocation(line: 4339, column: 54, scope: !5548)
!5551 = !DILocalVariable(name: "status", scope: !5548, file: !1, line: 4342, type: !764)
!5552 = !DILocation(line: 4342, column: 5, scope: !5548)
!5553 = !DILocation(line: 4346, column: 7, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5548, file: !1, line: 4346, column: 7)
!5555 = !DILocation(line: 4346, column: 13, scope: !5554)
!5556 = !DILocation(line: 4346, column: 19, scope: !5554)
!5557 = !DILocation(line: 4346, column: 7, scope: !5548)
!5558 = !DILocation(line: 4347, column: 60, scope: !5554)
!5559 = !DILocation(line: 4347, column: 66, scope: !5554)
!5560 = !DILocation(line: 4347, column: 12, scope: !5554)
!5561 = !DILocation(line: 4347, column: 5, scope: !5554)
!5562 = !DILocation(line: 4348, column: 29, scope: !5548)
!5563 = !DILocation(line: 4348, column: 35, scope: !5548)
!5564 = !DILocation(line: 4348, column: 3, scope: !5548)
!5565 = !DILocation(line: 4348, column: 19, scope: !5548)
!5566 = !DILocation(line: 4348, column: 28, scope: !5548)
!5567 = !DILocation(line: 4349, column: 7, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5548, file: !1, line: 4349, column: 7)
!5569 = !DILocation(line: 4349, column: 13, scope: !5568)
!5570 = !DILocation(line: 4349, column: 19, scope: !5568)
!5571 = !DILocation(line: 4349, column: 7, scope: !5548)
!5572 = !DILocation(line: 4350, column: 70, scope: !5568)
!5573 = !DILocation(line: 4350, column: 76, scope: !5568)
!5574 = !DILocation(line: 4350, column: 12, scope: !5568)
!5575 = !DILocation(line: 4350, column: 5, scope: !5568)
!5576 = !DILocation(line: 4351, column: 7, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5548, file: !1, line: 4351, column: 7)
!5578 = !DILocation(line: 4351, column: 13, scope: !5577)
!5579 = !DILocation(line: 4351, column: 19, scope: !5577)
!5580 = !DILocation(line: 4351, column: 7, scope: !5548)
!5581 = !DILocation(line: 4352, column: 5, scope: !5577)
!5582 = !DILocation(line: 4353, column: 20, scope: !5548)
!5583 = !DILocation(line: 4353, column: 26, scope: !5548)
!5584 = !DILocation(line: 4353, column: 32, scope: !5548)
!5585 = !DILocation(line: 4353, column: 10, scope: !5548)
!5586 = !DILocation(line: 4353, column: 9, scope: !5548)
!5587 = !DILocation(line: 4354, column: 20, scope: !5548)
!5588 = !DILocation(line: 4354, column: 26, scope: !5548)
!5589 = !DILocation(line: 4354, column: 37, scope: !5548)
!5590 = !DILocation(line: 4354, column: 43, scope: !5548)
!5591 = !DILocation(line: 4354, column: 50, scope: !5548)
!5592 = !DILocation(line: 4354, column: 3, scope: !5548)
!5593 = !DILocation(line: 4355, column: 3, scope: !5548)
!5594 = !DILocation(line: 4355, column: 19, scope: !5548)
!5595 = !DILocation(line: 4355, column: 28, scope: !5548)
!5596 = !DILocation(line: 4356, column: 10, scope: !5548)
!5597 = !DILocation(line: 4356, column: 3, scope: !5548)
!5598 = distinct !DISubprogram(name: "DrawResetVectorGraphics", scope: !1, file: !1, line: 4382, type: !1219, scopeLine: 4383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5599 = !DILocalVariable(name: "wand", arg: 1, scope: !5598, file: !1, line: 4382, type: !1172)
!5600 = !DILocation(line: 4382, column: 54, scope: !5598)
!5601 = !DILocation(line: 4386, column: 7, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5598, file: !1, line: 4386, column: 7)
!5603 = !DILocation(line: 4386, column: 13, scope: !5602)
!5604 = !DILocation(line: 4386, column: 19, scope: !5602)
!5605 = !DILocation(line: 4386, column: 7, scope: !5598)
!5606 = !DILocation(line: 4387, column: 60, scope: !5602)
!5607 = !DILocation(line: 4387, column: 66, scope: !5602)
!5608 = !DILocation(line: 4387, column: 12, scope: !5602)
!5609 = !DILocation(line: 4387, column: 5, scope: !5602)
!5610 = !DILocation(line: 4388, column: 7, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5598, file: !1, line: 4388, column: 7)
!5612 = !DILocation(line: 4388, column: 13, scope: !5611)
!5613 = !DILocation(line: 4388, column: 17, scope: !5611)
!5614 = !DILocation(line: 4388, column: 7, scope: !5598)
!5615 = !DILocation(line: 4389, column: 29, scope: !5611)
!5616 = !DILocation(line: 4389, column: 35, scope: !5611)
!5617 = !DILocation(line: 4389, column: 15, scope: !5611)
!5618 = !DILocation(line: 4389, column: 5, scope: !5611)
!5619 = !DILocation(line: 4389, column: 11, scope: !5611)
!5620 = !DILocation(line: 4389, column: 14, scope: !5611)
!5621 = !DILocation(line: 4390, column: 3, scope: !5598)
!5622 = !DILocation(line: 4390, column: 9, scope: !5598)
!5623 = !DILocation(line: 4390, column: 18, scope: !5598)
!5624 = !DILocation(line: 4391, column: 3, scope: !5598)
!5625 = !DILocation(line: 4391, column: 9, scope: !5598)
!5626 = !DILocation(line: 4391, column: 19, scope: !5598)
!5627 = !DILocation(line: 4392, column: 3, scope: !5598)
!5628 = !DILocation(line: 4392, column: 9, scope: !5598)
!5629 = !DILocation(line: 4392, column: 18, scope: !5598)
!5630 = !DILocation(line: 4393, column: 1, scope: !5598)
!5631 = distinct !DISubprogram(name: "DrawRotate", scope: !1, file: !1, line: 4419, type: !4913, scopeLine: 4420, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5632 = !DILocalVariable(name: "wand", arg: 1, scope: !5631, file: !1, line: 4419, type: !1172)
!5633 = !DILocation(line: 4419, column: 41, scope: !5631)
!5634 = !DILocalVariable(name: "degrees", arg: 2, scope: !5631, file: !1, line: 4419, type: !1203)
!5635 = !DILocation(line: 4419, column: 59, scope: !5631)
!5636 = !DILocation(line: 4423, column: 7, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5631, file: !1, line: 4423, column: 7)
!5638 = !DILocation(line: 4423, column: 13, scope: !5637)
!5639 = !DILocation(line: 4423, column: 19, scope: !5637)
!5640 = !DILocation(line: 4423, column: 7, scope: !5631)
!5641 = !DILocation(line: 4424, column: 60, scope: !5637)
!5642 = !DILocation(line: 4424, column: 66, scope: !5637)
!5643 = !DILocation(line: 4424, column: 12, scope: !5637)
!5644 = !DILocation(line: 4424, column: 5, scope: !5637)
!5645 = !DILocation(line: 4425, column: 20, scope: !5631)
!5646 = !DILocation(line: 4425, column: 42, scope: !5631)
!5647 = !DILocation(line: 4425, column: 10, scope: !5631)
!5648 = !DILocation(line: 4426, column: 1, scope: !5631)
!5649 = distinct !DISubprogram(name: "DrawRoundRectangle", scope: !1, file: !1, line: 4465, type: !5650, scopeLine: 4467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5650 = !DISubroutineType(types: !5651)
!5651 = !{null, !1172, !715, !715, !715, !715, !715, !715}
!5652 = !DILocalVariable(name: "wand", arg: 1, scope: !5649, file: !1, line: 4465, type: !1172)
!5653 = !DILocation(line: 4465, column: 49, scope: !5649)
!5654 = !DILocalVariable(name: "x1", arg: 2, scope: !5649, file: !1, line: 4465, type: !715)
!5655 = !DILocation(line: 4465, column: 61, scope: !5649)
!5656 = !DILocalVariable(name: "y1", arg: 3, scope: !5649, file: !1, line: 4465, type: !715)
!5657 = !DILocation(line: 4465, column: 71, scope: !5649)
!5658 = !DILocalVariable(name: "x2", arg: 4, scope: !5649, file: !1, line: 4466, type: !715)
!5659 = !DILocation(line: 4466, column: 10, scope: !5649)
!5660 = !DILocalVariable(name: "y2", arg: 5, scope: !5649, file: !1, line: 4466, type: !715)
!5661 = !DILocation(line: 4466, column: 20, scope: !5649)
!5662 = !DILocalVariable(name: "rx", arg: 6, scope: !5649, file: !1, line: 4466, type: !715)
!5663 = !DILocation(line: 4466, column: 30, scope: !5649)
!5664 = !DILocalVariable(name: "ry", arg: 7, scope: !5649, file: !1, line: 4466, type: !715)
!5665 = !DILocation(line: 4466, column: 40, scope: !5649)
!5666 = !DILocation(line: 4470, column: 7, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5649, file: !1, line: 4470, column: 7)
!5668 = !DILocation(line: 4470, column: 13, scope: !5667)
!5669 = !DILocation(line: 4470, column: 19, scope: !5667)
!5670 = !DILocation(line: 4470, column: 7, scope: !5649)
!5671 = !DILocation(line: 4471, column: 60, scope: !5667)
!5672 = !DILocation(line: 4471, column: 66, scope: !5667)
!5673 = !DILocation(line: 4471, column: 12, scope: !5667)
!5674 = !DILocation(line: 4471, column: 5, scope: !5667)
!5675 = !DILocation(line: 4472, column: 20, scope: !5649)
!5676 = !DILocation(line: 4473, column: 5, scope: !5649)
!5677 = !DILocation(line: 4473, column: 8, scope: !5649)
!5678 = !DILocation(line: 4473, column: 11, scope: !5649)
!5679 = !DILocation(line: 4473, column: 14, scope: !5649)
!5680 = !DILocation(line: 4473, column: 17, scope: !5649)
!5681 = !DILocation(line: 4473, column: 20, scope: !5649)
!5682 = !DILocation(line: 4472, column: 10, scope: !5649)
!5683 = !DILocation(line: 4474, column: 1, scope: !5649)
!5684 = distinct !DISubprogram(name: "DrawScale", scope: !1, file: !1, line: 4503, type: !4469, scopeLine: 4504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5685 = !DILocalVariable(name: "wand", arg: 1, scope: !5684, file: !1, line: 4503, type: !1172)
!5686 = !DILocation(line: 4503, column: 40, scope: !5684)
!5687 = !DILocalVariable(name: "x", arg: 2, scope: !5684, file: !1, line: 4503, type: !1203)
!5688 = !DILocation(line: 4503, column: 58, scope: !5684)
!5689 = !DILocalVariable(name: "y", arg: 3, scope: !5684, file: !1, line: 4503, type: !1203)
!5690 = !DILocation(line: 4503, column: 73, scope: !5684)
!5691 = !DILocation(line: 4507, column: 7, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5684, file: !1, line: 4507, column: 7)
!5693 = !DILocation(line: 4507, column: 13, scope: !5692)
!5694 = !DILocation(line: 4507, column: 19, scope: !5692)
!5695 = !DILocation(line: 4507, column: 7, scope: !5684)
!5696 = !DILocation(line: 4508, column: 60, scope: !5692)
!5697 = !DILocation(line: 4508, column: 66, scope: !5692)
!5698 = !DILocation(line: 4508, column: 12, scope: !5692)
!5699 = !DILocation(line: 4508, column: 5, scope: !5692)
!5700 = !DILocation(line: 4509, column: 20, scope: !5684)
!5701 = !DILocation(line: 4509, column: 47, scope: !5684)
!5702 = !DILocation(line: 4509, column: 49, scope: !5684)
!5703 = !DILocation(line: 4509, column: 10, scope: !5684)
!5704 = !DILocation(line: 4510, column: 1, scope: !5684)
!5705 = distinct !DISubprogram(name: "DrawSetBorderColor", scope: !1, file: !1, line: 4552, type: !5706, scopeLine: 4553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{null, !1172, !5708}
!5708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5709, size: 64)
!5709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2659)
!5710 = !DILocalVariable(name: "wand", arg: 1, scope: !5705, file: !1, line: 4552, type: !1172)
!5711 = !DILocation(line: 4552, column: 49, scope: !5705)
!5712 = !DILocalVariable(name: "border_wand", arg: 2, scope: !5705, file: !1, line: 4552, type: !5708)
!5713 = !DILocation(line: 4552, column: 71, scope: !5705)
!5714 = !DILocalVariable(name: "current_border", scope: !5705, file: !1, line: 4555, type: !806)
!5715 = !DILocation(line: 4555, column: 6, scope: !5705)
!5716 = !DILocalVariable(name: "border_color", scope: !5705, file: !1, line: 4556, type: !724)
!5717 = !DILocation(line: 4556, column: 5, scope: !5705)
!5718 = !DILocalVariable(name: "new_border", scope: !5705, file: !1, line: 4557, type: !724)
!5719 = !DILocation(line: 4557, column: 5, scope: !5705)
!5720 = !DILocation(line: 4561, column: 7, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5705, file: !1, line: 4561, column: 7)
!5722 = !DILocation(line: 4561, column: 13, scope: !5721)
!5723 = !DILocation(line: 4561, column: 19, scope: !5721)
!5724 = !DILocation(line: 4561, column: 7, scope: !5705)
!5725 = !DILocation(line: 4562, column: 60, scope: !5721)
!5726 = !DILocation(line: 4562, column: 66, scope: !5721)
!5727 = !DILocation(line: 4562, column: 12, scope: !5721)
!5728 = !DILocation(line: 4562, column: 5, scope: !5721)
!5729 = !DILocation(line: 4564, column: 24, scope: !5705)
!5730 = !DILocation(line: 4564, column: 3, scope: !5705)
!5731 = !DILocation(line: 4565, column: 14, scope: !5705)
!5732 = !DILocation(line: 4566, column: 20, scope: !5705)
!5733 = !DILocation(line: 4566, column: 36, scope: !5705)
!5734 = !DILocation(line: 4566, column: 17, scope: !5705)
!5735 = !DILocation(line: 4567, column: 8, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5705, file: !1, line: 4567, column: 7)
!5737 = !DILocation(line: 4567, column: 14, scope: !5736)
!5738 = !DILocation(line: 4567, column: 25, scope: !5736)
!5739 = !DILocation(line: 4567, column: 41, scope: !5736)
!5740 = !DILocation(line: 4568, column: 21, scope: !5736)
!5741 = !DILocation(line: 4568, column: 8, scope: !5736)
!5742 = !DILocation(line: 4568, column: 49, scope: !5736)
!5743 = !DILocation(line: 4567, column: 7, scope: !5705)
!5744 = !DILocation(line: 4570, column: 7, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5736, file: !1, line: 4569, column: 5)
!5746 = !DILocation(line: 4570, column: 23, scope: !5745)
!5747 = !DILocation(line: 4570, column: 36, scope: !5745)
!5748 = !DILocation(line: 4571, column: 24, scope: !5745)
!5749 = !DILocation(line: 4571, column: 14, scope: !5745)
!5750 = !DILocation(line: 4572, column: 22, scope: !5745)
!5751 = !DILocation(line: 4572, column: 7, scope: !5745)
!5752 = !DILocation(line: 4573, column: 24, scope: !5745)
!5753 = !DILocation(line: 4573, column: 14, scope: !5745)
!5754 = !DILocation(line: 4574, column: 5, scope: !5745)
!5755 = !DILocation(line: 4575, column: 1, scope: !5705)
!5756 = distinct !DISubprogram(name: "IsColorEqual", scope: !1, file: !1, line: 4538, type: !5757, scopeLine: 4540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5757 = !DISubroutineType(types: !5758)
!5758 = !{!764, !4033, !4033}
!5759 = !DILocalVariable(name: "p", arg: 1, scope: !5756, file: !1, line: 4538, type: !4033)
!5760 = !DILocation(line: 4538, column: 65, scope: !5756)
!5761 = !DILocalVariable(name: "q", arg: 2, scope: !5756, file: !1, line: 4539, type: !4033)
!5762 = !DILocation(line: 4539, column: 22, scope: !5756)
!5763 = !DILocation(line: 4541, column: 7, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5756, file: !1, line: 4541, column: 7)
!5765 = !DILocation(line: 4541, column: 25, scope: !5764)
!5766 = !DILocation(line: 4541, column: 22, scope: !5764)
!5767 = !DILocation(line: 4541, column: 7, scope: !5756)
!5768 = !DILocation(line: 4542, column: 5, scope: !5764)
!5769 = !DILocation(line: 4543, column: 7, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5756, file: !1, line: 4543, column: 7)
!5771 = !DILocation(line: 4543, column: 27, scope: !5770)
!5772 = !DILocation(line: 4543, column: 24, scope: !5770)
!5773 = !DILocation(line: 4543, column: 7, scope: !5756)
!5774 = !DILocation(line: 4544, column: 5, scope: !5770)
!5775 = !DILocation(line: 4545, column: 7, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5756, file: !1, line: 4545, column: 7)
!5777 = !DILocation(line: 4545, column: 26, scope: !5776)
!5778 = !DILocation(line: 4545, column: 23, scope: !5776)
!5779 = !DILocation(line: 4545, column: 7, scope: !5756)
!5780 = !DILocation(line: 4546, column: 5, scope: !5776)
!5781 = !DILocation(line: 4547, column: 7, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5756, file: !1, line: 4547, column: 7)
!5783 = !DILocation(line: 4547, column: 29, scope: !5782)
!5784 = !DILocation(line: 4547, column: 26, scope: !5782)
!5785 = !DILocation(line: 4547, column: 7, scope: !5756)
!5786 = !DILocation(line: 4548, column: 5, scope: !5782)
!5787 = !DILocation(line: 4549, column: 3, scope: !5756)
!5788 = !DILocation(line: 4550, column: 1, scope: !5756)
!5789 = distinct !DISubprogram(name: "MvgAppendColor", scope: !1, file: !1, line: 388, type: !5790, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5790 = !DISubroutineType(types: !5791)
!5791 = !{null, !1172, !4033}
!5792 = !DILocalVariable(name: "wand", arg: 1, scope: !5789, file: !1, line: 388, type: !1172)
!5793 = !DILocation(line: 388, column: 41, scope: !5789)
!5794 = !DILocalVariable(name: "color", arg: 2, scope: !5789, file: !1, line: 388, type: !4033)
!5795 = !DILocation(line: 388, column: 65, scope: !5789)
!5796 = !DILocation(line: 390, column: 8, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5789, file: !1, line: 390, column: 7)
!5798 = !DILocation(line: 390, column: 27, scope: !5797)
!5799 = !DILocation(line: 390, column: 33, scope: !5797)
!5800 = !DILocation(line: 391, column: 8, scope: !5797)
!5801 = !DILocation(line: 391, column: 29, scope: !5797)
!5802 = !DILocation(line: 391, column: 35, scope: !5797)
!5803 = !DILocation(line: 392, column: 8, scope: !5797)
!5804 = !DILocation(line: 392, column: 28, scope: !5797)
!5805 = !DILocation(line: 392, column: 34, scope: !5797)
!5806 = !DILocation(line: 393, column: 8, scope: !5797)
!5807 = !DILocation(line: 393, column: 31, scope: !5797)
!5808 = !DILocation(line: 390, column: 7, scope: !5789)
!5809 = !DILocation(line: 394, column: 22, scope: !5797)
!5810 = !DILocation(line: 394, column: 12, scope: !5797)
!5811 = !DILocation(line: 394, column: 5, scope: !5797)
!5812 = !DILocalVariable(name: "tuple", scope: !5813, file: !1, line: 398, type: !911)
!5813 = distinct !DILexicalBlock(scope: !5797, file: !1, line: 396, column: 5)
!5814 = !DILocation(line: 398, column: 9, scope: !5813)
!5815 = !DILocalVariable(name: "pixel", scope: !5813, file: !1, line: 401, type: !756)
!5816 = !DILocation(line: 401, column: 9, scope: !5813)
!5817 = !DILocation(line: 403, column: 28, scope: !5813)
!5818 = !DILocation(line: 403, column: 34, scope: !5813)
!5819 = !DILocation(line: 403, column: 7, scope: !5813)
!5820 = !DILocation(line: 404, column: 13, scope: !5813)
!5821 = !DILocation(line: 404, column: 23, scope: !5813)
!5822 = !DILocation(line: 405, column: 19, scope: !5813)
!5823 = !DILocation(line: 405, column: 26, scope: !5813)
!5824 = !DILocation(line: 405, column: 34, scope: !5813)
!5825 = !DILocation(line: 405, column: 13, scope: !5813)
!5826 = !DILocation(line: 405, column: 18, scope: !5813)
!5827 = !DILocation(line: 406, column: 34, scope: !5813)
!5828 = !DILocation(line: 406, column: 17, scope: !5813)
!5829 = !DILocation(line: 406, column: 13, scope: !5813)
!5830 = !DILocation(line: 406, column: 16, scope: !5813)
!5831 = !DILocation(line: 407, column: 36, scope: !5813)
!5832 = !DILocation(line: 407, column: 19, scope: !5813)
!5833 = !DILocation(line: 407, column: 13, scope: !5813)
!5834 = !DILocation(line: 407, column: 18, scope: !5813)
!5835 = !DILocation(line: 408, column: 35, scope: !5813)
!5836 = !DILocation(line: 408, column: 18, scope: !5813)
!5837 = !DILocation(line: 408, column: 13, scope: !5813)
!5838 = !DILocation(line: 408, column: 17, scope: !5813)
!5839 = !DILocation(line: 409, column: 38, scope: !5813)
!5840 = !DILocation(line: 409, column: 21, scope: !5813)
!5841 = !DILocation(line: 409, column: 13, scope: !5813)
!5842 = !DILocation(line: 409, column: 20, scope: !5813)
!5843 = !DILocation(line: 410, column: 39, scope: !5813)
!5844 = !DILocation(line: 410, column: 7, scope: !5813)
!5845 = !DILocation(line: 411, column: 24, scope: !5813)
!5846 = !DILocation(line: 411, column: 34, scope: !5813)
!5847 = !DILocation(line: 411, column: 14, scope: !5813)
!5848 = !DILocation(line: 413, column: 1, scope: !5789)
!5849 = distinct !DISubprogram(name: "DrawSetClipPath", scope: !1, file: !1, line: 4604, type: !5850, scopeLine: 4606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5850 = !DISubroutineType(types: !5851)
!5851 = !{!764, !1172, !891}
!5852 = !DILocalVariable(name: "wand", arg: 1, scope: !5849, file: !1, line: 4604, type: !1172)
!5853 = !DILocation(line: 4604, column: 59, scope: !5849)
!5854 = !DILocalVariable(name: "clip_mask", arg: 2, scope: !5849, file: !1, line: 4605, type: !891)
!5855 = !DILocation(line: 4605, column: 15, scope: !5849)
!5856 = !DILocation(line: 4607, column: 7, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5849, file: !1, line: 4607, column: 7)
!5858 = !DILocation(line: 4607, column: 13, scope: !5857)
!5859 = !DILocation(line: 4607, column: 19, scope: !5857)
!5860 = !DILocation(line: 4607, column: 7, scope: !5849)
!5861 = !DILocation(line: 4608, column: 60, scope: !5857)
!5862 = !DILocation(line: 4608, column: 12, scope: !5857)
!5863 = !DILocation(line: 4608, column: 5, scope: !5857)
!5864 = !DILocation(line: 4612, column: 8, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5849, file: !1, line: 4612, column: 7)
!5866 = !DILocation(line: 4612, column: 24, scope: !5865)
!5867 = !DILocation(line: 4612, column: 34, scope: !5865)
!5868 = !DILocation(line: 4612, column: 58, scope: !5865)
!5869 = !DILocation(line: 4613, column: 8, scope: !5865)
!5870 = !DILocation(line: 4613, column: 14, scope: !5865)
!5871 = !DILocation(line: 4613, column: 25, scope: !5865)
!5872 = !DILocation(line: 4613, column: 41, scope: !5865)
!5873 = !DILocation(line: 4614, column: 22, scope: !5865)
!5874 = !DILocation(line: 4614, column: 38, scope: !5865)
!5875 = !DILocation(line: 4614, column: 48, scope: !5865)
!5876 = !DILocation(line: 4614, column: 8, scope: !5865)
!5877 = !DILocation(line: 4614, column: 59, scope: !5865)
!5878 = !DILocation(line: 4612, column: 7, scope: !5849)
!5879 = !DILocation(line: 4616, column: 27, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5865, file: !1, line: 4615, column: 5)
!5881 = !DILocation(line: 4616, column: 43, scope: !5880)
!5882 = !DILocation(line: 4616, column: 53, scope: !5880)
!5883 = !DILocation(line: 4616, column: 14, scope: !5880)
!5884 = !DILocation(line: 4622, column: 24, scope: !5880)
!5885 = !DILocation(line: 4622, column: 52, scope: !5880)
!5886 = !DILocation(line: 4622, column: 14, scope: !5880)
!5887 = !DILocation(line: 4623, column: 5, scope: !5880)
!5888 = !DILocation(line: 4624, column: 3, scope: !5849)
!5889 = distinct !DISubprogram(name: "DrawSetClipRule", scope: !1, file: !1, line: 4651, type: !5890, scopeLine: 4652, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5890 = !DISubroutineType(types: !5891)
!5891 = !{null, !1172, !5892}
!5892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !983)
!5893 = !DILocalVariable(name: "wand", arg: 1, scope: !5889, file: !1, line: 4651, type: !1172)
!5894 = !DILocation(line: 4651, column: 46, scope: !5889)
!5895 = !DILocalVariable(name: "fill_rule", arg: 2, scope: !5889, file: !1, line: 4651, type: !5892)
!5896 = !DILocation(line: 4651, column: 66, scope: !5889)
!5897 = !DILocation(line: 4655, column: 7, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5889, file: !1, line: 4655, column: 7)
!5899 = !DILocation(line: 4655, column: 13, scope: !5898)
!5900 = !DILocation(line: 4655, column: 19, scope: !5898)
!5901 = !DILocation(line: 4655, column: 7, scope: !5889)
!5902 = !DILocation(line: 4656, column: 60, scope: !5898)
!5903 = !DILocation(line: 4656, column: 66, scope: !5898)
!5904 = !DILocation(line: 4656, column: 12, scope: !5898)
!5905 = !DILocation(line: 4656, column: 5, scope: !5898)
!5906 = !DILocation(line: 4657, column: 8, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5889, file: !1, line: 4657, column: 7)
!5908 = !DILocation(line: 4657, column: 14, scope: !5907)
!5909 = !DILocation(line: 4657, column: 25, scope: !5907)
!5910 = !DILocation(line: 4657, column: 41, scope: !5907)
!5911 = !DILocation(line: 4658, column: 8, scope: !5907)
!5912 = !DILocation(line: 4658, column: 24, scope: !5907)
!5913 = !DILocation(line: 4658, column: 37, scope: !5907)
!5914 = !DILocation(line: 4658, column: 34, scope: !5907)
!5915 = !DILocation(line: 4657, column: 7, scope: !5889)
!5916 = !DILocation(line: 4660, column: 33, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5907, file: !1, line: 4659, column: 5)
!5918 = !DILocation(line: 4660, column: 7, scope: !5917)
!5919 = !DILocation(line: 4660, column: 23, scope: !5917)
!5920 = !DILocation(line: 4660, column: 32, scope: !5917)
!5921 = !DILocation(line: 4661, column: 24, scope: !5917)
!5922 = !DILocation(line: 4662, column: 41, scope: !5917)
!5923 = !DILocation(line: 4662, column: 31, scope: !5917)
!5924 = !DILocation(line: 4661, column: 49, scope: !5917)
!5925 = !DILocation(line: 4661, column: 14, scope: !5917)
!5926 = !DILocation(line: 4663, column: 5, scope: !5917)
!5927 = !DILocation(line: 4664, column: 1, scope: !5889)
!5928 = distinct !DISubprogram(name: "DrawSetClipUnits", scope: !1, file: !1, line: 4692, type: !5929, scopeLine: 4694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{null, !1172, !5931}
!5931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1016)
!5932 = !DILocalVariable(name: "wand", arg: 1, scope: !5928, file: !1, line: 4692, type: !1172)
!5933 = !DILocation(line: 4692, column: 47, scope: !5928)
!5934 = !DILocalVariable(name: "clip_units", arg: 2, scope: !5928, file: !1, line: 4693, type: !5931)
!5935 = !DILocation(line: 4693, column: 23, scope: !5928)
!5936 = !DILocation(line: 4697, column: 7, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5928, file: !1, line: 4697, column: 7)
!5938 = !DILocation(line: 4697, column: 13, scope: !5937)
!5939 = !DILocation(line: 4697, column: 19, scope: !5937)
!5940 = !DILocation(line: 4697, column: 7, scope: !5928)
!5941 = !DILocation(line: 4698, column: 60, scope: !5937)
!5942 = !DILocation(line: 4698, column: 66, scope: !5937)
!5943 = !DILocation(line: 4698, column: 12, scope: !5937)
!5944 = !DILocation(line: 4698, column: 5, scope: !5937)
!5945 = !DILocation(line: 4699, column: 8, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5928, file: !1, line: 4699, column: 7)
!5947 = !DILocation(line: 4699, column: 14, scope: !5946)
!5948 = !DILocation(line: 4699, column: 25, scope: !5946)
!5949 = !DILocation(line: 4699, column: 41, scope: !5946)
!5950 = !DILocation(line: 4700, column: 8, scope: !5946)
!5951 = !DILocation(line: 4700, column: 24, scope: !5946)
!5952 = !DILocation(line: 4700, column: 38, scope: !5946)
!5953 = !DILocation(line: 4700, column: 35, scope: !5946)
!5954 = !DILocation(line: 4699, column: 7, scope: !5928)
!5955 = !DILocation(line: 4702, column: 34, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5946, file: !1, line: 4701, column: 5)
!5957 = !DILocation(line: 4702, column: 7, scope: !5956)
!5958 = !DILocation(line: 4702, column: 23, scope: !5956)
!5959 = !DILocation(line: 4702, column: 33, scope: !5956)
!5960 = !DILocation(line: 4703, column: 11, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5956, file: !1, line: 4703, column: 11)
!5962 = !DILocation(line: 4703, column: 22, scope: !5961)
!5963 = !DILocation(line: 4703, column: 11, scope: !5956)
!5964 = !DILocalVariable(name: "affine", scope: !5965, file: !1, line: 4706, type: !711)
!5965 = distinct !DILexicalBlock(scope: !5961, file: !1, line: 4704, column: 9)
!5966 = !DILocation(line: 4706, column: 13, scope: !5965)
!5967 = !DILocation(line: 4708, column: 11, scope: !5965)
!5968 = !DILocation(line: 4709, column: 21, scope: !5965)
!5969 = !DILocation(line: 4709, column: 37, scope: !5965)
!5970 = !DILocation(line: 4709, column: 44, scope: !5965)
!5971 = !DILocation(line: 4709, column: 18, scope: !5965)
!5972 = !DILocation(line: 4709, column: 20, scope: !5965)
!5973 = !DILocation(line: 4710, column: 21, scope: !5965)
!5974 = !DILocation(line: 4710, column: 37, scope: !5965)
!5975 = !DILocation(line: 4710, column: 44, scope: !5965)
!5976 = !DILocation(line: 4710, column: 18, scope: !5965)
!5977 = !DILocation(line: 4710, column: 20, scope: !5965)
!5978 = !DILocation(line: 4711, column: 21, scope: !5965)
!5979 = !DILocation(line: 4711, column: 37, scope: !5965)
!5980 = !DILocation(line: 4711, column: 44, scope: !5965)
!5981 = !DILocation(line: 4711, column: 18, scope: !5965)
!5982 = !DILocation(line: 4711, column: 20, scope: !5965)
!5983 = !DILocation(line: 4712, column: 21, scope: !5965)
!5984 = !DILocation(line: 4712, column: 37, scope: !5965)
!5985 = !DILocation(line: 4712, column: 44, scope: !5965)
!5986 = !DILocation(line: 4712, column: 18, scope: !5965)
!5987 = !DILocation(line: 4712, column: 20, scope: !5965)
!5988 = !DILocation(line: 4713, column: 24, scope: !5965)
!5989 = !DILocation(line: 4713, column: 11, scope: !5965)
!5990 = !DILocation(line: 4714, column: 9, scope: !5965)
!5991 = !DILocation(line: 4715, column: 24, scope: !5956)
!5992 = !DILocation(line: 4716, column: 41, scope: !5956)
!5993 = !DILocation(line: 4716, column: 31, scope: !5956)
!5994 = !DILocation(line: 4715, column: 50, scope: !5956)
!5995 = !DILocation(line: 4715, column: 14, scope: !5956)
!5996 = !DILocation(line: 4717, column: 5, scope: !5956)
!5997 = !DILocation(line: 4718, column: 1, scope: !5928)
!5998 = distinct !DISubprogram(name: "DrawSetFillColor", scope: !1, file: !1, line: 4744, type: !5706, scopeLine: 4745, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!5999 = !DILocalVariable(name: "wand", arg: 1, scope: !5998, file: !1, line: 4744, type: !1172)
!6000 = !DILocation(line: 4744, column: 47, scope: !5998)
!6001 = !DILocalVariable(name: "fill_wand", arg: 2, scope: !5998, file: !1, line: 4744, type: !5708)
!6002 = !DILocation(line: 4744, column: 69, scope: !5998)
!6003 = !DILocalVariable(name: "current_fill", scope: !5998, file: !1, line: 4747, type: !806)
!6004 = !DILocation(line: 4747, column: 6, scope: !5998)
!6005 = !DILocalVariable(name: "fill_color", scope: !5998, file: !1, line: 4748, type: !724)
!6006 = !DILocation(line: 4748, column: 5, scope: !5998)
!6007 = !DILocalVariable(name: "new_fill", scope: !5998, file: !1, line: 4749, type: !724)
!6008 = !DILocation(line: 4749, column: 5, scope: !5998)
!6009 = !DILocation(line: 4753, column: 7, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5998, file: !1, line: 4753, column: 7)
!6011 = !DILocation(line: 4753, column: 13, scope: !6010)
!6012 = !DILocation(line: 4753, column: 19, scope: !6010)
!6013 = !DILocation(line: 4753, column: 7, scope: !5998)
!6014 = !DILocation(line: 4754, column: 60, scope: !6010)
!6015 = !DILocation(line: 4754, column: 66, scope: !6010)
!6016 = !DILocation(line: 4754, column: 12, scope: !6010)
!6017 = !DILocation(line: 4754, column: 5, scope: !6010)
!6018 = !DILocation(line: 4756, column: 24, scope: !5998)
!6019 = !DILocation(line: 4756, column: 3, scope: !5998)
!6020 = !DILocation(line: 4757, column: 12, scope: !5998)
!6021 = !DILocation(line: 4758, column: 18, scope: !5998)
!6022 = !DILocation(line: 4758, column: 34, scope: !5998)
!6023 = !DILocation(line: 4758, column: 15, scope: !5998)
!6024 = !DILocation(line: 4759, column: 8, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !5998, file: !1, line: 4759, column: 7)
!6026 = !DILocation(line: 4759, column: 14, scope: !6025)
!6027 = !DILocation(line: 4759, column: 25, scope: !6025)
!6028 = !DILocation(line: 4759, column: 41, scope: !6025)
!6029 = !DILocation(line: 4760, column: 21, scope: !6025)
!6030 = !DILocation(line: 4760, column: 8, scope: !6025)
!6031 = !DILocation(line: 4760, column: 45, scope: !6025)
!6032 = !DILocation(line: 4759, column: 7, scope: !5998)
!6033 = !DILocation(line: 4762, column: 7, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6025, file: !1, line: 4761, column: 5)
!6035 = !DILocation(line: 4762, column: 23, scope: !6034)
!6036 = !DILocation(line: 4762, column: 28, scope: !6034)
!6037 = !DILocation(line: 4763, column: 24, scope: !6034)
!6038 = !DILocation(line: 4763, column: 14, scope: !6034)
!6039 = !DILocation(line: 4764, column: 22, scope: !6034)
!6040 = !DILocation(line: 4764, column: 7, scope: !6034)
!6041 = !DILocation(line: 4765, column: 24, scope: !6034)
!6042 = !DILocation(line: 4765, column: 14, scope: !6034)
!6043 = !DILocation(line: 4766, column: 5, scope: !6034)
!6044 = !DILocation(line: 4767, column: 1, scope: !5998)
!6045 = distinct !DISubprogram(name: "DrawSetFillOpacity", scope: !1, file: !1, line: 4794, type: !4913, scopeLine: 4795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6046 = !DILocalVariable(name: "wand", arg: 1, scope: !6045, file: !1, line: 4794, type: !1172)
!6047 = !DILocation(line: 4794, column: 49, scope: !6045)
!6048 = !DILocalVariable(name: "fill_opacity", arg: 2, scope: !6045, file: !1, line: 4794, type: !1203)
!6049 = !DILocation(line: 4794, column: 67, scope: !6045)
!6050 = !DILocalVariable(name: "opacity", scope: !6045, file: !1, line: 4797, type: !728)
!6051 = !DILocation(line: 4797, column: 5, scope: !6045)
!6052 = !DILocation(line: 4801, column: 7, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6045, file: !1, line: 4801, column: 7)
!6054 = !DILocation(line: 4801, column: 13, scope: !6053)
!6055 = !DILocation(line: 4801, column: 19, scope: !6053)
!6056 = !DILocation(line: 4801, column: 7, scope: !6045)
!6057 = !DILocation(line: 4802, column: 60, scope: !6053)
!6058 = !DILocation(line: 4802, column: 66, scope: !6053)
!6059 = !DILocation(line: 4802, column: 12, scope: !6053)
!6060 = !DILocation(line: 4802, column: 5, scope: !6053)
!6061 = !DILocation(line: 4803, column: 53, scope: !6045)
!6062 = !DILocation(line: 4803, column: 52, scope: !6045)
!6063 = !DILocation(line: 4803, column: 47, scope: !6045)
!6064 = !DILocation(line: 4803, column: 26, scope: !6045)
!6065 = !DILocation(line: 4803, column: 11, scope: !6045)
!6066 = !DILocation(line: 4803, column: 10, scope: !6045)
!6067 = !DILocation(line: 4804, column: 8, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6045, file: !1, line: 4804, column: 7)
!6069 = !DILocation(line: 4804, column: 14, scope: !6068)
!6070 = !DILocation(line: 4804, column: 25, scope: !6068)
!6071 = !DILocation(line: 4804, column: 41, scope: !6068)
!6072 = !DILocation(line: 4805, column: 8, scope: !6068)
!6073 = !DILocation(line: 4805, column: 24, scope: !6068)
!6074 = !DILocation(line: 4805, column: 29, scope: !6068)
!6075 = !DILocation(line: 4805, column: 40, scope: !6068)
!6076 = !DILocation(line: 4805, column: 37, scope: !6068)
!6077 = !DILocation(line: 4804, column: 7, scope: !6045)
!6078 = !DILocation(line: 4807, column: 36, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6068, file: !1, line: 4806, column: 5)
!6080 = !DILocation(line: 4807, column: 7, scope: !6079)
!6081 = !DILocation(line: 4807, column: 23, scope: !6079)
!6082 = !DILocation(line: 4807, column: 28, scope: !6079)
!6083 = !DILocation(line: 4807, column: 35, scope: !6079)
!6084 = !DILocation(line: 4808, column: 24, scope: !6079)
!6085 = !DILocation(line: 4808, column: 52, scope: !6079)
!6086 = !DILocation(line: 4808, column: 14, scope: !6079)
!6087 = !DILocation(line: 4809, column: 5, scope: !6079)
!6088 = !DILocation(line: 4810, column: 1, scope: !6045)
!6089 = distinct !DISubprogram(name: "ClampToQuantum", scope: !147, file: !147, line: 87, type: !6090, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6090 = !DISubroutineType(types: !6091)
!6091 = !{!728, !6092}
!6092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !768)
!6093 = !DILocalVariable(name: "value", arg: 1, scope: !6089, file: !147, line: 87, type: !6092)
!6094 = !DILocation(line: 87, column: 59, scope: !6089)
!6095 = !DILocation(line: 92, column: 7, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6089, file: !147, line: 92, column: 7)
!6097 = !DILocation(line: 92, column: 13, scope: !6096)
!6098 = !DILocation(line: 92, column: 7, scope: !6089)
!6099 = !DILocation(line: 93, column: 5, scope: !6096)
!6100 = !DILocation(line: 94, column: 7, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6089, file: !147, line: 94, column: 7)
!6102 = !DILocation(line: 94, column: 13, scope: !6101)
!6103 = !DILocation(line: 94, column: 7, scope: !6089)
!6104 = !DILocation(line: 95, column: 5, scope: !6101)
!6105 = !DILocation(line: 96, column: 21, scope: !6089)
!6106 = !DILocation(line: 96, column: 26, scope: !6089)
!6107 = !DILocation(line: 96, column: 10, scope: !6089)
!6108 = !DILocation(line: 96, column: 3, scope: !6089)
!6109 = !DILocation(line: 98, column: 1, scope: !6089)
!6110 = distinct !DISubprogram(name: "DrawSetFontResolution", scope: !1, file: !1, line: 4839, type: !6111, scopeLine: 4841, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6111 = !DISubroutineType(types: !6112)
!6112 = !{!764, !1172, !1203, !1203}
!6113 = !DILocalVariable(name: "wand", arg: 1, scope: !6110, file: !1, line: 4839, type: !1172)
!6114 = !DILocation(line: 4839, column: 65, scope: !6110)
!6115 = !DILocalVariable(name: "x_resolution", arg: 2, scope: !6110, file: !1, line: 4840, type: !1203)
!6116 = !DILocation(line: 4840, column: 16, scope: !6110)
!6117 = !DILocalVariable(name: "y_resolution", arg: 3, scope: !6110, file: !1, line: 4840, type: !1203)
!6118 = !DILocation(line: 4840, column: 42, scope: !6110)
!6119 = !DILocalVariable(name: "density", scope: !6110, file: !1, line: 4843, type: !911)
!6120 = !DILocation(line: 4843, column: 5, scope: !6110)
!6121 = !DILocation(line: 4847, column: 7, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6110, file: !1, line: 4847, column: 7)
!6123 = !DILocation(line: 4847, column: 13, scope: !6122)
!6124 = !DILocation(line: 4847, column: 19, scope: !6122)
!6125 = !DILocation(line: 4847, column: 7, scope: !6110)
!6126 = !DILocation(line: 4848, column: 60, scope: !6122)
!6127 = !DILocation(line: 4848, column: 66, scope: !6122)
!6128 = !DILocation(line: 4848, column: 12, scope: !6122)
!6129 = !DILocation(line: 4848, column: 5, scope: !6122)
!6130 = !DILocation(line: 4849, column: 29, scope: !6110)
!6131 = !DILocation(line: 4849, column: 65, scope: !6110)
!6132 = !DILocation(line: 4850, column: 5, scope: !6110)
!6133 = !DILocation(line: 4849, column: 10, scope: !6110)
!6134 = !DILocation(line: 4851, column: 23, scope: !6110)
!6135 = !DILocation(line: 4851, column: 39, scope: !6110)
!6136 = !DILocation(line: 4851, column: 47, scope: !6110)
!6137 = !DILocation(line: 4851, column: 10, scope: !6110)
!6138 = !DILocation(line: 4852, column: 3, scope: !6110)
!6139 = distinct !DISubprogram(name: "DrawSetOpacity", scope: !1, file: !1, line: 4880, type: !4913, scopeLine: 4881, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6140 = !DILocalVariable(name: "wand", arg: 1, scope: !6139, file: !1, line: 4880, type: !1172)
!6141 = !DILocation(line: 4880, column: 45, scope: !6139)
!6142 = !DILocalVariable(name: "opacity", arg: 2, scope: !6139, file: !1, line: 4880, type: !1203)
!6143 = !DILocation(line: 4880, column: 63, scope: !6139)
!6144 = !DILocalVariable(name: "quantum_opacity", scope: !6139, file: !1, line: 4883, type: !728)
!6145 = !DILocation(line: 4883, column: 5, scope: !6139)
!6146 = !DILocation(line: 4887, column: 7, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6139, file: !1, line: 4887, column: 7)
!6148 = !DILocation(line: 4887, column: 13, scope: !6147)
!6149 = !DILocation(line: 4887, column: 19, scope: !6147)
!6150 = !DILocation(line: 4887, column: 7, scope: !6139)
!6151 = !DILocation(line: 4888, column: 60, scope: !6147)
!6152 = !DILocation(line: 4888, column: 66, scope: !6147)
!6153 = !DILocation(line: 4888, column: 12, scope: !6147)
!6154 = !DILocation(line: 4888, column: 5, scope: !6147)
!6155 = !DILocation(line: 4889, column: 61, scope: !6139)
!6156 = !DILocation(line: 4889, column: 60, scope: !6139)
!6157 = !DILocation(line: 4889, column: 55, scope: !6139)
!6158 = !DILocation(line: 4889, column: 34, scope: !6139)
!6159 = !DILocation(line: 4889, column: 19, scope: !6139)
!6160 = !DILocation(line: 4889, column: 18, scope: !6139)
!6161 = !DILocation(line: 4890, column: 8, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6139, file: !1, line: 4890, column: 7)
!6163 = !DILocation(line: 4890, column: 14, scope: !6162)
!6164 = !DILocation(line: 4890, column: 25, scope: !6162)
!6165 = !DILocation(line: 4890, column: 41, scope: !6162)
!6166 = !DILocation(line: 4891, column: 8, scope: !6162)
!6167 = !DILocation(line: 4891, column: 24, scope: !6162)
!6168 = !DILocation(line: 4891, column: 35, scope: !6162)
!6169 = !DILocation(line: 4891, column: 32, scope: !6162)
!6170 = !DILocation(line: 4890, column: 7, scope: !6139)
!6171 = !DILocation(line: 4893, column: 41, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6162, file: !1, line: 4892, column: 5)
!6173 = !DILocation(line: 4893, column: 31, scope: !6172)
!6174 = !DILocation(line: 4893, column: 7, scope: !6172)
!6175 = !DILocation(line: 4893, column: 23, scope: !6172)
!6176 = !DILocation(line: 4893, column: 30, scope: !6172)
!6177 = !DILocation(line: 4894, column: 24, scope: !6172)
!6178 = !DILocation(line: 4894, column: 47, scope: !6172)
!6179 = !DILocation(line: 4894, column: 14, scope: !6172)
!6180 = !DILocation(line: 4895, column: 5, scope: !6172)
!6181 = !DILocation(line: 4896, column: 1, scope: !6139)
!6182 = distinct !DISubprogram(name: "DrawSetFillPatternURL", scope: !1, file: !1, line: 4926, type: !5850, scopeLine: 4928, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6183 = !DILocalVariable(name: "wand", arg: 1, scope: !6182, file: !1, line: 4926, type: !1172)
!6184 = !DILocation(line: 4926, column: 65, scope: !6182)
!6185 = !DILocalVariable(name: "fill_url", arg: 2, scope: !6182, file: !1, line: 4927, type: !891)
!6186 = !DILocation(line: 4927, column: 15, scope: !6182)
!6187 = !DILocalVariable(name: "pattern", scope: !6182, file: !1, line: 4930, type: !911)
!6188 = !DILocation(line: 4930, column: 5, scope: !6182)
!6189 = !DILocalVariable(name: "pattern_spec", scope: !6182, file: !1, line: 4931, type: !911)
!6190 = !DILocation(line: 4931, column: 5, scope: !6182)
!6191 = !DILocation(line: 4935, column: 7, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6182, file: !1, line: 4935, column: 7)
!6193 = !DILocation(line: 4935, column: 13, scope: !6192)
!6194 = !DILocation(line: 4935, column: 19, scope: !6192)
!6195 = !DILocation(line: 4935, column: 7, scope: !6182)
!6196 = !DILocation(line: 4936, column: 60, scope: !6192)
!6197 = !DILocation(line: 4936, column: 12, scope: !6192)
!6198 = !DILocation(line: 4936, column: 5, scope: !6192)
!6199 = !DILocation(line: 4937, column: 7, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6182, file: !1, line: 4937, column: 7)
!6201 = !DILocation(line: 4937, column: 13, scope: !6200)
!6202 = !DILocation(line: 4937, column: 19, scope: !6200)
!6203 = !DILocation(line: 4937, column: 7, scope: !6182)
!6204 = !DILocation(line: 4938, column: 5, scope: !6200)
!6205 = !DILocation(line: 4940, column: 8, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6182, file: !1, line: 4940, column: 7)
!6207 = !DILocation(line: 4940, column: 7, scope: !6206)
!6208 = !DILocation(line: 4940, column: 17, scope: !6206)
!6209 = !DILocation(line: 4940, column: 7, scope: !6182)
!6210 = !DILocation(line: 4942, column: 7, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6206, file: !1, line: 4941, column: 5)
!6212 = !DILocation(line: 4943, column: 7, scope: !6211)
!6213 = !DILocation(line: 4945, column: 29, scope: !6182)
!6214 = !DILocation(line: 4945, column: 56, scope: !6182)
!6215 = !DILocation(line: 4945, column: 64, scope: !6182)
!6216 = !DILocation(line: 4945, column: 10, scope: !6182)
!6217 = !DILocation(line: 4946, column: 24, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6182, file: !1, line: 4946, column: 7)
!6219 = !DILocation(line: 4946, column: 30, scope: !6218)
!6220 = !DILocation(line: 4946, column: 36, scope: !6218)
!6221 = !DILocation(line: 4946, column: 7, scope: !6218)
!6222 = !DILocation(line: 4946, column: 45, scope: !6218)
!6223 = !DILocation(line: 4946, column: 7, scope: !6182)
!6224 = !DILocation(line: 4948, column: 7, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6218, file: !1, line: 4947, column: 5)
!6226 = !DILocation(line: 4949, column: 7, scope: !6225)
!6227 = !DILocation(line: 4951, column: 29, scope: !6182)
!6228 = !DILocation(line: 4951, column: 66, scope: !6182)
!6229 = !DILocation(line: 4951, column: 10, scope: !6182)
!6230 = !DILocation(line: 4956, column: 7, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6182, file: !1, line: 4956, column: 7)
!6232 = !DILocation(line: 4956, column: 23, scope: !6231)
!6233 = !DILocation(line: 4956, column: 28, scope: !6231)
!6234 = !DILocation(line: 4956, column: 36, scope: !6231)
!6235 = !DILocation(line: 4956, column: 7, scope: !6182)
!6236 = !DILocation(line: 4957, column: 34, scope: !6231)
!6237 = !DILocation(line: 4957, column: 50, scope: !6231)
!6238 = !DILocation(line: 4957, column: 5, scope: !6231)
!6239 = !DILocation(line: 4957, column: 21, scope: !6231)
!6240 = !DILocation(line: 4957, column: 26, scope: !6231)
!6241 = !DILocation(line: 4957, column: 33, scope: !6231)
!6242 = !DILocation(line: 4958, column: 20, scope: !6182)
!6243 = !DILocation(line: 4958, column: 37, scope: !6182)
!6244 = !DILocation(line: 4958, column: 10, scope: !6182)
!6245 = !DILocation(line: 4959, column: 3, scope: !6182)
!6246 = !DILocation(line: 4960, column: 1, scope: !6182)
!6247 = distinct !DISubprogram(name: "DrawSetFillRule", scope: !1, file: !1, line: 4986, type: !5890, scopeLine: 4987, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6248 = !DILocalVariable(name: "wand", arg: 1, scope: !6247, file: !1, line: 4986, type: !1172)
!6249 = !DILocation(line: 4986, column: 46, scope: !6247)
!6250 = !DILocalVariable(name: "fill_rule", arg: 2, scope: !6247, file: !1, line: 4986, type: !5892)
!6251 = !DILocation(line: 4986, column: 66, scope: !6247)
!6252 = !DILocation(line: 4990, column: 7, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6247, file: !1, line: 4990, column: 7)
!6254 = !DILocation(line: 4990, column: 13, scope: !6253)
!6255 = !DILocation(line: 4990, column: 19, scope: !6253)
!6256 = !DILocation(line: 4990, column: 7, scope: !6247)
!6257 = !DILocation(line: 4991, column: 60, scope: !6253)
!6258 = !DILocation(line: 4991, column: 66, scope: !6253)
!6259 = !DILocation(line: 4991, column: 12, scope: !6253)
!6260 = !DILocation(line: 4991, column: 5, scope: !6253)
!6261 = !DILocation(line: 4992, column: 8, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6247, file: !1, line: 4992, column: 7)
!6263 = !DILocation(line: 4992, column: 14, scope: !6262)
!6264 = !DILocation(line: 4992, column: 25, scope: !6262)
!6265 = !DILocation(line: 4992, column: 41, scope: !6262)
!6266 = !DILocation(line: 4993, column: 8, scope: !6262)
!6267 = !DILocation(line: 4993, column: 24, scope: !6262)
!6268 = !DILocation(line: 4993, column: 37, scope: !6262)
!6269 = !DILocation(line: 4993, column: 34, scope: !6262)
!6270 = !DILocation(line: 4992, column: 7, scope: !6247)
!6271 = !DILocation(line: 4995, column: 33, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6262, file: !1, line: 4994, column: 5)
!6273 = !DILocation(line: 4995, column: 7, scope: !6272)
!6274 = !DILocation(line: 4995, column: 23, scope: !6272)
!6275 = !DILocation(line: 4995, column: 32, scope: !6272)
!6276 = !DILocation(line: 4996, column: 24, scope: !6272)
!6277 = !DILocation(line: 4997, column: 41, scope: !6272)
!6278 = !DILocation(line: 4997, column: 31, scope: !6272)
!6279 = !DILocation(line: 4996, column: 49, scope: !6272)
!6280 = !DILocation(line: 4996, column: 14, scope: !6272)
!6281 = !DILocation(line: 4998, column: 5, scope: !6272)
!6282 = !DILocation(line: 4999, column: 1, scope: !6247)
!6283 = distinct !DISubprogram(name: "DrawSetFont", scope: !1, file: !1, line: 5026, type: !5850, scopeLine: 5028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6284 = !DILocalVariable(name: "wand", arg: 1, scope: !6283, file: !1, line: 5026, type: !1172)
!6285 = !DILocation(line: 5026, column: 55, scope: !6283)
!6286 = !DILocalVariable(name: "font_name", arg: 2, scope: !6283, file: !1, line: 5027, type: !891)
!6287 = !DILocation(line: 5027, column: 15, scope: !6283)
!6288 = !DILocation(line: 5031, column: 7, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6283, file: !1, line: 5031, column: 7)
!6290 = !DILocation(line: 5031, column: 13, scope: !6289)
!6291 = !DILocation(line: 5031, column: 19, scope: !6289)
!6292 = !DILocation(line: 5031, column: 7, scope: !6283)
!6293 = !DILocation(line: 5032, column: 60, scope: !6289)
!6294 = !DILocation(line: 5032, column: 66, scope: !6289)
!6295 = !DILocation(line: 5032, column: 12, scope: !6289)
!6296 = !DILocation(line: 5032, column: 5, scope: !6289)
!6297 = !DILocation(line: 5034, column: 8, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6283, file: !1, line: 5034, column: 7)
!6299 = !DILocation(line: 5034, column: 14, scope: !6298)
!6300 = !DILocation(line: 5034, column: 25, scope: !6298)
!6301 = !DILocation(line: 5034, column: 41, scope: !6298)
!6302 = !DILocation(line: 5035, column: 8, scope: !6298)
!6303 = !DILocation(line: 5035, column: 24, scope: !6298)
!6304 = !DILocation(line: 5035, column: 29, scope: !6298)
!6305 = !DILocation(line: 5035, column: 47, scope: !6298)
!6306 = !DILocation(line: 5036, column: 22, scope: !6298)
!6307 = !DILocation(line: 5036, column: 38, scope: !6298)
!6308 = !DILocation(line: 5036, column: 43, scope: !6298)
!6309 = !DILocation(line: 5036, column: 8, scope: !6298)
!6310 = !DILocation(line: 5036, column: 54, scope: !6298)
!6311 = !DILocation(line: 5034, column: 7, scope: !6283)
!6312 = !DILocation(line: 5038, column: 27, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6298, file: !1, line: 5037, column: 5)
!6314 = !DILocation(line: 5038, column: 43, scope: !6313)
!6315 = !DILocation(line: 5038, column: 48, scope: !6313)
!6316 = !DILocation(line: 5038, column: 14, scope: !6313)
!6317 = !DILocation(line: 5039, column: 24, scope: !6313)
!6318 = !DILocation(line: 5039, column: 43, scope: !6313)
!6319 = !DILocation(line: 5039, column: 14, scope: !6313)
!6320 = !DILocation(line: 5040, column: 5, scope: !6313)
!6321 = !DILocation(line: 5041, column: 3, scope: !6283)
!6322 = distinct !DISubprogram(name: "DrawSetFontFamily", scope: !1, file: !1, line: 5069, type: !5850, scopeLine: 5071, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6323 = !DILocalVariable(name: "wand", arg: 1, scope: !6322, file: !1, line: 5069, type: !1172)
!6324 = !DILocation(line: 5069, column: 61, scope: !6322)
!6325 = !DILocalVariable(name: "font_family", arg: 2, scope: !6322, file: !1, line: 5070, type: !891)
!6326 = !DILocation(line: 5070, column: 15, scope: !6322)
!6327 = !DILocation(line: 5074, column: 7, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6322, file: !1, line: 5074, column: 7)
!6329 = !DILocation(line: 5074, column: 13, scope: !6328)
!6330 = !DILocation(line: 5074, column: 19, scope: !6328)
!6331 = !DILocation(line: 5074, column: 7, scope: !6322)
!6332 = !DILocation(line: 5075, column: 60, scope: !6328)
!6333 = !DILocation(line: 5075, column: 66, scope: !6328)
!6334 = !DILocation(line: 5075, column: 12, scope: !6328)
!6335 = !DILocation(line: 5075, column: 5, scope: !6328)
!6336 = !DILocation(line: 5077, column: 8, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6322, file: !1, line: 5077, column: 7)
!6338 = !DILocation(line: 5077, column: 14, scope: !6337)
!6339 = !DILocation(line: 5077, column: 25, scope: !6337)
!6340 = !DILocation(line: 5077, column: 41, scope: !6337)
!6341 = !DILocation(line: 5078, column: 8, scope: !6337)
!6342 = !DILocation(line: 5078, column: 24, scope: !6337)
!6343 = !DILocation(line: 5078, column: 31, scope: !6337)
!6344 = !DILocation(line: 5078, column: 55, scope: !6337)
!6345 = !DILocation(line: 5079, column: 22, scope: !6337)
!6346 = !DILocation(line: 5079, column: 38, scope: !6337)
!6347 = !DILocation(line: 5079, column: 45, scope: !6337)
!6348 = !DILocation(line: 5079, column: 8, scope: !6337)
!6349 = !DILocation(line: 5079, column: 58, scope: !6337)
!6350 = !DILocation(line: 5077, column: 7, scope: !6322)
!6351 = !DILocation(line: 5081, column: 27, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6337, file: !1, line: 5080, column: 5)
!6353 = !DILocation(line: 5081, column: 43, scope: !6352)
!6354 = !DILocation(line: 5081, column: 50, scope: !6352)
!6355 = !DILocation(line: 5081, column: 14, scope: !6352)
!6356 = !DILocation(line: 5082, column: 24, scope: !6352)
!6357 = !DILocation(line: 5082, column: 50, scope: !6352)
!6358 = !DILocation(line: 5082, column: 14, scope: !6352)
!6359 = !DILocation(line: 5083, column: 5, scope: !6352)
!6360 = !DILocation(line: 5084, column: 3, scope: !6322)
!6361 = distinct !DISubprogram(name: "DrawSetFontSize", scope: !1, file: !1, line: 5111, type: !4913, scopeLine: 5112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6362 = !DILocalVariable(name: "wand", arg: 1, scope: !6361, file: !1, line: 5111, type: !1172)
!6363 = !DILocation(line: 5111, column: 46, scope: !6361)
!6364 = !DILocalVariable(name: "pointsize", arg: 2, scope: !6361, file: !1, line: 5111, type: !1203)
!6365 = !DILocation(line: 5111, column: 64, scope: !6361)
!6366 = !DILocation(line: 5115, column: 7, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6361, file: !1, line: 5115, column: 7)
!6368 = !DILocation(line: 5115, column: 13, scope: !6367)
!6369 = !DILocation(line: 5115, column: 19, scope: !6367)
!6370 = !DILocation(line: 5115, column: 7, scope: !6361)
!6371 = !DILocation(line: 5116, column: 60, scope: !6367)
!6372 = !DILocation(line: 5116, column: 66, scope: !6367)
!6373 = !DILocation(line: 5116, column: 12, scope: !6367)
!6374 = !DILocation(line: 5116, column: 5, scope: !6367)
!6375 = !DILocation(line: 5117, column: 8, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6361, file: !1, line: 5117, column: 7)
!6377 = !DILocation(line: 5117, column: 14, scope: !6376)
!6378 = !DILocation(line: 5117, column: 25, scope: !6376)
!6379 = !DILocation(line: 5117, column: 41, scope: !6376)
!6380 = !DILocation(line: 5118, column: 13, scope: !6376)
!6381 = !DILocation(line: 5118, column: 29, scope: !6376)
!6382 = !DILocation(line: 5118, column: 39, scope: !6376)
!6383 = !DILocation(line: 5118, column: 38, scope: !6376)
!6384 = !DILocation(line: 5118, column: 8, scope: !6376)
!6385 = !DILocation(line: 5118, column: 50, scope: !6376)
!6386 = !DILocation(line: 5117, column: 7, scope: !6361)
!6387 = !DILocation(line: 5120, column: 33, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6376, file: !1, line: 5119, column: 5)
!6389 = !DILocation(line: 5120, column: 7, scope: !6388)
!6390 = !DILocation(line: 5120, column: 23, scope: !6388)
!6391 = !DILocation(line: 5120, column: 32, scope: !6388)
!6392 = !DILocation(line: 5121, column: 24, scope: !6388)
!6393 = !DILocation(line: 5121, column: 49, scope: !6388)
!6394 = !DILocation(line: 5121, column: 14, scope: !6388)
!6395 = !DILocation(line: 5122, column: 5, scope: !6388)
!6396 = !DILocation(line: 5123, column: 1, scope: !6361)
!6397 = distinct !DISubprogram(name: "DrawSetFontStretch", scope: !1, file: !1, line: 5154, type: !6398, scopeLine: 5156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6398 = !DISubroutineType(types: !6399)
!6399 = !{null, !1172, !6400}
!6400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!6401 = !DILocalVariable(name: "wand", arg: 1, scope: !6397, file: !1, line: 5154, type: !1172)
!6402 = !DILocation(line: 5154, column: 49, scope: !6397)
!6403 = !DILocalVariable(name: "font_stretch", arg: 2, scope: !6397, file: !1, line: 5155, type: !6400)
!6404 = !DILocation(line: 5155, column: 21, scope: !6397)
!6405 = !DILocation(line: 5159, column: 7, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6397, file: !1, line: 5159, column: 7)
!6407 = !DILocation(line: 5159, column: 13, scope: !6406)
!6408 = !DILocation(line: 5159, column: 19, scope: !6406)
!6409 = !DILocation(line: 5159, column: 7, scope: !6397)
!6410 = !DILocation(line: 5160, column: 60, scope: !6406)
!6411 = !DILocation(line: 5160, column: 66, scope: !6406)
!6412 = !DILocation(line: 5160, column: 12, scope: !6406)
!6413 = !DILocation(line: 5160, column: 5, scope: !6406)
!6414 = !DILocation(line: 5161, column: 8, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6397, file: !1, line: 5161, column: 7)
!6416 = !DILocation(line: 5161, column: 14, scope: !6415)
!6417 = !DILocation(line: 5161, column: 25, scope: !6415)
!6418 = !DILocation(line: 5161, column: 41, scope: !6415)
!6419 = !DILocation(line: 5162, column: 8, scope: !6415)
!6420 = !DILocation(line: 5162, column: 24, scope: !6415)
!6421 = !DILocation(line: 5162, column: 35, scope: !6415)
!6422 = !DILocation(line: 5162, column: 32, scope: !6415)
!6423 = !DILocation(line: 5161, column: 7, scope: !6397)
!6424 = !DILocation(line: 5164, column: 31, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6415, file: !1, line: 5163, column: 5)
!6426 = !DILocation(line: 5164, column: 7, scope: !6425)
!6427 = !DILocation(line: 5164, column: 23, scope: !6425)
!6428 = !DILocation(line: 5164, column: 30, scope: !6425)
!6429 = !DILocation(line: 5165, column: 24, scope: !6425)
!6430 = !DILocation(line: 5166, column: 40, scope: !6425)
!6431 = !DILocation(line: 5166, column: 30, scope: !6425)
!6432 = !DILocation(line: 5165, column: 52, scope: !6425)
!6433 = !DILocation(line: 5165, column: 14, scope: !6425)
!6434 = !DILocation(line: 5167, column: 5, scope: !6425)
!6435 = !DILocation(line: 5168, column: 1, scope: !6397)
!6436 = distinct !DISubprogram(name: "DrawSetFontStyle", scope: !1, file: !1, line: 5195, type: !6437, scopeLine: 5196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{null, !1172, !6439}
!6439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !999)
!6440 = !DILocalVariable(name: "wand", arg: 1, scope: !6436, file: !1, line: 5195, type: !1172)
!6441 = !DILocation(line: 5195, column: 47, scope: !6436)
!6442 = !DILocalVariable(name: "style", arg: 2, scope: !6436, file: !1, line: 5195, type: !6439)
!6443 = !DILocation(line: 5195, column: 68, scope: !6436)
!6444 = !DILocation(line: 5199, column: 7, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6436, file: !1, line: 5199, column: 7)
!6446 = !DILocation(line: 5199, column: 13, scope: !6445)
!6447 = !DILocation(line: 5199, column: 19, scope: !6445)
!6448 = !DILocation(line: 5199, column: 7, scope: !6436)
!6449 = !DILocation(line: 5200, column: 60, scope: !6445)
!6450 = !DILocation(line: 5200, column: 66, scope: !6445)
!6451 = !DILocation(line: 5200, column: 12, scope: !6445)
!6452 = !DILocation(line: 5200, column: 5, scope: !6445)
!6453 = !DILocation(line: 5201, column: 8, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6436, file: !1, line: 5201, column: 7)
!6455 = !DILocation(line: 5201, column: 14, scope: !6454)
!6456 = !DILocation(line: 5201, column: 25, scope: !6454)
!6457 = !DILocation(line: 5201, column: 41, scope: !6454)
!6458 = !DILocation(line: 5202, column: 8, scope: !6454)
!6459 = !DILocation(line: 5202, column: 24, scope: !6454)
!6460 = !DILocation(line: 5202, column: 33, scope: !6454)
!6461 = !DILocation(line: 5202, column: 30, scope: !6454)
!6462 = !DILocation(line: 5201, column: 7, scope: !6436)
!6463 = !DILocation(line: 5204, column: 29, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6454, file: !1, line: 5203, column: 5)
!6465 = !DILocation(line: 5204, column: 7, scope: !6464)
!6466 = !DILocation(line: 5204, column: 23, scope: !6464)
!6467 = !DILocation(line: 5204, column: 28, scope: !6464)
!6468 = !DILocation(line: 5205, column: 24, scope: !6464)
!6469 = !DILocation(line: 5206, column: 38, scope: !6464)
!6470 = !DILocation(line: 5206, column: 28, scope: !6464)
!6471 = !DILocation(line: 5205, column: 50, scope: !6464)
!6472 = !DILocation(line: 5205, column: 14, scope: !6464)
!6473 = !DILocation(line: 5207, column: 5, scope: !6464)
!6474 = !DILocation(line: 5208, column: 1, scope: !6436)
!6475 = distinct !DISubprogram(name: "DrawSetFontWeight", scope: !1, file: !1, line: 5235, type: !6476, scopeLine: 5237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6476 = !DISubroutineType(types: !6477)
!6477 = !{null, !1172, !1098}
!6478 = !DILocalVariable(name: "wand", arg: 1, scope: !6475, file: !1, line: 5235, type: !1172)
!6479 = !DILocation(line: 5235, column: 48, scope: !6475)
!6480 = !DILocalVariable(name: "font_weight", arg: 2, scope: !6475, file: !1, line: 5236, type: !1098)
!6481 = !DILocation(line: 5236, column: 16, scope: !6475)
!6482 = !DILocation(line: 5240, column: 7, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6475, file: !1, line: 5240, column: 7)
!6484 = !DILocation(line: 5240, column: 13, scope: !6483)
!6485 = !DILocation(line: 5240, column: 19, scope: !6483)
!6486 = !DILocation(line: 5240, column: 7, scope: !6475)
!6487 = !DILocation(line: 5241, column: 60, scope: !6483)
!6488 = !DILocation(line: 5241, column: 66, scope: !6483)
!6489 = !DILocation(line: 5241, column: 12, scope: !6483)
!6490 = !DILocation(line: 5241, column: 5, scope: !6483)
!6491 = !DILocation(line: 5242, column: 8, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6475, file: !1, line: 5242, column: 7)
!6493 = !DILocation(line: 5242, column: 14, scope: !6492)
!6494 = !DILocation(line: 5242, column: 25, scope: !6492)
!6495 = !DILocation(line: 5242, column: 41, scope: !6492)
!6496 = !DILocation(line: 5243, column: 8, scope: !6492)
!6497 = !DILocation(line: 5243, column: 24, scope: !6492)
!6498 = !DILocation(line: 5243, column: 34, scope: !6492)
!6499 = !DILocation(line: 5243, column: 31, scope: !6492)
!6500 = !DILocation(line: 5242, column: 7, scope: !6475)
!6501 = !DILocation(line: 5245, column: 30, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6492, file: !1, line: 5244, column: 5)
!6503 = !DILocation(line: 5245, column: 7, scope: !6502)
!6504 = !DILocation(line: 5245, column: 23, scope: !6502)
!6505 = !DILocation(line: 5245, column: 29, scope: !6502)
!6506 = !DILocation(line: 5246, column: 24, scope: !6502)
!6507 = !DILocation(line: 5246, column: 60, scope: !6502)
!6508 = !DILocation(line: 5246, column: 51, scope: !6502)
!6509 = !DILocation(line: 5246, column: 14, scope: !6502)
!6510 = !DILocation(line: 5247, column: 5, scope: !6502)
!6511 = !DILocation(line: 5248, column: 1, scope: !6475)
!6512 = distinct !DISubprogram(name: "DrawSetGravity", scope: !1, file: !1, line: 5278, type: !6513, scopeLine: 5279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6513 = !DISubroutineType(types: !6514)
!6514 = !{null, !1172, !6515}
!6515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !722)
!6516 = !DILocalVariable(name: "wand", arg: 1, scope: !6512, file: !1, line: 5278, type: !1172)
!6517 = !DILocation(line: 5278, column: 45, scope: !6512)
!6518 = !DILocalVariable(name: "gravity", arg: 2, scope: !6512, file: !1, line: 5278, type: !6515)
!6519 = !DILocation(line: 5278, column: 68, scope: !6512)
!6520 = !DILocation(line: 5282, column: 7, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6512, file: !1, line: 5282, column: 7)
!6522 = !DILocation(line: 5282, column: 13, scope: !6521)
!6523 = !DILocation(line: 5282, column: 19, scope: !6521)
!6524 = !DILocation(line: 5282, column: 7, scope: !6512)
!6525 = !DILocation(line: 5283, column: 60, scope: !6521)
!6526 = !DILocation(line: 5283, column: 66, scope: !6521)
!6527 = !DILocation(line: 5283, column: 12, scope: !6521)
!6528 = !DILocation(line: 5283, column: 5, scope: !6521)
!6529 = !DILocation(line: 5284, column: 8, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6512, file: !1, line: 5284, column: 7)
!6531 = !DILocation(line: 5284, column: 14, scope: !6530)
!6532 = !DILocation(line: 5284, column: 25, scope: !6530)
!6533 = !DILocation(line: 5284, column: 41, scope: !6530)
!6534 = !DILocation(line: 5285, column: 8, scope: !6530)
!6535 = !DILocation(line: 5285, column: 24, scope: !6530)
!6536 = !DILocation(line: 5285, column: 35, scope: !6530)
!6537 = !DILocation(line: 5285, column: 32, scope: !6530)
!6538 = !DILocation(line: 5285, column: 44, scope: !6530)
!6539 = !DILocation(line: 5285, column: 48, scope: !6530)
!6540 = !DILocation(line: 5285, column: 56, scope: !6530)
!6541 = !DILocation(line: 5284, column: 7, scope: !6512)
!6542 = !DILocation(line: 5287, column: 31, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6530, file: !1, line: 5286, column: 5)
!6544 = !DILocation(line: 5287, column: 7, scope: !6543)
!6545 = !DILocation(line: 5287, column: 23, scope: !6543)
!6546 = !DILocation(line: 5287, column: 30, scope: !6543)
!6547 = !DILocation(line: 5288, column: 24, scope: !6543)
!6548 = !DILocation(line: 5289, column: 40, scope: !6543)
!6549 = !DILocation(line: 5289, column: 30, scope: !6543)
!6550 = !DILocation(line: 5288, column: 46, scope: !6543)
!6551 = !DILocation(line: 5288, column: 14, scope: !6543)
!6552 = !DILocation(line: 5290, column: 5, scope: !6543)
!6553 = !DILocation(line: 5291, column: 1, scope: !6512)
!6554 = distinct !DISubprogram(name: "DrawSetStrokeColor", scope: !1, file: !1, line: 5318, type: !5706, scopeLine: 5320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6555 = !DILocalVariable(name: "wand", arg: 1, scope: !6554, file: !1, line: 5318, type: !1172)
!6556 = !DILocation(line: 5318, column: 49, scope: !6554)
!6557 = !DILocalVariable(name: "stroke_wand", arg: 2, scope: !6554, file: !1, line: 5319, type: !5708)
!6558 = !DILocation(line: 5319, column: 20, scope: !6554)
!6559 = !DILocalVariable(name: "current_stroke", scope: !6554, file: !1, line: 5322, type: !806)
!6560 = !DILocation(line: 5322, column: 6, scope: !6554)
!6561 = !DILocalVariable(name: "new_stroke", scope: !6554, file: !1, line: 5323, type: !724)
!6562 = !DILocation(line: 5323, column: 5, scope: !6554)
!6563 = !DILocalVariable(name: "stroke_color", scope: !6554, file: !1, line: 5324, type: !724)
!6564 = !DILocation(line: 5324, column: 5, scope: !6554)
!6565 = !DILocation(line: 5328, column: 7, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6554, file: !1, line: 5328, column: 7)
!6567 = !DILocation(line: 5328, column: 13, scope: !6566)
!6568 = !DILocation(line: 5328, column: 19, scope: !6566)
!6569 = !DILocation(line: 5328, column: 7, scope: !6554)
!6570 = !DILocation(line: 5329, column: 60, scope: !6566)
!6571 = !DILocation(line: 5329, column: 66, scope: !6566)
!6572 = !DILocation(line: 5329, column: 12, scope: !6566)
!6573 = !DILocation(line: 5329, column: 5, scope: !6566)
!6574 = !DILocation(line: 5331, column: 24, scope: !6554)
!6575 = !DILocation(line: 5331, column: 3, scope: !6554)
!6576 = !DILocation(line: 5332, column: 14, scope: !6554)
!6577 = !DILocation(line: 5333, column: 20, scope: !6554)
!6578 = !DILocation(line: 5333, column: 36, scope: !6554)
!6579 = !DILocation(line: 5333, column: 17, scope: !6554)
!6580 = !DILocation(line: 5334, column: 8, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6554, file: !1, line: 5334, column: 7)
!6582 = !DILocation(line: 5334, column: 14, scope: !6581)
!6583 = !DILocation(line: 5334, column: 25, scope: !6581)
!6584 = !DILocation(line: 5334, column: 41, scope: !6581)
!6585 = !DILocation(line: 5335, column: 21, scope: !6581)
!6586 = !DILocation(line: 5335, column: 8, scope: !6581)
!6587 = !DILocation(line: 5335, column: 49, scope: !6581)
!6588 = !DILocation(line: 5334, column: 7, scope: !6554)
!6589 = !DILocation(line: 5337, column: 7, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6581, file: !1, line: 5336, column: 5)
!6591 = !DILocation(line: 5337, column: 23, scope: !6590)
!6592 = !DILocation(line: 5337, column: 30, scope: !6590)
!6593 = !DILocation(line: 5338, column: 24, scope: !6590)
!6594 = !DILocation(line: 5338, column: 14, scope: !6590)
!6595 = !DILocation(line: 5339, column: 22, scope: !6590)
!6596 = !DILocation(line: 5339, column: 7, scope: !6590)
!6597 = !DILocation(line: 5340, column: 24, scope: !6590)
!6598 = !DILocation(line: 5340, column: 14, scope: !6590)
!6599 = !DILocation(line: 5341, column: 5, scope: !6590)
!6600 = !DILocation(line: 5342, column: 1, scope: !6554)
!6601 = distinct !DISubprogram(name: "DrawSetStrokePatternURL", scope: !1, file: !1, line: 5369, type: !5850, scopeLine: 5371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6602 = !DILocalVariable(name: "wand", arg: 1, scope: !6601, file: !1, line: 5369, type: !1172)
!6603 = !DILocation(line: 5369, column: 67, scope: !6601)
!6604 = !DILocalVariable(name: "stroke_url", arg: 2, scope: !6601, file: !1, line: 5370, type: !891)
!6605 = !DILocation(line: 5370, column: 15, scope: !6601)
!6606 = !DILocalVariable(name: "pattern", scope: !6601, file: !1, line: 5373, type: !911)
!6607 = !DILocation(line: 5373, column: 5, scope: !6601)
!6608 = !DILocalVariable(name: "pattern_spec", scope: !6601, file: !1, line: 5374, type: !911)
!6609 = !DILocation(line: 5374, column: 5, scope: !6601)
!6610 = !DILocation(line: 5378, column: 7, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6601, file: !1, line: 5378, column: 7)
!6612 = !DILocation(line: 5378, column: 13, scope: !6611)
!6613 = !DILocation(line: 5378, column: 19, scope: !6611)
!6614 = !DILocation(line: 5378, column: 7, scope: !6601)
!6615 = !DILocation(line: 5379, column: 60, scope: !6611)
!6616 = !DILocation(line: 5379, column: 66, scope: !6611)
!6617 = !DILocation(line: 5379, column: 12, scope: !6611)
!6618 = !DILocation(line: 5379, column: 5, scope: !6611)
!6619 = !DILocation(line: 5380, column: 7, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6601, file: !1, line: 5380, column: 7)
!6621 = !DILocation(line: 5380, column: 13, scope: !6620)
!6622 = !DILocation(line: 5380, column: 19, scope: !6620)
!6623 = !DILocation(line: 5380, column: 7, scope: !6601)
!6624 = !DILocation(line: 5381, column: 5, scope: !6620)
!6625 = !DILocation(line: 5383, column: 7, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6601, file: !1, line: 5383, column: 7)
!6627 = !DILocation(line: 5383, column: 21, scope: !6626)
!6628 = !DILocation(line: 5383, column: 7, scope: !6601)
!6629 = !DILocation(line: 5384, column: 5, scope: !6626)
!6630 = !DILocation(line: 5385, column: 29, scope: !6601)
!6631 = !DILocation(line: 5385, column: 56, scope: !6601)
!6632 = !DILocation(line: 5385, column: 66, scope: !6601)
!6633 = !DILocation(line: 5385, column: 10, scope: !6601)
!6634 = !DILocation(line: 5386, column: 24, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6601, file: !1, line: 5386, column: 7)
!6636 = !DILocation(line: 5386, column: 30, scope: !6635)
!6637 = !DILocation(line: 5386, column: 36, scope: !6635)
!6638 = !DILocation(line: 5386, column: 7, scope: !6635)
!6639 = !DILocation(line: 5386, column: 45, scope: !6635)
!6640 = !DILocation(line: 5386, column: 7, scope: !6601)
!6641 = !DILocation(line: 5388, column: 7, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6635, file: !1, line: 5387, column: 5)
!6643 = !DILocation(line: 5389, column: 7, scope: !6642)
!6644 = !DILocation(line: 5391, column: 29, scope: !6601)
!6645 = !DILocation(line: 5391, column: 66, scope: !6601)
!6646 = !DILocation(line: 5391, column: 10, scope: !6601)
!6647 = !DILocation(line: 5396, column: 7, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6601, file: !1, line: 5396, column: 7)
!6649 = !DILocation(line: 5396, column: 23, scope: !6648)
!6650 = !DILocation(line: 5396, column: 30, scope: !6648)
!6651 = !DILocation(line: 5396, column: 38, scope: !6648)
!6652 = !DILocation(line: 5396, column: 7, scope: !6601)
!6653 = !DILocation(line: 5397, column: 36, scope: !6648)
!6654 = !DILocation(line: 5397, column: 52, scope: !6648)
!6655 = !DILocation(line: 5397, column: 5, scope: !6648)
!6656 = !DILocation(line: 5397, column: 21, scope: !6648)
!6657 = !DILocation(line: 5397, column: 28, scope: !6648)
!6658 = !DILocation(line: 5397, column: 35, scope: !6648)
!6659 = !DILocation(line: 5398, column: 20, scope: !6601)
!6660 = !DILocation(line: 5398, column: 39, scope: !6601)
!6661 = !DILocation(line: 5398, column: 10, scope: !6601)
!6662 = !DILocation(line: 5399, column: 3, scope: !6601)
!6663 = !DILocation(line: 5400, column: 1, scope: !6601)
!6664 = distinct !DISubprogram(name: "DrawSetStrokeAntialias", scope: !1, file: !1, line: 5430, type: !6665, scopeLine: 5432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6665 = !DISubroutineType(types: !6666)
!6666 = !{null, !1172, !4668}
!6667 = !DILocalVariable(name: "wand", arg: 1, scope: !6664, file: !1, line: 5430, type: !1172)
!6668 = !DILocation(line: 5430, column: 53, scope: !6664)
!6669 = !DILocalVariable(name: "stroke_antialias", arg: 2, scope: !6664, file: !1, line: 5431, type: !4668)
!6670 = !DILocation(line: 5431, column: 27, scope: !6664)
!6671 = !DILocation(line: 5435, column: 7, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6664, file: !1, line: 5435, column: 7)
!6673 = !DILocation(line: 5435, column: 13, scope: !6672)
!6674 = !DILocation(line: 5435, column: 19, scope: !6672)
!6675 = !DILocation(line: 5435, column: 7, scope: !6664)
!6676 = !DILocation(line: 5436, column: 60, scope: !6672)
!6677 = !DILocation(line: 5436, column: 66, scope: !6672)
!6678 = !DILocation(line: 5436, column: 12, scope: !6672)
!6679 = !DILocation(line: 5436, column: 5, scope: !6672)
!6680 = !DILocation(line: 5437, column: 8, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6664, file: !1, line: 5437, column: 7)
!6682 = !DILocation(line: 5437, column: 14, scope: !6681)
!6683 = !DILocation(line: 5437, column: 25, scope: !6681)
!6684 = !DILocation(line: 5437, column: 41, scope: !6681)
!6685 = !DILocation(line: 5438, column: 8, scope: !6681)
!6686 = !DILocation(line: 5438, column: 24, scope: !6681)
!6687 = !DILocation(line: 5438, column: 44, scope: !6681)
!6688 = !DILocation(line: 5438, column: 41, scope: !6681)
!6689 = !DILocation(line: 5437, column: 7, scope: !6664)
!6690 = !DILocation(line: 5440, column: 40, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6681, file: !1, line: 5439, column: 5)
!6692 = !DILocation(line: 5440, column: 7, scope: !6691)
!6693 = !DILocation(line: 5440, column: 23, scope: !6691)
!6694 = !DILocation(line: 5440, column: 39, scope: !6691)
!6695 = !DILocation(line: 5441, column: 24, scope: !6691)
!6696 = !DILocation(line: 5441, column: 53, scope: !6691)
!6697 = !DILocation(line: 5441, column: 70, scope: !6691)
!6698 = !DILocation(line: 5441, column: 14, scope: !6691)
!6699 = !DILocation(line: 5443, column: 5, scope: !6691)
!6700 = !DILocation(line: 5444, column: 1, scope: !6664)
!6701 = distinct !DISubprogram(name: "DrawSetStrokeDashArray", scope: !1, file: !1, line: 5479, type: !6702, scopeLine: 5481, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6702 = !DISubroutineType(types: !6703)
!6703 = !{!764, !1172, !1098, !1202}
!6704 = !DILocalVariable(name: "wand", arg: 1, scope: !6701, file: !1, line: 5479, type: !1172)
!6705 = !DILocation(line: 5479, column: 66, scope: !6701)
!6706 = !DILocalVariable(name: "number_elements", arg: 2, scope: !6701, file: !1, line: 5480, type: !1098)
!6707 = !DILocation(line: 5480, column: 16, scope: !6701)
!6708 = !DILocalVariable(name: "dasharray", arg: 3, scope: !6701, file: !1, line: 5480, type: !1202)
!6709 = !DILocation(line: 5480, column: 46, scope: !6701)
!6710 = !DILocalVariable(name: "update", scope: !6701, file: !1, line: 5483, type: !764)
!6711 = !DILocation(line: 5483, column: 5, scope: !6701)
!6712 = !DILocalVariable(name: "p", scope: !6701, file: !1, line: 5486, type: !1202)
!6713 = !DILocation(line: 5486, column: 6, scope: !6701)
!6714 = !DILocalVariable(name: "q", scope: !6701, file: !1, line: 5489, type: !1012)
!6715 = !DILocation(line: 5489, column: 6, scope: !6701)
!6716 = !DILocalVariable(name: "i", scope: !6701, file: !1, line: 5492, type: !704)
!6717 = !DILocation(line: 5492, column: 5, scope: !6701)
!6718 = !DILocalVariable(name: "n_new", scope: !6701, file: !1, line: 5495, type: !700)
!6719 = !DILocation(line: 5495, column: 5, scope: !6701)
!6720 = !DILocalVariable(name: "n_old", scope: !6701, file: !1, line: 5496, type: !700)
!6721 = !DILocation(line: 5496, column: 5, scope: !6701)
!6722 = !DILocation(line: 5500, column: 7, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6701, file: !1, line: 5500, column: 7)
!6724 = !DILocation(line: 5500, column: 13, scope: !6723)
!6725 = !DILocation(line: 5500, column: 19, scope: !6723)
!6726 = !DILocation(line: 5500, column: 7, scope: !6701)
!6727 = !DILocation(line: 5501, column: 60, scope: !6723)
!6728 = !DILocation(line: 5501, column: 66, scope: !6723)
!6729 = !DILocation(line: 5501, column: 12, scope: !6723)
!6730 = !DILocation(line: 5501, column: 5, scope: !6723)
!6731 = !DILocation(line: 5502, column: 9, scope: !6701)
!6732 = !DILocation(line: 5502, column: 8, scope: !6701)
!6733 = !DILocation(line: 5503, column: 8, scope: !6701)
!6734 = !DILocation(line: 5504, column: 9, scope: !6701)
!6735 = !DILocation(line: 5505, column: 5, scope: !6701)
!6736 = !DILocation(line: 5505, column: 21, scope: !6701)
!6737 = !DILocation(line: 5505, column: 4, scope: !6701)
!6738 = !DILocation(line: 5506, column: 7, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6701, file: !1, line: 5506, column: 7)
!6740 = !DILocation(line: 5506, column: 9, scope: !6739)
!6741 = !DILocation(line: 5506, column: 7, scope: !6701)
!6742 = !DILocation(line: 5507, column: 5, scope: !6739)
!6743 = !DILocation(line: 5507, column: 14, scope: !6739)
!6744 = !DILocation(line: 5507, column: 12, scope: !6739)
!6745 = !DILocation(line: 5507, column: 17, scope: !6739)
!6746 = !DILocation(line: 5508, column: 12, scope: !6739)
!6747 = distinct !{!6747, !6742, !6746}
!6748 = !DILocation(line: 5509, column: 8, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6701, file: !1, line: 5509, column: 7)
!6750 = !DILocation(line: 5509, column: 14, scope: !6749)
!6751 = !DILocation(line: 5509, column: 20, scope: !6749)
!6752 = !DILocation(line: 5509, column: 24, scope: !6749)
!6753 = !DILocation(line: 5509, column: 30, scope: !6749)
!6754 = !DILocation(line: 5509, column: 7, scope: !6701)
!6755 = !DILocation(line: 5510, column: 11, scope: !6749)
!6756 = !DILocation(line: 5510, column: 5, scope: !6749)
!6757 = !DILocation(line: 5512, column: 9, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6749, file: !1, line: 5512, column: 9)
!6759 = !DILocation(line: 5512, column: 18, scope: !6758)
!6760 = !DILocation(line: 5512, column: 15, scope: !6758)
!6761 = !DILocation(line: 5512, column: 9, scope: !6749)
!6762 = !DILocation(line: 5513, column: 13, scope: !6758)
!6763 = !DILocation(line: 5513, column: 7, scope: !6758)
!6764 = !DILocation(line: 5515, column: 12, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6758, file: !1, line: 5515, column: 11)
!6766 = !DILocation(line: 5515, column: 28, scope: !6765)
!6767 = !DILocation(line: 5515, column: 41, scope: !6765)
!6768 = !DILocation(line: 5515, column: 61, scope: !6765)
!6769 = !DILocation(line: 5516, column: 12, scope: !6765)
!6770 = !DILocation(line: 5516, column: 22, scope: !6765)
!6771 = !DILocation(line: 5515, column: 11, scope: !6758)
!6772 = !DILocation(line: 5518, column: 13, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6765, file: !1, line: 5517, column: 9)
!6774 = !DILocation(line: 5518, column: 12, scope: !6773)
!6775 = !DILocation(line: 5519, column: 13, scope: !6773)
!6776 = !DILocation(line: 5519, column: 29, scope: !6773)
!6777 = !DILocation(line: 5519, column: 12, scope: !6773)
!6778 = !DILocation(line: 5520, column: 17, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6773, file: !1, line: 5520, column: 11)
!6780 = !DILocation(line: 5520, column: 16, scope: !6779)
!6781 = !DILocation(line: 5520, column: 21, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6779, file: !1, line: 5520, column: 11)
!6783 = !DILocation(line: 5520, column: 35, scope: !6782)
!6784 = !DILocation(line: 5520, column: 23, scope: !6782)
!6785 = !DILocation(line: 5520, column: 11, scope: !6779)
!6786 = !DILocation(line: 5522, column: 24, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6788, file: !1, line: 5522, column: 17)
!6788 = distinct !DILexicalBlock(scope: !6782, file: !1, line: 5521, column: 11)
!6789 = !DILocation(line: 5522, column: 23, scope: !6787)
!6790 = !DILocation(line: 5522, column: 29, scope: !6787)
!6791 = !DILocation(line: 5522, column: 28, scope: !6787)
!6792 = !DILocation(line: 5522, column: 26, scope: !6787)
!6793 = !DILocation(line: 5522, column: 17, scope: !6787)
!6794 = !DILocation(line: 5522, column: 33, scope: !6787)
!6795 = !DILocation(line: 5522, column: 17, scope: !6788)
!6796 = !DILocation(line: 5524, column: 23, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6787, file: !1, line: 5523, column: 15)
!6798 = !DILocation(line: 5525, column: 17, scope: !6797)
!6799 = !DILocation(line: 5527, column: 14, scope: !6788)
!6800 = !DILocation(line: 5528, column: 14, scope: !6788)
!6801 = !DILocation(line: 5529, column: 11, scope: !6788)
!6802 = !DILocation(line: 5520, column: 43, scope: !6782)
!6803 = !DILocation(line: 5520, column: 11, scope: !6782)
!6804 = distinct !{!6804, !6785, !6805}
!6805 = !DILocation(line: 5529, column: 11, scope: !6779)
!6806 = !DILocation(line: 5530, column: 9, scope: !6773)
!6807 = !DILocation(line: 5531, column: 8, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6701, file: !1, line: 5531, column: 7)
!6809 = !DILocation(line: 5531, column: 14, scope: !6808)
!6810 = !DILocation(line: 5531, column: 25, scope: !6808)
!6811 = !DILocation(line: 5531, column: 41, scope: !6808)
!6812 = !DILocation(line: 5531, column: 45, scope: !6808)
!6813 = !DILocation(line: 5531, column: 52, scope: !6808)
!6814 = !DILocation(line: 5531, column: 7, scope: !6701)
!6815 = !DILocation(line: 5533, column: 11, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !1, line: 5533, column: 11)
!6817 = distinct !DILexicalBlock(scope: !6808, file: !1, line: 5532, column: 5)
!6818 = !DILocation(line: 5533, column: 27, scope: !6816)
!6819 = !DILocation(line: 5533, column: 40, scope: !6816)
!6820 = !DILocation(line: 5533, column: 11, scope: !6817)
!6821 = !DILocation(line: 5535, column: 34, scope: !6816)
!6822 = !DILocation(line: 5535, column: 50, scope: !6816)
!6823 = !DILocation(line: 5535, column: 11, scope: !6816)
!6824 = !DILocation(line: 5534, column: 38, scope: !6816)
!6825 = !DILocation(line: 5534, column: 9, scope: !6816)
!6826 = !DILocation(line: 5534, column: 25, scope: !6816)
!6827 = !DILocation(line: 5534, column: 37, scope: !6816)
!6828 = !DILocation(line: 5536, column: 11, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6817, file: !1, line: 5536, column: 11)
!6830 = !DILocation(line: 5536, column: 17, scope: !6829)
!6831 = !DILocation(line: 5536, column: 11, scope: !6817)
!6832 = !DILocation(line: 5539, column: 13, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6829, file: !1, line: 5537, column: 9)
!6834 = !DILocation(line: 5539, column: 18, scope: !6833)
!6835 = !DILocation(line: 5538, column: 51, scope: !6833)
!6836 = !DILocation(line: 5538, column: 40, scope: !6833)
!6837 = !DILocation(line: 5538, column: 11, scope: !6833)
!6838 = !DILocation(line: 5538, column: 27, scope: !6833)
!6839 = !DILocation(line: 5538, column: 39, scope: !6833)
!6840 = !DILocation(line: 5540, column: 15, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6833, file: !1, line: 5540, column: 15)
!6842 = !DILocation(line: 5540, column: 31, scope: !6841)
!6843 = !DILocation(line: 5540, column: 44, scope: !6841)
!6844 = !DILocation(line: 5540, column: 15, scope: !6833)
!6845 = !DILocation(line: 5542, column: 15, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6841, file: !1, line: 5541, column: 13)
!6847 = !DILocation(line: 5544, column: 15, scope: !6846)
!6848 = !DILocation(line: 5546, column: 17, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6833, file: !1, line: 5546, column: 11)
!6850 = !DILocation(line: 5546, column: 16, scope: !6849)
!6851 = !DILocation(line: 5546, column: 21, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6849, file: !1, line: 5546, column: 11)
!6853 = !DILocation(line: 5546, column: 35, scope: !6852)
!6854 = !DILocation(line: 5546, column: 23, scope: !6852)
!6855 = !DILocation(line: 5546, column: 11, scope: !6849)
!6856 = !DILocation(line: 5548, column: 13, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6852, file: !1, line: 5547, column: 11)
!6858 = !DILocation(line: 5548, column: 29, scope: !6857)
!6859 = !DILocation(line: 5548, column: 42, scope: !6857)
!6860 = !DILocation(line: 5548, column: 44, scope: !6857)
!6861 = !DILocation(line: 5549, column: 17, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6857, file: !1, line: 5549, column: 17)
!6863 = !DILocation(line: 5549, column: 27, scope: !6862)
!6864 = !DILocation(line: 5549, column: 17, scope: !6857)
!6865 = !DILocation(line: 5550, column: 47, scope: !6862)
!6866 = !DILocation(line: 5550, column: 57, scope: !6862)
!6867 = !DILocation(line: 5550, column: 15, scope: !6862)
!6868 = !DILocation(line: 5550, column: 31, scope: !6862)
!6869 = !DILocation(line: 5550, column: 44, scope: !6862)
!6870 = !DILocation(line: 5550, column: 46, scope: !6862)
!6871 = !DILocation(line: 5551, column: 11, scope: !6857)
!6872 = !DILocation(line: 5546, column: 43, scope: !6852)
!6873 = !DILocation(line: 5546, column: 11, scope: !6852)
!6874 = distinct !{!6874, !6855, !6875}
!6875 = !DILocation(line: 5551, column: 11, scope: !6849)
!6876 = !DILocation(line: 5552, column: 11, scope: !6833)
!6877 = !DILocation(line: 5552, column: 27, scope: !6833)
!6878 = !DILocation(line: 5552, column: 40, scope: !6833)
!6879 = !DILocation(line: 5552, column: 46, scope: !6833)
!6880 = !DILocation(line: 5553, column: 9, scope: !6833)
!6881 = !DILocation(line: 5554, column: 24, scope: !6817)
!6882 = !DILocation(line: 5554, column: 14, scope: !6817)
!6883 = !DILocation(line: 5555, column: 11, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6817, file: !1, line: 5555, column: 11)
!6885 = !DILocation(line: 5555, column: 17, scope: !6884)
!6886 = !DILocation(line: 5555, column: 11, scope: !6817)
!6887 = !DILocation(line: 5556, column: 26, scope: !6884)
!6888 = !DILocation(line: 5556, column: 16, scope: !6884)
!6889 = !DILocation(line: 5556, column: 9, scope: !6884)
!6890 = !DILocation(line: 5558, column: 13, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6884, file: !1, line: 5558, column: 13)
!6892 = !DILocation(line: 5558, column: 23, scope: !6891)
!6893 = !DILocation(line: 5558, column: 13, scope: !6884)
!6894 = !DILocation(line: 5560, column: 19, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !1, line: 5560, column: 13)
!6896 = distinct !DILexicalBlock(scope: !6891, file: !1, line: 5559, column: 11)
!6897 = !DILocation(line: 5560, column: 18, scope: !6895)
!6898 = !DILocation(line: 5560, column: 23, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6895, file: !1, line: 5560, column: 13)
!6900 = !DILocation(line: 5560, column: 37, scope: !6899)
!6901 = !DILocation(line: 5560, column: 25, scope: !6899)
!6902 = !DILocation(line: 5560, column: 13, scope: !6895)
!6903 = !DILocation(line: 5562, column: 19, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !1, line: 5562, column: 19)
!6905 = distinct !DILexicalBlock(scope: !6899, file: !1, line: 5561, column: 13)
!6906 = !DILocation(line: 5562, column: 21, scope: !6904)
!6907 = !DILocation(line: 5562, column: 19, scope: !6905)
!6908 = !DILocation(line: 5563, column: 34, scope: !6904)
!6909 = !DILocation(line: 5563, column: 24, scope: !6904)
!6910 = !DILocation(line: 5563, column: 17, scope: !6904)
!6911 = !DILocation(line: 5564, column: 32, scope: !6905)
!6912 = !DILocation(line: 5564, column: 45, scope: !6905)
!6913 = !DILocation(line: 5564, column: 55, scope: !6905)
!6914 = !DILocation(line: 5564, column: 22, scope: !6905)
!6915 = !DILocation(line: 5565, column: 13, scope: !6905)
!6916 = !DILocation(line: 5560, column: 45, scope: !6899)
!6917 = !DILocation(line: 5560, column: 13, scope: !6899)
!6918 = distinct !{!6918, !6902, !6919}
!6919 = !DILocation(line: 5565, column: 13, scope: !6895)
!6920 = !DILocation(line: 5566, column: 30, scope: !6896)
!6921 = !DILocation(line: 5566, column: 20, scope: !6896)
!6922 = !DILocation(line: 5567, column: 11, scope: !6896)
!6923 = !DILocation(line: 5568, column: 7, scope: !6817)
!6924 = !DILocation(line: 5569, column: 3, scope: !6701)
!6925 = !DILocation(line: 5570, column: 1, scope: !6701)
!6926 = distinct !DISubprogram(name: "DrawSetStrokeDashOffset", scope: !1, file: !1, line: 5598, type: !4913, scopeLine: 5600, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6927 = !DILocalVariable(name: "wand", arg: 1, scope: !6926, file: !1, line: 5598, type: !1172)
!6928 = !DILocation(line: 5598, column: 54, scope: !6926)
!6929 = !DILocalVariable(name: "dash_offset", arg: 2, scope: !6926, file: !1, line: 5599, type: !1203)
!6930 = !DILocation(line: 5599, column: 16, scope: !6926)
!6931 = !DILocation(line: 5603, column: 7, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6926, file: !1, line: 5603, column: 7)
!6933 = !DILocation(line: 5603, column: 13, scope: !6932)
!6934 = !DILocation(line: 5603, column: 19, scope: !6932)
!6935 = !DILocation(line: 5603, column: 7, scope: !6926)
!6936 = !DILocation(line: 5604, column: 60, scope: !6932)
!6937 = !DILocation(line: 5604, column: 66, scope: !6932)
!6938 = !DILocation(line: 5604, column: 12, scope: !6932)
!6939 = !DILocation(line: 5604, column: 5, scope: !6932)
!6940 = !DILocation(line: 5605, column: 8, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6926, file: !1, line: 5605, column: 7)
!6942 = !DILocation(line: 5605, column: 14, scope: !6941)
!6943 = !DILocation(line: 5605, column: 25, scope: !6941)
!6944 = !DILocation(line: 5605, column: 41, scope: !6941)
!6945 = !DILocation(line: 5606, column: 12, scope: !6941)
!6946 = !DILocation(line: 5606, column: 28, scope: !6941)
!6947 = !DILocation(line: 5606, column: 40, scope: !6941)
!6948 = !DILocation(line: 5606, column: 39, scope: !6941)
!6949 = !DILocation(line: 5606, column: 7, scope: !6941)
!6950 = !DILocation(line: 5606, column: 53, scope: !6941)
!6951 = !DILocation(line: 5605, column: 7, scope: !6926)
!6952 = !DILocation(line: 5608, column: 35, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6941, file: !1, line: 5607, column: 5)
!6954 = !DILocation(line: 5608, column: 7, scope: !6953)
!6955 = !DILocation(line: 5608, column: 23, scope: !6953)
!6956 = !DILocation(line: 5608, column: 34, scope: !6953)
!6957 = !DILocation(line: 5609, column: 24, scope: !6953)
!6958 = !DILocation(line: 5609, column: 57, scope: !6953)
!6959 = !DILocation(line: 5609, column: 14, scope: !6953)
!6960 = !DILocation(line: 5610, column: 5, scope: !6953)
!6961 = !DILocation(line: 5611, column: 1, scope: !6926)
!6962 = distinct !DISubprogram(name: "DrawSetStrokeLineCap", scope: !1, file: !1, line: 5640, type: !6963, scopeLine: 5641, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!6963 = !DISubroutineType(types: !6964)
!6964 = !{null, !1172, !6965}
!6965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!6966 = !DILocalVariable(name: "wand", arg: 1, scope: !6962, file: !1, line: 5640, type: !1172)
!6967 = !DILocation(line: 5640, column: 51, scope: !6962)
!6968 = !DILocalVariable(name: "linecap", arg: 2, scope: !6962, file: !1, line: 5640, type: !6965)
!6969 = !DILocation(line: 5640, column: 70, scope: !6962)
!6970 = !DILocation(line: 5644, column: 7, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6962, file: !1, line: 5644, column: 7)
!6972 = !DILocation(line: 5644, column: 13, scope: !6971)
!6973 = !DILocation(line: 5644, column: 19, scope: !6971)
!6974 = !DILocation(line: 5644, column: 7, scope: !6962)
!6975 = !DILocation(line: 5645, column: 60, scope: !6971)
!6976 = !DILocation(line: 5645, column: 66, scope: !6971)
!6977 = !DILocation(line: 5645, column: 12, scope: !6971)
!6978 = !DILocation(line: 5645, column: 5, scope: !6971)
!6979 = !DILocation(line: 5646, column: 8, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6962, file: !1, line: 5646, column: 7)
!6981 = !DILocation(line: 5646, column: 14, scope: !6980)
!6982 = !DILocation(line: 5646, column: 25, scope: !6980)
!6983 = !DILocation(line: 5646, column: 41, scope: !6980)
!6984 = !DILocation(line: 5647, column: 8, scope: !6980)
!6985 = !DILocation(line: 5647, column: 24, scope: !6980)
!6986 = !DILocation(line: 5647, column: 35, scope: !6980)
!6987 = !DILocation(line: 5647, column: 32, scope: !6980)
!6988 = !DILocation(line: 5646, column: 7, scope: !6962)
!6989 = !DILocation(line: 5649, column: 31, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6980, file: !1, line: 5648, column: 5)
!6991 = !DILocation(line: 5649, column: 7, scope: !6990)
!6992 = !DILocation(line: 5649, column: 23, scope: !6990)
!6993 = !DILocation(line: 5649, column: 30, scope: !6990)
!6994 = !DILocation(line: 5650, column: 24, scope: !6990)
!6995 = !DILocation(line: 5651, column: 40, scope: !6990)
!6996 = !DILocation(line: 5651, column: 30, scope: !6990)
!6997 = !DILocation(line: 5650, column: 53, scope: !6990)
!6998 = !DILocation(line: 5650, column: 14, scope: !6990)
!6999 = !DILocation(line: 5652, column: 5, scope: !6990)
!7000 = !DILocation(line: 5653, column: 1, scope: !6962)
!7001 = distinct !DISubprogram(name: "DrawSetStrokeLineJoin", scope: !1, file: !1, line: 5682, type: !7002, scopeLine: 5683, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7002 = !DISubroutineType(types: !7003)
!7003 = !{null, !1172, !7004}
!7004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!7005 = !DILocalVariable(name: "wand", arg: 1, scope: !7001, file: !1, line: 5682, type: !1172)
!7006 = !DILocation(line: 5682, column: 52, scope: !7001)
!7007 = !DILocalVariable(name: "linejoin", arg: 2, scope: !7001, file: !1, line: 5682, type: !7004)
!7008 = !DILocation(line: 5682, column: 72, scope: !7001)
!7009 = !DILocation(line: 5686, column: 7, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7001, file: !1, line: 5686, column: 7)
!7011 = !DILocation(line: 5686, column: 13, scope: !7010)
!7012 = !DILocation(line: 5686, column: 19, scope: !7010)
!7013 = !DILocation(line: 5686, column: 7, scope: !7001)
!7014 = !DILocation(line: 5687, column: 60, scope: !7010)
!7015 = !DILocation(line: 5687, column: 66, scope: !7010)
!7016 = !DILocation(line: 5687, column: 12, scope: !7010)
!7017 = !DILocation(line: 5687, column: 5, scope: !7010)
!7018 = !DILocation(line: 5688, column: 8, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7001, file: !1, line: 5688, column: 7)
!7020 = !DILocation(line: 5688, column: 14, scope: !7019)
!7021 = !DILocation(line: 5688, column: 25, scope: !7019)
!7022 = !DILocation(line: 5688, column: 41, scope: !7019)
!7023 = !DILocation(line: 5689, column: 8, scope: !7019)
!7024 = !DILocation(line: 5689, column: 24, scope: !7019)
!7025 = !DILocation(line: 5689, column: 36, scope: !7019)
!7026 = !DILocation(line: 5689, column: 33, scope: !7019)
!7027 = !DILocation(line: 5688, column: 7, scope: !7001)
!7028 = !DILocation(line: 5691, column: 32, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7019, file: !1, line: 5690, column: 5)
!7030 = !DILocation(line: 5691, column: 7, scope: !7029)
!7031 = !DILocation(line: 5691, column: 23, scope: !7029)
!7032 = !DILocation(line: 5691, column: 31, scope: !7029)
!7033 = !DILocation(line: 5692, column: 24, scope: !7029)
!7034 = !DILocation(line: 5693, column: 41, scope: !7029)
!7035 = !DILocation(line: 5693, column: 31, scope: !7029)
!7036 = !DILocation(line: 5692, column: 55, scope: !7029)
!7037 = !DILocation(line: 5692, column: 14, scope: !7029)
!7038 = !DILocation(line: 5694, column: 5, scope: !7029)
!7039 = !DILocation(line: 5695, column: 1, scope: !7001)
!7040 = distinct !DISubprogram(name: "DrawSetStrokeMiterLimit", scope: !1, file: !1, line: 5726, type: !6476, scopeLine: 5728, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7041 = !DILocalVariable(name: "wand", arg: 1, scope: !7040, file: !1, line: 5726, type: !1172)
!7042 = !DILocation(line: 5726, column: 54, scope: !7040)
!7043 = !DILocalVariable(name: "miterlimit", arg: 2, scope: !7040, file: !1, line: 5727, type: !1098)
!7044 = !DILocation(line: 5727, column: 16, scope: !7040)
!7045 = !DILocation(line: 5731, column: 7, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7040, file: !1, line: 5731, column: 7)
!7047 = !DILocation(line: 5731, column: 13, scope: !7046)
!7048 = !DILocation(line: 5731, column: 19, scope: !7046)
!7049 = !DILocation(line: 5731, column: 7, scope: !7040)
!7050 = !DILocation(line: 5732, column: 60, scope: !7046)
!7051 = !DILocation(line: 5732, column: 66, scope: !7046)
!7052 = !DILocation(line: 5732, column: 12, scope: !7046)
!7053 = !DILocation(line: 5732, column: 5, scope: !7046)
!7054 = !DILocation(line: 5733, column: 7, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7040, file: !1, line: 5733, column: 7)
!7056 = !DILocation(line: 5733, column: 23, scope: !7055)
!7057 = !DILocation(line: 5733, column: 37, scope: !7055)
!7058 = !DILocation(line: 5733, column: 34, scope: !7055)
!7059 = !DILocation(line: 5733, column: 7, scope: !7040)
!7060 = !DILocation(line: 5735, column: 34, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7055, file: !1, line: 5734, column: 5)
!7062 = !DILocation(line: 5735, column: 7, scope: !7061)
!7063 = !DILocation(line: 5735, column: 23, scope: !7061)
!7064 = !DILocation(line: 5735, column: 33, scope: !7061)
!7065 = !DILocation(line: 5736, column: 24, scope: !7061)
!7066 = !DILocation(line: 5736, column: 66, scope: !7061)
!7067 = !DILocation(line: 5736, column: 57, scope: !7061)
!7068 = !DILocation(line: 5736, column: 14, scope: !7061)
!7069 = !DILocation(line: 5737, column: 5, scope: !7061)
!7070 = !DILocation(line: 5738, column: 1, scope: !7040)
!7071 = distinct !DISubprogram(name: "DrawSetStrokeOpacity", scope: !1, file: !1, line: 5765, type: !4913, scopeLine: 5767, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7072 = !DILocalVariable(name: "wand", arg: 1, scope: !7071, file: !1, line: 5765, type: !1172)
!7073 = !DILocation(line: 5765, column: 51, scope: !7071)
!7074 = !DILocalVariable(name: "stroke_opacity", arg: 2, scope: !7071, file: !1, line: 5766, type: !1203)
!7075 = !DILocation(line: 5766, column: 16, scope: !7071)
!7076 = !DILocalVariable(name: "opacity", scope: !7071, file: !1, line: 5769, type: !728)
!7077 = !DILocation(line: 5769, column: 5, scope: !7071)
!7078 = !DILocation(line: 5773, column: 7, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7071, file: !1, line: 5773, column: 7)
!7080 = !DILocation(line: 5773, column: 13, scope: !7079)
!7081 = !DILocation(line: 5773, column: 19, scope: !7079)
!7082 = !DILocation(line: 5773, column: 7, scope: !7071)
!7083 = !DILocation(line: 5774, column: 60, scope: !7079)
!7084 = !DILocation(line: 5774, column: 66, scope: !7079)
!7085 = !DILocation(line: 5774, column: 12, scope: !7079)
!7086 = !DILocation(line: 5774, column: 5, scope: !7079)
!7087 = !DILocation(line: 5775, column: 53, scope: !7071)
!7088 = !DILocation(line: 5775, column: 52, scope: !7071)
!7089 = !DILocation(line: 5775, column: 47, scope: !7071)
!7090 = !DILocation(line: 5775, column: 26, scope: !7071)
!7091 = !DILocation(line: 5775, column: 11, scope: !7071)
!7092 = !DILocation(line: 5775, column: 10, scope: !7071)
!7093 = !DILocation(line: 5776, column: 8, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7071, file: !1, line: 5776, column: 7)
!7095 = !DILocation(line: 5776, column: 14, scope: !7094)
!7096 = !DILocation(line: 5776, column: 25, scope: !7094)
!7097 = !DILocation(line: 5776, column: 41, scope: !7094)
!7098 = !DILocation(line: 5777, column: 8, scope: !7094)
!7099 = !DILocation(line: 5777, column: 24, scope: !7094)
!7100 = !DILocation(line: 5777, column: 31, scope: !7094)
!7101 = !DILocation(line: 5777, column: 42, scope: !7094)
!7102 = !DILocation(line: 5777, column: 39, scope: !7094)
!7103 = !DILocation(line: 5776, column: 7, scope: !7071)
!7104 = !DILocation(line: 5779, column: 38, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7094, file: !1, line: 5778, column: 5)
!7106 = !DILocation(line: 5779, column: 7, scope: !7105)
!7107 = !DILocation(line: 5779, column: 23, scope: !7105)
!7108 = !DILocation(line: 5779, column: 30, scope: !7105)
!7109 = !DILocation(line: 5779, column: 37, scope: !7105)
!7110 = !DILocation(line: 5780, column: 24, scope: !7105)
!7111 = !DILocation(line: 5780, column: 54, scope: !7105)
!7112 = !DILocation(line: 5780, column: 14, scope: !7105)
!7113 = !DILocation(line: 5781, column: 5, scope: !7105)
!7114 = !DILocation(line: 5782, column: 1, scope: !7071)
!7115 = distinct !DISubprogram(name: "DrawSetStrokeWidth", scope: !1, file: !1, line: 5810, type: !4913, scopeLine: 5811, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7116 = !DILocalVariable(name: "wand", arg: 1, scope: !7115, file: !1, line: 5810, type: !1172)
!7117 = !DILocation(line: 5810, column: 49, scope: !7115)
!7118 = !DILocalVariable(name: "stroke_width", arg: 2, scope: !7115, file: !1, line: 5810, type: !1203)
!7119 = !DILocation(line: 5810, column: 67, scope: !7115)
!7120 = !DILocation(line: 5814, column: 7, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7115, file: !1, line: 5814, column: 7)
!7122 = !DILocation(line: 5814, column: 13, scope: !7121)
!7123 = !DILocation(line: 5814, column: 19, scope: !7121)
!7124 = !DILocation(line: 5814, column: 7, scope: !7115)
!7125 = !DILocation(line: 5815, column: 60, scope: !7121)
!7126 = !DILocation(line: 5815, column: 66, scope: !7121)
!7127 = !DILocation(line: 5815, column: 12, scope: !7121)
!7128 = !DILocation(line: 5815, column: 5, scope: !7121)
!7129 = !DILocation(line: 5816, column: 8, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7115, file: !1, line: 5816, column: 7)
!7131 = !DILocation(line: 5816, column: 14, scope: !7130)
!7132 = !DILocation(line: 5816, column: 25, scope: !7130)
!7133 = !DILocation(line: 5816, column: 41, scope: !7130)
!7134 = !DILocation(line: 5817, column: 13, scope: !7130)
!7135 = !DILocation(line: 5817, column: 29, scope: !7130)
!7136 = !DILocation(line: 5817, column: 42, scope: !7130)
!7137 = !DILocation(line: 5817, column: 41, scope: !7130)
!7138 = !DILocation(line: 5817, column: 8, scope: !7130)
!7139 = !DILocation(line: 5817, column: 56, scope: !7130)
!7140 = !DILocation(line: 5816, column: 7, scope: !7115)
!7141 = !DILocation(line: 5819, column: 36, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7130, file: !1, line: 5818, column: 5)
!7143 = !DILocation(line: 5819, column: 7, scope: !7142)
!7144 = !DILocation(line: 5819, column: 23, scope: !7142)
!7145 = !DILocation(line: 5819, column: 35, scope: !7142)
!7146 = !DILocation(line: 5820, column: 24, scope: !7142)
!7147 = !DILocation(line: 5820, column: 52, scope: !7142)
!7148 = !DILocation(line: 5820, column: 14, scope: !7142)
!7149 = !DILocation(line: 5821, column: 5, scope: !7142)
!7150 = !DILocation(line: 5822, column: 1, scope: !7115)
!7151 = distinct !DISubprogram(name: "DrawSetTextAlignment", scope: !1, file: !1, line: 5850, type: !7152, scopeLine: 5852, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7152 = !DISubroutineType(types: !7153)
!7153 = !{null, !1172, !7154}
!7154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1007)
!7155 = !DILocalVariable(name: "wand", arg: 1, scope: !7151, file: !1, line: 5850, type: !1172)
!7156 = !DILocation(line: 5850, column: 51, scope: !7151)
!7157 = !DILocalVariable(name: "alignment", arg: 2, scope: !7151, file: !1, line: 5851, type: !7154)
!7158 = !DILocation(line: 5851, column: 19, scope: !7151)
!7159 = !DILocation(line: 5855, column: 7, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7151, file: !1, line: 5855, column: 7)
!7161 = !DILocation(line: 5855, column: 13, scope: !7160)
!7162 = !DILocation(line: 5855, column: 19, scope: !7160)
!7163 = !DILocation(line: 5855, column: 7, scope: !7151)
!7164 = !DILocation(line: 5856, column: 60, scope: !7160)
!7165 = !DILocation(line: 5856, column: 66, scope: !7160)
!7166 = !DILocation(line: 5856, column: 12, scope: !7160)
!7167 = !DILocation(line: 5856, column: 5, scope: !7160)
!7168 = !DILocation(line: 5857, column: 8, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7151, file: !1, line: 5857, column: 7)
!7170 = !DILocation(line: 5857, column: 14, scope: !7169)
!7171 = !DILocation(line: 5857, column: 25, scope: !7169)
!7172 = !DILocation(line: 5857, column: 41, scope: !7169)
!7173 = !DILocation(line: 5858, column: 8, scope: !7169)
!7174 = !DILocation(line: 5858, column: 24, scope: !7169)
!7175 = !DILocation(line: 5858, column: 33, scope: !7169)
!7176 = !DILocation(line: 5858, column: 30, scope: !7169)
!7177 = !DILocation(line: 5857, column: 7, scope: !7151)
!7178 = !DILocation(line: 5860, column: 29, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7169, file: !1, line: 5859, column: 5)
!7180 = !DILocation(line: 5860, column: 7, scope: !7179)
!7181 = !DILocation(line: 5860, column: 23, scope: !7179)
!7182 = !DILocation(line: 5860, column: 28, scope: !7179)
!7183 = !DILocation(line: 5861, column: 24, scope: !7179)
!7184 = !DILocation(line: 5862, column: 38, scope: !7179)
!7185 = !DILocation(line: 5862, column: 28, scope: !7179)
!7186 = !DILocation(line: 5861, column: 49, scope: !7179)
!7187 = !DILocation(line: 5861, column: 14, scope: !7179)
!7188 = !DILocation(line: 5863, column: 5, scope: !7179)
!7189 = !DILocation(line: 5864, column: 1, scope: !7151)
!7190 = distinct !DISubprogram(name: "DrawSetTextAntialias", scope: !1, file: !1, line: 5893, type: !6665, scopeLine: 5895, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7191 = !DILocalVariable(name: "wand", arg: 1, scope: !7190, file: !1, line: 5893, type: !1172)
!7192 = !DILocation(line: 5893, column: 51, scope: !7190)
!7193 = !DILocalVariable(name: "text_antialias", arg: 2, scope: !7190, file: !1, line: 5894, type: !4668)
!7194 = !DILocation(line: 5894, column: 27, scope: !7190)
!7195 = !DILocation(line: 5898, column: 7, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7190, file: !1, line: 5898, column: 7)
!7197 = !DILocation(line: 5898, column: 13, scope: !7196)
!7198 = !DILocation(line: 5898, column: 19, scope: !7196)
!7199 = !DILocation(line: 5898, column: 7, scope: !7190)
!7200 = !DILocation(line: 5899, column: 60, scope: !7196)
!7201 = !DILocation(line: 5899, column: 66, scope: !7196)
!7202 = !DILocation(line: 5899, column: 12, scope: !7196)
!7203 = !DILocation(line: 5899, column: 5, scope: !7196)
!7204 = !DILocation(line: 5900, column: 8, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7190, file: !1, line: 5900, column: 7)
!7206 = !DILocation(line: 5900, column: 14, scope: !7205)
!7207 = !DILocation(line: 5900, column: 25, scope: !7205)
!7208 = !DILocation(line: 5900, column: 41, scope: !7205)
!7209 = !DILocation(line: 5901, column: 8, scope: !7205)
!7210 = !DILocation(line: 5901, column: 24, scope: !7205)
!7211 = !DILocation(line: 5901, column: 42, scope: !7205)
!7212 = !DILocation(line: 5901, column: 39, scope: !7205)
!7213 = !DILocation(line: 5900, column: 7, scope: !7190)
!7214 = !DILocation(line: 5903, column: 38, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7205, file: !1, line: 5902, column: 5)
!7216 = !DILocation(line: 5903, column: 7, scope: !7215)
!7217 = !DILocation(line: 5903, column: 23, scope: !7215)
!7218 = !DILocation(line: 5903, column: 37, scope: !7215)
!7219 = !DILocation(line: 5904, column: 24, scope: !7215)
!7220 = !DILocation(line: 5904, column: 51, scope: !7215)
!7221 = !DILocation(line: 5904, column: 66, scope: !7215)
!7222 = !DILocation(line: 5904, column: 14, scope: !7215)
!7223 = !DILocation(line: 5905, column: 5, scope: !7215)
!7224 = !DILocation(line: 5906, column: 1, scope: !7190)
!7225 = distinct !DISubprogram(name: "DrawSetTextDecoration", scope: !1, file: !1, line: 5935, type: !7226, scopeLine: 5937, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7226 = !DISubroutineType(types: !7227)
!7227 = !{null, !1172, !7228}
!7228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !991)
!7229 = !DILocalVariable(name: "wand", arg: 1, scope: !7225, file: !1, line: 5935, type: !1172)
!7230 = !DILocation(line: 5935, column: 52, scope: !7225)
!7231 = !DILocalVariable(name: "decoration", arg: 2, scope: !7225, file: !1, line: 5936, type: !7228)
!7232 = !DILocation(line: 5936, column: 24, scope: !7225)
!7233 = !DILocation(line: 5940, column: 7, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7225, file: !1, line: 5940, column: 7)
!7235 = !DILocation(line: 5940, column: 13, scope: !7234)
!7236 = !DILocation(line: 5940, column: 19, scope: !7234)
!7237 = !DILocation(line: 5940, column: 7, scope: !7225)
!7238 = !DILocation(line: 5941, column: 60, scope: !7234)
!7239 = !DILocation(line: 5941, column: 66, scope: !7234)
!7240 = !DILocation(line: 5941, column: 12, scope: !7234)
!7241 = !DILocation(line: 5941, column: 5, scope: !7234)
!7242 = !DILocation(line: 5942, column: 8, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7225, file: !1, line: 5942, column: 7)
!7244 = !DILocation(line: 5942, column: 14, scope: !7243)
!7245 = !DILocation(line: 5942, column: 25, scope: !7243)
!7246 = !DILocation(line: 5942, column: 41, scope: !7243)
!7247 = !DILocation(line: 5943, column: 8, scope: !7243)
!7248 = !DILocation(line: 5943, column: 24, scope: !7243)
!7249 = !DILocation(line: 5943, column: 36, scope: !7243)
!7250 = !DILocation(line: 5943, column: 33, scope: !7243)
!7251 = !DILocation(line: 5942, column: 7, scope: !7225)
!7252 = !DILocation(line: 5945, column: 32, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7243, file: !1, line: 5944, column: 5)
!7254 = !DILocation(line: 5945, column: 7, scope: !7253)
!7255 = !DILocation(line: 5945, column: 23, scope: !7253)
!7256 = !DILocation(line: 5945, column: 31, scope: !7253)
!7257 = !DILocation(line: 5946, column: 24, scope: !7253)
!7258 = !DILocation(line: 5947, column: 41, scope: !7253)
!7259 = !DILocation(line: 5947, column: 31, scope: !7253)
!7260 = !DILocation(line: 5946, column: 47, scope: !7253)
!7261 = !DILocation(line: 5946, column: 14, scope: !7253)
!7262 = !DILocation(line: 5948, column: 5, scope: !7253)
!7263 = !DILocation(line: 5949, column: 1, scope: !7225)
!7264 = distinct !DISubprogram(name: "DrawSetTextDirection", scope: !1, file: !1, line: 5978, type: !7265, scopeLine: 5980, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7265 = !DISubroutineType(types: !7266)
!7266 = !{null, !1172, !7267}
!7267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!7268 = !DILocalVariable(name: "wand", arg: 1, scope: !7264, file: !1, line: 5978, type: !1172)
!7269 = !DILocation(line: 5978, column: 51, scope: !7264)
!7270 = !DILocalVariable(name: "direction", arg: 2, scope: !7264, file: !1, line: 5979, type: !7267)
!7271 = !DILocation(line: 5979, column: 23, scope: !7264)
!7272 = !DILocation(line: 5984, column: 7, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7264, file: !1, line: 5984, column: 7)
!7274 = !DILocation(line: 5984, column: 13, scope: !7273)
!7275 = !DILocation(line: 5984, column: 19, scope: !7273)
!7276 = !DILocation(line: 5984, column: 7, scope: !7264)
!7277 = !DILocation(line: 5985, column: 60, scope: !7273)
!7278 = !DILocation(line: 5985, column: 66, scope: !7273)
!7279 = !DILocation(line: 5985, column: 12, scope: !7273)
!7280 = !DILocation(line: 5985, column: 5, scope: !7273)
!7281 = !DILocation(line: 5986, column: 8, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7264, file: !1, line: 5986, column: 7)
!7283 = !DILocation(line: 5986, column: 14, scope: !7282)
!7284 = !DILocation(line: 5986, column: 25, scope: !7282)
!7285 = !DILocation(line: 5986, column: 41, scope: !7282)
!7286 = !DILocation(line: 5987, column: 8, scope: !7282)
!7287 = !DILocation(line: 5987, column: 24, scope: !7282)
!7288 = !DILocation(line: 5987, column: 37, scope: !7282)
!7289 = !DILocation(line: 5987, column: 34, scope: !7282)
!7290 = !DILocation(line: 5986, column: 7, scope: !7264)
!7291 = !DILocation(line: 5989, column: 33, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7282, file: !1, line: 5988, column: 5)
!7293 = !DILocation(line: 5989, column: 7, scope: !7292)
!7294 = !DILocation(line: 5989, column: 23, scope: !7292)
!7295 = !DILocation(line: 5989, column: 32, scope: !7292)
!7296 = !DILocation(line: 5990, column: 24, scope: !7292)
!7297 = !DILocation(line: 5991, column: 42, scope: !7292)
!7298 = !DILocation(line: 5991, column: 32, scope: !7292)
!7299 = !DILocation(line: 5990, column: 48, scope: !7292)
!7300 = !DILocation(line: 5990, column: 14, scope: !7292)
!7301 = !DILocation(line: 5992, column: 5, scope: !7292)
!7302 = !DILocation(line: 5993, column: 1, scope: !7264)
!7303 = distinct !DISubprogram(name: "DrawSetTextEncoding", scope: !1, file: !1, line: 6024, type: !2612, scopeLine: 6025, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7304 = !DILocalVariable(name: "wand", arg: 1, scope: !7303, file: !1, line: 6024, type: !1172)
!7305 = !DILocation(line: 6024, column: 50, scope: !7303)
!7306 = !DILocalVariable(name: "encoding", arg: 2, scope: !7303, file: !1, line: 6024, type: !891)
!7307 = !DILocation(line: 6024, column: 67, scope: !7303)
!7308 = !DILocation(line: 6028, column: 7, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7303, file: !1, line: 6028, column: 7)
!7310 = !DILocation(line: 6028, column: 13, scope: !7309)
!7311 = !DILocation(line: 6028, column: 19, scope: !7309)
!7312 = !DILocation(line: 6028, column: 7, scope: !7303)
!7313 = !DILocation(line: 6029, column: 60, scope: !7309)
!7314 = !DILocation(line: 6029, column: 66, scope: !7309)
!7315 = !DILocation(line: 6029, column: 12, scope: !7309)
!7316 = !DILocation(line: 6029, column: 5, scope: !7309)
!7317 = !DILocation(line: 6031, column: 8, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7303, file: !1, line: 6031, column: 7)
!7319 = !DILocation(line: 6031, column: 14, scope: !7318)
!7320 = !DILocation(line: 6031, column: 25, scope: !7318)
!7321 = !DILocation(line: 6031, column: 41, scope: !7318)
!7322 = !DILocation(line: 6032, column: 8, scope: !7318)
!7323 = !DILocation(line: 6032, column: 24, scope: !7318)
!7324 = !DILocation(line: 6032, column: 33, scope: !7318)
!7325 = !DILocation(line: 6032, column: 51, scope: !7318)
!7326 = !DILocation(line: 6033, column: 22, scope: !7318)
!7327 = !DILocation(line: 6033, column: 38, scope: !7318)
!7328 = !DILocation(line: 6033, column: 47, scope: !7318)
!7329 = !DILocation(line: 6033, column: 8, scope: !7318)
!7330 = !DILocation(line: 6033, column: 57, scope: !7318)
!7331 = !DILocation(line: 6031, column: 7, scope: !7303)
!7332 = !DILocation(line: 6035, column: 27, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7318, file: !1, line: 6034, column: 5)
!7334 = !DILocation(line: 6035, column: 43, scope: !7333)
!7335 = !DILocation(line: 6035, column: 52, scope: !7333)
!7336 = !DILocation(line: 6035, column: 14, scope: !7333)
!7337 = !DILocation(line: 6036, column: 24, scope: !7333)
!7338 = !DILocation(line: 6036, column: 47, scope: !7333)
!7339 = !DILocation(line: 6036, column: 14, scope: !7333)
!7340 = !DILocation(line: 6037, column: 5, scope: !7333)
!7341 = !DILocation(line: 6038, column: 1, scope: !7303)
!7342 = distinct !DISubprogram(name: "DrawSetTextKerning", scope: !1, file: !1, line: 6064, type: !4913, scopeLine: 6065, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7343 = !DILocalVariable(name: "wand", arg: 1, scope: !7342, file: !1, line: 6064, type: !1172)
!7344 = !DILocation(line: 6064, column: 49, scope: !7342)
!7345 = !DILocalVariable(name: "kerning", arg: 2, scope: !7342, file: !1, line: 6064, type: !1203)
!7346 = !DILocation(line: 6064, column: 67, scope: !7342)
!7347 = !DILocation(line: 6069, column: 7, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7342, file: !1, line: 6069, column: 7)
!7349 = !DILocation(line: 6069, column: 13, scope: !7348)
!7350 = !DILocation(line: 6069, column: 19, scope: !7348)
!7351 = !DILocation(line: 6069, column: 7, scope: !7342)
!7352 = !DILocation(line: 6070, column: 60, scope: !7348)
!7353 = !DILocation(line: 6070, column: 66, scope: !7348)
!7354 = !DILocation(line: 6070, column: 12, scope: !7348)
!7355 = !DILocation(line: 6070, column: 5, scope: !7348)
!7356 = !DILocation(line: 6071, column: 8, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7342, file: !1, line: 6071, column: 7)
!7358 = !DILocation(line: 6071, column: 14, scope: !7357)
!7359 = !DILocation(line: 6071, column: 25, scope: !7357)
!7360 = !DILocation(line: 6071, column: 41, scope: !7357)
!7361 = !DILocation(line: 6072, column: 8, scope: !7357)
!7362 = !DILocation(line: 6072, column: 24, scope: !7357)
!7363 = !DILocation(line: 6072, column: 35, scope: !7357)
!7364 = !DILocation(line: 6072, column: 32, scope: !7357)
!7365 = !DILocation(line: 6071, column: 7, scope: !7342)
!7366 = !DILocation(line: 6074, column: 31, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7357, file: !1, line: 6073, column: 5)
!7368 = !DILocation(line: 6074, column: 7, scope: !7367)
!7369 = !DILocation(line: 6074, column: 23, scope: !7367)
!7370 = !DILocation(line: 6074, column: 30, scope: !7367)
!7371 = !DILocation(line: 6075, column: 24, scope: !7367)
!7372 = !DILocation(line: 6075, column: 45, scope: !7367)
!7373 = !DILocation(line: 6075, column: 14, scope: !7367)
!7374 = !DILocation(line: 6076, column: 5, scope: !7367)
!7375 = !DILocation(line: 6077, column: 1, scope: !7342)
!7376 = distinct !DISubprogram(name: "DrawSetTextInterlineSpacing", scope: !1, file: !1, line: 6104, type: !4913, scopeLine: 6106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7377 = !DILocalVariable(name: "wand", arg: 1, scope: !7376, file: !1, line: 6104, type: !1172)
!7378 = !DILocation(line: 6104, column: 58, scope: !7376)
!7379 = !DILocalVariable(name: "interline_spacing", arg: 2, scope: !7376, file: !1, line: 6105, type: !1203)
!7380 = !DILocation(line: 6105, column: 16, scope: !7376)
!7381 = !DILocation(line: 6110, column: 7, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7376, file: !1, line: 6110, column: 7)
!7383 = !DILocation(line: 6110, column: 13, scope: !7382)
!7384 = !DILocation(line: 6110, column: 19, scope: !7382)
!7385 = !DILocation(line: 6110, column: 7, scope: !7376)
!7386 = !DILocation(line: 6111, column: 60, scope: !7382)
!7387 = !DILocation(line: 6111, column: 66, scope: !7382)
!7388 = !DILocation(line: 6111, column: 12, scope: !7382)
!7389 = !DILocation(line: 6111, column: 5, scope: !7382)
!7390 = !DILocation(line: 6112, column: 8, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7376, file: !1, line: 6112, column: 7)
!7392 = !DILocation(line: 6112, column: 14, scope: !7391)
!7393 = !DILocation(line: 6112, column: 25, scope: !7391)
!7394 = !DILocation(line: 6112, column: 41, scope: !7391)
!7395 = !DILocation(line: 6113, column: 8, scope: !7391)
!7396 = !DILocation(line: 6113, column: 24, scope: !7391)
!7397 = !DILocation(line: 6113, column: 45, scope: !7391)
!7398 = !DILocation(line: 6113, column: 42, scope: !7391)
!7399 = !DILocation(line: 6112, column: 7, scope: !7376)
!7400 = !DILocation(line: 6115, column: 41, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7391, file: !1, line: 6114, column: 5)
!7402 = !DILocation(line: 6115, column: 7, scope: !7401)
!7403 = !DILocation(line: 6115, column: 23, scope: !7401)
!7404 = !DILocation(line: 6115, column: 40, scope: !7401)
!7405 = !DILocation(line: 6116, column: 24, scope: !7401)
!7406 = !DILocation(line: 6116, column: 55, scope: !7401)
!7407 = !DILocation(line: 6116, column: 14, scope: !7401)
!7408 = !DILocation(line: 6117, column: 5, scope: !7401)
!7409 = !DILocation(line: 6118, column: 1, scope: !7376)
!7410 = distinct !DISubprogram(name: "DrawSetTextInterwordSpacing", scope: !1, file: !1, line: 6145, type: !4913, scopeLine: 6147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7411 = !DILocalVariable(name: "wand", arg: 1, scope: !7410, file: !1, line: 6145, type: !1172)
!7412 = !DILocation(line: 6145, column: 58, scope: !7410)
!7413 = !DILocalVariable(name: "interword_spacing", arg: 2, scope: !7410, file: !1, line: 6146, type: !1203)
!7414 = !DILocation(line: 6146, column: 16, scope: !7410)
!7415 = !DILocation(line: 6151, column: 7, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7410, file: !1, line: 6151, column: 7)
!7417 = !DILocation(line: 6151, column: 13, scope: !7416)
!7418 = !DILocation(line: 6151, column: 19, scope: !7416)
!7419 = !DILocation(line: 6151, column: 7, scope: !7410)
!7420 = !DILocation(line: 6152, column: 60, scope: !7416)
!7421 = !DILocation(line: 6152, column: 66, scope: !7416)
!7422 = !DILocation(line: 6152, column: 12, scope: !7416)
!7423 = !DILocation(line: 6152, column: 5, scope: !7416)
!7424 = !DILocation(line: 6153, column: 8, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7410, file: !1, line: 6153, column: 7)
!7426 = !DILocation(line: 6153, column: 14, scope: !7425)
!7427 = !DILocation(line: 6153, column: 25, scope: !7425)
!7428 = !DILocation(line: 6153, column: 41, scope: !7425)
!7429 = !DILocation(line: 6154, column: 8, scope: !7425)
!7430 = !DILocation(line: 6154, column: 24, scope: !7425)
!7431 = !DILocation(line: 6154, column: 45, scope: !7425)
!7432 = !DILocation(line: 6154, column: 42, scope: !7425)
!7433 = !DILocation(line: 6153, column: 7, scope: !7410)
!7434 = !DILocation(line: 6156, column: 41, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7425, file: !1, line: 6155, column: 5)
!7436 = !DILocation(line: 6156, column: 7, scope: !7435)
!7437 = !DILocation(line: 6156, column: 23, scope: !7435)
!7438 = !DILocation(line: 6156, column: 40, scope: !7435)
!7439 = !DILocation(line: 6157, column: 24, scope: !7435)
!7440 = !DILocation(line: 6157, column: 55, scope: !7435)
!7441 = !DILocation(line: 6157, column: 14, scope: !7435)
!7442 = !DILocation(line: 6158, column: 5, scope: !7435)
!7443 = !DILocation(line: 6159, column: 1, scope: !7410)
!7444 = distinct !DISubprogram(name: "DrawSetTextUnderColor", scope: !1, file: !1, line: 6187, type: !5706, scopeLine: 6189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7445 = !DILocalVariable(name: "wand", arg: 1, scope: !7444, file: !1, line: 6187, type: !1172)
!7446 = !DILocation(line: 6187, column: 52, scope: !7444)
!7447 = !DILocalVariable(name: "under_wand", arg: 2, scope: !7444, file: !1, line: 6188, type: !5708)
!7448 = !DILocation(line: 6188, column: 20, scope: !7444)
!7449 = !DILocalVariable(name: "under_color", scope: !7444, file: !1, line: 6191, type: !724)
!7450 = !DILocation(line: 6191, column: 5, scope: !7444)
!7451 = !DILocation(line: 6195, column: 7, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7444, file: !1, line: 6195, column: 7)
!7453 = !DILocation(line: 6195, column: 13, scope: !7452)
!7454 = !DILocation(line: 6195, column: 19, scope: !7452)
!7455 = !DILocation(line: 6195, column: 7, scope: !7444)
!7456 = !DILocation(line: 6196, column: 60, scope: !7452)
!7457 = !DILocation(line: 6196, column: 66, scope: !7452)
!7458 = !DILocation(line: 6196, column: 12, scope: !7452)
!7459 = !DILocation(line: 6196, column: 5, scope: !7452)
!7460 = !DILocation(line: 6198, column: 24, scope: !7444)
!7461 = !DILocation(line: 6198, column: 3, scope: !7444)
!7462 = !DILocation(line: 6199, column: 8, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7444, file: !1, line: 6199, column: 7)
!7464 = !DILocation(line: 6199, column: 14, scope: !7463)
!7465 = !DILocation(line: 6199, column: 25, scope: !7463)
!7466 = !DILocation(line: 6199, column: 41, scope: !7463)
!7467 = !DILocation(line: 6200, column: 22, scope: !7463)
!7468 = !DILocation(line: 6200, column: 38, scope: !7463)
!7469 = !DILocation(line: 6200, column: 8, scope: !7463)
!7470 = !DILocation(line: 6200, column: 63, scope: !7463)
!7471 = !DILocation(line: 6199, column: 7, scope: !7444)
!7472 = !DILocation(line: 6202, column: 7, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7463, file: !1, line: 6201, column: 5)
!7474 = !DILocation(line: 6202, column: 23, scope: !7473)
!7475 = !DILocation(line: 6202, column: 34, scope: !7473)
!7476 = !DILocation(line: 6203, column: 24, scope: !7473)
!7477 = !DILocation(line: 6203, column: 14, scope: !7473)
!7478 = !DILocation(line: 6204, column: 22, scope: !7473)
!7479 = !DILocation(line: 6204, column: 7, scope: !7473)
!7480 = !DILocation(line: 6205, column: 24, scope: !7473)
!7481 = !DILocation(line: 6205, column: 14, scope: !7473)
!7482 = !DILocation(line: 6206, column: 5, scope: !7473)
!7483 = !DILocation(line: 6207, column: 1, scope: !7444)
!7484 = distinct !DISubprogram(name: "DrawSetVectorGraphics", scope: !1, file: !1, line: 6250, type: !5850, scopeLine: 6252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!7485 = !DILocalVariable(name: "wand", arg: 1, scope: !7484, file: !1, line: 6250, type: !1172)
!7486 = !DILocation(line: 6250, column: 65, scope: !7484)
!7487 = !DILocalVariable(name: "xml", arg: 2, scope: !7484, file: !1, line: 6251, type: !891)
!7488 = !DILocation(line: 6251, column: 15, scope: !7484)
!7489 = !DILocalVariable(name: "value", scope: !7484, file: !1, line: 6254, type: !891)
!7490 = !DILocation(line: 6254, column: 6, scope: !7484)
!7491 = !DILocalVariable(name: "child", scope: !7484, file: !1, line: 6257, type: !1204)
!7492 = !DILocation(line: 6257, column: 6, scope: !7484)
!7493 = !DILocalVariable(name: "xml_info", scope: !7484, file: !1, line: 6258, type: !1204)
!7494 = !DILocation(line: 6258, column: 6, scope: !7484)
!7495 = !DILocation(line: 6262, column: 7, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6262, column: 7)
!7497 = !DILocation(line: 6262, column: 13, scope: !7496)
!7498 = !DILocation(line: 6262, column: 19, scope: !7496)
!7499 = !DILocation(line: 6262, column: 7, scope: !7484)
!7500 = !DILocation(line: 6263, column: 60, scope: !7496)
!7501 = !DILocation(line: 6263, column: 66, scope: !7496)
!7502 = !DILocation(line: 6263, column: 12, scope: !7496)
!7503 = !DILocation(line: 6263, column: 5, scope: !7496)
!7504 = !DILocation(line: 6264, column: 34, scope: !7484)
!7505 = !DILocation(line: 6264, column: 18, scope: !7484)
!7506 = !DILocation(line: 6264, column: 3, scope: !7484)
!7507 = !DILocation(line: 6264, column: 17, scope: !7484)
!7508 = !DILocation(line: 6265, column: 18, scope: !7484)
!7509 = !DILocation(line: 6265, column: 3, scope: !7484)
!7510 = !DILocation(line: 6265, column: 17, scope: !7484)
!7511 = !DILocation(line: 6266, column: 7, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6266, column: 7)
!7513 = !DILocation(line: 6266, column: 11, scope: !7512)
!7514 = !DILocation(line: 6266, column: 7, scope: !7484)
!7515 = !DILocation(line: 6267, column: 5, scope: !7512)
!7516 = !DILocation(line: 6268, column: 23, scope: !7484)
!7517 = !DILocation(line: 6268, column: 27, scope: !7484)
!7518 = !DILocation(line: 6268, column: 33, scope: !7484)
!7519 = !DILocation(line: 6268, column: 12, scope: !7484)
!7520 = !DILocation(line: 6268, column: 11, scope: !7484)
!7521 = !DILocation(line: 6269, column: 7, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6269, column: 7)
!7523 = !DILocation(line: 6269, column: 16, scope: !7522)
!7524 = !DILocation(line: 6269, column: 7, scope: !7484)
!7525 = !DILocation(line: 6270, column: 5, scope: !7522)
!7526 = !DILocation(line: 6271, column: 25, scope: !7484)
!7527 = !DILocation(line: 6271, column: 9, scope: !7484)
!7528 = !DILocation(line: 6271, column: 8, scope: !7484)
!7529 = !DILocation(line: 6272, column: 7, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6272, column: 7)
!7531 = !DILocation(line: 6272, column: 13, scope: !7530)
!7532 = !DILocation(line: 6272, column: 7, scope: !7484)
!7533 = !DILocation(line: 6273, column: 25, scope: !7530)
!7534 = !DILocation(line: 6273, column: 41, scope: !7530)
!7535 = !DILocation(line: 6273, column: 69, scope: !7530)
!7536 = !DILocation(line: 6273, column: 51, scope: !7530)
!7537 = !DILocation(line: 6273, column: 12, scope: !7530)
!7538 = !DILocation(line: 6273, column: 5, scope: !7530)
!7539 = !DILocation(line: 6274, column: 25, scope: !7484)
!7540 = !DILocation(line: 6274, column: 9, scope: !7484)
!7541 = !DILocation(line: 6274, column: 8, scope: !7484)
!7542 = !DILocation(line: 6275, column: 7, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6275, column: 7)
!7544 = !DILocation(line: 6275, column: 13, scope: !7543)
!7545 = !DILocation(line: 6275, column: 7, scope: !7484)
!7546 = !DILocation(line: 6277, column: 31, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7543, file: !1, line: 6276, column: 5)
!7548 = !DILocation(line: 6277, column: 13, scope: !7547)
!7549 = !DILocation(line: 6277, column: 12, scope: !7547)
!7550 = !DILocation(line: 6278, column: 11, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7547, file: !1, line: 6278, column: 11)
!7552 = !DILocation(line: 6278, column: 17, scope: !7551)
!7553 = !DILocation(line: 6278, column: 11, scope: !7547)
!7554 = !DILocation(line: 6280, column: 45, scope: !7551)
!7555 = !DILocation(line: 6279, column: 52, scope: !7551)
!7556 = !DILocation(line: 6279, column: 36, scope: !7551)
!7557 = !DILocation(line: 6279, column: 9, scope: !7551)
!7558 = !DILocation(line: 6279, column: 25, scope: !7551)
!7559 = !DILocation(line: 6279, column: 35, scope: !7551)
!7560 = !DILocation(line: 6281, column: 5, scope: !7547)
!7561 = !DILocation(line: 6282, column: 25, scope: !7484)
!7562 = !DILocation(line: 6282, column: 9, scope: !7484)
!7563 = !DILocation(line: 6282, column: 8, scope: !7484)
!7564 = !DILocation(line: 6283, column: 7, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6283, column: 7)
!7566 = !DILocation(line: 6283, column: 13, scope: !7565)
!7567 = !DILocation(line: 6283, column: 7, scope: !7484)
!7568 = !DILocation(line: 6285, column: 31, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7565, file: !1, line: 6284, column: 5)
!7570 = !DILocation(line: 6285, column: 13, scope: !7569)
!7571 = !DILocation(line: 6285, column: 12, scope: !7569)
!7572 = !DILocation(line: 6286, column: 11, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7569, file: !1, line: 6286, column: 11)
!7574 = !DILocation(line: 6286, column: 17, scope: !7573)
!7575 = !DILocation(line: 6286, column: 11, scope: !7569)
!7576 = !DILocation(line: 6288, column: 45, scope: !7573)
!7577 = !DILocation(line: 6287, column: 51, scope: !7573)
!7578 = !DILocation(line: 6287, column: 34, scope: !7573)
!7579 = !DILocation(line: 6287, column: 9, scope: !7573)
!7580 = !DILocation(line: 6287, column: 25, scope: !7573)
!7581 = !DILocation(line: 6287, column: 33, scope: !7573)
!7582 = !DILocation(line: 6289, column: 5, scope: !7569)
!7583 = !DILocation(line: 6290, column: 25, scope: !7484)
!7584 = !DILocation(line: 6290, column: 9, scope: !7484)
!7585 = !DILocation(line: 6290, column: 8, scope: !7484)
!7586 = !DILocation(line: 6291, column: 7, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6291, column: 7)
!7588 = !DILocation(line: 6291, column: 13, scope: !7587)
!7589 = !DILocation(line: 6291, column: 7, scope: !7484)
!7590 = !DILocation(line: 6292, column: 25, scope: !7587)
!7591 = !DILocation(line: 6292, column: 41, scope: !7587)
!7592 = !DILocation(line: 6292, column: 68, scope: !7587)
!7593 = !DILocation(line: 6292, column: 50, scope: !7587)
!7594 = !DILocation(line: 6292, column: 12, scope: !7587)
!7595 = !DILocation(line: 6292, column: 5, scope: !7587)
!7596 = !DILocation(line: 6293, column: 25, scope: !7484)
!7597 = !DILocation(line: 6293, column: 9, scope: !7484)
!7598 = !DILocation(line: 6293, column: 8, scope: !7484)
!7599 = !DILocation(line: 6294, column: 7, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6294, column: 7)
!7601 = !DILocation(line: 6294, column: 13, scope: !7600)
!7602 = !DILocation(line: 6294, column: 7, scope: !7484)
!7603 = !DILocation(line: 6296, column: 31, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7600, file: !1, line: 6295, column: 5)
!7605 = !DILocation(line: 6296, column: 13, scope: !7604)
!7606 = !DILocation(line: 6296, column: 12, scope: !7604)
!7607 = !DILocation(line: 6297, column: 11, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7604, file: !1, line: 6297, column: 11)
!7609 = !DILocation(line: 6297, column: 17, scope: !7608)
!7610 = !DILocation(line: 6297, column: 11, scope: !7604)
!7611 = !DILocation(line: 6298, column: 35, scope: !7608)
!7612 = !DILocation(line: 6298, column: 42, scope: !7608)
!7613 = !DILocation(line: 6298, column: 58, scope: !7608)
!7614 = !DILocation(line: 6298, column: 63, scope: !7608)
!7615 = !DILocation(line: 6298, column: 69, scope: !7608)
!7616 = !DILocation(line: 6298, column: 16, scope: !7608)
!7617 = !DILocation(line: 6298, column: 9, scope: !7608)
!7618 = !DILocation(line: 6299, column: 5, scope: !7604)
!7619 = !DILocation(line: 6300, column: 25, scope: !7484)
!7620 = !DILocation(line: 6300, column: 9, scope: !7484)
!7621 = !DILocation(line: 6300, column: 8, scope: !7484)
!7622 = !DILocation(line: 6301, column: 7, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6301, column: 7)
!7624 = !DILocation(line: 6301, column: 13, scope: !7623)
!7625 = !DILocation(line: 6301, column: 7, scope: !7484)
!7626 = !DILocation(line: 6303, column: 31, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7623, file: !1, line: 6302, column: 5)
!7628 = !DILocation(line: 6303, column: 13, scope: !7627)
!7629 = !DILocation(line: 6303, column: 12, scope: !7627)
!7630 = !DILocation(line: 6304, column: 11, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7627, file: !1, line: 6304, column: 11)
!7632 = !DILocation(line: 6304, column: 17, scope: !7631)
!7633 = !DILocation(line: 6304, column: 11, scope: !7627)
!7634 = !DILocation(line: 6306, column: 44, scope: !7631)
!7635 = !DILocation(line: 6306, column: 29, scope: !7631)
!7636 = !DILocation(line: 6306, column: 28, scope: !7631)
!7637 = !DILocation(line: 6306, column: 23, scope: !7631)
!7638 = !DILocation(line: 6305, column: 53, scope: !7631)
!7639 = !DILocation(line: 6305, column: 38, scope: !7631)
!7640 = !DILocation(line: 6305, column: 9, scope: !7631)
!7641 = !DILocation(line: 6305, column: 25, scope: !7631)
!7642 = !DILocation(line: 6305, column: 30, scope: !7631)
!7643 = !DILocation(line: 6305, column: 37, scope: !7631)
!7644 = !DILocation(line: 6307, column: 5, scope: !7627)
!7645 = !DILocation(line: 6308, column: 25, scope: !7484)
!7646 = !DILocation(line: 6308, column: 9, scope: !7484)
!7647 = !DILocation(line: 6308, column: 8, scope: !7484)
!7648 = !DILocation(line: 6309, column: 7, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6309, column: 7)
!7650 = !DILocation(line: 6309, column: 13, scope: !7649)
!7651 = !DILocation(line: 6309, column: 7, scope: !7484)
!7652 = !DILocation(line: 6311, column: 31, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7649, file: !1, line: 6310, column: 5)
!7654 = !DILocation(line: 6311, column: 13, scope: !7653)
!7655 = !DILocation(line: 6311, column: 12, scope: !7653)
!7656 = !DILocation(line: 6312, column: 11, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7653, file: !1, line: 6312, column: 11)
!7658 = !DILocation(line: 6312, column: 17, scope: !7657)
!7659 = !DILocation(line: 6312, column: 11, scope: !7653)
!7660 = !DILocation(line: 6314, column: 45, scope: !7657)
!7661 = !DILocation(line: 6313, column: 46, scope: !7657)
!7662 = !DILocation(line: 6313, column: 35, scope: !7657)
!7663 = !DILocation(line: 6313, column: 9, scope: !7657)
!7664 = !DILocation(line: 6313, column: 25, scope: !7657)
!7665 = !DILocation(line: 6313, column: 34, scope: !7657)
!7666 = !DILocation(line: 6315, column: 5, scope: !7653)
!7667 = !DILocation(line: 6316, column: 25, scope: !7484)
!7668 = !DILocation(line: 6316, column: 9, scope: !7484)
!7669 = !DILocation(line: 6316, column: 8, scope: !7484)
!7670 = !DILocation(line: 6317, column: 7, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6317, column: 7)
!7672 = !DILocation(line: 6317, column: 13, scope: !7671)
!7673 = !DILocation(line: 6317, column: 7, scope: !7484)
!7674 = !DILocation(line: 6318, column: 25, scope: !7671)
!7675 = !DILocation(line: 6318, column: 41, scope: !7671)
!7676 = !DILocation(line: 6318, column: 64, scope: !7671)
!7677 = !DILocation(line: 6318, column: 46, scope: !7671)
!7678 = !DILocation(line: 6318, column: 12, scope: !7671)
!7679 = !DILocation(line: 6318, column: 5, scope: !7671)
!7680 = !DILocation(line: 6319, column: 25, scope: !7484)
!7681 = !DILocation(line: 6319, column: 9, scope: !7484)
!7682 = !DILocation(line: 6319, column: 8, scope: !7484)
!7683 = !DILocation(line: 6320, column: 7, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6320, column: 7)
!7685 = !DILocation(line: 6320, column: 13, scope: !7684)
!7686 = !DILocation(line: 6320, column: 7, scope: !7484)
!7687 = !DILocation(line: 6321, column: 25, scope: !7684)
!7688 = !DILocation(line: 6321, column: 41, scope: !7684)
!7689 = !DILocation(line: 6321, column: 66, scope: !7684)
!7690 = !DILocation(line: 6321, column: 48, scope: !7684)
!7691 = !DILocation(line: 6321, column: 12, scope: !7684)
!7692 = !DILocation(line: 6321, column: 5, scope: !7684)
!7693 = !DILocation(line: 6322, column: 25, scope: !7484)
!7694 = !DILocation(line: 6322, column: 9, scope: !7484)
!7695 = !DILocation(line: 6322, column: 8, scope: !7484)
!7696 = !DILocation(line: 6323, column: 7, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6323, column: 7)
!7698 = !DILocation(line: 6323, column: 13, scope: !7697)
!7699 = !DILocation(line: 6323, column: 7, scope: !7484)
!7700 = !DILocation(line: 6325, column: 31, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7697, file: !1, line: 6324, column: 5)
!7702 = !DILocation(line: 6325, column: 13, scope: !7701)
!7703 = !DILocation(line: 6325, column: 12, scope: !7701)
!7704 = !DILocation(line: 6326, column: 11, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7701, file: !1, line: 6326, column: 11)
!7706 = !DILocation(line: 6326, column: 17, scope: !7705)
!7707 = !DILocation(line: 6326, column: 11, scope: !7701)
!7708 = !DILocation(line: 6327, column: 50, scope: !7705)
!7709 = !DILocation(line: 6327, column: 35, scope: !7705)
!7710 = !DILocation(line: 6327, column: 9, scope: !7705)
!7711 = !DILocation(line: 6327, column: 25, scope: !7705)
!7712 = !DILocation(line: 6327, column: 34, scope: !7705)
!7713 = !DILocation(line: 6328, column: 5, scope: !7701)
!7714 = !DILocation(line: 6329, column: 25, scope: !7484)
!7715 = !DILocation(line: 6329, column: 9, scope: !7484)
!7716 = !DILocation(line: 6329, column: 8, scope: !7484)
!7717 = !DILocation(line: 6330, column: 7, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6330, column: 7)
!7719 = !DILocation(line: 6330, column: 13, scope: !7718)
!7720 = !DILocation(line: 6330, column: 7, scope: !7484)
!7721 = !DILocation(line: 6332, column: 31, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7718, file: !1, line: 6331, column: 5)
!7723 = !DILocation(line: 6332, column: 13, scope: !7722)
!7724 = !DILocation(line: 6332, column: 12, scope: !7722)
!7725 = !DILocation(line: 6333, column: 11, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7722, file: !1, line: 6333, column: 11)
!7727 = !DILocation(line: 6333, column: 17, scope: !7726)
!7728 = !DILocation(line: 6333, column: 11, scope: !7722)
!7729 = !DILocation(line: 6335, column: 44, scope: !7726)
!7730 = !DILocation(line: 6334, column: 47, scope: !7726)
!7731 = !DILocation(line: 6334, column: 33, scope: !7726)
!7732 = !DILocation(line: 6334, column: 9, scope: !7726)
!7733 = !DILocation(line: 6334, column: 25, scope: !7726)
!7734 = !DILocation(line: 6334, column: 32, scope: !7726)
!7735 = !DILocation(line: 6336, column: 5, scope: !7722)
!7736 = !DILocation(line: 6337, column: 25, scope: !7484)
!7737 = !DILocation(line: 6337, column: 9, scope: !7484)
!7738 = !DILocation(line: 6337, column: 8, scope: !7484)
!7739 = !DILocation(line: 6338, column: 7, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6338, column: 7)
!7741 = !DILocation(line: 6338, column: 13, scope: !7740)
!7742 = !DILocation(line: 6338, column: 7, scope: !7484)
!7743 = !DILocation(line: 6340, column: 31, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7740, file: !1, line: 6339, column: 5)
!7745 = !DILocation(line: 6340, column: 13, scope: !7744)
!7746 = !DILocation(line: 6340, column: 12, scope: !7744)
!7747 = !DILocation(line: 6341, column: 11, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7744, file: !1, line: 6341, column: 11)
!7749 = !DILocation(line: 6341, column: 17, scope: !7748)
!7750 = !DILocation(line: 6341, column: 11, scope: !7744)
!7751 = !DILocation(line: 6343, column: 23, scope: !7748)
!7752 = !DILocation(line: 6342, column: 43, scope: !7748)
!7753 = !DILocation(line: 6342, column: 31, scope: !7748)
!7754 = !DILocation(line: 6342, column: 9, scope: !7748)
!7755 = !DILocation(line: 6342, column: 25, scope: !7748)
!7756 = !DILocation(line: 6342, column: 30, scope: !7748)
!7757 = !DILocation(line: 6344, column: 5, scope: !7744)
!7758 = !DILocation(line: 6345, column: 25, scope: !7484)
!7759 = !DILocation(line: 6345, column: 9, scope: !7484)
!7760 = !DILocation(line: 6345, column: 8, scope: !7484)
!7761 = !DILocation(line: 6346, column: 7, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6346, column: 7)
!7763 = !DILocation(line: 6346, column: 13, scope: !7762)
!7764 = !DILocation(line: 6346, column: 7, scope: !7484)
!7765 = !DILocation(line: 6348, column: 31, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7762, file: !1, line: 6347, column: 5)
!7767 = !DILocation(line: 6348, column: 13, scope: !7766)
!7768 = !DILocation(line: 6348, column: 12, scope: !7766)
!7769 = !DILocation(line: 6349, column: 11, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7766, file: !1, line: 6349, column: 11)
!7771 = !DILocation(line: 6349, column: 17, scope: !7770)
!7772 = !DILocation(line: 6349, column: 11, scope: !7766)
!7773 = !DILocation(line: 6350, column: 53, scope: !7770)
!7774 = !DILocation(line: 6350, column: 32, scope: !7770)
!7775 = !DILocation(line: 6350, column: 9, scope: !7770)
!7776 = !DILocation(line: 6350, column: 25, scope: !7770)
!7777 = !DILocation(line: 6350, column: 31, scope: !7770)
!7778 = !DILocation(line: 6351, column: 5, scope: !7766)
!7779 = !DILocation(line: 6352, column: 25, scope: !7484)
!7780 = !DILocation(line: 6352, column: 9, scope: !7484)
!7781 = !DILocation(line: 6352, column: 8, scope: !7484)
!7782 = !DILocation(line: 6353, column: 7, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6353, column: 7)
!7784 = !DILocation(line: 6353, column: 13, scope: !7783)
!7785 = !DILocation(line: 6353, column: 7, scope: !7484)
!7786 = !DILocation(line: 6355, column: 31, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7783, file: !1, line: 6354, column: 5)
!7788 = !DILocation(line: 6355, column: 13, scope: !7787)
!7789 = !DILocation(line: 6355, column: 12, scope: !7787)
!7790 = !DILocation(line: 6356, column: 11, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7787, file: !1, line: 6356, column: 11)
!7792 = !DILocation(line: 6356, column: 17, scope: !7791)
!7793 = !DILocation(line: 6356, column: 11, scope: !7787)
!7794 = !DILocation(line: 6358, column: 44, scope: !7791)
!7795 = !DILocation(line: 6357, column: 47, scope: !7791)
!7796 = !DILocation(line: 6357, column: 33, scope: !7791)
!7797 = !DILocation(line: 6357, column: 9, scope: !7791)
!7798 = !DILocation(line: 6357, column: 25, scope: !7791)
!7799 = !DILocation(line: 6357, column: 32, scope: !7791)
!7800 = !DILocation(line: 6359, column: 5, scope: !7787)
!7801 = !DILocation(line: 6360, column: 25, scope: !7484)
!7802 = !DILocation(line: 6360, column: 9, scope: !7484)
!7803 = !DILocation(line: 6360, column: 8, scope: !7484)
!7804 = !DILocation(line: 6361, column: 7, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6361, column: 7)
!7806 = !DILocation(line: 6361, column: 13, scope: !7805)
!7807 = !DILocation(line: 6361, column: 7, scope: !7484)
!7808 = !DILocation(line: 6363, column: 31, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7805, file: !1, line: 6362, column: 5)
!7810 = !DILocation(line: 6363, column: 13, scope: !7809)
!7811 = !DILocation(line: 6363, column: 12, scope: !7809)
!7812 = !DILocation(line: 6364, column: 11, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7809, file: !1, line: 6364, column: 11)
!7814 = !DILocation(line: 6364, column: 17, scope: !7813)
!7815 = !DILocation(line: 6364, column: 11, scope: !7809)
!7816 = !DILocation(line: 6365, column: 35, scope: !7813)
!7817 = !DILocation(line: 6365, column: 42, scope: !7813)
!7818 = !DILocation(line: 6365, column: 58, scope: !7813)
!7819 = !DILocation(line: 6366, column: 11, scope: !7813)
!7820 = !DILocation(line: 6366, column: 17, scope: !7813)
!7821 = !DILocation(line: 6365, column: 16, scope: !7813)
!7822 = !DILocation(line: 6365, column: 9, scope: !7813)
!7823 = !DILocation(line: 6367, column: 5, scope: !7809)
!7824 = !DILocation(line: 6368, column: 25, scope: !7484)
!7825 = !DILocation(line: 6368, column: 9, scope: !7484)
!7826 = !DILocation(line: 6368, column: 8, scope: !7484)
!7827 = !DILocation(line: 6369, column: 7, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6369, column: 7)
!7829 = !DILocation(line: 6369, column: 13, scope: !7828)
!7830 = !DILocation(line: 6369, column: 7, scope: !7484)
!7831 = !DILocation(line: 6371, column: 31, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7828, file: !1, line: 6370, column: 5)
!7833 = !DILocation(line: 6371, column: 13, scope: !7832)
!7834 = !DILocation(line: 6371, column: 12, scope: !7832)
!7835 = !DILocation(line: 6372, column: 11, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7832, file: !1, line: 6372, column: 11)
!7837 = !DILocation(line: 6372, column: 17, scope: !7836)
!7838 = !DILocation(line: 6372, column: 11, scope: !7832)
!7839 = !DILocation(line: 6373, column: 55, scope: !7836)
!7840 = !DILocation(line: 6373, column: 42, scope: !7836)
!7841 = !DILocation(line: 6373, column: 62, scope: !7836)
!7842 = !DILocation(line: 6373, column: 9, scope: !7836)
!7843 = !DILocation(line: 6373, column: 25, scope: !7836)
!7844 = !DILocation(line: 6373, column: 41, scope: !7836)
!7845 = !DILocation(line: 6375, column: 5, scope: !7832)
!7846 = !DILocation(line: 6376, column: 25, scope: !7484)
!7847 = !DILocation(line: 6376, column: 9, scope: !7484)
!7848 = !DILocation(line: 6376, column: 8, scope: !7484)
!7849 = !DILocation(line: 6377, column: 7, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6377, column: 7)
!7851 = !DILocation(line: 6377, column: 13, scope: !7850)
!7852 = !DILocation(line: 6377, column: 7, scope: !7484)
!7853 = !DILocalVariable(name: "token", scope: !7854, file: !1, line: 6380, type: !911)
!7854 = distinct !DILexicalBlock(scope: !7850, file: !1, line: 6378, column: 5)
!7855 = !DILocation(line: 6380, column: 9, scope: !7854)
!7856 = !DILocalVariable(name: "q", scope: !7854, file: !1, line: 6383, type: !891)
!7857 = !DILocation(line: 6383, column: 10, scope: !7854)
!7858 = !DILocalVariable(name: "x", scope: !7854, file: !1, line: 6386, type: !704)
!7859 = !DILocation(line: 6386, column: 9, scope: !7854)
!7860 = !DILocalVariable(name: "j", scope: !7854, file: !1, line: 6389, type: !704)
!7861 = !DILocation(line: 6389, column: 9, scope: !7854)
!7862 = !DILocation(line: 6391, column: 31, scope: !7854)
!7863 = !DILocation(line: 6391, column: 13, scope: !7854)
!7864 = !DILocation(line: 6391, column: 12, scope: !7854)
!7865 = !DILocation(line: 6392, column: 11, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7854, file: !1, line: 6392, column: 11)
!7867 = !DILocation(line: 6392, column: 17, scope: !7866)
!7868 = !DILocation(line: 6392, column: 11, scope: !7854)
!7869 = !DILocation(line: 6394, column: 15, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7871, file: !1, line: 6394, column: 15)
!7871 = distinct !DILexicalBlock(scope: !7866, file: !1, line: 6393, column: 9)
!7872 = !DILocation(line: 6394, column: 31, scope: !7870)
!7873 = !DILocation(line: 6394, column: 44, scope: !7870)
!7874 = !DILocation(line: 6394, column: 15, scope: !7871)
!7875 = !DILocation(line: 6396, column: 15, scope: !7870)
!7876 = !DILocation(line: 6396, column: 31, scope: !7870)
!7877 = !DILocation(line: 6395, column: 53, scope: !7870)
!7878 = !DILocation(line: 6395, column: 42, scope: !7870)
!7879 = !DILocation(line: 6395, column: 13, scope: !7870)
!7880 = !DILocation(line: 6395, column: 29, scope: !7870)
!7881 = !DILocation(line: 6395, column: 41, scope: !7870)
!7882 = !DILocation(line: 6397, column: 22, scope: !7871)
!7883 = !DILocation(line: 6397, column: 12, scope: !7871)
!7884 = !DILocation(line: 6398, column: 23, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7871, file: !1, line: 6398, column: 15)
!7886 = !DILocation(line: 6398, column: 15, scope: !7885)
!7887 = !DILocation(line: 6398, column: 26, scope: !7885)
!7888 = !DILocation(line: 6398, column: 15, scope: !7871)
!7889 = !DILocalVariable(name: "p", scope: !7890, file: !1, line: 6401, type: !891)
!7890 = distinct !DILexicalBlock(scope: !7885, file: !1, line: 6399, column: 13)
!7891 = !DILocation(line: 6401, column: 18, scope: !7890)
!7892 = !DILocation(line: 6403, column: 17, scope: !7890)
!7893 = !DILocation(line: 6403, column: 16, scope: !7890)
!7894 = !DILocation(line: 6404, column: 30, scope: !7890)
!7895 = !DILocation(line: 6404, column: 35, scope: !7890)
!7896 = !DILocation(line: 6404, column: 15, scope: !7890)
!7897 = !DILocation(line: 6405, column: 19, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7890, file: !1, line: 6405, column: 19)
!7899 = !DILocation(line: 6405, column: 26, scope: !7898)
!7900 = !DILocation(line: 6405, column: 19, scope: !7890)
!7901 = !DILocation(line: 6406, column: 32, scope: !7898)
!7902 = !DILocation(line: 6406, column: 37, scope: !7898)
!7903 = !DILocation(line: 6406, column: 17, scope: !7898)
!7904 = !DILocation(line: 6407, column: 21, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7890, file: !1, line: 6407, column: 15)
!7906 = !DILocation(line: 6407, column: 20, scope: !7905)
!7907 = !DILocation(line: 6407, column: 33, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7905, file: !1, line: 6407, column: 15)
!7909 = !DILocation(line: 6407, column: 25, scope: !7908)
!7910 = !DILocation(line: 6407, column: 40, scope: !7908)
!7911 = !DILocation(line: 6407, column: 15, scope: !7905)
!7912 = !DILocation(line: 6409, column: 32, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7908, file: !1, line: 6408, column: 15)
!7914 = !DILocation(line: 6409, column: 37, scope: !7913)
!7915 = !DILocation(line: 6409, column: 17, scope: !7913)
!7916 = !DILocation(line: 6410, column: 21, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7913, file: !1, line: 6410, column: 21)
!7918 = !DILocation(line: 6410, column: 28, scope: !7917)
!7919 = !DILocation(line: 6410, column: 21, scope: !7913)
!7920 = !DILocation(line: 6411, column: 34, scope: !7917)
!7921 = !DILocation(line: 6411, column: 39, scope: !7917)
!7922 = !DILocation(line: 6411, column: 19, scope: !7917)
!7923 = !DILocation(line: 6412, column: 15, scope: !7913)
!7924 = !DILocation(line: 6407, column: 57, scope: !7908)
!7925 = !DILocation(line: 6407, column: 15, scope: !7908)
!7926 = distinct !{!7926, !7911, !7927}
!7927 = !DILocation(line: 6412, column: 15, scope: !7905)
!7928 = !DILocation(line: 6414, column: 31, scope: !7890)
!7929 = !DILocation(line: 6414, column: 30, scope: !7890)
!7930 = !DILocation(line: 6414, column: 33, scope: !7890)
!7931 = !DILocation(line: 6413, column: 55, scope: !7890)
!7932 = !DILocation(line: 6413, column: 44, scope: !7890)
!7933 = !DILocation(line: 6413, column: 15, scope: !7890)
!7934 = !DILocation(line: 6413, column: 31, scope: !7890)
!7935 = !DILocation(line: 6413, column: 43, scope: !7890)
!7936 = !DILocation(line: 6415, column: 19, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7890, file: !1, line: 6415, column: 19)
!7938 = !DILocation(line: 6415, column: 35, scope: !7937)
!7939 = !DILocation(line: 6415, column: 48, scope: !7937)
!7940 = !DILocation(line: 6415, column: 19, scope: !7890)
!7941 = !DILocalVariable(name: "exception", scope: !7942, file: !1, line: 6416, type: !919)
!7942 = distinct !DILexicalBlock(scope: !7937, file: !1, line: 6416, column: 17)
!7943 = !DILocation(line: 6416, column: 17, scope: !7942)
!7944 = !DILocation(line: 6418, column: 21, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7890, file: !1, line: 6418, column: 15)
!7946 = !DILocation(line: 6418, column: 20, scope: !7945)
!7947 = !DILocation(line: 6418, column: 25, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7945, file: !1, line: 6418, column: 15)
!7949 = !DILocation(line: 6418, column: 29, scope: !7948)
!7950 = !DILocation(line: 6418, column: 27, scope: !7948)
!7951 = !DILocation(line: 6418, column: 15, scope: !7945)
!7952 = !DILocation(line: 6420, column: 32, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7948, file: !1, line: 6419, column: 15)
!7954 = !DILocation(line: 6420, column: 37, scope: !7953)
!7955 = !DILocation(line: 6420, column: 17, scope: !7953)
!7956 = !DILocation(line: 6421, column: 21, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7953, file: !1, line: 6421, column: 21)
!7958 = !DILocation(line: 6421, column: 28, scope: !7957)
!7959 = !DILocation(line: 6421, column: 21, scope: !7953)
!7960 = !DILocation(line: 6422, column: 34, scope: !7957)
!7961 = !DILocation(line: 6422, column: 39, scope: !7957)
!7962 = !DILocation(line: 6422, column: 19, scope: !7957)
!7963 = !DILocation(line: 6423, column: 64, scope: !7953)
!7964 = !DILocation(line: 6423, column: 49, scope: !7953)
!7965 = !DILocation(line: 6423, column: 17, scope: !7953)
!7966 = !DILocation(line: 6423, column: 33, scope: !7953)
!7967 = !DILocation(line: 6423, column: 46, scope: !7953)
!7968 = !DILocation(line: 6423, column: 48, scope: !7953)
!7969 = !DILocation(line: 6425, column: 15, scope: !7953)
!7970 = !DILocation(line: 6418, column: 33, scope: !7948)
!7971 = !DILocation(line: 6418, column: 15, scope: !7948)
!7972 = distinct !{!7972, !7951, !7973}
!7973 = !DILocation(line: 6425, column: 15, scope: !7945)
!7974 = !DILocation(line: 6426, column: 20, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7890, file: !1, line: 6426, column: 19)
!7976 = !DILocation(line: 6426, column: 22, scope: !7975)
!7977 = !DILocation(line: 6426, column: 30, scope: !7975)
!7978 = !DILocation(line: 6426, column: 19, scope: !7890)
!7979 = !DILocation(line: 6427, column: 17, scope: !7975)
!7980 = !DILocation(line: 6427, column: 25, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7982, file: !1, line: 6427, column: 17)
!7982 = distinct !DILexicalBlock(scope: !7975, file: !1, line: 6427, column: 17)
!7983 = !DILocation(line: 6427, column: 32, scope: !7981)
!7984 = !DILocation(line: 6427, column: 31, scope: !7981)
!7985 = !DILocation(line: 6427, column: 27, scope: !7981)
!7986 = !DILocation(line: 6427, column: 17, scope: !7982)
!7987 = !DILocation(line: 6429, column: 21, scope: !7981)
!7988 = !DILocation(line: 6429, column: 37, scope: !7981)
!7989 = !DILocation(line: 6429, column: 50, scope: !7981)
!7990 = !DILocation(line: 6429, column: 52, scope: !7981)
!7991 = !DILocation(line: 6429, column: 51, scope: !7981)
!7992 = !DILocation(line: 6428, column: 19, scope: !7981)
!7993 = !DILocation(line: 6428, column: 35, scope: !7981)
!7994 = !DILocation(line: 6428, column: 48, scope: !7981)
!7995 = !DILocation(line: 6428, column: 50, scope: !7981)
!7996 = !DILocation(line: 6427, column: 37, scope: !7981)
!7997 = !DILocation(line: 6427, column: 17, scope: !7981)
!7998 = distinct !{!7998, !7986, !7999}
!7999 = !DILocation(line: 6429, column: 53, scope: !7982)
!8000 = !DILocation(line: 6430, column: 15, scope: !7890)
!8001 = !DILocation(line: 6430, column: 31, scope: !7890)
!8002 = !DILocation(line: 6430, column: 44, scope: !7890)
!8003 = !DILocation(line: 6430, column: 46, scope: !7890)
!8004 = !DILocation(line: 6431, column: 13, scope: !7890)
!8005 = !DILocation(line: 6432, column: 9, scope: !7871)
!8006 = !DILocation(line: 6433, column: 5, scope: !7854)
!8007 = !DILocation(line: 6434, column: 25, scope: !7484)
!8008 = !DILocation(line: 6434, column: 9, scope: !7484)
!8009 = !DILocation(line: 6434, column: 8, scope: !7484)
!8010 = !DILocation(line: 6435, column: 7, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6435, column: 7)
!8012 = !DILocation(line: 6435, column: 13, scope: !8011)
!8013 = !DILocation(line: 6435, column: 7, scope: !7484)
!8014 = !DILocation(line: 6437, column: 31, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8011, file: !1, line: 6436, column: 5)
!8016 = !DILocation(line: 6437, column: 13, scope: !8015)
!8017 = !DILocation(line: 6437, column: 12, scope: !8015)
!8018 = !DILocation(line: 6438, column: 11, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8015, file: !1, line: 6438, column: 11)
!8020 = !DILocation(line: 6438, column: 17, scope: !8019)
!8021 = !DILocation(line: 6438, column: 11, scope: !8015)
!8022 = !DILocation(line: 6439, column: 52, scope: !8019)
!8023 = !DILocation(line: 6439, column: 37, scope: !8019)
!8024 = !DILocation(line: 6439, column: 9, scope: !8019)
!8025 = !DILocation(line: 6439, column: 25, scope: !8019)
!8026 = !DILocation(line: 6439, column: 36, scope: !8019)
!8027 = !DILocation(line: 6440, column: 5, scope: !8015)
!8028 = !DILocation(line: 6441, column: 25, scope: !7484)
!8029 = !DILocation(line: 6441, column: 9, scope: !7484)
!8030 = !DILocation(line: 6441, column: 8, scope: !7484)
!8031 = !DILocation(line: 6442, column: 7, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6442, column: 7)
!8033 = !DILocation(line: 6442, column: 13, scope: !8032)
!8034 = !DILocation(line: 6442, column: 7, scope: !7484)
!8035 = !DILocation(line: 6444, column: 31, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8032, file: !1, line: 6443, column: 5)
!8037 = !DILocation(line: 6444, column: 13, scope: !8036)
!8038 = !DILocation(line: 6444, column: 12, scope: !8036)
!8039 = !DILocation(line: 6445, column: 11, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8036, file: !1, line: 6445, column: 11)
!8041 = !DILocation(line: 6445, column: 17, scope: !8040)
!8042 = !DILocation(line: 6445, column: 11, scope: !8036)
!8043 = !DILocation(line: 6447, column: 44, scope: !8040)
!8044 = !DILocation(line: 6446, column: 43, scope: !8040)
!8045 = !DILocation(line: 6446, column: 33, scope: !8040)
!8046 = !DILocation(line: 6446, column: 9, scope: !8040)
!8047 = !DILocation(line: 6446, column: 25, scope: !8040)
!8048 = !DILocation(line: 6446, column: 32, scope: !8040)
!8049 = !DILocation(line: 6448, column: 5, scope: !8036)
!8050 = !DILocation(line: 6449, column: 25, scope: !7484)
!8051 = !DILocation(line: 6449, column: 9, scope: !7484)
!8052 = !DILocation(line: 6449, column: 8, scope: !7484)
!8053 = !DILocation(line: 6450, column: 7, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6450, column: 7)
!8055 = !DILocation(line: 6450, column: 13, scope: !8054)
!8056 = !DILocation(line: 6450, column: 7, scope: !7484)
!8057 = !DILocation(line: 6452, column: 31, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8054, file: !1, line: 6451, column: 5)
!8059 = !DILocation(line: 6452, column: 13, scope: !8058)
!8060 = !DILocation(line: 6452, column: 12, scope: !8058)
!8061 = !DILocation(line: 6453, column: 11, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8058, file: !1, line: 6453, column: 11)
!8063 = !DILocation(line: 6453, column: 17, scope: !8062)
!8064 = !DILocation(line: 6453, column: 11, scope: !8058)
!8065 = !DILocation(line: 6455, column: 45, scope: !8062)
!8066 = !DILocation(line: 6454, column: 45, scope: !8062)
!8067 = !DILocation(line: 6454, column: 34, scope: !8062)
!8068 = !DILocation(line: 6454, column: 9, scope: !8062)
!8069 = !DILocation(line: 6454, column: 25, scope: !8062)
!8070 = !DILocation(line: 6454, column: 33, scope: !8062)
!8071 = !DILocation(line: 6456, column: 5, scope: !8058)
!8072 = !DILocation(line: 6457, column: 25, scope: !7484)
!8073 = !DILocation(line: 6457, column: 9, scope: !7484)
!8074 = !DILocation(line: 6457, column: 8, scope: !7484)
!8075 = !DILocation(line: 6458, column: 7, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6458, column: 7)
!8077 = !DILocation(line: 6458, column: 13, scope: !8076)
!8078 = !DILocation(line: 6458, column: 7, scope: !7484)
!8079 = !DILocation(line: 6460, column: 31, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8076, file: !1, line: 6459, column: 5)
!8081 = !DILocation(line: 6460, column: 13, scope: !8080)
!8082 = !DILocation(line: 6460, column: 12, scope: !8080)
!8083 = !DILocation(line: 6461, column: 11, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8080, file: !1, line: 6461, column: 11)
!8085 = !DILocation(line: 6461, column: 17, scope: !8084)
!8086 = !DILocation(line: 6461, column: 11, scope: !8080)
!8087 = !DILocation(line: 6462, column: 57, scope: !8084)
!8088 = !DILocation(line: 6462, column: 36, scope: !8084)
!8089 = !DILocation(line: 6462, column: 9, scope: !8084)
!8090 = !DILocation(line: 6462, column: 25, scope: !8084)
!8091 = !DILocation(line: 6462, column: 35, scope: !8084)
!8092 = !DILocation(line: 6463, column: 5, scope: !8080)
!8093 = !DILocation(line: 6464, column: 25, scope: !7484)
!8094 = !DILocation(line: 6464, column: 9, scope: !7484)
!8095 = !DILocation(line: 6464, column: 8, scope: !7484)
!8096 = !DILocation(line: 6465, column: 7, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6465, column: 7)
!8098 = !DILocation(line: 6465, column: 13, scope: !8097)
!8099 = !DILocation(line: 6465, column: 7, scope: !7484)
!8100 = !DILocation(line: 6467, column: 31, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8097, file: !1, line: 6466, column: 5)
!8102 = !DILocation(line: 6467, column: 13, scope: !8101)
!8103 = !DILocation(line: 6467, column: 12, scope: !8101)
!8104 = !DILocation(line: 6468, column: 11, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8101, file: !1, line: 6468, column: 11)
!8106 = !DILocation(line: 6468, column: 17, scope: !8105)
!8107 = !DILocation(line: 6468, column: 11, scope: !8101)
!8108 = !DILocation(line: 6470, column: 44, scope: !8105)
!8109 = !DILocation(line: 6470, column: 29, scope: !8105)
!8110 = !DILocation(line: 6470, column: 28, scope: !8105)
!8111 = !DILocation(line: 6470, column: 23, scope: !8105)
!8112 = !DILocation(line: 6469, column: 55, scope: !8105)
!8113 = !DILocation(line: 6469, column: 40, scope: !8105)
!8114 = !DILocation(line: 6469, column: 9, scope: !8105)
!8115 = !DILocation(line: 6469, column: 25, scope: !8105)
!8116 = !DILocation(line: 6469, column: 32, scope: !8105)
!8117 = !DILocation(line: 6469, column: 39, scope: !8105)
!8118 = !DILocation(line: 6471, column: 5, scope: !8101)
!8119 = !DILocation(line: 6472, column: 25, scope: !7484)
!8120 = !DILocation(line: 6472, column: 9, scope: !7484)
!8121 = !DILocation(line: 6472, column: 8, scope: !7484)
!8122 = !DILocation(line: 6473, column: 7, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6473, column: 7)
!8124 = !DILocation(line: 6473, column: 13, scope: !8123)
!8125 = !DILocation(line: 6473, column: 7, scope: !7484)
!8126 = !DILocation(line: 6475, column: 31, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8123, file: !1, line: 6474, column: 5)
!8128 = !DILocation(line: 6475, column: 13, scope: !8127)
!8129 = !DILocation(line: 6475, column: 12, scope: !8127)
!8130 = !DILocation(line: 6476, column: 11, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8127, file: !1, line: 6476, column: 11)
!8132 = !DILocation(line: 6476, column: 17, scope: !8131)
!8133 = !DILocation(line: 6476, column: 11, scope: !8127)
!8134 = !DILocation(line: 6477, column: 53, scope: !8131)
!8135 = !DILocation(line: 6477, column: 38, scope: !8131)
!8136 = !DILocation(line: 6477, column: 9, scope: !8131)
!8137 = !DILocation(line: 6477, column: 25, scope: !8131)
!8138 = !DILocation(line: 6477, column: 37, scope: !8131)
!8139 = !DILocation(line: 6478, column: 5, scope: !8127)
!8140 = !DILocation(line: 6479, column: 25, scope: !7484)
!8141 = !DILocation(line: 6479, column: 9, scope: !7484)
!8142 = !DILocation(line: 6479, column: 8, scope: !7484)
!8143 = !DILocation(line: 6480, column: 7, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6480, column: 7)
!8145 = !DILocation(line: 6480, column: 13, scope: !8144)
!8146 = !DILocation(line: 6480, column: 7, scope: !7484)
!8147 = !DILocation(line: 6482, column: 31, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8144, file: !1, line: 6481, column: 5)
!8149 = !DILocation(line: 6482, column: 13, scope: !8148)
!8150 = !DILocation(line: 6482, column: 12, scope: !8148)
!8151 = !DILocation(line: 6483, column: 11, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8148, file: !1, line: 6483, column: 11)
!8153 = !DILocation(line: 6483, column: 17, scope: !8152)
!8154 = !DILocation(line: 6483, column: 11, scope: !8148)
!8155 = !DILocation(line: 6485, column: 23, scope: !8152)
!8156 = !DILocation(line: 6484, column: 43, scope: !8152)
!8157 = !DILocation(line: 6484, column: 31, scope: !8152)
!8158 = !DILocation(line: 6484, column: 9, scope: !8152)
!8159 = !DILocation(line: 6484, column: 25, scope: !8152)
!8160 = !DILocation(line: 6484, column: 30, scope: !8152)
!8161 = !DILocation(line: 6486, column: 5, scope: !8148)
!8162 = !DILocation(line: 6487, column: 25, scope: !7484)
!8163 = !DILocation(line: 6487, column: 9, scope: !7484)
!8164 = !DILocation(line: 6487, column: 8, scope: !7484)
!8165 = !DILocation(line: 6488, column: 7, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6488, column: 7)
!8167 = !DILocation(line: 6488, column: 13, scope: !8166)
!8168 = !DILocation(line: 6488, column: 7, scope: !7484)
!8169 = !DILocation(line: 6490, column: 31, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8166, file: !1, line: 6489, column: 5)
!8171 = !DILocation(line: 6490, column: 13, scope: !8170)
!8172 = !DILocation(line: 6490, column: 12, scope: !8170)
!8173 = !DILocation(line: 6491, column: 11, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8170, file: !1, line: 6491, column: 11)
!8175 = !DILocation(line: 6491, column: 17, scope: !8174)
!8176 = !DILocation(line: 6491, column: 11, scope: !8170)
!8177 = !DILocation(line: 6492, column: 53, scope: !8174)
!8178 = !DILocation(line: 6492, column: 40, scope: !8174)
!8179 = !DILocation(line: 6492, column: 60, scope: !8174)
!8180 = !DILocation(line: 6492, column: 9, scope: !8174)
!8181 = !DILocation(line: 6492, column: 25, scope: !8174)
!8182 = !DILocation(line: 6492, column: 39, scope: !8174)
!8183 = !DILocation(line: 6494, column: 5, scope: !8170)
!8184 = !DILocation(line: 6495, column: 25, scope: !7484)
!8185 = !DILocation(line: 6495, column: 9, scope: !7484)
!8186 = !DILocation(line: 6495, column: 8, scope: !7484)
!8187 = !DILocation(line: 6496, column: 7, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6496, column: 7)
!8189 = !DILocation(line: 6496, column: 13, scope: !8188)
!8190 = !DILocation(line: 6496, column: 7, scope: !7484)
!8191 = !DILocation(line: 6498, column: 31, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8188, file: !1, line: 6497, column: 5)
!8193 = !DILocation(line: 6498, column: 13, scope: !8192)
!8194 = !DILocation(line: 6498, column: 12, scope: !8192)
!8195 = !DILocation(line: 6499, column: 11, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8192, file: !1, line: 6499, column: 11)
!8197 = !DILocation(line: 6499, column: 17, scope: !8196)
!8198 = !DILocation(line: 6499, column: 11, scope: !8192)
!8199 = !DILocation(line: 6500, column: 35, scope: !8196)
!8200 = !DILocation(line: 6500, column: 42, scope: !8196)
!8201 = !DILocation(line: 6500, column: 58, scope: !8196)
!8202 = !DILocation(line: 6501, column: 11, scope: !8196)
!8203 = !DILocation(line: 6501, column: 17, scope: !8196)
!8204 = !DILocation(line: 6500, column: 16, scope: !8196)
!8205 = !DILocation(line: 6500, column: 9, scope: !8196)
!8206 = !DILocation(line: 6502, column: 5, scope: !8192)
!8207 = !DILocation(line: 6503, column: 25, scope: !7484)
!8208 = !DILocation(line: 6503, column: 9, scope: !7484)
!8209 = !DILocation(line: 6503, column: 8, scope: !7484)
!8210 = !DILocation(line: 6504, column: 7, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 6504, column: 7)
!8212 = !DILocation(line: 6504, column: 13, scope: !8211)
!8213 = !DILocation(line: 6504, column: 7, scope: !7484)
!8214 = !DILocation(line: 6506, column: 27, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8211, file: !1, line: 6505, column: 5)
!8216 = !DILocation(line: 6506, column: 33, scope: !8215)
!8217 = !DILocation(line: 6506, column: 55, scope: !8215)
!8218 = !DILocation(line: 6506, column: 37, scope: !8215)
!8219 = !DILocation(line: 6506, column: 14, scope: !8215)
!8220 = !DILocation(line: 6507, column: 31, scope: !8215)
!8221 = !DILocation(line: 6507, column: 37, scope: !8215)
!8222 = !DILocation(line: 6507, column: 24, scope: !8215)
!8223 = !DILocation(line: 6507, column: 7, scope: !8215)
!8224 = !DILocation(line: 6507, column: 13, scope: !8215)
!8225 = !DILocation(line: 6507, column: 23, scope: !8215)
!8226 = !DILocation(line: 6508, column: 23, scope: !8215)
!8227 = !DILocation(line: 6508, column: 29, scope: !8215)
!8228 = !DILocation(line: 6508, column: 39, scope: !8215)
!8229 = !DILocation(line: 6508, column: 7, scope: !8215)
!8230 = !DILocation(line: 6508, column: 13, scope: !8215)
!8231 = !DILocation(line: 6508, column: 22, scope: !8215)
!8232 = !DILocation(line: 6509, column: 5, scope: !8215)
!8233 = !DILocation(line: 6510, column: 27, scope: !7484)
!8234 = !DILocation(line: 6510, column: 12, scope: !7484)
!8235 = !DILocation(line: 6510, column: 11, scope: !7484)
!8236 = !DILocation(line: 6511, column: 3, scope: !7484)
!8237 = !DILocation(line: 6512, column: 1, scope: !7484)
!8238 = distinct !DISubprogram(name: "StringToDouble", scope: !8239, file: !8239, line: 42, type: !8240, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!8239 = !DIFile(filename: "./magick/string-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!8240 = !DISubroutineType(types: !8241)
!8241 = !{!715, !8242, !8243}
!8242 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !891)
!8243 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1211)
!8244 = !DILocalVariable(name: "string", arg: 1, scope: !8238, file: !8239, line: 42, type: !8242)
!8245 = !DILocation(line: 42, column: 58, scope: !8238)
!8246 = !DILocalVariable(name: "sentinal", arg: 2, scope: !8238, file: !8239, line: 43, type: !8243)
!8247 = !DILocation(line: 43, column: 19, scope: !8238)
!8248 = !DILocation(line: 45, column: 31, scope: !8238)
!8249 = !DILocation(line: 45, column: 38, scope: !8238)
!8250 = !DILocation(line: 45, column: 10, scope: !8238)
!8251 = !DILocation(line: 45, column: 3, scope: !8238)
!8252 = distinct !DISubprogram(name: "StringToUnsignedLong", scope: !8239, file: !8239, line: 73, type: !8253, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!8253 = !DISubroutineType(types: !8254)
!8254 = !{!685, !8242}
!8255 = !DILocalVariable(name: "value", arg: 1, scope: !8252, file: !8239, line: 73, type: !8242)
!8256 = !DILocation(line: 73, column: 71, scope: !8252)
!8257 = !DILocation(line: 75, column: 18, scope: !8252)
!8258 = !DILocation(line: 75, column: 10, scope: !8252)
!8259 = !DILocation(line: 75, column: 3, scope: !8252)
!8260 = distinct !DISubprogram(name: "StringToLong", scope: !8239, file: !8239, line: 68, type: !8261, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!8261 = !DISubroutineType(types: !8262)
!8262 = !{!708, !8242}
!8263 = !DILocalVariable(name: "value", arg: 1, scope: !8260, file: !8239, line: 68, type: !8242)
!8264 = !DILocation(line: 68, column: 54, scope: !8260)
!8265 = !DILocation(line: 70, column: 17, scope: !8260)
!8266 = !DILocation(line: 70, column: 10, scope: !8260)
!8267 = !DILocation(line: 70, column: 3, scope: !8260)
!8268 = distinct !DISubprogram(name: "IsPoint", scope: !1, file: !1, line: 6237, type: !8269, scopeLine: 6238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!8269 = !DISubroutineType(types: !8270)
!8270 = !{!764, !891}
!8271 = !DILocalVariable(name: "point", arg: 1, scope: !8268, file: !1, line: 6237, type: !891)
!8272 = !DILocation(line: 6237, column: 53, scope: !8268)
!8273 = !DILocalVariable(name: "p", scope: !8268, file: !1, line: 6240, type: !692)
!8274 = !DILocation(line: 6240, column: 6, scope: !8268)
!8275 = !DILocalVariable(name: "value", scope: !8268, file: !1, line: 6243, type: !708)
!8276 = !DILocation(line: 6243, column: 5, scope: !8268)
!8277 = !DILocation(line: 6245, column: 16, scope: !8268)
!8278 = !DILocation(line: 6245, column: 9, scope: !8268)
!8279 = !DILocation(line: 6245, column: 8, scope: !8268)
!8280 = !DILocation(line: 6246, column: 10, scope: !8268)
!8281 = !DILocation(line: 6247, column: 10, scope: !8268)
!8282 = !DILocation(line: 6247, column: 15, scope: !8268)
!8283 = !DILocation(line: 6247, column: 12, scope: !8268)
!8284 = !DILocation(line: 6247, column: 3, scope: !8268)
!8285 = distinct !DISubprogram(name: "DrawSkewX", scope: !1, file: !1, line: 6539, type: !4913, scopeLine: 6540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!8286 = !DILocalVariable(name: "wand", arg: 1, scope: !8285, file: !1, line: 6539, type: !1172)
!8287 = !DILocation(line: 6539, column: 40, scope: !8285)
!8288 = !DILocalVariable(name: "degrees", arg: 2, scope: !8285, file: !1, line: 6539, type: !1203)
!8289 = !DILocation(line: 6539, column: 58, scope: !8285)
!8290 = !DILocation(line: 6543, column: 7, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8285, file: !1, line: 6543, column: 7)
!8292 = !DILocation(line: 6543, column: 13, scope: !8291)
!8293 = !DILocation(line: 6543, column: 19, scope: !8291)
!8294 = !DILocation(line: 6543, column: 7, scope: !8285)
!8295 = !DILocation(line: 6544, column: 60, scope: !8291)
!8296 = !DILocation(line: 6544, column: 66, scope: !8291)
!8297 = !DILocation(line: 6544, column: 12, scope: !8291)
!8298 = !DILocation(line: 6544, column: 5, scope: !8291)
!8299 = !DILocation(line: 6545, column: 20, scope: !8285)
!8300 = !DILocation(line: 6545, column: 41, scope: !8285)
!8301 = !DILocation(line: 6545, column: 10, scope: !8285)
!8302 = !DILocation(line: 6546, column: 1, scope: !8285)
!8303 = distinct !DISubprogram(name: "DrawSkewY", scope: !1, file: !1, line: 6573, type: !4913, scopeLine: 6574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!8304 = !DILocalVariable(name: "wand", arg: 1, scope: !8303, file: !1, line: 6573, type: !1172)
!8305 = !DILocation(line: 6573, column: 40, scope: !8303)
!8306 = !DILocalVariable(name: "degrees", arg: 2, scope: !8303, file: !1, line: 6573, type: !1203)
!8307 = !DILocation(line: 6573, column: 58, scope: !8303)
!8308 = !DILocation(line: 6577, column: 7, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8303, file: !1, line: 6577, column: 7)
!8310 = !DILocation(line: 6577, column: 13, scope: !8309)
!8311 = !DILocation(line: 6577, column: 19, scope: !8309)
!8312 = !DILocation(line: 6577, column: 7, scope: !8303)
!8313 = !DILocation(line: 6578, column: 60, scope: !8309)
!8314 = !DILocation(line: 6578, column: 66, scope: !8309)
!8315 = !DILocation(line: 6578, column: 12, scope: !8309)
!8316 = !DILocation(line: 6578, column: 5, scope: !8309)
!8317 = !DILocation(line: 6579, column: 20, scope: !8303)
!8318 = !DILocation(line: 6579, column: 41, scope: !8303)
!8319 = !DILocation(line: 6579, column: 10, scope: !8303)
!8320 = !DILocation(line: 6580, column: 1, scope: !8303)
!8321 = distinct !DISubprogram(name: "DrawTranslate", scope: !1, file: !1, line: 6611, type: !4469, scopeLine: 6612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!8322 = !DILocalVariable(name: "wand", arg: 1, scope: !8321, file: !1, line: 6611, type: !1172)
!8323 = !DILocation(line: 6611, column: 44, scope: !8321)
!8324 = !DILocalVariable(name: "x", arg: 2, scope: !8321, file: !1, line: 6611, type: !1203)
!8325 = !DILocation(line: 6611, column: 62, scope: !8321)
!8326 = !DILocalVariable(name: "y", arg: 3, scope: !8321, file: !1, line: 6611, type: !1203)
!8327 = !DILocation(line: 6611, column: 77, scope: !8321)
!8328 = !DILocation(line: 6615, column: 7, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8321, file: !1, line: 6615, column: 7)
!8330 = !DILocation(line: 6615, column: 13, scope: !8329)
!8331 = !DILocation(line: 6615, column: 19, scope: !8329)
!8332 = !DILocation(line: 6615, column: 7, scope: !8321)
!8333 = !DILocation(line: 6616, column: 60, scope: !8329)
!8334 = !DILocation(line: 6616, column: 66, scope: !8329)
!8335 = !DILocation(line: 6616, column: 12, scope: !8329)
!8336 = !DILocation(line: 6616, column: 5, scope: !8329)
!8337 = !DILocation(line: 6617, column: 20, scope: !8321)
!8338 = !DILocation(line: 6617, column: 51, scope: !8321)
!8339 = !DILocation(line: 6617, column: 53, scope: !8321)
!8340 = !DILocation(line: 6617, column: 10, scope: !8321)
!8341 = !DILocation(line: 6618, column: 1, scope: !8321)
!8342 = distinct !DISubprogram(name: "DrawSetViewbox", scope: !1, file: !1, line: 6655, type: !8343, scopeLine: 6657, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!8343 = !DISubroutineType(types: !8344)
!8344 = !{null, !1172, !704, !704, !704, !704}
!8345 = !DILocalVariable(name: "wand", arg: 1, scope: !8342, file: !1, line: 6655, type: !1172)
!8346 = !DILocation(line: 6655, column: 45, scope: !8342)
!8347 = !DILocalVariable(name: "x1", arg: 2, scope: !8342, file: !1, line: 6655, type: !704)
!8348 = !DILocation(line: 6655, column: 58, scope: !8342)
!8349 = !DILocalVariable(name: "y1", arg: 3, scope: !8342, file: !1, line: 6655, type: !704)
!8350 = !DILocation(line: 6655, column: 69, scope: !8342)
!8351 = !DILocalVariable(name: "x2", arg: 4, scope: !8342, file: !1, line: 6656, type: !704)
!8352 = !DILocation(line: 6656, column: 11, scope: !8342)
!8353 = !DILocalVariable(name: "y2", arg: 5, scope: !8342, file: !1, line: 6656, type: !704)
!8354 = !DILocation(line: 6656, column: 22, scope: !8342)
!8355 = !DILocation(line: 6660, column: 7, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8342, file: !1, line: 6660, column: 7)
!8357 = !DILocation(line: 6660, column: 13, scope: !8356)
!8358 = !DILocation(line: 6660, column: 19, scope: !8356)
!8359 = !DILocation(line: 6660, column: 7, scope: !8342)
!8360 = !DILocation(line: 6661, column: 60, scope: !8356)
!8361 = !DILocation(line: 6661, column: 66, scope: !8356)
!8362 = !DILocation(line: 6661, column: 12, scope: !8356)
!8363 = !DILocation(line: 6661, column: 5, scope: !8356)
!8364 = !DILocation(line: 6662, column: 20, scope: !8342)
!8365 = !DILocation(line: 6662, column: 70, scope: !8342)
!8366 = !DILocation(line: 6662, column: 61, scope: !8342)
!8367 = !DILocation(line: 6663, column: 14, scope: !8342)
!8368 = !DILocation(line: 6663, column: 5, scope: !8342)
!8369 = !DILocation(line: 6663, column: 26, scope: !8342)
!8370 = !DILocation(line: 6663, column: 17, scope: !8342)
!8371 = !DILocation(line: 6663, column: 38, scope: !8342)
!8372 = !DILocation(line: 6663, column: 29, scope: !8342)
!8373 = !DILocation(line: 6662, column: 10, scope: !8342)
!8374 = !DILocation(line: 6664, column: 1, scope: !8342)
!8375 = distinct !DISubprogram(name: "IsDrawingWand", scope: !1, file: !1, line: 6688, type: !3105, scopeLine: 6689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!8376 = !DILocalVariable(name: "wand", arg: 1, scope: !8375, file: !1, line: 6688, type: !1212)
!8377 = !DILocation(line: 6688, column: 63, scope: !8375)
!8378 = !DILocation(line: 6690, column: 7, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8375, file: !1, line: 6690, column: 7)
!8380 = !DILocation(line: 6690, column: 12, scope: !8379)
!8381 = !DILocation(line: 6690, column: 7, scope: !8375)
!8382 = !DILocation(line: 6691, column: 5, scope: !8379)
!8383 = !DILocation(line: 6692, column: 7, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8375, file: !1, line: 6692, column: 7)
!8385 = !DILocation(line: 6692, column: 13, scope: !8384)
!8386 = !DILocation(line: 6692, column: 23, scope: !8384)
!8387 = !DILocation(line: 6692, column: 7, scope: !8375)
!8388 = !DILocation(line: 6693, column: 5, scope: !8384)
!8389 = !DILocation(line: 6694, column: 22, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8375, file: !1, line: 6694, column: 7)
!8391 = !DILocation(line: 6694, column: 28, scope: !8390)
!8392 = !DILocation(line: 6694, column: 7, scope: !8390)
!8393 = !DILocation(line: 6694, column: 70, scope: !8390)
!8394 = !DILocation(line: 6694, column: 7, scope: !8375)
!8395 = !DILocation(line: 6695, column: 5, scope: !8390)
!8396 = !DILocation(line: 6696, column: 3, scope: !8375)
!8397 = !DILocation(line: 6697, column: 1, scope: !8375)
!8398 = distinct !DISubprogram(name: "PeekDrawingWand", scope: !1, file: !1, line: 6793, type: !8399, scopeLine: 6794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!8399 = !DISubroutineType(types: !8400)
!8400 = !{!687, !1212}
!8401 = !DILocalVariable(name: "wand", arg: 1, scope: !8398, file: !1, line: 6793, type: !1212)
!8402 = !DILocation(line: 6793, column: 57, scope: !8398)
!8403 = !DILocalVariable(name: "draw_info", scope: !8398, file: !1, line: 6796, type: !687)
!8404 = !DILocation(line: 6796, column: 6, scope: !8398)
!8405 = !DILocation(line: 6800, column: 7, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8398, file: !1, line: 6800, column: 7)
!8407 = !DILocation(line: 6800, column: 13, scope: !8406)
!8408 = !DILocation(line: 6800, column: 19, scope: !8406)
!8409 = !DILocation(line: 6800, column: 7, scope: !8398)
!8410 = !DILocation(line: 6801, column: 60, scope: !8406)
!8411 = !DILocation(line: 6801, column: 66, scope: !8406)
!8412 = !DILocation(line: 6801, column: 12, scope: !8406)
!8413 = !DILocation(line: 6801, column: 5, scope: !8406)
!8414 = !DILocation(line: 6802, column: 46, scope: !8398)
!8415 = !DILocation(line: 6802, column: 13, scope: !8398)
!8416 = !DILocation(line: 6802, column: 12, scope: !8398)
!8417 = !DILocation(line: 6803, column: 20, scope: !8398)
!8418 = !DILocation(line: 6803, column: 31, scope: !8398)
!8419 = !DILocation(line: 6803, column: 3, scope: !8398)
!8420 = !DILocation(line: 6804, column: 23, scope: !8398)
!8421 = !DILocation(line: 6804, column: 34, scope: !8398)
!8422 = !DILocation(line: 6804, column: 44, scope: !8398)
!8423 = !DILocation(line: 6804, column: 50, scope: !8398)
!8424 = !DILocation(line: 6804, column: 10, scope: !8398)
!8425 = !DILocation(line: 6805, column: 10, scope: !8398)
!8426 = !DILocation(line: 6805, column: 3, scope: !8398)
!8427 = distinct !DISubprogram(name: "PopDrawingWand", scope: !1, file: !1, line: 6833, type: !2369, scopeLine: 6834, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!8428 = !DILocalVariable(name: "wand", arg: 1, scope: !8427, file: !1, line: 6833, type: !1172)
!8429 = !DILocation(line: 6833, column: 58, scope: !8427)
!8430 = !DILocation(line: 6837, column: 7, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8427, file: !1, line: 6837, column: 7)
!8432 = !DILocation(line: 6837, column: 13, scope: !8431)
!8433 = !DILocation(line: 6837, column: 19, scope: !8431)
!8434 = !DILocation(line: 6837, column: 7, scope: !8427)
!8435 = !DILocation(line: 6838, column: 60, scope: !8431)
!8436 = !DILocation(line: 6838, column: 66, scope: !8431)
!8437 = !DILocation(line: 6838, column: 12, scope: !8431)
!8438 = !DILocation(line: 6838, column: 5, scope: !8431)
!8439 = !DILocation(line: 6839, column: 7, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8427, file: !1, line: 6839, column: 7)
!8441 = !DILocation(line: 6839, column: 13, scope: !8440)
!8442 = !DILocation(line: 6839, column: 19, scope: !8440)
!8443 = !DILocation(line: 6839, column: 7, scope: !8427)
!8444 = !DILocation(line: 6841, column: 7, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8440, file: !1, line: 6840, column: 5)
!8446 = !DILocation(line: 6842, column: 7, scope: !8445)
!8447 = !DILocation(line: 6855, column: 34, scope: !8427)
!8448 = !DILocation(line: 6855, column: 18, scope: !8427)
!8449 = !DILocation(line: 6855, column: 3, scope: !8427)
!8450 = !DILocation(line: 6855, column: 17, scope: !8427)
!8451 = !DILocation(line: 6856, column: 3, scope: !8427)
!8452 = !DILocation(line: 6856, column: 9, scope: !8427)
!8453 = !DILocation(line: 6856, column: 14, scope: !8427)
!8454 = !DILocation(line: 6857, column: 7, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8427, file: !1, line: 6857, column: 7)
!8456 = !DILocation(line: 6857, column: 13, scope: !8455)
!8457 = !DILocation(line: 6857, column: 26, scope: !8455)
!8458 = !DILocation(line: 6857, column: 7, scope: !8427)
!8459 = !DILocation(line: 6858, column: 5, scope: !8455)
!8460 = !DILocation(line: 6858, column: 11, scope: !8455)
!8461 = !DILocation(line: 6858, column: 23, scope: !8455)
!8462 = !DILocation(line: 6859, column: 20, scope: !8427)
!8463 = !DILocation(line: 6859, column: 10, scope: !8427)
!8464 = !DILocation(line: 6860, column: 3, scope: !8427)
!8465 = !DILocation(line: 6861, column: 1, scope: !8427)
!8466 = distinct !DISubprogram(name: "PushDrawingWand", scope: !1, file: !1, line: 6888, type: !2369, scopeLine: 6889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1221)
!8467 = !DILocalVariable(name: "wand", arg: 1, scope: !8466, file: !1, line: 6888, type: !1172)
!8468 = !DILocation(line: 6888, column: 59, scope: !8466)
!8469 = !DILocation(line: 6892, column: 7, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8466, file: !1, line: 6892, column: 7)
!8471 = !DILocation(line: 6892, column: 13, scope: !8470)
!8472 = !DILocation(line: 6892, column: 19, scope: !8470)
!8473 = !DILocation(line: 6892, column: 7, scope: !8466)
!8474 = !DILocation(line: 6893, column: 60, scope: !8470)
!8475 = !DILocation(line: 6893, column: 66, scope: !8470)
!8476 = !DILocation(line: 6893, column: 12, scope: !8470)
!8477 = !DILocation(line: 6893, column: 5, scope: !8470)
!8478 = !DILocation(line: 6894, column: 3, scope: !8466)
!8479 = !DILocation(line: 6894, column: 9, scope: !8466)
!8480 = !DILocation(line: 6894, column: 14, scope: !8466)
!8481 = !DILocation(line: 6895, column: 59, scope: !8466)
!8482 = !DILocation(line: 6895, column: 65, scope: !8466)
!8483 = !DILocation(line: 6896, column: 14, scope: !8466)
!8484 = !DILocation(line: 6896, column: 20, scope: !8466)
!8485 = !DILocation(line: 6896, column: 25, scope: !8466)
!8486 = !DILocation(line: 6895, column: 39, scope: !8466)
!8487 = !DILocation(line: 6895, column: 25, scope: !8466)
!8488 = !DILocation(line: 6895, column: 3, scope: !8466)
!8489 = !DILocation(line: 6895, column: 9, scope: !8466)
!8490 = !DILocation(line: 6895, column: 24, scope: !8466)
!8491 = !DILocation(line: 6897, column: 7, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8466, file: !1, line: 6897, column: 7)
!8493 = !DILocation(line: 6897, column: 13, scope: !8492)
!8494 = !DILocation(line: 6897, column: 29, scope: !8492)
!8495 = !DILocation(line: 6897, column: 7, scope: !8466)
!8496 = !DILocation(line: 6899, column: 7, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8492, file: !1, line: 6898, column: 5)
!8498 = !DILocation(line: 6901, column: 7, scope: !8497)
!8499 = !DILocation(line: 6904, column: 5, scope: !8466)
!8500 = !DILocation(line: 6904, column: 11, scope: !8466)
!8501 = !DILocation(line: 6904, column: 27, scope: !8466)
!8502 = !DILocation(line: 6904, column: 33, scope: !8466)
!8503 = !DILocation(line: 6904, column: 38, scope: !8466)
!8504 = !DILocation(line: 6903, column: 18, scope: !8466)
!8505 = !DILocation(line: 6903, column: 3, scope: !8466)
!8506 = !DILocation(line: 6903, column: 17, scope: !8466)
!8507 = !DILocation(line: 6905, column: 20, scope: !8466)
!8508 = !DILocation(line: 6905, column: 10, scope: !8466)
!8509 = !DILocation(line: 6906, column: 3, scope: !8466)
!8510 = !DILocation(line: 6906, column: 9, scope: !8466)
!8511 = !DILocation(line: 6906, column: 21, scope: !8466)
!8512 = !DILocation(line: 6907, column: 3, scope: !8466)
!8513 = !DILocation(line: 6908, column: 1, scope: !8466)
