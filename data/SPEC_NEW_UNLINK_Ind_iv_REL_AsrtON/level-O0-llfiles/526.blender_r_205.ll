; ModuleID = 'blender/source/blender/blenkernel/intern/node.c'
source_filename = "blender/source/blender/blenkernel/intern/node.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.GHash = type opaque
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type opaque
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type opaque
%struct.SpaceNode = type opaque
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.BlenderRNA = type opaque
%struct.bNodeClipboard = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, i32 }
%struct.NodeTreeIterStore = type { %struct.bNodeTree*, %struct.Scene*, %struct.Material*, %struct.Tex*, %struct.Lamp*, %struct.World*, %struct.FreestyleLineStyle* }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.Group = type opaque
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Lamp = type { %struct.ID, %struct.AnimData*, i16, i16, i32, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.CurveMapping*, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, [2 x i8], %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [4 x i8], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.FreestyleLineStyle = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, i32, float, i32, i32, i32, i32, float, float, float, float, float, i32, i16, i16, i16, i16, i16, i16, i32, i32, float, i16, i16, i16, [3 x i16], i16, i16, i16, i16, i16, i16, i32, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.GHashIterator = type { %struct.GHash*, %struct.Entry*, i32 }
%struct.Entry = type opaque
%struct._gh_Entry = type { i8*, i8*, i8* }
%struct.bNodePreview = type { %struct.bNodeInstanceHashEntry, i8*, i16, i16, i32 }
%struct.bNodeInstanceHashEntry = type { %struct.bNodeInstanceKey, i16, i16 }
%struct.bNodeClipboardExtraInfo = type { %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo*, %struct.ID*, [66 x i8], [1024 x i8] }
%struct.bNodeSocketValueRGBA = type { [4 x float] }
%struct.bNodeSocketValueFloat = type { i32, float, float, float }
%struct.anon.0 = type { %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate* }
%struct.anon.1 = type { %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate* }

@nodetreetypes_hash = internal global %struct.GHash* null, align 8, !dbg !0
@G = external dso_local global %struct.Global, align 8
@NodeTreeTypeUndefined = common dso_local global %struct.bNodeTreeType zeroinitializer, align 8, !dbg !2131
@nodetypes_hash = internal global %struct.GHash* null, align 8, !dbg !2140
@NodeTypeUndefined = common dso_local global %struct.bNodeType zeroinitializer, align 8, !dbg !2134
@nodesockettypes_hash = internal global %struct.GHash* null, align 8, !dbg !2142
@NodeSocketTypeUndefined = common dso_local global %struct.bNodeSocketType zeroinitializer, align 8, !dbg !2137
@.str = private unnamed_addr constant [24 x i8] c"NodeSocketFloatUnsigned\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"NodeSocketFloatPercentage\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"NodeSocketFloatFactor\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"NodeSocketFloatAngle\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"NodeSocketFloatTime\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"NodeSocketFloat\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"NodeSocketIntUnsigned\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"NodeSocketIntPercentage\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"NodeSocketIntFactor\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"NodeSocketInt\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"NodeSocketBool\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"NodeSocketVectorTranslation\00", align 1
@.str.12 = private unnamed_addr constant [26 x i8] c"NodeSocketVectorDirection\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"NodeSocketVectorVelocity\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"NodeSocketVectorAcceleration\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"NodeSocketVectorEuler\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"NodeSocketVectorXYZ\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"NodeSocketVector\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"NodeSocketColor\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"NodeSocketString\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"NodeSocketShader\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c"NodeSocketInterfaceFloatUnsigned\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"NodeSocketInterfaceFloatPercentage\00", align 1
@.str.23 = private unnamed_addr constant [31 x i8] c"NodeSocketInterfaceFloatFactor\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"NodeSocketInterfaceFloatAngle\00", align 1
@.str.25 = private unnamed_addr constant [29 x i8] c"NodeSocketInterfaceFloatTime\00", align 1
@.str.26 = private unnamed_addr constant [25 x i8] c"NodeSocketInterfaceFloat\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"NodeSocketInterfaceIntUnsigned\00", align 1
@.str.28 = private unnamed_addr constant [33 x i8] c"NodeSocketInterfaceIntPercentage\00", align 1
@.str.29 = private unnamed_addr constant [29 x i8] c"NodeSocketInterfaceIntFactor\00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"NodeSocketInterfaceInt\00", align 1
@.str.31 = private unnamed_addr constant [24 x i8] c"NodeSocketInterfaceBool\00", align 1
@.str.32 = private unnamed_addr constant [37 x i8] c"NodeSocketInterfaceVectorTranslation\00", align 1
@.str.33 = private unnamed_addr constant [35 x i8] c"NodeSocketInterfaceVectorDirection\00", align 1
@.str.34 = private unnamed_addr constant [34 x i8] c"NodeSocketInterfaceVectorVelocity\00", align 1
@.str.35 = private unnamed_addr constant [38 x i8] c"NodeSocketInterfaceVectorAcceleration\00", align 1
@.str.36 = private unnamed_addr constant [31 x i8] c"NodeSocketInterfaceVectorEuler\00", align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"NodeSocketInterfaceVectorXYZ\00", align 1
@.str.38 = private unnamed_addr constant [26 x i8] c"NodeSocketInterfaceVector\00", align 1
@.str.39 = private unnamed_addr constant [25 x i8] c"NodeSocketInterfaceColor\00", align 1
@.str.40 = private unnamed_addr constant [26 x i8] c"NodeSocketInterfaceString\00", align 1
@.str.41 = private unnamed_addr constant [26 x i8] c"NodeSocketInterfaceShader\00", align 1
@.str.42 = private unnamed_addr constant [45 x i8] c"Error: static node socket type %d undefined\0A\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.43 = private unnamed_addr constant [5 x i8] c"Node\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.44 = private unnamed_addr constant [9 x i8] c"new node\00", align 1
@.str.45 = private unnamed_addr constant [38 x i8] c"Error: static node type %d undefined\0A\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"dupli node\00", align 1
@RNA_Node = external dso_local global %struct.StructRNA, align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@.str.48 = private unnamed_addr constant [14 x i8] c"new node tree\00", align 1
@.str.49 = private unnamed_addr constant [13 x i8] c"node preview\00", align 1
@.str.50 = private unnamed_addr constant [18 x i8] c"node preview rect\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.51 = private unnamed_addr constant [14 x i8] c"node previews\00", align 1
@NODE_INSTANCE_KEY_BASE = dso_local constant %struct.bNodeInstanceKey { i32 5381 }, align 4, !dbg !2127
@MEM_allocN_len = external dso_local global i64 (i8*)*, align 8
@BLENDER_RNA = external dso_local global %struct.BlenderRNA, align 1
@node_clipboard = internal global %struct.bNodeClipboard zeroinitializer, align 8, !dbg !2144
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.52 = private unnamed_addr constant [24 x i8] c"bNodeClipboardExtraInfo\00", align 1
@NODE_INSTANCE_KEY_NONE = dso_local constant %struct.bNodeInstanceKey zeroinitializer, align 4, !dbg !2129
@.str.53 = private unnamed_addr constant [25 x i8] c"node instance hash ghash\00", align 1
@.str.54 = private unnamed_addr constant [33 x i8] c"temporary node instance key list\00", align 1
@.str.55 = private unnamed_addr constant [18 x i8] c"sorted node array\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"NodeFrame\00", align 1
@.str.57 = private unnamed_addr constant [10 x i8] c"NodeGroup\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"NodeGroupInput\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"NodeGroupOutput\00", align 1
@.str.60 = private unnamed_addr constant [12 x i8] c"NodeReroute\00", align 1
@.str.61 = private unnamed_addr constant [17 x i8] c"ShaderNodeOutput\00", align 1
@.str.62 = private unnamed_addr constant [19 x i8] c"ShaderNodeMaterial\00", align 1
@.str.63 = private unnamed_addr constant [14 x i8] c"ShaderNodeRGB\00", align 1
@.str.64 = private unnamed_addr constant [16 x i8] c"ShaderNodeValue\00", align 1
@.str.65 = private unnamed_addr constant [17 x i8] c"ShaderNodeMixRGB\00", align 1
@.str.66 = private unnamed_addr constant [19 x i8] c"ShaderNodeValToRGB\00", align 1
@.str.67 = private unnamed_addr constant [18 x i8] c"ShaderNodeRGBToBW\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"ShaderNodeTexture\00", align 1
@.str.69 = private unnamed_addr constant [17 x i8] c"ShaderNodeNormal\00", align 1
@.str.70 = private unnamed_addr constant [16 x i8] c"ShaderNodeGamma\00", align 1
@.str.71 = private unnamed_addr constant [25 x i8] c"ShaderNodeBrightContrast\00", align 1
@.str.72 = private unnamed_addr constant [19 x i8] c"ShaderNodeGeometry\00", align 1
@.str.73 = private unnamed_addr constant [18 x i8] c"ShaderNodeMapping\00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c"ShaderNodeVectorCurve\00", align 1
@.str.75 = private unnamed_addr constant [19 x i8] c"ShaderNodeRGBCurve\00", align 1
@.str.76 = private unnamed_addr constant [21 x i8] c"ShaderNodeCameraData\00", align 1
@.str.77 = private unnamed_addr constant [19 x i8] c"ShaderNodeLampData\00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c"ShaderNodeMath\00", align 1
@.str.79 = private unnamed_addr constant [21 x i8] c"ShaderNodeVectorMath\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"ShaderNodeSqueeze\00", align 1
@.str.81 = private unnamed_addr constant [27 x i8] c"ShaderNodeExtendedMaterial\00", align 1
@.str.82 = private unnamed_addr constant [17 x i8] c"ShaderNodeInvert\00", align 1
@.str.83 = private unnamed_addr constant [22 x i8] c"ShaderNodeSeparateRGB\00", align 1
@.str.84 = private unnamed_addr constant [21 x i8] c"ShaderNodeCombineRGB\00", align 1
@.str.85 = private unnamed_addr constant [24 x i8] c"ShaderNodeHueSaturation\00", align 1
@.str.86 = private unnamed_addr constant [25 x i8] c"ShaderNodeOutputMaterial\00", align 1
@.str.87 = private unnamed_addr constant [21 x i8] c"ShaderNodeOutputLamp\00", align 1
@.str.88 = private unnamed_addr constant [22 x i8] c"ShaderNodeOutputWorld\00", align 1
@.str.89 = private unnamed_addr constant [26 x i8] c"ShaderNodeOutputLineStyle\00", align 1
@.str.90 = private unnamed_addr constant [18 x i8] c"ShaderNodeFresnel\00", align 1
@.str.91 = private unnamed_addr constant [22 x i8] c"ShaderNodeLayerWeight\00", align 1
@.str.92 = private unnamed_addr constant [20 x i8] c"ShaderNodeMixShader\00", align 1
@.str.93 = private unnamed_addr constant [20 x i8] c"ShaderNodeAddShader\00", align 1
@.str.94 = private unnamed_addr constant [20 x i8] c"ShaderNodeAttribute\00", align 1
@.str.95 = private unnamed_addr constant [27 x i8] c"ShaderNodeAmbientOcclusion\00", align 1
@.str.96 = private unnamed_addr constant [21 x i8] c"ShaderNodeBackground\00", align 1
@.str.97 = private unnamed_addr constant [18 x i8] c"ShaderNodeHoldout\00", align 1
@.str.98 = private unnamed_addr constant [26 x i8] c"ShaderNodeBsdfAnisotropic\00", align 1
@.str.99 = private unnamed_addr constant [22 x i8] c"ShaderNodeBsdfDiffuse\00", align 1
@.str.100 = private unnamed_addr constant [21 x i8] c"ShaderNodeBsdfGlossy\00", align 1
@.str.101 = private unnamed_addr constant [20 x i8] c"ShaderNodeBsdfGlass\00", align 1
@.str.102 = private unnamed_addr constant [25 x i8] c"ShaderNodeBsdfRefraction\00", align 1
@.str.103 = private unnamed_addr constant [26 x i8] c"ShaderNodeBsdfTranslucent\00", align 1
@.str.104 = private unnamed_addr constant [26 x i8] c"ShaderNodeBsdfTransparent\00", align 1
@.str.105 = private unnamed_addr constant [21 x i8] c"ShaderNodeBsdfVelvet\00", align 1
@.str.106 = private unnamed_addr constant [19 x i8] c"ShaderNodeBsdfToon\00", align 1
@.str.107 = private unnamed_addr constant [19 x i8] c"ShaderNodeBsdfHair\00", align 1
@.str.108 = private unnamed_addr constant [31 x i8] c"ShaderNodeSubsurfaceScattering\00", align 1
@.str.109 = private unnamed_addr constant [27 x i8] c"ShaderNodeVolumeAbsorption\00", align 1
@.str.110 = private unnamed_addr constant [24 x i8] c"ShaderNodeVolumeScatter\00", align 1
@.str.111 = private unnamed_addr constant [19 x i8] c"ShaderNodeEmission\00", align 1
@.str.112 = private unnamed_addr constant [22 x i8] c"ShaderNodeNewGeometry\00", align 1
@.str.113 = private unnamed_addr constant [20 x i8] c"ShaderNodeLightPath\00", align 1
@.str.114 = private unnamed_addr constant [23 x i8] c"ShaderNodeLightFalloff\00", align 1
@.str.115 = private unnamed_addr constant [21 x i8] c"ShaderNodeObjectInfo\00", align 1
@.str.116 = private unnamed_addr constant [23 x i8] c"ShaderNodeParticleInfo\00", align 1
@.str.117 = private unnamed_addr constant [19 x i8] c"ShaderNodeHairInfo\00", align 1
@.str.118 = private unnamed_addr constant [20 x i8] c"ShaderNodeWireframe\00", align 1
@.str.119 = private unnamed_addr constant [21 x i8] c"ShaderNodeWavelength\00", align 1
@.str.120 = private unnamed_addr constant [20 x i8] c"ShaderNodeBlackbody\00", align 1
@.str.121 = private unnamed_addr constant [15 x i8] c"ShaderNodeBump\00", align 1
@.str.122 = private unnamed_addr constant [20 x i8] c"ShaderNodeNormalMap\00", align 1
@.str.123 = private unnamed_addr constant [18 x i8] c"ShaderNodeTangent\00", align 1
@.str.124 = private unnamed_addr constant [17 x i8] c"ShaderNodeScript\00", align 1
@.str.125 = private unnamed_addr constant [19 x i8] c"ShaderNodeTexImage\00", align 1
@.str.126 = private unnamed_addr constant [25 x i8] c"ShaderNodeTexEnvironment\00", align 1
@.str.127 = private unnamed_addr constant [17 x i8] c"ShaderNodeTexSky\00", align 1
@.str.128 = private unnamed_addr constant [22 x i8] c"ShaderNodeTexGradient\00", align 1
@.str.129 = private unnamed_addr constant [19 x i8] c"ShaderNodeTexNoise\00", align 1
@.str.130 = private unnamed_addr constant [19 x i8] c"ShaderNodeTexMagic\00", align 1
@.str.131 = private unnamed_addr constant [18 x i8] c"ShaderNodeTexWave\00", align 1
@.str.132 = private unnamed_addr constant [22 x i8] c"ShaderNodeTexMusgrave\00", align 1
@.str.133 = private unnamed_addr constant [21 x i8] c"ShaderNodeTexVoronoi\00", align 1
@.str.134 = private unnamed_addr constant [21 x i8] c"ShaderNodeTexChecker\00", align 1
@.str.135 = private unnamed_addr constant [19 x i8] c"ShaderNodeTexBrick\00", align 1
@.str.136 = private unnamed_addr constant [19 x i8] c"ShaderNodeTexCoord\00", align 1
@.str.137 = private unnamed_addr constant [26 x i8] c"ShaderNodeVectorTransform\00", align 1
@.str.138 = private unnamed_addr constant [22 x i8] c"ShaderNodeSeparateHSV\00", align 1
@.str.139 = private unnamed_addr constant [21 x i8] c"ShaderNodeCombineHSV\00", align 1
@.str.140 = private unnamed_addr constant [16 x i8] c"ShaderNodeUVMap\00", align 1
@.str.141 = private unnamed_addr constant [24 x i8] c"ShaderNodeUVAlongStroke\00", align 1
@.str.142 = private unnamed_addr constant [22 x i8] c"ShaderNodeSeparateXYZ\00", align 1
@.str.143 = private unnamed_addr constant [21 x i8] c"ShaderNodeCombineXYZ\00", align 1
@.str.144 = private unnamed_addr constant [21 x i8] c"CompositorNodeViewer\00", align 1
@.str.145 = private unnamed_addr constant [18 x i8] c"CompositorNodeRGB\00", align 1
@.str.146 = private unnamed_addr constant [20 x i8] c"CompositorNodeValue\00", align 1
@.str.147 = private unnamed_addr constant [21 x i8] c"CompositorNodeMixRGB\00", align 1
@.str.148 = private unnamed_addr constant [23 x i8] c"CompositorNodeValToRGB\00", align 1
@.str.149 = private unnamed_addr constant [22 x i8] c"CompositorNodeRGBToBW\00", align 1
@.str.150 = private unnamed_addr constant [21 x i8] c"CompositorNodeNormal\00", align 1
@.str.151 = private unnamed_addr constant [23 x i8] c"CompositorNodeCurveVec\00", align 1
@.str.152 = private unnamed_addr constant [23 x i8] c"CompositorNodeCurveRGB\00", align 1
@.str.153 = private unnamed_addr constant [24 x i8] c"CompositorNodeAlphaOver\00", align 1
@.str.154 = private unnamed_addr constant [19 x i8] c"CompositorNodeBlur\00", align 1
@.str.155 = private unnamed_addr constant [21 x i8] c"CompositorNodeFilter\00", align 1
@.str.156 = private unnamed_addr constant [23 x i8] c"CompositorNodeMapValue\00", align 1
@.str.157 = private unnamed_addr constant [23 x i8] c"CompositorNodeMapRange\00", align 1
@.str.158 = private unnamed_addr constant [19 x i8] c"CompositorNodeTime\00", align 1
@.str.159 = private unnamed_addr constant [22 x i8] c"CompositorNodeVecBlur\00", align 1
@.str.160 = private unnamed_addr constant [22 x i8] c"CompositorNodeSepRGBA\00", align 1
@.str.161 = private unnamed_addr constant [22 x i8] c"CompositorNodeSepHSVA\00", align 1
@.str.162 = private unnamed_addr constant [23 x i8] c"CompositorNodeSetAlpha\00", align 1
@.str.163 = private unnamed_addr constant [21 x i8] c"CompositorNodeHueSat\00", align 1
@.str.164 = private unnamed_addr constant [20 x i8] c"CompositorNodeImage\00", align 1
@.str.165 = private unnamed_addr constant [22 x i8] c"CompositorNodeRLayers\00", align 1
@.str.166 = private unnamed_addr constant [24 x i8] c"CompositorNodeComposite\00", align 1
@.str.167 = private unnamed_addr constant [25 x i8] c"CompositorNodeOutputFile\00", align 1
@.str.168 = private unnamed_addr constant [22 x i8] c"CompositorNodeTexture\00", align 1
@.str.169 = private unnamed_addr constant [24 x i8] c"CompositorNodeTranslate\00", align 1
@.str.170 = private unnamed_addr constant [23 x i8] c"CompositorNodeZcombine\00", align 1
@.str.171 = private unnamed_addr constant [23 x i8] c"CompositorNodeCombRGBA\00", align 1
@.str.172 = private unnamed_addr constant [26 x i8] c"CompositorNodeDilateErode\00", align 1
@.str.173 = private unnamed_addr constant [22 x i8] c"CompositorNodeInpaint\00", align 1
@.str.174 = private unnamed_addr constant [24 x i8] c"CompositorNodeDespeckle\00", align 1
@.str.175 = private unnamed_addr constant [21 x i8] c"CompositorNodeRotate\00", align 1
@.str.176 = private unnamed_addr constant [20 x i8] c"CompositorNodeScale\00", align 1
@.str.177 = private unnamed_addr constant [22 x i8] c"CompositorNodeSepYCCA\00", align 1
@.str.178 = private unnamed_addr constant [23 x i8] c"CompositorNodeCombYCCA\00", align 1
@.str.179 = private unnamed_addr constant [22 x i8] c"CompositorNodeSepYUVA\00", align 1
@.str.180 = private unnamed_addr constant [23 x i8] c"CompositorNodeCombYUVA\00", align 1
@.str.181 = private unnamed_addr constant [24 x i8] c"CompositorNodeDiffMatte\00", align 1
@.str.182 = private unnamed_addr constant [25 x i8] c"CompositorNodeColorSpill\00", align 1
@.str.183 = private unnamed_addr constant [26 x i8] c"CompositorNodeChromaMatte\00", align 1
@.str.184 = private unnamed_addr constant [27 x i8] c"CompositorNodeChannelMatte\00", align 1
@.str.185 = private unnamed_addr constant [19 x i8] c"CompositorNodeFlip\00", align 1
@.str.186 = private unnamed_addr constant [26 x i8] c"CompositorNodeSplitViewer\00", align 1
@.str.187 = private unnamed_addr constant [20 x i8] c"CompositorNodeMapUV\00", align 1
@.str.188 = private unnamed_addr constant [21 x i8] c"CompositorNodeIDMask\00", align 1
@.str.189 = private unnamed_addr constant [29 x i8] c"CompositorNodeDoubleEdgeMask\00", align 1
@.str.190 = private unnamed_addr constant [22 x i8] c"CompositorNodeDefocus\00", align 1
@.str.191 = private unnamed_addr constant [23 x i8] c"CompositorNodeDisplace\00", align 1
@.str.192 = private unnamed_addr constant [23 x i8] c"CompositorNodeCombHSVA\00", align 1
@.str.193 = private unnamed_addr constant [19 x i8] c"CompositorNodeMath\00", align 1
@.str.194 = private unnamed_addr constant [24 x i8] c"CompositorNodeLumaMatte\00", align 1
@.str.195 = private unnamed_addr constant [29 x i8] c"CompositorNodeBrightContrast\00", align 1
@.str.196 = private unnamed_addr constant [20 x i8] c"CompositorNodeGamma\00", align 1
@.str.197 = private unnamed_addr constant [21 x i8] c"CompositorNodeInvert\00", align 1
@.str.198 = private unnamed_addr constant [24 x i8] c"CompositorNodeNormalize\00", align 1
@.str.199 = private unnamed_addr constant [19 x i8] c"CompositorNodeCrop\00", align 1
@.str.200 = private unnamed_addr constant [20 x i8] c"CompositorNodeDBlur\00", align 1
@.str.201 = private unnamed_addr constant [28 x i8] c"CompositorNodeBilateralblur\00", align 1
@.str.202 = private unnamed_addr constant [24 x i8] c"CompositorNodePremulKey\00", align 1
@.str.203 = private unnamed_addr constant [20 x i8] c"CompositorNodeGlare\00", align 1
@.str.204 = private unnamed_addr constant [22 x i8] c"CompositorNodeTonemap\00", align 1
@.str.205 = private unnamed_addr constant [23 x i8] c"CompositorNodeLensdist\00", align 1
@.str.206 = private unnamed_addr constant [21 x i8] c"CompositorNodeLevels\00", align 1
@.str.207 = private unnamed_addr constant [25 x i8] c"CompositorNodeColorMatte\00", align 1
@.str.208 = private unnamed_addr constant [28 x i8] c"CompositorNodeDistanceMatte\00", align 1
@.str.209 = private unnamed_addr constant [27 x i8] c"CompositorNodeColorBalance\00", align 1
@.str.210 = private unnamed_addr constant [25 x i8] c"CompositorNodeHueCorrect\00", align 1
@.str.211 = private unnamed_addr constant [24 x i8] c"CompositorNodeMovieClip\00", align 1
@.str.212 = private unnamed_addr constant [24 x i8] c"CompositorNodeTransform\00", align 1
@.str.213 = private unnamed_addr constant [24 x i8] c"CompositorNodeStabilize\00", align 1
@.str.214 = private unnamed_addr constant [30 x i8] c"CompositorNodeMovieDistortion\00", align 1
@.str.215 = private unnamed_addr constant [22 x i8] c"CompositorNodeBoxMask\00", align 1
@.str.216 = private unnamed_addr constant [26 x i8] c"CompositorNodeEllipseMask\00", align 1
@.str.217 = private unnamed_addr constant [25 x i8] c"CompositorNodeBokehImage\00", align 1
@.str.218 = private unnamed_addr constant [24 x i8] c"CompositorNodeBokehBlur\00", align 1
@.str.219 = private unnamed_addr constant [21 x i8] c"CompositorNodeSwitch\00", align 1
@.str.220 = private unnamed_addr constant [30 x i8] c"CompositorNodeColorCorrection\00", align 1
@.str.221 = private unnamed_addr constant [19 x i8] c"CompositorNodeMask\00", align 1
@.str.222 = private unnamed_addr constant [27 x i8] c"CompositorNodeKeyingScreen\00", align 1
@.str.223 = private unnamed_addr constant [21 x i8] c"CompositorNodeKeying\00", align 1
@.str.224 = private unnamed_addr constant [23 x i8] c"CompositorNodeTrackPos\00", align 1
@.str.225 = private unnamed_addr constant [23 x i8] c"CompositorNodePixelate\00", align 1
@.str.226 = private unnamed_addr constant [31 x i8] c"CompositorNodePlaneTrackDeform\00", align 1
@.str.227 = private unnamed_addr constant [24 x i8] c"CompositorNodeCornerPin\00", align 1
@.str.228 = private unnamed_addr constant [23 x i8] c"CompositorNodeSunBeams\00", align 1
@.str.229 = private unnamed_addr constant [18 x i8] c"TextureNodeOutput\00", align 1
@.str.230 = private unnamed_addr constant [19 x i8] c"TextureNodeChecker\00", align 1
@.str.231 = private unnamed_addr constant [19 x i8] c"TextureNodeTexture\00", align 1
@.str.232 = private unnamed_addr constant [18 x i8] c"TextureNodeBricks\00", align 1
@.str.233 = private unnamed_addr constant [16 x i8] c"TextureNodeMath\00", align 1
@.str.234 = private unnamed_addr constant [18 x i8] c"TextureNodeMixRGB\00", align 1
@.str.235 = private unnamed_addr constant [19 x i8] c"TextureNodeRGBToBW\00", align 1
@.str.236 = private unnamed_addr constant [20 x i8] c"TextureNodeValToRGB\00", align 1
@.str.237 = private unnamed_addr constant [17 x i8] c"TextureNodeImage\00", align 1
@.str.238 = private unnamed_addr constant [20 x i8] c"TextureNodeCurveRGB\00", align 1
@.str.239 = private unnamed_addr constant [18 x i8] c"TextureNodeInvert\00", align 1
@.str.240 = private unnamed_addr constant [25 x i8] c"TextureNodeHueSaturation\00", align 1
@.str.241 = private unnamed_addr constant [21 x i8] c"TextureNodeCurveTime\00", align 1
@.str.242 = private unnamed_addr constant [18 x i8] c"TextureNodeRotate\00", align 1
@.str.243 = private unnamed_addr constant [18 x i8] c"TextureNodeViewer\00", align 1
@.str.244 = private unnamed_addr constant [21 x i8] c"TextureNodeTranslate\00", align 1
@.str.245 = private unnamed_addr constant [23 x i8] c"TextureNodeCoordinates\00", align 1
@.str.246 = private unnamed_addr constant [20 x i8] c"TextureNodeDistance\00", align 1
@.str.247 = private unnamed_addr constant [19 x i8] c"TextureNodeCompose\00", align 1
@.str.248 = private unnamed_addr constant [21 x i8] c"TextureNodeDecompose\00", align 1
@.str.249 = private unnamed_addr constant [20 x i8] c"TextureNodeValToNor\00", align 1
@.str.250 = private unnamed_addr constant [17 x i8] c"TextureNodeScale\00", align 1
@.str.251 = private unnamed_addr constant [14 x i8] c"TextureNodeAt\00", align 1
@.str.252 = private unnamed_addr constant [22 x i8] c"TextureNodeTexVoronoi\00", align 1
@.str.253 = private unnamed_addr constant [20 x i8] c"TextureNodeTexBlend\00", align 1
@.str.254 = private unnamed_addr constant [20 x i8] c"TextureNodeTexMagic\00", align 1
@.str.255 = private unnamed_addr constant [21 x i8] c"TextureNodeTexMarble\00", align 1
@.str.256 = private unnamed_addr constant [21 x i8] c"TextureNodeTexClouds\00", align 1
@.str.257 = private unnamed_addr constant [19 x i8] c"TextureNodeTexWood\00", align 1
@.str.258 = private unnamed_addr constant [23 x i8] c"TextureNodeTexMusgrave\00", align 1
@.str.259 = private unnamed_addr constant [20 x i8] c"TextureNodeTexNoise\00", align 1
@.str.260 = private unnamed_addr constant [21 x i8] c"TextureNodeTexStucci\00", align 1
@.str.261 = private unnamed_addr constant [24 x i8] c"TextureNodeTexDistNoise\00", align 1
@.str.262 = private unnamed_addr constant [22 x i8] c"nodetreetypes_hash gh\00", align 1
@.str.263 = private unnamed_addr constant [18 x i8] c"nodetypes_hash gh\00", align 1
@.str.264 = private unnamed_addr constant [24 x i8] c"nodesockettypes_hash gh\00", align 1
@.str.265 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str.266 = private unnamed_addr constant [5 x i8] c"sock\00", align 1
@.str.267 = private unnamed_addr constant [12 x i8] c"nodes[\22%s\22]\00", align 1
@.str.268 = private unnamed_addr constant [16 x i8] c"socket template\00", align 1
@.str.269 = private unnamed_addr constant [9 x i8] c"Input_%d\00", align 1
@.str.270 = private unnamed_addr constant [10 x i8] c"Output_%d\00", align 1
@.str.271 = private unnamed_addr constant [21 x i8] c"NodeTreeInterface_%s\00", align 1
@.str.272 = private unnamed_addr constant [23 x i8] c"Node Tree %s Interface\00", align 1
@.str.273 = private unnamed_addr constant [38 x i8] c"Interface properties of node group %s\00", align 1
@RNA_PropertyGroup = external dso_local global %struct.StructRNA, align 1
@.str.274 = private unnamed_addr constant [18 x i8] c"NodeTreeUndefined\00", align 1
@.str.275 = private unnamed_addr constant [10 x i8] c"Undefined\00", align 1
@.str.276 = private unnamed_addr constant [25 x i8] c"Undefined Node Tree Type\00", align 1
@.str.277 = private unnamed_addr constant [14 x i8] c"NodeUndefined\00", align 1
@.str.278 = private unnamed_addr constant [20 x i8] c"NodeSocketUndefined\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeSetTypes(%struct.bContext* %C, %struct.bNodeTree* %ntree) #0 !dbg !2157 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2161, metadata !DIExpression()), !dbg !2162
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !2163, metadata !DIExpression()), !dbg !2164
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !2165, metadata !DIExpression()), !dbg !2166
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !2167, metadata !DIExpression()), !dbg !2168
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2169
  %init = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 10, !dbg !2170
  %1 = load i32, i32* %init, align 4, !dbg !2171
  %or = or i32 %1, 1, !dbg !2171
  store i32 %or, i32* %init, align 4, !dbg !2171
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2172
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2173
  %idname = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 3, !dbg !2174
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !2173
  %call = call %struct.bNodeTreeType* @ntreeTypeFind(i8* %arraydecay), !dbg !2175
  call void @ntree_set_typeinfo(%struct.bNodeTree* %2, %struct.bNodeTreeType* %call), !dbg !2176
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2177
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %4, i32 0, i32 7, !dbg !2179
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !2180
  %5 = load i8*, i8** %first, align 8, !dbg !2180
  %6 = bitcast i8* %5 to %struct.bNode*, !dbg !2177
  store %struct.bNode* %6, %struct.bNode** %node, align 8, !dbg !2181
  br label %for.cond, !dbg !2182

for.cond:                                         ; preds = %for.inc21, %entry
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !2183
  %tobool = icmp ne %struct.bNode* %7, null, !dbg !2185
  br i1 %tobool, label %for.body, label %for.end23, !dbg !2185

for.body:                                         ; preds = %for.cond
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2186
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2188
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !2189
  %11 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !2190
  %idname1 = getelementptr inbounds %struct.bNode, %struct.bNode* %11, i32 0, i32 5, !dbg !2191
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !2190
  %call3 = call %struct.bNodeType* @nodeTypeFind(i8* %arraydecay2), !dbg !2192
  call void @node_set_typeinfo(%struct.bContext* %8, %struct.bNodeTree* %9, %struct.bNode* %10, %struct.bNodeType* %call3), !dbg !2193
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !2194
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 17, !dbg !2196
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !2197
  %13 = load i8*, i8** %first4, align 8, !dbg !2197
  %14 = bitcast i8* %13 to %struct.bNodeSocket*, !dbg !2194
  store %struct.bNodeSocket* %14, %struct.bNodeSocket** %sock, align 8, !dbg !2198
  br label %for.cond5, !dbg !2199

for.cond5:                                        ; preds = %for.inc, %for.body
  %15 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2200
  %tobool6 = icmp ne %struct.bNodeSocket* %15, null, !dbg !2202
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !2202

for.body7:                                        ; preds = %for.cond5
  %16 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2203
  %17 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2204
  %18 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2205
  %idname8 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %18, i32 0, i32 12, !dbg !2206
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %idname8, i64 0, i64 0, !dbg !2205
  %call10 = call %struct.bNodeSocketType* @nodeSocketTypeFind(i8* %arraydecay9), !dbg !2207
  call void @node_socket_set_typeinfo(%struct.bNodeTree* %16, %struct.bNodeSocket* %17, %struct.bNodeSocketType* %call10), !dbg !2208
  br label %for.inc, !dbg !2208

for.inc:                                          ; preds = %for.body7
  %19 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2209
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %19, i32 0, i32 0, !dbg !2210
  %20 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !2210
  store %struct.bNodeSocket* %20, %struct.bNodeSocket** %sock, align 8, !dbg !2211
  br label %for.cond5, !dbg !2212, !llvm.loop !2213

for.end:                                          ; preds = %for.cond5
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !2215
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 18, !dbg !2217
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !2218
  %22 = load i8*, i8** %first11, align 8, !dbg !2218
  %23 = bitcast i8* %22 to %struct.bNodeSocket*, !dbg !2215
  store %struct.bNodeSocket* %23, %struct.bNodeSocket** %sock, align 8, !dbg !2219
  br label %for.cond12, !dbg !2220

for.cond12:                                       ; preds = %for.inc18, %for.end
  %24 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2221
  %tobool13 = icmp ne %struct.bNodeSocket* %24, null, !dbg !2223
  br i1 %tobool13, label %for.body14, label %for.end20, !dbg !2223

for.body14:                                       ; preds = %for.cond12
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2224
  %26 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2225
  %27 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2226
  %idname15 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %27, i32 0, i32 12, !dbg !2227
  %arraydecay16 = getelementptr inbounds [64 x i8], [64 x i8]* %idname15, i64 0, i64 0, !dbg !2226
  %call17 = call %struct.bNodeSocketType* @nodeSocketTypeFind(i8* %arraydecay16), !dbg !2228
  call void @node_socket_set_typeinfo(%struct.bNodeTree* %25, %struct.bNodeSocket* %26, %struct.bNodeSocketType* %call17), !dbg !2229
  br label %for.inc18, !dbg !2229

for.inc18:                                        ; preds = %for.body14
  %28 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2230
  %next19 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %28, i32 0, i32 0, !dbg !2231
  %29 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next19, align 8, !dbg !2231
  store %struct.bNodeSocket* %29, %struct.bNodeSocket** %sock, align 8, !dbg !2232
  br label %for.cond12, !dbg !2233, !llvm.loop !2234

for.end20:                                        ; preds = %for.cond12
  br label %for.inc21, !dbg !2236

for.inc21:                                        ; preds = %for.end20
  %30 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !2237
  %next22 = getelementptr inbounds %struct.bNode, %struct.bNode* %30, i32 0, i32 0, !dbg !2238
  %31 = load %struct.bNode*, %struct.bNode** %next22, align 8, !dbg !2238
  store %struct.bNode* %31, %struct.bNode** %node, align 8, !dbg !2239
  br label %for.cond, !dbg !2240, !llvm.loop !2241

for.end23:                                        ; preds = %for.cond
  %32 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2243
  %inputs24 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %32, i32 0, i32 22, !dbg !2245
  %first25 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs24, i32 0, i32 0, !dbg !2246
  %33 = load i8*, i8** %first25, align 8, !dbg !2246
  %34 = bitcast i8* %33 to %struct.bNodeSocket*, !dbg !2243
  store %struct.bNodeSocket* %34, %struct.bNodeSocket** %sock, align 8, !dbg !2247
  br label %for.cond26, !dbg !2248

for.cond26:                                       ; preds = %for.inc32, %for.end23
  %35 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2249
  %tobool27 = icmp ne %struct.bNodeSocket* %35, null, !dbg !2251
  br i1 %tobool27, label %for.body28, label %for.end34, !dbg !2251

for.body28:                                       ; preds = %for.cond26
  %36 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2252
  %37 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2253
  %38 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2254
  %idname29 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %38, i32 0, i32 12, !dbg !2255
  %arraydecay30 = getelementptr inbounds [64 x i8], [64 x i8]* %idname29, i64 0, i64 0, !dbg !2254
  %call31 = call %struct.bNodeSocketType* @nodeSocketTypeFind(i8* %arraydecay30), !dbg !2256
  call void @node_socket_set_typeinfo(%struct.bNodeTree* %36, %struct.bNodeSocket* %37, %struct.bNodeSocketType* %call31), !dbg !2257
  br label %for.inc32, !dbg !2257

for.inc32:                                        ; preds = %for.body28
  %39 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2258
  %next33 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %39, i32 0, i32 0, !dbg !2259
  %40 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next33, align 8, !dbg !2259
  store %struct.bNodeSocket* %40, %struct.bNodeSocket** %sock, align 8, !dbg !2260
  br label %for.cond26, !dbg !2261, !llvm.loop !2262

for.end34:                                        ; preds = %for.cond26
  %41 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2264
  %outputs35 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %41, i32 0, i32 23, !dbg !2266
  %first36 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs35, i32 0, i32 0, !dbg !2267
  %42 = load i8*, i8** %first36, align 8, !dbg !2267
  %43 = bitcast i8* %42 to %struct.bNodeSocket*, !dbg !2264
  store %struct.bNodeSocket* %43, %struct.bNodeSocket** %sock, align 8, !dbg !2268
  br label %for.cond37, !dbg !2269

for.cond37:                                       ; preds = %for.inc43, %for.end34
  %44 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2270
  %tobool38 = icmp ne %struct.bNodeSocket* %44, null, !dbg !2272
  br i1 %tobool38, label %for.body39, label %for.end45, !dbg !2272

for.body39:                                       ; preds = %for.cond37
  %45 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2273
  %46 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2274
  %47 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2275
  %idname40 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %47, i32 0, i32 12, !dbg !2276
  %arraydecay41 = getelementptr inbounds [64 x i8], [64 x i8]* %idname40, i64 0, i64 0, !dbg !2275
  %call42 = call %struct.bNodeSocketType* @nodeSocketTypeFind(i8* %arraydecay41), !dbg !2277
  call void @node_socket_set_typeinfo(%struct.bNodeTree* %45, %struct.bNodeSocket* %46, %struct.bNodeSocketType* %call42), !dbg !2278
  br label %for.inc43, !dbg !2278

for.inc43:                                        ; preds = %for.body39
  %48 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2279
  %next44 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %48, i32 0, i32 0, !dbg !2280
  %49 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next44, align 8, !dbg !2280
  store %struct.bNodeSocket* %49, %struct.bNodeSocket** %sock, align 8, !dbg !2281
  br label %for.cond37, !dbg !2282, !llvm.loop !2283

for.end45:                                        ; preds = %for.cond37
  ret void, !dbg !2285
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal void @ntree_set_typeinfo(%struct.bNodeTree* %ntree, %struct.bNodeTreeType* %typeinfo) #0 !dbg !2286 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %typeinfo.addr = alloca %struct.bNodeTreeType*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !2290, metadata !DIExpression()), !dbg !2291
  store %struct.bNodeTreeType* %typeinfo, %struct.bNodeTreeType** %typeinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTreeType** %typeinfo.addr, metadata !2292, metadata !DIExpression()), !dbg !2293
  %0 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo.addr, align 8, !dbg !2294
  %tobool = icmp ne %struct.bNodeTreeType* %0, null, !dbg !2294
  br i1 %tobool, label %if.then, label %if.else, !dbg !2296

if.then:                                          ; preds = %entry
  %1 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo.addr, align 8, !dbg !2297
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2299
  %typeinfo1 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 2, !dbg !2300
  store %struct.bNodeTreeType* %1, %struct.bNodeTreeType** %typeinfo1, align 8, !dbg !2301
  %3 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo.addr, align 8, !dbg !2302
  %type = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %3, i32 0, i32 0, !dbg !2303
  %4 = load i32, i32* %type, align 8, !dbg !2303
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2304
  %type2 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 9, !dbg !2305
  store i32 %4, i32* %type2, align 8, !dbg !2306
  br label %if.end, !dbg !2307

if.else:                                          ; preds = %entry
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2308
  %typeinfo3 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 2, !dbg !2310
  store %struct.bNodeTreeType* @NodeTreeTypeUndefined, %struct.bNodeTreeType** %typeinfo3, align 8, !dbg !2311
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2312
  %init = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 10, !dbg !2313
  %8 = load i32, i32* %init, align 4, !dbg !2314
  %and = and i32 %8, -2, !dbg !2314
  store i32 %and, i32* %init, align 4, !dbg !2314
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2315
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeTreeType* @ntreeTypeFind(i8* %idname) #0 !dbg !2316 {
entry:
  %retval = alloca %struct.bNodeTreeType*, align 8
  %idname.addr = alloca i8*, align 8
  %nt = alloca %struct.bNodeTreeType*, align 8
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !2319, metadata !DIExpression()), !dbg !2320
  call void @llvm.dbg.declare(metadata %struct.bNodeTreeType** %nt, metadata !2321, metadata !DIExpression()), !dbg !2322
  %0 = load i8*, i8** %idname.addr, align 8, !dbg !2323
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !2323
  %1 = load i8, i8* %arrayidx, align 1, !dbg !2323
  %tobool = icmp ne i8 %1, 0, !dbg !2323
  br i1 %tobool, label %if.then, label %if.end3, !dbg !2325

if.then:                                          ; preds = %entry
  %2 = load %struct.GHash*, %struct.GHash** @nodetreetypes_hash, align 8, !dbg !2326
  %3 = load i8*, i8** %idname.addr, align 8, !dbg !2328
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %2, i8* %3), !dbg !2329
  %4 = bitcast i8* %call to %struct.bNodeTreeType*, !dbg !2329
  store %struct.bNodeTreeType* %4, %struct.bNodeTreeType** %nt, align 8, !dbg !2330
  %5 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %nt, align 8, !dbg !2331
  %tobool1 = icmp ne %struct.bNodeTreeType* %5, null, !dbg !2331
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2333

if.then2:                                         ; preds = %if.then
  %6 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %nt, align 8, !dbg !2334
  store %struct.bNodeTreeType* %6, %struct.bNodeTreeType** %retval, align 8, !dbg !2335
  br label %return, !dbg !2335

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !2336

if.end3:                                          ; preds = %if.end, %entry
  store %struct.bNodeTreeType* null, %struct.bNodeTreeType** %retval, align 8, !dbg !2337
  br label %return, !dbg !2337

return:                                           ; preds = %if.end3, %if.then2
  %7 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %retval, align 8, !dbg !2338
  ret %struct.bNodeTreeType* %7, !dbg !2338
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_set_typeinfo(%struct.bContext* %C, %struct.bNodeTree* %ntree, %struct.bNode* %node, %struct.bNodeType* %typeinfo) #0 !dbg !2339 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %typeinfo.addr = alloca %struct.bNodeType*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2343, metadata !DIExpression()), !dbg !2344
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !2345, metadata !DIExpression()), !dbg !2346
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !2347, metadata !DIExpression()), !dbg !2348
  store %struct.bNodeType* %typeinfo, %struct.bNodeType** %typeinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %typeinfo.addr, metadata !2349, metadata !DIExpression()), !dbg !2350
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2351
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 7, !dbg !2353
  %1 = load i32, i32* %flag, align 8, !dbg !2353
  %and = and i32 %1, 65536, !dbg !2354
  %tobool = icmp ne i32 %and, 0, !dbg !2354
  br i1 %tobool, label %if.then, label %if.end6, !dbg !2355

if.then:                                          ; preds = %entry
  %2 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo.addr, align 8, !dbg !2356
  %tobool1 = icmp ne %struct.bNodeType* %2, null, !dbg !2356
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !2359

land.lhs.true:                                    ; preds = %if.then
  %3 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo.addr, align 8, !dbg !2360
  %storagename = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %3, i32 0, i32 19, !dbg !2361
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %storagename, i64 0, i64 0, !dbg !2360
  %4 = load i8, i8* %arrayidx, align 8, !dbg !2360
  %conv = zext i8 %4 to i32, !dbg !2360
  %tobool2 = icmp ne i32 %conv, 0, !dbg !2360
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !2362

land.lhs.true3:                                   ; preds = %land.lhs.true
  %5 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2363
  %storage = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 21, !dbg !2364
  %6 = load i8*, i8** %storage, align 8, !dbg !2364
  %tobool4 = icmp ne i8* %6, null, !dbg !2363
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !2365

if.then5:                                         ; preds = %land.lhs.true3
  store %struct.bNodeType* null, %struct.bNodeType** %typeinfo.addr, align 8, !dbg !2366
  br label %if.end, !dbg !2367

if.end:                                           ; preds = %if.then5, %land.lhs.true3, %land.lhs.true, %if.then
  br label %if.end6, !dbg !2368

if.end6:                                          ; preds = %if.end, %entry
  %7 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo.addr, align 8, !dbg !2369
  %tobool7 = icmp ne %struct.bNodeType* %7, null, !dbg !2369
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !2371

if.then8:                                         ; preds = %if.end6
  %8 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo.addr, align 8, !dbg !2372
  %9 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2374
  %typeinfo9 = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 4, !dbg !2375
  store %struct.bNodeType* %8, %struct.bNodeType** %typeinfo9, align 8, !dbg !2376
  %10 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo.addr, align 8, !dbg !2377
  %type = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %10, i32 0, i32 4, !dbg !2378
  %11 = load i32, i32* %type, align 4, !dbg !2378
  %conv10 = trunc i32 %11 to i16, !dbg !2377
  %12 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2379
  %type11 = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 8, !dbg !2380
  store i16 %conv10, i16* %type11, align 4, !dbg !2381
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2382
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2383
  %15 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2384
  call void @node_init(%struct.bContext* %13, %struct.bNodeTree* %14, %struct.bNode* %15), !dbg !2385
  br label %if.end14, !dbg !2386

if.else:                                          ; preds = %if.end6
  %16 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2387
  %typeinfo12 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 4, !dbg !2389
  store %struct.bNodeType* @NodeTypeUndefined, %struct.bNodeType** %typeinfo12, align 8, !dbg !2390
  %17 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2391
  %init = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %17, i32 0, i32 10, !dbg !2392
  %18 = load i32, i32* %init, align 4, !dbg !2393
  %and13 = and i32 %18, -2, !dbg !2393
  store i32 %and13, i32* %init, align 4, !dbg !2393
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then8
  ret void, !dbg !2394
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeType* @nodeTypeFind(i8* %idname) #0 !dbg !2395 {
entry:
  %retval = alloca %struct.bNodeType*, align 8
  %idname.addr = alloca i8*, align 8
  %nt = alloca %struct.bNodeType*, align 8
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !2398, metadata !DIExpression()), !dbg !2399
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %nt, metadata !2400, metadata !DIExpression()), !dbg !2401
  %0 = load i8*, i8** %idname.addr, align 8, !dbg !2402
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !2402
  %1 = load i8, i8* %arrayidx, align 1, !dbg !2402
  %tobool = icmp ne i8 %1, 0, !dbg !2402
  br i1 %tobool, label %if.then, label %if.end3, !dbg !2404

if.then:                                          ; preds = %entry
  %2 = load %struct.GHash*, %struct.GHash** @nodetypes_hash, align 8, !dbg !2405
  %3 = load i8*, i8** %idname.addr, align 8, !dbg !2407
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %2, i8* %3), !dbg !2408
  %4 = bitcast i8* %call to %struct.bNodeType*, !dbg !2408
  store %struct.bNodeType* %4, %struct.bNodeType** %nt, align 8, !dbg !2409
  %5 = load %struct.bNodeType*, %struct.bNodeType** %nt, align 8, !dbg !2410
  %tobool1 = icmp ne %struct.bNodeType* %5, null, !dbg !2410
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2412

if.then2:                                         ; preds = %if.then
  %6 = load %struct.bNodeType*, %struct.bNodeType** %nt, align 8, !dbg !2413
  store %struct.bNodeType* %6, %struct.bNodeType** %retval, align 8, !dbg !2414
  br label %return, !dbg !2414

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !2415

if.end3:                                          ; preds = %if.end, %entry
  store %struct.bNodeType* null, %struct.bNodeType** %retval, align 8, !dbg !2416
  br label %return, !dbg !2416

return:                                           ; preds = %if.end3, %if.then2
  %7 = load %struct.bNodeType*, %struct.bNodeType** %retval, align 8, !dbg !2417
  ret %struct.bNodeType* %7, !dbg !2417
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_socket_set_typeinfo(%struct.bNodeTree* %ntree, %struct.bNodeSocket* %sock, %struct.bNodeSocketType* %typeinfo) #0 !dbg !2418 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %sock.addr = alloca %struct.bNodeSocket*, align 8
  %typeinfo.addr = alloca %struct.bNodeSocketType*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !2422, metadata !DIExpression()), !dbg !2423
  store %struct.bNodeSocket* %sock, %struct.bNodeSocket** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock.addr, metadata !2424, metadata !DIExpression()), !dbg !2425
  store %struct.bNodeSocketType* %typeinfo, %struct.bNodeSocketType** %typeinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketType** %typeinfo.addr, metadata !2426, metadata !DIExpression()), !dbg !2427
  %0 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %typeinfo.addr, align 8, !dbg !2428
  %tobool = icmp ne %struct.bNodeSocketType* %0, null, !dbg !2428
  br i1 %tobool, label %if.then, label %if.else, !dbg !2430

if.then:                                          ; preds = %entry
  %1 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %typeinfo.addr, align 8, !dbg !2431
  %2 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !2433
  %typeinfo1 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %2, i32 0, i32 11, !dbg !2434
  store %struct.bNodeSocketType* %1, %struct.bNodeSocketType** %typeinfo1, align 8, !dbg !2435
  %3 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %typeinfo.addr, align 8, !dbg !2436
  %type = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %3, i32 0, i32 11, !dbg !2437
  %4 = load i32, i32* %type, align 8, !dbg !2437
  %conv = trunc i32 %4 to i16, !dbg !2436
  %5 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !2438
  %type2 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %5, i32 0, i32 7, !dbg !2439
  store i16 %conv, i16* %type2, align 8, !dbg !2440
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !2441
  %default_value = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %6, i32 0, i32 15, !dbg !2443
  %7 = load i8*, i8** %default_value, align 8, !dbg !2443
  %cmp = icmp eq i8* %7, null, !dbg !2444
  br i1 %cmp, label %if.then4, label %if.end, !dbg !2445

if.then4:                                         ; preds = %if.then
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !2446
  call void @node_socket_init_default_value(%struct.bNodeSocket* %8), !dbg !2448
  br label %if.end, !dbg !2449

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end6, !dbg !2450

if.else:                                          ; preds = %entry
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !2451
  %typeinfo5 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %9, i32 0, i32 11, !dbg !2453
  store %struct.bNodeSocketType* @NodeSocketTypeUndefined, %struct.bNodeSocketType** %typeinfo5, align 8, !dbg !2454
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2455
  %init = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %10, i32 0, i32 10, !dbg !2456
  %11 = load i32, i32* %init, align 4, !dbg !2457
  %and = and i32 %11, -2, !dbg !2457
  store i32 %and, i32* %init, align 4, !dbg !2457
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  ret void, !dbg !2458
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeSocketType* @nodeSocketTypeFind(i8* %idname) #0 !dbg !2459 {
entry:
  %retval = alloca %struct.bNodeSocketType*, align 8
  %idname.addr = alloca i8*, align 8
  %st = alloca %struct.bNodeSocketType*, align 8
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !2462, metadata !DIExpression()), !dbg !2463
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketType** %st, metadata !2464, metadata !DIExpression()), !dbg !2465
  %0 = load i8*, i8** %idname.addr, align 8, !dbg !2466
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !2466
  %1 = load i8, i8* %arrayidx, align 1, !dbg !2466
  %tobool = icmp ne i8 %1, 0, !dbg !2466
  br i1 %tobool, label %if.then, label %if.end3, !dbg !2468

if.then:                                          ; preds = %entry
  %2 = load %struct.GHash*, %struct.GHash** @nodesockettypes_hash, align 8, !dbg !2469
  %3 = load i8*, i8** %idname.addr, align 8, !dbg !2471
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %2, i8* %3), !dbg !2472
  %4 = bitcast i8* %call to %struct.bNodeSocketType*, !dbg !2472
  store %struct.bNodeSocketType* %4, %struct.bNodeSocketType** %st, align 8, !dbg !2473
  %5 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %st, align 8, !dbg !2474
  %tobool1 = icmp ne %struct.bNodeSocketType* %5, null, !dbg !2474
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2476

if.then2:                                         ; preds = %if.then
  %6 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %st, align 8, !dbg !2477
  store %struct.bNodeSocketType* %6, %struct.bNodeSocketType** %retval, align 8, !dbg !2478
  br label %return, !dbg !2478

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !2479

if.end3:                                          ; preds = %if.end, %entry
  store %struct.bNodeSocketType* null, %struct.bNodeSocketType** %retval, align 8, !dbg !2480
  br label %return, !dbg !2480

return:                                           ; preds = %if.end3, %if.then2
  %7 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %retval, align 8, !dbg !2481
  ret %struct.bNodeSocketType* %7, !dbg !2481
}

declare dso_local i8* @BLI_ghash_lookup(%struct.GHash*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeTypeAdd(%struct.bNodeTreeType* %nt) #0 !dbg !2482 {
entry:
  %nt.addr = alloca %struct.bNodeTreeType*, align 8
  store %struct.bNodeTreeType* %nt, %struct.bNodeTreeType** %nt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTreeType** %nt.addr, metadata !2485, metadata !DIExpression()), !dbg !2486
  %0 = load %struct.GHash*, %struct.GHash** @nodetreetypes_hash, align 8, !dbg !2487
  %1 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %nt.addr, align 8, !dbg !2488
  %idname = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %1, i32 0, i32 1, !dbg !2489
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !2488
  %2 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %nt.addr, align 8, !dbg !2490
  %3 = bitcast %struct.bNodeTreeType* %2 to i8*, !dbg !2490
  call void @BLI_ghash_insert(%struct.GHash* %0, i8* %arraydecay, i8* %3), !dbg !2491
  %4 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2492
  %5 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %nt.addr, align 8, !dbg !2493
  call void @update_typeinfo(%struct.Main* %4, %struct.bContext* null, %struct.bNodeTreeType* %5, %struct.bNodeType* null, %struct.bNodeSocketType* null, i8 zeroext 0), !dbg !2494
  ret void, !dbg !2495
}

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @update_typeinfo(%struct.Main* %bmain, %struct.bContext* %C, %struct.bNodeTreeType* %treetype, %struct.bNodeType* %nodetype, %struct.bNodeSocketType* %socktype, i8 zeroext %unregister) #0 !dbg !2496 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %treetype.addr = alloca %struct.bNodeTreeType*, align 8
  %nodetype.addr = alloca %struct.bNodeType*, align 8
  %socktype.addr = alloca %struct.bNodeSocketType*, align 8
  %unregister.addr = alloca i8, align 1
  %_nstore = alloca %struct.NodeTreeIterStore, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %id = alloca %struct.ID*, align 8
  %node = alloca %struct.bNode*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !2560, metadata !DIExpression()), !dbg !2561
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2562, metadata !DIExpression()), !dbg !2563
  store %struct.bNodeTreeType* %treetype, %struct.bNodeTreeType** %treetype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTreeType** %treetype.addr, metadata !2564, metadata !DIExpression()), !dbg !2565
  store %struct.bNodeType* %nodetype, %struct.bNodeType** %nodetype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %nodetype.addr, metadata !2566, metadata !DIExpression()), !dbg !2567
  store %struct.bNodeSocketType* %socktype, %struct.bNodeSocketType** %socktype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketType** %socktype.addr, metadata !2568, metadata !DIExpression()), !dbg !2569
  store i8 %unregister, i8* %unregister.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %unregister.addr, metadata !2570, metadata !DIExpression()), !dbg !2571
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !2572
  %tobool = icmp ne %struct.Main* %0, null, !dbg !2572
  br i1 %tobool, label %if.end, label %if.then, !dbg !2574

if.then:                                          ; preds = %entry
  br label %while.end, !dbg !2575

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore* %_nstore, metadata !2576, metadata !DIExpression()), !dbg !2587
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !2588, metadata !DIExpression()), !dbg !2587
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !2589, metadata !DIExpression()), !dbg !2587
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !2587
  call void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore* %_nstore, %struct.Main* %1), !dbg !2587
  br label %while.cond, !dbg !2587

while.cond:                                       ; preds = %if.end130, %if.end
  %call = call zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore* %_nstore, %struct.bNodeTree** %ntree, %struct.ID** %id), !dbg !2587
  %conv = zext i8 %call to i32, !dbg !2587
  %cmp = icmp eq i32 %conv, 1, !dbg !2587
  br i1 %cmp, label %while.body, label %while.end, !dbg !2587

while.body:                                       ; preds = %while.cond
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !2590
  %tobool2 = icmp ne %struct.bNodeTree* %2, null, !dbg !2590
  br i1 %tobool2, label %if.then3, label %if.end130, !dbg !2593

if.then3:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !2594, metadata !DIExpression()), !dbg !2597
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !2598, metadata !DIExpression()), !dbg !2599
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !2600
  %init = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 10, !dbg !2601
  %4 = load i32, i32* %init, align 4, !dbg !2602
  %or = or i32 %4, 1, !dbg !2602
  store i32 %or, i32* %init, align 4, !dbg !2602
  %5 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %treetype.addr, align 8, !dbg !2603
  %tobool4 = icmp ne %struct.bNodeTreeType* %5, null, !dbg !2603
  br i1 %tobool4, label %land.lhs.true, label %if.end13, !dbg !2605

land.lhs.true:                                    ; preds = %if.then3
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !2606
  %idname = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 3, !dbg !2606
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !2606
  %7 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %treetype.addr, align 8, !dbg !2606
  %idname5 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %7, i32 0, i32 1, !dbg !2606
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %idname5, i64 0, i64 0, !dbg !2606
  %call7 = call i32 @strcmp(i8* %arraydecay, i8* %arraydecay6) #6, !dbg !2606
  %cmp8 = icmp eq i32 %call7, 0, !dbg !2606
  br i1 %cmp8, label %if.then10, label %if.end13, !dbg !2607

if.then10:                                        ; preds = %land.lhs.true
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !2608
  %9 = load i8, i8* %unregister.addr, align 1, !dbg !2609
  %conv11 = zext i8 %9 to i32, !dbg !2609
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !2609
  br i1 %tobool12, label %cond.true, label %cond.false, !dbg !2609

cond.true:                                        ; preds = %if.then10
  br label %cond.end, !dbg !2609

cond.false:                                       ; preds = %if.then10
  %10 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %treetype.addr, align 8, !dbg !2610
  br label %cond.end, !dbg !2609

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bNodeTreeType* [ null, %cond.true ], [ %10, %cond.false ], !dbg !2609
  call void @ntree_set_typeinfo(%struct.bNodeTree* %8, %struct.bNodeTreeType* %cond), !dbg !2611
  br label %if.end13, !dbg !2611

if.end13:                                         ; preds = %cond.end, %land.lhs.true, %if.then3
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !2612
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %11, i32 0, i32 7, !dbg !2614
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !2615
  %12 = load i8*, i8** %first, align 8, !dbg !2615
  %13 = bitcast i8* %12 to %struct.bNode*, !dbg !2612
  store %struct.bNode* %13, %struct.bNode** %node, align 8, !dbg !2616
  br label %for.cond, !dbg !2617

for.cond:                                         ; preds = %for.inc77, %if.end13
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !2618
  %tobool14 = icmp ne %struct.bNode* %14, null, !dbg !2620
  br i1 %tobool14, label %for.body, label %for.end79, !dbg !2620

for.body:                                         ; preds = %for.cond
  %15 = load %struct.bNodeType*, %struct.bNodeType** %nodetype.addr, align 8, !dbg !2621
  %tobool15 = icmp ne %struct.bNodeType* %15, null, !dbg !2621
  br i1 %tobool15, label %land.lhs.true16, label %if.end31, !dbg !2624

land.lhs.true16:                                  ; preds = %for.body
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !2625
  %idname17 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 5, !dbg !2625
  %arraydecay18 = getelementptr inbounds [64 x i8], [64 x i8]* %idname17, i64 0, i64 0, !dbg !2625
  %17 = load %struct.bNodeType*, %struct.bNodeType** %nodetype.addr, align 8, !dbg !2625
  %idname19 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %17, i32 0, i32 3, !dbg !2625
  %arraydecay20 = getelementptr inbounds [64 x i8], [64 x i8]* %idname19, i64 0, i64 0, !dbg !2625
  %call21 = call i32 @strcmp(i8* %arraydecay18, i8* %arraydecay20) #6, !dbg !2625
  %cmp22 = icmp eq i32 %call21, 0, !dbg !2625
  br i1 %cmp22, label %if.then24, label %if.end31, !dbg !2626

if.then24:                                        ; preds = %land.lhs.true16
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2627
  %19 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !2628
  %20 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !2629
  %21 = load i8, i8* %unregister.addr, align 1, !dbg !2630
  %conv25 = zext i8 %21 to i32, !dbg !2630
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !2630
  br i1 %tobool26, label %cond.true27, label %cond.false28, !dbg !2630

cond.true27:                                      ; preds = %if.then24
  br label %cond.end29, !dbg !2630

cond.false28:                                     ; preds = %if.then24
  %22 = load %struct.bNodeType*, %struct.bNodeType** %nodetype.addr, align 8, !dbg !2631
  br label %cond.end29, !dbg !2630

cond.end29:                                       ; preds = %cond.false28, %cond.true27
  %cond30 = phi %struct.bNodeType* [ null, %cond.true27 ], [ %22, %cond.false28 ], !dbg !2630
  call void @node_set_typeinfo(%struct.bContext* %18, %struct.bNodeTree* %19, %struct.bNode* %20, %struct.bNodeType* %cond30), !dbg !2632
  br label %if.end31, !dbg !2632

if.end31:                                         ; preds = %cond.end29, %land.lhs.true16, %for.body
  %23 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !2633
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %23, i32 0, i32 17, !dbg !2635
  %first32 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !2636
  %24 = load i8*, i8** %first32, align 8, !dbg !2636
  %25 = bitcast i8* %24 to %struct.bNodeSocket*, !dbg !2633
  store %struct.bNodeSocket* %25, %struct.bNodeSocket** %sock, align 8, !dbg !2637
  br label %for.cond33, !dbg !2638

for.cond33:                                       ; preds = %for.inc, %if.end31
  %26 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2639
  %tobool34 = icmp ne %struct.bNodeSocket* %26, null, !dbg !2641
  br i1 %tobool34, label %for.body35, label %for.end, !dbg !2641

for.body35:                                       ; preds = %for.cond33
  %27 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype.addr, align 8, !dbg !2642
  %tobool36 = icmp ne %struct.bNodeSocketType* %27, null, !dbg !2642
  br i1 %tobool36, label %land.lhs.true37, label %if.end52, !dbg !2644

land.lhs.true37:                                  ; preds = %for.body35
  %28 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2645
  %idname38 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %28, i32 0, i32 12, !dbg !2645
  %arraydecay39 = getelementptr inbounds [64 x i8], [64 x i8]* %idname38, i64 0, i64 0, !dbg !2645
  %29 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype.addr, align 8, !dbg !2645
  %idname40 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %29, i32 0, i32 0, !dbg !2645
  %arraydecay41 = getelementptr inbounds [64 x i8], [64 x i8]* %idname40, i64 0, i64 0, !dbg !2645
  %call42 = call i32 @strcmp(i8* %arraydecay39, i8* %arraydecay41) #6, !dbg !2645
  %cmp43 = icmp eq i32 %call42, 0, !dbg !2645
  br i1 %cmp43, label %if.then45, label %if.end52, !dbg !2646

if.then45:                                        ; preds = %land.lhs.true37
  %30 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !2647
  %31 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2648
  %32 = load i8, i8* %unregister.addr, align 1, !dbg !2649
  %conv46 = zext i8 %32 to i32, !dbg !2649
  %tobool47 = icmp ne i32 %conv46, 0, !dbg !2649
  br i1 %tobool47, label %cond.true48, label %cond.false49, !dbg !2649

cond.true48:                                      ; preds = %if.then45
  br label %cond.end50, !dbg !2649

cond.false49:                                     ; preds = %if.then45
  %33 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype.addr, align 8, !dbg !2650
  br label %cond.end50, !dbg !2649

cond.end50:                                       ; preds = %cond.false49, %cond.true48
  %cond51 = phi %struct.bNodeSocketType* [ null, %cond.true48 ], [ %33, %cond.false49 ], !dbg !2649
  call void @node_socket_set_typeinfo(%struct.bNodeTree* %30, %struct.bNodeSocket* %31, %struct.bNodeSocketType* %cond51), !dbg !2651
  br label %if.end52, !dbg !2651

if.end52:                                         ; preds = %cond.end50, %land.lhs.true37, %for.body35
  br label %for.inc, !dbg !2645

for.inc:                                          ; preds = %if.end52
  %34 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2652
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %34, i32 0, i32 0, !dbg !2653
  %35 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !2653
  store %struct.bNodeSocket* %35, %struct.bNodeSocket** %sock, align 8, !dbg !2654
  br label %for.cond33, !dbg !2655, !llvm.loop !2656

for.end:                                          ; preds = %for.cond33
  %36 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !2658
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %36, i32 0, i32 18, !dbg !2660
  %first53 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !2661
  %37 = load i8*, i8** %first53, align 8, !dbg !2661
  %38 = bitcast i8* %37 to %struct.bNodeSocket*, !dbg !2658
  store %struct.bNodeSocket* %38, %struct.bNodeSocket** %sock, align 8, !dbg !2662
  br label %for.cond54, !dbg !2663

for.cond54:                                       ; preds = %for.inc74, %for.end
  %39 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2664
  %tobool55 = icmp ne %struct.bNodeSocket* %39, null, !dbg !2666
  br i1 %tobool55, label %for.body56, label %for.end76, !dbg !2666

for.body56:                                       ; preds = %for.cond54
  %40 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype.addr, align 8, !dbg !2667
  %tobool57 = icmp ne %struct.bNodeSocketType* %40, null, !dbg !2667
  br i1 %tobool57, label %land.lhs.true58, label %if.end73, !dbg !2669

land.lhs.true58:                                  ; preds = %for.body56
  %41 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2670
  %idname59 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %41, i32 0, i32 12, !dbg !2670
  %arraydecay60 = getelementptr inbounds [64 x i8], [64 x i8]* %idname59, i64 0, i64 0, !dbg !2670
  %42 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype.addr, align 8, !dbg !2670
  %idname61 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %42, i32 0, i32 0, !dbg !2670
  %arraydecay62 = getelementptr inbounds [64 x i8], [64 x i8]* %idname61, i64 0, i64 0, !dbg !2670
  %call63 = call i32 @strcmp(i8* %arraydecay60, i8* %arraydecay62) #6, !dbg !2670
  %cmp64 = icmp eq i32 %call63, 0, !dbg !2670
  br i1 %cmp64, label %if.then66, label %if.end73, !dbg !2671

if.then66:                                        ; preds = %land.lhs.true58
  %43 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !2672
  %44 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2673
  %45 = load i8, i8* %unregister.addr, align 1, !dbg !2674
  %conv67 = zext i8 %45 to i32, !dbg !2674
  %tobool68 = icmp ne i32 %conv67, 0, !dbg !2674
  br i1 %tobool68, label %cond.true69, label %cond.false70, !dbg !2674

cond.true69:                                      ; preds = %if.then66
  br label %cond.end71, !dbg !2674

cond.false70:                                     ; preds = %if.then66
  %46 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype.addr, align 8, !dbg !2675
  br label %cond.end71, !dbg !2674

cond.end71:                                       ; preds = %cond.false70, %cond.true69
  %cond72 = phi %struct.bNodeSocketType* [ null, %cond.true69 ], [ %46, %cond.false70 ], !dbg !2674
  call void @node_socket_set_typeinfo(%struct.bNodeTree* %43, %struct.bNodeSocket* %44, %struct.bNodeSocketType* %cond72), !dbg !2676
  br label %if.end73, !dbg !2676

if.end73:                                         ; preds = %cond.end71, %land.lhs.true58, %for.body56
  br label %for.inc74, !dbg !2670

for.inc74:                                        ; preds = %if.end73
  %47 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2677
  %next75 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %47, i32 0, i32 0, !dbg !2678
  %48 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next75, align 8, !dbg !2678
  store %struct.bNodeSocket* %48, %struct.bNodeSocket** %sock, align 8, !dbg !2679
  br label %for.cond54, !dbg !2680, !llvm.loop !2681

for.end76:                                        ; preds = %for.cond54
  br label %for.inc77, !dbg !2683

for.inc77:                                        ; preds = %for.end76
  %49 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !2684
  %next78 = getelementptr inbounds %struct.bNode, %struct.bNode* %49, i32 0, i32 0, !dbg !2685
  %50 = load %struct.bNode*, %struct.bNode** %next78, align 8, !dbg !2685
  store %struct.bNode* %50, %struct.bNode** %node, align 8, !dbg !2686
  br label %for.cond, !dbg !2687, !llvm.loop !2688

for.end79:                                        ; preds = %for.cond
  %51 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !2690
  %inputs80 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %51, i32 0, i32 22, !dbg !2692
  %first81 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs80, i32 0, i32 0, !dbg !2693
  %52 = load i8*, i8** %first81, align 8, !dbg !2693
  %53 = bitcast i8* %52 to %struct.bNodeSocket*, !dbg !2690
  store %struct.bNodeSocket* %53, %struct.bNodeSocket** %sock, align 8, !dbg !2694
  br label %for.cond82, !dbg !2695

for.cond82:                                       ; preds = %for.inc102, %for.end79
  %54 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2696
  %tobool83 = icmp ne %struct.bNodeSocket* %54, null, !dbg !2698
  br i1 %tobool83, label %for.body84, label %for.end104, !dbg !2698

for.body84:                                       ; preds = %for.cond82
  %55 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype.addr, align 8, !dbg !2699
  %tobool85 = icmp ne %struct.bNodeSocketType* %55, null, !dbg !2699
  br i1 %tobool85, label %land.lhs.true86, label %if.end101, !dbg !2701

land.lhs.true86:                                  ; preds = %for.body84
  %56 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2702
  %idname87 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %56, i32 0, i32 12, !dbg !2702
  %arraydecay88 = getelementptr inbounds [64 x i8], [64 x i8]* %idname87, i64 0, i64 0, !dbg !2702
  %57 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype.addr, align 8, !dbg !2702
  %idname89 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %57, i32 0, i32 0, !dbg !2702
  %arraydecay90 = getelementptr inbounds [64 x i8], [64 x i8]* %idname89, i64 0, i64 0, !dbg !2702
  %call91 = call i32 @strcmp(i8* %arraydecay88, i8* %arraydecay90) #6, !dbg !2702
  %cmp92 = icmp eq i32 %call91, 0, !dbg !2702
  br i1 %cmp92, label %if.then94, label %if.end101, !dbg !2703

if.then94:                                        ; preds = %land.lhs.true86
  %58 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !2704
  %59 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2705
  %60 = load i8, i8* %unregister.addr, align 1, !dbg !2706
  %conv95 = zext i8 %60 to i32, !dbg !2706
  %tobool96 = icmp ne i32 %conv95, 0, !dbg !2706
  br i1 %tobool96, label %cond.true97, label %cond.false98, !dbg !2706

cond.true97:                                      ; preds = %if.then94
  br label %cond.end99, !dbg !2706

cond.false98:                                     ; preds = %if.then94
  %61 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype.addr, align 8, !dbg !2707
  br label %cond.end99, !dbg !2706

cond.end99:                                       ; preds = %cond.false98, %cond.true97
  %cond100 = phi %struct.bNodeSocketType* [ null, %cond.true97 ], [ %61, %cond.false98 ], !dbg !2706
  call void @node_socket_set_typeinfo(%struct.bNodeTree* %58, %struct.bNodeSocket* %59, %struct.bNodeSocketType* %cond100), !dbg !2708
  br label %if.end101, !dbg !2708

if.end101:                                        ; preds = %cond.end99, %land.lhs.true86, %for.body84
  br label %for.inc102, !dbg !2702

for.inc102:                                       ; preds = %if.end101
  %62 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2709
  %next103 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %62, i32 0, i32 0, !dbg !2710
  %63 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next103, align 8, !dbg !2710
  store %struct.bNodeSocket* %63, %struct.bNodeSocket** %sock, align 8, !dbg !2711
  br label %for.cond82, !dbg !2712, !llvm.loop !2713

for.end104:                                       ; preds = %for.cond82
  %64 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !2715
  %outputs105 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %64, i32 0, i32 23, !dbg !2717
  %first106 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs105, i32 0, i32 0, !dbg !2718
  %65 = load i8*, i8** %first106, align 8, !dbg !2718
  %66 = bitcast i8* %65 to %struct.bNodeSocket*, !dbg !2715
  store %struct.bNodeSocket* %66, %struct.bNodeSocket** %sock, align 8, !dbg !2719
  br label %for.cond107, !dbg !2720

for.cond107:                                      ; preds = %for.inc127, %for.end104
  %67 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2721
  %tobool108 = icmp ne %struct.bNodeSocket* %67, null, !dbg !2723
  br i1 %tobool108, label %for.body109, label %for.end129, !dbg !2723

for.body109:                                      ; preds = %for.cond107
  %68 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype.addr, align 8, !dbg !2724
  %tobool110 = icmp ne %struct.bNodeSocketType* %68, null, !dbg !2724
  br i1 %tobool110, label %land.lhs.true111, label %if.end126, !dbg !2726

land.lhs.true111:                                 ; preds = %for.body109
  %69 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2727
  %idname112 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %69, i32 0, i32 12, !dbg !2727
  %arraydecay113 = getelementptr inbounds [64 x i8], [64 x i8]* %idname112, i64 0, i64 0, !dbg !2727
  %70 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype.addr, align 8, !dbg !2727
  %idname114 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %70, i32 0, i32 0, !dbg !2727
  %arraydecay115 = getelementptr inbounds [64 x i8], [64 x i8]* %idname114, i64 0, i64 0, !dbg !2727
  %call116 = call i32 @strcmp(i8* %arraydecay113, i8* %arraydecay115) #6, !dbg !2727
  %cmp117 = icmp eq i32 %call116, 0, !dbg !2727
  br i1 %cmp117, label %if.then119, label %if.end126, !dbg !2728

if.then119:                                       ; preds = %land.lhs.true111
  %71 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !2729
  %72 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2730
  %73 = load i8, i8* %unregister.addr, align 1, !dbg !2731
  %conv120 = zext i8 %73 to i32, !dbg !2731
  %tobool121 = icmp ne i32 %conv120, 0, !dbg !2731
  br i1 %tobool121, label %cond.true122, label %cond.false123, !dbg !2731

cond.true122:                                     ; preds = %if.then119
  br label %cond.end124, !dbg !2731

cond.false123:                                    ; preds = %if.then119
  %74 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype.addr, align 8, !dbg !2732
  br label %cond.end124, !dbg !2731

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi %struct.bNodeSocketType* [ null, %cond.true122 ], [ %74, %cond.false123 ], !dbg !2731
  call void @node_socket_set_typeinfo(%struct.bNodeTree* %71, %struct.bNodeSocket* %72, %struct.bNodeSocketType* %cond125), !dbg !2733
  br label %if.end126, !dbg !2733

if.end126:                                        ; preds = %cond.end124, %land.lhs.true111, %for.body109
  br label %for.inc127, !dbg !2727

for.inc127:                                       ; preds = %if.end126
  %75 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2734
  %next128 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %75, i32 0, i32 0, !dbg !2735
  %76 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next128, align 8, !dbg !2735
  store %struct.bNodeSocket* %76, %struct.bNodeSocket** %sock, align 8, !dbg !2736
  br label %for.cond107, !dbg !2737, !llvm.loop !2738

for.end129:                                       ; preds = %for.cond107
  br label %if.end130, !dbg !2740

if.end130:                                        ; preds = %for.end129, %while.body
  br label %while.cond, !dbg !2587, !llvm.loop !2741

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !2743
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeTypeFreeLink(%struct.bNodeTreeType* %nt) #0 !dbg !2744 {
entry:
  %nt.addr = alloca %struct.bNodeTreeType*, align 8
  store %struct.bNodeTreeType* %nt, %struct.bNodeTreeType** %nt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTreeType** %nt.addr, metadata !2745, metadata !DIExpression()), !dbg !2746
  %0 = load %struct.GHash*, %struct.GHash** @nodetreetypes_hash, align 8, !dbg !2747
  %1 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %nt.addr, align 8, !dbg !2748
  %idname = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %1, i32 0, i32 1, !dbg !2749
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !2748
  %call = call zeroext i8 @BLI_ghash_remove(%struct.GHash* %0, i8* %arraydecay, void (i8*)* null, void (i8*)* @ntree_free_type), !dbg !2750
  ret void, !dbg !2751
}

declare dso_local zeroext i8 @BLI_ghash_remove(%struct.GHash*, i8*, void (i8*)*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ntree_free_type(i8* %treetype_v) #0 !dbg !2752 {
entry:
  %treetype_v.addr = alloca i8*, align 8
  %treetype = alloca %struct.bNodeTreeType*, align 8
  store i8* %treetype_v, i8** %treetype_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %treetype_v.addr, metadata !2753, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.declare(metadata %struct.bNodeTreeType** %treetype, metadata !2755, metadata !DIExpression()), !dbg !2756
  %0 = load i8*, i8** %treetype_v.addr, align 8, !dbg !2757
  %1 = bitcast i8* %0 to %struct.bNodeTreeType*, !dbg !2757
  store %struct.bNodeTreeType* %1, %struct.bNodeTreeType** %treetype, align 8, !dbg !2756
  %2 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2758
  %3 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %treetype, align 8, !dbg !2759
  call void @update_typeinfo(%struct.Main* %2, %struct.bContext* null, %struct.bNodeTreeType* %3, %struct.bNodeType* null, %struct.bNodeSocketType* null, i8 zeroext 1), !dbg !2760
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2761
  %5 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %treetype, align 8, !dbg !2762
  %6 = bitcast %struct.bNodeTreeType* %5 to i8*, !dbg !2762
  call void %4(i8* %6), !dbg !2761
  ret void, !dbg !2763
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ntreeIsRegistered(%struct.bNodeTree* %ntree) #0 !dbg !2764 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !2767, metadata !DIExpression()), !dbg !2768
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2769
  %typeinfo = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 2, !dbg !2770
  %1 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo, align 8, !dbg !2770
  %cmp = icmp ne %struct.bNodeTreeType* %1, @NodeTreeTypeUndefined, !dbg !2771
  %conv = zext i1 %cmp to i32, !dbg !2771
  %conv1 = trunc i32 %conv to i8, !dbg !2772
  ret i8 %conv1, !dbg !2773
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.GHashIterator* @ntreeTypeGetIterator() #0 !dbg !2774 {
entry:
  %0 = load %struct.GHash*, %struct.GHash** @nodetreetypes_hash, align 8, !dbg !2785
  %call = call %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash* %0), !dbg !2786
  ret %struct.GHashIterator* %call, !dbg !2787
}

declare dso_local %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeRegisterType(%struct.bNodeType* %nt) #0 !dbg !2788 {
entry:
  %nt.addr = alloca %struct.bNodeType*, align 8
  store %struct.bNodeType* %nt, %struct.bNodeType** %nt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %nt.addr, metadata !2791, metadata !DIExpression()), !dbg !2792
  %0 = load %struct.GHash*, %struct.GHash** @nodetypes_hash, align 8, !dbg !2793
  %1 = load %struct.bNodeType*, %struct.bNodeType** %nt.addr, align 8, !dbg !2794
  %idname = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 3, !dbg !2795
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !2794
  %2 = load %struct.bNodeType*, %struct.bNodeType** %nt.addr, align 8, !dbg !2796
  %3 = bitcast %struct.bNodeType* %2 to i8*, !dbg !2796
  call void @BLI_ghash_insert(%struct.GHash* %0, i8* %arraydecay, i8* %3), !dbg !2797
  %4 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2798
  %5 = load %struct.bNodeType*, %struct.bNodeType** %nt.addr, align 8, !dbg !2799
  call void @update_typeinfo(%struct.Main* %4, %struct.bContext* null, %struct.bNodeTreeType* null, %struct.bNodeType* %5, %struct.bNodeSocketType* null, i8 zeroext 0), !dbg !2800
  ret void, !dbg !2801
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeUnregisterType(%struct.bNodeType* %nt) #0 !dbg !2802 {
entry:
  %nt.addr = alloca %struct.bNodeType*, align 8
  store %struct.bNodeType* %nt, %struct.bNodeType** %nt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %nt.addr, metadata !2803, metadata !DIExpression()), !dbg !2804
  %0 = load %struct.GHash*, %struct.GHash** @nodetypes_hash, align 8, !dbg !2805
  %1 = load %struct.bNodeType*, %struct.bNodeType** %nt.addr, align 8, !dbg !2806
  %idname = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 3, !dbg !2807
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !2806
  %call = call zeroext i8 @BLI_ghash_remove(%struct.GHash* %0, i8* %arraydecay, void (i8*)* null, void (i8*)* @node_free_type), !dbg !2808
  ret void, !dbg !2809
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_free_type(i8* %nodetype_v) #0 !dbg !2810 {
entry:
  %nodetype_v.addr = alloca i8*, align 8
  %nodetype = alloca %struct.bNodeType*, align 8
  store i8* %nodetype_v, i8** %nodetype_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nodetype_v.addr, metadata !2811, metadata !DIExpression()), !dbg !2812
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %nodetype, metadata !2813, metadata !DIExpression()), !dbg !2814
  %0 = load i8*, i8** %nodetype_v.addr, align 8, !dbg !2815
  %1 = bitcast i8* %0 to %struct.bNodeType*, !dbg !2815
  store %struct.bNodeType* %1, %struct.bNodeType** %nodetype, align 8, !dbg !2814
  %2 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2816
  %3 = load %struct.bNodeType*, %struct.bNodeType** %nodetype, align 8, !dbg !2817
  call void @update_typeinfo(%struct.Main* %2, %struct.bContext* null, %struct.bNodeTreeType* null, %struct.bNodeType* %3, %struct.bNodeSocketType* null, i8 zeroext 1), !dbg !2818
  %4 = load %struct.bNodeType*, %struct.bNodeType** %nodetype, align 8, !dbg !2819
  %type = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %4, i32 0, i32 4, !dbg !2821
  %5 = load i32, i32* %type, align 4, !dbg !2821
  %cmp = icmp eq i32 %5, 123, !dbg !2822
  br i1 %cmp, label %if.then, label %if.end, !dbg !2823

if.then:                                          ; preds = %entry
  %6 = load %struct.bNodeType*, %struct.bNodeType** %nodetype, align 8, !dbg !2824
  call void @free_dynamic_typeinfo(%struct.bNodeType* %6), !dbg !2825
  br label %if.end, !dbg !2825

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.bNodeType*, %struct.bNodeType** %nodetype, align 8, !dbg !2826
  %needs_free = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %7, i32 0, i32 2, !dbg !2828
  %8 = load i16, i16* %needs_free, align 8, !dbg !2828
  %tobool = icmp ne i16 %8, 0, !dbg !2826
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !2829

if.then1:                                         ; preds = %if.end
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2830
  %10 = load %struct.bNodeType*, %struct.bNodeType** %nodetype, align 8, !dbg !2831
  %11 = bitcast %struct.bNodeType* %10 to i8*, !dbg !2831
  call void %9(i8* %11), !dbg !2830
  br label %if.end2, !dbg !2830

if.end2:                                          ; preds = %if.then1, %if.end
  ret void, !dbg !2832
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @nodeIsRegistered(%struct.bNode* %node) #0 !dbg !2833 {
entry:
  %node.addr = alloca %struct.bNode*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !2836, metadata !DIExpression()), !dbg !2837
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2838
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 4, !dbg !2839
  %1 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !2839
  %cmp = icmp ne %struct.bNodeType* %1, @NodeTypeUndefined, !dbg !2840
  %conv = zext i1 %cmp to i32, !dbg !2840
  %conv1 = trunc i32 %conv to i8, !dbg !2841
  ret i8 %conv1, !dbg !2842
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.GHashIterator* @nodeTypeGetIterator() #0 !dbg !2843 {
entry:
  %0 = load %struct.GHash*, %struct.GHash** @nodetypes_hash, align 8, !dbg !2844
  %call = call %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash* %0), !dbg !2845
  ret %struct.GHashIterator* %call, !dbg !2846
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeRegisterSocketType(%struct.bNodeSocketType* %st) #0 !dbg !2847 {
entry:
  %st.addr = alloca %struct.bNodeSocketType*, align 8
  store %struct.bNodeSocketType* %st, %struct.bNodeSocketType** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketType** %st.addr, metadata !2850, metadata !DIExpression()), !dbg !2851
  %0 = load %struct.GHash*, %struct.GHash** @nodesockettypes_hash, align 8, !dbg !2852
  %1 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %st.addr, align 8, !dbg !2853
  %idname = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %1, i32 0, i32 0, !dbg !2854
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !2853
  %2 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %st.addr, align 8, !dbg !2855
  %3 = bitcast %struct.bNodeSocketType* %2 to i8*, !dbg !2855
  call void @BLI_ghash_insert(%struct.GHash* %0, i8* %arraydecay, i8* %3), !dbg !2856
  %4 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2857
  %5 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %st.addr, align 8, !dbg !2858
  call void @update_typeinfo(%struct.Main* %4, %struct.bContext* null, %struct.bNodeTreeType* null, %struct.bNodeType* null, %struct.bNodeSocketType* %5, i8 zeroext 0), !dbg !2859
  ret void, !dbg !2860
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeUnregisterSocketType(%struct.bNodeSocketType* %st) #0 !dbg !2861 {
entry:
  %st.addr = alloca %struct.bNodeSocketType*, align 8
  store %struct.bNodeSocketType* %st, %struct.bNodeSocketType** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketType** %st.addr, metadata !2862, metadata !DIExpression()), !dbg !2863
  %0 = load %struct.GHash*, %struct.GHash** @nodesockettypes_hash, align 8, !dbg !2864
  %1 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %st.addr, align 8, !dbg !2865
  %idname = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %1, i32 0, i32 0, !dbg !2866
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !2865
  %call = call zeroext i8 @BLI_ghash_remove(%struct.GHash* %0, i8* %arraydecay, void (i8*)* null, void (i8*)* @node_free_socket_type), !dbg !2867
  ret void, !dbg !2868
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_free_socket_type(i8* %socktype_v) #0 !dbg !2869 {
entry:
  %socktype_v.addr = alloca i8*, align 8
  %socktype = alloca %struct.bNodeSocketType*, align 8
  store i8* %socktype_v, i8** %socktype_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %socktype_v.addr, metadata !2870, metadata !DIExpression()), !dbg !2871
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketType** %socktype, metadata !2872, metadata !DIExpression()), !dbg !2873
  %0 = load i8*, i8** %socktype_v.addr, align 8, !dbg !2874
  %1 = bitcast i8* %0 to %struct.bNodeSocketType*, !dbg !2874
  store %struct.bNodeSocketType* %1, %struct.bNodeSocketType** %socktype, align 8, !dbg !2873
  %2 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2875
  %3 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype, align 8, !dbg !2876
  call void @update_typeinfo(%struct.Main* %2, %struct.bContext* null, %struct.bNodeTreeType* null, %struct.bNodeType* null, %struct.bNodeSocketType* %3, i8 zeroext 1), !dbg !2877
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2878
  %5 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %socktype, align 8, !dbg !2879
  %6 = bitcast %struct.bNodeSocketType* %5 to i8*, !dbg !2879
  call void %4(i8* %6), !dbg !2878
  ret void, !dbg !2880
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @nodeSocketIsRegistered(%struct.bNodeSocket* %sock) #0 !dbg !2881 {
entry:
  %sock.addr = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeSocket* %sock, %struct.bNodeSocket** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock.addr, metadata !2884, metadata !DIExpression()), !dbg !2885
  %0 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !2886
  %typeinfo = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %0, i32 0, i32 11, !dbg !2887
  %1 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %typeinfo, align 8, !dbg !2887
  %cmp = icmp ne %struct.bNodeSocketType* %1, @NodeSocketTypeUndefined, !dbg !2888
  %conv = zext i1 %cmp to i32, !dbg !2888
  %conv1 = trunc i32 %conv to i8, !dbg !2889
  ret i8 %conv1, !dbg !2890
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.GHashIterator* @nodeSocketTypeGetIterator() #0 !dbg !2891 {
entry:
  %0 = load %struct.GHash*, %struct.GHash** @nodesockettypes_hash, align 8, !dbg !2892
  %call = call %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash* %0), !dbg !2893
  ret %struct.GHashIterator* %call, !dbg !2894
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeSocket* @nodeFindSocket(%struct.bNode* %node, i32 %in_out, i8* %identifier) #0 !dbg !2895 {
entry:
  %retval = alloca %struct.bNodeSocket*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %in_out.addr = alloca i32, align 4
  %identifier.addr = alloca i8*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !2898, metadata !DIExpression()), !dbg !2899
  store i32 %in_out, i32* %in_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_out.addr, metadata !2900, metadata !DIExpression()), !dbg !2901
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !2902, metadata !DIExpression()), !dbg !2903
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !2904, metadata !DIExpression()), !dbg !2905
  %0 = load i32, i32* %in_out.addr, align 4, !dbg !2906
  %cmp = icmp eq i32 %0, 1, !dbg !2907
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2906

cond.true:                                        ; preds = %entry
  %1 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2908
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %1, i32 0, i32 17, !dbg !2909
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !2910
  %2 = load i8*, i8** %first, align 8, !dbg !2910
  br label %cond.end, !dbg !2906

cond.false:                                       ; preds = %entry
  %3 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2911
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %3, i32 0, i32 18, !dbg !2912
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !2913
  %4 = load i8*, i8** %first1, align 8, !dbg !2913
  br label %cond.end, !dbg !2906

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ %4, %cond.false ], !dbg !2906
  %5 = bitcast i8* %cond to %struct.bNodeSocket*, !dbg !2914
  store %struct.bNodeSocket* %5, %struct.bNodeSocket** %sock, align 8, !dbg !2905
  br label %for.cond, !dbg !2915

for.cond:                                         ; preds = %for.inc, %cond.end
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2916
  %tobool = icmp ne %struct.bNodeSocket* %6, null, !dbg !2919
  br i1 %tobool, label %for.body, label %for.end, !dbg !2919

for.body:                                         ; preds = %for.cond
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2920
  %identifier2 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %7, i32 0, i32 4, !dbg !2920
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %identifier2, i64 0, i64 0, !dbg !2920
  %8 = load i8*, i8** %identifier.addr, align 8, !dbg !2920
  %call = call i32 @strcmp(i8* %arraydecay, i8* %8) #6, !dbg !2920
  %cmp3 = icmp eq i32 %call, 0, !dbg !2920
  br i1 %cmp3, label %if.then, label %if.end, !dbg !2923

if.then:                                          ; preds = %for.body
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2924
  store %struct.bNodeSocket* %9, %struct.bNodeSocket** %retval, align 8, !dbg !2925
  br label %return, !dbg !2925

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2926

for.inc:                                          ; preds = %if.end
  %10 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2927
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %10, i32 0, i32 0, !dbg !2928
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !2928
  store %struct.bNodeSocket* %11, %struct.bNodeSocket** %sock, align 8, !dbg !2929
  br label %for.cond, !dbg !2930, !llvm.loop !2931

for.end:                                          ; preds = %for.cond
  store %struct.bNodeSocket* null, %struct.bNodeSocket** %retval, align 8, !dbg !2933
  br label %return, !dbg !2933

return:                                           ; preds = %for.end, %if.then
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %retval, align 8, !dbg !2934
  ret %struct.bNodeSocket* %12, !dbg !2934
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeSocket* @nodeAddSocket(%struct.bNodeTree* %ntree, %struct.bNode* %node, i32 %in_out, i8* %idname, i8* %identifier, i8* %name) #0 !dbg !2935 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %in_out.addr = alloca i32, align 4
  %idname.addr = alloca i8*, align 8
  %identifier.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !2938, metadata !DIExpression()), !dbg !2939
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !2940, metadata !DIExpression()), !dbg !2941
  store i32 %in_out, i32* %in_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_out.addr, metadata !2942, metadata !DIExpression()), !dbg !2943
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !2944, metadata !DIExpression()), !dbg !2945
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !2946, metadata !DIExpression()), !dbg !2947
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2948, metadata !DIExpression()), !dbg !2949
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !2950, metadata !DIExpression()), !dbg !2952
  %0 = load i32, i32* %in_out.addr, align 4, !dbg !2953
  %cmp = icmp eq i32 %0, 1, !dbg !2954
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2953

cond.true:                                        ; preds = %entry
  %1 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2955
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %1, i32 0, i32 17, !dbg !2956
  br label %cond.end, !dbg !2953

cond.false:                                       ; preds = %entry
  %2 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2957
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %2, i32 0, i32 18, !dbg !2958
  br label %cond.end, !dbg !2953

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ListBase* [ %inputs, %cond.true ], [ %outputs, %cond.false ], !dbg !2953
  store %struct.ListBase* %cond, %struct.ListBase** %lb, align 8, !dbg !2952
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !2959, metadata !DIExpression()), !dbg !2960
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !2961
  %4 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2962
  %5 = load i32, i32* %in_out.addr, align 4, !dbg !2963
  %6 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !2964
  %7 = load i8*, i8** %idname.addr, align 8, !dbg !2965
  %8 = load i8*, i8** %identifier.addr, align 8, !dbg !2966
  %9 = load i8*, i8** %name.addr, align 8, !dbg !2967
  %call = call %struct.bNodeSocket* @make_socket(%struct.bNodeTree* %3, %struct.bNode* %4, i32 %5, %struct.ListBase* %6, i8* %7, i8* %8, i8* %9), !dbg !2968
  store %struct.bNodeSocket* %call, %struct.bNodeSocket** %sock, align 8, !dbg !2960
  %10 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !2969
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2970
  %12 = bitcast %struct.bNodeSocket* %11 to i8*, !dbg !2970
  call void @BLI_remlink(%struct.ListBase* %10, i8* %12), !dbg !2971
  %13 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !2972
  %14 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2973
  %15 = bitcast %struct.bNodeSocket* %14 to i8*, !dbg !2973
  call void @BLI_addtail(%struct.ListBase* %13, i8* %15), !dbg !2974
  %16 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !2975
  %update = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 31, !dbg !2976
  %17 = load i32, i32* %update, align 4, !dbg !2977
  %or = or i32 %17, 65535, !dbg !2977
  store i32 %or, i32* %update, align 4, !dbg !2977
  %18 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !2978
  ret %struct.bNodeSocket* %18, !dbg !2979
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.bNodeSocket* @make_socket(%struct.bNodeTree* %ntree, %struct.bNode* %UNUSED_node, i32 %in_out, %struct.ListBase* %lb, i8* %idname, i8* %identifier, i8* %name) #0 !dbg !2980 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %UNUSED_node.addr = alloca %struct.bNode*, align 8
  %in_out.addr = alloca i32, align 4
  %lb.addr = alloca %struct.ListBase*, align 8
  %idname.addr = alloca i8*, align 8
  %identifier.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %auto_identifier = alloca [64 x i8], align 16
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !2983, metadata !DIExpression()), !dbg !2984
  store %struct.bNode* %UNUSED_node, %struct.bNode** %UNUSED_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %UNUSED_node.addr, metadata !2985, metadata !DIExpression()), !dbg !2986
  store i32 %in_out, i32* %in_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_out.addr, metadata !2987, metadata !DIExpression()), !dbg !2988
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !2989, metadata !DIExpression()), !dbg !2990
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !2991, metadata !DIExpression()), !dbg !2992
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !2993, metadata !DIExpression()), !dbg !2994
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2995, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !2997, metadata !DIExpression()), !dbg !2998
  call void @llvm.dbg.declare(metadata [64 x i8]* %auto_identifier, metadata !2999, metadata !DIExpression()), !dbg !3000
  %0 = load i8*, i8** %identifier.addr, align 8, !dbg !3001
  %tobool = icmp ne i8* %0, null, !dbg !3001
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !3003

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %identifier.addr, align 8, !dbg !3004
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !3004
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3004
  %conv = zext i8 %2 to i32, !dbg !3004
  %cmp = icmp ne i32 %conv, 0, !dbg !3005
  br i1 %cmp, label %if.then, label %if.else, !dbg !3006

if.then:                                          ; preds = %land.lhs.true
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %auto_identifier, i64 0, i64 0, !dbg !3007
  %3 = load i8*, i8** %identifier.addr, align 8, !dbg !3009
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %3, i64 64), !dbg !3010
  br label %if.end, !dbg !3011

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %auto_identifier, i64 0, i64 0, !dbg !3012
  %4 = load i8*, i8** %name.addr, align 8, !dbg !3014
  %call3 = call i8* @BLI_strncpy(i8* %arraydecay2, i8* %4, i64 64), !dbg !3015
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !3016
  %6 = bitcast %struct.ListBase* %5 to i8*, !dbg !3016
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %auto_identifier, i64 0, i64 0, !dbg !3017
  %call5 = call zeroext i8 @BLI_uniquename_cb(i8 (i8*, i8*)* @unique_identifier_check, i8* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.265, i64 0, i64 0), i8 zeroext 46, i8* %arraydecay4, i32 64), !dbg !3018
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3019
  %call6 = call i8* %7(i64 352, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.266, i64 0, i64 0)), !dbg !3019
  %8 = bitcast i8* %call6 to %struct.bNodeSocket*, !dbg !3019
  store %struct.bNodeSocket* %8, %struct.bNodeSocket** %sock, align 8, !dbg !3020
  %9 = load i32, i32* %in_out.addr, align 4, !dbg !3021
  %conv7 = trunc i32 %9 to i16, !dbg !3021
  %10 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3022
  %in_out8 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %10, i32 0, i32 10, !dbg !3023
  store i16 %conv7, i16* %in_out8, align 2, !dbg !3024
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3025
  %identifier9 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %11, i32 0, i32 4, !dbg !3026
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %identifier9, i64 0, i64 0, !dbg !3025
  %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %auto_identifier, i64 0, i64 0, !dbg !3027
  %call12 = call i8* @BLI_strncpy(i8* %arraydecay10, i8* %arraydecay11, i64 64), !dbg !3028
  %12 = load i32, i32* %in_out.addr, align 4, !dbg !3029
  %cmp13 = icmp eq i32 %12, 1, !dbg !3030
  %13 = zext i1 %cmp13 to i64, !dbg !3029
  %cond = select i1 %cmp13, i32 1, i32 4095, !dbg !3029
  %conv15 = trunc i32 %cond to i16, !dbg !3031
  %14 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3032
  %limit = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %14, i32 0, i32 9, !dbg !3033
  store i16 %conv15, i16* %limit, align 4, !dbg !3034
  %15 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3035
  %name16 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %15, i32 0, i32 5, !dbg !3036
  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %name16, i64 0, i64 0, !dbg !3035
  %16 = load i8*, i8** %name.addr, align 8, !dbg !3037
  %call18 = call i8* @BLI_strncpy(i8* %arraydecay17, i8* %16, i64 64), !dbg !3038
  %17 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3039
  %storage = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %17, i32 0, i32 6, !dbg !3040
  store i8* null, i8** %storage, align 8, !dbg !3041
  %18 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3042
  %flag = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %18, i32 0, i32 8, !dbg !3043
  %19 = load i16, i16* %flag, align 2, !dbg !3044
  %conv19 = sext i16 %19 to i32, !dbg !3044
  %or = or i32 %conv19, 64, !dbg !3044
  %conv20 = trunc i32 %or to i16, !dbg !3044
  store i16 %conv20, i16* %flag, align 2, !dbg !3044
  %20 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3045
  %type = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %20, i32 0, i32 7, !dbg !3046
  store i16 -1, i16* %type, align 8, !dbg !3047
  %21 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3048
  %idname21 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %21, i32 0, i32 12, !dbg !3049
  %arraydecay22 = getelementptr inbounds [64 x i8], [64 x i8]* %idname21, i64 0, i64 0, !dbg !3048
  %22 = load i8*, i8** %idname.addr, align 8, !dbg !3050
  %call23 = call i8* @BLI_strncpy(i8* %arraydecay22, i8* %22, i64 64), !dbg !3051
  %23 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3052
  %24 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3053
  %25 = load i8*, i8** %idname.addr, align 8, !dbg !3054
  %call24 = call %struct.bNodeSocketType* @nodeSocketTypeFind(i8* %25), !dbg !3055
  call void @node_socket_set_typeinfo(%struct.bNodeTree* %23, %struct.bNodeSocket* %24, %struct.bNodeSocketType* %call24), !dbg !3056
  %26 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3057
  ret %struct.bNodeSocket* %26, !dbg !3058
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeSocket* @nodeInsertSocket(%struct.bNodeTree* %ntree, %struct.bNode* %node, i32 %in_out, i8* %idname, %struct.bNodeSocket* %next_sock, i8* %identifier, i8* %name) #0 !dbg !3059 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %in_out.addr = alloca i32, align 4
  %idname.addr = alloca i8*, align 8
  %next_sock.addr = alloca %struct.bNodeSocket*, align 8
  %identifier.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3062, metadata !DIExpression()), !dbg !3063
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !3064, metadata !DIExpression()), !dbg !3065
  store i32 %in_out, i32* %in_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_out.addr, metadata !3066, metadata !DIExpression()), !dbg !3067
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !3068, metadata !DIExpression()), !dbg !3069
  store %struct.bNodeSocket* %next_sock, %struct.bNodeSocket** %next_sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %next_sock.addr, metadata !3070, metadata !DIExpression()), !dbg !3071
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !3072, metadata !DIExpression()), !dbg !3073
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3074, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !3076, metadata !DIExpression()), !dbg !3077
  %0 = load i32, i32* %in_out.addr, align 4, !dbg !3078
  %cmp = icmp eq i32 %0, 1, !dbg !3079
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3078

cond.true:                                        ; preds = %entry
  %1 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3080
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %1, i32 0, i32 17, !dbg !3081
  br label %cond.end, !dbg !3078

cond.false:                                       ; preds = %entry
  %2 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3082
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %2, i32 0, i32 18, !dbg !3083
  br label %cond.end, !dbg !3078

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ListBase* [ %inputs, %cond.true ], [ %outputs, %cond.false ], !dbg !3078
  store %struct.ListBase* %cond, %struct.ListBase** %lb, align 8, !dbg !3077
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !3084, metadata !DIExpression()), !dbg !3085
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3086
  %4 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3087
  %5 = load i32, i32* %in_out.addr, align 4, !dbg !3088
  %6 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !3089
  %7 = load i8*, i8** %idname.addr, align 8, !dbg !3090
  %8 = load i8*, i8** %identifier.addr, align 8, !dbg !3091
  %9 = load i8*, i8** %name.addr, align 8, !dbg !3092
  %call = call %struct.bNodeSocket* @make_socket(%struct.bNodeTree* %3, %struct.bNode* %4, i32 %5, %struct.ListBase* %6, i8* %7, i8* %8, i8* %9), !dbg !3093
  store %struct.bNodeSocket* %call, %struct.bNodeSocket** %sock, align 8, !dbg !3085
  %10 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !3094
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3095
  %12 = bitcast %struct.bNodeSocket* %11 to i8*, !dbg !3095
  call void @BLI_remlink(%struct.ListBase* %10, i8* %12), !dbg !3096
  %13 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !3097
  %14 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next_sock.addr, align 8, !dbg !3098
  %15 = bitcast %struct.bNodeSocket* %14 to i8*, !dbg !3098
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3099
  %17 = bitcast %struct.bNodeSocket* %16 to i8*, !dbg !3099
  call void @BLI_insertlinkbefore(%struct.ListBase* %13, i8* %15, i8* %17), !dbg !3100
  %18 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3101
  %update = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 31, !dbg !3102
  %19 = load i32, i32* %update, align 4, !dbg !3103
  %or = or i32 %19, 65535, !dbg !3103
  store i32 %or, i32* %update, align 4, !dbg !3103
  %20 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3104
  ret %struct.bNodeSocket* %20, !dbg !3105
}

declare dso_local void @BLI_insertlinkbefore(%struct.ListBase*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @nodeStaticSocketType(i32 %type, i32 %subtype) #0 !dbg !3106 {
entry:
  %retval = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %subtype.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3109, metadata !DIExpression()), !dbg !3110
  store i32 %subtype, i32* %subtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subtype.addr, metadata !3111, metadata !DIExpression()), !dbg !3112
  %0 = load i32, i32* %type.addr, align 4, !dbg !3113
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 6, label %sw.bb7
    i32 4, label %sw.bb13
    i32 1, label %sw.bb14
    i32 2, label %sw.bb23
    i32 7, label %sw.bb24
    i32 3, label %sw.bb25
  ], !dbg !3114

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %subtype.addr, align 4, !dbg !3115
  switch i32 %1, label %sw.default [
    i32 13, label %sw.bb1
    i32 14, label %sw.bb2
    i32 15, label %sw.bb3
    i32 327696, label %sw.bb4
    i32 393233, label %sw.bb5
    i32 0, label %sw.bb6
  ], !dbg !3117

sw.bb1:                                           ; preds = %sw.bb
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8** %retval, align 8, !dbg !3118
  br label %return, !dbg !3118

sw.bb2:                                           ; preds = %sw.bb
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8** %retval, align 8, !dbg !3120
  br label %return, !dbg !3120

sw.bb3:                                           ; preds = %sw.bb
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8** %retval, align 8, !dbg !3121
  br label %return, !dbg !3121

sw.bb4:                                           ; preds = %sw.bb
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8** %retval, align 8, !dbg !3122
  br label %return, !dbg !3122

sw.bb5:                                           ; preds = %sw.bb
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i8** %retval, align 8, !dbg !3123
  br label %return, !dbg !3123

sw.bb6:                                           ; preds = %sw.bb
  br label %sw.default, !dbg !3123

sw.default:                                       ; preds = %sw.bb, %sw.bb6
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8** %retval, align 8, !dbg !3124
  br label %return, !dbg !3124

sw.bb7:                                           ; preds = %entry
  %2 = load i32, i32* %subtype.addr, align 4, !dbg !3125
  switch i32 %2, label %sw.default12 [
    i32 13, label %sw.bb8
    i32 14, label %sw.bb9
    i32 15, label %sw.bb10
    i32 0, label %sw.bb11
  ], !dbg !3126

sw.bb8:                                           ; preds = %sw.bb7
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i8** %retval, align 8, !dbg !3127
  br label %return, !dbg !3127

sw.bb9:                                           ; preds = %sw.bb7
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i8** %retval, align 8, !dbg !3129
  br label %return, !dbg !3129

sw.bb10:                                          ; preds = %sw.bb7
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i8** %retval, align 8, !dbg !3130
  br label %return, !dbg !3130

sw.bb11:                                          ; preds = %sw.bb7
  br label %sw.default12, !dbg !3130

sw.default12:                                     ; preds = %sw.bb7, %sw.bb11
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i8** %retval, align 8, !dbg !3131
  br label %return, !dbg !3131

sw.bb13:                                          ; preds = %entry
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8** %retval, align 8, !dbg !3132
  br label %return, !dbg !3132

sw.bb14:                                          ; preds = %entry
  %3 = load i32, i32* %subtype.addr, align 4, !dbg !3133
  switch i32 %3, label %sw.default22 [
    i32 65557, label %sw.bb15
    i32 22, label %sw.bb16
    i32 458775, label %sw.bb17
    i32 524312, label %sw.bb18
    i32 327706, label %sw.bb19
    i32 29, label %sw.bb20
    i32 0, label %sw.bb21
  ], !dbg !3134

sw.bb15:                                          ; preds = %sw.bb14
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0), i8** %retval, align 8, !dbg !3135
  br label %return, !dbg !3135

sw.bb16:                                          ; preds = %sw.bb14
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i64 0, i64 0), i8** %retval, align 8, !dbg !3137
  br label %return, !dbg !3137

sw.bb17:                                          ; preds = %sw.bb14
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i8** %retval, align 8, !dbg !3138
  br label %return, !dbg !3138

sw.bb18:                                          ; preds = %sw.bb14
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i8** %retval, align 8, !dbg !3139
  br label %return, !dbg !3139

sw.bb19:                                          ; preds = %sw.bb14
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0), i8** %retval, align 8, !dbg !3140
  br label %return, !dbg !3140

sw.bb20:                                          ; preds = %sw.bb14
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8** %retval, align 8, !dbg !3141
  br label %return, !dbg !3141

sw.bb21:                                          ; preds = %sw.bb14
  br label %sw.default22, !dbg !3141

sw.default22:                                     ; preds = %sw.bb14, %sw.bb21
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0), i8** %retval, align 8, !dbg !3142
  br label %return, !dbg !3142

sw.bb23:                                          ; preds = %entry
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8** %retval, align 8, !dbg !3143
  br label %return, !dbg !3143

sw.bb24:                                          ; preds = %entry
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8** %retval, align 8, !dbg !3144
  br label %return, !dbg !3144

sw.bb25:                                          ; preds = %entry
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i8** %retval, align 8, !dbg !3145
  br label %return, !dbg !3145

sw.epilog:                                        ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !3146
  br label %return, !dbg !3146

return:                                           ; preds = %sw.epilog, %sw.bb25, %sw.bb24, %sw.bb23, %sw.default22, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb13, %sw.default12, %sw.bb10, %sw.bb9, %sw.bb8, %sw.default, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1
  %4 = load i8*, i8** %retval, align 8, !dbg !3147
  ret i8* %4, !dbg !3147
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @nodeStaticSocketInterfaceType(i32 %type, i32 %subtype) #0 !dbg !3148 {
entry:
  %retval = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %subtype.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3149, metadata !DIExpression()), !dbg !3150
  store i32 %subtype, i32* %subtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subtype.addr, metadata !3151, metadata !DIExpression()), !dbg !3152
  %0 = load i32, i32* %type.addr, align 4, !dbg !3153
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 6, label %sw.bb7
    i32 4, label %sw.bb13
    i32 1, label %sw.bb14
    i32 2, label %sw.bb23
    i32 7, label %sw.bb24
    i32 3, label %sw.bb25
  ], !dbg !3154

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %subtype.addr, align 4, !dbg !3155
  switch i32 %1, label %sw.default [
    i32 13, label %sw.bb1
    i32 14, label %sw.bb2
    i32 15, label %sw.bb3
    i32 327696, label %sw.bb4
    i32 393233, label %sw.bb5
    i32 0, label %sw.bb6
  ], !dbg !3157

sw.bb1:                                           ; preds = %sw.bb
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i64 0, i64 0), i8** %retval, align 8, !dbg !3158
  br label %return, !dbg !3158

sw.bb2:                                           ; preds = %sw.bb
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i64 0, i64 0), i8** %retval, align 8, !dbg !3160
  br label %return, !dbg !3160

sw.bb3:                                           ; preds = %sw.bb
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.23, i64 0, i64 0), i8** %retval, align 8, !dbg !3161
  br label %return, !dbg !3161

sw.bb4:                                           ; preds = %sw.bb
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i64 0, i64 0), i8** %retval, align 8, !dbg !3162
  br label %return, !dbg !3162

sw.bb5:                                           ; preds = %sw.bb
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i64 0, i64 0), i8** %retval, align 8, !dbg !3163
  br label %return, !dbg !3163

sw.bb6:                                           ; preds = %sw.bb
  br label %sw.default, !dbg !3163

sw.default:                                       ; preds = %sw.bb, %sw.bb6
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i64 0, i64 0), i8** %retval, align 8, !dbg !3164
  br label %return, !dbg !3164

sw.bb7:                                           ; preds = %entry
  %2 = load i32, i32* %subtype.addr, align 4, !dbg !3165
  switch i32 %2, label %sw.default12 [
    i32 13, label %sw.bb8
    i32 14, label %sw.bb9
    i32 15, label %sw.bb10
    i32 0, label %sw.bb11
  ], !dbg !3166

sw.bb8:                                           ; preds = %sw.bb7
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i64 0, i64 0), i8** %retval, align 8, !dbg !3167
  br label %return, !dbg !3167

sw.bb9:                                           ; preds = %sw.bb7
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.28, i64 0, i64 0), i8** %retval, align 8, !dbg !3169
  br label %return, !dbg !3169

sw.bb10:                                          ; preds = %sw.bb7
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.29, i64 0, i64 0), i8** %retval, align 8, !dbg !3170
  br label %return, !dbg !3170

sw.bb11:                                          ; preds = %sw.bb7
  br label %sw.default12, !dbg !3170

sw.default12:                                     ; preds = %sw.bb7, %sw.bb11
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i64 0, i64 0), i8** %retval, align 8, !dbg !3171
  br label %return, !dbg !3171

sw.bb13:                                          ; preds = %entry
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i64 0, i64 0), i8** %retval, align 8, !dbg !3172
  br label %return, !dbg !3172

sw.bb14:                                          ; preds = %entry
  %3 = load i32, i32* %subtype.addr, align 4, !dbg !3173
  switch i32 %3, label %sw.default22 [
    i32 65557, label %sw.bb15
    i32 22, label %sw.bb16
    i32 458775, label %sw.bb17
    i32 524312, label %sw.bb18
    i32 327706, label %sw.bb19
    i32 29, label %sw.bb20
    i32 0, label %sw.bb21
  ], !dbg !3174

sw.bb15:                                          ; preds = %sw.bb14
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0), i8** %retval, align 8, !dbg !3175
  br label %return, !dbg !3175

sw.bb16:                                          ; preds = %sw.bb14
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33, i64 0, i64 0), i8** %retval, align 8, !dbg !3177
  br label %return, !dbg !3177

sw.bb17:                                          ; preds = %sw.bb14
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i8** %retval, align 8, !dbg !3178
  br label %return, !dbg !3178

sw.bb18:                                          ; preds = %sw.bb14
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.35, i64 0, i64 0), i8** %retval, align 8, !dbg !3179
  br label %return, !dbg !3179

sw.bb19:                                          ; preds = %sw.bb14
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.36, i64 0, i64 0), i8** %retval, align 8, !dbg !3180
  br label %return, !dbg !3180

sw.bb20:                                          ; preds = %sw.bb14
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i64 0, i64 0), i8** %retval, align 8, !dbg !3181
  br label %return, !dbg !3181

sw.bb21:                                          ; preds = %sw.bb14
  br label %sw.default22, !dbg !3181

sw.default22:                                     ; preds = %sw.bb14, %sw.bb21
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i64 0, i64 0), i8** %retval, align 8, !dbg !3182
  br label %return, !dbg !3182

sw.bb23:                                          ; preds = %entry
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.39, i64 0, i64 0), i8** %retval, align 8, !dbg !3183
  br label %return, !dbg !3183

sw.bb24:                                          ; preds = %entry
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0), i8** %retval, align 8, !dbg !3184
  br label %return, !dbg !3184

sw.bb25:                                          ; preds = %entry
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.41, i64 0, i64 0), i8** %retval, align 8, !dbg !3185
  br label %return, !dbg !3185

sw.epilog:                                        ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !3186
  br label %return, !dbg !3186

return:                                           ; preds = %sw.epilog, %sw.bb25, %sw.bb24, %sw.bb23, %sw.default22, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb13, %sw.default12, %sw.bb10, %sw.bb9, %sw.bb8, %sw.default, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1
  %4 = load i8*, i8** %retval, align 8, !dbg !3187
  ret i8* %4, !dbg !3187
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeSocket* @nodeAddStaticSocket(%struct.bNodeTree* %ntree, %struct.bNode* %node, i32 %in_out, i32 %type, i32 %subtype, i8* %identifier, i8* %name) #0 !dbg !3188 {
entry:
  %retval = alloca %struct.bNodeSocket*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %in_out.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %subtype.addr = alloca i32, align 4
  %identifier.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %idname = alloca i8*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3191, metadata !DIExpression()), !dbg !3192
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !3193, metadata !DIExpression()), !dbg !3194
  store i32 %in_out, i32* %in_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_out.addr, metadata !3195, metadata !DIExpression()), !dbg !3196
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3197, metadata !DIExpression()), !dbg !3198
  store i32 %subtype, i32* %subtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subtype.addr, metadata !3199, metadata !DIExpression()), !dbg !3200
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !3201, metadata !DIExpression()), !dbg !3202
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3203, metadata !DIExpression()), !dbg !3204
  call void @llvm.dbg.declare(metadata i8** %idname, metadata !3205, metadata !DIExpression()), !dbg !3206
  %0 = load i32, i32* %type.addr, align 4, !dbg !3207
  %1 = load i32, i32* %subtype.addr, align 4, !dbg !3208
  %call = call i8* @nodeStaticSocketType(i32 %0, i32 %1), !dbg !3209
  store i8* %call, i8** %idname, align 8, !dbg !3206
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !3210, metadata !DIExpression()), !dbg !3211
  %2 = load i8*, i8** %idname, align 8, !dbg !3212
  %tobool = icmp ne i8* %2, null, !dbg !3212
  br i1 %tobool, label %if.end, label %if.then, !dbg !3214

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %type.addr, align 4, !dbg !3215
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.42, i64 0, i64 0), i32 %3), !dbg !3217
  store %struct.bNodeSocket* null, %struct.bNodeSocket** %retval, align 8, !dbg !3218
  br label %return, !dbg !3218

if.end:                                           ; preds = %entry
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3219
  %5 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3220
  %6 = load i32, i32* %in_out.addr, align 4, !dbg !3221
  %7 = load i8*, i8** %idname, align 8, !dbg !3222
  %8 = load i8*, i8** %identifier.addr, align 8, !dbg !3223
  %9 = load i8*, i8** %name.addr, align 8, !dbg !3224
  %call2 = call %struct.bNodeSocket* @nodeAddSocket(%struct.bNodeTree* %4, %struct.bNode* %5, i32 %6, i8* %7, i8* %8, i8* %9), !dbg !3225
  store %struct.bNodeSocket* %call2, %struct.bNodeSocket** %sock, align 8, !dbg !3226
  %10 = load i32, i32* %type.addr, align 4, !dbg !3227
  %conv = trunc i32 %10 to i16, !dbg !3227
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3228
  %type3 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %11, i32 0, i32 7, !dbg !3229
  store i16 %conv, i16* %type3, align 8, !dbg !3230
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3231
  store %struct.bNodeSocket* %12, %struct.bNodeSocket** %retval, align 8, !dbg !3232
  br label %return, !dbg !3232

return:                                           ; preds = %if.end, %if.then
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %retval, align 8, !dbg !3233
  ret %struct.bNodeSocket* %13, !dbg !3233
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeSocket* @nodeInsertStaticSocket(%struct.bNodeTree* %ntree, %struct.bNode* %node, i32 %in_out, i32 %type, i32 %subtype, %struct.bNodeSocket* %next_sock, i8* %identifier, i8* %name) #0 !dbg !3234 {
entry:
  %retval = alloca %struct.bNodeSocket*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %in_out.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %subtype.addr = alloca i32, align 4
  %next_sock.addr = alloca %struct.bNodeSocket*, align 8
  %identifier.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %idname = alloca i8*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3237, metadata !DIExpression()), !dbg !3238
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !3239, metadata !DIExpression()), !dbg !3240
  store i32 %in_out, i32* %in_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_out.addr, metadata !3241, metadata !DIExpression()), !dbg !3242
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3243, metadata !DIExpression()), !dbg !3244
  store i32 %subtype, i32* %subtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subtype.addr, metadata !3245, metadata !DIExpression()), !dbg !3246
  store %struct.bNodeSocket* %next_sock, %struct.bNodeSocket** %next_sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %next_sock.addr, metadata !3247, metadata !DIExpression()), !dbg !3248
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !3249, metadata !DIExpression()), !dbg !3250
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3251, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.declare(metadata i8** %idname, metadata !3253, metadata !DIExpression()), !dbg !3254
  %0 = load i32, i32* %type.addr, align 4, !dbg !3255
  %1 = load i32, i32* %subtype.addr, align 4, !dbg !3256
  %call = call i8* @nodeStaticSocketType(i32 %0, i32 %1), !dbg !3257
  store i8* %call, i8** %idname, align 8, !dbg !3254
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !3258, metadata !DIExpression()), !dbg !3259
  %2 = load i8*, i8** %idname, align 8, !dbg !3260
  %tobool = icmp ne i8* %2, null, !dbg !3260
  br i1 %tobool, label %if.end, label %if.then, !dbg !3262

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %type.addr, align 4, !dbg !3263
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.42, i64 0, i64 0), i32 %3), !dbg !3265
  store %struct.bNodeSocket* null, %struct.bNodeSocket** %retval, align 8, !dbg !3266
  br label %return, !dbg !3266

if.end:                                           ; preds = %entry
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3267
  %5 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3268
  %6 = load i32, i32* %in_out.addr, align 4, !dbg !3269
  %7 = load i8*, i8** %idname, align 8, !dbg !3270
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next_sock.addr, align 8, !dbg !3271
  %9 = load i8*, i8** %identifier.addr, align 8, !dbg !3272
  %10 = load i8*, i8** %name.addr, align 8, !dbg !3273
  %call2 = call %struct.bNodeSocket* @nodeInsertSocket(%struct.bNodeTree* %4, %struct.bNode* %5, i32 %6, i8* %7, %struct.bNodeSocket* %8, i8* %9, i8* %10), !dbg !3274
  store %struct.bNodeSocket* %call2, %struct.bNodeSocket** %sock, align 8, !dbg !3275
  %11 = load i32, i32* %type.addr, align 4, !dbg !3276
  %conv = trunc i32 %11 to i16, !dbg !3276
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3277
  %type3 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %12, i32 0, i32 7, !dbg !3278
  store i16 %conv, i16* %type3, align 8, !dbg !3279
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3280
  store %struct.bNodeSocket* %13, %struct.bNodeSocket** %retval, align 8, !dbg !3281
  br label %return, !dbg !3281

return:                                           ; preds = %if.end, %if.then
  %14 = load %struct.bNodeSocket*, %struct.bNodeSocket** %retval, align 8, !dbg !3282
  ret %struct.bNodeSocket* %14, !dbg !3282
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeRemoveSocket(%struct.bNodeTree* %ntree, %struct.bNode* %node, %struct.bNodeSocket* %sock) #0 !dbg !3283 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %sock.addr = alloca %struct.bNodeSocket*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %next = alloca %struct.bNodeLink*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3286, metadata !DIExpression()), !dbg !3287
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !3288, metadata !DIExpression()), !dbg !3289
  store %struct.bNodeSocket* %sock, %struct.bNodeSocket** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock.addr, metadata !3290, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !3292, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %next, metadata !3296, metadata !DIExpression()), !dbg !3297
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3298
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 8, !dbg !3300
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !3301
  %1 = load i8*, i8** %first, align 8, !dbg !3301
  %2 = bitcast i8* %1 to %struct.bNodeLink*, !dbg !3298
  store %struct.bNodeLink* %2, %struct.bNodeLink** %link, align 8, !dbg !3302
  br label %for.cond, !dbg !3303

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3304
  %tobool = icmp ne %struct.bNodeLink* %3, null, !dbg !3306
  br i1 %tobool, label %for.body, label %for.end, !dbg !3306

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3307
  %next1 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %4, i32 0, i32 0, !dbg !3309
  %5 = load %struct.bNodeLink*, %struct.bNodeLink** %next1, align 8, !dbg !3309
  store %struct.bNodeLink* %5, %struct.bNodeLink** %next, align 8, !dbg !3310
  %6 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3311
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %6, i32 0, i32 4, !dbg !3313
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !3313
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3314
  %cmp = icmp eq %struct.bNodeSocket* %7, %8, !dbg !3315
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3316

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3317
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %9, i32 0, i32 5, !dbg !3318
  %10 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !3318
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3319
  %cmp2 = icmp eq %struct.bNodeSocket* %10, %11, !dbg !3320
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3321

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3322
  %13 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3324
  call void @nodeRemLink(%struct.bNodeTree* %12, %struct.bNodeLink* %13), !dbg !3325
  br label %if.end, !dbg !3326

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !3327

for.inc:                                          ; preds = %if.end
  %14 = load %struct.bNodeLink*, %struct.bNodeLink** %next, align 8, !dbg !3328
  store %struct.bNodeLink* %14, %struct.bNodeLink** %link, align 8, !dbg !3329
  br label %for.cond, !dbg !3330, !llvm.loop !3331

for.end:                                          ; preds = %for.cond
  %15 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3333
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 17, !dbg !3334
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3335
  %17 = bitcast %struct.bNodeSocket* %16 to i8*, !dbg !3335
  call void @BLI_remlink(%struct.ListBase* %inputs, i8* %17), !dbg !3336
  %18 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3337
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 18, !dbg !3338
  %19 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3339
  %20 = bitcast %struct.bNodeSocket* %19 to i8*, !dbg !3339
  call void @BLI_remlink(%struct.ListBase* %outputs, i8* %20), !dbg !3340
  %21 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3341
  %22 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3342
  %23 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3343
  call void @node_socket_free(%struct.bNodeTree* %21, %struct.bNodeSocket* %22, %struct.bNode* %23), !dbg !3344
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3345
  %25 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3346
  %26 = bitcast %struct.bNodeSocket* %25 to i8*, !dbg !3346
  call void %24(i8* %26), !dbg !3345
  %27 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3347
  %update = getelementptr inbounds %struct.bNode, %struct.bNode* %27, i32 0, i32 31, !dbg !3348
  %28 = load i32, i32* %update, align 4, !dbg !3349
  %or = or i32 %28, 65535, !dbg !3349
  store i32 %or, i32* %update, align 4, !dbg !3349
  ret void, !dbg !3350
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeRemLink(%struct.bNodeTree* %ntree, %struct.bNodeLink* %link) #0 !dbg !3351 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %link.addr = alloca %struct.bNodeLink*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3354, metadata !DIExpression()), !dbg !3355
  store %struct.bNodeLink* %link, %struct.bNodeLink** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link.addr, metadata !3356, metadata !DIExpression()), !dbg !3357
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3358
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !3358
  br i1 %tobool, label %if.then, label %if.end, !dbg !3360

if.then:                                          ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3361
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 8, !dbg !3362
  %2 = load %struct.bNodeLink*, %struct.bNodeLink** %link.addr, align 8, !dbg !3363
  %3 = bitcast %struct.bNodeLink* %2 to i8*, !dbg !3363
  call void @BLI_remlink(%struct.ListBase* %links, i8* %3), !dbg !3364
  br label %if.end, !dbg !3364

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.bNodeLink*, %struct.bNodeLink** %link.addr, align 8, !dbg !3365
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %4, i32 0, i32 5, !dbg !3367
  %5 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !3367
  %tobool1 = icmp ne %struct.bNodeSocket* %5, null, !dbg !3365
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !3368

if.then2:                                         ; preds = %if.end
  %6 = load %struct.bNodeLink*, %struct.bNodeLink** %link.addr, align 8, !dbg !3369
  %tosock3 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %6, i32 0, i32 5, !dbg !3370
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock3, align 8, !dbg !3370
  %link4 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %7, i32 0, i32 23, !dbg !3371
  store %struct.bNodeLink* null, %struct.bNodeLink** %link4, align 8, !dbg !3372
  br label %if.end5, !dbg !3369

if.end5:                                          ; preds = %if.then2, %if.end
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3373
  %9 = load %struct.bNodeLink*, %struct.bNodeLink** %link.addr, align 8, !dbg !3374
  %10 = bitcast %struct.bNodeLink* %9 to i8*, !dbg !3374
  call void %8(i8* %10), !dbg !3373
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3375
  %tobool6 = icmp ne %struct.bNodeTree* %11, null, !dbg !3375
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !3377

if.then7:                                         ; preds = %if.end5
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3378
  %update = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %12, i32 0, i32 13, !dbg !3379
  %13 = load i32, i32* %update, align 8, !dbg !3380
  %or = or i32 %13, 1, !dbg !3380
  store i32 %or, i32* %update, align 8, !dbg !3380
  br label %if.end8, !dbg !3378

if.end8:                                          ; preds = %if.then7, %if.end5
  ret void, !dbg !3381
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_socket_free(%struct.bNodeTree* %UNUSED_ntree, %struct.bNodeSocket* %sock, %struct.bNode* %UNUSED_node) #0 !dbg !3382 {
entry:
  %UNUSED_ntree.addr = alloca %struct.bNodeTree*, align 8
  %sock.addr = alloca %struct.bNodeSocket*, align 8
  %UNUSED_node.addr = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %UNUSED_ntree, %struct.bNodeTree** %UNUSED_ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %UNUSED_ntree.addr, metadata !3385, metadata !DIExpression()), !dbg !3386
  store %struct.bNodeSocket* %sock, %struct.bNodeSocket** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock.addr, metadata !3387, metadata !DIExpression()), !dbg !3388
  store %struct.bNode* %UNUSED_node, %struct.bNode** %UNUSED_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %UNUSED_node.addr, metadata !3389, metadata !DIExpression()), !dbg !3390
  %0 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3391
  %prop = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %0, i32 0, i32 3, !dbg !3393
  %1 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !3393
  %tobool = icmp ne %struct.IDProperty* %1, null, !dbg !3391
  br i1 %tobool, label %if.then, label %if.end, !dbg !3394

if.then:                                          ; preds = %entry
  %2 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3395
  %prop1 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %2, i32 0, i32 3, !dbg !3397
  %3 = load %struct.IDProperty*, %struct.IDProperty** %prop1, align 8, !dbg !3397
  call void @IDP_FreeProperty(%struct.IDProperty* %3), !dbg !3398
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3399
  %5 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3400
  %prop2 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %5, i32 0, i32 3, !dbg !3401
  %6 = load %struct.IDProperty*, %struct.IDProperty** %prop2, align 8, !dbg !3401
  %7 = bitcast %struct.IDProperty* %6 to i8*, !dbg !3400
  call void %4(i8* %7), !dbg !3399
  br label %if.end, !dbg !3402

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3403
  %default_value = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %8, i32 0, i32 15, !dbg !3405
  %9 = load i8*, i8** %default_value, align 8, !dbg !3405
  %tobool3 = icmp ne i8* %9, null, !dbg !3403
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !3406

if.then4:                                         ; preds = %if.end
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3407
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3408
  %default_value5 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %11, i32 0, i32 15, !dbg !3409
  %12 = load i8*, i8** %default_value5, align 8, !dbg !3409
  call void %10(i8* %12), !dbg !3407
  br label %if.end6, !dbg !3407

if.end6:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !3410
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeRemoveAllSockets(%struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !3411 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %sock_next = alloca %struct.bNodeSocket*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %next = alloca %struct.bNodeLink*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3414, metadata !DIExpression()), !dbg !3415
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !3416, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !3418, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock_next, metadata !3420, metadata !DIExpression()), !dbg !3421
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !3422, metadata !DIExpression()), !dbg !3423
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %next, metadata !3424, metadata !DIExpression()), !dbg !3425
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3426
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 8, !dbg !3428
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !3429
  %1 = load i8*, i8** %first, align 8, !dbg !3429
  %2 = bitcast i8* %1 to %struct.bNodeLink*, !dbg !3426
  store %struct.bNodeLink* %2, %struct.bNodeLink** %link, align 8, !dbg !3430
  br label %for.cond, !dbg !3431

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3432
  %tobool = icmp ne %struct.bNodeLink* %3, null, !dbg !3434
  br i1 %tobool, label %for.body, label %for.end, !dbg !3434

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3435
  %next1 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %4, i32 0, i32 0, !dbg !3437
  %5 = load %struct.bNodeLink*, %struct.bNodeLink** %next1, align 8, !dbg !3437
  store %struct.bNodeLink* %5, %struct.bNodeLink** %next, align 8, !dbg !3438
  %6 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3439
  %fromnode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %6, i32 0, i32 2, !dbg !3441
  %7 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !3441
  %8 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3442
  %cmp = icmp eq %struct.bNode* %7, %8, !dbg !3443
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3444

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3445
  %tonode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %9, i32 0, i32 3, !dbg !3446
  %10 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !3446
  %11 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3447
  %cmp2 = icmp eq %struct.bNode* %10, %11, !dbg !3448
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3449

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3450
  %13 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3452
  call void @nodeRemLink(%struct.bNodeTree* %12, %struct.bNodeLink* %13), !dbg !3453
  br label %if.end, !dbg !3454

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !3455

for.inc:                                          ; preds = %if.end
  %14 = load %struct.bNodeLink*, %struct.bNodeLink** %next, align 8, !dbg !3456
  store %struct.bNodeLink* %14, %struct.bNodeLink** %link, align 8, !dbg !3457
  br label %for.cond, !dbg !3458, !llvm.loop !3459

for.end:                                          ; preds = %for.cond
  %15 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3461
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 17, !dbg !3463
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !3464
  %16 = load i8*, i8** %first3, align 8, !dbg !3464
  %17 = bitcast i8* %16 to %struct.bNodeSocket*, !dbg !3461
  store %struct.bNodeSocket* %17, %struct.bNodeSocket** %sock, align 8, !dbg !3465
  br label %for.cond4, !dbg !3466

for.cond4:                                        ; preds = %for.inc8, %for.end
  %18 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3467
  %tobool5 = icmp ne %struct.bNodeSocket* %18, null, !dbg !3469
  br i1 %tobool5, label %for.body6, label %for.end9, !dbg !3469

for.body6:                                        ; preds = %for.cond4
  %19 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3470
  %next7 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %19, i32 0, i32 0, !dbg !3472
  %20 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next7, align 8, !dbg !3472
  store %struct.bNodeSocket* %20, %struct.bNodeSocket** %sock_next, align 8, !dbg !3473
  %21 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3474
  %22 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3475
  %23 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3476
  call void @node_socket_free(%struct.bNodeTree* %21, %struct.bNodeSocket* %22, %struct.bNode* %23), !dbg !3477
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3478
  %25 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3479
  %26 = bitcast %struct.bNodeSocket* %25 to i8*, !dbg !3479
  call void %24(i8* %26), !dbg !3478
  br label %for.inc8, !dbg !3480

for.inc8:                                         ; preds = %for.body6
  %27 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock_next, align 8, !dbg !3481
  store %struct.bNodeSocket* %27, %struct.bNodeSocket** %sock, align 8, !dbg !3482
  br label %for.cond4, !dbg !3483, !llvm.loop !3484

for.end9:                                         ; preds = %for.cond4
  %28 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3486
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %28, i32 0, i32 18, !dbg !3488
  %first10 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !3489
  %29 = load i8*, i8** %first10, align 8, !dbg !3489
  %30 = bitcast i8* %29 to %struct.bNodeSocket*, !dbg !3486
  store %struct.bNodeSocket* %30, %struct.bNodeSocket** %sock, align 8, !dbg !3490
  br label %for.cond11, !dbg !3491

for.cond11:                                       ; preds = %for.inc15, %for.end9
  %31 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3492
  %tobool12 = icmp ne %struct.bNodeSocket* %31, null, !dbg !3494
  br i1 %tobool12, label %for.body13, label %for.end16, !dbg !3494

for.body13:                                       ; preds = %for.cond11
  %32 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3495
  %next14 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %32, i32 0, i32 0, !dbg !3497
  %33 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next14, align 8, !dbg !3497
  store %struct.bNodeSocket* %33, %struct.bNodeSocket** %sock_next, align 8, !dbg !3498
  %34 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3499
  %35 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3500
  %36 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3501
  call void @node_socket_free(%struct.bNodeTree* %34, %struct.bNodeSocket* %35, %struct.bNode* %36), !dbg !3502
  %37 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3503
  %38 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3504
  %39 = bitcast %struct.bNodeSocket* %38 to i8*, !dbg !3504
  call void %37(i8* %39), !dbg !3503
  br label %for.inc15, !dbg !3505

for.inc15:                                        ; preds = %for.body13
  %40 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock_next, align 8, !dbg !3506
  store %struct.bNodeSocket* %40, %struct.bNodeSocket** %sock, align 8, !dbg !3507
  br label %for.cond11, !dbg !3508, !llvm.loop !3509

for.end16:                                        ; preds = %for.cond11
  %41 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3511
  %update = getelementptr inbounds %struct.bNode, %struct.bNode* %41, i32 0, i32 31, !dbg !3512
  %42 = load i32, i32* %update, align 4, !dbg !3513
  %or = or i32 %42, 65535, !dbg !3513
  store i32 %or, i32* %update, align 4, !dbg !3513
  ret void, !dbg !3514
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNode* @nodeFindNodebyName(%struct.bNodeTree* %ntree, i8* %name) #0 !dbg !3515 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3518, metadata !DIExpression()), !dbg !3519
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3520, metadata !DIExpression()), !dbg !3521
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3522
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !3523
  %1 = load i8*, i8** %name.addr, align 8, !dbg !3524
  %call = call i8* @BLI_findstring(%struct.ListBase* %nodes, i8* %1, i32 104), !dbg !3525
  %2 = bitcast i8* %call to %struct.bNode*, !dbg !3525
  ret %struct.bNode* %2, !dbg !3526
}

declare dso_local i8* @BLI_findstring(%struct.ListBase*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @nodeFindNode(%struct.bNodeTree* %ntree, %struct.bNodeSocket* %sock, %struct.bNode** %nodep, i32* %sockindex) #0 !dbg !3527 {
entry:
  %retval = alloca i32, align 4
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %sock.addr = alloca %struct.bNodeSocket*, align 8
  %nodep.addr = alloca %struct.bNode**, align 8
  %sockindex.addr = alloca i32*, align 8
  %in_out = alloca i32, align 4
  %node = alloca %struct.bNode*, align 8
  %tsock = alloca %struct.bNodeSocket*, align 8
  %index = alloca i32, align 4
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3532, metadata !DIExpression()), !dbg !3533
  store %struct.bNodeSocket* %sock, %struct.bNodeSocket** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock.addr, metadata !3534, metadata !DIExpression()), !dbg !3535
  store %struct.bNode** %nodep, %struct.bNode*** %nodep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode*** %nodep.addr, metadata !3536, metadata !DIExpression()), !dbg !3537
  store i32* %sockindex, i32** %sockindex.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %sockindex.addr, metadata !3538, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.declare(metadata i32* %in_out, metadata !3540, metadata !DIExpression()), !dbg !3541
  %0 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3542
  %in_out1 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %0, i32 0, i32 10, !dbg !3543
  %1 = load i16, i16* %in_out1, align 2, !dbg !3543
  %conv = sext i16 %1 to i32, !dbg !3542
  store i32 %conv, i32* %in_out, align 4, !dbg !3541
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !3544, metadata !DIExpression()), !dbg !3545
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %tsock, metadata !3546, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3548, metadata !DIExpression()), !dbg !3549
  store i32 0, i32* %index, align 4, !dbg !3549
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3550
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 7, !dbg !3552
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !3553
  %3 = load i8*, i8** %first, align 8, !dbg !3553
  %4 = bitcast i8* %3 to %struct.bNode*, !dbg !3550
  store %struct.bNode* %4, %struct.bNode** %node, align 8, !dbg !3554
  br label %for.cond, !dbg !3555

for.cond:                                         ; preds = %for.inc13, %entry
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3556
  %tobool = icmp ne %struct.bNode* %5, null, !dbg !3558
  br i1 %tobool, label %for.body, label %for.end15, !dbg !3558

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %in_out, align 4, !dbg !3559
  %cmp = icmp eq i32 %6, 1, !dbg !3561
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3559

cond.true:                                        ; preds = %for.body
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3562
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 17, !dbg !3563
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !3564
  %8 = load i8*, i8** %first3, align 8, !dbg !3564
  br label %cond.end, !dbg !3559

cond.false:                                       ; preds = %for.body
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3565
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 18, !dbg !3566
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !3567
  %10 = load i8*, i8** %first4, align 8, !dbg !3567
  br label %cond.end, !dbg !3559

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %8, %cond.true ], [ %10, %cond.false ], !dbg !3559
  %11 = bitcast i8* %cond to %struct.bNodeSocket*, !dbg !3568
  store %struct.bNodeSocket* %11, %struct.bNodeSocket** %tsock, align 8, !dbg !3569
  store i32 0, i32* %index, align 4, !dbg !3570
  br label %for.cond5, !dbg !3572

for.cond5:                                        ; preds = %for.inc, %cond.end
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tsock, align 8, !dbg !3573
  %tobool6 = icmp ne %struct.bNodeSocket* %12, null, !dbg !3575
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !3575

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tsock, align 8, !dbg !3576
  %14 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !3579
  %cmp8 = icmp eq %struct.bNodeSocket* %13, %14, !dbg !3580
  br i1 %cmp8, label %if.then, label %if.end, !dbg !3581

if.then:                                          ; preds = %for.body7
  br label %for.end, !dbg !3582

if.end:                                           ; preds = %for.body7
  br label %for.inc, !dbg !3583

for.inc:                                          ; preds = %if.end
  %15 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tsock, align 8, !dbg !3584
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %15, i32 0, i32 0, !dbg !3585
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !3585
  store %struct.bNodeSocket* %16, %struct.bNodeSocket** %tsock, align 8, !dbg !3586
  %17 = load i32, i32* %index, align 4, !dbg !3587
  %inc = add nsw i32 %17, 1, !dbg !3587
  store i32 %inc, i32* %index, align 4, !dbg !3587
  br label %for.cond5, !dbg !3588, !llvm.loop !3589

for.end:                                          ; preds = %if.then, %for.cond5
  %18 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tsock, align 8, !dbg !3591
  %tobool10 = icmp ne %struct.bNodeSocket* %18, null, !dbg !3591
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !3593

if.then11:                                        ; preds = %for.end
  br label %for.end15, !dbg !3594

if.end12:                                         ; preds = %for.end
  br label %for.inc13, !dbg !3595

for.inc13:                                        ; preds = %if.end12
  %19 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3596
  %next14 = getelementptr inbounds %struct.bNode, %struct.bNode* %19, i32 0, i32 0, !dbg !3597
  %20 = load %struct.bNode*, %struct.bNode** %next14, align 8, !dbg !3597
  store %struct.bNode* %20, %struct.bNode** %node, align 8, !dbg !3598
  br label %for.cond, !dbg !3599, !llvm.loop !3600

for.end15:                                        ; preds = %if.then11, %for.cond
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3602
  %tobool16 = icmp ne %struct.bNode* %21, null, !dbg !3602
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !3604

if.then17:                                        ; preds = %for.end15
  %22 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3605
  %23 = load %struct.bNode**, %struct.bNode*** %nodep.addr, align 8, !dbg !3607
  store %struct.bNode* %22, %struct.bNode** %23, align 8, !dbg !3608
  %24 = load i32*, i32** %sockindex.addr, align 8, !dbg !3609
  %tobool18 = icmp ne i32* %24, null, !dbg !3609
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !3611

if.then19:                                        ; preds = %if.then17
  %25 = load i32, i32* %index, align 4, !dbg !3612
  %26 = load i32*, i32** %sockindex.addr, align 8, !dbg !3613
  store i32 %25, i32* %26, align 4, !dbg !3614
  br label %if.end20, !dbg !3615

if.end20:                                         ; preds = %if.then19, %if.then17
  store i32 1, i32* %retval, align 4, !dbg !3616
  br label %return, !dbg !3616

if.end21:                                         ; preds = %for.end15
  %27 = load %struct.bNode**, %struct.bNode*** %nodep.addr, align 8, !dbg !3617
  store %struct.bNode* null, %struct.bNode** %27, align 8, !dbg !3618
  store i32 0, i32* %retval, align 4, !dbg !3619
  br label %return, !dbg !3619

return:                                           ; preds = %if.end21, %if.end20
  %28 = load i32, i32* %retval, align 4, !dbg !3620
  ret i32 %28, !dbg !3620
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeUniqueName(%struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !3621 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3622, metadata !DIExpression()), !dbg !3623
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !3624, metadata !DIExpression()), !dbg !3625
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3626
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !3627
  %1 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3628
  %2 = bitcast %struct.bNode* %1 to i8*, !dbg !3628
  call void @BLI_uniquename(%struct.ListBase* %nodes, i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i8 zeroext 46, i32 104, i32 64), !dbg !3629
  ret void, !dbg !3630
}

declare dso_local void @BLI_uniquename(%struct.ListBase*, i8*, i8*, i8 zeroext, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNode* @nodeAddNode(%struct.bContext* %C, %struct.bNodeTree* %ntree, i8* %idname) #0 !dbg !3631 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %idname.addr = alloca i8*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3634, metadata !DIExpression()), !dbg !3635
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3636, metadata !DIExpression()), !dbg !3637
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !3638, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !3640, metadata !DIExpression()), !dbg !3641
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3642
  %call = call i8* %0(i64 464, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0)), !dbg !3642
  %1 = bitcast i8* %call to %struct.bNode*, !dbg !3642
  store %struct.bNode* %1, %struct.bNode** %node, align 8, !dbg !3643
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3644
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 7, !dbg !3645
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3646
  %4 = bitcast %struct.bNode* %3 to i8*, !dbg !3646
  call void @BLI_addtail(%struct.ListBase* %nodes, i8* %4), !dbg !3647
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3648
  %idname1 = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 5, !dbg !3649
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !3648
  %6 = load i8*, i8** %idname.addr, align 8, !dbg !3650
  %call2 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %6, i64 64), !dbg !3651
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3652
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3653
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3654
  %10 = load i8*, i8** %idname.addr, align 8, !dbg !3655
  %call3 = call %struct.bNodeType* @nodeTypeFind(i8* %10), !dbg !3656
  call void @node_set_typeinfo(%struct.bContext* %7, %struct.bNodeTree* %8, %struct.bNode* %9, %struct.bNodeType* %call3), !dbg !3657
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3658
  %update = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %11, i32 0, i32 13, !dbg !3659
  %12 = load i32, i32* %update, align 8, !dbg !3660
  %or = or i32 %12, 2, !dbg !3660
  store i32 %or, i32* %update, align 8, !dbg !3660
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !3661
  ret %struct.bNode* %13, !dbg !3662
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNode* @nodeAddStaticNode(%struct.bContext* %C, %struct.bNodeTree* %ntree, i32 %type) #0 !dbg !3663 {
entry:
  %retval = alloca %struct.bNode*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %type.addr = alloca i32, align 4
  %idname = alloca i8*, align 8
  %__node_type_iter__ = alloca %struct.GHashIterator*, align 8
  %ntype = alloca %struct.bNodeType*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3666, metadata !DIExpression()), !dbg !3667
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3668, metadata !DIExpression()), !dbg !3669
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3670, metadata !DIExpression()), !dbg !3671
  call void @llvm.dbg.declare(metadata i8** %idname, metadata !3672, metadata !DIExpression()), !dbg !3673
  store i8* null, i8** %idname, align 8, !dbg !3673
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %__node_type_iter__, metadata !3674, metadata !DIExpression()), !dbg !3678
  %call = call %struct.GHashIterator* @nodeTypeGetIterator(), !dbg !3678
  store %struct.GHashIterator* %call, %struct.GHashIterator** %__node_type_iter__, align 8, !dbg !3678
  br label %for.cond, !dbg !3678

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_type_iter__, align 8, !dbg !3679
  %call1 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %0), !dbg !3679
  %tobool = icmp ne i8 %call1, 0, !dbg !3679
  %lnot = xor i1 %tobool, true, !dbg !3679
  br i1 %lnot, label %for.body, label %for.end, !dbg !3682

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype, metadata !3683, metadata !DIExpression()), !dbg !3685
  %1 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_type_iter__, align 8, !dbg !3685
  %call2 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %1), !dbg !3685
  %2 = bitcast i8* %call2 to %struct.bNodeType*, !dbg !3685
  store %struct.bNodeType* %2, %struct.bNodeType** %ntype, align 8, !dbg !3685
  %3 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !3686
  %type3 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %3, i32 0, i32 4, !dbg !3688
  %4 = load i32, i32* %type3, align 4, !dbg !3688
  %5 = load i32, i32* %type.addr, align 4, !dbg !3689
  %cmp = icmp eq i32 %4, %5, !dbg !3690
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3691

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !3692
  %poll = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %6, i32 0, i32 37, !dbg !3693
  %7 = load i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)** %poll, align 8, !dbg !3693
  %tobool4 = icmp ne i32 (%struct.bNodeType*, %struct.bNodeTree*)* %7, null, !dbg !3692
  br i1 %tobool4, label %lor.lhs.false, label %if.then, !dbg !3694

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !3695
  %poll5 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %8, i32 0, i32 37, !dbg !3696
  %9 = load i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)** %poll5, align 8, !dbg !3696
  %10 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !3697
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3698
  %call6 = call i32 %9(%struct.bNodeType* %10, %struct.bNodeTree* %11), !dbg !3695
  %tobool7 = icmp ne i32 %call6, 0, !dbg !3695
  br i1 %tobool7, label %if.then, label %if.end, !dbg !3699

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %12 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !3700
  %idname8 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %12, i32 0, i32 3, !dbg !3702
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname8, i64 0, i64 0, !dbg !3700
  store i8* %arraydecay, i8** %idname, align 8, !dbg !3703
  br label %for.end, !dbg !3704

if.end:                                           ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !3705

for.inc:                                          ; preds = %if.end
  %13 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_type_iter__, align 8, !dbg !3679
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %13), !dbg !3679
  br label %for.cond, !dbg !3679, !llvm.loop !3706

for.end:                                          ; preds = %if.then, %for.cond
  %14 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_type_iter__, align 8, !dbg !3708
  call void @BLI_ghashIterator_free(%struct.GHashIterator* %14), !dbg !3708
  %15 = load i8*, i8** %idname, align 8, !dbg !3709
  %tobool9 = icmp ne i8* %15, null, !dbg !3709
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !3711

if.then10:                                        ; preds = %for.end
  %16 = load i32, i32* %type.addr, align 4, !dbg !3712
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.45, i64 0, i64 0), i32 %16), !dbg !3714
  store %struct.bNode* null, %struct.bNode** %retval, align 8, !dbg !3715
  br label %return, !dbg !3715

if.end12:                                         ; preds = %for.end
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3716
  %18 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3717
  %19 = load i8*, i8** %idname, align 8, !dbg !3718
  %call13 = call %struct.bNode* @nodeAddNode(%struct.bContext* %17, %struct.bNodeTree* %18, i8* %19), !dbg !3719
  store %struct.bNode* %call13, %struct.bNode** %retval, align 8, !dbg !3720
  br label %return, !dbg !3720

return:                                           ; preds = %if.end12, %if.then10
  %20 = load %struct.bNode*, %struct.bNode** %retval, align 8, !dbg !3721
  ret %struct.bNode* %20, !dbg !3721
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %ghi) #0 !dbg !3722 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !3725, metadata !DIExpression()), !dbg !3726
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !3727
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !3728
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !3728
  %tobool = icmp ne %struct.Entry* %1, null, !dbg !3729
  %lnot = xor i1 %tobool, true, !dbg !3729
  %lnot.ext = zext i1 %lnot to i32, !dbg !3729
  %conv = trunc i32 %lnot.ext to i8, !dbg !3729
  ret i8 %conv, !dbg !3730
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %ghi) #0 !dbg !3731 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !3734, metadata !DIExpression()), !dbg !3735
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !3736
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !3737
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !3737
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !3738
  %val = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 2, !dbg !3738
  %3 = load i8*, i8** %val, align 8, !dbg !3738
  ret i8* %3, !dbg !3739
}

declare dso_local void @BLI_ghashIterator_step(%struct.GHashIterator*) #2

declare dso_local void @BLI_ghashIterator_free(%struct.GHashIterator*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNode* @nodeCopyNode(%struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !3740 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %nnode = alloca %struct.bNode*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %oldsock = alloca %struct.bNodeSocket*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %oldlink = alloca %struct.bNodeLink*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3743, metadata !DIExpression()), !dbg !3744
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !3745, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.declare(metadata %struct.bNode** %nnode, metadata !3747, metadata !DIExpression()), !dbg !3748
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3749
  %call = call i8* %0(i64 464, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0)), !dbg !3749
  %1 = bitcast i8* %call to %struct.bNode*, !dbg !3749
  store %struct.bNode* %1, %struct.bNode** %nnode, align 8, !dbg !3748
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !3750, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %oldsock, metadata !3752, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !3754, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %oldlink, metadata !3756, metadata !DIExpression()), !dbg !3757
  %2 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3758
  %3 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3759
  %4 = bitcast %struct.bNode* %2 to i8*, !dbg !3760
  %5 = bitcast %struct.bNode* %3 to i8*, !dbg !3760
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 464, i1 false), !dbg !3760
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3761
  %tobool = icmp ne %struct.bNodeTree* %6, null, !dbg !3761
  br i1 %tobool, label %if.then, label %if.end, !dbg !3763

if.then:                                          ; preds = %entry
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3764
  %8 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3766
  call void @nodeUniqueName(%struct.bNodeTree* %7, %struct.bNode* %8), !dbg !3767
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3768
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 7, !dbg !3769
  %10 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3770
  %11 = bitcast %struct.bNode* %10 to i8*, !dbg !3770
  call void @BLI_addtail(%struct.ListBase* %nodes, i8* %11), !dbg !3771
  br label %if.end, !dbg !3772

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3773
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 17, !dbg !3774
  %13 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3775
  %inputs1 = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 17, !dbg !3776
  call void @BLI_duplicatelist(%struct.ListBase* %inputs, %struct.ListBase* %inputs1), !dbg !3777
  %14 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3778
  %inputs2 = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 17, !dbg !3779
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs2, i32 0, i32 0, !dbg !3780
  %15 = load i8*, i8** %first, align 8, !dbg !3780
  %16 = bitcast i8* %15 to %struct.bNodeSocket*, !dbg !3778
  store %struct.bNodeSocket* %16, %struct.bNodeSocket** %oldsock, align 8, !dbg !3781
  %17 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3782
  %inputs3 = getelementptr inbounds %struct.bNode, %struct.bNode* %17, i32 0, i32 17, !dbg !3784
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs3, i32 0, i32 0, !dbg !3785
  %18 = load i8*, i8** %first4, align 8, !dbg !3785
  %19 = bitcast i8* %18 to %struct.bNodeSocket*, !dbg !3782
  store %struct.bNodeSocket* %19, %struct.bNodeSocket** %sock, align 8, !dbg !3786
  br label %for.cond, !dbg !3787

for.cond:                                         ; preds = %for.inc, %if.end
  %20 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3788
  %tobool5 = icmp ne %struct.bNodeSocket* %20, null, !dbg !3790
  br i1 %tobool5, label %for.body, label %for.end, !dbg !3790

for.body:                                         ; preds = %for.cond
  %21 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3791
  %22 = load %struct.bNodeSocket*, %struct.bNodeSocket** %oldsock, align 8, !dbg !3792
  call void @node_socket_copy(%struct.bNodeSocket* %21, %struct.bNodeSocket* %22), !dbg !3793
  br label %for.inc, !dbg !3793

for.inc:                                          ; preds = %for.body
  %23 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3794
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %23, i32 0, i32 0, !dbg !3795
  %24 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !3795
  store %struct.bNodeSocket* %24, %struct.bNodeSocket** %sock, align 8, !dbg !3796
  %25 = load %struct.bNodeSocket*, %struct.bNodeSocket** %oldsock, align 8, !dbg !3797
  %next6 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %25, i32 0, i32 0, !dbg !3798
  %26 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next6, align 8, !dbg !3798
  store %struct.bNodeSocket* %26, %struct.bNodeSocket** %oldsock, align 8, !dbg !3799
  br label %for.cond, !dbg !3800, !llvm.loop !3801

for.end:                                          ; preds = %for.cond
  %27 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3803
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %27, i32 0, i32 18, !dbg !3804
  %28 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3805
  %outputs7 = getelementptr inbounds %struct.bNode, %struct.bNode* %28, i32 0, i32 18, !dbg !3806
  call void @BLI_duplicatelist(%struct.ListBase* %outputs, %struct.ListBase* %outputs7), !dbg !3807
  %29 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3808
  %outputs8 = getelementptr inbounds %struct.bNode, %struct.bNode* %29, i32 0, i32 18, !dbg !3809
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs8, i32 0, i32 0, !dbg !3810
  %30 = load i8*, i8** %first9, align 8, !dbg !3810
  %31 = bitcast i8* %30 to %struct.bNodeSocket*, !dbg !3808
  store %struct.bNodeSocket* %31, %struct.bNodeSocket** %oldsock, align 8, !dbg !3811
  %32 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3812
  %outputs10 = getelementptr inbounds %struct.bNode, %struct.bNode* %32, i32 0, i32 18, !dbg !3814
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs10, i32 0, i32 0, !dbg !3815
  %33 = load i8*, i8** %first11, align 8, !dbg !3815
  %34 = bitcast i8* %33 to %struct.bNodeSocket*, !dbg !3812
  store %struct.bNodeSocket* %34, %struct.bNodeSocket** %sock, align 8, !dbg !3816
  br label %for.cond12, !dbg !3817

for.cond12:                                       ; preds = %for.inc15, %for.end
  %35 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3818
  %tobool13 = icmp ne %struct.bNodeSocket* %35, null, !dbg !3820
  br i1 %tobool13, label %for.body14, label %for.end18, !dbg !3820

for.body14:                                       ; preds = %for.cond12
  %36 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3821
  %37 = load %struct.bNodeSocket*, %struct.bNodeSocket** %oldsock, align 8, !dbg !3822
  call void @node_socket_copy(%struct.bNodeSocket* %36, %struct.bNodeSocket* %37), !dbg !3823
  br label %for.inc15, !dbg !3823

for.inc15:                                        ; preds = %for.body14
  %38 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !3824
  %next16 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %38, i32 0, i32 0, !dbg !3825
  %39 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next16, align 8, !dbg !3825
  store %struct.bNodeSocket* %39, %struct.bNodeSocket** %sock, align 8, !dbg !3826
  %40 = load %struct.bNodeSocket*, %struct.bNodeSocket** %oldsock, align 8, !dbg !3827
  %next17 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %40, i32 0, i32 0, !dbg !3828
  %41 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next17, align 8, !dbg !3828
  store %struct.bNodeSocket* %41, %struct.bNodeSocket** %oldsock, align 8, !dbg !3829
  br label %for.cond12, !dbg !3830, !llvm.loop !3831

for.end18:                                        ; preds = %for.cond12
  %42 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3833
  %prop = getelementptr inbounds %struct.bNode, %struct.bNode* %42, i32 0, i32 3, !dbg !3835
  %43 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !3835
  %tobool19 = icmp ne %struct.IDProperty* %43, null, !dbg !3833
  br i1 %tobool19, label %if.then20, label %if.end24, !dbg !3836

if.then20:                                        ; preds = %for.end18
  %44 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3837
  %prop21 = getelementptr inbounds %struct.bNode, %struct.bNode* %44, i32 0, i32 3, !dbg !3838
  %45 = load %struct.IDProperty*, %struct.IDProperty** %prop21, align 8, !dbg !3838
  %call22 = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %45), !dbg !3839
  %46 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3840
  %prop23 = getelementptr inbounds %struct.bNode, %struct.bNode* %46, i32 0, i32 3, !dbg !3841
  store %struct.IDProperty* %call22, %struct.IDProperty** %prop23, align 8, !dbg !3842
  br label %if.end24, !dbg !3840

if.end24:                                         ; preds = %if.then20, %for.end18
  %47 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3843
  %internal_links = getelementptr inbounds %struct.bNode, %struct.bNode* %47, i32 0, i32 23, !dbg !3844
  %48 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3845
  %internal_links25 = getelementptr inbounds %struct.bNode, %struct.bNode* %48, i32 0, i32 23, !dbg !3846
  call void @BLI_duplicatelist(%struct.ListBase* %internal_links, %struct.ListBase* %internal_links25), !dbg !3847
  %49 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3848
  %internal_links26 = getelementptr inbounds %struct.bNode, %struct.bNode* %49, i32 0, i32 23, !dbg !3849
  %first27 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %internal_links26, i32 0, i32 0, !dbg !3850
  %50 = load i8*, i8** %first27, align 8, !dbg !3850
  %51 = bitcast i8* %50 to %struct.bNodeLink*, !dbg !3848
  store %struct.bNodeLink* %51, %struct.bNodeLink** %oldlink, align 8, !dbg !3851
  %52 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3852
  %internal_links28 = getelementptr inbounds %struct.bNode, %struct.bNode* %52, i32 0, i32 23, !dbg !3854
  %first29 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %internal_links28, i32 0, i32 0, !dbg !3855
  %53 = load i8*, i8** %first29, align 8, !dbg !3855
  %54 = bitcast i8* %53 to %struct.bNodeLink*, !dbg !3852
  store %struct.bNodeLink* %54, %struct.bNodeLink** %link, align 8, !dbg !3856
  br label %for.cond30, !dbg !3857

for.cond30:                                       ; preds = %for.inc36, %if.end24
  %55 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3858
  %tobool31 = icmp ne %struct.bNodeLink* %55, null, !dbg !3860
  br i1 %tobool31, label %for.body32, label %for.end39, !dbg !3860

for.body32:                                       ; preds = %for.cond30
  %56 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3861
  %57 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3863
  %fromnode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %57, i32 0, i32 2, !dbg !3864
  store %struct.bNode* %56, %struct.bNode** %fromnode, align 8, !dbg !3865
  %58 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3866
  %59 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3867
  %tonode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %59, i32 0, i32 3, !dbg !3868
  store %struct.bNode* %58, %struct.bNode** %tonode, align 8, !dbg !3869
  %60 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3870
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %60, i32 0, i32 4, !dbg !3871
  %61 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !3871
  %new_sock = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %61, i32 0, i32 2, !dbg !3872
  %62 = load %struct.bNodeSocket*, %struct.bNodeSocket** %new_sock, align 8, !dbg !3872
  %63 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3873
  %fromsock33 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %63, i32 0, i32 4, !dbg !3874
  store %struct.bNodeSocket* %62, %struct.bNodeSocket** %fromsock33, align 8, !dbg !3875
  %64 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3876
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %64, i32 0, i32 5, !dbg !3877
  %65 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !3877
  %new_sock34 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %65, i32 0, i32 2, !dbg !3878
  %66 = load %struct.bNodeSocket*, %struct.bNodeSocket** %new_sock34, align 8, !dbg !3878
  %67 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3879
  %tosock35 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %67, i32 0, i32 5, !dbg !3880
  store %struct.bNodeSocket* %66, %struct.bNodeSocket** %tosock35, align 8, !dbg !3881
  br label %for.inc36, !dbg !3882

for.inc36:                                        ; preds = %for.body32
  %68 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !3883
  %next37 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %68, i32 0, i32 0, !dbg !3884
  %69 = load %struct.bNodeLink*, %struct.bNodeLink** %next37, align 8, !dbg !3884
  store %struct.bNodeLink* %69, %struct.bNodeLink** %link, align 8, !dbg !3885
  %70 = load %struct.bNodeLink*, %struct.bNodeLink** %oldlink, align 8, !dbg !3886
  %next38 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %70, i32 0, i32 0, !dbg !3887
  %71 = load %struct.bNodeLink*, %struct.bNodeLink** %next38, align 8, !dbg !3887
  store %struct.bNodeLink* %71, %struct.bNodeLink** %oldlink, align 8, !dbg !3888
  br label %for.cond30, !dbg !3889, !llvm.loop !3890

for.end39:                                        ; preds = %for.cond30
  %72 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3892
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %72, i32 0, i32 4, !dbg !3894
  %73 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !3894
  %copyfunc = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %73, i32 0, i32 33, !dbg !3895
  %74 = load void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)** %copyfunc, align 8, !dbg !3895
  %tobool40 = icmp ne void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)* %74, null, !dbg !3892
  br i1 %tobool40, label %if.then41, label %if.end44, !dbg !3896

if.then41:                                        ; preds = %for.end39
  %75 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3897
  %typeinfo42 = getelementptr inbounds %struct.bNode, %struct.bNode* %75, i32 0, i32 4, !dbg !3898
  %76 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo42, align 8, !dbg !3898
  %copyfunc43 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %76, i32 0, i32 33, !dbg !3899
  %77 = load void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)** %copyfunc43, align 8, !dbg !3899
  %78 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3900
  %79 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3901
  %80 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3902
  call void %77(%struct.bNodeTree* %78, %struct.bNode* %79, %struct.bNode* %80), !dbg !3897
  br label %if.end44, !dbg !3897

if.end44:                                         ; preds = %if.then41, %for.end39
  %81 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3903
  %82 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3904
  %new_node = getelementptr inbounds %struct.bNode, %struct.bNode* %82, i32 0, i32 2, !dbg !3905
  store %struct.bNode* %81, %struct.bNode** %new_node, align 8, !dbg !3906
  %83 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3907
  %new_node45 = getelementptr inbounds %struct.bNode, %struct.bNode* %83, i32 0, i32 2, !dbg !3908
  store %struct.bNode* null, %struct.bNode** %new_node45, align 8, !dbg !3909
  %84 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3910
  %typeinfo46 = getelementptr inbounds %struct.bNode, %struct.bNode* %84, i32 0, i32 4, !dbg !3912
  %85 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo46, align 8, !dbg !3912
  %copyfunc_api = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %85, i32 0, i32 36, !dbg !3913
  %86 = load void (%struct.PointerRNA*, %struct.bNode*)*, void (%struct.PointerRNA*, %struct.bNode*)** %copyfunc_api, align 8, !dbg !3913
  %tobool47 = icmp ne void (%struct.PointerRNA*, %struct.bNode*)* %86, null, !dbg !3910
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !3914

if.then48:                                        ; preds = %if.end44
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !3915, metadata !DIExpression()), !dbg !3918
  %87 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3919
  %88 = bitcast %struct.bNodeTree* %87 to %struct.ID*, !dbg !3920
  %89 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3921
  %90 = bitcast %struct.bNode* %89 to i8*, !dbg !3921
  call void @RNA_pointer_create(%struct.ID* %88, %struct.StructRNA* @RNA_Node, i8* %90, %struct.PointerRNA* %ptr), !dbg !3922
  %91 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3923
  %typeinfo49 = getelementptr inbounds %struct.bNode, %struct.bNode* %91, i32 0, i32 4, !dbg !3924
  %92 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo49, align 8, !dbg !3924
  %copyfunc_api50 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %92, i32 0, i32 36, !dbg !3925
  %93 = load void (%struct.PointerRNA*, %struct.bNode*)*, void (%struct.PointerRNA*, %struct.bNode*)** %copyfunc_api50, align 8, !dbg !3925
  %94 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !3926
  call void %93(%struct.PointerRNA* %ptr, %struct.bNode* %94), !dbg !3923
  br label %if.end51, !dbg !3927

if.end51:                                         ; preds = %if.then48, %if.end44
  %95 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3928
  %tobool52 = icmp ne %struct.bNodeTree* %95, null, !dbg !3928
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !3930

if.then53:                                        ; preds = %if.end51
  %96 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !3931
  %update = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %96, i32 0, i32 13, !dbg !3932
  %97 = load i32, i32* %update, align 8, !dbg !3933
  %or = or i32 %97, 2, !dbg !3933
  store i32 %or, i32* %update, align 8, !dbg !3933
  br label %if.end54, !dbg !3931

if.end54:                                         ; preds = %if.then53, %if.end51
  %98 = load %struct.bNode*, %struct.bNode** %nnode, align 8, !dbg !3934
  ret %struct.bNode* %98, !dbg !3935
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local void @BLI_duplicatelist(%struct.ListBase*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @node_socket_copy(%struct.bNodeSocket* %dst, %struct.bNodeSocket* %src) #0 !dbg !3936 {
entry:
  %dst.addr = alloca %struct.bNodeSocket*, align 8
  %src.addr = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeSocket* %dst, %struct.bNodeSocket** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %dst.addr, metadata !3939, metadata !DIExpression()), !dbg !3940
  store %struct.bNodeSocket* %src, %struct.bNodeSocket** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %src.addr, metadata !3941, metadata !DIExpression()), !dbg !3942
  %0 = load %struct.bNodeSocket*, %struct.bNodeSocket** %dst.addr, align 8, !dbg !3943
  %1 = load %struct.bNodeSocket*, %struct.bNodeSocket** %src.addr, align 8, !dbg !3944
  %new_sock = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %1, i32 0, i32 2, !dbg !3945
  store %struct.bNodeSocket* %0, %struct.bNodeSocket** %new_sock, align 8, !dbg !3946
  %2 = load %struct.bNodeSocket*, %struct.bNodeSocket** %src.addr, align 8, !dbg !3947
  %prop = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %2, i32 0, i32 3, !dbg !3949
  %3 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !3949
  %tobool = icmp ne %struct.IDProperty* %3, null, !dbg !3947
  br i1 %tobool, label %if.then, label %if.end, !dbg !3950

if.then:                                          ; preds = %entry
  %4 = load %struct.bNodeSocket*, %struct.bNodeSocket** %src.addr, align 8, !dbg !3951
  %prop1 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %4, i32 0, i32 3, !dbg !3952
  %5 = load %struct.IDProperty*, %struct.IDProperty** %prop1, align 8, !dbg !3952
  %call = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %5), !dbg !3953
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %dst.addr, align 8, !dbg !3954
  %prop2 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %6, i32 0, i32 3, !dbg !3955
  store %struct.IDProperty* %call, %struct.IDProperty** %prop2, align 8, !dbg !3956
  br label %if.end, !dbg !3954

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %src.addr, align 8, !dbg !3957
  %default_value = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %7, i32 0, i32 15, !dbg !3959
  %8 = load i8*, i8** %default_value, align 8, !dbg !3959
  %tobool3 = icmp ne i8* %8, null, !dbg !3957
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !3960

if.then4:                                         ; preds = %if.end
  %9 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !3961
  %10 = load %struct.bNodeSocket*, %struct.bNodeSocket** %src.addr, align 8, !dbg !3962
  %default_value5 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %10, i32 0, i32 15, !dbg !3963
  %11 = load i8*, i8** %default_value5, align 8, !dbg !3963
  %call6 = call i8* %9(i8* %11), !dbg !3961
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %dst.addr, align 8, !dbg !3964
  %default_value7 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %12, i32 0, i32 15, !dbg !3965
  store i8* %call6, i8** %default_value7, align 8, !dbg !3966
  br label %if.end8, !dbg !3964

if.end8:                                          ; preds = %if.then4, %if.end
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %dst.addr, align 8, !dbg !3967
  %stack_index = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %13, i32 0, i32 16, !dbg !3968
  store i16 0, i16* %stack_index, align 8, !dbg !3969
  %14 = load %struct.bNodeSocket*, %struct.bNodeSocket** %dst.addr, align 8, !dbg !3970
  %cache = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %14, i32 0, i32 19, !dbg !3971
  store i8* null, i8** %cache, align 8, !dbg !3972
  ret void, !dbg !3973
}

declare dso_local %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty*) #2

declare dso_local void @RNA_pointer_create(%struct.ID*, %struct.StructRNA*, i8*, %struct.PointerRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeLink* @nodeAddLink(%struct.bNodeTree* %ntree, %struct.bNode* %fromnode, %struct.bNodeSocket* %fromsock, %struct.bNode* %tonode, %struct.bNodeSocket* %tosock) #0 !dbg !3974 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %fromnode.addr = alloca %struct.bNode*, align 8
  %fromsock.addr = alloca %struct.bNodeSocket*, align 8
  %tonode.addr = alloca %struct.bNode*, align 8
  %tosock.addr = alloca %struct.bNodeSocket*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !3977, metadata !DIExpression()), !dbg !3978
  store %struct.bNode* %fromnode, %struct.bNode** %fromnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %fromnode.addr, metadata !3979, metadata !DIExpression()), !dbg !3980
  store %struct.bNodeSocket* %fromsock, %struct.bNodeSocket** %fromsock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %fromsock.addr, metadata !3981, metadata !DIExpression()), !dbg !3982
  store %struct.bNode* %tonode, %struct.bNode** %tonode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %tonode.addr, metadata !3983, metadata !DIExpression()), !dbg !3984
  store %struct.bNodeSocket* %tosock, %struct.bNodeSocket** %tosock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %tosock.addr, metadata !3985, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !3987, metadata !DIExpression()), !dbg !3988
  store %struct.bNodeLink* null, %struct.bNodeLink** %link, align 8, !dbg !3988
  %0 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock.addr, align 8, !dbg !3989
  %in_out = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %0, i32 0, i32 10, !dbg !3991
  %1 = load i16, i16* %in_out, align 2, !dbg !3991
  %conv = sext i16 %1 to i32, !dbg !3989
  %cmp = icmp eq i32 %conv, 2, !dbg !3992
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3993

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock.addr, align 8, !dbg !3994
  %in_out2 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %2, i32 0, i32 10, !dbg !3995
  %3 = load i16, i16* %in_out2, align 2, !dbg !3995
  %conv3 = sext i16 %3 to i32, !dbg !3994
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !3996
  br i1 %cmp4, label %if.then, label %if.else, !dbg !3997

if.then:                                          ; preds = %land.lhs.true
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3998
  %call = call i8* %4(i64 56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0)), !dbg !3998
  %5 = bitcast i8* %call to %struct.bNodeLink*, !dbg !3998
  store %struct.bNodeLink* %5, %struct.bNodeLink** %link, align 8, !dbg !4000
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4001
  %tobool = icmp ne %struct.bNodeTree* %6, null, !dbg !4001
  br i1 %tobool, label %if.then6, label %if.end, !dbg !4003

if.then6:                                         ; preds = %if.then
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4004
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 8, !dbg !4005
  %8 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4006
  %9 = bitcast %struct.bNodeLink* %8 to i8*, !dbg !4006
  call void @BLI_addtail(%struct.ListBase* %links, i8* %9), !dbg !4007
  br label %if.end, !dbg !4007

if.end:                                           ; preds = %if.then6, %if.then
  %10 = load %struct.bNode*, %struct.bNode** %fromnode.addr, align 8, !dbg !4008
  %11 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4009
  %fromnode7 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %11, i32 0, i32 2, !dbg !4010
  store %struct.bNode* %10, %struct.bNode** %fromnode7, align 8, !dbg !4011
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock.addr, align 8, !dbg !4012
  %13 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4013
  %fromsock8 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %13, i32 0, i32 4, !dbg !4014
  store %struct.bNodeSocket* %12, %struct.bNodeSocket** %fromsock8, align 8, !dbg !4015
  %14 = load %struct.bNode*, %struct.bNode** %tonode.addr, align 8, !dbg !4016
  %15 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4017
  %tonode9 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %15, i32 0, i32 3, !dbg !4018
  store %struct.bNode* %14, %struct.bNode** %tonode9, align 8, !dbg !4019
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock.addr, align 8, !dbg !4020
  %17 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4021
  %tosock10 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %17, i32 0, i32 5, !dbg !4022
  store %struct.bNodeSocket* %16, %struct.bNodeSocket** %tosock10, align 8, !dbg !4023
  br label %if.end31, !dbg !4024

if.else:                                          ; preds = %land.lhs.true, %entry
  %18 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock.addr, align 8, !dbg !4025
  %in_out11 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %18, i32 0, i32 10, !dbg !4027
  %19 = load i16, i16* %in_out11, align 2, !dbg !4027
  %conv12 = sext i16 %19 to i32, !dbg !4025
  %cmp13 = icmp eq i32 %conv12, 1, !dbg !4028
  br i1 %cmp13, label %land.lhs.true15, label %if.end30, !dbg !4029

land.lhs.true15:                                  ; preds = %if.else
  %20 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock.addr, align 8, !dbg !4030
  %in_out16 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %20, i32 0, i32 10, !dbg !4031
  %21 = load i16, i16* %in_out16, align 2, !dbg !4031
  %conv17 = sext i16 %21 to i32, !dbg !4030
  %cmp18 = icmp eq i32 %conv17, 2, !dbg !4032
  br i1 %cmp18, label %if.then20, label %if.end30, !dbg !4033

if.then20:                                        ; preds = %land.lhs.true15
  %22 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4034
  %call21 = call i8* %22(i64 56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0)), !dbg !4034
  %23 = bitcast i8* %call21 to %struct.bNodeLink*, !dbg !4034
  store %struct.bNodeLink* %23, %struct.bNodeLink** %link, align 8, !dbg !4036
  %24 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4037
  %tobool22 = icmp ne %struct.bNodeTree* %24, null, !dbg !4037
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !4039

if.then23:                                        ; preds = %if.then20
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4040
  %links24 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %25, i32 0, i32 8, !dbg !4041
  %26 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4042
  %27 = bitcast %struct.bNodeLink* %26 to i8*, !dbg !4042
  call void @BLI_addtail(%struct.ListBase* %links24, i8* %27), !dbg !4043
  br label %if.end25, !dbg !4043

if.end25:                                         ; preds = %if.then23, %if.then20
  %28 = load %struct.bNode*, %struct.bNode** %tonode.addr, align 8, !dbg !4044
  %29 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4045
  %fromnode26 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %29, i32 0, i32 2, !dbg !4046
  store %struct.bNode* %28, %struct.bNode** %fromnode26, align 8, !dbg !4047
  %30 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock.addr, align 8, !dbg !4048
  %31 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4049
  %fromsock27 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %31, i32 0, i32 4, !dbg !4050
  store %struct.bNodeSocket* %30, %struct.bNodeSocket** %fromsock27, align 8, !dbg !4051
  %32 = load %struct.bNode*, %struct.bNode** %fromnode.addr, align 8, !dbg !4052
  %33 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4053
  %tonode28 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %33, i32 0, i32 3, !dbg !4054
  store %struct.bNode* %32, %struct.bNode** %tonode28, align 8, !dbg !4055
  %34 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock.addr, align 8, !dbg !4056
  %35 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4057
  %tosock29 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %35, i32 0, i32 5, !dbg !4058
  store %struct.bNodeSocket* %34, %struct.bNodeSocket** %tosock29, align 8, !dbg !4059
  br label %if.end30, !dbg !4060

if.end30:                                         ; preds = %if.end25, %land.lhs.true15, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end
  %36 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4061
  %tobool32 = icmp ne %struct.bNodeTree* %36, null, !dbg !4061
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !4063

if.then33:                                        ; preds = %if.end31
  %37 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4064
  %update = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %37, i32 0, i32 13, !dbg !4065
  %38 = load i32, i32* %update, align 8, !dbg !4066
  %or = or i32 %38, 1, !dbg !4066
  store i32 %or, i32* %update, align 8, !dbg !4066
  br label %if.end34, !dbg !4064

if.end34:                                         ; preds = %if.then33, %if.end31
  %39 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4067
  ret %struct.bNodeLink* %39, !dbg !4068
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeRemSocketLinks(%struct.bNodeTree* %ntree, %struct.bNodeSocket* %sock) #0 !dbg !4069 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %sock.addr = alloca %struct.bNodeSocket*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %next = alloca %struct.bNodeLink*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !4072, metadata !DIExpression()), !dbg !4073
  store %struct.bNodeSocket* %sock, %struct.bNodeSocket** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock.addr, metadata !4074, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !4076, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %next, metadata !4078, metadata !DIExpression()), !dbg !4079
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4080
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 8, !dbg !4082
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !4083
  %1 = load i8*, i8** %first, align 8, !dbg !4083
  %2 = bitcast i8* %1 to %struct.bNodeLink*, !dbg !4080
  store %struct.bNodeLink* %2, %struct.bNodeLink** %link, align 8, !dbg !4084
  br label %for.cond, !dbg !4085

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4086
  %tobool = icmp ne %struct.bNodeLink* %3, null, !dbg !4088
  br i1 %tobool, label %for.body, label %for.end, !dbg !4088

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4089
  %next1 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %4, i32 0, i32 0, !dbg !4091
  %5 = load %struct.bNodeLink*, %struct.bNodeLink** %next1, align 8, !dbg !4091
  store %struct.bNodeLink* %5, %struct.bNodeLink** %next, align 8, !dbg !4092
  %6 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4093
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %6, i32 0, i32 4, !dbg !4095
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !4095
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !4096
  %cmp = icmp eq %struct.bNodeSocket* %7, %8, !dbg !4097
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4098

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4099
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %9, i32 0, i32 5, !dbg !4100
  %10 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !4100
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !4101
  %cmp2 = icmp eq %struct.bNodeSocket* %10, %11, !dbg !4102
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4103

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4104
  %13 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4106
  call void @nodeRemLink(%struct.bNodeTree* %12, %struct.bNodeLink* %13), !dbg !4107
  br label %if.end, !dbg !4108

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !4109

for.inc:                                          ; preds = %if.end
  %14 = load %struct.bNodeLink*, %struct.bNodeLink** %next, align 8, !dbg !4110
  store %struct.bNodeLink* %14, %struct.bNodeLink** %link, align 8, !dbg !4111
  br label %for.cond, !dbg !4112, !llvm.loop !4113

for.end:                                          ; preds = %for.cond
  %15 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4115
  %update = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %15, i32 0, i32 13, !dbg !4116
  %16 = load i32, i32* %update, align 8, !dbg !4117
  %or = or i32 %16, 1, !dbg !4117
  store i32 %or, i32* %update, align 8, !dbg !4117
  ret void, !dbg !4118
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @nodeLinkIsHidden(%struct.bNodeLink* %link) #0 !dbg !4119 {
entry:
  %link.addr = alloca %struct.bNodeLink*, align 8
  store %struct.bNodeLink* %link, %struct.bNodeLink** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link.addr, metadata !4122, metadata !DIExpression()), !dbg !4123
  %0 = load %struct.bNodeLink*, %struct.bNodeLink** %link.addr, align 8, !dbg !4124
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %0, i32 0, i32 4, !dbg !4125
  %1 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !4125
  %call = call i32 @nodeSocketIsHidden(%struct.bNodeSocket* %1), !dbg !4126
  %tobool = icmp ne i32 %call, 0, !dbg !4126
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4127

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.bNodeLink*, %struct.bNodeLink** %link.addr, align 8, !dbg !4128
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %2, i32 0, i32 5, !dbg !4129
  %3 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !4129
  %call1 = call i32 @nodeSocketIsHidden(%struct.bNodeSocket* %3), !dbg !4130
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4127
  br label %lor.end, !dbg !4127

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !4127
  ret i32 %lor.ext, !dbg !4131
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @nodeSocketIsHidden(%struct.bNodeSocket* %sock) #0 !dbg !4132 {
entry:
  %sock.addr = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeSocket* %sock, %struct.bNodeSocket** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock.addr, metadata !4135, metadata !DIExpression()), !dbg !4136
  %0 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !4137
  %flag = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %0, i32 0, i32 8, !dbg !4138
  %1 = load i16, i16* %flag, align 2, !dbg !4138
  %conv = sext i16 %1 to i32, !dbg !4137
  %and = and i32 %conv, 10, !dbg !4139
  %cmp = icmp ne i32 %and, 0, !dbg !4140
  %conv1 = zext i1 %cmp to i32, !dbg !4140
  ret i32 %conv1, !dbg !4141
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeInternalRelink(%struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !4142 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %link_next = alloca %struct.bNodeLink*, align 8
  %fromlink = alloca %struct.bNodeLink*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !4143, metadata !DIExpression()), !dbg !4144
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !4145, metadata !DIExpression()), !dbg !4146
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !4147, metadata !DIExpression()), !dbg !4148
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link_next, metadata !4149, metadata !DIExpression()), !dbg !4150
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4151
  %internal_links = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 23, !dbg !4153
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %internal_links, i32 0, i32 0, !dbg !4154
  %1 = load i8*, i8** %first, align 8, !dbg !4154
  %2 = bitcast i8* %1 to %struct.bNodeLink*, !dbg !4151
  store %struct.bNodeLink* %2, %struct.bNodeLink** %link, align 8, !dbg !4155
  br label %for.cond, !dbg !4156

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4157
  %tobool = icmp ne %struct.bNodeLink* %3, null, !dbg !4159
  br i1 %tobool, label %for.body, label %for.end, !dbg !4159

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4160
  %5 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4161
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %5, i32 0, i32 5, !dbg !4162
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !4162
  %link1 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %6, i32 0, i32 23, !dbg !4163
  store %struct.bNodeLink* %4, %struct.bNodeLink** %link1, align 8, !dbg !4164
  br label %for.inc, !dbg !4161

for.inc:                                          ; preds = %for.body
  %7 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4165
  %next = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %7, i32 0, i32 0, !dbg !4166
  %8 = load %struct.bNodeLink*, %struct.bNodeLink** %next, align 8, !dbg !4166
  store %struct.bNodeLink* %8, %struct.bNodeLink** %link, align 8, !dbg !4167
  br label %for.cond, !dbg !4168, !llvm.loop !4169

for.end:                                          ; preds = %for.cond
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4171
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 8, !dbg !4173
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !4174
  %10 = load i8*, i8** %first2, align 8, !dbg !4174
  %11 = bitcast i8* %10 to %struct.bNodeLink*, !dbg !4171
  store %struct.bNodeLink* %11, %struct.bNodeLink** %link, align 8, !dbg !4175
  br label %for.cond3, !dbg !4176

for.cond3:                                        ; preds = %for.inc28, %for.end
  %12 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4177
  %tobool4 = icmp ne %struct.bNodeLink* %12, null, !dbg !4179
  br i1 %tobool4, label %for.body5, label %for.end29, !dbg !4179

for.body5:                                        ; preds = %for.cond3
  %13 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4180
  %next6 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %13, i32 0, i32 0, !dbg !4182
  %14 = load %struct.bNodeLink*, %struct.bNodeLink** %next6, align 8, !dbg !4182
  store %struct.bNodeLink* %14, %struct.bNodeLink** %link_next, align 8, !dbg !4183
  %15 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4184
  %fromnode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %15, i32 0, i32 2, !dbg !4186
  %16 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !4186
  %17 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4187
  %cmp = icmp eq %struct.bNode* %16, %17, !dbg !4188
  br i1 %cmp, label %if.then, label %if.end27, !dbg !4189

if.then:                                          ; preds = %for.body5
  %18 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4190
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %18, i32 0, i32 4, !dbg !4193
  %19 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !4193
  %link7 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %19, i32 0, i32 23, !dbg !4194
  %20 = load %struct.bNodeLink*, %struct.bNodeLink** %link7, align 8, !dbg !4194
  %tobool8 = icmp ne %struct.bNodeLink* %20, null, !dbg !4190
  br i1 %tobool8, label %if.then9, label %if.else25, !dbg !4195

if.then9:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %fromlink, metadata !4196, metadata !DIExpression()), !dbg !4198
  %21 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4199
  %fromsock10 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %21, i32 0, i32 4, !dbg !4200
  %22 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock10, align 8, !dbg !4200
  %link11 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %22, i32 0, i32 23, !dbg !4201
  %23 = load %struct.bNodeLink*, %struct.bNodeLink** %link11, align 8, !dbg !4201
  %fromsock12 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %23, i32 0, i32 4, !dbg !4202
  %24 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock12, align 8, !dbg !4202
  %link13 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %24, i32 0, i32 23, !dbg !4203
  %25 = load %struct.bNodeLink*, %struct.bNodeLink** %link13, align 8, !dbg !4203
  store %struct.bNodeLink* %25, %struct.bNodeLink** %fromlink, align 8, !dbg !4198
  %26 = load %struct.bNodeLink*, %struct.bNodeLink** %fromlink, align 8, !dbg !4204
  %tobool14 = icmp ne %struct.bNodeLink* %26, null, !dbg !4204
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !4206

if.then15:                                        ; preds = %if.then9
  %27 = load %struct.bNodeLink*, %struct.bNodeLink** %fromlink, align 8, !dbg !4207
  %fromnode16 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %27, i32 0, i32 2, !dbg !4209
  %28 = load %struct.bNode*, %struct.bNode** %fromnode16, align 8, !dbg !4209
  %29 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4210
  %fromnode17 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %29, i32 0, i32 2, !dbg !4211
  store %struct.bNode* %28, %struct.bNode** %fromnode17, align 8, !dbg !4212
  %30 = load %struct.bNodeLink*, %struct.bNodeLink** %fromlink, align 8, !dbg !4213
  %fromsock18 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %30, i32 0, i32 4, !dbg !4214
  %31 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock18, align 8, !dbg !4214
  %32 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4215
  %fromsock19 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %32, i32 0, i32 4, !dbg !4216
  store %struct.bNodeSocket* %31, %struct.bNodeSocket** %fromsock19, align 8, !dbg !4217
  %33 = load %struct.bNodeLink*, %struct.bNodeLink** %fromlink, align 8, !dbg !4218
  %flag = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %33, i32 0, i32 6, !dbg !4220
  %34 = load i32, i32* %flag, align 8, !dbg !4220
  %and = and i32 %34, 2, !dbg !4221
  %tobool20 = icmp ne i32 %and, 0, !dbg !4221
  br i1 %tobool20, label %if.end, label %if.then21, !dbg !4222

if.then21:                                        ; preds = %if.then15
  %35 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4223
  %flag22 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %35, i32 0, i32 6, !dbg !4224
  %36 = load i32, i32* %flag22, align 8, !dbg !4225
  %and23 = and i32 %36, -3, !dbg !4225
  store i32 %and23, i32* %flag22, align 8, !dbg !4225
  br label %if.end, !dbg !4223

if.end:                                           ; preds = %if.then21, %if.then15
  %37 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4226
  %update = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %37, i32 0, i32 13, !dbg !4227
  %38 = load i32, i32* %update, align 8, !dbg !4228
  %or = or i32 %38, 1, !dbg !4228
  store i32 %or, i32* %update, align 8, !dbg !4228
  br label %if.end24, !dbg !4229

if.else:                                          ; preds = %if.then9
  %39 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4230
  %40 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4231
  call void @nodeRemLink(%struct.bNodeTree* %39, %struct.bNodeLink* %40), !dbg !4232
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.end
  br label %if.end26, !dbg !4233

if.else25:                                        ; preds = %if.then
  %41 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4234
  %42 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4235
  call void @nodeRemLink(%struct.bNodeTree* %41, %struct.bNodeLink* %42), !dbg !4236
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.end24
  br label %if.end27, !dbg !4237

if.end27:                                         ; preds = %if.end26, %for.body5
  br label %for.inc28, !dbg !4238

for.inc28:                                        ; preds = %if.end27
  %43 = load %struct.bNodeLink*, %struct.bNodeLink** %link_next, align 8, !dbg !4239
  store %struct.bNodeLink* %43, %struct.bNodeLink** %link, align 8, !dbg !4240
  br label %for.cond3, !dbg !4241, !llvm.loop !4242

for.end29:                                        ; preds = %for.cond3
  %44 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4244
  %links30 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %44, i32 0, i32 8, !dbg !4246
  %first31 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links30, i32 0, i32 0, !dbg !4247
  %45 = load i8*, i8** %first31, align 8, !dbg !4247
  %46 = bitcast i8* %45 to %struct.bNodeLink*, !dbg !4244
  store %struct.bNodeLink* %46, %struct.bNodeLink** %link, align 8, !dbg !4248
  br label %for.cond32, !dbg !4249

for.cond32:                                       ; preds = %for.inc39, %for.end29
  %47 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4250
  %tobool33 = icmp ne %struct.bNodeLink* %47, null, !dbg !4252
  br i1 %tobool33, label %for.body34, label %for.end40, !dbg !4252

for.body34:                                       ; preds = %for.cond32
  %48 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4253
  %next35 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %48, i32 0, i32 0, !dbg !4255
  %49 = load %struct.bNodeLink*, %struct.bNodeLink** %next35, align 8, !dbg !4255
  store %struct.bNodeLink* %49, %struct.bNodeLink** %link_next, align 8, !dbg !4256
  %50 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4257
  %tonode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %50, i32 0, i32 3, !dbg !4259
  %51 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !4259
  %52 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4260
  %cmp36 = icmp eq %struct.bNode* %51, %52, !dbg !4261
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !4262

if.then37:                                        ; preds = %for.body34
  %53 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4263
  %54 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4264
  call void @nodeRemLink(%struct.bNodeTree* %53, %struct.bNodeLink* %54), !dbg !4265
  br label %if.end38, !dbg !4265

if.end38:                                         ; preds = %if.then37, %for.body34
  br label %for.inc39, !dbg !4266

for.inc39:                                        ; preds = %if.end38
  %55 = load %struct.bNodeLink*, %struct.bNodeLink** %link_next, align 8, !dbg !4267
  store %struct.bNodeLink* %55, %struct.bNodeLink** %link, align 8, !dbg !4268
  br label %for.cond32, !dbg !4269, !llvm.loop !4270

for.end40:                                        ; preds = %for.cond32
  ret void, !dbg !4272
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeToView(%struct.bNode* %node, float %x, float %y, float* %rx, float* %ry) #0 !dbg !4273 {
entry:
  %node.addr = alloca %struct.bNode*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %rx.addr = alloca float*, align 8
  %ry.addr = alloca float*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !4276, metadata !DIExpression()), !dbg !4277
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !4278, metadata !DIExpression()), !dbg !4279
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !4280, metadata !DIExpression()), !dbg !4281
  store float* %rx, float** %rx.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rx.addr, metadata !4282, metadata !DIExpression()), !dbg !4283
  store float* %ry, float** %ry.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ry.addr, metadata !4284, metadata !DIExpression()), !dbg !4285
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4286
  %parent = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 19, !dbg !4288
  %1 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !4288
  %tobool = icmp ne %struct.bNode* %1, null, !dbg !4286
  br i1 %tobool, label %if.then, label %if.else, !dbg !4289

if.then:                                          ; preds = %entry
  %2 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4290
  %parent1 = getelementptr inbounds %struct.bNode, %struct.bNode* %2, i32 0, i32 19, !dbg !4292
  %3 = load %struct.bNode*, %struct.bNode** %parent1, align 8, !dbg !4292
  %4 = load float, float* %x.addr, align 4, !dbg !4293
  %5 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4294
  %locx = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 24, !dbg !4295
  %6 = load float, float* %locx, align 8, !dbg !4295
  %add = fadd float %4, %6, !dbg !4296
  %7 = load float, float* %y.addr, align 4, !dbg !4297
  %8 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4298
  %locy = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 25, !dbg !4299
  %9 = load float, float* %locy, align 4, !dbg !4299
  %add2 = fadd float %7, %9, !dbg !4300
  %10 = load float*, float** %rx.addr, align 8, !dbg !4301
  %11 = load float*, float** %ry.addr, align 8, !dbg !4302
  call void @nodeToView(%struct.bNode* %3, float %add, float %add2, float* %10, float* %11), !dbg !4303
  br label %if.end, !dbg !4304

if.else:                                          ; preds = %entry
  %12 = load float, float* %x.addr, align 4, !dbg !4305
  %13 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4307
  %locx3 = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 24, !dbg !4308
  %14 = load float, float* %locx3, align 8, !dbg !4308
  %add4 = fadd float %12, %14, !dbg !4309
  %15 = load float*, float** %rx.addr, align 8, !dbg !4310
  store float %add4, float* %15, align 4, !dbg !4311
  %16 = load float, float* %y.addr, align 4, !dbg !4312
  %17 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4313
  %locy5 = getelementptr inbounds %struct.bNode, %struct.bNode* %17, i32 0, i32 25, !dbg !4314
  %18 = load float, float* %locy5, align 4, !dbg !4314
  %add6 = fadd float %16, %18, !dbg !4315
  %19 = load float*, float** %ry.addr, align 8, !dbg !4316
  store float %add6, float* %19, align 4, !dbg !4317
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4318
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeFromView(%struct.bNode* %node, float %x, float %y, float* %rx, float* %ry) #0 !dbg !4319 {
entry:
  %node.addr = alloca %struct.bNode*, align 8
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %rx.addr = alloca float*, align 8
  %ry.addr = alloca float*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !4320, metadata !DIExpression()), !dbg !4321
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !4322, metadata !DIExpression()), !dbg !4323
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !4324, metadata !DIExpression()), !dbg !4325
  store float* %rx, float** %rx.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rx.addr, metadata !4326, metadata !DIExpression()), !dbg !4327
  store float* %ry, float** %ry.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ry.addr, metadata !4328, metadata !DIExpression()), !dbg !4329
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4330
  %parent = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 19, !dbg !4332
  %1 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !4332
  %tobool = icmp ne %struct.bNode* %1, null, !dbg !4330
  br i1 %tobool, label %if.then, label %if.else, !dbg !4333

if.then:                                          ; preds = %entry
  %2 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4334
  %parent1 = getelementptr inbounds %struct.bNode, %struct.bNode* %2, i32 0, i32 19, !dbg !4336
  %3 = load %struct.bNode*, %struct.bNode** %parent1, align 8, !dbg !4336
  %4 = load float, float* %x.addr, align 4, !dbg !4337
  %5 = load float, float* %y.addr, align 4, !dbg !4338
  %6 = load float*, float** %rx.addr, align 8, !dbg !4339
  %7 = load float*, float** %ry.addr, align 8, !dbg !4340
  call void @nodeFromView(%struct.bNode* %3, float %4, float %5, float* %6, float* %7), !dbg !4341
  %8 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4342
  %locx = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 24, !dbg !4343
  %9 = load float, float* %locx, align 8, !dbg !4343
  %10 = load float*, float** %rx.addr, align 8, !dbg !4344
  %11 = load float, float* %10, align 4, !dbg !4345
  %sub = fsub float %11, %9, !dbg !4345
  store float %sub, float* %10, align 4, !dbg !4345
  %12 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4346
  %locy = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 25, !dbg !4347
  %13 = load float, float* %locy, align 4, !dbg !4347
  %14 = load float*, float** %ry.addr, align 8, !dbg !4348
  %15 = load float, float* %14, align 4, !dbg !4349
  %sub2 = fsub float %15, %13, !dbg !4349
  store float %sub2, float* %14, align 4, !dbg !4349
  br label %if.end, !dbg !4350

if.else:                                          ; preds = %entry
  %16 = load float, float* %x.addr, align 4, !dbg !4351
  %17 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4353
  %locx3 = getelementptr inbounds %struct.bNode, %struct.bNode* %17, i32 0, i32 24, !dbg !4354
  %18 = load float, float* %locx3, align 8, !dbg !4354
  %sub4 = fsub float %16, %18, !dbg !4355
  %19 = load float*, float** %rx.addr, align 8, !dbg !4356
  store float %sub4, float* %19, align 4, !dbg !4357
  %20 = load float, float* %y.addr, align 4, !dbg !4358
  %21 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4359
  %locy5 = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 25, !dbg !4360
  %22 = load float, float* %locy5, align 4, !dbg !4360
  %sub6 = fsub float %20, %22, !dbg !4361
  %23 = load float*, float** %ry.addr, align 8, !dbg !4362
  store float %sub6, float* %23, align 4, !dbg !4363
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4364
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @nodeAttachNodeCheck(%struct.bNode* %node, %struct.bNode* %parent) #0 !dbg !4365 {
entry:
  %retval = alloca i8, align 1
  %node.addr = alloca %struct.bNode*, align 8
  %parent.addr = alloca %struct.bNode*, align 8
  %parent_recurse = alloca %struct.bNode*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !4368, metadata !DIExpression()), !dbg !4369
  store %struct.bNode* %parent, %struct.bNode** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %parent.addr, metadata !4370, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.declare(metadata %struct.bNode** %parent_recurse, metadata !4372, metadata !DIExpression()), !dbg !4373
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4374
  store %struct.bNode* %0, %struct.bNode** %parent_recurse, align 8, !dbg !4376
  br label %for.cond, !dbg !4377

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.bNode*, %struct.bNode** %parent_recurse, align 8, !dbg !4378
  %tobool = icmp ne %struct.bNode* %1, null, !dbg !4380
  br i1 %tobool, label %for.body, label %for.end, !dbg !4380

for.body:                                         ; preds = %for.cond
  %2 = load %struct.bNode*, %struct.bNode** %parent_recurse, align 8, !dbg !4381
  %3 = load %struct.bNode*, %struct.bNode** %parent.addr, align 8, !dbg !4384
  %cmp = icmp eq %struct.bNode* %2, %3, !dbg !4385
  br i1 %cmp, label %if.then, label %if.end, !dbg !4386

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !4387
  br label %return, !dbg !4387

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4389

for.inc:                                          ; preds = %if.end
  %4 = load %struct.bNode*, %struct.bNode** %parent_recurse, align 8, !dbg !4390
  %parent1 = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 19, !dbg !4391
  %5 = load %struct.bNode*, %struct.bNode** %parent1, align 8, !dbg !4391
  store %struct.bNode* %5, %struct.bNode** %parent_recurse, align 8, !dbg !4392
  br label %for.cond, !dbg !4393, !llvm.loop !4394

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !4396
  br label %return, !dbg !4396

return:                                           ; preds = %for.end, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !4397
  ret i8 %6, !dbg !4397
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeAttachNode(%struct.bNode* %node, %struct.bNode* %parent) #0 !dbg !4398 {
entry:
  %node.addr = alloca %struct.bNode*, align 8
  %parent.addr = alloca %struct.bNode*, align 8
  %locx = alloca float, align 4
  %locy = alloca float, align 4
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !4401, metadata !DIExpression()), !dbg !4402
  store %struct.bNode* %parent, %struct.bNode** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %parent.addr, metadata !4403, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.declare(metadata float* %locx, metadata !4405, metadata !DIExpression()), !dbg !4406
  call void @llvm.dbg.declare(metadata float* %locy, metadata !4407, metadata !DIExpression()), !dbg !4408
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4409
  call void @nodeToView(%struct.bNode* %0, float 0.000000e+00, float 0.000000e+00, float* %locx, float* %locy), !dbg !4410
  %1 = load %struct.bNode*, %struct.bNode** %parent.addr, align 8, !dbg !4411
  %2 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4412
  %parent1 = getelementptr inbounds %struct.bNode, %struct.bNode* %2, i32 0, i32 19, !dbg !4413
  store %struct.bNode* %1, %struct.bNode** %parent1, align 8, !dbg !4414
  %3 = load %struct.bNode*, %struct.bNode** %parent.addr, align 8, !dbg !4415
  %4 = load float, float* %locx, align 4, !dbg !4416
  %5 = load float, float* %locy, align 4, !dbg !4417
  %6 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4418
  %locx2 = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 24, !dbg !4419
  %7 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4420
  %locy3 = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 25, !dbg !4421
  call void @nodeFromView(%struct.bNode* %3, float %4, float %5, float* %locx2, float* %locy3), !dbg !4422
  ret void, !dbg !4423
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeDetachNode(%struct.bNode* %node) #0 !dbg !4424 {
entry:
  %node.addr = alloca %struct.bNode*, align 8
  %locx = alloca float, align 4
  %locy = alloca float, align 4
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !4425, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.declare(metadata float* %locx, metadata !4427, metadata !DIExpression()), !dbg !4428
  call void @llvm.dbg.declare(metadata float* %locy, metadata !4429, metadata !DIExpression()), !dbg !4430
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4431
  %parent = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 19, !dbg !4433
  %1 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !4433
  %tobool = icmp ne %struct.bNode* %1, null, !dbg !4431
  br i1 %tobool, label %if.then, label %if.end, !dbg !4434

if.then:                                          ; preds = %entry
  %2 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4435
  call void @nodeToView(%struct.bNode* %2, float 0.000000e+00, float 0.000000e+00, float* %locx, float* %locy), !dbg !4437
  %3 = load float, float* %locx, align 4, !dbg !4438
  %4 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4439
  %locx1 = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 24, !dbg !4440
  store float %3, float* %locx1, align 8, !dbg !4441
  %5 = load float, float* %locy, align 4, !dbg !4442
  %6 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4443
  %locy2 = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 25, !dbg !4444
  store float %5, float* %locy2, align 4, !dbg !4445
  %7 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4446
  %parent3 = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 19, !dbg !4447
  store %struct.bNode* null, %struct.bNode** %parent3, align 8, !dbg !4448
  br label %if.end, !dbg !4449

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4450
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeTree* @ntreeAddTree(%struct.Main* %bmain, i8* %name, i8* %idname) #0 !dbg !4451 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %name.addr = alloca i8*, align 8
  %idname.addr = alloca i8*, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !4454, metadata !DIExpression()), !dbg !4455
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4456, metadata !DIExpression()), !dbg !4457
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !4458, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !4460, metadata !DIExpression()), !dbg !4461
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4462
  %tobool = icmp ne %struct.Main* %0, null, !dbg !4462
  br i1 %tobool, label %if.then, label %if.else, !dbg !4464

if.then:                                          ; preds = %entry
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4465
  %2 = load i8*, i8** %name.addr, align 8, !dbg !4467
  %call = call i8* @BKE_libblock_alloc(%struct.Main* %1, i16 signext 21582, i8* %2), !dbg !4468
  %3 = bitcast i8* %call to %struct.bNodeTree*, !dbg !4468
  store %struct.bNodeTree* %3, %struct.bNodeTree** %ntree, align 8, !dbg !4469
  br label %if.end, !dbg !4470

if.else:                                          ; preds = %entry
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4471
  %call1 = call i8* %4(i64 432, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i64 0, i64 0)), !dbg !4471
  %5 = bitcast i8* %call1 to %struct.bNodeTree*, !dbg !4471
  store %struct.bNodeTree* %5, %struct.bNodeTree** %ntree, align 8, !dbg !4473
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4474
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 0, !dbg !4475
  %name2 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !4476
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name2, i64 0, i64 0, !dbg !4477
  %7 = bitcast i8* %arraydecay to i16*, !dbg !4477
  store i16 21582, i16* %7, align 8, !dbg !4478
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4479
  %id3 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %8, i32 0, i32 0, !dbg !4480
  %name4 = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 4, !dbg !4481
  %arraydecay5 = getelementptr inbounds [66 x i8], [66 x i8]* %name4, i64 0, i64 0, !dbg !4479
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay5, i64 2, !dbg !4482
  %9 = load i8*, i8** %name.addr, align 8, !dbg !4483
  %call6 = call i8* @BLI_strncpy(i8* %add.ptr, i8* %9, i64 66), !dbg !4484
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4485
  %init = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %10, i32 0, i32 10, !dbg !4486
  %11 = load i32, i32* %init, align 4, !dbg !4487
  %or = or i32 %11, 1, !dbg !4487
  store i32 %or, i32* %init, align 4, !dbg !4487
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4488
  %idname7 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %12, i32 0, i32 3, !dbg !4489
  %arraydecay8 = getelementptr inbounds [64 x i8], [64 x i8]* %idname7, i64 0, i64 0, !dbg !4488
  %13 = load i8*, i8** %idname.addr, align 8, !dbg !4490
  %call9 = call i8* @BLI_strncpy(i8* %arraydecay8, i8* %13, i64 64), !dbg !4491
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4492
  %15 = load i8*, i8** %idname.addr, align 8, !dbg !4493
  %call10 = call %struct.bNodeTreeType* @ntreeTypeFind(i8* %15), !dbg !4494
  call void @ntree_set_typeinfo(%struct.bNodeTree* %14, %struct.bNodeTreeType* %call10), !dbg !4495
  %16 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !4496
  ret %struct.bNodeTree* %16, !dbg !4497
}

declare dso_local i8* @BKE_libblock_alloc(%struct.Main*, i16 signext, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeTree* @ntreeCopyTree_ex(%struct.bNodeTree* %ntree, %struct.Main* %bmain, i8 zeroext %do_id_user) #0 !dbg !4498 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %do_id_user.addr = alloca i8, align 1
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !4502, metadata !DIExpression()), !dbg !4503
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !4504, metadata !DIExpression()), !dbg !4505
  store i8 %do_id_user, i8* %do_id_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_id_user.addr, metadata !4506, metadata !DIExpression()), !dbg !4507
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4508
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4509
  %2 = load i8, i8* %do_id_user.addr, align 1, !dbg !4510
  %call = call %struct.bNodeTree* @ntreeCopyTree_internal(%struct.bNodeTree* %0, %struct.Main* %1, i8 zeroext %2, i8 zeroext 1, i8 zeroext 1), !dbg !4511
  ret %struct.bNodeTree* %call, !dbg !4512
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.bNodeTree* @ntreeCopyTree_internal(%struct.bNodeTree* %ntree, %struct.Main* %bmain, i8 zeroext %do_id_user, i8 zeroext %do_make_extern, i8 zeroext %copy_previews) #0 !dbg !4513 {
entry:
  %retval = alloca %struct.bNodeTree*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %do_id_user.addr = alloca i8, align 1
  %do_make_extern.addr = alloca i8, align 1
  %copy_previews.addr = alloca i8, align 1
  %newtree = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %last = alloca %struct.bNode*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %oldsock = alloca %struct.bNodeSocket*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %iter = alloca %struct.GHashIterator, align 8
  %key = alloca %struct.bNodeInstanceKey, align 4
  %preview = alloca %struct.bNodePreview*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !4516, metadata !DIExpression()), !dbg !4517
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !4518, metadata !DIExpression()), !dbg !4519
  store i8 %do_id_user, i8* %do_id_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_id_user.addr, metadata !4520, metadata !DIExpression()), !dbg !4521
  store i8 %do_make_extern, i8* %do_make_extern.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_make_extern.addr, metadata !4522, metadata !DIExpression()), !dbg !4523
  store i8 %copy_previews, i8* %copy_previews.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %copy_previews.addr, metadata !4524, metadata !DIExpression()), !dbg !4525
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %newtree, metadata !4526, metadata !DIExpression()), !dbg !4527
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !4528, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.declare(metadata %struct.bNode** %last, metadata !4530, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !4532, metadata !DIExpression()), !dbg !4533
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %oldsock, metadata !4534, metadata !DIExpression()), !dbg !4535
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !4536, metadata !DIExpression()), !dbg !4537
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4538
  %cmp = icmp eq %struct.bNodeTree* %0, null, !dbg !4540
  br i1 %cmp, label %if.then, label %if.end, !dbg !4541

if.then:                                          ; preds = %entry
  store %struct.bNodeTree* null, %struct.bNodeTree** %retval, align 8, !dbg !4542
  br label %return, !dbg !4542

if.end:                                           ; preds = %entry
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4543
  %tobool = icmp ne %struct.Main* %1, null, !dbg !4543
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4545

land.lhs.true:                                    ; preds = %if.end
  %2 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4546
  %nodetree = getelementptr inbounds %struct.Main, %struct.Main* %2, i32 0, i32 35, !dbg !4547
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4548
  %4 = bitcast %struct.bNodeTree* %3 to i8*, !dbg !4548
  %call = call i32 @BLI_findindex(%struct.ListBase* %nodetree, i8* %4), !dbg !4549
  %cmp1 = icmp sge i32 %call, 0, !dbg !4550
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !4551

if.then2:                                         ; preds = %land.lhs.true
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4552
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 0, !dbg !4554
  %call3 = call i8* @BKE_libblock_copy(%struct.ID* %id), !dbg !4555
  %6 = bitcast i8* %call3 to %struct.bNodeTree*, !dbg !4555
  store %struct.bNodeTree* %6, %struct.bNodeTree** %newtree, align 8, !dbg !4556
  br label %if.end7, !dbg !4557

if.else:                                          ; preds = %land.lhs.true, %if.end
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4558
  %id4 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 0, !dbg !4560
  %call5 = call i8* @BKE_libblock_copy_nolib(%struct.ID* %id4, i8 zeroext 1), !dbg !4561
  %8 = bitcast i8* %call5 to %struct.bNodeTree*, !dbg !4561
  store %struct.bNodeTree* %8, %struct.bNodeTree** %newtree, align 8, !dbg !4562
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4563
  %id6 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 0, !dbg !4564
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id6, i32 0, i32 3, !dbg !4565
  store %struct.Library* null, %struct.Library** %lib, align 8, !dbg !4566
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then2
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4567
  %gpd = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %10, i32 0, i32 5, !dbg !4568
  %11 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !4568
  %12 = bitcast %struct.bGPdata* %11 to %struct.ID*, !dbg !4569
  call void @id_us_plus(%struct.ID* %12), !dbg !4570
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4571
  %execdata = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %13, i32 0, i32 27, !dbg !4572
  store %struct.bNodeTreeExec* null, %struct.bNodeTreeExec** %execdata, align 8, !dbg !4573
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4574
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %14, i32 0, i32 7, !dbg !4575
  call void @BLI_listbase_clear(%struct.ListBase* %nodes), !dbg !4576
  %15 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4577
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %15, i32 0, i32 8, !dbg !4578
  call void @BLI_listbase_clear(%struct.ListBase* %links), !dbg !4579
  %16 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4580
  %nodes8 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %16, i32 0, i32 7, !dbg !4581
  %last9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes8, i32 0, i32 1, !dbg !4582
  %17 = load i8*, i8** %last9, align 8, !dbg !4582
  %18 = bitcast i8* %17 to %struct.bNode*, !dbg !4580
  store %struct.bNode* %18, %struct.bNode** %last, align 8, !dbg !4583
  %19 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4584
  %nodes10 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %19, i32 0, i32 7, !dbg !4586
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes10, i32 0, i32 0, !dbg !4587
  %20 = load i8*, i8** %first, align 8, !dbg !4587
  %21 = bitcast i8* %20 to %struct.bNode*, !dbg !4584
  store %struct.bNode* %21, %struct.bNode** %node, align 8, !dbg !4588
  br label %for.cond, !dbg !4589

for.cond:                                         ; preds = %for.inc, %if.end7
  %22 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4590
  %tobool11 = icmp ne %struct.bNode* %22, null, !dbg !4592
  br i1 %tobool11, label %for.body, label %for.end, !dbg !4592

for.body:                                         ; preds = %for.cond
  %23 = load i8, i8* %do_id_user.addr, align 1, !dbg !4593
  %tobool12 = icmp ne i8 %23, 0, !dbg !4593
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !4596

if.then13:                                        ; preds = %for.body
  %24 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4597
  %id14 = getelementptr inbounds %struct.bNode, %struct.bNode* %24, i32 0, i32 20, !dbg !4599
  %25 = load %struct.ID*, %struct.ID** %id14, align 8, !dbg !4599
  call void @id_us_plus(%struct.ID* %25), !dbg !4600
  br label %if.end15, !dbg !4601

if.end15:                                         ; preds = %if.then13, %for.body
  %26 = load i8, i8* %do_make_extern.addr, align 1, !dbg !4602
  %tobool16 = icmp ne i8 %26, 0, !dbg !4602
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !4604

if.then17:                                        ; preds = %if.end15
  %27 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4605
  %id18 = getelementptr inbounds %struct.bNode, %struct.bNode* %27, i32 0, i32 20, !dbg !4607
  %28 = load %struct.ID*, %struct.ID** %id18, align 8, !dbg !4607
  call void @id_lib_extern(%struct.ID* %28), !dbg !4608
  br label %if.end19, !dbg !4609

if.end19:                                         ; preds = %if.then17, %if.end15
  %29 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4610
  %new_node = getelementptr inbounds %struct.bNode, %struct.bNode* %29, i32 0, i32 2, !dbg !4611
  store %struct.bNode* null, %struct.bNode** %new_node, align 8, !dbg !4612
  %30 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4613
  %31 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4614
  %call20 = call %struct.bNode* @nodeCopyNode(%struct.bNodeTree* %30, %struct.bNode* %31), !dbg !4615
  %32 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4616
  %33 = load %struct.bNode*, %struct.bNode** %last, align 8, !dbg !4618
  %cmp21 = icmp eq %struct.bNode* %32, %33, !dbg !4619
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !4620

if.then22:                                        ; preds = %if.end19
  br label %for.end, !dbg !4621

if.end23:                                         ; preds = %if.end19
  br label %for.inc, !dbg !4622

for.inc:                                          ; preds = %if.end23
  %34 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4623
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %34, i32 0, i32 0, !dbg !4624
  %35 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !4624
  store %struct.bNode* %35, %struct.bNode** %node, align 8, !dbg !4625
  br label %for.cond, !dbg !4626, !llvm.loop !4627

for.end:                                          ; preds = %if.then22, %for.cond
  %36 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4629
  %links24 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %36, i32 0, i32 8, !dbg !4630
  %37 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4631
  %links25 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %37, i32 0, i32 8, !dbg !4632
  call void @BLI_duplicatelist(%struct.ListBase* %links24, %struct.ListBase* %links25), !dbg !4633
  %38 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4634
  %links26 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %38, i32 0, i32 8, !dbg !4636
  %first27 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links26, i32 0, i32 0, !dbg !4637
  %39 = load i8*, i8** %first27, align 8, !dbg !4637
  %40 = bitcast i8* %39 to %struct.bNodeLink*, !dbg !4634
  store %struct.bNodeLink* %40, %struct.bNodeLink** %link, align 8, !dbg !4638
  br label %for.cond28, !dbg !4639

for.cond28:                                       ; preds = %for.inc64, %for.end
  %41 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4640
  %tobool29 = icmp ne %struct.bNodeLink* %41, null, !dbg !4642
  br i1 %tobool29, label %for.body30, label %for.end66, !dbg !4642

for.body30:                                       ; preds = %for.cond28
  %42 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4643
  %fromnode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %42, i32 0, i32 2, !dbg !4645
  %43 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !4645
  %tobool31 = icmp ne %struct.bNode* %43, null, !dbg !4643
  br i1 %tobool31, label %cond.true, label %cond.false, !dbg !4643

cond.true:                                        ; preds = %for.body30
  %44 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4646
  %fromnode32 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %44, i32 0, i32 2, !dbg !4647
  %45 = load %struct.bNode*, %struct.bNode** %fromnode32, align 8, !dbg !4647
  %new_node33 = getelementptr inbounds %struct.bNode, %struct.bNode* %45, i32 0, i32 2, !dbg !4648
  %46 = load %struct.bNode*, %struct.bNode** %new_node33, align 8, !dbg !4648
  br label %cond.end, !dbg !4643

cond.false:                                       ; preds = %for.body30
  br label %cond.end, !dbg !4643

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bNode* [ %46, %cond.true ], [ null, %cond.false ], !dbg !4643
  %47 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4649
  %fromnode34 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %47, i32 0, i32 2, !dbg !4650
  store %struct.bNode* %cond, %struct.bNode** %fromnode34, align 8, !dbg !4651
  %48 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4652
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %48, i32 0, i32 4, !dbg !4653
  %49 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !4653
  %tobool35 = icmp ne %struct.bNodeSocket* %49, null, !dbg !4652
  br i1 %tobool35, label %cond.true36, label %cond.false38, !dbg !4652

cond.true36:                                      ; preds = %cond.end
  %50 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4654
  %fromsock37 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %50, i32 0, i32 4, !dbg !4655
  %51 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock37, align 8, !dbg !4655
  %new_sock = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %51, i32 0, i32 2, !dbg !4656
  %52 = load %struct.bNodeSocket*, %struct.bNodeSocket** %new_sock, align 8, !dbg !4656
  br label %cond.end39, !dbg !4652

cond.false38:                                     ; preds = %cond.end
  br label %cond.end39, !dbg !4652

cond.end39:                                       ; preds = %cond.false38, %cond.true36
  %cond40 = phi %struct.bNodeSocket* [ %52, %cond.true36 ], [ null, %cond.false38 ], !dbg !4652
  %53 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4657
  %fromsock41 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %53, i32 0, i32 4, !dbg !4658
  store %struct.bNodeSocket* %cond40, %struct.bNodeSocket** %fromsock41, align 8, !dbg !4659
  %54 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4660
  %tonode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %54, i32 0, i32 3, !dbg !4661
  %55 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !4661
  %tobool42 = icmp ne %struct.bNode* %55, null, !dbg !4660
  br i1 %tobool42, label %cond.true43, label %cond.false46, !dbg !4660

cond.true43:                                      ; preds = %cond.end39
  %56 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4662
  %tonode44 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %56, i32 0, i32 3, !dbg !4663
  %57 = load %struct.bNode*, %struct.bNode** %tonode44, align 8, !dbg !4663
  %new_node45 = getelementptr inbounds %struct.bNode, %struct.bNode* %57, i32 0, i32 2, !dbg !4664
  %58 = load %struct.bNode*, %struct.bNode** %new_node45, align 8, !dbg !4664
  br label %cond.end47, !dbg !4660

cond.false46:                                     ; preds = %cond.end39
  br label %cond.end47, !dbg !4660

cond.end47:                                       ; preds = %cond.false46, %cond.true43
  %cond48 = phi %struct.bNode* [ %58, %cond.true43 ], [ null, %cond.false46 ], !dbg !4660
  %59 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4665
  %tonode49 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %59, i32 0, i32 3, !dbg !4666
  store %struct.bNode* %cond48, %struct.bNode** %tonode49, align 8, !dbg !4667
  %60 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4668
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %60, i32 0, i32 5, !dbg !4669
  %61 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !4669
  %tobool50 = icmp ne %struct.bNodeSocket* %61, null, !dbg !4668
  br i1 %tobool50, label %cond.true51, label %cond.false54, !dbg !4668

cond.true51:                                      ; preds = %cond.end47
  %62 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4670
  %tosock52 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %62, i32 0, i32 5, !dbg !4671
  %63 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock52, align 8, !dbg !4671
  %new_sock53 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %63, i32 0, i32 2, !dbg !4672
  %64 = load %struct.bNodeSocket*, %struct.bNodeSocket** %new_sock53, align 8, !dbg !4672
  br label %cond.end55, !dbg !4668

cond.false54:                                     ; preds = %cond.end47
  br label %cond.end55, !dbg !4668

cond.end55:                                       ; preds = %cond.false54, %cond.true51
  %cond56 = phi %struct.bNodeSocket* [ %64, %cond.true51 ], [ null, %cond.false54 ], !dbg !4668
  %65 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4673
  %tosock57 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %65, i32 0, i32 5, !dbg !4674
  store %struct.bNodeSocket* %cond56, %struct.bNodeSocket** %tosock57, align 8, !dbg !4675
  %66 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4676
  %tosock58 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %66, i32 0, i32 5, !dbg !4678
  %67 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock58, align 8, !dbg !4678
  %tobool59 = icmp ne %struct.bNodeSocket* %67, null, !dbg !4676
  br i1 %tobool59, label %if.then60, label %if.end63, !dbg !4679

if.then60:                                        ; preds = %cond.end55
  %68 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4680
  %69 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4681
  %tosock61 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %69, i32 0, i32 5, !dbg !4682
  %70 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock61, align 8, !dbg !4682
  %link62 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %70, i32 0, i32 23, !dbg !4683
  store %struct.bNodeLink* %68, %struct.bNodeLink** %link62, align 8, !dbg !4684
  br label %if.end63, !dbg !4681

if.end63:                                         ; preds = %if.then60, %cond.end55
  br label %for.inc64, !dbg !4685

for.inc64:                                        ; preds = %if.end63
  %71 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !4686
  %next65 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %71, i32 0, i32 0, !dbg !4687
  %72 = load %struct.bNodeLink*, %struct.bNodeLink** %next65, align 8, !dbg !4687
  store %struct.bNodeLink* %72, %struct.bNodeLink** %link, align 8, !dbg !4688
  br label %for.cond28, !dbg !4689, !llvm.loop !4690

for.end66:                                        ; preds = %for.cond28
  %73 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4692
  %inputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %73, i32 0, i32 22, !dbg !4693
  %74 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4694
  %inputs67 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %74, i32 0, i32 22, !dbg !4695
  call void @BLI_duplicatelist(%struct.ListBase* %inputs, %struct.ListBase* %inputs67), !dbg !4696
  %75 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4697
  %inputs68 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %75, i32 0, i32 22, !dbg !4698
  %first69 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs68, i32 0, i32 0, !dbg !4699
  %76 = load i8*, i8** %first69, align 8, !dbg !4699
  %77 = bitcast i8* %76 to %struct.bNodeSocket*, !dbg !4697
  store %struct.bNodeSocket* %77, %struct.bNodeSocket** %oldsock, align 8, !dbg !4700
  %78 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4701
  %inputs70 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %78, i32 0, i32 22, !dbg !4703
  %first71 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs70, i32 0, i32 0, !dbg !4704
  %79 = load i8*, i8** %first71, align 8, !dbg !4704
  %80 = bitcast i8* %79 to %struct.bNodeSocket*, !dbg !4701
  store %struct.bNodeSocket* %80, %struct.bNodeSocket** %sock, align 8, !dbg !4705
  br label %for.cond72, !dbg !4706

for.cond72:                                       ; preds = %for.inc75, %for.end66
  %81 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !4707
  %tobool73 = icmp ne %struct.bNodeSocket* %81, null, !dbg !4709
  br i1 %tobool73, label %for.body74, label %for.end78, !dbg !4709

for.body74:                                       ; preds = %for.cond72
  %82 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !4710
  %83 = load %struct.bNodeSocket*, %struct.bNodeSocket** %oldsock, align 8, !dbg !4711
  call void @node_socket_copy(%struct.bNodeSocket* %82, %struct.bNodeSocket* %83), !dbg !4712
  br label %for.inc75, !dbg !4712

for.inc75:                                        ; preds = %for.body74
  %84 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !4713
  %next76 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %84, i32 0, i32 0, !dbg !4714
  %85 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next76, align 8, !dbg !4714
  store %struct.bNodeSocket* %85, %struct.bNodeSocket** %sock, align 8, !dbg !4715
  %86 = load %struct.bNodeSocket*, %struct.bNodeSocket** %oldsock, align 8, !dbg !4716
  %next77 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %86, i32 0, i32 0, !dbg !4717
  %87 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next77, align 8, !dbg !4717
  store %struct.bNodeSocket* %87, %struct.bNodeSocket** %oldsock, align 8, !dbg !4718
  br label %for.cond72, !dbg !4719, !llvm.loop !4720

for.end78:                                        ; preds = %for.cond72
  %88 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4722
  %outputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %88, i32 0, i32 23, !dbg !4723
  %89 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4724
  %outputs79 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %89, i32 0, i32 23, !dbg !4725
  call void @BLI_duplicatelist(%struct.ListBase* %outputs, %struct.ListBase* %outputs79), !dbg !4726
  %90 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4727
  %outputs80 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %90, i32 0, i32 23, !dbg !4728
  %first81 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs80, i32 0, i32 0, !dbg !4729
  %91 = load i8*, i8** %first81, align 8, !dbg !4729
  %92 = bitcast i8* %91 to %struct.bNodeSocket*, !dbg !4727
  store %struct.bNodeSocket* %92, %struct.bNodeSocket** %oldsock, align 8, !dbg !4730
  %93 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4731
  %outputs82 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %93, i32 0, i32 23, !dbg !4733
  %first83 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs82, i32 0, i32 0, !dbg !4734
  %94 = load i8*, i8** %first83, align 8, !dbg !4734
  %95 = bitcast i8* %94 to %struct.bNodeSocket*, !dbg !4731
  store %struct.bNodeSocket* %95, %struct.bNodeSocket** %sock, align 8, !dbg !4735
  br label %for.cond84, !dbg !4736

for.cond84:                                       ; preds = %for.inc87, %for.end78
  %96 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !4737
  %tobool85 = icmp ne %struct.bNodeSocket* %96, null, !dbg !4739
  br i1 %tobool85, label %for.body86, label %for.end90, !dbg !4739

for.body86:                                       ; preds = %for.cond84
  %97 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !4740
  %98 = load %struct.bNodeSocket*, %struct.bNodeSocket** %oldsock, align 8, !dbg !4741
  call void @node_socket_copy(%struct.bNodeSocket* %97, %struct.bNodeSocket* %98), !dbg !4742
  br label %for.inc87, !dbg !4742

for.inc87:                                        ; preds = %for.body86
  %99 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !4743
  %next88 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %99, i32 0, i32 0, !dbg !4744
  %100 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next88, align 8, !dbg !4744
  store %struct.bNodeSocket* %100, %struct.bNodeSocket** %sock, align 8, !dbg !4745
  %101 = load %struct.bNodeSocket*, %struct.bNodeSocket** %oldsock, align 8, !dbg !4746
  %next89 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %101, i32 0, i32 0, !dbg !4747
  %102 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next89, align 8, !dbg !4747
  store %struct.bNodeSocket* %102, %struct.bNodeSocket** %oldsock, align 8, !dbg !4748
  br label %for.cond84, !dbg !4749, !llvm.loop !4750

for.end90:                                        ; preds = %for.cond84
  %103 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4752
  %previews = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %103, i32 0, i32 24, !dbg !4754
  %104 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews, align 8, !dbg !4754
  %tobool91 = icmp ne %struct.bNodeInstanceHash* %104, null, !dbg !4752
  br i1 %tobool91, label %land.lhs.true92, label %if.else111, !dbg !4755

land.lhs.true92:                                  ; preds = %for.end90
  %105 = load i8, i8* %copy_previews.addr, align 1, !dbg !4756
  %conv = zext i8 %105 to i32, !dbg !4756
  %tobool93 = icmp ne i32 %conv, 0, !dbg !4756
  br i1 %tobool93, label %if.then94, label %if.else111, !dbg !4757

if.then94:                                        ; preds = %land.lhs.true92
  call void @llvm.dbg.declare(metadata %struct.GHashIterator* %iter, metadata !4758, metadata !DIExpression()), !dbg !4761
  %call95 = call %struct.bNodeInstanceHash* @BKE_node_instance_hash_new(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0)), !dbg !4762
  %106 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4763
  %previews96 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %106, i32 0, i32 24, !dbg !4764
  store %struct.bNodeInstanceHash* %call95, %struct.bNodeInstanceHash** %previews96, align 8, !dbg !4765
  %107 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4766
  %previews97 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %107, i32 0, i32 24, !dbg !4766
  %108 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews97, align 8, !dbg !4766
  call void @BKE_node_instance_hash_iterator_init(%struct.GHashIterator* %iter, %struct.bNodeInstanceHash* %108), !dbg !4766
  br label %for.cond98, !dbg !4766

for.cond98:                                       ; preds = %for.inc109, %if.then94
  %call99 = call zeroext i8 @BKE_node_instance_hash_iterator_done(%struct.GHashIterator* %iter), !dbg !4768
  %conv100 = zext i8 %call99 to i32, !dbg !4768
  %cmp101 = icmp eq i32 %conv100, 0, !dbg !4768
  br i1 %cmp101, label %for.body103, label %for.end110, !dbg !4766

for.body103:                                      ; preds = %for.cond98
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %key, metadata !4770, metadata !DIExpression()), !dbg !4772
  %call104 = call i32 @BKE_node_instance_hash_iterator_get_key(%struct.GHashIterator* %iter), !dbg !4773
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !4773
  store i32 %call104, i32* %coerce.dive, align 4, !dbg !4773
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %preview, metadata !4774, metadata !DIExpression()), !dbg !4791
  %call105 = call i8* @BKE_node_instance_hash_iterator_get_value(%struct.GHashIterator* %iter), !dbg !4792
  %109 = bitcast i8* %call105 to %struct.bNodePreview*, !dbg !4792
  store %struct.bNodePreview* %109, %struct.bNodePreview** %preview, align 8, !dbg !4791
  %110 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4793
  %previews106 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %110, i32 0, i32 24, !dbg !4794
  %111 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews106, align 8, !dbg !4794
  %112 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !4795
  %call107 = call %struct.bNodePreview* @BKE_node_preview_copy(%struct.bNodePreview* %112), !dbg !4796
  %113 = bitcast %struct.bNodePreview* %call107 to i8*, !dbg !4796
  %coerce.dive108 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !4797
  %114 = load i32, i32* %coerce.dive108, align 4, !dbg !4797
  call void @BKE_node_instance_hash_insert(%struct.bNodeInstanceHash* %111, i32 %114, i8* %113), !dbg !4797
  br label %for.inc109, !dbg !4798

for.inc109:                                       ; preds = %for.body103
  call void @BKE_node_instance_hash_iterator_step(%struct.GHashIterator* %iter), !dbg !4768
  br label %for.cond98, !dbg !4768, !llvm.loop !4799

for.end110:                                       ; preds = %for.cond98
  br label %if.end113, !dbg !4801

if.else111:                                       ; preds = %land.lhs.true92, %for.end90
  %115 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4802
  %previews112 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %115, i32 0, i32 24, !dbg !4803
  store %struct.bNodeInstanceHash* null, %struct.bNodeInstanceHash** %previews112, align 8, !dbg !4804
  br label %if.end113

if.end113:                                        ; preds = %if.else111, %for.end110
  %116 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4805
  %nodes114 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %116, i32 0, i32 7, !dbg !4807
  %first115 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes114, i32 0, i32 0, !dbg !4808
  %117 = load i8*, i8** %first115, align 8, !dbg !4808
  %118 = bitcast i8* %117 to %struct.bNode*, !dbg !4805
  store %struct.bNode* %118, %struct.bNode** %node, align 8, !dbg !4809
  br label %for.cond116, !dbg !4810

for.cond116:                                      ; preds = %for.inc125, %if.end113
  %119 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4811
  %tobool117 = icmp ne %struct.bNode* %119, null, !dbg !4813
  br i1 %tobool117, label %for.body118, label %for.end127, !dbg !4813

for.body118:                                      ; preds = %for.cond116
  %120 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4814
  %parent = getelementptr inbounds %struct.bNode, %struct.bNode* %120, i32 0, i32 19, !dbg !4817
  %121 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !4817
  %tobool119 = icmp ne %struct.bNode* %121, null, !dbg !4814
  br i1 %tobool119, label %if.then120, label %if.end124, !dbg !4818

if.then120:                                       ; preds = %for.body118
  %122 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4819
  %parent121 = getelementptr inbounds %struct.bNode, %struct.bNode* %122, i32 0, i32 19, !dbg !4820
  %123 = load %struct.bNode*, %struct.bNode** %parent121, align 8, !dbg !4820
  %new_node122 = getelementptr inbounds %struct.bNode, %struct.bNode* %123, i32 0, i32 2, !dbg !4821
  %124 = load %struct.bNode*, %struct.bNode** %new_node122, align 8, !dbg !4821
  %125 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4822
  %parent123 = getelementptr inbounds %struct.bNode, %struct.bNode* %125, i32 0, i32 19, !dbg !4823
  store %struct.bNode* %124, %struct.bNode** %parent123, align 8, !dbg !4824
  br label %if.end124, !dbg !4822

if.end124:                                        ; preds = %if.then120, %for.body118
  br label %for.inc125, !dbg !4825

for.inc125:                                       ; preds = %if.end124
  %126 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4826
  %next126 = getelementptr inbounds %struct.bNode, %struct.bNode* %126, i32 0, i32 0, !dbg !4827
  %127 = load %struct.bNode*, %struct.bNode** %next126, align 8, !dbg !4827
  store %struct.bNode* %127, %struct.bNode** %node, align 8, !dbg !4828
  br label %for.cond116, !dbg !4829, !llvm.loop !4830

for.end127:                                       ; preds = %for.cond116
  %128 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4832
  %interface_type = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %128, i32 0, i32 4, !dbg !4833
  store %struct.StructRNA* null, %struct.StructRNA** %interface_type, align 8, !dbg !4834
  %129 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !4835
  store %struct.bNodeTree* %129, %struct.bNodeTree** %retval, align 8, !dbg !4836
  br label %return, !dbg !4836

return:                                           ; preds = %for.end127, %if.then
  %130 = load %struct.bNodeTree*, %struct.bNodeTree** %retval, align 8, !dbg !4837
  ret %struct.bNodeTree* %130, !dbg !4837
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeTree* @ntreeCopyTree(%struct.bNodeTree* %ntree) #0 !dbg !4838 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !4841, metadata !DIExpression()), !dbg !4842
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4843
  %1 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !4844
  %call = call %struct.bNodeTree* @ntreeCopyTree_ex(%struct.bNodeTree* %0, %struct.Main* %1, i8 zeroext 1), !dbg !4845
  ret %struct.bNodeTree* %call, !dbg !4846
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeSwitchID_ex(%struct.bNodeTree* %ntree, %struct.ID* %id_from, %struct.ID* %id_to, i8 zeroext %do_id_user) #0 !dbg !4847 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %id_from.addr = alloca %struct.ID*, align 8
  %id_to.addr = alloca %struct.ID*, align 8
  %do_id_user.addr = alloca i8, align 1
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !4850, metadata !DIExpression()), !dbg !4851
  store %struct.ID* %id_from, %struct.ID** %id_from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id_from.addr, metadata !4852, metadata !DIExpression()), !dbg !4853
  store %struct.ID* %id_to, %struct.ID** %id_to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id_to.addr, metadata !4854, metadata !DIExpression()), !dbg !4855
  store i8 %do_id_user, i8* %do_id_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_id_user.addr, metadata !4856, metadata !DIExpression()), !dbg !4857
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !4858, metadata !DIExpression()), !dbg !4859
  %0 = load %struct.ID*, %struct.ID** %id_from.addr, align 8, !dbg !4860
  %1 = load %struct.ID*, %struct.ID** %id_to.addr, align 8, !dbg !4862
  %cmp = icmp eq %struct.ID* %0, %1, !dbg !4863
  br i1 %cmp, label %if.then, label %if.end, !dbg !4864

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !4865

if.end:                                           ; preds = %entry
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4867
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 7, !dbg !4869
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !4870
  %3 = load i8*, i8** %first, align 8, !dbg !4870
  %4 = bitcast i8* %3 to %struct.bNode*, !dbg !4867
  store %struct.bNode* %4, %struct.bNode** %node, align 8, !dbg !4871
  br label %for.cond, !dbg !4872

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4873
  %tobool = icmp ne %struct.bNode* %5, null, !dbg !4875
  br i1 %tobool, label %for.body, label %for.end, !dbg !4875

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4876
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 20, !dbg !4879
  %7 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4879
  %8 = load %struct.ID*, %struct.ID** %id_from.addr, align 8, !dbg !4880
  %cmp1 = icmp eq %struct.ID* %7, %8, !dbg !4881
  br i1 %cmp1, label %if.then2, label %if.end7, !dbg !4882

if.then2:                                         ; preds = %for.body
  %9 = load i8, i8* %do_id_user.addr, align 1, !dbg !4883
  %tobool3 = icmp ne i8 %9, 0, !dbg !4883
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !4886

if.then4:                                         ; preds = %if.then2
  %10 = load %struct.ID*, %struct.ID** %id_from.addr, align 8, !dbg !4887
  call void @id_us_min(%struct.ID* %10), !dbg !4889
  %11 = load %struct.ID*, %struct.ID** %id_to.addr, align 8, !dbg !4890
  call void @id_us_plus(%struct.ID* %11), !dbg !4891
  br label %if.end5, !dbg !4892

if.end5:                                          ; preds = %if.then4, %if.then2
  %12 = load %struct.ID*, %struct.ID** %id_to.addr, align 8, !dbg !4893
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4894
  %id6 = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 20, !dbg !4895
  store %struct.ID* %12, %struct.ID** %id6, align 8, !dbg !4896
  br label %if.end7, !dbg !4897

if.end7:                                          ; preds = %if.end5, %for.body
  br label %for.inc, !dbg !4898

for.inc:                                          ; preds = %if.end7
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4899
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 0, !dbg !4900
  %15 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !4900
  store %struct.bNode* %15, %struct.bNode** %node, align 8, !dbg !4901
  br label %for.cond, !dbg !4902, !llvm.loop !4903

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !4905
}

declare dso_local void @id_us_min(%struct.ID*) #2

declare dso_local void @id_us_plus(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeSwitchID(%struct.bNodeTree* %ntree, %struct.ID* %id_from, %struct.ID* %id_to) #0 !dbg !4906 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %id_from.addr = alloca %struct.ID*, align 8
  %id_to.addr = alloca %struct.ID*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !4909, metadata !DIExpression()), !dbg !4910
  store %struct.ID* %id_from, %struct.ID** %id_from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id_from.addr, metadata !4911, metadata !DIExpression()), !dbg !4912
  store %struct.ID* %id_to, %struct.ID** %id_to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id_to.addr, metadata !4913, metadata !DIExpression()), !dbg !4914
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4915
  %1 = load %struct.ID*, %struct.ID** %id_from.addr, align 8, !dbg !4916
  %2 = load %struct.ID*, %struct.ID** %id_to.addr, align 8, !dbg !4917
  call void @ntreeSwitchID_ex(%struct.bNodeTree* %0, %struct.ID* %1, %struct.ID* %2, i8 zeroext 1), !dbg !4918
  ret void, !dbg !4919
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeUserIncrefID(%struct.bNodeTree* %ntree) #0 !dbg !4920 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !4923, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !4925, metadata !DIExpression()), !dbg !4926
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4927
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !4929
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !4930
  %1 = load i8*, i8** %first, align 8, !dbg !4930
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !4927
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !4931
  br label %for.cond, !dbg !4932

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4933
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !4935
  br i1 %tobool, label %for.body, label %for.end, !dbg !4935

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4936
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 20, !dbg !4938
  %5 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4938
  call void @id_us_plus(%struct.ID* %5), !dbg !4939
  br label %for.inc, !dbg !4940

for.inc:                                          ; preds = %for.body
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4941
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 0, !dbg !4942
  %7 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !4942
  store %struct.bNode* %7, %struct.bNode** %node, align 8, !dbg !4943
  br label %for.cond, !dbg !4944, !llvm.loop !4945

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4947
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeUserDecrefID(%struct.bNodeTree* %ntree) #0 !dbg !4948 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !4949, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !4951, metadata !DIExpression()), !dbg !4952
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !4953
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !4955
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !4956
  %1 = load i8*, i8** %first, align 8, !dbg !4956
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !4953
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !4957
  br label %for.cond, !dbg !4958

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4959
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !4961
  br i1 %tobool, label %for.body, label %for.end, !dbg !4961

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4962
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 20, !dbg !4964
  %5 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !4964
  call void @id_us_min(%struct.ID* %5), !dbg !4965
  br label %for.inc, !dbg !4966

for.inc:                                          ; preds = %for.body
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !4967
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 0, !dbg !4968
  %7 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !4968
  store %struct.bNode* %7, %struct.bNode** %node, align 8, !dbg !4969
  br label %for.cond, !dbg !4970, !llvm.loop !4971

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4973
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_node_preview_used(%struct.bNode* %node) #0 !dbg !4974 {
entry:
  %node.addr = alloca %struct.bNode*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !4977, metadata !DIExpression()), !dbg !4978
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !4979
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 4, !dbg !4980
  %1 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !4980
  %flag = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 15, !dbg !4981
  %2 = load i16, i16* %flag, align 2, !dbg !4981
  %conv = sext i16 %2 to i32, !dbg !4979
  %and = and i32 %conv, 4, !dbg !4982
  %cmp = icmp ne i32 %and, 0, !dbg !4983
  %conv1 = zext i1 %cmp to i32, !dbg !4983
  ret i32 %conv1, !dbg !4984
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodePreview* @BKE_node_preview_verify(%struct.bNodeInstanceHash* %previews, i32 %key.coerce, i32 %xsize, i32 %ysize, i8 zeroext %create) #0 !dbg !4985 {
entry:
  %retval = alloca %struct.bNodePreview*, align 8
  %key = alloca %struct.bNodeInstanceKey, align 4
  %previews.addr = alloca %struct.bNodeInstanceHash*, align 8
  %xsize.addr = alloca i32, align 4
  %ysize.addr = alloca i32, align 4
  %create.addr = alloca i8, align 1
  %preview = alloca %struct.bNodePreview*, align 8
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0
  store i32 %key.coerce, i32* %coerce.dive, align 4
  store %struct.bNodeInstanceHash* %previews, %struct.bNodeInstanceHash** %previews.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %previews.addr, metadata !4990, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %key, metadata !4992, metadata !DIExpression()), !dbg !4993
  store i32 %xsize, i32* %xsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xsize.addr, metadata !4994, metadata !DIExpression()), !dbg !4995
  store i32 %ysize, i32* %ysize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ysize.addr, metadata !4996, metadata !DIExpression()), !dbg !4997
  store i8 %create, i8* %create.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %create.addr, metadata !4998, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %preview, metadata !5000, metadata !DIExpression()), !dbg !5001
  %0 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews.addr, align 8, !dbg !5002
  %coerce.dive1 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5003
  %1 = load i32, i32* %coerce.dive1, align 4, !dbg !5003
  %call = call i8* @BKE_node_instance_hash_lookup(%struct.bNodeInstanceHash* %0, i32 %1), !dbg !5003
  %2 = bitcast i8* %call to %struct.bNodePreview*, !dbg !5003
  store %struct.bNodePreview* %2, %struct.bNodePreview** %preview, align 8, !dbg !5004
  %3 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5005
  %tobool = icmp ne %struct.bNodePreview* %3, null, !dbg !5005
  br i1 %tobool, label %if.end6, label %if.then, !dbg !5007

if.then:                                          ; preds = %entry
  %4 = load i8, i8* %create.addr, align 1, !dbg !5008
  %tobool2 = icmp ne i8 %4, 0, !dbg !5008
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !5011

if.then3:                                         ; preds = %if.then
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5012
  %call4 = call i8* %5(i64 24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0)), !dbg !5012
  %6 = bitcast i8* %call4 to %struct.bNodePreview*, !dbg !5012
  store %struct.bNodePreview* %6, %struct.bNodePreview** %preview, align 8, !dbg !5014
  %7 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews.addr, align 8, !dbg !5015
  %8 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5016
  %9 = bitcast %struct.bNodePreview* %8 to i8*, !dbg !5016
  %coerce.dive5 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5017
  %10 = load i32, i32* %coerce.dive5, align 4, !dbg !5017
  call void @BKE_node_instance_hash_insert(%struct.bNodeInstanceHash* %7, i32 %10, i8* %9), !dbg !5017
  br label %if.end, !dbg !5018

if.else:                                          ; preds = %if.then
  store %struct.bNodePreview* null, %struct.bNodePreview** %retval, align 8, !dbg !5019
  br label %return, !dbg !5019

if.end:                                           ; preds = %if.then3
  br label %if.end6, !dbg !5020

if.end6:                                          ; preds = %if.end, %entry
  %11 = load i32, i32* %xsize.addr, align 4, !dbg !5021
  %cmp = icmp eq i32 %11, 0, !dbg !5023
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !5024

lor.lhs.false:                                    ; preds = %if.end6
  %12 = load i32, i32* %ysize.addr, align 4, !dbg !5025
  %cmp7 = icmp eq i32 %12, 0, !dbg !5026
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !5027

if.then8:                                         ; preds = %lor.lhs.false, %if.end6
  %13 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5028
  store %struct.bNodePreview* %13, %struct.bNodePreview** %retval, align 8, !dbg !5029
  br label %return, !dbg !5029

if.end9:                                          ; preds = %lor.lhs.false
  %14 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5030
  %rect = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %14, i32 0, i32 1, !dbg !5032
  %15 = load i8*, i8** %rect, align 8, !dbg !5032
  %tobool10 = icmp ne i8* %15, null, !dbg !5030
  br i1 %tobool10, label %if.then11, label %if.end24, !dbg !5033

if.then11:                                        ; preds = %if.end9
  %16 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5034
  %xsize12 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %16, i32 0, i32 2, !dbg !5037
  %17 = load i16, i16* %xsize12, align 8, !dbg !5037
  %conv = sext i16 %17 to i32, !dbg !5034
  %18 = load i32, i32* %xsize.addr, align 4, !dbg !5038
  %cmp13 = icmp ne i32 %conv, %18, !dbg !5039
  br i1 %cmp13, label %if.then20, label %lor.lhs.false15, !dbg !5040

lor.lhs.false15:                                  ; preds = %if.then11
  %19 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5041
  %ysize16 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %19, i32 0, i32 3, !dbg !5042
  %20 = load i16, i16* %ysize16, align 2, !dbg !5042
  %conv17 = sext i16 %20 to i32, !dbg !5041
  %21 = load i32, i32* %ysize.addr, align 4, !dbg !5043
  %cmp18 = icmp ne i32 %conv17, %21, !dbg !5044
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !5045

if.then20:                                        ; preds = %lor.lhs.false15, %if.then11
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5046
  %23 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5048
  %rect21 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %23, i32 0, i32 1, !dbg !5049
  %24 = load i8*, i8** %rect21, align 8, !dbg !5049
  call void %22(i8* %24), !dbg !5046
  %25 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5050
  %rect22 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %25, i32 0, i32 1, !dbg !5051
  store i8* null, i8** %rect22, align 8, !dbg !5052
  br label %if.end23, !dbg !5053

if.end23:                                         ; preds = %if.then20, %lor.lhs.false15
  br label %if.end24, !dbg !5054

if.end24:                                         ; preds = %if.end23, %if.end9
  %26 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5055
  %rect25 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %26, i32 0, i32 1, !dbg !5057
  %27 = load i8*, i8** %rect25, align 8, !dbg !5057
  %cmp26 = icmp eq i8* %27, null, !dbg !5058
  br i1 %cmp26, label %if.then28, label %if.end40, !dbg !5059

if.then28:                                        ; preds = %if.end24
  %28 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5060
  %29 = load i32, i32* %xsize.addr, align 4, !dbg !5062
  %mul = mul nsw i32 4, %29, !dbg !5063
  %conv29 = sext i32 %mul to i64, !dbg !5064
  %30 = load i32, i32* %xsize.addr, align 4, !dbg !5065
  %31 = load i32, i32* %ysize.addr, align 4, !dbg !5066
  %mul30 = mul nsw i32 %30, %31, !dbg !5067
  %conv31 = sext i32 %mul30 to i64, !dbg !5065
  %mul32 = mul i64 %conv31, 1, !dbg !5068
  %mul33 = mul i64 %mul32, 4, !dbg !5069
  %add = add i64 %conv29, %mul33, !dbg !5070
  %call34 = call i8* %28(i64 %add, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i64 0, i64 0)), !dbg !5060
  %32 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5071
  %rect35 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %32, i32 0, i32 1, !dbg !5072
  store i8* %call34, i8** %rect35, align 8, !dbg !5073
  %33 = load i32, i32* %xsize.addr, align 4, !dbg !5074
  %conv36 = trunc i32 %33 to i16, !dbg !5074
  %34 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5075
  %xsize37 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %34, i32 0, i32 2, !dbg !5076
  store i16 %conv36, i16* %xsize37, align 8, !dbg !5077
  %35 = load i32, i32* %ysize.addr, align 4, !dbg !5078
  %conv38 = trunc i32 %35 to i16, !dbg !5078
  %36 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5079
  %ysize39 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %36, i32 0, i32 3, !dbg !5080
  store i16 %conv38, i16* %ysize39, align 2, !dbg !5081
  br label %if.end40, !dbg !5082

if.end40:                                         ; preds = %if.then28, %if.end24
  %37 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5083
  store %struct.bNodePreview* %37, %struct.bNodePreview** %retval, align 8, !dbg !5084
  br label %return, !dbg !5084

return:                                           ; preds = %if.end40, %if.then8, %if.else
  %38 = load %struct.bNodePreview*, %struct.bNodePreview** %retval, align 8, !dbg !5085
  ret %struct.bNodePreview* %38, !dbg !5085
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BKE_node_instance_hash_lookup(%struct.bNodeInstanceHash* %hash, i32 %key.coerce) #0 !dbg !5086 {
entry:
  %key = alloca %struct.bNodeInstanceKey, align 4
  %hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0
  store i32 %key.coerce, i32* %coerce.dive, align 4
  store %struct.bNodeInstanceHash* %hash, %struct.bNodeInstanceHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash.addr, metadata !5089, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %key, metadata !5091, metadata !DIExpression()), !dbg !5092
  %0 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !5093
  %ghash = getelementptr inbounds %struct.bNodeInstanceHash, %struct.bNodeInstanceHash* %0, i32 0, i32 0, !dbg !5094
  %1 = load %struct.GHash*, %struct.GHash** %ghash, align 8, !dbg !5094
  %2 = bitcast %struct.bNodeInstanceKey* %key to i8*, !dbg !5095
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %1, i8* %2), !dbg !5096
  ret i8* %call, !dbg !5097
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_instance_hash_insert(%struct.bNodeInstanceHash* %hash, i32 %key.coerce, i8* %value) #0 !dbg !5098 {
entry:
  %key = alloca %struct.bNodeInstanceKey, align 4
  %hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  %value.addr = alloca i8*, align 8
  %entry1 = alloca %struct.bNodeInstanceHashEntry*, align 8
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0
  store i32 %key.coerce, i32* %coerce.dive, align 4
  store %struct.bNodeInstanceHash* %hash, %struct.bNodeInstanceHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash.addr, metadata !5101, metadata !DIExpression()), !dbg !5102
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %key, metadata !5103, metadata !DIExpression()), !dbg !5104
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !5105, metadata !DIExpression()), !dbg !5106
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHashEntry** %entry1, metadata !5107, metadata !DIExpression()), !dbg !5109
  %0 = load i8*, i8** %value.addr, align 8, !dbg !5110
  %1 = bitcast i8* %0 to %struct.bNodeInstanceHashEntry*, !dbg !5110
  store %struct.bNodeInstanceHashEntry* %1, %struct.bNodeInstanceHashEntry** %entry1, align 8, !dbg !5109
  %2 = load %struct.bNodeInstanceHashEntry*, %struct.bNodeInstanceHashEntry** %entry1, align 8, !dbg !5111
  %key2 = getelementptr inbounds %struct.bNodeInstanceHashEntry, %struct.bNodeInstanceHashEntry* %2, i32 0, i32 0, !dbg !5112
  %3 = bitcast %struct.bNodeInstanceKey* %key2 to i8*, !dbg !5113
  %4 = bitcast %struct.bNodeInstanceKey* %key to i8*, !dbg !5113
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 4, i1 false), !dbg !5113
  %5 = load %struct.bNodeInstanceHashEntry*, %struct.bNodeInstanceHashEntry** %entry1, align 8, !dbg !5114
  %tag = getelementptr inbounds %struct.bNodeInstanceHashEntry, %struct.bNodeInstanceHashEntry* %5, i32 0, i32 1, !dbg !5115
  store i16 0, i16* %tag, align 4, !dbg !5116
  %6 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !5117
  %ghash = getelementptr inbounds %struct.bNodeInstanceHash, %struct.bNodeInstanceHash* %6, i32 0, i32 0, !dbg !5118
  %7 = load %struct.GHash*, %struct.GHash** %ghash, align 8, !dbg !5118
  %8 = load %struct.bNodeInstanceHashEntry*, %struct.bNodeInstanceHashEntry** %entry1, align 8, !dbg !5119
  %key3 = getelementptr inbounds %struct.bNodeInstanceHashEntry, %struct.bNodeInstanceHashEntry* %8, i32 0, i32 0, !dbg !5120
  %9 = bitcast %struct.bNodeInstanceKey* %key3 to i8*, !dbg !5121
  %10 = load i8*, i8** %value.addr, align 8, !dbg !5122
  call void @BLI_ghash_insert(%struct.GHash* %7, i8* %9, i8* %10), !dbg !5123
  ret void, !dbg !5124
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodePreview* @BKE_node_preview_copy(%struct.bNodePreview* %preview) #0 !dbg !5125 {
entry:
  %preview.addr = alloca %struct.bNodePreview*, align 8
  %new_preview = alloca %struct.bNodePreview*, align 8
  store %struct.bNodePreview* %preview, %struct.bNodePreview** %preview.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %preview.addr, metadata !5128, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %new_preview, metadata !5130, metadata !DIExpression()), !dbg !5131
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !5132
  %1 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5133
  %2 = bitcast %struct.bNodePreview* %1 to i8*, !dbg !5133
  %call = call i8* %0(i8* %2), !dbg !5132
  %3 = bitcast i8* %call to %struct.bNodePreview*, !dbg !5132
  store %struct.bNodePreview* %3, %struct.bNodePreview** %new_preview, align 8, !dbg !5131
  %4 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5134
  %rect = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %4, i32 0, i32 1, !dbg !5136
  %5 = load i8*, i8** %rect, align 8, !dbg !5136
  %tobool = icmp ne i8* %5, null, !dbg !5134
  br i1 %tobool, label %if.then, label %if.end, !dbg !5137

if.then:                                          ; preds = %entry
  %6 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !5138
  %7 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5139
  %rect1 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %7, i32 0, i32 1, !dbg !5140
  %8 = load i8*, i8** %rect1, align 8, !dbg !5140
  %call2 = call i8* %6(i8* %8), !dbg !5138
  %9 = load %struct.bNodePreview*, %struct.bNodePreview** %new_preview, align 8, !dbg !5141
  %rect3 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %9, i32 0, i32 1, !dbg !5142
  store i8* %call2, i8** %rect3, align 8, !dbg !5143
  br label %if.end, !dbg !5141

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.bNodePreview*, %struct.bNodePreview** %new_preview, align 8, !dbg !5144
  ret %struct.bNodePreview* %10, !dbg !5145
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_preview_free(%struct.bNodePreview* %preview) #0 !dbg !5146 {
entry:
  %preview.addr = alloca %struct.bNodePreview*, align 8
  store %struct.bNodePreview* %preview, %struct.bNodePreview** %preview.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %preview.addr, metadata !5149, metadata !DIExpression()), !dbg !5150
  %0 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5151
  %rect = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %0, i32 0, i32 1, !dbg !5153
  %1 = load i8*, i8** %rect, align 8, !dbg !5153
  %tobool = icmp ne i8* %1, null, !dbg !5151
  br i1 %tobool, label %if.then, label %if.end, !dbg !5154

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5155
  %3 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5156
  %rect1 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %3, i32 0, i32 1, !dbg !5157
  %4 = load i8*, i8** %rect1, align 8, !dbg !5157
  call void %2(i8* %4), !dbg !5155
  br label %if.end, !dbg !5155

if.end:                                           ; preds = %if.then, %entry
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5158
  %6 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5159
  %7 = bitcast %struct.bNodePreview* %6 to i8*, !dbg !5159
  call void %5(i8* %7), !dbg !5158
  ret void, !dbg !5160
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_preview_init_tree(%struct.bNodeTree* %ntree, i32 %xsize, i32 %ysize, i32 %create_previews) #0 !dbg !5161 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %xsize.addr = alloca i32, align 4
  %ysize.addr = alloca i32, align 4
  %create_previews.addr = alloca i32, align 4
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !5164, metadata !DIExpression()), !dbg !5165
  store i32 %xsize, i32* %xsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xsize.addr, metadata !5166, metadata !DIExpression()), !dbg !5167
  store i32 %ysize, i32* %ysize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ysize.addr, metadata !5168, metadata !DIExpression()), !dbg !5169
  store i32 %create_previews, i32* %create_previews.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %create_previews.addr, metadata !5170, metadata !DIExpression()), !dbg !5171
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5172
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !5172
  br i1 %tobool, label %if.end, label %if.then, !dbg !5174

if.then:                                          ; preds = %entry
  br label %return, !dbg !5175

if.end:                                           ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5176
  %previews = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 24, !dbg !5178
  %2 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews, align 8, !dbg !5178
  %tobool1 = icmp ne %struct.bNodeInstanceHash* %2, null, !dbg !5176
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !5179

if.then2:                                         ; preds = %if.end
  %call = call %struct.bNodeInstanceHash* @BKE_node_instance_hash_new(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0)), !dbg !5180
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5181
  %previews3 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 24, !dbg !5182
  store %struct.bNodeInstanceHash* %call, %struct.bNodeInstanceHash** %previews3, align 8, !dbg !5183
  br label %if.end4, !dbg !5181

if.end4:                                          ; preds = %if.then2, %if.end
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5184
  %previews5 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %4, i32 0, i32 24, !dbg !5185
  %5 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews5, align 8, !dbg !5185
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5186
  %7 = load i32, i32* %xsize.addr, align 4, !dbg !5187
  %8 = load i32, i32* %ysize.addr, align 4, !dbg !5188
  %9 = load i32, i32* %create_previews.addr, align 4, !dbg !5189
  %10 = load i32, i32* getelementptr inbounds (%struct.bNodeInstanceKey, %struct.bNodeInstanceKey* @NODE_INSTANCE_KEY_BASE, i32 0, i32 0), align 4, !dbg !5190
  call void @node_preview_init_tree_recursive(%struct.bNodeInstanceHash* %5, %struct.bNodeTree* %6, i32 %10, i32 %7, i32 %8, i32 %9), !dbg !5190
  br label %return, !dbg !5191

return:                                           ; preds = %if.end4, %if.then
  ret void, !dbg !5191
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeInstanceHash* @BKE_node_instance_hash_new(i8* %info) #0 !dbg !5192 {
entry:
  %info.addr = alloca i8*, align 8
  %hash = alloca %struct.bNodeInstanceHash*, align 8
  store i8* %info, i8** %info.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %info.addr, metadata !5195, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash, metadata !5197, metadata !DIExpression()), !dbg !5198
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5199
  %1 = load i8*, i8** %info.addr, align 8, !dbg !5200
  %call = call i8* %0(i64 8, i8* %1), !dbg !5199
  %2 = bitcast i8* %call to %struct.bNodeInstanceHash*, !dbg !5199
  store %struct.bNodeInstanceHash* %2, %struct.bNodeInstanceHash** %hash, align 8, !dbg !5198
  %call1 = call %struct.GHash* @BLI_ghash_new(i32 (i8*)* @node_instance_hash_key, i8 (i8*, i8*)* @node_instance_hash_key_cmp, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.53, i64 0, i64 0)), !dbg !5201
  %3 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash, align 8, !dbg !5202
  %ghash = getelementptr inbounds %struct.bNodeInstanceHash, %struct.bNodeInstanceHash* %3, i32 0, i32 0, !dbg !5203
  store %struct.GHash* %call1, %struct.GHash** %ghash, align 8, !dbg !5204
  %4 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash, align 8, !dbg !5205
  ret %struct.bNodeInstanceHash* %4, !dbg !5206
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_preview_init_tree_recursive(%struct.bNodeInstanceHash* %previews, %struct.bNodeTree* %ntree, i32 %parent_key.coerce, i32 %xsize, i32 %ysize, i32 %create) #0 !dbg !5207 {
entry:
  %parent_key = alloca %struct.bNodeInstanceKey, align 4
  %previews.addr = alloca %struct.bNodeInstanceHash*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %xsize.addr = alloca i32, align 4
  %ysize.addr = alloca i32, align 4
  %create.addr = alloca i32, align 4
  %node = alloca %struct.bNode*, align 8
  %key = alloca %struct.bNodeInstanceKey, align 4
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %parent_key, i32 0, i32 0
  store i32 %parent_key.coerce, i32* %coerce.dive, align 4
  store %struct.bNodeInstanceHash* %previews, %struct.bNodeInstanceHash** %previews.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %previews.addr, metadata !5210, metadata !DIExpression()), !dbg !5211
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !5212, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %parent_key, metadata !5214, metadata !DIExpression()), !dbg !5215
  store i32 %xsize, i32* %xsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xsize.addr, metadata !5216, metadata !DIExpression()), !dbg !5217
  store i32 %ysize, i32* %ysize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ysize.addr, metadata !5218, metadata !DIExpression()), !dbg !5219
  store i32 %create, i32* %create.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %create.addr, metadata !5220, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !5222, metadata !DIExpression()), !dbg !5223
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5224
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !5226
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !5227
  %1 = load i8*, i8** %first, align 8, !dbg !5227
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !5224
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !5228
  br label %for.cond, !dbg !5229

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5230
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !5232
  br i1 %tobool, label %for.body, label %for.end, !dbg !5232

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %key, metadata !5233, metadata !DIExpression()), !dbg !5235
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5236
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5237
  %coerce.dive1 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %parent_key, i32 0, i32 0, !dbg !5238
  %6 = load i32, i32* %coerce.dive1, align 4, !dbg !5238
  %call = call i32 @BKE_node_instance_key(i32 %6, %struct.bNodeTree* %4, %struct.bNode* %5), !dbg !5238
  %coerce.dive2 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5238
  store i32 %call, i32* %coerce.dive2, align 4, !dbg !5238
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5239
  %call3 = call i32 @BKE_node_preview_used(%struct.bNode* %7), !dbg !5241
  %tobool4 = icmp ne i32 %call3, 0, !dbg !5241
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5242

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %xsize.addr, align 4, !dbg !5243
  %conv = trunc i32 %8 to i16, !dbg !5243
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5245
  %preview_xsize = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 43, !dbg !5246
  store i16 %conv, i16* %preview_xsize, align 8, !dbg !5247
  %10 = load i32, i32* %ysize.addr, align 4, !dbg !5248
  %conv5 = trunc i32 %10 to i16, !dbg !5248
  %11 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5249
  %preview_ysize = getelementptr inbounds %struct.bNode, %struct.bNode* %11, i32 0, i32 44, !dbg !5250
  store i16 %conv5, i16* %preview_ysize, align 2, !dbg !5251
  %12 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews.addr, align 8, !dbg !5252
  %13 = load i32, i32* %xsize.addr, align 4, !dbg !5253
  %14 = load i32, i32* %ysize.addr, align 4, !dbg !5254
  %15 = load i32, i32* %create.addr, align 4, !dbg !5255
  %conv6 = trunc i32 %15 to i8, !dbg !5255
  %coerce.dive7 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5256
  %16 = load i32, i32* %coerce.dive7, align 4, !dbg !5256
  %call8 = call %struct.bNodePreview* @BKE_node_preview_verify(%struct.bNodeInstanceHash* %12, i32 %16, i32 %13, i32 %14, i8 zeroext %conv6), !dbg !5256
  br label %if.end, !dbg !5257

if.end:                                           ; preds = %if.then, %for.body
  %17 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5258
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %17, i32 0, i32 8, !dbg !5260
  %18 = load i16, i16* %type, align 4, !dbg !5260
  %conv9 = sext i16 %18 to i32, !dbg !5258
  %cmp = icmp eq i32 %conv9, 2, !dbg !5261
  br i1 %cmp, label %land.lhs.true, label %if.end15, !dbg !5262

land.lhs.true:                                    ; preds = %if.end
  %19 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5263
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %19, i32 0, i32 20, !dbg !5264
  %20 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !5264
  %tobool11 = icmp ne %struct.ID* %20, null, !dbg !5263
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !5265

if.then12:                                        ; preds = %land.lhs.true
  %21 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews.addr, align 8, !dbg !5266
  %22 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5267
  %id13 = getelementptr inbounds %struct.bNode, %struct.bNode* %22, i32 0, i32 20, !dbg !5268
  %23 = load %struct.ID*, %struct.ID** %id13, align 8, !dbg !5268
  %24 = bitcast %struct.ID* %23 to %struct.bNodeTree*, !dbg !5269
  %25 = load i32, i32* %xsize.addr, align 4, !dbg !5270
  %26 = load i32, i32* %ysize.addr, align 4, !dbg !5271
  %27 = load i32, i32* %create.addr, align 4, !dbg !5272
  %coerce.dive14 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5273
  %28 = load i32, i32* %coerce.dive14, align 4, !dbg !5273
  call void @node_preview_init_tree_recursive(%struct.bNodeInstanceHash* %21, %struct.bNodeTree* %24, i32 %28, i32 %25, i32 %26, i32 %27), !dbg !5273
  br label %if.end15, !dbg !5273

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  br label %for.inc, !dbg !5274

for.inc:                                          ; preds = %if.end15
  %29 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5275
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %29, i32 0, i32 0, !dbg !5276
  %30 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !5276
  store %struct.bNode* %30, %struct.bNode** %node, align 8, !dbg !5277
  br label %for.cond, !dbg !5278, !llvm.loop !5279

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5281
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_preview_remove_unused(%struct.bNodeTree* %ntree) #0 !dbg !5282 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !5283, metadata !DIExpression()), !dbg !5284
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5285
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !5285
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5287

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5288
  %previews = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 24, !dbg !5289
  %2 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews, align 8, !dbg !5289
  %tobool1 = icmp ne %struct.bNodeInstanceHash* %2, null, !dbg !5288
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5290

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !5291

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5292
  %previews2 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 24, !dbg !5293
  %4 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews2, align 8, !dbg !5293
  call void @BKE_node_instance_hash_clear_tags(%struct.bNodeInstanceHash* %4), !dbg !5294
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5295
  %previews3 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 24, !dbg !5296
  %6 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews3, align 8, !dbg !5296
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5297
  %8 = load i32, i32* getelementptr inbounds (%struct.bNodeInstanceKey, %struct.bNodeInstanceKey* @NODE_INSTANCE_KEY_BASE, i32 0, i32 0), align 4, !dbg !5298
  call void @node_preview_tag_used_recursive(%struct.bNodeInstanceHash* %6, %struct.bNodeTree* %7, i32 %8), !dbg !5298
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5299
  %previews4 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 24, !dbg !5300
  %10 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews4, align 8, !dbg !5300
  call void @BKE_node_instance_hash_remove_untagged(%struct.bNodeInstanceHash* %10, void (i8*)* bitcast (void (%struct.bNodePreview*)* @BKE_node_preview_free to void (i8*)*)), !dbg !5301
  br label %return, !dbg !5302

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5302
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_instance_hash_clear_tags(%struct.bNodeInstanceHash* %hash) #0 !dbg !5303 {
entry:
  %hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  %iter = alloca %struct.GHashIterator, align 8
  %value = alloca %struct.bNodeInstanceHashEntry*, align 8
  store %struct.bNodeInstanceHash* %hash, %struct.bNodeInstanceHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash.addr, metadata !5306, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.declare(metadata %struct.GHashIterator* %iter, metadata !5308, metadata !DIExpression()), !dbg !5309
  %0 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !5310
  call void @BKE_node_instance_hash_iterator_init(%struct.GHashIterator* %iter, %struct.bNodeInstanceHash* %0), !dbg !5310
  br label %for.cond, !dbg !5310

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @BKE_node_instance_hash_iterator_done(%struct.GHashIterator* %iter), !dbg !5312
  %conv = zext i8 %call to i32, !dbg !5312
  %cmp = icmp eq i32 %conv, 0, !dbg !5312
  br i1 %cmp, label %for.body, label %for.end, !dbg !5310

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHashEntry** %value, metadata !5314, metadata !DIExpression()), !dbg !5316
  %call2 = call i8* @BKE_node_instance_hash_iterator_get_value(%struct.GHashIterator* %iter), !dbg !5317
  %1 = bitcast i8* %call2 to %struct.bNodeInstanceHashEntry*, !dbg !5317
  store %struct.bNodeInstanceHashEntry* %1, %struct.bNodeInstanceHashEntry** %value, align 8, !dbg !5316
  %2 = load %struct.bNodeInstanceHashEntry*, %struct.bNodeInstanceHashEntry** %value, align 8, !dbg !5318
  %tag = getelementptr inbounds %struct.bNodeInstanceHashEntry, %struct.bNodeInstanceHashEntry* %2, i32 0, i32 1, !dbg !5319
  store i16 0, i16* %tag, align 4, !dbg !5320
  br label %for.inc, !dbg !5321

for.inc:                                          ; preds = %for.body
  call void @BKE_node_instance_hash_iterator_step(%struct.GHashIterator* %iter), !dbg !5312
  br label %for.cond, !dbg !5312, !llvm.loop !5322

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5324
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_preview_tag_used_recursive(%struct.bNodeInstanceHash* %previews, %struct.bNodeTree* %ntree, i32 %parent_key.coerce) #0 !dbg !5325 {
entry:
  %parent_key = alloca %struct.bNodeInstanceKey, align 4
  %previews.addr = alloca %struct.bNodeInstanceHash*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %key = alloca %struct.bNodeInstanceKey, align 4
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %parent_key, i32 0, i32 0
  store i32 %parent_key.coerce, i32* %coerce.dive, align 4
  store %struct.bNodeInstanceHash* %previews, %struct.bNodeInstanceHash** %previews.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %previews.addr, metadata !5328, metadata !DIExpression()), !dbg !5329
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !5330, metadata !DIExpression()), !dbg !5331
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %parent_key, metadata !5332, metadata !DIExpression()), !dbg !5333
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !5334, metadata !DIExpression()), !dbg !5335
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5336
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !5338
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !5339
  %1 = load i8*, i8** %first, align 8, !dbg !5339
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !5336
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !5340
  br label %for.cond, !dbg !5341

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5342
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !5344
  br i1 %tobool, label %for.body, label %for.end, !dbg !5344

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %key, metadata !5345, metadata !DIExpression()), !dbg !5347
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5348
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5349
  %coerce.dive1 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %parent_key, i32 0, i32 0, !dbg !5350
  %6 = load i32, i32* %coerce.dive1, align 4, !dbg !5350
  %call = call i32 @BKE_node_instance_key(i32 %6, %struct.bNodeTree* %4, %struct.bNode* %5), !dbg !5350
  %coerce.dive2 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5350
  store i32 %call, i32* %coerce.dive2, align 4, !dbg !5350
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5351
  %call3 = call i32 @BKE_node_preview_used(%struct.bNode* %7), !dbg !5353
  %tobool4 = icmp ne i32 %call3, 0, !dbg !5353
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5354

if.then:                                          ; preds = %for.body
  %8 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews.addr, align 8, !dbg !5355
  %coerce.dive5 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5356
  %9 = load i32, i32* %coerce.dive5, align 4, !dbg !5356
  %call6 = call zeroext i8 @BKE_node_instance_hash_tag_key(%struct.bNodeInstanceHash* %8, i32 %9), !dbg !5356
  br label %if.end, !dbg !5356

if.end:                                           ; preds = %if.then, %for.body
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5357
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 8, !dbg !5359
  %11 = load i16, i16* %type, align 4, !dbg !5359
  %conv = sext i16 %11 to i32, !dbg !5357
  %cmp = icmp eq i32 %conv, 2, !dbg !5360
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !5361

land.lhs.true:                                    ; preds = %if.end
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5362
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 20, !dbg !5363
  %13 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !5363
  %tobool8 = icmp ne %struct.ID* %13, null, !dbg !5362
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !5364

if.then9:                                         ; preds = %land.lhs.true
  %14 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews.addr, align 8, !dbg !5365
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5366
  %id10 = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 20, !dbg !5367
  %16 = load %struct.ID*, %struct.ID** %id10, align 8, !dbg !5367
  %17 = bitcast %struct.ID* %16 to %struct.bNodeTree*, !dbg !5368
  %coerce.dive11 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5369
  %18 = load i32, i32* %coerce.dive11, align 4, !dbg !5369
  call void @node_preview_tag_used_recursive(%struct.bNodeInstanceHash* %14, %struct.bNodeTree* %17, i32 %18), !dbg !5369
  br label %if.end12, !dbg !5369

if.end12:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  br label %for.inc, !dbg !5370

for.inc:                                          ; preds = %if.end12
  %19 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !5371
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %19, i32 0, i32 0, !dbg !5372
  %20 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !5372
  store %struct.bNode* %20, %struct.bNode** %node, align 8, !dbg !5373
  br label %for.cond, !dbg !5374, !llvm.loop !5375

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5377
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_instance_hash_remove_untagged(%struct.bNodeInstanceHash* %hash, void (i8*)* %valfreefp) #0 !dbg !5378 {
entry:
  %hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  %valfreefp.addr = alloca void (i8*)*, align 8
  %untagged = alloca %struct.bNodeInstanceKey*, align 8
  %iter = alloca %struct.GHashIterator, align 8
  %num_untagged = alloca i32, align 4
  %i = alloca i32, align 4
  %value = alloca %struct.bNodeInstanceHashEntry*, align 8
  %tmp = alloca %struct.bNodeInstanceKey, align 4
  store %struct.bNodeInstanceHash* %hash, %struct.bNodeInstanceHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash.addr, metadata !5381, metadata !DIExpression()), !dbg !5382
  store void (i8*)* %valfreefp, void (i8*)** %valfreefp.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %valfreefp.addr, metadata !5383, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey** %untagged, metadata !5385, metadata !DIExpression()), !dbg !5386
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5387
  %1 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !5388
  %call = call i32 @BKE_node_instance_hash_size(%struct.bNodeInstanceHash* %1), !dbg !5389
  %conv = sext i32 %call to i64, !dbg !5389
  %mul = mul i64 4, %conv, !dbg !5390
  %call1 = call i8* %0(i64 %mul, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.54, i64 0, i64 0)), !dbg !5387
  %2 = bitcast i8* %call1 to %struct.bNodeInstanceKey*, !dbg !5387
  store %struct.bNodeInstanceKey* %2, %struct.bNodeInstanceKey** %untagged, align 8, !dbg !5386
  call void @llvm.dbg.declare(metadata %struct.GHashIterator* %iter, metadata !5391, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.declare(metadata i32* %num_untagged, metadata !5393, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5395, metadata !DIExpression()), !dbg !5396
  store i32 0, i32* %num_untagged, align 4, !dbg !5397
  %3 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !5398
  call void @BKE_node_instance_hash_iterator_init(%struct.GHashIterator* %iter, %struct.bNodeInstanceHash* %3), !dbg !5398
  br label %for.cond, !dbg !5398

for.cond:                                         ; preds = %for.inc, %entry
  %call2 = call zeroext i8 @BKE_node_instance_hash_iterator_done(%struct.GHashIterator* %iter), !dbg !5400
  %conv3 = zext i8 %call2 to i32, !dbg !5400
  %cmp = icmp eq i32 %conv3, 0, !dbg !5400
  br i1 %cmp, label %for.body, label %for.end, !dbg !5398

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHashEntry** %value, metadata !5402, metadata !DIExpression()), !dbg !5404
  %call5 = call i8* @BKE_node_instance_hash_iterator_get_value(%struct.GHashIterator* %iter), !dbg !5405
  %4 = bitcast i8* %call5 to %struct.bNodeInstanceHashEntry*, !dbg !5405
  store %struct.bNodeInstanceHashEntry* %4, %struct.bNodeInstanceHashEntry** %value, align 8, !dbg !5404
  %5 = load %struct.bNodeInstanceHashEntry*, %struct.bNodeInstanceHashEntry** %value, align 8, !dbg !5406
  %tag = getelementptr inbounds %struct.bNodeInstanceHashEntry, %struct.bNodeInstanceHashEntry* %5, i32 0, i32 1, !dbg !5408
  %6 = load i16, i16* %tag, align 4, !dbg !5408
  %tobool = icmp ne i16 %6, 0, !dbg !5406
  br i1 %tobool, label %if.end, label %if.then, !dbg !5409

if.then:                                          ; preds = %for.body
  %7 = load %struct.bNodeInstanceKey*, %struct.bNodeInstanceKey** %untagged, align 8, !dbg !5410
  %8 = load i32, i32* %num_untagged, align 4, !dbg !5411
  %inc = add nsw i32 %8, 1, !dbg !5411
  store i32 %inc, i32* %num_untagged, align 4, !dbg !5411
  %idxprom = sext i32 %8 to i64, !dbg !5410
  %arrayidx = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %7, i64 %idxprom, !dbg !5410
  %call6 = call i32 @BKE_node_instance_hash_iterator_get_key(%struct.GHashIterator* %iter), !dbg !5412
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %tmp, i32 0, i32 0, !dbg !5412
  store i32 %call6, i32* %coerce.dive, align 4, !dbg !5412
  %9 = bitcast %struct.bNodeInstanceKey* %arrayidx to i8*, !dbg !5412
  %10 = bitcast %struct.bNodeInstanceKey* %tmp to i8*, !dbg !5412
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 4, i1 false), !dbg !5412
  br label %if.end, !dbg !5410

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5413

for.inc:                                          ; preds = %if.end
  call void @BKE_node_instance_hash_iterator_step(%struct.GHashIterator* %iter), !dbg !5400
  br label %for.cond, !dbg !5400, !llvm.loop !5414

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5416
  br label %for.cond7, !dbg !5418

for.cond7:                                        ; preds = %for.inc15, %for.end
  %11 = load i32, i32* %i, align 4, !dbg !5419
  %12 = load i32, i32* %num_untagged, align 4, !dbg !5421
  %cmp8 = icmp slt i32 %11, %12, !dbg !5422
  br i1 %cmp8, label %for.body10, label %for.end17, !dbg !5423

for.body10:                                       ; preds = %for.cond7
  %13 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !5424
  %14 = load %struct.bNodeInstanceKey*, %struct.bNodeInstanceKey** %untagged, align 8, !dbg !5426
  %15 = load i32, i32* %i, align 4, !dbg !5427
  %idxprom11 = sext i32 %15 to i64, !dbg !5426
  %arrayidx12 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %14, i64 %idxprom11, !dbg !5426
  %16 = load void (i8*)*, void (i8*)** %valfreefp.addr, align 8, !dbg !5428
  %coerce.dive13 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %arrayidx12, i32 0, i32 0, !dbg !5429
  %17 = load i32, i32* %coerce.dive13, align 4, !dbg !5429
  %call14 = call i32 @BKE_node_instance_hash_remove(%struct.bNodeInstanceHash* %13, i32 %17, void (i8*)* %16), !dbg !5429
  br label %for.inc15, !dbg !5430

for.inc15:                                        ; preds = %for.body10
  %18 = load i32, i32* %i, align 4, !dbg !5431
  %inc16 = add nsw i32 %18, 1, !dbg !5431
  store i32 %inc16, i32* %i, align 4, !dbg !5431
  br label %for.cond7, !dbg !5432, !llvm.loop !5433

for.end17:                                        ; preds = %for.cond7
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5435
  %20 = load %struct.bNodeInstanceKey*, %struct.bNodeInstanceKey** %untagged, align 8, !dbg !5436
  %21 = bitcast %struct.bNodeInstanceKey* %20 to i8*, !dbg !5436
  call void %19(i8* %21), !dbg !5435
  ret void, !dbg !5437
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_preview_free_tree(%struct.bNodeTree* %ntree) #0 !dbg !5438 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !5439, metadata !DIExpression()), !dbg !5440
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5441
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !5441
  br i1 %tobool, label %if.end, label %if.then, !dbg !5443

if.then:                                          ; preds = %entry
  br label %if.end5, !dbg !5444

if.end:                                           ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5445
  %previews = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 24, !dbg !5447
  %2 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews, align 8, !dbg !5447
  %tobool1 = icmp ne %struct.bNodeInstanceHash* %2, null, !dbg !5445
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !5448

if.then2:                                         ; preds = %if.end
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5449
  %previews3 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 24, !dbg !5451
  %4 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews3, align 8, !dbg !5451
  call void @BKE_node_instance_hash_free(%struct.bNodeInstanceHash* %4, void (i8*)* bitcast (void (%struct.bNodePreview*)* @BKE_node_preview_free to void (i8*)*)), !dbg !5452
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5453
  %previews4 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 24, !dbg !5454
  store %struct.bNodeInstanceHash* null, %struct.bNodeInstanceHash** %previews4, align 8, !dbg !5455
  br label %if.end5, !dbg !5456

if.end5:                                          ; preds = %if.then, %if.then2, %if.end
  ret void, !dbg !5457
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_instance_hash_free(%struct.bNodeInstanceHash* %hash, void (i8*)* %valfreefp) #0 !dbg !5458 {
entry:
  %hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  %valfreefp.addr = alloca void (i8*)*, align 8
  store %struct.bNodeInstanceHash* %hash, %struct.bNodeInstanceHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash.addr, metadata !5459, metadata !DIExpression()), !dbg !5460
  store void (i8*)* %valfreefp, void (i8*)** %valfreefp.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %valfreefp.addr, metadata !5461, metadata !DIExpression()), !dbg !5462
  %0 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !5463
  %ghash = getelementptr inbounds %struct.bNodeInstanceHash, %struct.bNodeInstanceHash* %0, i32 0, i32 0, !dbg !5464
  %1 = load %struct.GHash*, %struct.GHash** %ghash, align 8, !dbg !5464
  %2 = load void (i8*)*, void (i8*)** %valfreefp.addr, align 8, !dbg !5465
  call void @BLI_ghash_free(%struct.GHash* %1, void (i8*)* null, void (i8*)* %2), !dbg !5466
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5467
  %4 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !5468
  %5 = bitcast %struct.bNodeInstanceHash* %4 to i8*, !dbg !5468
  call void %3(i8* %5), !dbg !5467
  ret void, !dbg !5469
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_preview_clear(%struct.bNodePreview* %preview) #0 !dbg !5470 {
entry:
  %preview.addr = alloca %struct.bNodePreview*, align 8
  store %struct.bNodePreview* %preview, %struct.bNodePreview** %preview.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %preview.addr, metadata !5471, metadata !DIExpression()), !dbg !5472
  %0 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5473
  %tobool = icmp ne %struct.bNodePreview* %0, null, !dbg !5473
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5475

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5476
  %rect = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %1, i32 0, i32 1, !dbg !5477
  %2 = load i8*, i8** %rect, align 8, !dbg !5477
  %tobool1 = icmp ne i8* %2, null, !dbg !5476
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5478

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5479
  %rect2 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %3, i32 0, i32 1, !dbg !5480
  %4 = load i8*, i8** %rect2, align 8, !dbg !5480
  %5 = load i64 (i8*)*, i64 (i8*)** @MEM_allocN_len, align 8, !dbg !5481
  %6 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5482
  %rect3 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %6, i32 0, i32 1, !dbg !5483
  %7 = load i8*, i8** %rect3, align 8, !dbg !5483
  %call = call i64 %5(i8* %7), !dbg !5481
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 %call, i1 false), !dbg !5484
  br label %if.end, !dbg !5484

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5485
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_preview_clear_tree(%struct.bNodeTree* %ntree) #0 !dbg !5486 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %iter = alloca %struct.GHashIterator, align 8
  %preview = alloca %struct.bNodePreview*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !5487, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.declare(metadata %struct.GHashIterator* %iter, metadata !5489, metadata !DIExpression()), !dbg !5490
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5491
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !5491
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5493

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5494
  %previews = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 24, !dbg !5495
  %2 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews, align 8, !dbg !5495
  %tobool1 = icmp ne %struct.bNodeInstanceHash* %2, null, !dbg !5494
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5496

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end, !dbg !5497

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5498
  %previews2 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 24, !dbg !5498
  %4 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews2, align 8, !dbg !5498
  call void @BKE_node_instance_hash_iterator_init(%struct.GHashIterator* %iter, %struct.bNodeInstanceHash* %4), !dbg !5498
  br label %for.cond, !dbg !5498

for.cond:                                         ; preds = %for.inc, %if.end
  %call = call zeroext i8 @BKE_node_instance_hash_iterator_done(%struct.GHashIterator* %iter), !dbg !5500
  %conv = zext i8 %call to i32, !dbg !5500
  %cmp = icmp eq i32 %conv, 0, !dbg !5500
  br i1 %cmp, label %for.body, label %for.end, !dbg !5498

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %preview, metadata !5502, metadata !DIExpression()), !dbg !5504
  %call4 = call i8* @BKE_node_instance_hash_iterator_get_value(%struct.GHashIterator* %iter), !dbg !5505
  %5 = bitcast i8* %call4 to %struct.bNodePreview*, !dbg !5505
  store %struct.bNodePreview* %5, %struct.bNodePreview** %preview, align 8, !dbg !5504
  %6 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5506
  call void @BKE_node_preview_clear(%struct.bNodePreview* %6), !dbg !5507
  br label %for.inc, !dbg !5508

for.inc:                                          ; preds = %for.body
  call void @BKE_node_instance_hash_iterator_step(%struct.GHashIterator* %iter), !dbg !5500
  br label %for.cond, !dbg !5500, !llvm.loop !5509

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !5511
}

; Function Attrs: noinline nounwind uwtable
define internal void @BKE_node_instance_hash_iterator_init(%struct.GHashIterator* %iter, %struct.bNodeInstanceHash* %hash) #0 !dbg !5512 {
entry:
  %iter.addr = alloca %struct.GHashIterator*, align 8
  %hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  store %struct.GHashIterator* %iter, %struct.GHashIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %iter.addr, metadata !5516, metadata !DIExpression()), !dbg !5517
  store %struct.bNodeInstanceHash* %hash, %struct.bNodeInstanceHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash.addr, metadata !5518, metadata !DIExpression()), !dbg !5519
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %iter.addr, align 8, !dbg !5520
  %1 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !5521
  %ghash = getelementptr inbounds %struct.bNodeInstanceHash, %struct.bNodeInstanceHash* %1, i32 0, i32 0, !dbg !5522
  %2 = load %struct.GHash*, %struct.GHash** %ghash, align 8, !dbg !5522
  call void @BLI_ghashIterator_init(%struct.GHashIterator* %0, %struct.GHash* %2), !dbg !5523
  ret void, !dbg !5524
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BKE_node_instance_hash_iterator_done(%struct.GHashIterator* %iter) #0 !dbg !5525 {
entry:
  %iter.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %iter, %struct.GHashIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %iter.addr, metadata !5528, metadata !DIExpression()), !dbg !5529
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %iter.addr, align 8, !dbg !5530
  %call = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %0), !dbg !5531
  ret i8 %call, !dbg !5532
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BKE_node_instance_hash_iterator_get_value(%struct.GHashIterator* %iter) #0 !dbg !5533 {
entry:
  %iter.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %iter, %struct.GHashIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %iter.addr, metadata !5536, metadata !DIExpression()), !dbg !5537
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %iter.addr, align 8, !dbg !5538
  %call = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %0), !dbg !5539
  ret i8* %call, !dbg !5540
}

; Function Attrs: noinline nounwind uwtable
define internal void @BKE_node_instance_hash_iterator_step(%struct.GHashIterator* %iter) #0 !dbg !5541 {
entry:
  %iter.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %iter, %struct.GHashIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %iter.addr, metadata !5544, metadata !DIExpression()), !dbg !5545
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %iter.addr, align 8, !dbg !5546
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %0), !dbg !5547
  ret void, !dbg !5548
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_preview_sync_tree(%struct.bNodeTree* %to_ntree, %struct.bNodeTree* %from_ntree) #0 !dbg !5549 {
entry:
  %to_ntree.addr = alloca %struct.bNodeTree*, align 8
  %from_ntree.addr = alloca %struct.bNodeTree*, align 8
  %from_previews = alloca %struct.bNodeInstanceHash*, align 8
  %to_previews = alloca %struct.bNodeInstanceHash*, align 8
  %iter = alloca %struct.GHashIterator, align 8
  %key = alloca %struct.bNodeInstanceKey, align 4
  %from = alloca %struct.bNodePreview*, align 8
  %to = alloca %struct.bNodePreview*, align 8
  store %struct.bNodeTree* %to_ntree, %struct.bNodeTree** %to_ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %to_ntree.addr, metadata !5552, metadata !DIExpression()), !dbg !5553
  store %struct.bNodeTree* %from_ntree, %struct.bNodeTree** %from_ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %from_ntree.addr, metadata !5554, metadata !DIExpression()), !dbg !5555
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %from_previews, metadata !5556, metadata !DIExpression()), !dbg !5557
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %from_ntree.addr, align 8, !dbg !5558
  %previews = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 24, !dbg !5559
  %1 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews, align 8, !dbg !5559
  store %struct.bNodeInstanceHash* %1, %struct.bNodeInstanceHash** %from_previews, align 8, !dbg !5557
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %to_previews, metadata !5560, metadata !DIExpression()), !dbg !5561
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %to_ntree.addr, align 8, !dbg !5562
  %previews1 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 24, !dbg !5563
  %3 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews1, align 8, !dbg !5563
  store %struct.bNodeInstanceHash* %3, %struct.bNodeInstanceHash** %to_previews, align 8, !dbg !5561
  call void @llvm.dbg.declare(metadata %struct.GHashIterator* %iter, metadata !5564, metadata !DIExpression()), !dbg !5565
  %4 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %from_previews, align 8, !dbg !5566
  %tobool = icmp ne %struct.bNodeInstanceHash* %4, null, !dbg !5566
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5568

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %to_previews, align 8, !dbg !5569
  %tobool2 = icmp ne %struct.bNodeInstanceHash* %5, null, !dbg !5569
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5570

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end, !dbg !5571

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %from_previews, align 8, !dbg !5572
  call void @BKE_node_instance_hash_iterator_init(%struct.GHashIterator* %iter, %struct.bNodeInstanceHash* %6), !dbg !5572
  br label %for.cond, !dbg !5572

for.cond:                                         ; preds = %for.inc, %if.end
  %call = call zeroext i8 @BKE_node_instance_hash_iterator_done(%struct.GHashIterator* %iter), !dbg !5574
  %conv = zext i8 %call to i32, !dbg !5574
  %cmp = icmp eq i32 %conv, 0, !dbg !5574
  br i1 %cmp, label %for.body, label %for.end, !dbg !5572

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %key, metadata !5576, metadata !DIExpression()), !dbg !5578
  %call4 = call i32 @BKE_node_instance_hash_iterator_get_key(%struct.GHashIterator* %iter), !dbg !5579
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5579
  store i32 %call4, i32* %coerce.dive, align 4, !dbg !5579
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %from, metadata !5580, metadata !DIExpression()), !dbg !5581
  %call5 = call i8* @BKE_node_instance_hash_iterator_get_value(%struct.GHashIterator* %iter), !dbg !5582
  %7 = bitcast i8* %call5 to %struct.bNodePreview*, !dbg !5582
  store %struct.bNodePreview* %7, %struct.bNodePreview** %from, align 8, !dbg !5581
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %to, metadata !5583, metadata !DIExpression()), !dbg !5584
  %8 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %to_previews, align 8, !dbg !5585
  %coerce.dive6 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5586
  %9 = load i32, i32* %coerce.dive6, align 4, !dbg !5586
  %call7 = call i8* @BKE_node_instance_hash_lookup(%struct.bNodeInstanceHash* %8, i32 %9), !dbg !5586
  %10 = bitcast i8* %call7 to %struct.bNodePreview*, !dbg !5586
  store %struct.bNodePreview* %10, %struct.bNodePreview** %to, align 8, !dbg !5584
  %11 = load %struct.bNodePreview*, %struct.bNodePreview** %from, align 8, !dbg !5587
  %tobool8 = icmp ne %struct.bNodePreview* %11, null, !dbg !5587
  br i1 %tobool8, label %land.lhs.true, label %if.end11, !dbg !5589

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.bNodePreview*, %struct.bNodePreview** %to, align 8, !dbg !5590
  %tobool9 = icmp ne %struct.bNodePreview* %12, null, !dbg !5590
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !5591

if.then10:                                        ; preds = %land.lhs.true
  %13 = load %struct.bNodePreview*, %struct.bNodePreview** %to, align 8, !dbg !5592
  %14 = load %struct.bNodePreview*, %struct.bNodePreview** %from, align 8, !dbg !5593
  call void @node_preview_sync(%struct.bNodePreview* %13, %struct.bNodePreview* %14), !dbg !5594
  br label %if.end11, !dbg !5594

if.end11:                                         ; preds = %if.then10, %land.lhs.true, %for.body
  br label %for.inc, !dbg !5595

for.inc:                                          ; preds = %if.end11
  call void @BKE_node_instance_hash_iterator_step(%struct.GHashIterator* %iter), !dbg !5574
  br label %for.cond, !dbg !5574, !llvm.loop !5596

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !5598
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BKE_node_instance_hash_iterator_get_key(%struct.GHashIterator* %iter) #0 !dbg !5599 {
entry:
  %retval = alloca %struct.bNodeInstanceKey, align 4
  %iter.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %iter, %struct.GHashIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %iter.addr, metadata !5602, metadata !DIExpression()), !dbg !5603
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %iter.addr, align 8, !dbg !5604
  %call = call i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %0), !dbg !5605
  %1 = bitcast i8* %call to %struct.bNodeInstanceKey*, !dbg !5606
  %2 = bitcast %struct.bNodeInstanceKey* %retval to i8*, !dbg !5607
  %3 = bitcast %struct.bNodeInstanceKey* %1 to i8*, !dbg !5607
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false), !dbg !5607
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %retval, i32 0, i32 0, !dbg !5608
  %4 = load i32, i32* %coerce.dive, align 4, !dbg !5608
  ret i32 %4, !dbg !5608
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_preview_sync(%struct.bNodePreview* %to, %struct.bNodePreview* %from) #0 !dbg !5609 {
entry:
  %to.addr = alloca %struct.bNodePreview*, align 8
  %from.addr = alloca %struct.bNodePreview*, align 8
  %xsize = alloca i32, align 4
  %ysize = alloca i32, align 4
  store %struct.bNodePreview* %to, %struct.bNodePreview** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %to.addr, metadata !5612, metadata !DIExpression()), !dbg !5613
  store %struct.bNodePreview* %from, %struct.bNodePreview** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %from.addr, metadata !5614, metadata !DIExpression()), !dbg !5615
  %0 = load %struct.bNodePreview*, %struct.bNodePreview** %to.addr, align 8, !dbg !5616
  %rect = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %0, i32 0, i32 1, !dbg !5618
  %1 = load i8*, i8** %rect, align 8, !dbg !5618
  %tobool = icmp ne i8* %1, null, !dbg !5616
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5619

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.bNodePreview*, %struct.bNodePreview** %from.addr, align 8, !dbg !5620
  %rect1 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %2, i32 0, i32 1, !dbg !5621
  %3 = load i8*, i8** %rect1, align 8, !dbg !5621
  %tobool2 = icmp ne i8* %3, null, !dbg !5620
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5622

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %xsize, metadata !5623, metadata !DIExpression()), !dbg !5625
  %4 = load %struct.bNodePreview*, %struct.bNodePreview** %to.addr, align 8, !dbg !5626
  %xsize3 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %4, i32 0, i32 2, !dbg !5627
  %5 = load i16, i16* %xsize3, align 8, !dbg !5627
  %conv = sext i16 %5 to i32, !dbg !5626
  store i32 %conv, i32* %xsize, align 4, !dbg !5625
  call void @llvm.dbg.declare(metadata i32* %ysize, metadata !5628, metadata !DIExpression()), !dbg !5629
  %6 = load %struct.bNodePreview*, %struct.bNodePreview** %to.addr, align 8, !dbg !5630
  %ysize4 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %6, i32 0, i32 3, !dbg !5631
  %7 = load i16, i16* %ysize4, align 2, !dbg !5631
  %conv5 = sext i16 %7 to i32, !dbg !5630
  store i32 %conv5, i32* %ysize, align 4, !dbg !5629
  %8 = load %struct.bNodePreview*, %struct.bNodePreview** %to.addr, align 8, !dbg !5632
  %rect6 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %8, i32 0, i32 1, !dbg !5633
  %9 = load i8*, i8** %rect6, align 8, !dbg !5633
  %10 = load %struct.bNodePreview*, %struct.bNodePreview** %from.addr, align 8, !dbg !5634
  %rect7 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %10, i32 0, i32 1, !dbg !5635
  %11 = load i8*, i8** %rect7, align 8, !dbg !5635
  %12 = load i32, i32* %xsize, align 4, !dbg !5636
  %mul = mul nsw i32 4, %12, !dbg !5637
  %conv8 = sext i32 %mul to i64, !dbg !5638
  %13 = load i32, i32* %xsize, align 4, !dbg !5639
  %14 = load i32, i32* %ysize, align 4, !dbg !5640
  %mul9 = mul nsw i32 %13, %14, !dbg !5641
  %conv10 = sext i32 %mul9 to i64, !dbg !5639
  %mul11 = mul i64 %conv10, 1, !dbg !5642
  %mul12 = mul i64 %mul11, 4, !dbg !5643
  %add = add i64 %conv8, %mul12, !dbg !5644
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 %11, i64 %add, i1 false), !dbg !5645
  br label %if.end, !dbg !5646

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5647
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_preview_merge_tree(%struct.bNodeTree* %to_ntree, %struct.bNodeTree* %from_ntree, i8 zeroext %remove_old) #0 !dbg !5648 {
entry:
  %to_ntree.addr = alloca %struct.bNodeTree*, align 8
  %from_ntree.addr = alloca %struct.bNodeTree*, align 8
  %remove_old.addr = alloca i8, align 1
  %iter = alloca %struct.GHashIterator, align 8
  %key = alloca %struct.bNodeInstanceKey, align 4
  %preview = alloca %struct.bNodePreview*, align 8
  store %struct.bNodeTree* %to_ntree, %struct.bNodeTree** %to_ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %to_ntree.addr, metadata !5651, metadata !DIExpression()), !dbg !5652
  store %struct.bNodeTree* %from_ntree, %struct.bNodeTree** %from_ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %from_ntree.addr, metadata !5653, metadata !DIExpression()), !dbg !5654
  store i8 %remove_old, i8* %remove_old.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %remove_old.addr, metadata !5655, metadata !DIExpression()), !dbg !5656
  %0 = load i8, i8* %remove_old.addr, align 1, !dbg !5657
  %conv = zext i8 %0 to i32, !dbg !5657
  %tobool = icmp ne i32 %conv, 0, !dbg !5657
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5659

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %to_ntree.addr, align 8, !dbg !5660
  %previews = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 24, !dbg !5661
  %2 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews, align 8, !dbg !5661
  %tobool1 = icmp ne %struct.bNodeInstanceHash* %2, null, !dbg !5660
  br i1 %tobool1, label %if.else, label %if.then, !dbg !5662

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %to_ntree.addr, align 8, !dbg !5663
  %previews2 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 24, !dbg !5666
  %4 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews2, align 8, !dbg !5666
  %tobool3 = icmp ne %struct.bNodeInstanceHash* %4, null, !dbg !5663
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !5667

if.then4:                                         ; preds = %if.then
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %to_ntree.addr, align 8, !dbg !5668
  %previews5 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 24, !dbg !5669
  %6 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews5, align 8, !dbg !5669
  call void @BKE_node_instance_hash_free(%struct.bNodeInstanceHash* %6, void (i8*)* bitcast (void (%struct.bNodePreview*)* @BKE_node_preview_free to void (i8*)*)), !dbg !5670
  br label %if.end, !dbg !5670

if.end:                                           ; preds = %if.then4, %if.then
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %from_ntree.addr, align 8, !dbg !5671
  %previews6 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 24, !dbg !5672
  %8 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews6, align 8, !dbg !5672
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %to_ntree.addr, align 8, !dbg !5673
  %previews7 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 24, !dbg !5674
  store %struct.bNodeInstanceHash* %8, %struct.bNodeInstanceHash** %previews7, align 8, !dbg !5675
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %from_ntree.addr, align 8, !dbg !5676
  %previews8 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %10, i32 0, i32 24, !dbg !5677
  store %struct.bNodeInstanceHash* null, %struct.bNodeInstanceHash** %previews8, align 8, !dbg !5678
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %to_ntree.addr, align 8, !dbg !5679
  call void @BKE_node_preview_remove_unused(%struct.bNodeTree* %11), !dbg !5680
  br label %if.end25, !dbg !5681

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.GHashIterator* %iter, metadata !5682, metadata !DIExpression()), !dbg !5684
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %from_ntree.addr, align 8, !dbg !5685
  %previews9 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %12, i32 0, i32 24, !dbg !5687
  %13 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews9, align 8, !dbg !5687
  %tobool10 = icmp ne %struct.bNodeInstanceHash* %13, null, !dbg !5685
  br i1 %tobool10, label %if.then11, label %if.end24, !dbg !5688

if.then11:                                        ; preds = %if.else
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %from_ntree.addr, align 8, !dbg !5689
  %previews12 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %14, i32 0, i32 24, !dbg !5689
  %15 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews12, align 8, !dbg !5689
  call void @BKE_node_instance_hash_iterator_init(%struct.GHashIterator* %iter, %struct.bNodeInstanceHash* %15), !dbg !5689
  br label %for.cond, !dbg !5689

for.cond:                                         ; preds = %for.inc, %if.then11
  %call = call zeroext i8 @BKE_node_instance_hash_iterator_done(%struct.GHashIterator* %iter), !dbg !5692
  %conv13 = zext i8 %call to i32, !dbg !5692
  %cmp = icmp eq i32 %conv13, 0, !dbg !5692
  br i1 %cmp, label %for.body, label %for.end, !dbg !5689

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %key, metadata !5694, metadata !DIExpression()), !dbg !5696
  %call15 = call i32 @BKE_node_instance_hash_iterator_get_key(%struct.GHashIterator* %iter), !dbg !5697
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5697
  store i32 %call15, i32* %coerce.dive, align 4, !dbg !5697
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %preview, metadata !5698, metadata !DIExpression()), !dbg !5699
  %call16 = call i8* @BKE_node_instance_hash_iterator_get_value(%struct.GHashIterator* %iter), !dbg !5700
  %16 = bitcast i8* %call16 to %struct.bNodePreview*, !dbg !5700
  store %struct.bNodePreview* %16, %struct.bNodePreview** %preview, align 8, !dbg !5699
  %17 = load %struct.bNodeTree*, %struct.bNodeTree** %to_ntree.addr, align 8, !dbg !5701
  %previews17 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %17, i32 0, i32 24, !dbg !5702
  %18 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews17, align 8, !dbg !5702
  %coerce.dive18 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5703
  %19 = load i32, i32* %coerce.dive18, align 4, !dbg !5703
  %call19 = call i32 @BKE_node_instance_hash_remove(%struct.bNodeInstanceHash* %18, i32 %19, void (i8*)* bitcast (void (%struct.bNodePreview*)* @BKE_node_preview_free to void (i8*)*)), !dbg !5703
  %20 = load %struct.bNodeTree*, %struct.bNodeTree** %to_ntree.addr, align 8, !dbg !5704
  %previews20 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %20, i32 0, i32 24, !dbg !5705
  %21 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews20, align 8, !dbg !5705
  %22 = load %struct.bNodePreview*, %struct.bNodePreview** %preview, align 8, !dbg !5706
  %23 = bitcast %struct.bNodePreview* %22 to i8*, !dbg !5706
  %coerce.dive21 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !5707
  %24 = load i32, i32* %coerce.dive21, align 4, !dbg !5707
  call void @BKE_node_instance_hash_insert(%struct.bNodeInstanceHash* %21, i32 %24, i8* %23), !dbg !5707
  br label %for.inc, !dbg !5708

for.inc:                                          ; preds = %for.body
  call void @BKE_node_instance_hash_iterator_step(%struct.GHashIterator* %iter), !dbg !5692
  br label %for.cond, !dbg !5692, !llvm.loop !5709

for.end:                                          ; preds = %for.cond
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %from_ntree.addr, align 8, !dbg !5711
  %previews22 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %25, i32 0, i32 24, !dbg !5712
  %26 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews22, align 8, !dbg !5712
  call void @BKE_node_instance_hash_free(%struct.bNodeInstanceHash* %26, void (i8*)* null), !dbg !5713
  %27 = load %struct.bNodeTree*, %struct.bNodeTree** %from_ntree.addr, align 8, !dbg !5714
  %previews23 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %27, i32 0, i32 24, !dbg !5715
  store %struct.bNodeInstanceHash* null, %struct.bNodeInstanceHash** %previews23, align 8, !dbg !5716
  br label %if.end24, !dbg !5717

if.end24:                                         ; preds = %for.end, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.end
  ret void, !dbg !5718
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_node_instance_hash_remove(%struct.bNodeInstanceHash* %hash, i32 %key.coerce, void (i8*)* %valfreefp) #0 !dbg !5719 {
entry:
  %key = alloca %struct.bNodeInstanceKey, align 4
  %hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  %valfreefp.addr = alloca void (i8*)*, align 8
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0
  store i32 %key.coerce, i32* %coerce.dive, align 4
  store %struct.bNodeInstanceHash* %hash, %struct.bNodeInstanceHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash.addr, metadata !5722, metadata !DIExpression()), !dbg !5723
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %key, metadata !5724, metadata !DIExpression()), !dbg !5725
  store void (i8*)* %valfreefp, void (i8*)** %valfreefp.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %valfreefp.addr, metadata !5726, metadata !DIExpression()), !dbg !5727
  %0 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !5728
  %ghash = getelementptr inbounds %struct.bNodeInstanceHash, %struct.bNodeInstanceHash* %0, i32 0, i32 0, !dbg !5729
  %1 = load %struct.GHash*, %struct.GHash** %ghash, align 8, !dbg !5729
  %2 = bitcast %struct.bNodeInstanceKey* %key to i8*, !dbg !5730
  %3 = load void (i8*)*, void (i8*)** %valfreefp.addr, align 8, !dbg !5731
  %call = call zeroext i8 @BLI_ghash_remove(%struct.GHash* %1, i8* %2, void (i8*)* null, void (i8*)* %3), !dbg !5732
  %conv = zext i8 %call to i32, !dbg !5732
  ret i32 %conv, !dbg !5733
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_preview_set_pixel(%struct.bNodePreview* %preview, float* %col, i32 %x, i32 %y, i8 zeroext %do_manage) #0 !dbg !5734 {
entry:
  %preview.addr = alloca %struct.bNodePreview*, align 8
  %col.addr = alloca float*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %do_manage.addr = alloca i8, align 1
  %tar = alloca i8*, align 8
  store %struct.bNodePreview* %preview, %struct.bNodePreview** %preview.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodePreview** %preview.addr, metadata !5739, metadata !DIExpression()), !dbg !5740
  store float* %col, float** %col.addr, align 8
  call void @llvm.dbg.declare(metadata float** %col.addr, metadata !5741, metadata !DIExpression()), !dbg !5742
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5743, metadata !DIExpression()), !dbg !5744
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !5745, metadata !DIExpression()), !dbg !5746
  store i8 %do_manage, i8* %do_manage.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_manage.addr, metadata !5747, metadata !DIExpression()), !dbg !5748
  %0 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5749
  %tobool = icmp ne %struct.bNodePreview* %0, null, !dbg !5749
  br i1 %tobool, label %if.then, label %if.end17, !dbg !5751

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %x.addr, align 4, !dbg !5752
  %cmp = icmp sge i32 %1, 0, !dbg !5755
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !5756

land.lhs.true:                                    ; preds = %if.then
  %2 = load i32, i32* %y.addr, align 4, !dbg !5757
  %cmp1 = icmp sge i32 %2, 0, !dbg !5758
  br i1 %cmp1, label %if.then2, label %if.end16, !dbg !5759

if.then2:                                         ; preds = %land.lhs.true
  %3 = load i32, i32* %x.addr, align 4, !dbg !5760
  %4 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5763
  %xsize = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %4, i32 0, i32 2, !dbg !5764
  %5 = load i16, i16* %xsize, align 8, !dbg !5764
  %conv = sext i16 %5 to i32, !dbg !5763
  %cmp3 = icmp slt i32 %3, %conv, !dbg !5765
  br i1 %cmp3, label %land.lhs.true5, label %if.end15, !dbg !5766

land.lhs.true5:                                   ; preds = %if.then2
  %6 = load i32, i32* %y.addr, align 4, !dbg !5767
  %7 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5768
  %ysize = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %7, i32 0, i32 3, !dbg !5769
  %8 = load i16, i16* %ysize, align 2, !dbg !5769
  %conv6 = sext i16 %8 to i32, !dbg !5768
  %cmp7 = icmp slt i32 %6, %conv6, !dbg !5770
  br i1 %cmp7, label %if.then9, label %if.end15, !dbg !5771

if.then9:                                         ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata i8** %tar, metadata !5772, metadata !DIExpression()), !dbg !5774
  %9 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5775
  %rect = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %9, i32 0, i32 1, !dbg !5776
  %10 = load i8*, i8** %rect, align 8, !dbg !5776
  %11 = load %struct.bNodePreview*, %struct.bNodePreview** %preview.addr, align 8, !dbg !5777
  %xsize10 = getelementptr inbounds %struct.bNodePreview, %struct.bNodePreview* %11, i32 0, i32 2, !dbg !5778
  %12 = load i16, i16* %xsize10, align 8, !dbg !5778
  %conv11 = sext i16 %12 to i32, !dbg !5777
  %13 = load i32, i32* %y.addr, align 4, !dbg !5779
  %mul = mul nsw i32 %conv11, %13, !dbg !5780
  %14 = load i32, i32* %x.addr, align 4, !dbg !5781
  %add = add nsw i32 %mul, %14, !dbg !5782
  %mul12 = mul nsw i32 4, %add, !dbg !5783
  %idx.ext = sext i32 %mul12 to i64, !dbg !5784
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !5784
  store i8* %add.ptr, i8** %tar, align 8, !dbg !5774
  %15 = load i8, i8* %do_manage.addr, align 1, !dbg !5785
  %tobool13 = icmp ne i8 %15, 0, !dbg !5785
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !5787

if.then14:                                        ; preds = %if.then9
  %16 = load i8*, i8** %tar, align 8, !dbg !5788
  %17 = load float*, float** %col.addr, align 8, !dbg !5790
  call void @linearrgb_to_srgb_uchar4(i8* %16, float* %17), !dbg !5791
  br label %if.end, !dbg !5792

if.else:                                          ; preds = %if.then9
  %18 = load i8*, i8** %tar, align 8, !dbg !5793
  %19 = load float*, float** %col.addr, align 8, !dbg !5795
  call void @rgba_float_to_uchar(i8* %18, float* %19), !dbg !5796
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then14
  br label %if.end15, !dbg !5797

if.end15:                                         ; preds = %if.end, %land.lhs.true5, %if.then2
  br label %if.end16, !dbg !5798

if.end16:                                         ; preds = %if.end15, %land.lhs.true, %if.then
  br label %if.end17, !dbg !5799

if.end17:                                         ; preds = %if.end16, %entry
  ret void, !dbg !5800
}

; Function Attrs: noinline nounwind uwtable
define internal void @linearrgb_to_srgb_uchar4(i8* %srgb, float* %linear) #0 !dbg !5801 {
entry:
  %srgb.addr = alloca i8*, align 8
  %linear.addr = alloca float*, align 8
  %srgb_f = alloca [4 x float], align 16
  store i8* %srgb, i8** %srgb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srgb.addr, metadata !5805, metadata !DIExpression()), !dbg !5806
  store float* %linear, float** %linear.addr, align 8
  call void @llvm.dbg.declare(metadata float** %linear.addr, metadata !5807, metadata !DIExpression()), !dbg !5808
  call void @llvm.dbg.declare(metadata [4 x float]* %srgb_f, metadata !5809, metadata !DIExpression()), !dbg !5810
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 0, !dbg !5811
  %0 = load float*, float** %linear.addr, align 8, !dbg !5812
  call void @linearrgb_to_srgb_v4(float* %arraydecay, float* %0), !dbg !5813
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 0, !dbg !5814
  %1 = load float, float* %arrayidx, align 16, !dbg !5814
  %cmp = fcmp ole float %1, 0.000000e+00, !dbg !5814
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5814

cond.true:                                        ; preds = %entry
  br label %cond.end6, !dbg !5814

cond.false:                                       ; preds = %entry
  %arrayidx1 = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 0, !dbg !5814
  %2 = load float, float* %arrayidx1, align 16, !dbg !5814
  %cmp2 = fcmp ogt float %2, 0x3FEFEFEFE0000000, !dbg !5814
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !5814

cond.true3:                                       ; preds = %cond.false
  br label %cond.end, !dbg !5814

cond.false4:                                      ; preds = %cond.false
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 0, !dbg !5814
  %3 = load float, float* %arrayidx5, align 16, !dbg !5814
  %mul = fmul float 2.550000e+02, %3, !dbg !5814
  %add = fadd float %mul, 5.000000e-01, !dbg !5814
  br label %cond.end, !dbg !5814

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi float [ 2.550000e+02, %cond.true3 ], [ %add, %cond.false4 ], !dbg !5814
  br label %cond.end6, !dbg !5814

cond.end6:                                        ; preds = %cond.end, %cond.true
  %cond7 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !5814
  %conv = fptoui float %cond7 to i8, !dbg !5814
  %4 = load i8*, i8** %srgb.addr, align 8, !dbg !5814
  %arrayidx8 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !5814
  store i8 %conv, i8* %arrayidx8, align 1, !dbg !5814
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 1, !dbg !5814
  %5 = load float, float* %arrayidx9, align 4, !dbg !5814
  %cmp10 = fcmp ole float %5, 0.000000e+00, !dbg !5814
  br i1 %cmp10, label %cond.true12, label %cond.false13, !dbg !5814

cond.true12:                                      ; preds = %cond.end6
  br label %cond.end24, !dbg !5814

cond.false13:                                     ; preds = %cond.end6
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 1, !dbg !5814
  %6 = load float, float* %arrayidx14, align 4, !dbg !5814
  %cmp15 = fcmp ogt float %6, 0x3FEFEFEFE0000000, !dbg !5814
  br i1 %cmp15, label %cond.true17, label %cond.false18, !dbg !5814

cond.true17:                                      ; preds = %cond.false13
  br label %cond.end22, !dbg !5814

cond.false18:                                     ; preds = %cond.false13
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 1, !dbg !5814
  %7 = load float, float* %arrayidx19, align 4, !dbg !5814
  %mul20 = fmul float 2.550000e+02, %7, !dbg !5814
  %add21 = fadd float %mul20, 5.000000e-01, !dbg !5814
  br label %cond.end22, !dbg !5814

cond.end22:                                       ; preds = %cond.false18, %cond.true17
  %cond23 = phi float [ 2.550000e+02, %cond.true17 ], [ %add21, %cond.false18 ], !dbg !5814
  br label %cond.end24, !dbg !5814

cond.end24:                                       ; preds = %cond.end22, %cond.true12
  %cond25 = phi float [ 0.000000e+00, %cond.true12 ], [ %cond23, %cond.end22 ], !dbg !5814
  %conv26 = fptoui float %cond25 to i8, !dbg !5814
  %8 = load i8*, i8** %srgb.addr, align 8, !dbg !5814
  %arrayidx27 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !5814
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !5814
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 2, !dbg !5814
  %9 = load float, float* %arrayidx28, align 8, !dbg !5814
  %cmp29 = fcmp ole float %9, 0.000000e+00, !dbg !5814
  br i1 %cmp29, label %cond.true31, label %cond.false32, !dbg !5814

cond.true31:                                      ; preds = %cond.end24
  br label %cond.end43, !dbg !5814

cond.false32:                                     ; preds = %cond.end24
  %arrayidx33 = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 2, !dbg !5814
  %10 = load float, float* %arrayidx33, align 8, !dbg !5814
  %cmp34 = fcmp ogt float %10, 0x3FEFEFEFE0000000, !dbg !5814
  br i1 %cmp34, label %cond.true36, label %cond.false37, !dbg !5814

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end41, !dbg !5814

cond.false37:                                     ; preds = %cond.false32
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 2, !dbg !5814
  %11 = load float, float* %arrayidx38, align 8, !dbg !5814
  %mul39 = fmul float 2.550000e+02, %11, !dbg !5814
  %add40 = fadd float %mul39, 5.000000e-01, !dbg !5814
  br label %cond.end41, !dbg !5814

cond.end41:                                       ; preds = %cond.false37, %cond.true36
  %cond42 = phi float [ 2.550000e+02, %cond.true36 ], [ %add40, %cond.false37 ], !dbg !5814
  br label %cond.end43, !dbg !5814

cond.end43:                                       ; preds = %cond.end41, %cond.true31
  %cond44 = phi float [ 0.000000e+00, %cond.true31 ], [ %cond42, %cond.end41 ], !dbg !5814
  %conv45 = fptoui float %cond44 to i8, !dbg !5814
  %12 = load i8*, i8** %srgb.addr, align 8, !dbg !5814
  %arrayidx46 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !5814
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !5814
  %arrayidx47 = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 3, !dbg !5814
  %13 = load float, float* %arrayidx47, align 4, !dbg !5814
  %cmp48 = fcmp ole float %13, 0.000000e+00, !dbg !5814
  br i1 %cmp48, label %cond.true50, label %cond.false51, !dbg !5814

cond.true50:                                      ; preds = %cond.end43
  br label %cond.end62, !dbg !5814

cond.false51:                                     ; preds = %cond.end43
  %arrayidx52 = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 3, !dbg !5814
  %14 = load float, float* %arrayidx52, align 4, !dbg !5814
  %cmp53 = fcmp ogt float %14, 0x3FEFEFEFE0000000, !dbg !5814
  br i1 %cmp53, label %cond.true55, label %cond.false56, !dbg !5814

cond.true55:                                      ; preds = %cond.false51
  br label %cond.end60, !dbg !5814

cond.false56:                                     ; preds = %cond.false51
  %arrayidx57 = getelementptr inbounds [4 x float], [4 x float]* %srgb_f, i64 0, i64 3, !dbg !5814
  %15 = load float, float* %arrayidx57, align 4, !dbg !5814
  %mul58 = fmul float 2.550000e+02, %15, !dbg !5814
  %add59 = fadd float %mul58, 5.000000e-01, !dbg !5814
  br label %cond.end60, !dbg !5814

cond.end60:                                       ; preds = %cond.false56, %cond.true55
  %cond61 = phi float [ 2.550000e+02, %cond.true55 ], [ %add59, %cond.false56 ], !dbg !5814
  br label %cond.end62, !dbg !5814

cond.end62:                                       ; preds = %cond.end60, %cond.true50
  %cond63 = phi float [ 0.000000e+00, %cond.true50 ], [ %cond61, %cond.end60 ], !dbg !5814
  %conv64 = fptoui float %cond63 to i8, !dbg !5814
  %16 = load i8*, i8** %srgb.addr, align 8, !dbg !5814
  %arrayidx65 = getelementptr inbounds i8, i8* %16, i64 3, !dbg !5814
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !5814
  ret void, !dbg !5816
}

declare dso_local void @rgba_float_to_uchar(i8*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeUnlinkNode(%struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !5817 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %next = alloca %struct.bNodeLink*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %lb = alloca %struct.ListBase*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !5818, metadata !DIExpression()), !dbg !5819
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !5820, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !5822, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %next, metadata !5824, metadata !DIExpression()), !dbg !5825
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !5826, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !5828, metadata !DIExpression()), !dbg !5829
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5830
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 8, !dbg !5832
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !5833
  %1 = load i8*, i8** %first, align 8, !dbg !5833
  %2 = bitcast i8* %1 to %struct.bNodeLink*, !dbg !5830
  store %struct.bNodeLink* %2, %struct.bNodeLink** %link, align 8, !dbg !5834
  br label %for.cond, !dbg !5835

for.cond:                                         ; preds = %for.inc26, %entry
  %3 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5836
  %tobool = icmp ne %struct.bNodeLink* %3, null, !dbg !5838
  br i1 %tobool, label %for.body, label %for.end27, !dbg !5838

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5839
  %next1 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %4, i32 0, i32 0, !dbg !5841
  %5 = load %struct.bNodeLink*, %struct.bNodeLink** %next1, align 8, !dbg !5841
  store %struct.bNodeLink* %5, %struct.bNodeLink** %next, align 8, !dbg !5842
  %6 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5843
  %fromnode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %6, i32 0, i32 2, !dbg !5845
  %7 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !5845
  %8 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5846
  %cmp = icmp eq %struct.bNode* %7, %8, !dbg !5847
  br i1 %cmp, label %if.then, label %if.else, !dbg !5848

if.then:                                          ; preds = %for.body
  %9 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5849
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 18, !dbg !5851
  store %struct.ListBase* %outputs, %struct.ListBase** %lb, align 8, !dbg !5852
  %10 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5853
  %tonode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %10, i32 0, i32 3, !dbg !5855
  %11 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !5855
  %tobool2 = icmp ne %struct.bNode* %11, null, !dbg !5853
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !5856

if.then3:                                         ; preds = %if.then
  %12 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5857
  %tonode4 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %12, i32 0, i32 3, !dbg !5858
  %13 = load %struct.bNode*, %struct.bNode** %tonode4, align 8, !dbg !5858
  %update = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 31, !dbg !5859
  %14 = load i32, i32* %update, align 4, !dbg !5860
  %or = or i32 %14, 65535, !dbg !5860
  store i32 %or, i32* %update, align 4, !dbg !5860
  br label %if.end, !dbg !5857

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end10, !dbg !5861

if.else:                                          ; preds = %for.body
  %15 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5862
  %tonode5 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %15, i32 0, i32 3, !dbg !5864
  %16 = load %struct.bNode*, %struct.bNode** %tonode5, align 8, !dbg !5864
  %17 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5865
  %cmp6 = icmp eq %struct.bNode* %16, %17, !dbg !5866
  br i1 %cmp6, label %if.then7, label %if.else8, !dbg !5867

if.then7:                                         ; preds = %if.else
  %18 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5868
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 17, !dbg !5869
  store %struct.ListBase* %inputs, %struct.ListBase** %lb, align 8, !dbg !5870
  br label %if.end9, !dbg !5871

if.else8:                                         ; preds = %if.else
  store %struct.ListBase* null, %struct.ListBase** %lb, align 8, !dbg !5872
  br label %if.end9

if.end9:                                          ; preds = %if.else8, %if.then7
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %19 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !5873
  %tobool11 = icmp ne %struct.ListBase* %19, null, !dbg !5873
  br i1 %tobool11, label %if.then12, label %if.end25, !dbg !5875

if.then12:                                        ; preds = %if.end10
  %20 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !5876
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %20, i32 0, i32 0, !dbg !5879
  %21 = load i8*, i8** %first13, align 8, !dbg !5879
  %22 = bitcast i8* %21 to %struct.bNodeSocket*, !dbg !5876
  store %struct.bNodeSocket* %22, %struct.bNodeSocket** %sock, align 8, !dbg !5880
  br label %for.cond14, !dbg !5881

for.cond14:                                       ; preds = %for.inc, %if.then12
  %23 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5882
  %tobool15 = icmp ne %struct.bNodeSocket* %23, null, !dbg !5884
  br i1 %tobool15, label %for.body16, label %for.end, !dbg !5884

for.body16:                                       ; preds = %for.cond14
  %24 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5885
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %24, i32 0, i32 4, !dbg !5888
  %25 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !5888
  %26 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5889
  %cmp17 = icmp eq %struct.bNodeSocket* %25, %26, !dbg !5890
  br i1 %cmp17, label %if.then19, label %lor.lhs.false, !dbg !5891

lor.lhs.false:                                    ; preds = %for.body16
  %27 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5892
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %27, i32 0, i32 5, !dbg !5893
  %28 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !5893
  %29 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5894
  %cmp18 = icmp eq %struct.bNodeSocket* %28, %29, !dbg !5895
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !5896

if.then19:                                        ; preds = %lor.lhs.false, %for.body16
  br label %for.end, !dbg !5897

if.end20:                                         ; preds = %lor.lhs.false
  br label %for.inc, !dbg !5898

for.inc:                                          ; preds = %if.end20
  %30 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5899
  %next21 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %30, i32 0, i32 0, !dbg !5900
  %31 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next21, align 8, !dbg !5900
  store %struct.bNodeSocket* %31, %struct.bNodeSocket** %sock, align 8, !dbg !5901
  br label %for.cond14, !dbg !5902, !llvm.loop !5903

for.end:                                          ; preds = %if.then19, %for.cond14
  %32 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !5905
  %tobool22 = icmp ne %struct.bNodeSocket* %32, null, !dbg !5905
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5907

if.then23:                                        ; preds = %for.end
  %33 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5908
  %34 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !5910
  call void @nodeRemLink(%struct.bNodeTree* %33, %struct.bNodeLink* %34), !dbg !5911
  br label %if.end24, !dbg !5912

if.end24:                                         ; preds = %if.then23, %for.end
  br label %if.end25, !dbg !5913

if.end25:                                         ; preds = %if.end24, %if.end10
  br label %for.inc26, !dbg !5914

for.inc26:                                        ; preds = %if.end25
  %35 = load %struct.bNodeLink*, %struct.bNodeLink** %next, align 8, !dbg !5915
  store %struct.bNodeLink* %35, %struct.bNodeLink** %link, align 8, !dbg !5916
  br label %for.cond, !dbg !5917, !llvm.loop !5918

for.end27:                                        ; preds = %for.cond
  ret void, !dbg !5920
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeFreeNode(%struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !5921 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !5922, metadata !DIExpression()), !dbg !5923
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !5924, metadata !DIExpression()), !dbg !5925
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5926
  %1 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5927
  call void @node_free_node_ex(%struct.bNodeTree* %0, %struct.bNode* %1, i8 zeroext 1, i8 zeroext 1), !dbg !5928
  ret void, !dbg !5929
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_free_node_ex(%struct.bNodeTree* %ntree, %struct.bNode* %node, i8 zeroext %remove_animdata, i8 zeroext %use_api_free_cb) #0 !dbg !5930 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %remove_animdata.addr = alloca i8, align 1
  %use_api_free_cb.addr = alloca i8, align 1
  %sock = alloca %struct.bNodeSocket*, align 8
  %nextsock = alloca %struct.bNodeSocket*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %propname_esc = alloca [128 x i8], align 16
  %prefix = alloca [128 x i8], align 16
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !5933, metadata !DIExpression()), !dbg !5934
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !5935, metadata !DIExpression()), !dbg !5936
  store i8 %remove_animdata, i8* %remove_animdata.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %remove_animdata.addr, metadata !5937, metadata !DIExpression()), !dbg !5938
  store i8 %use_api_free_cb, i8* %use_api_free_cb.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_api_free_cb.addr, metadata !5939, metadata !DIExpression()), !dbg !5940
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !5941, metadata !DIExpression()), !dbg !5942
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %nextsock, metadata !5943, metadata !DIExpression()), !dbg !5944
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5945
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !5945
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5946

land.rhs:                                         ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5947
  %flag = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 12, !dbg !5948
  %2 = load i32, i32* %flag, align 4, !dbg !5948
  %and = and i32 %2, 32, !dbg !5949
  %tobool1 = icmp ne i32 %and, 0, !dbg !5950
  %lnot = xor i1 %tobool1, true, !dbg !5950
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !5951
  %land.ext = zext i1 %3 to i32, !dbg !5946
  %4 = load i8, i8* %remove_animdata.addr, align 1, !dbg !5952
  %conv = zext i8 %4 to i32, !dbg !5952
  %and2 = and i32 %conv, %land.ext, !dbg !5952
  %conv3 = trunc i32 %and2 to i8, !dbg !5952
  store i8 %conv3, i8* %remove_animdata.addr, align 1, !dbg !5952
  %5 = load i8, i8* %use_api_free_cb.addr, align 1, !dbg !5953
  %conv4 = zext i8 %5 to i32, !dbg !5953
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !5953
  br i1 %tobool5, label %land.lhs.true, label %if.end, !dbg !5955

land.lhs.true:                                    ; preds = %land.end
  %6 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5956
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 4, !dbg !5957
  %7 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !5957
  %freefunc_api = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %7, i32 0, i32 35, !dbg !5958
  %8 = load void (%struct.PointerRNA*)*, void (%struct.PointerRNA*)** %freefunc_api, align 8, !dbg !5958
  %tobool6 = icmp ne void (%struct.PointerRNA*)* %8, null, !dbg !5956
  br i1 %tobool6, label %if.then, label %if.end, !dbg !5959

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !5960, metadata !DIExpression()), !dbg !5962
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5963
  %10 = bitcast %struct.bNodeTree* %9 to %struct.ID*, !dbg !5964
  %11 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5965
  %12 = bitcast %struct.bNode* %11 to i8*, !dbg !5965
  call void @RNA_pointer_create(%struct.ID* %10, %struct.StructRNA* @RNA_Node, i8* %12, %struct.PointerRNA* %ptr), !dbg !5966
  %13 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5967
  %typeinfo7 = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 4, !dbg !5968
  %14 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo7, align 8, !dbg !5968
  %freefunc_api8 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %14, i32 0, i32 35, !dbg !5969
  %15 = load void (%struct.PointerRNA*)*, void (%struct.PointerRNA*)** %freefunc_api8, align 8, !dbg !5969
  call void %15(%struct.PointerRNA* %ptr), !dbg !5967
  br label %if.end, !dbg !5970

if.end:                                           ; preds = %if.then, %land.lhs.true, %land.end
  %16 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5971
  %tobool9 = icmp ne %struct.bNodeTree* %16, null, !dbg !5971
  br i1 %tobool9, label %if.then10, label %if.end38, !dbg !5973

if.then10:                                        ; preds = %if.end
  %17 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5974
  %18 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5976
  call void @nodeUnlinkNode(%struct.bNodeTree* %17, %struct.bNode* %18), !dbg !5977
  %19 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5978
  %20 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5979
  call void @node_unlink_attached(%struct.bNodeTree* %19, %struct.bNode* %20), !dbg !5980
  %21 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !5981
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %21, i32 0, i32 7, !dbg !5982
  %22 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5983
  %23 = bitcast %struct.bNode* %22 to i8*, !dbg !5983
  call void @BLI_remlink(%struct.ListBase* %nodes, i8* %23), !dbg !5984
  %24 = load i8, i8* %remove_animdata.addr, align 1, !dbg !5985
  %tobool11 = icmp ne i8 %24, 0, !dbg !5985
  br i1 %tobool11, label %if.then12, label %if.end18, !dbg !5987

if.then12:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata [128 x i8]* %propname_esc, metadata !5988, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.declare(metadata [128 x i8]* %prefix, metadata !5991, metadata !DIExpression()), !dbg !5992
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %propname_esc, i64 0, i64 0, !dbg !5993
  %25 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !5994
  %name = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 6, !dbg !5995
  %arraydecay13 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !5994
  %call = call i64 @BLI_strescape(i8* %arraydecay, i8* %arraydecay13, i64 128), !dbg !5996
  %arraydecay14 = getelementptr inbounds [128 x i8], [128 x i8]* %prefix, i64 0, i64 0, !dbg !5997
  %arraydecay15 = getelementptr inbounds [128 x i8], [128 x i8]* %propname_esc, i64 0, i64 0, !dbg !5998
  %call16 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay14, i64 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.267, i64 0, i64 0), i8* %arraydecay15), !dbg !5999
  %26 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6000
  %27 = bitcast %struct.bNodeTree* %26 to %struct.ID*, !dbg !6001
  %arraydecay17 = getelementptr inbounds [128 x i8], [128 x i8]* %prefix, i64 0, i64 0, !dbg !6002
  call void @BKE_animdata_fix_paths_remove(%struct.ID* %27, i8* %arraydecay17), !dbg !6003
  br label %if.end18, !dbg !6004

if.end18:                                         ; preds = %if.then12, %if.then10
  %28 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6005
  %typeinfo19 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %28, i32 0, i32 2, !dbg !6007
  %29 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo19, align 8, !dbg !6007
  %free_node_cache = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %29, i32 0, i32 6, !dbg !6008
  %30 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %free_node_cache, align 8, !dbg !6008
  %tobool20 = icmp ne void (%struct.bNodeTree*, %struct.bNode*)* %30, null, !dbg !6005
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !6009

if.then21:                                        ; preds = %if.end18
  %31 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6010
  %typeinfo22 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %31, i32 0, i32 2, !dbg !6011
  %32 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo22, align 8, !dbg !6011
  %free_node_cache23 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %32, i32 0, i32 6, !dbg !6012
  %33 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %free_node_cache23, align 8, !dbg !6012
  %34 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6013
  %35 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6014
  call void %33(%struct.bNodeTree* %34, %struct.bNode* %35), !dbg !6010
  br label %if.end24, !dbg !6010

if.end24:                                         ; preds = %if.then21, %if.end18
  %36 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6015
  %type = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %36, i32 0, i32 9, !dbg !6017
  %37 = load i32, i32* %type, align 8, !dbg !6017
  %cmp = icmp eq i32 %37, 2, !dbg !6018
  br i1 %cmp, label %land.lhs.true26, label %if.end31, !dbg !6019

land.lhs.true26:                                  ; preds = %if.end24
  %38 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6020
  %execdata = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %38, i32 0, i32 27, !dbg !6021
  %39 = load %struct.bNodeTreeExec*, %struct.bNodeTreeExec** %execdata, align 8, !dbg !6021
  %tobool27 = icmp ne %struct.bNodeTreeExec* %39, null, !dbg !6020
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !6022

if.then28:                                        ; preds = %land.lhs.true26
  %40 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6023
  %execdata29 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %40, i32 0, i32 27, !dbg !6025
  %41 = load %struct.bNodeTreeExec*, %struct.bNodeTreeExec** %execdata29, align 8, !dbg !6025
  call void @ntreeTexEndExecTree(%struct.bNodeTreeExec* %41), !dbg !6026
  %42 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6027
  %execdata30 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %42, i32 0, i32 27, !dbg !6028
  store %struct.bNodeTreeExec* null, %struct.bNodeTreeExec** %execdata30, align 8, !dbg !6029
  br label %if.end31, !dbg !6030

if.end31:                                         ; preds = %if.then28, %land.lhs.true26, %if.end24
  %43 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6031
  %typeinfo32 = getelementptr inbounds %struct.bNode, %struct.bNode* %43, i32 0, i32 4, !dbg !6033
  %44 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo32, align 8, !dbg !6033
  %freefunc = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %44, i32 0, i32 32, !dbg !6034
  %45 = load void (%struct.bNode*)*, void (%struct.bNode*)** %freefunc, align 8, !dbg !6034
  %tobool33 = icmp ne void (%struct.bNode*)* %45, null, !dbg !6031
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !6035

if.then34:                                        ; preds = %if.end31
  %46 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6036
  %typeinfo35 = getelementptr inbounds %struct.bNode, %struct.bNode* %46, i32 0, i32 4, !dbg !6037
  %47 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo35, align 8, !dbg !6037
  %freefunc36 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %47, i32 0, i32 32, !dbg !6038
  %48 = load void (%struct.bNode*)*, void (%struct.bNode*)** %freefunc36, align 8, !dbg !6038
  %49 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6039
  call void %48(%struct.bNode* %49), !dbg !6036
  br label %if.end37, !dbg !6036

if.end37:                                         ; preds = %if.then34, %if.end31
  br label %if.end38, !dbg !6040

if.end38:                                         ; preds = %if.end37, %if.end
  %50 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6041
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %50, i32 0, i32 17, !dbg !6043
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !6044
  %51 = load i8*, i8** %first, align 8, !dbg !6044
  %52 = bitcast i8* %51 to %struct.bNodeSocket*, !dbg !6041
  store %struct.bNodeSocket* %52, %struct.bNodeSocket** %sock, align 8, !dbg !6045
  br label %for.cond, !dbg !6046

for.cond:                                         ; preds = %for.inc, %if.end38
  %53 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6047
  %tobool39 = icmp ne %struct.bNodeSocket* %53, null, !dbg !6049
  br i1 %tobool39, label %for.body, label %for.end, !dbg !6049

for.body:                                         ; preds = %for.cond
  %54 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6050
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %54, i32 0, i32 0, !dbg !6052
  %55 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !6052
  store %struct.bNodeSocket* %55, %struct.bNodeSocket** %nextsock, align 8, !dbg !6053
  %56 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6054
  %57 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6055
  %58 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6056
  call void @node_socket_free(%struct.bNodeTree* %56, %struct.bNodeSocket* %57, %struct.bNode* %58), !dbg !6057
  %59 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6058
  %60 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6059
  %61 = bitcast %struct.bNodeSocket* %60 to i8*, !dbg !6059
  call void %59(i8* %61), !dbg !6058
  br label %for.inc, !dbg !6060

for.inc:                                          ; preds = %for.body
  %62 = load %struct.bNodeSocket*, %struct.bNodeSocket** %nextsock, align 8, !dbg !6061
  store %struct.bNodeSocket* %62, %struct.bNodeSocket** %sock, align 8, !dbg !6062
  br label %for.cond, !dbg !6063, !llvm.loop !6064

for.end:                                          ; preds = %for.cond
  %63 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6066
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %63, i32 0, i32 18, !dbg !6068
  %first40 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !6069
  %64 = load i8*, i8** %first40, align 8, !dbg !6069
  %65 = bitcast i8* %64 to %struct.bNodeSocket*, !dbg !6066
  store %struct.bNodeSocket* %65, %struct.bNodeSocket** %sock, align 8, !dbg !6070
  br label %for.cond41, !dbg !6071

for.cond41:                                       ; preds = %for.inc45, %for.end
  %66 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6072
  %tobool42 = icmp ne %struct.bNodeSocket* %66, null, !dbg !6074
  br i1 %tobool42, label %for.body43, label %for.end46, !dbg !6074

for.body43:                                       ; preds = %for.cond41
  %67 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6075
  %next44 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %67, i32 0, i32 0, !dbg !6077
  %68 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next44, align 8, !dbg !6077
  store %struct.bNodeSocket* %68, %struct.bNodeSocket** %nextsock, align 8, !dbg !6078
  %69 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6079
  %70 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6080
  %71 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6081
  call void @node_socket_free(%struct.bNodeTree* %69, %struct.bNodeSocket* %70, %struct.bNode* %71), !dbg !6082
  %72 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6083
  %73 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6084
  %74 = bitcast %struct.bNodeSocket* %73 to i8*, !dbg !6084
  call void %72(i8* %74), !dbg !6083
  br label %for.inc45, !dbg !6085

for.inc45:                                        ; preds = %for.body43
  %75 = load %struct.bNodeSocket*, %struct.bNodeSocket** %nextsock, align 8, !dbg !6086
  store %struct.bNodeSocket* %75, %struct.bNodeSocket** %sock, align 8, !dbg !6087
  br label %for.cond41, !dbg !6088, !llvm.loop !6089

for.end46:                                        ; preds = %for.cond41
  %76 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6091
  %internal_links = getelementptr inbounds %struct.bNode, %struct.bNode* %76, i32 0, i32 23, !dbg !6092
  call void @BLI_freelistN(%struct.ListBase* %internal_links), !dbg !6093
  %77 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6094
  %prop = getelementptr inbounds %struct.bNode, %struct.bNode* %77, i32 0, i32 3, !dbg !6096
  %78 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !6096
  %tobool47 = icmp ne %struct.IDProperty* %78, null, !dbg !6094
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !6097

if.then48:                                        ; preds = %for.end46
  %79 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6098
  %prop49 = getelementptr inbounds %struct.bNode, %struct.bNode* %79, i32 0, i32 3, !dbg !6100
  %80 = load %struct.IDProperty*, %struct.IDProperty** %prop49, align 8, !dbg !6100
  call void @IDP_FreeProperty(%struct.IDProperty* %80), !dbg !6101
  %81 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6102
  %82 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6103
  %prop50 = getelementptr inbounds %struct.bNode, %struct.bNode* %82, i32 0, i32 3, !dbg !6104
  %83 = load %struct.IDProperty*, %struct.IDProperty** %prop50, align 8, !dbg !6104
  %84 = bitcast %struct.IDProperty* %83 to i8*, !dbg !6103
  call void %81(i8* %84), !dbg !6102
  br label %if.end51, !dbg !6105

if.end51:                                         ; preds = %if.then48, %for.end46
  %85 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6106
  %86 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !6107
  %87 = bitcast %struct.bNode* %86 to i8*, !dbg !6107
  call void %85(i8* %87), !dbg !6106
  %88 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6108
  %tobool52 = icmp ne %struct.bNodeTree* %88, null, !dbg !6108
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !6110

if.then53:                                        ; preds = %if.end51
  %89 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6111
  %update = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %89, i32 0, i32 13, !dbg !6112
  %90 = load i32, i32* %update, align 8, !dbg !6113
  %or = or i32 %90, 2, !dbg !6113
  store i32 %or, i32* %update, align 8, !dbg !6113
  br label %if.end54, !dbg !6111

if.end54:                                         ; preds = %if.then53, %if.end51
  ret void, !dbg !6114
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeFreeTree_ex(%struct.bNodeTree* %ntree, i8 zeroext %do_id_user) #0 !dbg !6115 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %do_id_user.addr = alloca i8, align 1
  %tntree = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %next = alloca %struct.bNode*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %nextsock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !6118, metadata !DIExpression()), !dbg !6119
  store i8 %do_id_user, i8* %do_id_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_id_user.addr, metadata !6120, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %tntree, metadata !6122, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6124, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.declare(metadata %struct.bNode** %next, metadata !6126, metadata !DIExpression()), !dbg !6127
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !6128, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %nextsock, metadata !6130, metadata !DIExpression()), !dbg !6131
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6132
  %cmp = icmp eq %struct.bNodeTree* %0, null, !dbg !6134
  br i1 %cmp, label %if.then, label %if.end, !dbg !6135

if.then:                                          ; preds = %entry
  br label %if.end40, !dbg !6136

if.end:                                           ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6137
  %execdata = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 27, !dbg !6139
  %2 = load %struct.bNodeTreeExec*, %struct.bNodeTreeExec** %execdata, align 8, !dbg !6139
  %tobool = icmp ne %struct.bNodeTreeExec* %2, null, !dbg !6137
  br i1 %tobool, label %if.then1, label %if.end6, !dbg !6140

if.then1:                                         ; preds = %if.end
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6141
  %type = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 9, !dbg !6143
  %4 = load i32, i32* %type, align 8, !dbg !6143
  switch i32 %4, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb3
  ], !dbg !6144

sw.bb:                                            ; preds = %if.then1
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6145
  %execdata2 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 27, !dbg !6147
  %6 = load %struct.bNodeTreeExec*, %struct.bNodeTreeExec** %execdata2, align 8, !dbg !6147
  call void @ntreeShaderEndExecTree(%struct.bNodeTreeExec* %6), !dbg !6148
  br label %sw.epilog, !dbg !6149

sw.bb3:                                           ; preds = %if.then1
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6150
  %execdata4 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 27, !dbg !6151
  %8 = load %struct.bNodeTreeExec*, %struct.bNodeTreeExec** %execdata4, align 8, !dbg !6151
  call void @ntreeTexEndExecTree(%struct.bNodeTreeExec* %8), !dbg !6152
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6153
  %execdata5 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 27, !dbg !6154
  store %struct.bNodeTreeExec* null, %struct.bNodeTreeExec** %execdata5, align 8, !dbg !6155
  br label %sw.epilog, !dbg !6156

sw.epilog:                                        ; preds = %if.then1, %sw.bb3, %sw.bb
  br label %if.end6, !dbg !6157

if.end6:                                          ; preds = %sw.epilog, %if.end
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6158
  call void @free_localized_node_groups(%struct.bNodeTree* %10), !dbg !6159
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6160
  call void @ntreeInterfaceTypeFree(%struct.bNodeTree* %11), !dbg !6161
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6162
  %13 = bitcast %struct.bNodeTree* %12 to %struct.ID*, !dbg !6163
  call void @BKE_free_animdata(%struct.ID* %13), !dbg !6164
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6165
  %gpd = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %14, i32 0, i32 5, !dbg !6166
  %15 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !6166
  %16 = bitcast %struct.bGPdata* %15 to %struct.ID*, !dbg !6167
  call void @id_us_min(%struct.ID* %16), !dbg !6168
  %17 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6169
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %17, i32 0, i32 8, !dbg !6170
  call void @BLI_freelistN(%struct.ListBase* %links), !dbg !6171
  %18 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6172
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %18, i32 0, i32 7, !dbg !6174
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6175
  %19 = load i8*, i8** %first, align 8, !dbg !6175
  %20 = bitcast i8* %19 to %struct.bNode*, !dbg !6172
  store %struct.bNode* %20, %struct.bNode** %node, align 8, !dbg !6176
  br label %for.cond, !dbg !6177

for.cond:                                         ; preds = %for.inc, %if.end6
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6178
  %tobool7 = icmp ne %struct.bNode* %21, null, !dbg !6180
  br i1 %tobool7, label %for.body, label %for.end, !dbg !6180

for.body:                                         ; preds = %for.cond
  %22 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6181
  %next8 = getelementptr inbounds %struct.bNode, %struct.bNode* %22, i32 0, i32 0, !dbg !6183
  %23 = load %struct.bNode*, %struct.bNode** %next8, align 8, !dbg !6183
  store %struct.bNode* %23, %struct.bNode** %next, align 8, !dbg !6184
  %24 = load i8, i8* %do_id_user.addr, align 1, !dbg !6185
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6186
  %26 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6187
  call void @node_free_node_ex(%struct.bNodeTree* %25, %struct.bNode* %26, i8 zeroext 0, i8 zeroext 0), !dbg !6188
  br label %for.inc, !dbg !6189

for.inc:                                          ; preds = %for.body
  %27 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6190
  store %struct.bNode* %27, %struct.bNode** %node, align 8, !dbg !6191
  br label %for.cond, !dbg !6192, !llvm.loop !6193

for.end:                                          ; preds = %for.cond
  %28 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6195
  %inputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %28, i32 0, i32 22, !dbg !6197
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !6198
  %29 = load i8*, i8** %first9, align 8, !dbg !6198
  %30 = bitcast i8* %29 to %struct.bNodeSocket*, !dbg !6195
  store %struct.bNodeSocket* %30, %struct.bNodeSocket** %sock, align 8, !dbg !6199
  br label %for.cond10, !dbg !6200

for.cond10:                                       ; preds = %for.inc14, %for.end
  %31 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6201
  %tobool11 = icmp ne %struct.bNodeSocket* %31, null, !dbg !6203
  br i1 %tobool11, label %for.body12, label %for.end15, !dbg !6203

for.body12:                                       ; preds = %for.cond10
  %32 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6204
  %next13 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %32, i32 0, i32 0, !dbg !6206
  %33 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next13, align 8, !dbg !6206
  store %struct.bNodeSocket* %33, %struct.bNodeSocket** %nextsock, align 8, !dbg !6207
  %34 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6208
  %35 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6209
  call void @node_socket_interface_free(%struct.bNodeTree* %34, %struct.bNodeSocket* %35), !dbg !6210
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6211
  %37 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6212
  %38 = bitcast %struct.bNodeSocket* %37 to i8*, !dbg !6212
  call void %36(i8* %38), !dbg !6211
  br label %for.inc14, !dbg !6213

for.inc14:                                        ; preds = %for.body12
  %39 = load %struct.bNodeSocket*, %struct.bNodeSocket** %nextsock, align 8, !dbg !6214
  store %struct.bNodeSocket* %39, %struct.bNodeSocket** %sock, align 8, !dbg !6215
  br label %for.cond10, !dbg !6216, !llvm.loop !6217

for.end15:                                        ; preds = %for.cond10
  %40 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6219
  %outputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %40, i32 0, i32 23, !dbg !6221
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !6222
  %41 = load i8*, i8** %first16, align 8, !dbg !6222
  %42 = bitcast i8* %41 to %struct.bNodeSocket*, !dbg !6219
  store %struct.bNodeSocket* %42, %struct.bNodeSocket** %sock, align 8, !dbg !6223
  br label %for.cond17, !dbg !6224

for.cond17:                                       ; preds = %for.inc21, %for.end15
  %43 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6225
  %tobool18 = icmp ne %struct.bNodeSocket* %43, null, !dbg !6227
  br i1 %tobool18, label %for.body19, label %for.end22, !dbg !6227

for.body19:                                       ; preds = %for.cond17
  %44 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6228
  %next20 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %44, i32 0, i32 0, !dbg !6230
  %45 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next20, align 8, !dbg !6230
  store %struct.bNodeSocket* %45, %struct.bNodeSocket** %nextsock, align 8, !dbg !6231
  %46 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6232
  %47 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6233
  call void @node_socket_interface_free(%struct.bNodeTree* %46, %struct.bNodeSocket* %47), !dbg !6234
  %48 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6235
  %49 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !6236
  %50 = bitcast %struct.bNodeSocket* %49 to i8*, !dbg !6236
  call void %48(i8* %50), !dbg !6235
  br label %for.inc21, !dbg !6237

for.inc21:                                        ; preds = %for.body19
  %51 = load %struct.bNodeSocket*, %struct.bNodeSocket** %nextsock, align 8, !dbg !6238
  store %struct.bNodeSocket* %51, %struct.bNodeSocket** %sock, align 8, !dbg !6239
  br label %for.cond17, !dbg !6240, !llvm.loop !6241

for.end22:                                        ; preds = %for.cond17
  %52 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6243
  %previews = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %52, i32 0, i32 24, !dbg !6245
  %53 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews, align 8, !dbg !6245
  %tobool23 = icmp ne %struct.bNodeInstanceHash* %53, null, !dbg !6243
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !6246

if.then24:                                        ; preds = %for.end22
  %54 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6247
  %previews25 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %54, i32 0, i32 24, !dbg !6249
  %55 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %previews25, align 8, !dbg !6249
  call void @BKE_node_instance_hash_free(%struct.bNodeInstanceHash* %55, void (i8*)* bitcast (void (%struct.bNodePreview*)* @BKE_node_preview_free to void (i8*)*)), !dbg !6250
  br label %if.end26, !dbg !6251

if.end26:                                         ; preds = %if.then24, %for.end22
  %56 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !6252
  %nodetree = getelementptr inbounds %struct.Main, %struct.Main* %56, i32 0, i32 35, !dbg !6254
  %first27 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodetree, i32 0, i32 0, !dbg !6255
  %57 = load i8*, i8** %first27, align 8, !dbg !6255
  %58 = bitcast i8* %57 to %struct.bNodeTree*, !dbg !6256
  store %struct.bNodeTree* %58, %struct.bNodeTree** %tntree, align 8, !dbg !6257
  br label %for.cond28, !dbg !6258

for.cond28:                                       ; preds = %for.inc34, %if.end26
  %59 = load %struct.bNodeTree*, %struct.bNodeTree** %tntree, align 8, !dbg !6259
  %tobool29 = icmp ne %struct.bNodeTree* %59, null, !dbg !6261
  br i1 %tobool29, label %for.body30, label %for.end36, !dbg !6261

for.body30:                                       ; preds = %for.cond28
  %60 = load %struct.bNodeTree*, %struct.bNodeTree** %tntree, align 8, !dbg !6262
  %61 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6264
  %cmp31 = icmp eq %struct.bNodeTree* %60, %61, !dbg !6265
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !6266

if.then32:                                        ; preds = %for.body30
  br label %for.end36, !dbg !6267

if.end33:                                         ; preds = %for.body30
  br label %for.inc34, !dbg !6264

for.inc34:                                        ; preds = %if.end33
  %62 = load %struct.bNodeTree*, %struct.bNodeTree** %tntree, align 8, !dbg !6268
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %62, i32 0, i32 0, !dbg !6269
  %next35 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !6270
  %63 = load i8*, i8** %next35, align 8, !dbg !6270
  %64 = bitcast i8* %63 to %struct.bNodeTree*, !dbg !6268
  store %struct.bNodeTree* %64, %struct.bNodeTree** %tntree, align 8, !dbg !6271
  br label %for.cond28, !dbg !6272, !llvm.loop !6273

for.end36:                                        ; preds = %if.then32, %for.cond28
  %65 = load %struct.bNodeTree*, %struct.bNodeTree** %tntree, align 8, !dbg !6275
  %cmp37 = icmp eq %struct.bNodeTree* %65, null, !dbg !6277
  br i1 %cmp37, label %if.then38, label %if.end40, !dbg !6278

if.then38:                                        ; preds = %for.end36
  %66 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !6279
  %67 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6281
  %id39 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %67, i32 0, i32 0, !dbg !6282
  call void @BKE_libblock_free_data(%struct.Main* %66, %struct.ID* %id39), !dbg !6283
  br label %if.end40, !dbg !6284

if.end40:                                         ; preds = %if.then, %if.then38, %for.end36
  ret void, !dbg !6285
}

declare dso_local void @ntreeShaderEndExecTree(%struct.bNodeTreeExec*) #2

declare dso_local void @ntreeTexEndExecTree(%struct.bNodeTreeExec*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @free_localized_node_groups(%struct.bNodeTree* %ntree) #0 !dbg !6286 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %ngroup = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !6287, metadata !DIExpression()), !dbg !6288
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6289, metadata !DIExpression()), !dbg !6290
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6291
  %flag = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 12, !dbg !6293
  %1 = load i32, i32* %flag, align 4, !dbg !6293
  %and = and i32 %1, 32, !dbg !6294
  %tobool = icmp ne i32 %and, 0, !dbg !6294
  br i1 %tobool, label %if.end, label %if.then, !dbg !6295

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !6296

if.end:                                           ; preds = %entry
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6297
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 7, !dbg !6299
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6300
  %3 = load i8*, i8** %first, align 8, !dbg !6300
  %4 = bitcast i8* %3 to %struct.bNode*, !dbg !6297
  store %struct.bNode* %4, %struct.bNode** %node, align 8, !dbg !6301
  br label %for.cond, !dbg !6302

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6303
  %tobool1 = icmp ne %struct.bNode* %5, null, !dbg !6305
  br i1 %tobool1, label %for.body, label %for.end, !dbg !6305

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6306
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 8, !dbg !6309
  %7 = load i16, i16* %type, align 4, !dbg !6309
  %conv = sext i16 %7 to i32, !dbg !6306
  %cmp = icmp eq i32 %conv, 2, !dbg !6310
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !6311

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6312
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 20, !dbg !6313
  %9 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6313
  %tobool3 = icmp ne %struct.ID* %9, null, !dbg !6312
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !6314

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ngroup, metadata !6315, metadata !DIExpression()), !dbg !6317
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6318
  %id5 = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 20, !dbg !6319
  %11 = load %struct.ID*, %struct.ID** %id5, align 8, !dbg !6319
  %12 = bitcast %struct.ID* %11 to %struct.bNodeTree*, !dbg !6320
  store %struct.bNodeTree* %12, %struct.bNodeTree** %ngroup, align 8, !dbg !6317
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %ngroup, align 8, !dbg !6321
  call void @ntreeFreeTree_ex(%struct.bNodeTree* %13, i8 zeroext 0), !dbg !6322
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6323
  %15 = load %struct.bNodeTree*, %struct.bNodeTree** %ngroup, align 8, !dbg !6324
  %16 = bitcast %struct.bNodeTree* %15 to i8*, !dbg !6324
  call void %14(i8* %16), !dbg !6323
  br label %if.end6, !dbg !6325

if.end6:                                          ; preds = %if.then4, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6326

for.inc:                                          ; preds = %if.end6
  %17 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6327
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %17, i32 0, i32 0, !dbg !6328
  %18 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6328
  store %struct.bNode* %18, %struct.bNode** %node, align 8, !dbg !6329
  br label %for.cond, !dbg !6330, !llvm.loop !6331

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !6333
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeInterfaceTypeFree(%struct.bNodeTree* %ntree) #0 !dbg !6334 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !6335, metadata !DIExpression()), !dbg !6336
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6337
  %interface_type = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 4, !dbg !6339
  %1 = load %struct.StructRNA*, %struct.StructRNA** %interface_type, align 8, !dbg !6339
  %tobool = icmp ne %struct.StructRNA* %1, null, !dbg !6337
  br i1 %tobool, label %if.then, label %if.end, !dbg !6340

if.then:                                          ; preds = %entry
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6341
  %interface_type1 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 4, !dbg !6343
  %3 = load %struct.StructRNA*, %struct.StructRNA** %interface_type1, align 8, !dbg !6343
  call void @RNA_struct_free(%struct.BlenderRNA* @BLENDER_RNA, %struct.StructRNA* %3), !dbg !6344
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6345
  %interface_type2 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %4, i32 0, i32 4, !dbg !6346
  store %struct.StructRNA* null, %struct.StructRNA** %interface_type2, align 8, !dbg !6347
  br label %if.end, !dbg !6348

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6349
}

declare dso_local void @BKE_free_animdata(%struct.ID*) #2

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @node_socket_interface_free(%struct.bNodeTree* %UNUSED_ntree, %struct.bNodeSocket* %sock) #0 !dbg !6350 {
entry:
  %UNUSED_ntree.addr = alloca %struct.bNodeTree*, align 8
  %sock.addr = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %UNUSED_ntree, %struct.bNodeTree** %UNUSED_ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %UNUSED_ntree.addr, metadata !6351, metadata !DIExpression()), !dbg !6352
  store %struct.bNodeSocket* %sock, %struct.bNodeSocket** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock.addr, metadata !6353, metadata !DIExpression()), !dbg !6354
  %0 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !6355
  %prop = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %0, i32 0, i32 3, !dbg !6357
  %1 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !6357
  %tobool = icmp ne %struct.IDProperty* %1, null, !dbg !6355
  br i1 %tobool, label %if.then, label %if.end, !dbg !6358

if.then:                                          ; preds = %entry
  %2 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !6359
  %prop1 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %2, i32 0, i32 3, !dbg !6361
  %3 = load %struct.IDProperty*, %struct.IDProperty** %prop1, align 8, !dbg !6361
  call void @IDP_FreeProperty(%struct.IDProperty* %3), !dbg !6362
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6363
  %5 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !6364
  %prop2 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %5, i32 0, i32 3, !dbg !6365
  %6 = load %struct.IDProperty*, %struct.IDProperty** %prop2, align 8, !dbg !6365
  %7 = bitcast %struct.IDProperty* %6 to i8*, !dbg !6364
  call void %4(i8* %7), !dbg !6363
  br label %if.end, !dbg !6366

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !6367
  %default_value = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %8, i32 0, i32 15, !dbg !6369
  %9 = load i8*, i8** %default_value, align 8, !dbg !6369
  %tobool3 = icmp ne i8* %9, null, !dbg !6367
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !6370

if.then4:                                         ; preds = %if.end
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6371
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !6372
  %default_value5 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %11, i32 0, i32 15, !dbg !6373
  %12 = load i8*, i8** %default_value5, align 8, !dbg !6373
  call void %10(i8* %12), !dbg !6371
  br label %if.end6, !dbg !6371

if.end6:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !6374
}

declare dso_local void @BKE_libblock_free_data(%struct.Main*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeFreeTree(%struct.bNodeTree* %ntree) #0 !dbg !6375 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !6376, metadata !DIExpression()), !dbg !6377
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6378
  call void @ntreeFreeTree_ex(%struct.bNodeTree* %0, i8 zeroext 1), !dbg !6379
  ret void, !dbg !6380
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeFreeCache(%struct.bNodeTree* %ntree) #0 !dbg !6381 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !6382, metadata !DIExpression()), !dbg !6383
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6384
  %cmp = icmp eq %struct.bNodeTree* %0, null, !dbg !6386
  br i1 %cmp, label %if.then, label %if.end, !dbg !6387

if.then:                                          ; preds = %entry
  br label %if.end4, !dbg !6388

if.end:                                           ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6389
  %typeinfo = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 2, !dbg !6391
  %2 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo, align 8, !dbg !6391
  %free_cache = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %2, i32 0, i32 5, !dbg !6392
  %3 = load void (%struct.bNodeTree*)*, void (%struct.bNodeTree*)** %free_cache, align 8, !dbg !6392
  %tobool = icmp ne void (%struct.bNodeTree*)* %3, null, !dbg !6389
  br i1 %tobool, label %if.then1, label %if.end4, !dbg !6393

if.then1:                                         ; preds = %if.end
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6394
  %typeinfo2 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %4, i32 0, i32 2, !dbg !6395
  %5 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo2, align 8, !dbg !6395
  %free_cache3 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %5, i32 0, i32 5, !dbg !6396
  %6 = load void (%struct.bNodeTree*)*, void (%struct.bNodeTree*)** %free_cache3, align 8, !dbg !6396
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6397
  call void %6(%struct.bNodeTree* %7), !dbg !6394
  br label %if.end4, !dbg !6394

if.end4:                                          ; preds = %if.then, %if.then1, %if.end
  ret void, !dbg !6398
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeSetOutput(%struct.bNodeTree* %ntree) #0 !dbg !6399 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %tnode = alloca %struct.bNode*, align 8
  %output = alloca i32, align 4
  %tnode89 = alloca %struct.bNode*, align 8
  %output90 = alloca i32, align 4
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !6400, metadata !DIExpression()), !dbg !6401
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6402, metadata !DIExpression()), !dbg !6403
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6404
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !6406
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6407
  %1 = load i8*, i8** %first, align 8, !dbg !6407
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !6404
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !6408
  br label %for.cond, !dbg !6409

for.cond:                                         ; preds = %for.inc124, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6410
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !6412
  br i1 %tobool, label %for.body, label %for.end126, !dbg !6412

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6413
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 4, !dbg !6416
  %5 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !6416
  %nclass = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %5, i32 0, i32 14, !dbg !6417
  %6 = load i16, i16* %nclass, align 4, !dbg !6417
  %conv = sext i16 %6 to i32, !dbg !6413
  %cmp = icmp eq i32 %conv, 1, !dbg !6418
  br i1 %cmp, label %if.then, label %if.end83, !dbg !6419

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.bNode** %tnode, metadata !6420, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.declare(metadata i32* %output, metadata !6423, metadata !DIExpression()), !dbg !6424
  store i32 0, i32* %output, align 4, !dbg !6424
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6425
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 8, !dbg !6427
  %8 = load i16, i16* %type, align 4, !dbg !6427
  %conv2 = sext i16 %8 to i32, !dbg !6425
  %cmp3 = icmp eq i32 %conv2, 223, !dbg !6428
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !6429

if.then5:                                         ; preds = %if.then
  br label %for.inc124, !dbg !6430

if.end:                                           ; preds = %if.then
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6431
  %nodes6 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 7, !dbg !6433
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes6, i32 0, i32 0, !dbg !6434
  %10 = load i8*, i8** %first7, align 8, !dbg !6434
  %11 = bitcast i8* %10 to %struct.bNode*, !dbg !6431
  store %struct.bNode* %11, %struct.bNode** %tnode, align 8, !dbg !6435
  br label %for.cond8, !dbg !6436

for.cond8:                                        ; preds = %for.inc, %if.end
  %12 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !6437
  %tobool9 = icmp ne %struct.bNode* %12, null, !dbg !6439
  br i1 %tobool9, label %for.body10, label %for.end, !dbg !6439

for.body10:                                       ; preds = %for.cond8
  %13 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !6440
  %typeinfo11 = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 4, !dbg !6443
  %14 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo11, align 8, !dbg !6443
  %nclass12 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %14, i32 0, i32 14, !dbg !6444
  %15 = load i16, i16* %nclass12, align 4, !dbg !6444
  %conv13 = sext i16 %15 to i32, !dbg !6440
  %cmp14 = icmp eq i32 %conv13, 1, !dbg !6445
  br i1 %cmp14, label %if.then16, label %if.end77, !dbg !6446

if.then16:                                        ; preds = %for.body10
  %16 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6447
  %type17 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %16, i32 0, i32 9, !dbg !6450
  %17 = load i32, i32* %type17, align 8, !dbg !6450
  %cmp18 = icmp eq i32 %17, 1, !dbg !6451
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !6452

if.then20:                                        ; preds = %if.then16
  %18 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !6453
  %type21 = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 8, !dbg !6456
  %19 = load i16, i16* %type21, align 4, !dbg !6456
  %conv22 = sext i16 %19 to i32, !dbg !6453
  %20 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6457
  %type23 = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 8, !dbg !6458
  %21 = load i16, i16* %type23, align 4, !dbg !6458
  %conv24 = sext i16 %21 to i32, !dbg !6457
  %cmp25 = icmp eq i32 %conv22, %conv24, !dbg !6459
  br i1 %cmp25, label %if.then45, label %lor.lhs.false, !dbg !6460

lor.lhs.false:                                    ; preds = %if.then20
  %22 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !6461
  %type27 = getelementptr inbounds %struct.bNode, %struct.bNode* %22, i32 0, i32 8, !dbg !6461
  %23 = load i16, i16* %type27, align 4, !dbg !6461
  %conv28 = sext i16 %23 to i32, !dbg !6461
  %cmp29 = icmp eq i32 %conv28, 201, !dbg !6461
  br i1 %cmp29, label %land.lhs.true, label %lor.lhs.false31, !dbg !6461

lor.lhs.false31:                                  ; preds = %lor.lhs.false
  %24 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !6461
  %type32 = getelementptr inbounds %struct.bNode, %struct.bNode* %24, i32 0, i32 8, !dbg !6461
  %25 = load i16, i16* %type32, align 4, !dbg !6461
  %conv33 = sext i16 %25 to i32, !dbg !6461
  %cmp34 = icmp eq i32 %conv33, 240, !dbg !6461
  br i1 %cmp34, label %land.lhs.true, label %if.end55, !dbg !6462

land.lhs.true:                                    ; preds = %lor.lhs.false31, %lor.lhs.false
  %26 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6463
  %type36 = getelementptr inbounds %struct.bNode, %struct.bNode* %26, i32 0, i32 8, !dbg !6463
  %27 = load i16, i16* %type36, align 4, !dbg !6463
  %conv37 = sext i16 %27 to i32, !dbg !6463
  %cmp38 = icmp eq i32 %conv37, 201, !dbg !6463
  br i1 %cmp38, label %if.then45, label %lor.lhs.false40, !dbg !6463

lor.lhs.false40:                                  ; preds = %land.lhs.true
  %28 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6463
  %type41 = getelementptr inbounds %struct.bNode, %struct.bNode* %28, i32 0, i32 8, !dbg !6463
  %29 = load i16, i16* %type41, align 4, !dbg !6463
  %conv42 = sext i16 %29 to i32, !dbg !6463
  %cmp43 = icmp eq i32 %conv42, 240, !dbg !6463
  br i1 %cmp43, label %if.then45, label %if.end55, !dbg !6464

if.then45:                                        ; preds = %lor.lhs.false40, %land.lhs.true, %if.then20
  %30 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !6465
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %30, i32 0, i32 7, !dbg !6468
  %31 = load i32, i32* %flag, align 8, !dbg !6468
  %and = and i32 %31, 64, !dbg !6469
  %tobool46 = icmp ne i32 %and, 0, !dbg !6469
  br i1 %tobool46, label %if.then47, label %if.end54, !dbg !6470

if.then47:                                        ; preds = %if.then45
  %32 = load i32, i32* %output, align 4, !dbg !6471
  %inc = add nsw i32 %32, 1, !dbg !6471
  store i32 %inc, i32* %output, align 4, !dbg !6471
  %33 = load i32, i32* %output, align 4, !dbg !6473
  %cmp48 = icmp sgt i32 %33, 1, !dbg !6475
  br i1 %cmp48, label %if.then50, label %if.end53, !dbg !6476

if.then50:                                        ; preds = %if.then47
  %34 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !6477
  %flag51 = getelementptr inbounds %struct.bNode, %struct.bNode* %34, i32 0, i32 7, !dbg !6478
  %35 = load i32, i32* %flag51, align 8, !dbg !6479
  %and52 = and i32 %35, -65, !dbg !6479
  store i32 %and52, i32* %flag51, align 8, !dbg !6479
  br label %if.end53, !dbg !6477

if.end53:                                         ; preds = %if.then50, %if.then47
  br label %if.end54, !dbg !6480

if.end54:                                         ; preds = %if.end53, %if.then45
  br label %if.end55, !dbg !6481

if.end55:                                         ; preds = %if.end54, %lor.lhs.false40, %lor.lhs.false31
  br label %if.end76, !dbg !6482

if.else:                                          ; preds = %if.then16
  %36 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !6483
  %type56 = getelementptr inbounds %struct.bNode, %struct.bNode* %36, i32 0, i32 8, !dbg !6486
  %37 = load i16, i16* %type56, align 4, !dbg !6486
  %conv57 = sext i16 %37 to i32, !dbg !6483
  %38 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6487
  %type58 = getelementptr inbounds %struct.bNode, %struct.bNode* %38, i32 0, i32 8, !dbg !6488
  %39 = load i16, i16* %type58, align 4, !dbg !6488
  %conv59 = sext i16 %39 to i32, !dbg !6487
  %cmp60 = icmp eq i32 %conv57, %conv59, !dbg !6489
  br i1 %cmp60, label %if.then62, label %if.end75, !dbg !6490

if.then62:                                        ; preds = %if.else
  %40 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !6491
  %flag63 = getelementptr inbounds %struct.bNode, %struct.bNode* %40, i32 0, i32 7, !dbg !6494
  %41 = load i32, i32* %flag63, align 8, !dbg !6494
  %and64 = and i32 %41, 64, !dbg !6495
  %tobool65 = icmp ne i32 %and64, 0, !dbg !6495
  br i1 %tobool65, label %if.then66, label %if.end74, !dbg !6496

if.then66:                                        ; preds = %if.then62
  %42 = load i32, i32* %output, align 4, !dbg !6497
  %inc67 = add nsw i32 %42, 1, !dbg !6497
  store i32 %inc67, i32* %output, align 4, !dbg !6497
  %43 = load i32, i32* %output, align 4, !dbg !6499
  %cmp68 = icmp sgt i32 %43, 1, !dbg !6501
  br i1 %cmp68, label %if.then70, label %if.end73, !dbg !6502

if.then70:                                        ; preds = %if.then66
  %44 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !6503
  %flag71 = getelementptr inbounds %struct.bNode, %struct.bNode* %44, i32 0, i32 7, !dbg !6504
  %45 = load i32, i32* %flag71, align 8, !dbg !6505
  %and72 = and i32 %45, -65, !dbg !6505
  store i32 %and72, i32* %flag71, align 8, !dbg !6505
  br label %if.end73, !dbg !6503

if.end73:                                         ; preds = %if.then70, %if.then66
  br label %if.end74, !dbg !6506

if.end74:                                         ; preds = %if.end73, %if.then62
  br label %if.end75, !dbg !6507

if.end75:                                         ; preds = %if.end74, %if.else
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.end55
  br label %if.end77, !dbg !6508

if.end77:                                         ; preds = %if.end76, %for.body10
  br label %for.inc, !dbg !6509

for.inc:                                          ; preds = %if.end77
  %46 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !6510
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %46, i32 0, i32 0, !dbg !6511
  %47 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6511
  store %struct.bNode* %47, %struct.bNode** %tnode, align 8, !dbg !6512
  br label %for.cond8, !dbg !6513, !llvm.loop !6514

for.end:                                          ; preds = %for.cond8
  %48 = load i32, i32* %output, align 4, !dbg !6516
  %cmp78 = icmp eq i32 %48, 0, !dbg !6518
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !6519

if.then80:                                        ; preds = %for.end
  %49 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6520
  %flag81 = getelementptr inbounds %struct.bNode, %struct.bNode* %49, i32 0, i32 7, !dbg !6521
  %50 = load i32, i32* %flag81, align 8, !dbg !6522
  %or = or i32 %50, 64, !dbg !6522
  store i32 %or, i32* %flag81, align 8, !dbg !6522
  br label %if.end82, !dbg !6520

if.end82:                                         ; preds = %if.then80, %for.end
  br label %if.end83, !dbg !6523

if.end83:                                         ; preds = %if.end82, %for.body
  %51 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6524
  %type84 = getelementptr inbounds %struct.bNode, %struct.bNode* %51, i32 0, i32 8, !dbg !6526
  %52 = load i16, i16* %type84, align 4, !dbg !6526
  %conv85 = sext i16 %52 to i32, !dbg !6524
  %cmp86 = icmp eq i32 %conv85, 8, !dbg !6527
  br i1 %cmp86, label %if.then88, label %if.end123, !dbg !6528

if.then88:                                        ; preds = %if.end83
  call void @llvm.dbg.declare(metadata %struct.bNode** %tnode89, metadata !6529, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.declare(metadata i32* %output90, metadata !6532, metadata !DIExpression()), !dbg !6533
  store i32 0, i32* %output90, align 4, !dbg !6533
  %53 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6534
  %nodes91 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %53, i32 0, i32 7, !dbg !6536
  %first92 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes91, i32 0, i32 0, !dbg !6537
  %54 = load i8*, i8** %first92, align 8, !dbg !6537
  %55 = bitcast i8* %54 to %struct.bNode*, !dbg !6534
  store %struct.bNode* %55, %struct.bNode** %tnode89, align 8, !dbg !6538
  br label %for.cond93, !dbg !6539

for.cond93:                                       ; preds = %for.inc114, %if.then88
  %56 = load %struct.bNode*, %struct.bNode** %tnode89, align 8, !dbg !6540
  %tobool94 = icmp ne %struct.bNode* %56, null, !dbg !6542
  br i1 %tobool94, label %for.body95, label %for.end116, !dbg !6542

for.body95:                                       ; preds = %for.cond93
  %57 = load %struct.bNode*, %struct.bNode** %tnode89, align 8, !dbg !6543
  %type96 = getelementptr inbounds %struct.bNode, %struct.bNode* %57, i32 0, i32 8, !dbg !6546
  %58 = load i16, i16* %type96, align 4, !dbg !6546
  %conv97 = sext i16 %58 to i32, !dbg !6543
  %cmp98 = icmp eq i32 %conv97, 8, !dbg !6547
  br i1 %cmp98, label %if.then100, label %if.end113, !dbg !6548

if.then100:                                       ; preds = %for.body95
  %59 = load %struct.bNode*, %struct.bNode** %tnode89, align 8, !dbg !6549
  %flag101 = getelementptr inbounds %struct.bNode, %struct.bNode* %59, i32 0, i32 7, !dbg !6552
  %60 = load i32, i32* %flag101, align 8, !dbg !6552
  %and102 = and i32 %60, 64, !dbg !6553
  %tobool103 = icmp ne i32 %and102, 0, !dbg !6553
  br i1 %tobool103, label %if.then104, label %if.end112, !dbg !6554

if.then104:                                       ; preds = %if.then100
  %61 = load i32, i32* %output90, align 4, !dbg !6555
  %inc105 = add nsw i32 %61, 1, !dbg !6555
  store i32 %inc105, i32* %output90, align 4, !dbg !6555
  %62 = load i32, i32* %output90, align 4, !dbg !6557
  %cmp106 = icmp sgt i32 %62, 1, !dbg !6559
  br i1 %cmp106, label %if.then108, label %if.end111, !dbg !6560

if.then108:                                       ; preds = %if.then104
  %63 = load %struct.bNode*, %struct.bNode** %tnode89, align 8, !dbg !6561
  %flag109 = getelementptr inbounds %struct.bNode, %struct.bNode* %63, i32 0, i32 7, !dbg !6562
  %64 = load i32, i32* %flag109, align 8, !dbg !6563
  %and110 = and i32 %64, -65, !dbg !6563
  store i32 %and110, i32* %flag109, align 8, !dbg !6563
  br label %if.end111, !dbg !6561

if.end111:                                        ; preds = %if.then108, %if.then104
  br label %if.end112, !dbg !6564

if.end112:                                        ; preds = %if.end111, %if.then100
  br label %if.end113, !dbg !6565

if.end113:                                        ; preds = %if.end112, %for.body95
  br label %for.inc114, !dbg !6566

for.inc114:                                       ; preds = %if.end113
  %65 = load %struct.bNode*, %struct.bNode** %tnode89, align 8, !dbg !6567
  %next115 = getelementptr inbounds %struct.bNode, %struct.bNode* %65, i32 0, i32 0, !dbg !6568
  %66 = load %struct.bNode*, %struct.bNode** %next115, align 8, !dbg !6568
  store %struct.bNode* %66, %struct.bNode** %tnode89, align 8, !dbg !6569
  br label %for.cond93, !dbg !6570, !llvm.loop !6571

for.end116:                                       ; preds = %for.cond93
  %67 = load i32, i32* %output90, align 4, !dbg !6573
  %cmp117 = icmp eq i32 %67, 0, !dbg !6575
  br i1 %cmp117, label %if.then119, label %if.end122, !dbg !6576

if.then119:                                       ; preds = %for.end116
  %68 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6577
  %flag120 = getelementptr inbounds %struct.bNode, %struct.bNode* %68, i32 0, i32 7, !dbg !6578
  %69 = load i32, i32* %flag120, align 8, !dbg !6579
  %or121 = or i32 %69, 64, !dbg !6579
  store i32 %or121, i32* %flag120, align 8, !dbg !6579
  br label %if.end122, !dbg !6577

if.end122:                                        ; preds = %if.then119, %for.end116
  br label %if.end123, !dbg !6580

if.end123:                                        ; preds = %if.end122, %if.end83
  br label %for.inc124, !dbg !6581

for.inc124:                                       ; preds = %if.end123, %if.then5
  %70 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6582
  %next125 = getelementptr inbounds %struct.bNode, %struct.bNode* %70, i32 0, i32 0, !dbg !6583
  %71 = load %struct.bNode*, %struct.bNode** %next125, align 8, !dbg !6583
  store %struct.bNode* %71, %struct.bNode** %node, align 8, !dbg !6584
  br label %for.cond, !dbg !6585, !llvm.loop !6586

for.end126:                                       ; preds = %for.cond
  ret void, !dbg !6588
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeTree* @ntreeFromID(%struct.ID* %id) #0 !dbg !6589 {
entry:
  %retval = alloca %struct.bNodeTree*, align 8
  %id.addr = alloca %struct.ID*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !6592, metadata !DIExpression()), !dbg !6593
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !6594
  %name = getelementptr inbounds %struct.ID, %struct.ID* %0, i32 0, i32 4, !dbg !6594
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !6594
  %1 = bitcast i8* %arraydecay to i16*, !dbg !6594
  %2 = load i16, i16* %1, align 8, !dbg !6594
  %conv = sext i16 %2 to i32, !dbg !6594
  switch i32 %conv, label %sw.default [
    i32 16717, label %sw.bb
    i32 16716, label %sw.bb1
    i32 20311, label %sw.bb3
    i32 17748, label %sw.bb5
    i32 17235, label %sw.bb7
    i32 21324, label %sw.bb9
  ], !dbg !6595

sw.bb:                                            ; preds = %entry
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !6596
  %4 = bitcast %struct.ID* %3 to %struct.Material*, !dbg !6598
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %4, i32 0, i32 103, !dbg !6598
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !6598
  store %struct.bNodeTree* %5, %struct.bNodeTree** %retval, align 8, !dbg !6599
  br label %return, !dbg !6599

sw.bb1:                                           ; preds = %entry
  %6 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !6600
  %7 = bitcast %struct.ID* %6 to %struct.Lamp*, !dbg !6601
  %nodetree2 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %7, i32 0, i32 74, !dbg !6601
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree2, align 8, !dbg !6601
  store %struct.bNodeTree* %8, %struct.bNodeTree** %retval, align 8, !dbg !6602
  br label %return, !dbg !6602

sw.bb3:                                           ; preds = %entry
  %9 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !6603
  %10 = bitcast %struct.ID* %9 to %struct.World*, !dbg !6604
  %nodetree4 = getelementptr inbounds %struct.World, %struct.World* %10, i32 0, i32 75, !dbg !6604
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree4, align 8, !dbg !6604
  store %struct.bNodeTree* %11, %struct.bNodeTree** %retval, align 8, !dbg !6605
  br label %return, !dbg !6605

sw.bb5:                                           ; preds = %entry
  %12 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !6606
  %13 = bitcast %struct.ID* %12 to %struct.Tex*, !dbg !6607
  %nodetree6 = getelementptr inbounds %struct.Tex, %struct.Tex* %13, i32 0, i32 52, !dbg !6607
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree6, align 8, !dbg !6607
  store %struct.bNodeTree* %14, %struct.bNodeTree** %retval, align 8, !dbg !6608
  br label %return, !dbg !6608

sw.bb7:                                           ; preds = %entry
  %15 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !6609
  %16 = bitcast %struct.ID* %15 to %struct.Scene*, !dbg !6610
  %nodetree8 = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 18, !dbg !6610
  %17 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree8, align 8, !dbg !6610
  store %struct.bNodeTree* %17, %struct.bNodeTree** %retval, align 8, !dbg !6611
  br label %return, !dbg !6611

sw.bb9:                                           ; preds = %entry
  %18 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !6612
  %19 = bitcast %struct.ID* %18 to %struct.FreestyleLineStyle*, !dbg !6613
  %nodetree10 = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %19, i32 0, i32 40, !dbg !6613
  %20 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree10, align 8, !dbg !6613
  store %struct.bNodeTree* %20, %struct.bNodeTree** %retval, align 8, !dbg !6614
  br label %return, !dbg !6614

sw.default:                                       ; preds = %entry
  store %struct.bNodeTree* null, %struct.bNodeTree** %retval, align 8, !dbg !6615
  br label %return, !dbg !6615

return:                                           ; preds = %sw.default, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %21 = load %struct.bNodeTree*, %struct.bNodeTree** %retval, align 8, !dbg !6616
  ret %struct.bNodeTree* %21, !dbg !6616
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeMakeLocal(%struct.bNodeTree* %ntree) #0 !dbg !6617 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %bmain = alloca %struct.Main*, align 8
  %lib = alloca i8, align 1
  %local = alloca i8, align 1
  %_nstore = alloca %struct.NodeTreeIterStore, align 8
  %tntree = alloca %struct.bNodeTree*, align 8
  %owner_id = alloca %struct.ID*, align 8
  %node = alloca %struct.bNode*, align 8
  %newtree = alloca %struct.bNodeTree*, align 8
  %_nstore34 = alloca %struct.NodeTreeIterStore, align 8
  %tntree35 = alloca %struct.bNodeTree*, align 8
  %owner_id36 = alloca %struct.ID*, align 8
  %node45 = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !6618, metadata !DIExpression()), !dbg !6619
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !6620, metadata !DIExpression()), !dbg !6621
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !6622
  store %struct.Main* %0, %struct.Main** %bmain, align 8, !dbg !6621
  call void @llvm.dbg.declare(metadata i8* %lib, metadata !6623, metadata !DIExpression()), !dbg !6624
  store i8 0, i8* %lib, align 1, !dbg !6624
  call void @llvm.dbg.declare(metadata i8* %local, metadata !6625, metadata !DIExpression()), !dbg !6626
  store i8 0, i8* %local, align 1, !dbg !6626
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6627
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 0, !dbg !6629
  %lib1 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !6630
  %2 = load %struct.Library*, %struct.Library** %lib1, align 8, !dbg !6630
  %cmp = icmp eq %struct.Library* %2, null, !dbg !6631
  br i1 %cmp, label %if.then, label %if.end, !dbg !6632

if.then:                                          ; preds = %entry
  br label %if.end72, !dbg !6633

if.end:                                           ; preds = %entry
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6634
  %id2 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 0, !dbg !6636
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id2, i32 0, i32 6, !dbg !6637
  %4 = load i32, i32* %us, align 4, !dbg !6637
  %cmp3 = icmp eq i32 %4, 1, !dbg !6638
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6639

if.then4:                                         ; preds = %if.end
  %5 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !6640
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6642
  %7 = bitcast %struct.bNodeTree* %6 to %struct.ID*, !dbg !6643
  call void @id_clear_lib_data(%struct.Main* %5, %struct.ID* %7), !dbg !6644
  br label %if.end72, !dbg !6645

if.end5:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore* %_nstore, metadata !6646, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %tntree, metadata !6649, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.declare(metadata %struct.ID** %owner_id, metadata !6650, metadata !DIExpression()), !dbg !6648
  %8 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !6648
  call void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore* %_nstore, %struct.Main* %8), !dbg !6648
  br label %while.cond, !dbg !6648

while.cond:                                       ; preds = %if.end19, %if.end5
  %call = call zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore* %_nstore, %struct.bNodeTree** %tntree, %struct.ID** %owner_id), !dbg !6648
  %conv = zext i8 %call to i32, !dbg !6648
  %cmp6 = icmp eq i32 %conv, 1, !dbg !6648
  br i1 %cmp6, label %while.body, label %while.end, !dbg !6648

while.body:                                       ; preds = %while.cond
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %tntree, align 8, !dbg !6651
  %tobool = icmp ne %struct.bNodeTree* %9, null, !dbg !6651
  br i1 %tobool, label %if.then8, label %if.end19, !dbg !6654

if.then8:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !6655, metadata !DIExpression()), !dbg !6658
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %tntree, align 8, !dbg !6659
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %10, i32 0, i32 7, !dbg !6661
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !6662
  %11 = load i8*, i8** %first, align 8, !dbg !6662
  %12 = bitcast i8* %11 to %struct.bNode*, !dbg !6659
  store %struct.bNode* %12, %struct.bNode** %node, align 8, !dbg !6663
  br label %for.cond, !dbg !6664

for.cond:                                         ; preds = %for.inc, %if.then8
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6665
  %tobool9 = icmp ne %struct.bNode* %13, null, !dbg !6667
  br i1 %tobool9, label %for.body, label %for.end, !dbg !6667

for.body:                                         ; preds = %for.cond
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6668
  %id10 = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 20, !dbg !6671
  %15 = load %struct.ID*, %struct.ID** %id10, align 8, !dbg !6671
  %16 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6672
  %17 = bitcast %struct.bNodeTree* %16 to %struct.ID*, !dbg !6673
  %cmp11 = icmp eq %struct.ID* %15, %17, !dbg !6674
  br i1 %cmp11, label %if.then13, label %if.end18, !dbg !6675

if.then13:                                        ; preds = %for.body
  %18 = load %struct.ID*, %struct.ID** %owner_id, align 8, !dbg !6676
  %lib14 = getelementptr inbounds %struct.ID, %struct.ID* %18, i32 0, i32 3, !dbg !6679
  %19 = load %struct.Library*, %struct.Library** %lib14, align 8, !dbg !6679
  %tobool15 = icmp ne %struct.Library* %19, null, !dbg !6676
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !6680

if.then16:                                        ; preds = %if.then13
  store i8 1, i8* %lib, align 1, !dbg !6681
  br label %if.end17, !dbg !6682

if.else:                                          ; preds = %if.then13
  store i8 1, i8* %local, align 1, !dbg !6683
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then16
  br label %if.end18, !dbg !6684

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !6685

for.inc:                                          ; preds = %if.end18
  %20 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !6686
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 0, !dbg !6687
  %21 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !6687
  store %struct.bNode* %21, %struct.bNode** %node, align 8, !dbg !6688
  br label %for.cond, !dbg !6689, !llvm.loop !6690

for.end:                                          ; preds = %for.cond
  br label %if.end19, !dbg !6692

if.end19:                                         ; preds = %for.end, %while.body
  br label %while.cond, !dbg !6648, !llvm.loop !6693

while.end:                                        ; preds = %while.cond
  %22 = load i8, i8* %local, align 1, !dbg !6695
  %conv20 = zext i8 %22 to i32, !dbg !6695
  %tobool21 = icmp ne i32 %conv20, 0, !dbg !6695
  br i1 %tobool21, label %land.lhs.true, label %if.else24, !dbg !6697

land.lhs.true:                                    ; preds = %while.end
  %23 = load i8, i8* %lib, align 1, !dbg !6698
  %tobool22 = icmp ne i8 %23, 0, !dbg !6698
  br i1 %tobool22, label %if.else24, label %if.then23, !dbg !6699

if.then23:                                        ; preds = %land.lhs.true
  %24 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !6700
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6702
  %26 = bitcast %struct.bNodeTree* %25 to %struct.ID*, !dbg !6703
  call void @id_clear_lib_data(%struct.Main* %24, %struct.ID* %26), !dbg !6704
  br label %if.end72, !dbg !6705

if.else24:                                        ; preds = %land.lhs.true, %while.end
  %27 = load i8, i8* %local, align 1, !dbg !6706
  %conv25 = zext i8 %27 to i32, !dbg !6706
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !6706
  br i1 %tobool26, label %land.lhs.true27, label %if.end71, !dbg !6708

land.lhs.true27:                                  ; preds = %if.else24
  %28 = load i8, i8* %lib, align 1, !dbg !6709
  %conv28 = zext i8 %28 to i32, !dbg !6709
  %tobool29 = icmp ne i32 %conv28, 0, !dbg !6709
  br i1 %tobool29, label %if.then30, label %if.end71, !dbg !6710

if.then30:                                        ; preds = %land.lhs.true27
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %newtree, metadata !6711, metadata !DIExpression()), !dbg !6713
  %29 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6714
  %call31 = call %struct.bNodeTree* @ntreeCopyTree(%struct.bNodeTree* %29), !dbg !6715
  store %struct.bNodeTree* %call31, %struct.bNodeTree** %newtree, align 8, !dbg !6713
  %30 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !6716
  %id32 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %30, i32 0, i32 0, !dbg !6717
  %us33 = getelementptr inbounds %struct.ID, %struct.ID* %id32, i32 0, i32 6, !dbg !6718
  store i32 0, i32* %us33, align 4, !dbg !6719
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore* %_nstore34, metadata !6720, metadata !DIExpression()), !dbg !6722
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %tntree35, metadata !6723, metadata !DIExpression()), !dbg !6722
  call void @llvm.dbg.declare(metadata %struct.ID** %owner_id36, metadata !6724, metadata !DIExpression()), !dbg !6722
  %31 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !6722
  call void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore* %_nstore34, %struct.Main* %31), !dbg !6722
  br label %while.cond37, !dbg !6722

while.cond37:                                     ; preds = %if.end69, %if.then30
  %call38 = call zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore* %_nstore34, %struct.bNodeTree** %tntree35, %struct.ID** %owner_id36), !dbg !6722
  %conv39 = zext i8 %call38 to i32, !dbg !6722
  %cmp40 = icmp eq i32 %conv39, 1, !dbg !6722
  br i1 %cmp40, label %while.body42, label %while.end70, !dbg !6722

while.body42:                                     ; preds = %while.cond37
  %32 = load %struct.bNodeTree*, %struct.bNodeTree** %tntree35, align 8, !dbg !6725
  %tobool43 = icmp ne %struct.bNodeTree* %32, null, !dbg !6725
  br i1 %tobool43, label %if.then44, label %if.end69, !dbg !6728

if.then44:                                        ; preds = %while.body42
  call void @llvm.dbg.declare(metadata %struct.bNode** %node45, metadata !6729, metadata !DIExpression()), !dbg !6732
  %33 = load %struct.bNodeTree*, %struct.bNodeTree** %tntree35, align 8, !dbg !6733
  %nodes46 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %33, i32 0, i32 7, !dbg !6735
  %first47 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes46, i32 0, i32 0, !dbg !6736
  %34 = load i8*, i8** %first47, align 8, !dbg !6736
  %35 = bitcast i8* %34 to %struct.bNode*, !dbg !6733
  store %struct.bNode* %35, %struct.bNode** %node45, align 8, !dbg !6737
  br label %for.cond48, !dbg !6738

for.cond48:                                       ; preds = %for.inc66, %if.then44
  %36 = load %struct.bNode*, %struct.bNode** %node45, align 8, !dbg !6739
  %tobool49 = icmp ne %struct.bNode* %36, null, !dbg !6741
  br i1 %tobool49, label %for.body50, label %for.end68, !dbg !6741

for.body50:                                       ; preds = %for.cond48
  %37 = load %struct.bNode*, %struct.bNode** %node45, align 8, !dbg !6742
  %id51 = getelementptr inbounds %struct.bNode, %struct.bNode* %37, i32 0, i32 20, !dbg !6745
  %38 = load %struct.ID*, %struct.ID** %id51, align 8, !dbg !6745
  %39 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6746
  %40 = bitcast %struct.bNodeTree* %39 to %struct.ID*, !dbg !6747
  %cmp52 = icmp eq %struct.ID* %38, %40, !dbg !6748
  br i1 %cmp52, label %if.then54, label %if.end65, !dbg !6749

if.then54:                                        ; preds = %for.body50
  %41 = load %struct.ID*, %struct.ID** %owner_id36, align 8, !dbg !6750
  %lib55 = getelementptr inbounds %struct.ID, %struct.ID* %41, i32 0, i32 3, !dbg !6753
  %42 = load %struct.Library*, %struct.Library** %lib55, align 8, !dbg !6753
  %cmp56 = icmp eq %struct.Library* %42, null, !dbg !6754
  br i1 %cmp56, label %if.then58, label %if.end64, !dbg !6755

if.then58:                                        ; preds = %if.then54
  %43 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !6756
  %44 = bitcast %struct.bNodeTree* %43 to %struct.ID*, !dbg !6758
  %45 = load %struct.bNode*, %struct.bNode** %node45, align 8, !dbg !6759
  %id59 = getelementptr inbounds %struct.bNode, %struct.bNode* %45, i32 0, i32 20, !dbg !6760
  store %struct.ID* %44, %struct.ID** %id59, align 8, !dbg !6761
  %46 = load %struct.bNodeTree*, %struct.bNodeTree** %newtree, align 8, !dbg !6762
  %id60 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %46, i32 0, i32 0, !dbg !6763
  %us61 = getelementptr inbounds %struct.ID, %struct.ID* %id60, i32 0, i32 6, !dbg !6764
  %47 = load i32, i32* %us61, align 4, !dbg !6765
  %inc = add nsw i32 %47, 1, !dbg !6765
  store i32 %inc, i32* %us61, align 4, !dbg !6765
  %48 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !6766
  %id62 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %48, i32 0, i32 0, !dbg !6767
  %us63 = getelementptr inbounds %struct.ID, %struct.ID* %id62, i32 0, i32 6, !dbg !6768
  %49 = load i32, i32* %us63, align 4, !dbg !6769
  %dec = add nsw i32 %49, -1, !dbg !6769
  store i32 %dec, i32* %us63, align 4, !dbg !6769
  br label %if.end64, !dbg !6770

if.end64:                                         ; preds = %if.then58, %if.then54
  br label %if.end65, !dbg !6771

if.end65:                                         ; preds = %if.end64, %for.body50
  br label %for.inc66, !dbg !6772

for.inc66:                                        ; preds = %if.end65
  %50 = load %struct.bNode*, %struct.bNode** %node45, align 8, !dbg !6773
  %next67 = getelementptr inbounds %struct.bNode, %struct.bNode* %50, i32 0, i32 0, !dbg !6774
  %51 = load %struct.bNode*, %struct.bNode** %next67, align 8, !dbg !6774
  store %struct.bNode* %51, %struct.bNode** %node45, align 8, !dbg !6775
  br label %for.cond48, !dbg !6776, !llvm.loop !6777

for.end68:                                        ; preds = %for.cond48
  br label %if.end69, !dbg !6779

if.end69:                                         ; preds = %for.end68, %while.body42
  br label %while.cond37, !dbg !6722, !llvm.loop !6780

while.end70:                                      ; preds = %while.cond37
  br label %if.end71, !dbg !6782

if.end71:                                         ; preds = %while.end70, %land.lhs.true27, %if.else24
  br label %if.end72

if.end72:                                         ; preds = %if.then, %if.then4, %if.end71, %if.then23
  ret void, !dbg !6783
}

declare dso_local void @id_clear_lib_data(%struct.Main*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore* %ntreeiter, %struct.Main* %bmain) #0 !dbg !6784 {
entry:
  %ntreeiter.addr = alloca %struct.NodeTreeIterStore*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  store %struct.NodeTreeIterStore* %ntreeiter, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore** %ntreeiter.addr, metadata !6788, metadata !DIExpression()), !dbg !6789
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !6790, metadata !DIExpression()), !dbg !6791
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6792
  %nodetree = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 35, !dbg !6793
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodetree, i32 0, i32 0, !dbg !6794
  %1 = load i8*, i8** %first, align 8, !dbg !6794
  %2 = bitcast i8* %1 to %struct.bNodeTree*, !dbg !6792
  %3 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6795
  %ngroup = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %3, i32 0, i32 0, !dbg !6796
  store %struct.bNodeTree* %2, %struct.bNodeTree** %ngroup, align 8, !dbg !6797
  %4 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6798
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %4, i32 0, i32 11, !dbg !6799
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene, i32 0, i32 0, !dbg !6800
  %5 = load i8*, i8** %first1, align 8, !dbg !6800
  %6 = bitcast i8* %5 to %struct.Scene*, !dbg !6798
  %7 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6801
  %scene2 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %7, i32 0, i32 1, !dbg !6802
  store %struct.Scene* %6, %struct.Scene** %scene2, align 8, !dbg !6803
  %8 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6804
  %mat = getelementptr inbounds %struct.Main, %struct.Main* %8, i32 0, i32 17, !dbg !6805
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mat, i32 0, i32 0, !dbg !6806
  %9 = load i8*, i8** %first3, align 8, !dbg !6806
  %10 = bitcast i8* %9 to %struct.Material*, !dbg !6804
  %11 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6807
  %mat4 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %11, i32 0, i32 2, !dbg !6808
  store %struct.Material* %10, %struct.Material** %mat4, align 8, !dbg !6809
  %12 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6810
  %tex = getelementptr inbounds %struct.Main, %struct.Main* %12, i32 0, i32 18, !dbg !6811
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %tex, i32 0, i32 0, !dbg !6812
  %13 = load i8*, i8** %first5, align 8, !dbg !6812
  %14 = bitcast i8* %13 to %struct.Tex*, !dbg !6810
  %15 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6813
  %tex6 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %15, i32 0, i32 3, !dbg !6814
  store %struct.Tex* %14, %struct.Tex** %tex6, align 8, !dbg !6815
  %16 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6816
  %lamp = getelementptr inbounds %struct.Main, %struct.Main* %16, i32 0, i32 21, !dbg !6817
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lamp, i32 0, i32 0, !dbg !6818
  %17 = load i8*, i8** %first7, align 8, !dbg !6818
  %18 = bitcast i8* %17 to %struct.Lamp*, !dbg !6816
  %19 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6819
  %lamp8 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %19, i32 0, i32 4, !dbg !6820
  store %struct.Lamp* %18, %struct.Lamp** %lamp8, align 8, !dbg !6821
  %20 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6822
  %world = getelementptr inbounds %struct.Main, %struct.Main* %20, i32 0, i32 25, !dbg !6823
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %world, i32 0, i32 0, !dbg !6824
  %21 = load i8*, i8** %first9, align 8, !dbg !6824
  %22 = bitcast i8* %21 to %struct.World*, !dbg !6822
  %23 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6825
  %world10 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %23, i32 0, i32 5, !dbg !6826
  store %struct.World* %22, %struct.World** %world10, align 8, !dbg !6827
  %24 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6828
  %linestyle = getelementptr inbounds %struct.Main, %struct.Main* %24, i32 0, i32 44, !dbg !6829
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %linestyle, i32 0, i32 0, !dbg !6830
  %25 = load i8*, i8** %first11, align 8, !dbg !6830
  %26 = bitcast i8* %25 to %struct.FreestyleLineStyle*, !dbg !6828
  %27 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6831
  %linestyle12 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %27, i32 0, i32 6, !dbg !6832
  store %struct.FreestyleLineStyle* %26, %struct.FreestyleLineStyle** %linestyle12, align 8, !dbg !6833
  ret void, !dbg !6834
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore* %ntreeiter, %struct.bNodeTree** %r_nodetree, %struct.ID** %r_id) #0 !dbg !6835 {
entry:
  %retval = alloca i8, align 1
  %ntreeiter.addr = alloca %struct.NodeTreeIterStore*, align 8
  %r_nodetree.addr = alloca %struct.bNodeTree**, align 8
  %r_id.addr = alloca %struct.ID**, align 8
  store %struct.NodeTreeIterStore* %ntreeiter, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore** %ntreeiter.addr, metadata !6839, metadata !DIExpression()), !dbg !6840
  store %struct.bNodeTree** %r_nodetree, %struct.bNodeTree*** %r_nodetree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree*** %r_nodetree.addr, metadata !6841, metadata !DIExpression()), !dbg !6842
  store %struct.ID** %r_id, %struct.ID*** %r_id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID*** %r_id.addr, metadata !6843, metadata !DIExpression()), !dbg !6844
  %0 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6845
  %ngroup = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %0, i32 0, i32 0, !dbg !6847
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ngroup, align 8, !dbg !6847
  %tobool = icmp ne %struct.bNodeTree* %1, null, !dbg !6845
  br i1 %tobool, label %if.then, label %if.else, !dbg !6848

if.then:                                          ; preds = %entry
  %2 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6849
  %ngroup1 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %2, i32 0, i32 0, !dbg !6851
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ngroup1, align 8, !dbg !6851
  %4 = load %struct.bNodeTree**, %struct.bNodeTree*** %r_nodetree.addr, align 8, !dbg !6852
  store %struct.bNodeTree* %3, %struct.bNodeTree** %4, align 8, !dbg !6853
  %5 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6854
  %ngroup2 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %5, i32 0, i32 0, !dbg !6855
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ngroup2, align 8, !dbg !6855
  %7 = bitcast %struct.bNodeTree* %6 to %struct.ID*, !dbg !6856
  %8 = load %struct.ID**, %struct.ID*** %r_id.addr, align 8, !dbg !6857
  store %struct.ID* %7, %struct.ID** %8, align 8, !dbg !6858
  %9 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6859
  %ngroup3 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %9, i32 0, i32 0, !dbg !6860
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %ngroup3, align 8, !dbg !6860
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %10, i32 0, i32 0, !dbg !6861
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !6862
  %11 = load i8*, i8** %next, align 8, !dbg !6862
  %12 = bitcast i8* %11 to %struct.bNodeTree*, !dbg !6859
  %13 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6863
  %ngroup4 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %13, i32 0, i32 0, !dbg !6864
  store %struct.bNodeTree* %12, %struct.bNodeTree** %ngroup4, align 8, !dbg !6865
  br label %if.end69, !dbg !6866

if.else:                                          ; preds = %entry
  %14 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6867
  %scene = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %14, i32 0, i32 1, !dbg !6869
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6869
  %tobool5 = icmp ne %struct.Scene* %15, null, !dbg !6867
  br i1 %tobool5, label %if.then6, label %if.else13, !dbg !6870

if.then6:                                         ; preds = %if.else
  %16 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6871
  %scene7 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %16, i32 0, i32 1, !dbg !6873
  %17 = load %struct.Scene*, %struct.Scene** %scene7, align 8, !dbg !6873
  %nodetree = getelementptr inbounds %struct.Scene, %struct.Scene* %17, i32 0, i32 18, !dbg !6874
  %18 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !6874
  %19 = load %struct.bNodeTree**, %struct.bNodeTree*** %r_nodetree.addr, align 8, !dbg !6875
  store %struct.bNodeTree* %18, %struct.bNodeTree** %19, align 8, !dbg !6876
  %20 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6877
  %scene8 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %20, i32 0, i32 1, !dbg !6878
  %21 = load %struct.Scene*, %struct.Scene** %scene8, align 8, !dbg !6878
  %22 = bitcast %struct.Scene* %21 to %struct.ID*, !dbg !6879
  %23 = load %struct.ID**, %struct.ID*** %r_id.addr, align 8, !dbg !6880
  store %struct.ID* %22, %struct.ID** %23, align 8, !dbg !6881
  %24 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6882
  %scene9 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %24, i32 0, i32 1, !dbg !6883
  %25 = load %struct.Scene*, %struct.Scene** %scene9, align 8, !dbg !6883
  %id10 = getelementptr inbounds %struct.Scene, %struct.Scene* %25, i32 0, i32 0, !dbg !6884
  %next11 = getelementptr inbounds %struct.ID, %struct.ID* %id10, i32 0, i32 0, !dbg !6885
  %26 = load i8*, i8** %next11, align 8, !dbg !6885
  %27 = bitcast i8* %26 to %struct.Scene*, !dbg !6882
  %28 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6886
  %scene12 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %28, i32 0, i32 1, !dbg !6887
  store %struct.Scene* %27, %struct.Scene** %scene12, align 8, !dbg !6888
  br label %if.end68, !dbg !6889

if.else13:                                        ; preds = %if.else
  %29 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6890
  %mat = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %29, i32 0, i32 2, !dbg !6892
  %30 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !6892
  %tobool14 = icmp ne %struct.Material* %30, null, !dbg !6890
  br i1 %tobool14, label %if.then15, label %if.else23, !dbg !6893

if.then15:                                        ; preds = %if.else13
  %31 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6894
  %mat16 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %31, i32 0, i32 2, !dbg !6896
  %32 = load %struct.Material*, %struct.Material** %mat16, align 8, !dbg !6896
  %nodetree17 = getelementptr inbounds %struct.Material, %struct.Material* %32, i32 0, i32 103, !dbg !6897
  %33 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree17, align 8, !dbg !6897
  %34 = load %struct.bNodeTree**, %struct.bNodeTree*** %r_nodetree.addr, align 8, !dbg !6898
  store %struct.bNodeTree* %33, %struct.bNodeTree** %34, align 8, !dbg !6899
  %35 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6900
  %mat18 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %35, i32 0, i32 2, !dbg !6901
  %36 = load %struct.Material*, %struct.Material** %mat18, align 8, !dbg !6901
  %37 = bitcast %struct.Material* %36 to %struct.ID*, !dbg !6902
  %38 = load %struct.ID**, %struct.ID*** %r_id.addr, align 8, !dbg !6903
  store %struct.ID* %37, %struct.ID** %38, align 8, !dbg !6904
  %39 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6905
  %mat19 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %39, i32 0, i32 2, !dbg !6906
  %40 = load %struct.Material*, %struct.Material** %mat19, align 8, !dbg !6906
  %id20 = getelementptr inbounds %struct.Material, %struct.Material* %40, i32 0, i32 0, !dbg !6907
  %next21 = getelementptr inbounds %struct.ID, %struct.ID* %id20, i32 0, i32 0, !dbg !6908
  %41 = load i8*, i8** %next21, align 8, !dbg !6908
  %42 = bitcast i8* %41 to %struct.Material*, !dbg !6905
  %43 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6909
  %mat22 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %43, i32 0, i32 2, !dbg !6910
  store %struct.Material* %42, %struct.Material** %mat22, align 8, !dbg !6911
  br label %if.end67, !dbg !6912

if.else23:                                        ; preds = %if.else13
  %44 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6913
  %tex = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %44, i32 0, i32 3, !dbg !6915
  %45 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !6915
  %tobool24 = icmp ne %struct.Tex* %45, null, !dbg !6913
  br i1 %tobool24, label %if.then25, label %if.else33, !dbg !6916

if.then25:                                        ; preds = %if.else23
  %46 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6917
  %tex26 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %46, i32 0, i32 3, !dbg !6919
  %47 = load %struct.Tex*, %struct.Tex** %tex26, align 8, !dbg !6919
  %nodetree27 = getelementptr inbounds %struct.Tex, %struct.Tex* %47, i32 0, i32 52, !dbg !6920
  %48 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree27, align 8, !dbg !6920
  %49 = load %struct.bNodeTree**, %struct.bNodeTree*** %r_nodetree.addr, align 8, !dbg !6921
  store %struct.bNodeTree* %48, %struct.bNodeTree** %49, align 8, !dbg !6922
  %50 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6923
  %tex28 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %50, i32 0, i32 3, !dbg !6924
  %51 = load %struct.Tex*, %struct.Tex** %tex28, align 8, !dbg !6924
  %52 = bitcast %struct.Tex* %51 to %struct.ID*, !dbg !6925
  %53 = load %struct.ID**, %struct.ID*** %r_id.addr, align 8, !dbg !6926
  store %struct.ID* %52, %struct.ID** %53, align 8, !dbg !6927
  %54 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6928
  %tex29 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %54, i32 0, i32 3, !dbg !6929
  %55 = load %struct.Tex*, %struct.Tex** %tex29, align 8, !dbg !6929
  %id30 = getelementptr inbounds %struct.Tex, %struct.Tex* %55, i32 0, i32 0, !dbg !6930
  %next31 = getelementptr inbounds %struct.ID, %struct.ID* %id30, i32 0, i32 0, !dbg !6931
  %56 = load i8*, i8** %next31, align 8, !dbg !6931
  %57 = bitcast i8* %56 to %struct.Tex*, !dbg !6928
  %58 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6932
  %tex32 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %58, i32 0, i32 3, !dbg !6933
  store %struct.Tex* %57, %struct.Tex** %tex32, align 8, !dbg !6934
  br label %if.end66, !dbg !6935

if.else33:                                        ; preds = %if.else23
  %59 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6936
  %lamp = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %59, i32 0, i32 4, !dbg !6938
  %60 = load %struct.Lamp*, %struct.Lamp** %lamp, align 8, !dbg !6938
  %tobool34 = icmp ne %struct.Lamp* %60, null, !dbg !6936
  br i1 %tobool34, label %if.then35, label %if.else43, !dbg !6939

if.then35:                                        ; preds = %if.else33
  %61 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6940
  %lamp36 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %61, i32 0, i32 4, !dbg !6942
  %62 = load %struct.Lamp*, %struct.Lamp** %lamp36, align 8, !dbg !6942
  %nodetree37 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %62, i32 0, i32 74, !dbg !6943
  %63 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree37, align 8, !dbg !6943
  %64 = load %struct.bNodeTree**, %struct.bNodeTree*** %r_nodetree.addr, align 8, !dbg !6944
  store %struct.bNodeTree* %63, %struct.bNodeTree** %64, align 8, !dbg !6945
  %65 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6946
  %lamp38 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %65, i32 0, i32 4, !dbg !6947
  %66 = load %struct.Lamp*, %struct.Lamp** %lamp38, align 8, !dbg !6947
  %67 = bitcast %struct.Lamp* %66 to %struct.ID*, !dbg !6948
  %68 = load %struct.ID**, %struct.ID*** %r_id.addr, align 8, !dbg !6949
  store %struct.ID* %67, %struct.ID** %68, align 8, !dbg !6950
  %69 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6951
  %lamp39 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %69, i32 0, i32 4, !dbg !6952
  %70 = load %struct.Lamp*, %struct.Lamp** %lamp39, align 8, !dbg !6952
  %id40 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %70, i32 0, i32 0, !dbg !6953
  %next41 = getelementptr inbounds %struct.ID, %struct.ID* %id40, i32 0, i32 0, !dbg !6954
  %71 = load i8*, i8** %next41, align 8, !dbg !6954
  %72 = bitcast i8* %71 to %struct.Lamp*, !dbg !6951
  %73 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6955
  %lamp42 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %73, i32 0, i32 4, !dbg !6956
  store %struct.Lamp* %72, %struct.Lamp** %lamp42, align 8, !dbg !6957
  br label %if.end65, !dbg !6958

if.else43:                                        ; preds = %if.else33
  %74 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6959
  %world = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %74, i32 0, i32 5, !dbg !6961
  %75 = load %struct.World*, %struct.World** %world, align 8, !dbg !6961
  %tobool44 = icmp ne %struct.World* %75, null, !dbg !6959
  br i1 %tobool44, label %if.then45, label %if.else53, !dbg !6962

if.then45:                                        ; preds = %if.else43
  %76 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6963
  %world46 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %76, i32 0, i32 5, !dbg !6965
  %77 = load %struct.World*, %struct.World** %world46, align 8, !dbg !6965
  %nodetree47 = getelementptr inbounds %struct.World, %struct.World* %77, i32 0, i32 75, !dbg !6966
  %78 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree47, align 8, !dbg !6966
  %79 = load %struct.bNodeTree**, %struct.bNodeTree*** %r_nodetree.addr, align 8, !dbg !6967
  store %struct.bNodeTree* %78, %struct.bNodeTree** %79, align 8, !dbg !6968
  %80 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6969
  %world48 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %80, i32 0, i32 5, !dbg !6970
  %81 = load %struct.World*, %struct.World** %world48, align 8, !dbg !6970
  %82 = bitcast %struct.World* %81 to %struct.ID*, !dbg !6971
  %83 = load %struct.ID**, %struct.ID*** %r_id.addr, align 8, !dbg !6972
  store %struct.ID* %82, %struct.ID** %83, align 8, !dbg !6973
  %84 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6974
  %world49 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %84, i32 0, i32 5, !dbg !6975
  %85 = load %struct.World*, %struct.World** %world49, align 8, !dbg !6975
  %id50 = getelementptr inbounds %struct.World, %struct.World* %85, i32 0, i32 0, !dbg !6976
  %next51 = getelementptr inbounds %struct.ID, %struct.ID* %id50, i32 0, i32 0, !dbg !6977
  %86 = load i8*, i8** %next51, align 8, !dbg !6977
  %87 = bitcast i8* %86 to %struct.World*, !dbg !6974
  %88 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6978
  %world52 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %88, i32 0, i32 5, !dbg !6979
  store %struct.World* %87, %struct.World** %world52, align 8, !dbg !6980
  br label %if.end64, !dbg !6981

if.else53:                                        ; preds = %if.else43
  %89 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6982
  %linestyle = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %89, i32 0, i32 6, !dbg !6984
  %90 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !6984
  %tobool54 = icmp ne %struct.FreestyleLineStyle* %90, null, !dbg !6982
  br i1 %tobool54, label %if.then55, label %if.else63, !dbg !6985

if.then55:                                        ; preds = %if.else53
  %91 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6986
  %linestyle56 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %91, i32 0, i32 6, !dbg !6988
  %92 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle56, align 8, !dbg !6988
  %nodetree57 = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %92, i32 0, i32 40, !dbg !6989
  %93 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree57, align 8, !dbg !6989
  %94 = load %struct.bNodeTree**, %struct.bNodeTree*** %r_nodetree.addr, align 8, !dbg !6990
  store %struct.bNodeTree* %93, %struct.bNodeTree** %94, align 8, !dbg !6991
  %95 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6992
  %linestyle58 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %95, i32 0, i32 6, !dbg !6993
  %96 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle58, align 8, !dbg !6993
  %97 = bitcast %struct.FreestyleLineStyle* %96 to %struct.ID*, !dbg !6994
  %98 = load %struct.ID**, %struct.ID*** %r_id.addr, align 8, !dbg !6995
  store %struct.ID* %97, %struct.ID** %98, align 8, !dbg !6996
  %99 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !6997
  %linestyle59 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %99, i32 0, i32 6, !dbg !6998
  %100 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle59, align 8, !dbg !6998
  %id60 = getelementptr inbounds %struct.FreestyleLineStyle, %struct.FreestyleLineStyle* %100, i32 0, i32 0, !dbg !6999
  %next61 = getelementptr inbounds %struct.ID, %struct.ID* %id60, i32 0, i32 0, !dbg !7000
  %101 = load i8*, i8** %next61, align 8, !dbg !7000
  %102 = bitcast i8* %101 to %struct.FreestyleLineStyle*, !dbg !6997
  %103 = load %struct.NodeTreeIterStore*, %struct.NodeTreeIterStore** %ntreeiter.addr, align 8, !dbg !7001
  %linestyle62 = getelementptr inbounds %struct.NodeTreeIterStore, %struct.NodeTreeIterStore* %103, i32 0, i32 6, !dbg !7002
  store %struct.FreestyleLineStyle* %102, %struct.FreestyleLineStyle** %linestyle62, align 8, !dbg !7003
  br label %if.end, !dbg !7004

if.else63:                                        ; preds = %if.else53
  store i8 0, i8* %retval, align 1, !dbg !7005
  br label %return, !dbg !7005

if.end:                                           ; preds = %if.then55
  br label %if.end64

if.end64:                                         ; preds = %if.end, %if.then45
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then35
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then25
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then15
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then6
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then
  store i8 1, i8* %retval, align 1, !dbg !7007
  br label %return, !dbg !7007

return:                                           ; preds = %if.end69, %if.else63
  %104 = load i8, i8* %retval, align 1, !dbg !7008
  ret i8 %104, !dbg !7008
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ntreeNodeExists(%struct.bNodeTree* %ntree, %struct.bNode* %testnode) #0 !dbg !7009 {
entry:
  %retval = alloca i32, align 4
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %testnode.addr = alloca %struct.bNode*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7012, metadata !DIExpression()), !dbg !7013
  store %struct.bNode* %testnode, %struct.bNode** %testnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %testnode.addr, metadata !7014, metadata !DIExpression()), !dbg !7015
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !7016, metadata !DIExpression()), !dbg !7017
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7018
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !7019
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !7020
  %1 = load i8*, i8** %first, align 8, !dbg !7020
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !7018
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !7017
  br label %for.cond, !dbg !7021

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7022
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !7025
  br i1 %tobool, label %for.body, label %for.end, !dbg !7025

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7026
  %5 = load %struct.bNode*, %struct.bNode** %testnode.addr, align 8, !dbg !7028
  %cmp = icmp eq %struct.bNode* %4, %5, !dbg !7029
  br i1 %cmp, label %if.then, label %if.end, !dbg !7030

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !7031
  br label %return, !dbg !7031

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7028

for.inc:                                          ; preds = %if.end
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7032
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 0, !dbg !7033
  %7 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !7033
  store %struct.bNode* %7, %struct.bNode** %node, align 8, !dbg !7034
  br label %for.cond, !dbg !7035, !llvm.loop !7036

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7038
  br label %return, !dbg !7038

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7039
  ret i32 %8, !dbg !7039
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ntreeOutputExists(%struct.bNode* %node, %struct.bNodeSocket* %testsock) #0 !dbg !7040 {
entry:
  %retval = alloca i32, align 4
  %node.addr = alloca %struct.bNode*, align 8
  %testsock.addr = alloca %struct.bNodeSocket*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !7043, metadata !DIExpression()), !dbg !7044
  store %struct.bNodeSocket* %testsock, %struct.bNodeSocket** %testsock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %testsock.addr, metadata !7045, metadata !DIExpression()), !dbg !7046
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !7047, metadata !DIExpression()), !dbg !7048
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !7049
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 18, !dbg !7050
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !7051
  %1 = load i8*, i8** %first, align 8, !dbg !7051
  %2 = bitcast i8* %1 to %struct.bNodeSocket*, !dbg !7049
  store %struct.bNodeSocket* %2, %struct.bNodeSocket** %sock, align 8, !dbg !7048
  br label %for.cond, !dbg !7052

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7053
  %tobool = icmp ne %struct.bNodeSocket* %3, null, !dbg !7056
  br i1 %tobool, label %for.body, label %for.end, !dbg !7056

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7057
  %5 = load %struct.bNodeSocket*, %struct.bNodeSocket** %testsock.addr, align 8, !dbg !7059
  %cmp = icmp eq %struct.bNodeSocket* %4, %5, !dbg !7060
  br i1 %cmp, label %if.then, label %if.end, !dbg !7061

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !7062
  br label %return, !dbg !7062

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7059

for.inc:                                          ; preds = %if.end
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7063
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %6, i32 0, i32 0, !dbg !7064
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !7064
  store %struct.bNodeSocket* %7, %struct.bNodeSocket** %sock, align 8, !dbg !7065
  br label %for.cond, !dbg !7066, !llvm.loop !7067

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7069
  br label %return, !dbg !7069

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7070
  ret i32 %8, !dbg !7070
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeTree* @ntreeLocalize(%struct.bNodeTree* %ntree) #0 !dbg !7071 {
entry:
  %retval = alloca %struct.bNodeTree*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %ltree = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %action_backup = alloca %struct.bAction*, align 8
  %tmpact_backup = alloca %struct.bAction*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %ladt = alloca %struct.AnimData*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7072, metadata !DIExpression()), !dbg !7073
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7074
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !7074
  br i1 %tobool, label %if.then, label %if.else, !dbg !7076

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ltree, metadata !7077, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !7080, metadata !DIExpression()), !dbg !7081
  call void @llvm.dbg.declare(metadata %struct.bAction** %action_backup, metadata !7082, metadata !DIExpression()), !dbg !7083
  store %struct.bAction* null, %struct.bAction** %action_backup, align 8, !dbg !7083
  call void @llvm.dbg.declare(metadata %struct.bAction** %tmpact_backup, metadata !7084, metadata !DIExpression()), !dbg !7085
  store %struct.bAction* null, %struct.bAction** %tmpact_backup, align 8, !dbg !7085
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !7086, metadata !DIExpression()), !dbg !7089
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7090
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 0, !dbg !7091
  %call = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %id), !dbg !7092
  store %struct.AnimData* %call, %struct.AnimData** %adt, align 8, !dbg !7089
  %2 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7093
  %tobool1 = icmp ne %struct.AnimData* %2, null, !dbg !7093
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7095

if.then2:                                         ; preds = %if.then
  %3 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7096
  %action = getelementptr inbounds %struct.AnimData, %struct.AnimData* %3, i32 0, i32 0, !dbg !7098
  %4 = load %struct.bAction*, %struct.bAction** %action, align 8, !dbg !7098
  store %struct.bAction* %4, %struct.bAction** %action_backup, align 8, !dbg !7099
  %5 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7100
  %tmpact = getelementptr inbounds %struct.AnimData, %struct.AnimData* %5, i32 0, i32 1, !dbg !7101
  %6 = load %struct.bAction*, %struct.bAction** %tmpact, align 8, !dbg !7101
  store %struct.bAction* %6, %struct.bAction** %tmpact_backup, align 8, !dbg !7102
  %7 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7103
  %action3 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %7, i32 0, i32 0, !dbg !7104
  store %struct.bAction* null, %struct.bAction** %action3, align 8, !dbg !7105
  %8 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7106
  %tmpact4 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %8, i32 0, i32 1, !dbg !7107
  store %struct.bAction* null, %struct.bAction** %tmpact4, align 8, !dbg !7108
  br label %if.end, !dbg !7109

if.end:                                           ; preds = %if.then2, %if.then
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7110
  %call5 = call %struct.bNodeTree* @ntreeCopyTree_internal(%struct.bNodeTree* %9, %struct.Main* null, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0), !dbg !7111
  store %struct.bNodeTree* %call5, %struct.bNodeTree** %ltree, align 8, !dbg !7112
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %ltree, align 8, !dbg !7113
  %flag = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %10, i32 0, i32 12, !dbg !7114
  %11 = load i32, i32* %flag, align 4, !dbg !7115
  %or = or i32 %11, 32, !dbg !7115
  store i32 %or, i32* %flag, align 4, !dbg !7115
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ltree, align 8, !dbg !7116
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %12, i32 0, i32 7, !dbg !7118
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !7119
  %13 = load i8*, i8** %first, align 8, !dbg !7119
  %14 = bitcast i8* %13 to %struct.bNode*, !dbg !7116
  store %struct.bNode* %14, %struct.bNode** %node, align 8, !dbg !7120
  br label %for.cond, !dbg !7121

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7122
  %tobool6 = icmp ne %struct.bNode* %15, null, !dbg !7124
  br i1 %tobool6, label %for.body, label %for.end, !dbg !7124

for.body:                                         ; preds = %for.cond
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7125
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 8, !dbg !7128
  %17 = load i16, i16* %type, align 4, !dbg !7128
  %conv = sext i16 %17 to i32, !dbg !7125
  %cmp = icmp eq i32 %conv, 2, !dbg !7129
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !7130

land.lhs.true:                                    ; preds = %for.body
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7131
  %id8 = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 20, !dbg !7132
  %19 = load %struct.ID*, %struct.ID** %id8, align 8, !dbg !7132
  %tobool9 = icmp ne %struct.ID* %19, null, !dbg !7131
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !7133

if.then10:                                        ; preds = %land.lhs.true
  %20 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7134
  %id11 = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 20, !dbg !7136
  %21 = load %struct.ID*, %struct.ID** %id11, align 8, !dbg !7136
  %22 = bitcast %struct.ID* %21 to %struct.bNodeTree*, !dbg !7137
  %call12 = call %struct.bNodeTree* @ntreeLocalize(%struct.bNodeTree* %22), !dbg !7138
  %23 = bitcast %struct.bNodeTree* %call12 to %struct.ID*, !dbg !7139
  %24 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7140
  %id13 = getelementptr inbounds %struct.bNode, %struct.bNode* %24, i32 0, i32 20, !dbg !7141
  store %struct.ID* %23, %struct.ID** %id13, align 8, !dbg !7142
  br label %if.end14, !dbg !7143

if.end14:                                         ; preds = %if.then10, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7144

for.inc:                                          ; preds = %if.end14
  %25 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7145
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 0, !dbg !7146
  %26 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !7146
  store %struct.bNode* %26, %struct.bNode** %node, align 8, !dbg !7147
  br label %for.cond, !dbg !7148, !llvm.loop !7149

for.end:                                          ; preds = %for.cond
  %27 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7151
  %tobool15 = icmp ne %struct.AnimData* %27, null, !dbg !7151
  br i1 %tobool15, label %if.then16, label %if.end33, !dbg !7153

if.then16:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.AnimData** %ladt, metadata !7154, metadata !DIExpression()), !dbg !7156
  %28 = load %struct.bNodeTree*, %struct.bNodeTree** %ltree, align 8, !dbg !7157
  %id17 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %28, i32 0, i32 0, !dbg !7158
  %call18 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %id17), !dbg !7159
  store %struct.AnimData* %call18, %struct.AnimData** %ladt, align 8, !dbg !7156
  %29 = load %struct.bAction*, %struct.bAction** %action_backup, align 8, !dbg !7160
  %30 = load %struct.AnimData*, %struct.AnimData** %ladt, align 8, !dbg !7161
  %action19 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %30, i32 0, i32 0, !dbg !7162
  store %struct.bAction* %29, %struct.bAction** %action19, align 8, !dbg !7163
  %31 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7164
  %action20 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %31, i32 0, i32 0, !dbg !7165
  store %struct.bAction* %29, %struct.bAction** %action20, align 8, !dbg !7166
  %32 = load %struct.bAction*, %struct.bAction** %tmpact_backup, align 8, !dbg !7167
  %33 = load %struct.AnimData*, %struct.AnimData** %ladt, align 8, !dbg !7168
  %tmpact21 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %33, i32 0, i32 1, !dbg !7169
  store %struct.bAction* %32, %struct.bAction** %tmpact21, align 8, !dbg !7170
  %34 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !7171
  %tmpact22 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %34, i32 0, i32 1, !dbg !7172
  store %struct.bAction* %32, %struct.bAction** %tmpact22, align 8, !dbg !7173
  %35 = load %struct.bAction*, %struct.bAction** %action_backup, align 8, !dbg !7174
  %tobool23 = icmp ne %struct.bAction* %35, null, !dbg !7174
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !7176

if.then24:                                        ; preds = %if.then16
  %36 = load %struct.bAction*, %struct.bAction** %action_backup, align 8, !dbg !7177
  %id25 = getelementptr inbounds %struct.bAction, %struct.bAction* %36, i32 0, i32 0, !dbg !7178
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id25, i32 0, i32 6, !dbg !7179
  %37 = load i32, i32* %us, align 4, !dbg !7180
  %inc = add nsw i32 %37, 1, !dbg !7180
  store i32 %inc, i32* %us, align 4, !dbg !7180
  br label %if.end26, !dbg !7177

if.end26:                                         ; preds = %if.then24, %if.then16
  %38 = load %struct.bAction*, %struct.bAction** %tmpact_backup, align 8, !dbg !7181
  %tobool27 = icmp ne %struct.bAction* %38, null, !dbg !7181
  br i1 %tobool27, label %if.then28, label %if.end32, !dbg !7183

if.then28:                                        ; preds = %if.end26
  %39 = load %struct.bAction*, %struct.bAction** %tmpact_backup, align 8, !dbg !7184
  %id29 = getelementptr inbounds %struct.bAction, %struct.bAction* %39, i32 0, i32 0, !dbg !7185
  %us30 = getelementptr inbounds %struct.ID, %struct.ID* %id29, i32 0, i32 6, !dbg !7186
  %40 = load i32, i32* %us30, align 4, !dbg !7187
  %inc31 = add nsw i32 %40, 1, !dbg !7187
  store i32 %inc31, i32* %us30, align 4, !dbg !7187
  br label %if.end32, !dbg !7184

if.end32:                                         ; preds = %if.then28, %if.end26
  br label %if.end33, !dbg !7188

if.end33:                                         ; preds = %if.end32, %for.end
  %41 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7189
  call void @ntreeSetOutput(%struct.bNodeTree* %41), !dbg !7190
  %42 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7191
  %nodes34 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %42, i32 0, i32 7, !dbg !7193
  %first35 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes34, i32 0, i32 0, !dbg !7194
  %43 = load i8*, i8** %first35, align 8, !dbg !7194
  %44 = bitcast i8* %43 to %struct.bNode*, !dbg !7191
  store %struct.bNode* %44, %struct.bNode** %node, align 8, !dbg !7195
  br label %for.cond36, !dbg !7196

for.cond36:                                       ; preds = %for.inc40, %if.end33
  %45 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7197
  %tobool37 = icmp ne %struct.bNode* %45, null, !dbg !7199
  br i1 %tobool37, label %for.body38, label %for.end42, !dbg !7199

for.body38:                                       ; preds = %for.cond36
  %46 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7200
  %47 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7202
  %new_node = getelementptr inbounds %struct.bNode, %struct.bNode* %47, i32 0, i32 2, !dbg !7203
  %48 = load %struct.bNode*, %struct.bNode** %new_node, align 8, !dbg !7203
  %new_node39 = getelementptr inbounds %struct.bNode, %struct.bNode* %48, i32 0, i32 2, !dbg !7204
  store %struct.bNode* %46, %struct.bNode** %new_node39, align 8, !dbg !7205
  br label %for.inc40, !dbg !7206

for.inc40:                                        ; preds = %for.body38
  %49 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7207
  %next41 = getelementptr inbounds %struct.bNode, %struct.bNode* %49, i32 0, i32 0, !dbg !7208
  %50 = load %struct.bNode*, %struct.bNode** %next41, align 8, !dbg !7208
  store %struct.bNode* %50, %struct.bNode** %node, align 8, !dbg !7209
  br label %for.cond36, !dbg !7210, !llvm.loop !7211

for.end42:                                        ; preds = %for.cond36
  %51 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7213
  %typeinfo = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %51, i32 0, i32 2, !dbg !7215
  %52 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo, align 8, !dbg !7215
  %localize = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %52, i32 0, i32 10, !dbg !7216
  %53 = load void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)** %localize, align 8, !dbg !7216
  %tobool43 = icmp ne void (%struct.bNodeTree*, %struct.bNodeTree*)* %53, null, !dbg !7213
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !7217

if.then44:                                        ; preds = %for.end42
  %54 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7218
  %typeinfo45 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %54, i32 0, i32 2, !dbg !7219
  %55 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo45, align 8, !dbg !7219
  %localize46 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %55, i32 0, i32 10, !dbg !7220
  %56 = load void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)** %localize46, align 8, !dbg !7220
  %57 = load %struct.bNodeTree*, %struct.bNodeTree** %ltree, align 8, !dbg !7221
  %58 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7222
  call void %56(%struct.bNodeTree* %57, %struct.bNodeTree* %58), !dbg !7218
  br label %if.end47, !dbg !7218

if.end47:                                         ; preds = %if.then44, %for.end42
  %59 = load %struct.bNodeTree*, %struct.bNodeTree** %ltree, align 8, !dbg !7223
  store %struct.bNodeTree* %59, %struct.bNodeTree** %retval, align 8, !dbg !7224
  br label %return, !dbg !7224

if.else:                                          ; preds = %entry
  store %struct.bNodeTree* null, %struct.bNodeTree** %retval, align 8, !dbg !7225
  br label %return, !dbg !7225

return:                                           ; preds = %if.else, %if.end47
  %60 = load %struct.bNodeTree*, %struct.bNodeTree** %retval, align 8, !dbg !7226
  ret %struct.bNodeTree* %60, !dbg !7226
}

declare dso_local %struct.AnimData* @BKE_animdata_from_id(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeLocalSync(%struct.bNodeTree* %localtree, %struct.bNodeTree* %ntree) #0 !dbg !7227 {
entry:
  %localtree.addr = alloca %struct.bNodeTree*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeTree* %localtree, %struct.bNodeTree** %localtree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %localtree.addr, metadata !7228, metadata !DIExpression()), !dbg !7229
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7230, metadata !DIExpression()), !dbg !7231
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %localtree.addr, align 8, !dbg !7232
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !7232
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !7234

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7235
  %tobool1 = icmp ne %struct.bNodeTree* %1, null, !dbg !7235
  br i1 %tobool1, label %if.then, label %if.end6, !dbg !7236

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7237
  %typeinfo = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 2, !dbg !7240
  %3 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo, align 8, !dbg !7240
  %local_sync = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %3, i32 0, i32 11, !dbg !7241
  %4 = load void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)** %local_sync, align 8, !dbg !7241
  %tobool2 = icmp ne void (%struct.bNodeTree*, %struct.bNodeTree*)* %4, null, !dbg !7237
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !7242

if.then3:                                         ; preds = %if.then
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7243
  %typeinfo4 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 2, !dbg !7244
  %6 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo4, align 8, !dbg !7244
  %local_sync5 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %6, i32 0, i32 11, !dbg !7245
  %7 = load void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)** %local_sync5, align 8, !dbg !7245
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %localtree.addr, align 8, !dbg !7246
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7247
  call void %7(%struct.bNodeTree* %8, %struct.bNodeTree* %9), !dbg !7243
  br label %if.end, !dbg !7243

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end6, !dbg !7248

if.end6:                                          ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !7249
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeLocalMerge(%struct.bNodeTree* %localtree, %struct.bNodeTree* %ntree) #0 !dbg !7250 {
entry:
  %localtree.addr = alloca %struct.bNodeTree*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeTree* %localtree, %struct.bNodeTree** %localtree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %localtree.addr, metadata !7251, metadata !DIExpression()), !dbg !7252
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7253, metadata !DIExpression()), !dbg !7254
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7255
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !7255
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !7257

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %localtree.addr, align 8, !dbg !7258
  %tobool1 = icmp ne %struct.bNodeTree* %1, null, !dbg !7258
  br i1 %tobool1, label %if.then, label %if.end6, !dbg !7259

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7260
  %typeinfo = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 2, !dbg !7263
  %3 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo, align 8, !dbg !7263
  %local_merge = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %3, i32 0, i32 12, !dbg !7264
  %4 = load void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)** %local_merge, align 8, !dbg !7264
  %tobool2 = icmp ne void (%struct.bNodeTree*, %struct.bNodeTree*)* %4, null, !dbg !7260
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !7265

if.then3:                                         ; preds = %if.then
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7266
  %typeinfo4 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 2, !dbg !7267
  %6 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo4, align 8, !dbg !7267
  %local_merge5 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %6, i32 0, i32 12, !dbg !7268
  %7 = load void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)** %local_merge5, align 8, !dbg !7268
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %localtree.addr, align 8, !dbg !7269
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7270
  call void %7(%struct.bNodeTree* %8, %struct.bNodeTree* %9), !dbg !7266
  br label %if.end, !dbg !7266

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %localtree.addr, align 8, !dbg !7271
  call void @ntreeFreeTree_ex(%struct.bNodeTree* %10, i8 zeroext 0), !dbg !7272
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7273
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %localtree.addr, align 8, !dbg !7274
  %13 = bitcast %struct.bNodeTree* %12 to i8*, !dbg !7274
  call void %11(i8* %13), !dbg !7273
  br label %if.end6, !dbg !7275

if.end6:                                          ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !7276
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeSocket* @ntreeFindSocketInterface(%struct.bNodeTree* %ntree, i32 %in_out, i8* %identifier) #0 !dbg !7277 {
entry:
  %retval = alloca %struct.bNodeSocket*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %in_out.addr = alloca i32, align 4
  %identifier.addr = alloca i8*, align 8
  %iosock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7280, metadata !DIExpression()), !dbg !7281
  store i32 %in_out, i32* %in_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_out.addr, metadata !7282, metadata !DIExpression()), !dbg !7283
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !7284, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %iosock, metadata !7286, metadata !DIExpression()), !dbg !7287
  %0 = load i32, i32* %in_out.addr, align 4, !dbg !7288
  %cmp = icmp eq i32 %0, 1, !dbg !7289
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7288

cond.true:                                        ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7290
  %inputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 22, !dbg !7291
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !7292
  %2 = load i8*, i8** %first, align 8, !dbg !7292
  br label %cond.end, !dbg !7288

cond.false:                                       ; preds = %entry
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7293
  %outputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 23, !dbg !7294
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !7295
  %4 = load i8*, i8** %first1, align 8, !dbg !7295
  br label %cond.end, !dbg !7288

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ %4, %cond.false ], !dbg !7288
  %5 = bitcast i8* %cond to %struct.bNodeSocket*, !dbg !7296
  store %struct.bNodeSocket* %5, %struct.bNodeSocket** %iosock, align 8, !dbg !7287
  br label %for.cond, !dbg !7297

for.cond:                                         ; preds = %for.inc, %cond.end
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7298
  %tobool = icmp ne %struct.bNodeSocket* %6, null, !dbg !7301
  br i1 %tobool, label %for.body, label %for.end, !dbg !7301

for.body:                                         ; preds = %for.cond
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7302
  %identifier2 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %7, i32 0, i32 4, !dbg !7302
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %identifier2, i64 0, i64 0, !dbg !7302
  %8 = load i8*, i8** %identifier.addr, align 8, !dbg !7302
  %call = call i32 @strcmp(i8* %arraydecay, i8* %8) #6, !dbg !7302
  %cmp3 = icmp eq i32 %call, 0, !dbg !7302
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7304

if.then:                                          ; preds = %for.body
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7305
  store %struct.bNodeSocket* %9, %struct.bNodeSocket** %retval, align 8, !dbg !7306
  br label %return, !dbg !7306

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7302

for.inc:                                          ; preds = %if.end
  %10 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7307
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %10, i32 0, i32 0, !dbg !7308
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !7308
  store %struct.bNodeSocket* %11, %struct.bNodeSocket** %iosock, align 8, !dbg !7309
  br label %for.cond, !dbg !7310, !llvm.loop !7311

for.end:                                          ; preds = %for.cond
  store %struct.bNodeSocket* null, %struct.bNodeSocket** %retval, align 8, !dbg !7313
  br label %return, !dbg !7313

return:                                           ; preds = %for.end, %if.then
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %retval, align 8, !dbg !7314
  ret %struct.bNodeSocket* %12, !dbg !7314
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeSocket* @ntreeAddSocketInterface(%struct.bNodeTree* %ntree, i32 %in_out, i8* %idname, i8* %name) #0 !dbg !7315 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %in_out.addr = alloca i32, align 4
  %idname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %iosock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7318, metadata !DIExpression()), !dbg !7319
  store i32 %in_out, i32* %in_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_out.addr, metadata !7320, metadata !DIExpression()), !dbg !7321
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !7322, metadata !DIExpression()), !dbg !7323
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7324, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %iosock, metadata !7326, metadata !DIExpression()), !dbg !7327
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7328
  %1 = load i32, i32* %in_out.addr, align 4, !dbg !7329
  %2 = load i8*, i8** %idname.addr, align 8, !dbg !7330
  %3 = load i8*, i8** %name.addr, align 8, !dbg !7331
  %call = call %struct.bNodeSocket* @make_socket_interface(%struct.bNodeTree* %0, i32 %1, i8* %2, i8* %3), !dbg !7332
  store %struct.bNodeSocket* %call, %struct.bNodeSocket** %iosock, align 8, !dbg !7333
  %4 = load i32, i32* %in_out.addr, align 4, !dbg !7334
  %cmp = icmp eq i32 %4, 1, !dbg !7336
  br i1 %cmp, label %if.then, label %if.else, !dbg !7337

if.then:                                          ; preds = %entry
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7338
  %inputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 22, !dbg !7340
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7341
  %7 = bitcast %struct.bNodeSocket* %6 to i8*, !dbg !7341
  call void @BLI_addtail(%struct.ListBase* %inputs, i8* %7), !dbg !7342
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7343
  %update = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %8, i32 0, i32 13, !dbg !7344
  %9 = load i32, i32* %update, align 8, !dbg !7345
  %or = or i32 %9, 16, !dbg !7345
  store i32 %or, i32* %update, align 8, !dbg !7345
  br label %if.end5, !dbg !7346

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %in_out.addr, align 4, !dbg !7347
  %cmp1 = icmp eq i32 %10, 2, !dbg !7349
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !7350

if.then2:                                         ; preds = %if.else
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7351
  %outputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %11, i32 0, i32 23, !dbg !7353
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7354
  %13 = bitcast %struct.bNodeSocket* %12 to i8*, !dbg !7354
  call void @BLI_addtail(%struct.ListBase* %outputs, i8* %13), !dbg !7355
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7356
  %update3 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %14, i32 0, i32 13, !dbg !7357
  %15 = load i32, i32* %update3, align 8, !dbg !7358
  %or4 = or i32 %15, 32, !dbg !7358
  store i32 %or4, i32* %update3, align 8, !dbg !7358
  br label %if.end, !dbg !7359

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7360
  ret %struct.bNodeSocket* %16, !dbg !7361
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.bNodeSocket* @make_socket_interface(%struct.bNodeTree* %ntree, i32 %in_out, i8* %idname, i8* %name) #0 !dbg !7362 {
entry:
  %retval = alloca %struct.bNodeSocket*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %in_out.addr = alloca i32, align 4
  %idname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %stype = alloca %struct.bNodeSocketType*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %own_index = alloca i32, align 4
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7365, metadata !DIExpression()), !dbg !7366
  store i32 %in_out, i32* %in_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_out.addr, metadata !7367, metadata !DIExpression()), !dbg !7368
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !7369, metadata !DIExpression()), !dbg !7370
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7371, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketType** %stype, metadata !7373, metadata !DIExpression()), !dbg !7374
  %0 = load i8*, i8** %idname.addr, align 8, !dbg !7375
  %call = call %struct.bNodeSocketType* @nodeSocketTypeFind(i8* %0), !dbg !7376
  store %struct.bNodeSocketType* %call, %struct.bNodeSocketType** %stype, align 8, !dbg !7374
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !7377, metadata !DIExpression()), !dbg !7378
  call void @llvm.dbg.declare(metadata i32* %own_index, metadata !7379, metadata !DIExpression()), !dbg !7380
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7381
  %cur_index = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 11, !dbg !7382
  %2 = load i32, i32* %cur_index, align 8, !dbg !7383
  %inc = add nsw i32 %2, 1, !dbg !7383
  store i32 %inc, i32* %cur_index, align 8, !dbg !7383
  store i32 %2, i32* %own_index, align 4, !dbg !7380
  %3 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %stype, align 8, !dbg !7384
  %cmp = icmp eq %struct.bNodeSocketType* %3, null, !dbg !7386
  br i1 %cmp, label %if.then, label %if.end, !dbg !7387

if.then:                                          ; preds = %entry
  store %struct.bNodeSocket* null, %struct.bNodeSocket** %retval, align 8, !dbg !7388
  br label %return, !dbg !7388

if.end:                                           ; preds = %entry
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7390
  %call1 = call i8* %4(i64 352, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.268, i64 0, i64 0)), !dbg !7390
  %5 = bitcast i8* %call1 to %struct.bNodeSocket*, !dbg !7390
  store %struct.bNodeSocket* %5, %struct.bNodeSocket** %sock, align 8, !dbg !7391
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7392
  %idname2 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %6, i32 0, i32 12, !dbg !7393
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname2, i64 0, i64 0, !dbg !7392
  %7 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %stype, align 8, !dbg !7394
  %idname3 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %7, i32 0, i32 0, !dbg !7395
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %idname3, i64 0, i64 0, !dbg !7394
  %call5 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay4, i64 64), !dbg !7396
  %8 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7397
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7398
  %10 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %stype, align 8, !dbg !7399
  call void @node_socket_set_typeinfo(%struct.bNodeTree* %8, %struct.bNodeSocket* %9, %struct.bNodeSocketType* %10), !dbg !7400
  %11 = load i32, i32* %in_out.addr, align 4, !dbg !7401
  %conv = trunc i32 %11 to i16, !dbg !7401
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7402
  %in_out6 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %12, i32 0, i32 10, !dbg !7403
  store i16 %conv, i16* %in_out6, align 2, !dbg !7404
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7405
  %type = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %13, i32 0, i32 7, !dbg !7406
  store i16 -1, i16* %type, align 8, !dbg !7407
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7408
  %cur_index7 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %14, i32 0, i32 11, !dbg !7409
  %15 = load i32, i32* %cur_index7, align 8, !dbg !7410
  %inc8 = add nsw i32 %15, 1, !dbg !7410
  store i32 %inc8, i32* %cur_index7, align 8, !dbg !7410
  store i32 %15, i32* %own_index, align 4, !dbg !7411
  %16 = load i32, i32* %in_out.addr, align 4, !dbg !7412
  %cmp9 = icmp eq i32 %16, 1, !dbg !7414
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !7415

if.then11:                                        ; preds = %if.end
  %17 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7416
  %identifier = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %17, i32 0, i32 4, !dbg !7417
  %arraydecay12 = getelementptr inbounds [64 x i8], [64 x i8]* %identifier, i64 0, i64 0, !dbg !7416
  %18 = load i32, i32* %own_index, align 4, !dbg !7418
  %call13 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay12, i64 64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.269, i64 0, i64 0), i32 %18), !dbg !7419
  br label %if.end17, !dbg !7419

if.else:                                          ; preds = %if.end
  %19 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7420
  %identifier14 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %19, i32 0, i32 4, !dbg !7421
  %arraydecay15 = getelementptr inbounds [64 x i8], [64 x i8]* %identifier14, i64 0, i64 0, !dbg !7420
  %20 = load i32, i32* %own_index, align 4, !dbg !7422
  %call16 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay15, i64 64, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.270, i64 0, i64 0), i32 %20), !dbg !7423
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then11
  %21 = load i32, i32* %own_index, align 4, !dbg !7424
  %22 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7425
  %own_index18 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %22, i32 0, i32 20, !dbg !7426
  store i32 %21, i32* %own_index18, align 8, !dbg !7427
  %23 = load i32, i32* %in_out.addr, align 4, !dbg !7428
  %cmp19 = icmp eq i32 %23, 1, !dbg !7429
  %24 = zext i1 %cmp19 to i64, !dbg !7428
  %cond = select i1 %cmp19, i32 1, i32 4095, !dbg !7428
  %conv21 = trunc i32 %cond to i16, !dbg !7430
  %25 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7431
  %limit = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %25, i32 0, i32 9, !dbg !7432
  store i16 %conv21, i16* %limit, align 4, !dbg !7433
  %26 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7434
  %name22 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %26, i32 0, i32 5, !dbg !7435
  %arraydecay23 = getelementptr inbounds [64 x i8], [64 x i8]* %name22, i64 0, i64 0, !dbg !7434
  %27 = load i8*, i8** %name.addr, align 8, !dbg !7436
  %call24 = call i8* @BLI_strncpy(i8* %arraydecay23, i8* %27, i64 64), !dbg !7437
  %28 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7438
  %storage = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %28, i32 0, i32 6, !dbg !7439
  store i8* null, i8** %storage, align 8, !dbg !7440
  %29 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7441
  %flag = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %29, i32 0, i32 8, !dbg !7442
  %30 = load i16, i16* %flag, align 2, !dbg !7443
  %conv25 = sext i16 %30 to i32, !dbg !7443
  %or = or i32 %conv25, 64, !dbg !7443
  %conv26 = trunc i32 %or to i16, !dbg !7443
  store i16 %conv26, i16* %flag, align 2, !dbg !7443
  %31 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7444
  store %struct.bNodeSocket* %31, %struct.bNodeSocket** %retval, align 8, !dbg !7445
  br label %return, !dbg !7445

return:                                           ; preds = %if.end17, %if.then
  %32 = load %struct.bNodeSocket*, %struct.bNodeSocket** %retval, align 8, !dbg !7446
  ret %struct.bNodeSocket* %32, !dbg !7446
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeSocket* @ntreeInsertSocketInterface(%struct.bNodeTree* %ntree, i32 %in_out, i8* %idname, %struct.bNodeSocket* %next_sock, i8* %name) #0 !dbg !7447 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %in_out.addr = alloca i32, align 4
  %idname.addr = alloca i8*, align 8
  %next_sock.addr = alloca %struct.bNodeSocket*, align 8
  %name.addr = alloca i8*, align 8
  %iosock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7450, metadata !DIExpression()), !dbg !7451
  store i32 %in_out, i32* %in_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in_out.addr, metadata !7452, metadata !DIExpression()), !dbg !7453
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !7454, metadata !DIExpression()), !dbg !7455
  store %struct.bNodeSocket* %next_sock, %struct.bNodeSocket** %next_sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %next_sock.addr, metadata !7456, metadata !DIExpression()), !dbg !7457
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7458, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %iosock, metadata !7460, metadata !DIExpression()), !dbg !7461
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7462
  %1 = load i32, i32* %in_out.addr, align 4, !dbg !7463
  %2 = load i8*, i8** %idname.addr, align 8, !dbg !7464
  %3 = load i8*, i8** %name.addr, align 8, !dbg !7465
  %call = call %struct.bNodeSocket* @make_socket_interface(%struct.bNodeTree* %0, i32 %1, i8* %2, i8* %3), !dbg !7466
  store %struct.bNodeSocket* %call, %struct.bNodeSocket** %iosock, align 8, !dbg !7467
  %4 = load i32, i32* %in_out.addr, align 4, !dbg !7468
  %cmp = icmp eq i32 %4, 1, !dbg !7470
  br i1 %cmp, label %if.then, label %if.else, !dbg !7471

if.then:                                          ; preds = %entry
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7472
  %inputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 22, !dbg !7474
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next_sock.addr, align 8, !dbg !7475
  %7 = bitcast %struct.bNodeSocket* %6 to i8*, !dbg !7475
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7476
  %9 = bitcast %struct.bNodeSocket* %8 to i8*, !dbg !7476
  call void @BLI_insertlinkbefore(%struct.ListBase* %inputs, i8* %7, i8* %9), !dbg !7477
  %10 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7478
  %update = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %10, i32 0, i32 13, !dbg !7479
  %11 = load i32, i32* %update, align 8, !dbg !7480
  %or = or i32 %11, 16, !dbg !7480
  store i32 %or, i32* %update, align 8, !dbg !7480
  br label %if.end5, !dbg !7481

if.else:                                          ; preds = %entry
  %12 = load i32, i32* %in_out.addr, align 4, !dbg !7482
  %cmp1 = icmp eq i32 %12, 2, !dbg !7484
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !7485

if.then2:                                         ; preds = %if.else
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7486
  %outputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %13, i32 0, i32 23, !dbg !7488
  %14 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next_sock.addr, align 8, !dbg !7489
  %15 = bitcast %struct.bNodeSocket* %14 to i8*, !dbg !7489
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7490
  %17 = bitcast %struct.bNodeSocket* %16 to i8*, !dbg !7490
  call void @BLI_insertlinkbefore(%struct.ListBase* %outputs, i8* %15, i8* %17), !dbg !7491
  %18 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7492
  %update3 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %18, i32 0, i32 13, !dbg !7493
  %19 = load i32, i32* %update3, align 8, !dbg !7494
  %or4 = or i32 %19, 32, !dbg !7494
  store i32 %or4, i32* %update3, align 8, !dbg !7494
  br label %if.end, !dbg !7495

if.end:                                           ; preds = %if.then2, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %20 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7496
  ret %struct.bNodeSocket* %20, !dbg !7497
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeSocket* @ntreeAddSocketInterfaceFromSocket(%struct.bNodeTree* %ntree, %struct.bNode* %from_node, %struct.bNodeSocket* %from_sock) #0 !dbg !7498 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %from_node.addr = alloca %struct.bNode*, align 8
  %from_sock.addr = alloca %struct.bNodeSocket*, align 8
  %iosock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7501, metadata !DIExpression()), !dbg !7502
  store %struct.bNode* %from_node, %struct.bNode** %from_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %from_node.addr, metadata !7503, metadata !DIExpression()), !dbg !7504
  store %struct.bNodeSocket* %from_sock, %struct.bNodeSocket** %from_sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %from_sock.addr, metadata !7505, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %iosock, metadata !7507, metadata !DIExpression()), !dbg !7508
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7509
  %1 = load %struct.bNodeSocket*, %struct.bNodeSocket** %from_sock.addr, align 8, !dbg !7510
  %in_out = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %1, i32 0, i32 10, !dbg !7511
  %2 = load i16, i16* %in_out, align 2, !dbg !7511
  %conv = sext i16 %2 to i32, !dbg !7510
  %3 = load %struct.bNodeSocket*, %struct.bNodeSocket** %from_sock.addr, align 8, !dbg !7512
  %idname = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %3, i32 0, i32 12, !dbg !7513
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !7512
  %4 = load %struct.bNodeSocket*, %struct.bNodeSocket** %from_sock.addr, align 8, !dbg !7514
  %name = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %4, i32 0, i32 5, !dbg !7515
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !7514
  %call = call %struct.bNodeSocket* @ntreeAddSocketInterface(%struct.bNodeTree* %0, i32 %conv, i8* %arraydecay, i8* %arraydecay1), !dbg !7516
  store %struct.bNodeSocket* %call, %struct.bNodeSocket** %iosock, align 8, !dbg !7508
  %5 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7517
  %tobool = icmp ne %struct.bNodeSocket* %5, null, !dbg !7517
  br i1 %tobool, label %if.then, label %if.end6, !dbg !7519

if.then:                                          ; preds = %entry
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7520
  %typeinfo = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %6, i32 0, i32 11, !dbg !7523
  %7 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %typeinfo, align 8, !dbg !7523
  %interface_from_socket = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %7, i32 0, i32 8, !dbg !7524
  %8 = load void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)** %interface_from_socket, align 8, !dbg !7524
  %tobool2 = icmp ne void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)* %8, null, !dbg !7520
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !7525

if.then3:                                         ; preds = %if.then
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7526
  %typeinfo4 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %9, i32 0, i32 11, !dbg !7527
  %10 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %typeinfo4, align 8, !dbg !7527
  %interface_from_socket5 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %10, i32 0, i32 8, !dbg !7528
  %11 = load void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)** %interface_from_socket5, align 8, !dbg !7528
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7529
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7530
  %14 = load %struct.bNode*, %struct.bNode** %from_node.addr, align 8, !dbg !7531
  %15 = load %struct.bNodeSocket*, %struct.bNodeSocket** %from_sock.addr, align 8, !dbg !7532
  call void %11(%struct.bNodeTree* %12, %struct.bNodeSocket* %13, %struct.bNode* %14, %struct.bNodeSocket* %15), !dbg !7526
  br label %if.end, !dbg !7526

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end6, !dbg !7533

if.end6:                                          ; preds = %if.end, %entry
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7534
  ret %struct.bNodeSocket* %16, !dbg !7535
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeSocket* @ntreeInsertSocketInterfaceFromSocket(%struct.bNodeTree* %ntree, %struct.bNodeSocket* %next_sock, %struct.bNode* %from_node, %struct.bNodeSocket* %from_sock) #0 !dbg !7536 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %next_sock.addr = alloca %struct.bNodeSocket*, align 8
  %from_node.addr = alloca %struct.bNode*, align 8
  %from_sock.addr = alloca %struct.bNodeSocket*, align 8
  %iosock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7539, metadata !DIExpression()), !dbg !7540
  store %struct.bNodeSocket* %next_sock, %struct.bNodeSocket** %next_sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %next_sock.addr, metadata !7541, metadata !DIExpression()), !dbg !7542
  store %struct.bNode* %from_node, %struct.bNode** %from_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %from_node.addr, metadata !7543, metadata !DIExpression()), !dbg !7544
  store %struct.bNodeSocket* %from_sock, %struct.bNodeSocket** %from_sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %from_sock.addr, metadata !7545, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %iosock, metadata !7547, metadata !DIExpression()), !dbg !7548
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7549
  %1 = load %struct.bNodeSocket*, %struct.bNodeSocket** %from_sock.addr, align 8, !dbg !7550
  %in_out = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %1, i32 0, i32 10, !dbg !7551
  %2 = load i16, i16* %in_out, align 2, !dbg !7551
  %conv = sext i16 %2 to i32, !dbg !7550
  %3 = load %struct.bNodeSocket*, %struct.bNodeSocket** %from_sock.addr, align 8, !dbg !7552
  %idname = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %3, i32 0, i32 12, !dbg !7553
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !7552
  %4 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next_sock.addr, align 8, !dbg !7554
  %5 = load %struct.bNodeSocket*, %struct.bNodeSocket** %from_sock.addr, align 8, !dbg !7555
  %name = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %5, i32 0, i32 5, !dbg !7556
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !7555
  %call = call %struct.bNodeSocket* @ntreeInsertSocketInterface(%struct.bNodeTree* %0, i32 %conv, i8* %arraydecay, %struct.bNodeSocket* %4, i8* %arraydecay1), !dbg !7557
  store %struct.bNodeSocket* %call, %struct.bNodeSocket** %iosock, align 8, !dbg !7548
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7558
  %tobool = icmp ne %struct.bNodeSocket* %6, null, !dbg !7558
  br i1 %tobool, label %if.then, label %if.end6, !dbg !7560

if.then:                                          ; preds = %entry
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7561
  %typeinfo = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %7, i32 0, i32 11, !dbg !7564
  %8 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %typeinfo, align 8, !dbg !7564
  %interface_from_socket = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %8, i32 0, i32 8, !dbg !7565
  %9 = load void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)** %interface_from_socket, align 8, !dbg !7565
  %tobool2 = icmp ne void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)* %9, null, !dbg !7561
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !7566

if.then3:                                         ; preds = %if.then
  %10 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7567
  %typeinfo4 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %10, i32 0, i32 11, !dbg !7568
  %11 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %typeinfo4, align 8, !dbg !7568
  %interface_from_socket5 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %11, i32 0, i32 8, !dbg !7569
  %12 = load void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)** %interface_from_socket5, align 8, !dbg !7569
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7570
  %14 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7571
  %15 = load %struct.bNode*, %struct.bNode** %from_node.addr, align 8, !dbg !7572
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %from_sock.addr, align 8, !dbg !7573
  call void %12(%struct.bNodeTree* %13, %struct.bNodeSocket* %14, %struct.bNode* %15, %struct.bNodeSocket* %16), !dbg !7567
  br label %if.end, !dbg !7567

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end6, !dbg !7574

if.end6:                                          ; preds = %if.end, %entry
  %17 = load %struct.bNodeSocket*, %struct.bNodeSocket** %iosock, align 8, !dbg !7575
  ret %struct.bNodeSocket* %17, !dbg !7576
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeRemoveSocketInterface(%struct.bNodeTree* %ntree, %struct.bNodeSocket* %sock) #0 !dbg !7577 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %sock.addr = alloca %struct.bNodeSocket*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7578, metadata !DIExpression()), !dbg !7579
  store %struct.bNodeSocket* %sock, %struct.bNodeSocket** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock.addr, metadata !7580, metadata !DIExpression()), !dbg !7581
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7582
  %inputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 22, !dbg !7583
  %1 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !7584
  %2 = bitcast %struct.bNodeSocket* %1 to i8*, !dbg !7584
  call void @BLI_remlink(%struct.ListBase* %inputs, i8* %2), !dbg !7585
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7586
  %outputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 23, !dbg !7587
  %4 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !7588
  %5 = bitcast %struct.bNodeSocket* %4 to i8*, !dbg !7588
  call void @BLI_remlink(%struct.ListBase* %outputs, i8* %5), !dbg !7589
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7590
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !7591
  call void @node_socket_interface_free(%struct.bNodeTree* %6, %struct.bNodeSocket* %7), !dbg !7592
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7593
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !7594
  %10 = bitcast %struct.bNodeSocket* %9 to i8*, !dbg !7594
  call void %8(i8* %10), !dbg !7593
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7595
  %update = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %11, i32 0, i32 13, !dbg !7596
  %12 = load i32, i32* %update, align 8, !dbg !7597
  %or = or i32 %12, 48, !dbg !7597
  store i32 %or, i32* %update, align 8, !dbg !7597
  ret void, !dbg !7598
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.StructRNA* @ntreeInterfaceTypeGet(%struct.bNodeTree* %ntree, i32 %create) #0 !dbg !7599 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %create.addr = alloca i32, align 4
  %base = alloca [130 x i8], align 16
  %identifier = alloca [130 x i8], align 16
  %name = alloca [130 x i8], align 16
  %description = alloca [130 x i8], align 16
  %srna = alloca %struct.StructRNA*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7602, metadata !DIExpression()), !dbg !7603
  store i32 %create, i32* %create.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %create.addr, metadata !7604, metadata !DIExpression()), !dbg !7605
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7606
  %interface_type = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 4, !dbg !7608
  %1 = load %struct.StructRNA*, %struct.StructRNA** %interface_type, align 8, !dbg !7608
  %tobool = icmp ne %struct.StructRNA* %1, null, !dbg !7606
  br i1 %tobool, label %if.then, label %if.else, !dbg !7609

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [130 x i8]* %base, metadata !7610, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.declare(metadata [130 x i8]* %identifier, metadata !7616, metadata !DIExpression()), !dbg !7617
  call void @llvm.dbg.declare(metadata [130 x i8]* %name, metadata !7618, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.declare(metadata [130 x i8]* %description, metadata !7620, metadata !DIExpression()), !dbg !7621
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna, metadata !7622, metadata !DIExpression()), !dbg !7623
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7624
  %interface_type1 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 4, !dbg !7625
  %3 = load %struct.StructRNA*, %struct.StructRNA** %interface_type1, align 8, !dbg !7625
  store %struct.StructRNA* %3, %struct.StructRNA** %srna, align 8, !dbg !7623
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7626
  %arraydecay = getelementptr inbounds [130 x i8], [130 x i8]* %base, i64 0, i64 0, !dbg !7627
  call void @ntree_interface_identifier_base(%struct.bNodeTree* %4, i8* %arraydecay), !dbg !7628
  %5 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7629
  %call = call i8* @RNA_struct_identifier(%struct.StructRNA* %5), !dbg !7631
  %arraydecay2 = getelementptr inbounds [130 x i8], [130 x i8]* %base, i64 0, i64 0, !dbg !7632
  %call3 = call i32 @strncmp(i8* %call, i8* %arraydecay2, i64 130) #6, !dbg !7633
  %cmp = icmp ne i32 %call3, 0, !dbg !7634
  br i1 %cmp, label %if.then4, label %if.end, !dbg !7635

if.then4:                                         ; preds = %if.then
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7636
  %arraydecay5 = getelementptr inbounds [130 x i8], [130 x i8]* %base, i64 0, i64 0, !dbg !7638
  %arraydecay6 = getelementptr inbounds [130 x i8], [130 x i8]* %identifier, i64 0, i64 0, !dbg !7639
  %arraydecay7 = getelementptr inbounds [130 x i8], [130 x i8]* %name, i64 0, i64 0, !dbg !7640
  %arraydecay8 = getelementptr inbounds [130 x i8], [130 x i8]* %description, i64 0, i64 0, !dbg !7641
  call void @ntree_interface_identifier(%struct.bNodeTree* %6, i8* %arraydecay5, i8* %arraydecay6, i32 130, i8* %arraydecay7, i8* %arraydecay8), !dbg !7642
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7643
  call void @RNA_def_struct_free_pointers(%struct.StructRNA* %7), !dbg !7644
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7645
  %arraydecay9 = getelementptr inbounds [130 x i8], [130 x i8]* %identifier, i64 0, i64 0, !dbg !7646
  call void @RNA_def_struct_identifier(%struct.StructRNA* %8, i8* %arraydecay9), !dbg !7647
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7648
  %arraydecay10 = getelementptr inbounds [130 x i8], [130 x i8]* %name, i64 0, i64 0, !dbg !7649
  %arraydecay11 = getelementptr inbounds [130 x i8], [130 x i8]* %description, i64 0, i64 0, !dbg !7650
  call void @RNA_def_struct_ui_text(%struct.StructRNA* %9, i8* %arraydecay10, i8* %arraydecay11), !dbg !7651
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7652
  call void @RNA_def_struct_duplicate_pointers(%struct.StructRNA* %10), !dbg !7653
  br label %if.end, !dbg !7654

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end15, !dbg !7655

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %create.addr, align 4, !dbg !7656
  %tobool12 = icmp ne i32 %11, 0, !dbg !7656
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !7658

if.then13:                                        ; preds = %if.else
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7659
  call void @ntree_interface_type_create(%struct.bNodeTree* %12), !dbg !7661
  br label %if.end14, !dbg !7662

if.end14:                                         ; preds = %if.then13, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7663
  %interface_type16 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %13, i32 0, i32 4, !dbg !7664
  %14 = load %struct.StructRNA*, %struct.StructRNA** %interface_type16, align 8, !dbg !7664
  ret %struct.StructRNA* %14, !dbg !7665
}

; Function Attrs: noinline nounwind uwtable
define internal void @ntree_interface_identifier_base(%struct.bNodeTree* %ntree, i8* %base) #0 !dbg !7666 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %base.addr = alloca i8*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7669, metadata !DIExpression()), !dbg !7670
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7671, metadata !DIExpression()), !dbg !7672
  %0 = load i8*, i8** %base.addr, align 8, !dbg !7673
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7674
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 0, !dbg !7675
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !7676
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !7674
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !7677
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.271, i64 0, i64 0), i8* %add.ptr) #7, !dbg !7678
  %2 = load i8*, i8** %base.addr, align 8, !dbg !7679
  call void @RNA_identifier_sanitize(i8* %2, i32 0), !dbg !7680
  ret void, !dbg !7681
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

declare dso_local i8* @RNA_struct_identifier(%struct.StructRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ntree_interface_identifier(%struct.bNodeTree* %ntree, i8* %base, i8* %identifier, i32 %maxlen, i8* %name, i8* %description) #0 !dbg !7682 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %base.addr = alloca i8*, align 8
  %identifier.addr = alloca i8*, align 8
  %maxlen.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %description.addr = alloca i8*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7685, metadata !DIExpression()), !dbg !7686
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !7687, metadata !DIExpression()), !dbg !7688
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !7689, metadata !DIExpression()), !dbg !7690
  store i32 %maxlen, i32* %maxlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxlen.addr, metadata !7691, metadata !DIExpression()), !dbg !7692
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7693, metadata !DIExpression()), !dbg !7694
  store i8* %description, i8** %description.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %description.addr, metadata !7695, metadata !DIExpression()), !dbg !7696
  %0 = load i8*, i8** %identifier.addr, align 8, !dbg !7697
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !7697
  store i8 0, i8* %arrayidx, align 1, !dbg !7698
  %1 = load i8*, i8** %base.addr, align 8, !dbg !7699
  %2 = load i8*, i8** %identifier.addr, align 8, !dbg !7700
  %3 = load i32, i32* %maxlen.addr, align 4, !dbg !7701
  %call = call zeroext i8 @BLI_uniquename_cb(i8 (i8*, i8*)* @ntree_interface_unique_identifier_check, i8* null, i8* %1, i8 zeroext 95, i8* %2, i32 %3), !dbg !7702
  %4 = load i8*, i8** %name.addr, align 8, !dbg !7703
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7704
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 0, !dbg !7705
  %name1 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !7706
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name1, i64 0, i64 0, !dbg !7704
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !7707
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.272, i64 0, i64 0), i8* %add.ptr) #7, !dbg !7708
  %6 = load i8*, i8** %description.addr, align 8, !dbg !7709
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7710
  %id3 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 0, !dbg !7711
  %name4 = getelementptr inbounds %struct.ID, %struct.ID* %id3, i32 0, i32 4, !dbg !7712
  %arraydecay5 = getelementptr inbounds [66 x i8], [66 x i8]* %name4, i64 0, i64 0, !dbg !7710
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2, !dbg !7713
  %call7 = call i32 (i8*, i8*, ...) @sprintf(i8* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.273, i64 0, i64 0), i8* %add.ptr6) #7, !dbg !7714
  ret void, !dbg !7715
}

declare dso_local void @RNA_def_struct_free_pointers(%struct.StructRNA*) #2

declare dso_local void @RNA_def_struct_identifier(%struct.StructRNA*, i8*) #2

declare dso_local void @RNA_def_struct_ui_text(%struct.StructRNA*, i8*, i8*) #2

declare dso_local void @RNA_def_struct_duplicate_pointers(%struct.StructRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ntree_interface_type_create(%struct.bNodeTree* %ntree) #0 !dbg !7716 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %srna = alloca %struct.StructRNA*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %base = alloca [130 x i8], align 16
  %identifier = alloca [130 x i8], align 16
  %name = alloca [130 x i8], align 16
  %description = alloca [130 x i8], align 16
  %stype = alloca %struct.bNodeSocketType*, align 8
  %stype15 = alloca %struct.bNodeSocketType*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7717, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %srna, metadata !7719, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !7721, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.declare(metadata [130 x i8]* %base, metadata !7723, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.declare(metadata [130 x i8]* %identifier, metadata !7725, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.declare(metadata [130 x i8]* %name, metadata !7727, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.declare(metadata [130 x i8]* %description, metadata !7729, metadata !DIExpression()), !dbg !7730
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7731
  %arraydecay = getelementptr inbounds [130 x i8], [130 x i8]* %base, i64 0, i64 0, !dbg !7732
  call void @ntree_interface_identifier_base(%struct.bNodeTree* %0, i8* %arraydecay), !dbg !7733
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7734
  %arraydecay1 = getelementptr inbounds [130 x i8], [130 x i8]* %base, i64 0, i64 0, !dbg !7735
  %arraydecay2 = getelementptr inbounds [130 x i8], [130 x i8]* %identifier, i64 0, i64 0, !dbg !7736
  %arraydecay3 = getelementptr inbounds [130 x i8], [130 x i8]* %name, i64 0, i64 0, !dbg !7737
  %arraydecay4 = getelementptr inbounds [130 x i8], [130 x i8]* %description, i64 0, i64 0, !dbg !7738
  call void @ntree_interface_identifier(%struct.bNodeTree* %1, i8* %arraydecay1, i8* %arraydecay2, i32 130, i8* %arraydecay3, i8* %arraydecay4), !dbg !7739
  %arraydecay5 = getelementptr inbounds [130 x i8], [130 x i8]* %identifier, i64 0, i64 0, !dbg !7740
  %call = call %struct.StructRNA* @RNA_def_struct_ptr(%struct.BlenderRNA* @BLENDER_RNA, i8* %arraydecay5, %struct.StructRNA* @RNA_PropertyGroup), !dbg !7741
  store %struct.StructRNA* %call, %struct.StructRNA** %srna, align 8, !dbg !7742
  %2 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7743
  %arraydecay6 = getelementptr inbounds [130 x i8], [130 x i8]* %name, i64 0, i64 0, !dbg !7744
  %arraydecay7 = getelementptr inbounds [130 x i8], [130 x i8]* %description, i64 0, i64 0, !dbg !7745
  call void @RNA_def_struct_ui_text(%struct.StructRNA* %2, i8* %arraydecay6, i8* %arraydecay7), !dbg !7746
  %3 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7747
  call void @RNA_def_struct_duplicate_pointers(%struct.StructRNA* %3), !dbg !7748
  %4 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7749
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7750
  %interface_type = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %5, i32 0, i32 4, !dbg !7751
  store %struct.StructRNA* %4, %struct.StructRNA** %interface_type, align 8, !dbg !7752
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7753
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7754
  %8 = bitcast %struct.bNodeTree* %7 to i8*, !dbg !7754
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %6, i8* %8), !dbg !7755
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7756
  %inputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %9, i32 0, i32 22, !dbg !7758
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !7759
  %10 = load i8*, i8** %first, align 8, !dbg !7759
  %11 = bitcast i8* %10 to %struct.bNodeSocket*, !dbg !7756
  store %struct.bNodeSocket* %11, %struct.bNodeSocket** %sock, align 8, !dbg !7760
  br label %for.cond, !dbg !7761

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7762
  %tobool = icmp ne %struct.bNodeSocket* %12, null, !dbg !7764
  br i1 %tobool, label %for.body, label %for.end, !dbg !7764

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketType** %stype, metadata !7765, metadata !DIExpression()), !dbg !7767
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7768
  %typeinfo = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %13, i32 0, i32 11, !dbg !7769
  %14 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %typeinfo, align 8, !dbg !7769
  store %struct.bNodeSocketType* %14, %struct.bNodeSocketType** %stype, align 8, !dbg !7767
  %15 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %stype, align 8, !dbg !7770
  %tobool8 = icmp ne %struct.bNodeSocketType* %15, null, !dbg !7770
  br i1 %tobool8, label %land.lhs.true, label %if.end, !dbg !7772

land.lhs.true:                                    ; preds = %for.body
  %16 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %stype, align 8, !dbg !7773
  %interface_register_properties = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %16, i32 0, i32 5, !dbg !7774
  %17 = load void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)** %interface_register_properties, align 8, !dbg !7774
  %tobool9 = icmp ne void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)* %17, null, !dbg !7773
  br i1 %tobool9, label %if.then, label %if.end, !dbg !7775

if.then:                                          ; preds = %land.lhs.true
  %18 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %stype, align 8, !dbg !7776
  %interface_register_properties10 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %18, i32 0, i32 5, !dbg !7777
  %19 = load void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)** %interface_register_properties10, align 8, !dbg !7777
  %20 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7778
  %21 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7779
  %22 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7780
  call void %19(%struct.bNodeTree* %20, %struct.bNodeSocket* %21, %struct.StructRNA* %22), !dbg !7776
  br label %if.end, !dbg !7776

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7781

for.inc:                                          ; preds = %if.end
  %23 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7782
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %23, i32 0, i32 0, !dbg !7783
  %24 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !7783
  store %struct.bNodeSocket* %24, %struct.bNodeSocket** %sock, align 8, !dbg !7784
  br label %for.cond, !dbg !7785, !llvm.loop !7786

for.end:                                          ; preds = %for.cond
  %25 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7788
  %outputs = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %25, i32 0, i32 23, !dbg !7790
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !7791
  %26 = load i8*, i8** %first11, align 8, !dbg !7791
  %27 = bitcast i8* %26 to %struct.bNodeSocket*, !dbg !7788
  store %struct.bNodeSocket* %27, %struct.bNodeSocket** %sock, align 8, !dbg !7792
  br label %for.cond12, !dbg !7793

for.cond12:                                       ; preds = %for.inc24, %for.end
  %28 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7794
  %tobool13 = icmp ne %struct.bNodeSocket* %28, null, !dbg !7796
  br i1 %tobool13, label %for.body14, label %for.end26, !dbg !7796

for.body14:                                       ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketType** %stype15, metadata !7797, metadata !DIExpression()), !dbg !7799
  %29 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7800
  %typeinfo16 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %29, i32 0, i32 11, !dbg !7801
  %30 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %typeinfo16, align 8, !dbg !7801
  store %struct.bNodeSocketType* %30, %struct.bNodeSocketType** %stype15, align 8, !dbg !7799
  %31 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %stype15, align 8, !dbg !7802
  %tobool17 = icmp ne %struct.bNodeSocketType* %31, null, !dbg !7802
  br i1 %tobool17, label %land.lhs.true18, label %if.end23, !dbg !7804

land.lhs.true18:                                  ; preds = %for.body14
  %32 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %stype15, align 8, !dbg !7805
  %interface_register_properties19 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %32, i32 0, i32 5, !dbg !7806
  %33 = load void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)** %interface_register_properties19, align 8, !dbg !7806
  %tobool20 = icmp ne void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)* %33, null, !dbg !7805
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !7807

if.then21:                                        ; preds = %land.lhs.true18
  %34 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %stype15, align 8, !dbg !7808
  %interface_register_properties22 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %34, i32 0, i32 5, !dbg !7809
  %35 = load void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)** %interface_register_properties22, align 8, !dbg !7809
  %36 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7810
  %37 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7811
  %38 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7812
  call void %35(%struct.bNodeTree* %36, %struct.bNodeSocket* %37, %struct.StructRNA* %38), !dbg !7808
  br label %if.end23, !dbg !7808

if.end23:                                         ; preds = %if.then21, %land.lhs.true18, %for.body14
  br label %for.inc24, !dbg !7813

for.inc24:                                        ; preds = %if.end23
  %39 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !7814
  %next25 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %39, i32 0, i32 0, !dbg !7815
  %40 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next25, align 8, !dbg !7815
  store %struct.bNodeSocket* %40, %struct.bNodeSocket** %sock, align 8, !dbg !7816
  br label %for.cond12, !dbg !7817, !llvm.loop !7818

for.end26:                                        ; preds = %for.cond12
  ret void, !dbg !7820
}

declare dso_local void @RNA_struct_free(%struct.BlenderRNA*, %struct.StructRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeInterfaceTypeUpdate(%struct.bNodeTree* %ntree) #0 !dbg !7821 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7822, metadata !DIExpression()), !dbg !7823
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7824
  call void @ntreeInterfaceTypeFree(%struct.bNodeTree* %0), !dbg !7825
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7826
  call void @ntree_interface_type_create(%struct.bNodeTree* %1), !dbg !7827
  ret void, !dbg !7828
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ntreeHasType(%struct.bNodeTree* %ntree, i32 %type) #0 !dbg !7829 {
entry:
  %retval = alloca i8, align 1
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %type.addr = alloca i32, align 4
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7834, metadata !DIExpression()), !dbg !7835
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7836, metadata !DIExpression()), !dbg !7837
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !7838, metadata !DIExpression()), !dbg !7839
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7840
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !7840
  br i1 %tobool, label %if.then, label %if.end5, !dbg !7842

if.then:                                          ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7843
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 7, !dbg !7845
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !7846
  %2 = load i8*, i8** %first, align 8, !dbg !7846
  %3 = bitcast i8* %2 to %struct.bNode*, !dbg !7843
  store %struct.bNode* %3, %struct.bNode** %node, align 8, !dbg !7847
  br label %for.cond, !dbg !7848

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7849
  %tobool1 = icmp ne %struct.bNode* %4, null, !dbg !7851
  br i1 %tobool1, label %for.body, label %for.end, !dbg !7851

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7852
  %type2 = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 8, !dbg !7854
  %6 = load i16, i16* %type2, align 4, !dbg !7854
  %conv = sext i16 %6 to i32, !dbg !7852
  %7 = load i32, i32* %type.addr, align 4, !dbg !7855
  %cmp = icmp eq i32 %conv, %7, !dbg !7856
  br i1 %cmp, label %if.then4, label %if.end, !dbg !7857

if.then4:                                         ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !7858
  br label %return, !dbg !7858

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7855

for.inc:                                          ; preds = %if.end
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7859
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 0, !dbg !7860
  %9 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !7860
  store %struct.bNode* %9, %struct.bNode** %node, align 8, !dbg !7861
  br label %for.cond, !dbg !7862, !llvm.loop !7863

for.end:                                          ; preds = %for.cond
  br label %if.end5, !dbg !7864

if.end5:                                          ; preds = %for.end, %entry
  store i8 0, i8* %retval, align 1, !dbg !7865
  br label %return, !dbg !7865

return:                                           ; preds = %if.end5, %if.then4
  %10 = load i8, i8* %retval, align 1, !dbg !7866
  ret i8 %10, !dbg !7866
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ntreeHasTree(%struct.bNodeTree* %ntree, %struct.bNodeTree* %lookup) #0 !dbg !7867 {
entry:
  %retval = alloca i8, align 1
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %lookup.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7870, metadata !DIExpression()), !dbg !7871
  store %struct.bNodeTree* %lookup, %struct.bNodeTree** %lookup.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %lookup.addr, metadata !7872, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !7874, metadata !DIExpression()), !dbg !7875
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7876
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %lookup.addr, align 8, !dbg !7878
  %cmp = icmp eq %struct.bNodeTree* %0, %1, !dbg !7879
  br i1 %cmp, label %if.then, label %if.end, !dbg !7880

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !7881
  br label %return, !dbg !7881

if.end:                                           ; preds = %entry
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7882
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 7, !dbg !7884
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !7885
  %3 = load i8*, i8** %first, align 8, !dbg !7885
  %4 = bitcast i8* %3 to %struct.bNode*, !dbg !7882
  store %struct.bNode* %4, %struct.bNode** %node, align 8, !dbg !7886
  br label %for.cond, !dbg !7887

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7888
  %tobool = icmp ne %struct.bNode* %5, null, !dbg !7890
  br i1 %tobool, label %for.body, label %for.end, !dbg !7890

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7891
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 8, !dbg !7893
  %7 = load i16, i16* %type, align 4, !dbg !7893
  %conv = sext i16 %7 to i32, !dbg !7891
  %cmp1 = icmp eq i32 %conv, 2, !dbg !7894
  br i1 %cmp1, label %land.lhs.true, label %if.end9, !dbg !7895

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7896
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 20, !dbg !7897
  %9 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !7897
  %tobool3 = icmp ne %struct.ID* %9, null, !dbg !7896
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !7898

if.then4:                                         ; preds = %land.lhs.true
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7899
  %id5 = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 20, !dbg !7901
  %11 = load %struct.ID*, %struct.ID** %id5, align 8, !dbg !7901
  %12 = bitcast %struct.ID* %11 to %struct.bNodeTree*, !dbg !7902
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %lookup.addr, align 8, !dbg !7903
  %call = call zeroext i8 @ntreeHasTree(%struct.bNodeTree* %12, %struct.bNodeTree* %13), !dbg !7904
  %tobool6 = icmp ne i8 %call, 0, !dbg !7904
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7905

if.then7:                                         ; preds = %if.then4
  store i8 1, i8* %retval, align 1, !dbg !7906
  br label %return, !dbg !7906

if.end8:                                          ; preds = %if.then4
  br label %if.end9, !dbg !7907

if.end9:                                          ; preds = %if.end8, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7897

for.inc:                                          ; preds = %if.end9
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !7908
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 0, !dbg !7909
  %15 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !7909
  store %struct.bNode* %15, %struct.bNode** %node, align 8, !dbg !7910
  br label %for.cond, !dbg !7911, !llvm.loop !7912

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !7914
  br label %return, !dbg !7914

return:                                           ; preds = %for.end, %if.then7, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !7915
  ret i8 %16, !dbg !7915
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNodeLink* @nodeFindLink(%struct.bNodeTree* %ntree, %struct.bNodeSocket* %from, %struct.bNodeSocket* %to) #0 !dbg !7916 {
entry:
  %retval = alloca %struct.bNodeLink*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %from.addr = alloca %struct.bNodeSocket*, align 8
  %to.addr = alloca %struct.bNodeSocket*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7919, metadata !DIExpression()), !dbg !7920
  store %struct.bNodeSocket* %from, %struct.bNodeSocket** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %from.addr, metadata !7921, metadata !DIExpression()), !dbg !7922
  store %struct.bNodeSocket* %to, %struct.bNodeSocket** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %to.addr, metadata !7923, metadata !DIExpression()), !dbg !7924
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !7925, metadata !DIExpression()), !dbg !7926
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7927
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 8, !dbg !7929
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !7930
  %1 = load i8*, i8** %first, align 8, !dbg !7930
  %2 = bitcast i8* %1 to %struct.bNodeLink*, !dbg !7927
  store %struct.bNodeLink* %2, %struct.bNodeLink** %link, align 8, !dbg !7931
  br label %for.cond, !dbg !7932

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7933
  %tobool = icmp ne %struct.bNodeLink* %3, null, !dbg !7935
  br i1 %tobool, label %for.body, label %for.end, !dbg !7935

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7936
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %4, i32 0, i32 4, !dbg !7939
  %5 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !7939
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %from.addr, align 8, !dbg !7940
  %cmp = icmp eq %struct.bNodeSocket* %5, %6, !dbg !7941
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7942

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7943
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %7, i32 0, i32 5, !dbg !7944
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !7944
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %to.addr, align 8, !dbg !7945
  %cmp1 = icmp eq %struct.bNodeSocket* %8, %9, !dbg !7946
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7947

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7948
  store %struct.bNodeLink* %10, %struct.bNodeLink** %retval, align 8, !dbg !7949
  br label %return, !dbg !7949

if.end:                                           ; preds = %land.lhs.true, %for.body
  %11 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7950
  %fromsock2 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %11, i32 0, i32 4, !dbg !7952
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock2, align 8, !dbg !7952
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %to.addr, align 8, !dbg !7953
  %cmp3 = icmp eq %struct.bNodeSocket* %12, %13, !dbg !7954
  br i1 %cmp3, label %land.lhs.true4, label %if.end8, !dbg !7955

land.lhs.true4:                                   ; preds = %if.end
  %14 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7956
  %tosock5 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %14, i32 0, i32 5, !dbg !7957
  %15 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock5, align 8, !dbg !7957
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %from.addr, align 8, !dbg !7958
  %cmp6 = icmp eq %struct.bNodeSocket* %15, %16, !dbg !7959
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !7960

if.then7:                                         ; preds = %land.lhs.true4
  %17 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7961
  store %struct.bNodeLink* %17, %struct.bNodeLink** %retval, align 8, !dbg !7962
  br label %return, !dbg !7962

if.end8:                                          ; preds = %land.lhs.true4, %if.end
  br label %for.inc, !dbg !7963

for.inc:                                          ; preds = %if.end8
  %18 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7964
  %next = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %18, i32 0, i32 0, !dbg !7965
  %19 = load %struct.bNodeLink*, %struct.bNodeLink** %next, align 8, !dbg !7965
  store %struct.bNodeLink* %19, %struct.bNodeLink** %link, align 8, !dbg !7966
  br label %for.cond, !dbg !7967, !llvm.loop !7968

for.end:                                          ; preds = %for.cond
  store %struct.bNodeLink* null, %struct.bNodeLink** %retval, align 8, !dbg !7970
  br label %return, !dbg !7970

return:                                           ; preds = %for.end, %if.then7, %if.then
  %20 = load %struct.bNodeLink*, %struct.bNodeLink** %retval, align 8, !dbg !7971
  ret %struct.bNodeLink* %20, !dbg !7971
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @nodeCountSocketLinks(%struct.bNodeTree* %ntree, %struct.bNodeSocket* %sock) #0 !dbg !7972 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %sock.addr = alloca %struct.bNodeSocket*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %tot = alloca i32, align 4
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !7975, metadata !DIExpression()), !dbg !7976
  store %struct.bNodeSocket* %sock, %struct.bNodeSocket** %sock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock.addr, metadata !7977, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !7979, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !7981, metadata !DIExpression()), !dbg !7982
  store i32 0, i32* %tot, align 4, !dbg !7982
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !7983
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 8, !dbg !7985
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !7986
  %1 = load i8*, i8** %first, align 8, !dbg !7986
  %2 = bitcast i8* %1 to %struct.bNodeLink*, !dbg !7983
  store %struct.bNodeLink* %2, %struct.bNodeLink** %link, align 8, !dbg !7987
  br label %for.cond, !dbg !7988

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7989
  %tobool = icmp ne %struct.bNodeLink* %3, null, !dbg !7991
  br i1 %tobool, label %for.body, label %for.end, !dbg !7991

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7992
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %4, i32 0, i32 4, !dbg !7995
  %5 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !7995
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !7996
  %cmp = icmp eq %struct.bNodeSocket* %5, %6, !dbg !7997
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7998

lor.lhs.false:                                    ; preds = %for.body
  %7 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !7999
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %7, i32 0, i32 5, !dbg !8000
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !8000
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock.addr, align 8, !dbg !8001
  %cmp1 = icmp eq %struct.bNodeSocket* %8, %9, !dbg !8002
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8003

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load i32, i32* %tot, align 4, !dbg !8004
  %inc = add nsw i32 %10, 1, !dbg !8004
  store i32 %inc, i32* %tot, align 4, !dbg !8004
  br label %if.end, !dbg !8005

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !8006

for.inc:                                          ; preds = %if.end
  %11 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !8007
  %next = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %11, i32 0, i32 0, !dbg !8008
  %12 = load %struct.bNodeLink*, %struct.bNodeLink** %next, align 8, !dbg !8008
  store %struct.bNodeLink* %12, %struct.bNodeLink** %link, align 8, !dbg !8009
  br label %for.cond, !dbg !8010, !llvm.loop !8011

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %tot, align 4, !dbg !8013
  ret i32 %13, !dbg !8014
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNode* @nodeGetActive(%struct.bNodeTree* %ntree) #0 !dbg !8015 {
entry:
  %retval = alloca %struct.bNode*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !8018, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8020, metadata !DIExpression()), !dbg !8021
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8022
  %cmp = icmp eq %struct.bNodeTree* %0, null, !dbg !8024
  br i1 %cmp, label %if.then, label %if.end, !dbg !8025

if.then:                                          ; preds = %entry
  store %struct.bNode* null, %struct.bNode** %retval, align 8, !dbg !8026
  br label %return, !dbg !8026

if.end:                                           ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8027
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 7, !dbg !8029
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !8030
  %2 = load i8*, i8** %first, align 8, !dbg !8030
  %3 = bitcast i8* %2 to %struct.bNode*, !dbg !8027
  store %struct.bNode* %3, %struct.bNode** %node, align 8, !dbg !8031
  br label %for.cond, !dbg !8032

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8033
  %tobool = icmp ne %struct.bNode* %4, null, !dbg !8035
  br i1 %tobool, label %for.body, label %for.end, !dbg !8035

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8036
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 7, !dbg !8038
  %6 = load i32, i32* %flag, align 8, !dbg !8038
  %and = and i32 %6, 16, !dbg !8039
  %tobool1 = icmp ne i32 %and, 0, !dbg !8039
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !8040

if.then2:                                         ; preds = %for.body
  br label %for.end, !dbg !8041

if.end3:                                          ; preds = %for.body
  br label %for.inc, !dbg !8042

for.inc:                                          ; preds = %if.end3
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8043
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 0, !dbg !8044
  %8 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !8044
  store %struct.bNode* %8, %struct.bNode** %node, align 8, !dbg !8045
  br label %for.cond, !dbg !8046, !llvm.loop !8047

for.end:                                          ; preds = %if.then2, %for.cond
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8049
  store %struct.bNode* %9, %struct.bNode** %retval, align 8, !dbg !8050
  br label %return, !dbg !8050

return:                                           ; preds = %for.end, %if.then
  %10 = load %struct.bNode*, %struct.bNode** %retval, align 8, !dbg !8051
  ret %struct.bNode* %10, !dbg !8051
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bNode* @nodeGetActiveID(%struct.bNodeTree* %ntree, i16 signext %idtype) #0 !dbg !8052 {
entry:
  %retval = alloca %struct.bNode*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %idtype.addr = alloca i16, align 2
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !8055, metadata !DIExpression()), !dbg !8056
  store i16 %idtype, i16* %idtype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %idtype.addr, metadata !8057, metadata !DIExpression()), !dbg !8058
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8059
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !8059
  br i1 %tobool, label %if.then, label %if.else, !dbg !8061

if.then:                                          ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8062
  %active_viewer_key = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 25, !dbg !8063
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8064
  %3 = load i16, i16* %idtype.addr, align 2, !dbg !8065
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %active_viewer_key, i32 0, i32 0, !dbg !8066
  %4 = load i32, i32* %coerce.dive, align 8, !dbg !8066
  %5 = load i32, i32* getelementptr inbounds (%struct.bNodeInstanceKey, %struct.bNodeInstanceKey* @NODE_INSTANCE_KEY_BASE, i32 0, i32 0), align 4, !dbg !8066
  %call = call %struct.bNode* @node_get_active_id_recursive(i32 %4, i32 %5, %struct.bNodeTree* %2, i16 signext %3), !dbg !8066
  store %struct.bNode* %call, %struct.bNode** %retval, align 8, !dbg !8067
  br label %return, !dbg !8067

if.else:                                          ; preds = %entry
  store %struct.bNode* null, %struct.bNode** %retval, align 8, !dbg !8068
  br label %return, !dbg !8068

return:                                           ; preds = %if.else, %if.then
  %6 = load %struct.bNode*, %struct.bNode** %retval, align 8, !dbg !8069
  ret %struct.bNode* %6, !dbg !8069
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.bNode* @node_get_active_id_recursive(i32 %active_key.coerce, i32 %parent_key.coerce, %struct.bNodeTree* %ntree, i16 signext %idtype) #0 !dbg !8070 {
entry:
  %retval = alloca %struct.bNode*, align 8
  %active_key = alloca %struct.bNodeInstanceKey, align 4
  %parent_key = alloca %struct.bNodeInstanceKey, align 4
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %idtype.addr = alloca i16, align 2
  %node = alloca %struct.bNode*, align 8
  %node14 = alloca %struct.bNode*, align 8
  %tnode = alloca %struct.bNode*, align 8
  %group = alloca %struct.bNodeTree*, align 8
  %group_key = alloca %struct.bNodeInstanceKey, align 4
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %active_key, i32 0, i32 0
  store i32 %active_key.coerce, i32* %coerce.dive, align 4
  %coerce.dive1 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %parent_key, i32 0, i32 0
  store i32 %parent_key.coerce, i32* %coerce.dive1, align 4
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %active_key, metadata !8073, metadata !DIExpression()), !dbg !8074
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %parent_key, metadata !8075, metadata !DIExpression()), !dbg !8076
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !8077, metadata !DIExpression()), !dbg !8078
  store i16 %idtype, i16* %idtype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %idtype.addr, metadata !8079, metadata !DIExpression()), !dbg !8080
  %value = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %parent_key, i32 0, i32 0, !dbg !8081
  %0 = load i32, i32* %value, align 4, !dbg !8081
  %value2 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %active_key, i32 0, i32 0, !dbg !8083
  %1 = load i32, i32* %value2, align 4, !dbg !8083
  %cmp = icmp eq i32 %0, %1, !dbg !8084
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8085

lor.lhs.false:                                    ; preds = %entry
  %value3 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %active_key, i32 0, i32 0, !dbg !8086
  %2 = load i32, i32* %value3, align 4, !dbg !8086
  %cmp4 = icmp eq i32 %2, 0, !dbg !8087
  br i1 %cmp4, label %if.then, label %if.else, !dbg !8088

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8089, metadata !DIExpression()), !dbg !8091
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8092
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 7, !dbg !8094
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !8095
  %4 = load i8*, i8** %first, align 8, !dbg !8095
  %5 = bitcast i8* %4 to %struct.bNode*, !dbg !8092
  store %struct.bNode* %5, %struct.bNode** %node, align 8, !dbg !8096
  br label %for.cond, !dbg !8097

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8098
  %tobool = icmp ne %struct.bNode* %6, null, !dbg !8100
  br i1 %tobool, label %for.body, label %for.end, !dbg !8100

for.body:                                         ; preds = %for.cond
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8101
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 20, !dbg !8103
  %8 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !8103
  %tobool5 = icmp ne %struct.ID* %8, null, !dbg !8101
  br i1 %tobool5, label %land.lhs.true, label %if.end13, !dbg !8104

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8105
  %id6 = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 20, !dbg !8105
  %10 = load %struct.ID*, %struct.ID** %id6, align 8, !dbg !8105
  %name = getelementptr inbounds %struct.ID, %struct.ID* %10, i32 0, i32 4, !dbg !8105
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8105
  %11 = bitcast i8* %arraydecay to i16*, !dbg !8105
  %12 = load i16, i16* %11, align 8, !dbg !8105
  %conv = sext i16 %12 to i32, !dbg !8105
  %13 = load i16, i16* %idtype.addr, align 2, !dbg !8106
  %conv7 = sext i16 %13 to i32, !dbg !8106
  %cmp8 = icmp eq i32 %conv, %conv7, !dbg !8107
  br i1 %cmp8, label %if.then10, label %if.end13, !dbg !8108

if.then10:                                        ; preds = %land.lhs.true
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8109
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 7, !dbg !8111
  %15 = load i32, i32* %flag, align 8, !dbg !8111
  %and = and i32 %15, 32, !dbg !8112
  %tobool11 = icmp ne i32 %and, 0, !dbg !8112
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !8113

if.then12:                                        ; preds = %if.then10
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8114
  store %struct.bNode* %16, %struct.bNode** %retval, align 8, !dbg !8115
  br label %return, !dbg !8115

if.end:                                           ; preds = %if.then10
  br label %if.end13, !dbg !8116

if.end13:                                         ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8106

for.inc:                                          ; preds = %if.end13
  %17 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8117
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %17, i32 0, i32 0, !dbg !8118
  %18 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !8118
  store %struct.bNode* %18, %struct.bNode** %node, align 8, !dbg !8119
  br label %for.cond, !dbg !8120, !llvm.loop !8121

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !8123

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.bNode** %node14, metadata !8124, metadata !DIExpression()), !dbg !8126
  call void @llvm.dbg.declare(metadata %struct.bNode** %tnode, metadata !8127, metadata !DIExpression()), !dbg !8128
  %19 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8129
  %nodes15 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %19, i32 0, i32 7, !dbg !8131
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes15, i32 0, i32 0, !dbg !8132
  %20 = load i8*, i8** %first16, align 8, !dbg !8132
  %21 = bitcast i8* %20 to %struct.bNode*, !dbg !8129
  store %struct.bNode* %21, %struct.bNode** %node14, align 8, !dbg !8133
  br label %for.cond17, !dbg !8134

for.cond17:                                       ; preds = %for.inc37, %if.else
  %22 = load %struct.bNode*, %struct.bNode** %node14, align 8, !dbg !8135
  %tobool18 = icmp ne %struct.bNode* %22, null, !dbg !8137
  br i1 %tobool18, label %for.body19, label %for.end39, !dbg !8137

for.body19:                                       ; preds = %for.cond17
  %23 = load %struct.bNode*, %struct.bNode** %node14, align 8, !dbg !8138
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %23, i32 0, i32 8, !dbg !8141
  %24 = load i16, i16* %type, align 4, !dbg !8141
  %conv20 = sext i16 %24 to i32, !dbg !8138
  %cmp21 = icmp eq i32 %conv20, 2, !dbg !8142
  br i1 %cmp21, label %if.then23, label %if.end36, !dbg !8143

if.then23:                                        ; preds = %for.body19
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %group, metadata !8144, metadata !DIExpression()), !dbg !8146
  %25 = load %struct.bNode*, %struct.bNode** %node14, align 8, !dbg !8147
  %id24 = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 20, !dbg !8148
  %26 = load %struct.ID*, %struct.ID** %id24, align 8, !dbg !8148
  %27 = bitcast %struct.ID* %26 to %struct.bNodeTree*, !dbg !8149
  store %struct.bNodeTree* %27, %struct.bNodeTree** %group, align 8, !dbg !8146
  %28 = load %struct.bNodeTree*, %struct.bNodeTree** %group, align 8, !dbg !8150
  %tobool25 = icmp ne %struct.bNodeTree* %28, null, !dbg !8150
  br i1 %tobool25, label %if.then26, label %if.end35, !dbg !8152

if.then26:                                        ; preds = %if.then23
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %group_key, metadata !8153, metadata !DIExpression()), !dbg !8155
  %29 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8156
  %30 = load %struct.bNode*, %struct.bNode** %node14, align 8, !dbg !8157
  %coerce.dive27 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %parent_key, i32 0, i32 0, !dbg !8158
  %31 = load i32, i32* %coerce.dive27, align 4, !dbg !8158
  %call = call i32 @BKE_node_instance_key(i32 %31, %struct.bNodeTree* %29, %struct.bNode* %30), !dbg !8158
  %coerce.dive28 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %group_key, i32 0, i32 0, !dbg !8158
  store i32 %call, i32* %coerce.dive28, align 4, !dbg !8158
  %32 = load %struct.bNodeTree*, %struct.bNodeTree** %group, align 8, !dbg !8159
  %33 = load i16, i16* %idtype.addr, align 2, !dbg !8160
  %coerce.dive29 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %active_key, i32 0, i32 0, !dbg !8161
  %34 = load i32, i32* %coerce.dive29, align 4, !dbg !8161
  %coerce.dive30 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %group_key, i32 0, i32 0, !dbg !8161
  %35 = load i32, i32* %coerce.dive30, align 4, !dbg !8161
  %call31 = call %struct.bNode* @node_get_active_id_recursive(i32 %34, i32 %35, %struct.bNodeTree* %32, i16 signext %33), !dbg !8161
  store %struct.bNode* %call31, %struct.bNode** %tnode, align 8, !dbg !8162
  %36 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !8163
  %tobool32 = icmp ne %struct.bNode* %36, null, !dbg !8163
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !8165

if.then33:                                        ; preds = %if.then26
  %37 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !8166
  store %struct.bNode* %37, %struct.bNode** %retval, align 8, !dbg !8167
  br label %return, !dbg !8167

if.end34:                                         ; preds = %if.then26
  br label %if.end35, !dbg !8168

if.end35:                                         ; preds = %if.end34, %if.then23
  br label %if.end36, !dbg !8169

if.end36:                                         ; preds = %if.end35, %for.body19
  br label %for.inc37, !dbg !8170

for.inc37:                                        ; preds = %if.end36
  %38 = load %struct.bNode*, %struct.bNode** %node14, align 8, !dbg !8171
  %next38 = getelementptr inbounds %struct.bNode, %struct.bNode* %38, i32 0, i32 0, !dbg !8172
  %39 = load %struct.bNode*, %struct.bNode** %next38, align 8, !dbg !8172
  store %struct.bNode* %39, %struct.bNode** %node14, align 8, !dbg !8173
  br label %for.cond17, !dbg !8174, !llvm.loop !8175

for.end39:                                        ; preds = %for.cond17
  br label %if.end40

if.end40:                                         ; preds = %for.end39, %for.end
  store %struct.bNode* null, %struct.bNode** %retval, align 8, !dbg !8177
  br label %return, !dbg !8177

return:                                           ; preds = %if.end40, %if.then33, %if.then12
  %40 = load %struct.bNode*, %struct.bNode** %retval, align 8, !dbg !8178
  ret %struct.bNode* %40, !dbg !8178
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @nodeSetActiveID(%struct.bNodeTree* %ntree, i16 signext %idtype, %struct.ID* %id) #0 !dbg !8179 {
entry:
  %retval = alloca i8, align 1
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %idtype.addr = alloca i16, align 2
  %id.addr = alloca %struct.ID*, align 8
  %node = alloca %struct.bNode*, align 8
  %ok = alloca i8, align 1
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !8182, metadata !DIExpression()), !dbg !8183
  store i16 %idtype, i16* %idtype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %idtype.addr, metadata !8184, metadata !DIExpression()), !dbg !8185
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8188, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !8190, metadata !DIExpression()), !dbg !8191
  store i8 0, i8* %ok, align 1, !dbg !8191
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8192
  %cmp = icmp eq %struct.bNodeTree* %0, null, !dbg !8194
  br i1 %cmp, label %if.then, label %if.end, !dbg !8195

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %ok, align 1, !dbg !8196
  store i8 %1, i8* %retval, align 1, !dbg !8197
  br label %return, !dbg !8197

if.end:                                           ; preds = %entry
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8198
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 7, !dbg !8200
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !8201
  %3 = load i8*, i8** %first, align 8, !dbg !8201
  %4 = bitcast i8* %3 to %struct.bNode*, !dbg !8198
  store %struct.bNode* %4, %struct.bNode** %node, align 8, !dbg !8202
  br label %for.cond, !dbg !8203

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8204
  %tobool = icmp ne %struct.bNode* %5, null, !dbg !8206
  br i1 %tobool, label %for.body, label %for.end, !dbg !8206

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8207
  %id1 = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 20, !dbg !8210
  %7 = load %struct.ID*, %struct.ID** %id1, align 8, !dbg !8210
  %tobool2 = icmp ne %struct.ID* %7, null, !dbg !8207
  br i1 %tobool2, label %land.lhs.true, label %if.end20, !dbg !8211

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8212
  %id3 = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 20, !dbg !8212
  %9 = load %struct.ID*, %struct.ID** %id3, align 8, !dbg !8212
  %name = getelementptr inbounds %struct.ID, %struct.ID* %9, i32 0, i32 4, !dbg !8212
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8212
  %10 = bitcast i8* %arraydecay to i16*, !dbg !8212
  %11 = load i16, i16* %10, align 8, !dbg !8212
  %conv = sext i16 %11 to i32, !dbg !8212
  %12 = load i16, i16* %idtype.addr, align 2, !dbg !8213
  %conv4 = sext i16 %12 to i32, !dbg !8213
  %cmp5 = icmp eq i32 %conv, %conv4, !dbg !8214
  br i1 %cmp5, label %if.then7, label %if.end20, !dbg !8215

if.then7:                                         ; preds = %land.lhs.true
  %13 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !8216
  %tobool8 = icmp ne %struct.ID* %13, null, !dbg !8216
  br i1 %tobool8, label %land.lhs.true9, label %if.else, !dbg !8219

land.lhs.true9:                                   ; preds = %if.then7
  %14 = load i8, i8* %ok, align 1, !dbg !8220
  %conv10 = zext i8 %14 to i32, !dbg !8220
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !8221
  br i1 %cmp11, label %land.lhs.true13, label %if.else, !dbg !8222

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8223
  %id14 = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 20, !dbg !8224
  %16 = load %struct.ID*, %struct.ID** %id14, align 8, !dbg !8224
  %17 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !8225
  %cmp15 = icmp eq %struct.ID* %16, %17, !dbg !8226
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !8227

if.then17:                                        ; preds = %land.lhs.true13
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8228
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 7, !dbg !8230
  %19 = load i32, i32* %flag, align 8, !dbg !8231
  %or = or i32 %19, 32, !dbg !8231
  store i32 %or, i32* %flag, align 8, !dbg !8231
  store i8 1, i8* %ok, align 1, !dbg !8232
  br label %if.end19, !dbg !8233

if.else:                                          ; preds = %land.lhs.true13, %land.lhs.true9, %if.then7
  %20 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8234
  %flag18 = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 7, !dbg !8236
  %21 = load i32, i32* %flag18, align 8, !dbg !8237
  %and = and i32 %21, -33, !dbg !8237
  store i32 %and, i32* %flag18, align 8, !dbg !8237
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then17
  br label %if.end20, !dbg !8238

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8239

for.inc:                                          ; preds = %if.end20
  %22 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8240
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %22, i32 0, i32 0, !dbg !8241
  %23 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !8241
  store %struct.bNode* %23, %struct.bNode** %node, align 8, !dbg !8242
  br label %for.cond, !dbg !8243, !llvm.loop !8244

for.end:                                          ; preds = %for.cond
  %24 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8246
  %nodes21 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %24, i32 0, i32 7, !dbg !8248
  %first22 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes21, i32 0, i32 0, !dbg !8249
  %25 = load i8*, i8** %first22, align 8, !dbg !8249
  %26 = bitcast i8* %25 to %struct.bNode*, !dbg !8246
  store %struct.bNode* %26, %struct.bNode** %node, align 8, !dbg !8250
  br label %for.cond23, !dbg !8251

for.cond23:                                       ; preds = %for.inc39, %for.end
  %27 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8252
  %tobool24 = icmp ne %struct.bNode* %27, null, !dbg !8254
  br i1 %tobool24, label %for.body25, label %for.end41, !dbg !8254

for.body25:                                       ; preds = %for.cond23
  %28 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8255
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %28, i32 0, i32 8, !dbg !8258
  %29 = load i16, i16* %type, align 4, !dbg !8258
  %conv26 = sext i16 %29 to i32, !dbg !8255
  %cmp27 = icmp eq i32 %conv26, 2, !dbg !8259
  br i1 %cmp27, label %if.then29, label %if.end38, !dbg !8260

if.then29:                                        ; preds = %for.body25
  %30 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8261
  %id30 = getelementptr inbounds %struct.bNode, %struct.bNode* %30, i32 0, i32 20, !dbg !8262
  %31 = load %struct.ID*, %struct.ID** %id30, align 8, !dbg !8262
  %32 = bitcast %struct.ID* %31 to %struct.bNodeTree*, !dbg !8263
  %33 = load i16, i16* %idtype.addr, align 2, !dbg !8264
  %34 = load i8, i8* %ok, align 1, !dbg !8265
  %conv31 = zext i8 %34 to i32, !dbg !8265
  %cmp32 = icmp eq i32 %conv31, 0, !dbg !8266
  br i1 %cmp32, label %cond.true, label %cond.false, !dbg !8265

cond.true:                                        ; preds = %if.then29
  %35 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !8267
  br label %cond.end, !dbg !8265

cond.false:                                       ; preds = %if.then29
  br label %cond.end, !dbg !8265

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ID* [ %35, %cond.true ], [ null, %cond.false ], !dbg !8265
  %call = call zeroext i8 @nodeSetActiveID(%struct.bNodeTree* %32, i16 signext %33, %struct.ID* %cond), !dbg !8268
  %conv34 = zext i8 %call to i32, !dbg !8268
  %36 = load i8, i8* %ok, align 1, !dbg !8269
  %conv35 = zext i8 %36 to i32, !dbg !8269
  %or36 = or i32 %conv35, %conv34, !dbg !8269
  %conv37 = trunc i32 %or36 to i8, !dbg !8269
  store i8 %conv37, i8* %ok, align 1, !dbg !8269
  br label %if.end38, !dbg !8270

if.end38:                                         ; preds = %cond.end, %for.body25
  br label %for.inc39, !dbg !8271

for.inc39:                                        ; preds = %if.end38
  %37 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8272
  %next40 = getelementptr inbounds %struct.bNode, %struct.bNode* %37, i32 0, i32 0, !dbg !8273
  %38 = load %struct.bNode*, %struct.bNode** %next40, align 8, !dbg !8273
  store %struct.bNode* %38, %struct.bNode** %node, align 8, !dbg !8274
  br label %for.cond23, !dbg !8275, !llvm.loop !8276

for.end41:                                        ; preds = %for.cond23
  %39 = load i8, i8* %ok, align 1, !dbg !8278
  store i8 %39, i8* %retval, align 1, !dbg !8279
  br label %return, !dbg !8279

return:                                           ; preds = %for.end41, %if.then
  %40 = load i8, i8* %retval, align 1, !dbg !8280
  ret i8 %40, !dbg !8280
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeClearActiveID(%struct.bNodeTree* %ntree, i16 signext %idtype) #0 !dbg !8281 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %idtype.addr = alloca i16, align 2
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !8284, metadata !DIExpression()), !dbg !8285
  store i16 %idtype, i16* %idtype.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %idtype.addr, metadata !8286, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8288, metadata !DIExpression()), !dbg !8289
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8290
  %cmp = icmp eq %struct.bNodeTree* %0, null, !dbg !8292
  br i1 %cmp, label %if.then, label %if.end, !dbg !8293

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !8294

if.end:                                           ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8295
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 7, !dbg !8297
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !8298
  %2 = load i8*, i8** %first, align 8, !dbg !8298
  %3 = bitcast i8* %2 to %struct.bNode*, !dbg !8295
  store %struct.bNode* %3, %struct.bNode** %node, align 8, !dbg !8299
  br label %for.cond, !dbg !8300

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8301
  %tobool = icmp ne %struct.bNode* %4, null, !dbg !8303
  br i1 %tobool, label %for.body, label %for.end, !dbg !8303

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8304
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 20, !dbg !8306
  %6 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !8306
  %tobool1 = icmp ne %struct.ID* %6, null, !dbg !8304
  br i1 %tobool1, label %land.lhs.true, label %if.end7, !dbg !8307

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8308
  %id2 = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 20, !dbg !8308
  %8 = load %struct.ID*, %struct.ID** %id2, align 8, !dbg !8308
  %name = getelementptr inbounds %struct.ID, %struct.ID* %8, i32 0, i32 4, !dbg !8308
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8308
  %9 = bitcast i8* %arraydecay to i16*, !dbg !8308
  %10 = load i16, i16* %9, align 8, !dbg !8308
  %conv = sext i16 %10 to i32, !dbg !8308
  %11 = load i16, i16* %idtype.addr, align 2, !dbg !8309
  %conv3 = sext i16 %11 to i32, !dbg !8309
  %cmp4 = icmp eq i32 %conv, %conv3, !dbg !8310
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !8311

if.then6:                                         ; preds = %land.lhs.true
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8312
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %12, i32 0, i32 7, !dbg !8313
  %13 = load i32, i32* %flag, align 8, !dbg !8314
  %and = and i32 %13, -33, !dbg !8314
  store i32 %and, i32* %flag, align 8, !dbg !8314
  br label %if.end7, !dbg !8312

if.end7:                                          ; preds = %if.then6, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8309

for.inc:                                          ; preds = %if.end7
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8315
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 0, !dbg !8316
  %15 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !8316
  store %struct.bNode* %15, %struct.bNode** %node, align 8, !dbg !8317
  br label %for.cond, !dbg !8318, !llvm.loop !8319

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !8321
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeSetSelected(%struct.bNode* %node, i8 zeroext %select) #0 !dbg !8322 {
entry:
  %node.addr = alloca %struct.bNode*, align 8
  %select.addr = alloca i8, align 1
  %sock = alloca %struct.bNodeSocket*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !8325, metadata !DIExpression()), !dbg !8326
  store i8 %select, i8* %select.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %select.addr, metadata !8327, metadata !DIExpression()), !dbg !8328
  %0 = load i8, i8* %select.addr, align 1, !dbg !8329
  %tobool = icmp ne i8 %0, 0, !dbg !8329
  br i1 %tobool, label %if.then, label %if.else, !dbg !8331

if.then:                                          ; preds = %entry
  %1 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8332
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %1, i32 0, i32 7, !dbg !8334
  %2 = load i32, i32* %flag, align 8, !dbg !8335
  %or = or i32 %2, 1, !dbg !8335
  store i32 %or, i32* %flag, align 8, !dbg !8335
  br label %if.end, !dbg !8336

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !8337, metadata !DIExpression()), !dbg !8339
  %3 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8340
  %flag1 = getelementptr inbounds %struct.bNode, %struct.bNode* %3, i32 0, i32 7, !dbg !8341
  %4 = load i32, i32* %flag1, align 8, !dbg !8342
  %and = and i32 %4, -2, !dbg !8342
  store i32 %and, i32* %flag1, align 8, !dbg !8342
  %5 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8343
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 17, !dbg !8345
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !8346
  %6 = load i8*, i8** %first, align 8, !dbg !8346
  %7 = bitcast i8* %6 to %struct.bNodeSocket*, !dbg !8343
  store %struct.bNodeSocket* %7, %struct.bNodeSocket** %sock, align 8, !dbg !8347
  br label %for.cond, !dbg !8348

for.cond:                                         ; preds = %for.inc, %if.else
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !8349
  %tobool2 = icmp ne %struct.bNodeSocket* %8, null, !dbg !8351
  br i1 %tobool2, label %for.body, label %for.end, !dbg !8351

for.body:                                         ; preds = %for.cond
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !8352
  %flag3 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %9, i32 0, i32 8, !dbg !8353
  %10 = load i16, i16* %flag3, align 2, !dbg !8354
  %conv = sext i16 %10 to i32, !dbg !8354
  %and4 = and i32 %conv, -2, !dbg !8354
  %conv5 = trunc i32 %and4 to i16, !dbg !8354
  store i16 %conv5, i16* %flag3, align 2, !dbg !8354
  br label %for.inc, !dbg !8352

for.inc:                                          ; preds = %for.body
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !8355
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %11, i32 0, i32 0, !dbg !8356
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !8356
  store %struct.bNodeSocket* %12, %struct.bNodeSocket** %sock, align 8, !dbg !8357
  br label %for.cond, !dbg !8358, !llvm.loop !8359

for.end:                                          ; preds = %for.cond
  %13 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8361
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 18, !dbg !8363
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !8364
  %14 = load i8*, i8** %first6, align 8, !dbg !8364
  %15 = bitcast i8* %14 to %struct.bNodeSocket*, !dbg !8361
  store %struct.bNodeSocket* %15, %struct.bNodeSocket** %sock, align 8, !dbg !8365
  br label %for.cond7, !dbg !8366

for.cond7:                                        ; preds = %for.inc14, %for.end
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !8367
  %tobool8 = icmp ne %struct.bNodeSocket* %16, null, !dbg !8369
  br i1 %tobool8, label %for.body9, label %for.end16, !dbg !8369

for.body9:                                        ; preds = %for.cond7
  %17 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !8370
  %flag10 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %17, i32 0, i32 8, !dbg !8371
  %18 = load i16, i16* %flag10, align 2, !dbg !8372
  %conv11 = sext i16 %18 to i32, !dbg !8372
  %and12 = and i32 %conv11, -2, !dbg !8372
  %conv13 = trunc i32 %and12 to i16, !dbg !8372
  store i16 %conv13, i16* %flag10, align 2, !dbg !8372
  br label %for.inc14, !dbg !8370

for.inc14:                                        ; preds = %for.body9
  %19 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !8373
  %next15 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %19, i32 0, i32 0, !dbg !8374
  %20 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next15, align 8, !dbg !8374
  store %struct.bNodeSocket* %20, %struct.bNodeSocket** %sock, align 8, !dbg !8375
  br label %for.cond7, !dbg !8376, !llvm.loop !8377

for.end16:                                        ; preds = %for.cond7
  br label %if.end

if.end:                                           ; preds = %for.end16, %if.then
  ret void, !dbg !8379
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeClearActive(%struct.bNodeTree* %ntree) #0 !dbg !8380 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !8381, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8383, metadata !DIExpression()), !dbg !8384
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8385
  %cmp = icmp eq %struct.bNodeTree* %0, null, !dbg !8387
  br i1 %cmp, label %if.then, label %if.end, !dbg !8388

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !8389

if.end:                                           ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8390
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 7, !dbg !8392
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !8393
  %2 = load i8*, i8** %first, align 8, !dbg !8393
  %3 = bitcast i8* %2 to %struct.bNode*, !dbg !8390
  store %struct.bNode* %3, %struct.bNode** %node, align 8, !dbg !8394
  br label %for.cond, !dbg !8395

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8396
  %tobool = icmp ne %struct.bNode* %4, null, !dbg !8398
  br i1 %tobool, label %for.body, label %for.end, !dbg !8398

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8399
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 7, !dbg !8400
  %6 = load i32, i32* %flag, align 8, !dbg !8401
  %and = and i32 %6, -49, !dbg !8401
  store i32 %and, i32* %flag, align 8, !dbg !8401
  br label %for.inc, !dbg !8399

for.inc:                                          ; preds = %for.body
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8402
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 0, !dbg !8403
  %8 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !8403
  store %struct.bNode* %8, %struct.bNode** %node, align 8, !dbg !8404
  br label %for.cond, !dbg !8405, !llvm.loop !8406

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !8408
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeSetActive(%struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !8409 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %tnode = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !8410, metadata !DIExpression()), !dbg !8411
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !8412, metadata !DIExpression()), !dbg !8413
  call void @llvm.dbg.declare(metadata %struct.bNode** %tnode, metadata !8414, metadata !DIExpression()), !dbg !8415
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8416
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !8418
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !8419
  %1 = load i8*, i8** %first, align 8, !dbg !8419
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !8416
  store %struct.bNode* %2, %struct.bNode** %tnode, align 8, !dbg !8420
  br label %for.cond, !dbg !8421

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !8422
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !8424
  br i1 %tobool, label %for.body, label %for.end, !dbg !8424

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !8425
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 7, !dbg !8427
  %5 = load i32, i32* %flag, align 8, !dbg !8428
  %and = and i32 %5, -17, !dbg !8428
  store i32 %and, i32* %flag, align 8, !dbg !8428
  %6 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8429
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 20, !dbg !8431
  %7 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !8431
  %tobool1 = icmp ne %struct.ID* %7, null, !dbg !8429
  br i1 %tobool1, label %land.lhs.true, label %if.end13, !dbg !8432

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !8433
  %id2 = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 20, !dbg !8434
  %9 = load %struct.ID*, %struct.ID** %id2, align 8, !dbg !8434
  %tobool3 = icmp ne %struct.ID* %9, null, !dbg !8433
  br i1 %tobool3, label %if.then, label %if.end13, !dbg !8435

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8436
  %id4 = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 20, !dbg !8436
  %11 = load %struct.ID*, %struct.ID** %id4, align 8, !dbg !8436
  %name = getelementptr inbounds %struct.ID, %struct.ID* %11, i32 0, i32 4, !dbg !8436
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8436
  %12 = bitcast i8* %arraydecay to i16*, !dbg !8436
  %13 = load i16, i16* %12, align 8, !dbg !8436
  %conv = sext i16 %13 to i32, !dbg !8436
  %14 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !8439
  %id5 = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 20, !dbg !8439
  %15 = load %struct.ID*, %struct.ID** %id5, align 8, !dbg !8439
  %name6 = getelementptr inbounds %struct.ID, %struct.ID* %15, i32 0, i32 4, !dbg !8439
  %arraydecay7 = getelementptr inbounds [66 x i8], [66 x i8]* %name6, i64 0, i64 0, !dbg !8439
  %16 = bitcast i8* %arraydecay7 to i16*, !dbg !8439
  %17 = load i16, i16* %16, align 8, !dbg !8439
  %conv8 = sext i16 %17 to i32, !dbg !8439
  %cmp = icmp eq i32 %conv, %conv8, !dbg !8440
  br i1 %cmp, label %if.then10, label %if.end, !dbg !8441

if.then10:                                        ; preds = %if.then
  %18 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !8442
  %flag11 = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 7, !dbg !8443
  %19 = load i32, i32* %flag11, align 8, !dbg !8444
  %and12 = and i32 %19, -33, !dbg !8444
  store i32 %and12, i32* %flag11, align 8, !dbg !8444
  br label %if.end, !dbg !8442

if.end:                                           ; preds = %if.then10, %if.then
  br label %if.end13, !dbg !8445

if.end13:                                         ; preds = %if.end, %land.lhs.true, %for.body
  %20 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8446
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %20, i32 0, i32 4, !dbg !8448
  %21 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !8448
  %nclass = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %21, i32 0, i32 14, !dbg !8449
  %22 = load i16, i16* %nclass, align 4, !dbg !8449
  %conv14 = sext i16 %22 to i32, !dbg !8446
  %cmp15 = icmp eq i32 %conv14, 13, !dbg !8450
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !8451

if.then17:                                        ; preds = %if.end13
  %23 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !8452
  %flag18 = getelementptr inbounds %struct.bNode, %struct.bNode* %23, i32 0, i32 7, !dbg !8453
  %24 = load i32, i32* %flag18, align 8, !dbg !8454
  %and19 = and i32 %24, -16385, !dbg !8454
  store i32 %and19, i32* %flag18, align 8, !dbg !8454
  br label %if.end20, !dbg !8452

if.end20:                                         ; preds = %if.then17, %if.end13
  br label %for.inc, !dbg !8455

for.inc:                                          ; preds = %if.end20
  %25 = load %struct.bNode*, %struct.bNode** %tnode, align 8, !dbg !8456
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 0, !dbg !8457
  %26 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !8457
  store %struct.bNode* %26, %struct.bNode** %tnode, align 8, !dbg !8458
  br label %for.cond, !dbg !8459, !llvm.loop !8460

for.end:                                          ; preds = %for.cond
  %27 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8462
  %flag21 = getelementptr inbounds %struct.bNode, %struct.bNode* %27, i32 0, i32 7, !dbg !8463
  %28 = load i32, i32* %flag21, align 8, !dbg !8464
  %or = or i32 %28, 16, !dbg !8464
  store i32 %or, i32* %flag21, align 8, !dbg !8464
  %29 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8465
  %id22 = getelementptr inbounds %struct.bNode, %struct.bNode* %29, i32 0, i32 20, !dbg !8467
  %30 = load %struct.ID*, %struct.ID** %id22, align 8, !dbg !8467
  %tobool23 = icmp ne %struct.ID* %30, null, !dbg !8465
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !8468

if.then24:                                        ; preds = %for.end
  %31 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8469
  %flag25 = getelementptr inbounds %struct.bNode, %struct.bNode* %31, i32 0, i32 7, !dbg !8470
  %32 = load i32, i32* %flag25, align 8, !dbg !8471
  %or26 = or i32 %32, 32, !dbg !8471
  store i32 %or26, i32* %flag25, align 8, !dbg !8471
  br label %if.end27, !dbg !8469

if.end27:                                         ; preds = %if.then24, %for.end
  %33 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8472
  %typeinfo28 = getelementptr inbounds %struct.bNode, %struct.bNode* %33, i32 0, i32 4, !dbg !8474
  %34 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo28, align 8, !dbg !8474
  %nclass29 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %34, i32 0, i32 14, !dbg !8475
  %35 = load i16, i16* %nclass29, align 4, !dbg !8475
  %conv30 = sext i16 %35 to i32, !dbg !8472
  %cmp31 = icmp eq i32 %conv30, 13, !dbg !8476
  br i1 %cmp31, label %if.then33, label %if.end36, !dbg !8477

if.then33:                                        ; preds = %if.end27
  %36 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8478
  %flag34 = getelementptr inbounds %struct.bNode, %struct.bNode* %36, i32 0, i32 7, !dbg !8479
  %37 = load i32, i32* %flag34, align 8, !dbg !8480
  %or35 = or i32 %37, 16384, !dbg !8480
  store i32 %or35, i32* %flag34, align 8, !dbg !8480
  br label %if.end36, !dbg !8478

if.end36:                                         ; preds = %if.then33, %if.end27
  ret void, !dbg !8481
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_clipboard_init(%struct.bNodeTree* %ntree) #0 !dbg !8482 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !8483, metadata !DIExpression()), !dbg !8484
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8485
  %type = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 9, !dbg !8486
  %1 = load i32, i32* %type, align 8, !dbg !8486
  store i32 %1, i32* getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 3), align 8, !dbg !8487
  ret void, !dbg !8488
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_clipboard_clear() #0 !dbg !8489 {
entry:
  %node = alloca %struct.bNode*, align 8
  %node_next = alloca %struct.bNode*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %link_next = alloca %struct.bNodeLink*, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8492, metadata !DIExpression()), !dbg !8493
  call void @llvm.dbg.declare(metadata %struct.bNode** %node_next, metadata !8494, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !8496, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link_next, metadata !8498, metadata !DIExpression()), !dbg !8499
  %0 = load i8*, i8** getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 2, i32 0), align 8, !dbg !8500
  %1 = bitcast i8* %0 to %struct.bNodeLink*, !dbg !8502
  store %struct.bNodeLink* %1, %struct.bNodeLink** %link, align 8, !dbg !8503
  br label %for.cond, !dbg !8504

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !8505
  %tobool = icmp ne %struct.bNodeLink* %2, null, !dbg !8507
  br i1 %tobool, label %for.body, label %for.end, !dbg !8507

for.body:                                         ; preds = %for.cond
  %3 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !8508
  %next = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %3, i32 0, i32 0, !dbg !8510
  %4 = load %struct.bNodeLink*, %struct.bNodeLink** %next, align 8, !dbg !8510
  store %struct.bNodeLink* %4, %struct.bNodeLink** %link_next, align 8, !dbg !8511
  %5 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !8512
  call void @nodeRemLink(%struct.bNodeTree* null, %struct.bNodeLink* %5), !dbg !8513
  br label %for.inc, !dbg !8514

for.inc:                                          ; preds = %for.body
  %6 = load %struct.bNodeLink*, %struct.bNodeLink** %link_next, align 8, !dbg !8515
  store %struct.bNodeLink* %6, %struct.bNodeLink** %link, align 8, !dbg !8516
  br label %for.cond, !dbg !8517, !llvm.loop !8518

for.end:                                          ; preds = %for.cond
  call void @BLI_listbase_clear(%struct.ListBase* getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 2)), !dbg !8520
  %7 = load i8*, i8** getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 0, i32 0), align 8, !dbg !8521
  %8 = bitcast i8* %7 to %struct.bNode*, !dbg !8523
  store %struct.bNode* %8, %struct.bNode** %node, align 8, !dbg !8524
  br label %for.cond1, !dbg !8525

for.cond1:                                        ; preds = %for.inc5, %for.end
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8526
  %tobool2 = icmp ne %struct.bNode* %9, null, !dbg !8528
  br i1 %tobool2, label %for.body3, label %for.end6, !dbg !8528

for.body3:                                        ; preds = %for.cond1
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8529
  %next4 = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 0, !dbg !8531
  %11 = load %struct.bNode*, %struct.bNode** %next4, align 8, !dbg !8531
  store %struct.bNode* %11, %struct.bNode** %node_next, align 8, !dbg !8532
  %12 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8533
  call void @node_free_node_ex(%struct.bNodeTree* null, %struct.bNode* %12, i8 zeroext 0, i8 zeroext 0), !dbg !8534
  br label %for.inc5, !dbg !8535

for.inc5:                                         ; preds = %for.body3
  %13 = load %struct.bNode*, %struct.bNode** %node_next, align 8, !dbg !8536
  store %struct.bNode* %13, %struct.bNode** %node, align 8, !dbg !8537
  br label %for.cond1, !dbg !8538, !llvm.loop !8539

for.end6:                                         ; preds = %for.cond1
  call void @BLI_listbase_clear(%struct.ListBase* getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 0)), !dbg !8541
  call void @BLI_freelistN(%struct.ListBase* getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 1)), !dbg !8542
  ret void, !dbg !8543
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !8544 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8549, metadata !DIExpression()), !dbg !8550
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8551
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !8552
  store i8* null, i8** %last, align 8, !dbg !8553
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8554
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !8555
  store i8* null, i8** %first, align 8, !dbg !8556
  ret void, !dbg !8557
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_node_clipboard_validate() #0 !dbg !8558 {
entry:
  %ok = alloca i8, align 1
  %node_info = alloca %struct.bNodeClipboardExtraInfo*, align 8
  %node = alloca %struct.bNode*, align 8
  %lb = alloca %struct.ListBase*, align 8
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !8561, metadata !DIExpression()), !dbg !8562
  store i8 1, i8* %ok, align 1, !dbg !8562
  call void @llvm.dbg.declare(metadata %struct.bNodeClipboardExtraInfo** %node_info, metadata !8563, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8575, metadata !DIExpression()), !dbg !8576
  %0 = load i8*, i8** getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 0, i32 0), align 8, !dbg !8577
  %1 = bitcast i8* %0 to %struct.bNode*, !dbg !8579
  store %struct.bNode* %1, %struct.bNode** %node, align 8, !dbg !8580
  %2 = load i8*, i8** getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 1, i32 0), align 8, !dbg !8581
  %3 = bitcast i8* %2 to %struct.bNodeClipboardExtraInfo*, !dbg !8582
  store %struct.bNodeClipboardExtraInfo* %3, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8583
  br label %for.cond, !dbg !8584

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8585
  %tobool = icmp ne %struct.bNode* %4, null, !dbg !8587
  br i1 %tobool, label %for.body, label %for.end, !dbg !8587

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8588
  %id = getelementptr inbounds %struct.bNodeClipboardExtraInfo, %struct.bNodeClipboardExtraInfo* %5, i32 0, i32 2, !dbg !8590
  %6 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !8590
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8591
  %id1 = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 20, !dbg !8592
  store %struct.ID* %6, %struct.ID** %id1, align 8, !dbg !8593
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8594
  %id2 = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 20, !dbg !8596
  %9 = load %struct.ID*, %struct.ID** %id2, align 8, !dbg !8596
  %tobool3 = icmp ne %struct.ID* %9, null, !dbg !8594
  br i1 %tobool3, label %if.then, label %if.end15, !dbg !8597

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !8598, metadata !DIExpression()), !dbg !8600
  %10 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !8601
  %11 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8602
  %id_name = getelementptr inbounds %struct.bNodeClipboardExtraInfo, %struct.bNodeClipboardExtraInfo* %11, i32 0, i32 3, !dbg !8602
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %id_name, i64 0, i64 0, !dbg !8602
  %12 = bitcast i8* %arraydecay to i16*, !dbg !8602
  %13 = load i16, i16* %12, align 8, !dbg !8602
  %call = call %struct.ListBase* @which_libbase(%struct.Main* %10, i16 signext %13), !dbg !8603
  store %struct.ListBase* %call, %struct.ListBase** %lb, align 8, !dbg !8600
  %14 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !8604
  %15 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8606
  %id4 = getelementptr inbounds %struct.bNodeClipboardExtraInfo, %struct.bNodeClipboardExtraInfo* %15, i32 0, i32 2, !dbg !8607
  %16 = load %struct.ID*, %struct.ID** %id4, align 8, !dbg !8607
  %17 = bitcast %struct.ID* %16 to i8*, !dbg !8606
  %call5 = call i32 @BLI_findindex(%struct.ListBase* %14, i8* %17), !dbg !8608
  %cmp = icmp eq i32 %call5, -1, !dbg !8609
  br i1 %cmp, label %if.then6, label %if.end14, !dbg !8610

if.then6:                                         ; preds = %if.then
  %18 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !8611
  %19 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8613
  %id_name7 = getelementptr inbounds %struct.bNodeClipboardExtraInfo, %struct.bNodeClipboardExtraInfo* %19, i32 0, i32 3, !dbg !8614
  %arraydecay8 = getelementptr inbounds [66 x i8], [66 x i8]* %id_name7, i64 0, i64 0, !dbg !8613
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay8, i64 2, !dbg !8615
  %call9 = call i8* @BLI_findstring(%struct.ListBase* %18, i8* %add.ptr, i32 34), !dbg !8616
  %20 = bitcast i8* %call9 to %struct.ID*, !dbg !8616
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8617
  %id10 = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 20, !dbg !8618
  store %struct.ID* %20, %struct.ID** %id10, align 8, !dbg !8619
  %22 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8620
  %id11 = getelementptr inbounds %struct.bNode, %struct.bNode* %22, i32 0, i32 20, !dbg !8622
  %23 = load %struct.ID*, %struct.ID** %id11, align 8, !dbg !8622
  %cmp12 = icmp eq %struct.ID* %23, null, !dbg !8623
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !8624

if.then13:                                        ; preds = %if.then6
  store i8 0, i8* %ok, align 1, !dbg !8625
  br label %if.end, !dbg !8627

if.end:                                           ; preds = %if.then13, %if.then6
  br label %if.end14, !dbg !8628

if.end14:                                         ; preds = %if.end, %if.then
  br label %if.end15, !dbg !8629

if.end15:                                         ; preds = %if.end14, %for.body
  br label %for.inc, !dbg !8630

for.inc:                                          ; preds = %if.end15
  %24 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8631
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %24, i32 0, i32 0, !dbg !8632
  %25 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !8632
  store %struct.bNode* %25, %struct.bNode** %node, align 8, !dbg !8633
  %26 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8634
  %next16 = getelementptr inbounds %struct.bNodeClipboardExtraInfo, %struct.bNodeClipboardExtraInfo* %26, i32 0, i32 0, !dbg !8635
  %27 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %next16, align 8, !dbg !8635
  store %struct.bNodeClipboardExtraInfo* %27, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8636
  br label %for.cond, !dbg !8637, !llvm.loop !8638

for.end:                                          ; preds = %for.cond
  %28 = load i8, i8* %ok, align 1, !dbg !8640
  ret i8 %28, !dbg !8641
}

declare dso_local %struct.ListBase* @which_libbase(%struct.Main*, i16 signext) #2

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_clipboard_add_node(%struct.bNode* %node) #0 !dbg !8642 {
entry:
  %node.addr = alloca %struct.bNode*, align 8
  %node_info = alloca %struct.bNodeClipboardExtraInfo*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !8645, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.declare(metadata %struct.bNodeClipboardExtraInfo** %node_info, metadata !8647, metadata !DIExpression()), !dbg !8648
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8649
  %call = call i8* %0(i64 1120, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.52, i64 0, i64 0)), !dbg !8649
  %1 = bitcast i8* %call to %struct.bNodeClipboardExtraInfo*, !dbg !8649
  store %struct.bNodeClipboardExtraInfo* %1, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8648
  %2 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8650
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %2, i32 0, i32 20, !dbg !8651
  %3 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !8651
  %4 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8652
  %id1 = getelementptr inbounds %struct.bNodeClipboardExtraInfo, %struct.bNodeClipboardExtraInfo* %4, i32 0, i32 2, !dbg !8653
  store %struct.ID* %3, %struct.ID** %id1, align 8, !dbg !8654
  %5 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8655
  %id2 = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 20, !dbg !8657
  %6 = load %struct.ID*, %struct.ID** %id2, align 8, !dbg !8657
  %tobool = icmp ne %struct.ID* %6, null, !dbg !8655
  br i1 %tobool, label %if.then, label %if.else15, !dbg !8658

if.then:                                          ; preds = %entry
  %7 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8659
  %id_name = getelementptr inbounds %struct.bNodeClipboardExtraInfo, %struct.bNodeClipboardExtraInfo* %7, i32 0, i32 3, !dbg !8661
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %id_name, i64 0, i64 0, !dbg !8659
  %8 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8662
  %id3 = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 20, !dbg !8663
  %9 = load %struct.ID*, %struct.ID** %id3, align 8, !dbg !8663
  %name = getelementptr inbounds %struct.ID, %struct.ID* %9, i32 0, i32 4, !dbg !8664
  %arraydecay4 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8662
  %call5 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay4, i64 66), !dbg !8665
  %10 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8666
  %id6 = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 20, !dbg !8668
  %11 = load %struct.ID*, %struct.ID** %id6, align 8, !dbg !8668
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %11, i32 0, i32 3, !dbg !8669
  %12 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !8669
  %tobool7 = icmp ne %struct.Library* %12, null, !dbg !8666
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !8670

if.then8:                                         ; preds = %if.then
  %13 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8671
  %library_name = getelementptr inbounds %struct.bNodeClipboardExtraInfo, %struct.bNodeClipboardExtraInfo* %13, i32 0, i32 4, !dbg !8673
  %arraydecay9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %library_name, i64 0, i64 0, !dbg !8671
  %14 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8674
  %id10 = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 20, !dbg !8675
  %15 = load %struct.ID*, %struct.ID** %id10, align 8, !dbg !8675
  %lib11 = getelementptr inbounds %struct.ID, %struct.ID* %15, i32 0, i32 3, !dbg !8676
  %16 = load %struct.Library*, %struct.Library** %lib11, align 8, !dbg !8676
  %filepath = getelementptr inbounds %struct.Library, %struct.Library* %16, i32 0, i32 4, !dbg !8677
  %arraydecay12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !8674
  %call13 = call i8* @BLI_strncpy(i8* %arraydecay9, i8* %arraydecay12, i64 1024), !dbg !8678
  br label %if.end, !dbg !8679

if.else:                                          ; preds = %if.then
  %17 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8680
  %library_name14 = getelementptr inbounds %struct.bNodeClipboardExtraInfo, %struct.bNodeClipboardExtraInfo* %17, i32 0, i32 4, !dbg !8682
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %library_name14, i64 0, i64 0, !dbg !8680
  store i8 0, i8* %arrayidx, align 2, !dbg !8683
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end20, !dbg !8684

if.else15:                                        ; preds = %entry
  %18 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8685
  %id_name16 = getelementptr inbounds %struct.bNodeClipboardExtraInfo, %struct.bNodeClipboardExtraInfo* %18, i32 0, i32 3, !dbg !8687
  %arrayidx17 = getelementptr inbounds [66 x i8], [66 x i8]* %id_name16, i64 0, i64 0, !dbg !8685
  store i8 0, i8* %arrayidx17, align 8, !dbg !8688
  %19 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8689
  %library_name18 = getelementptr inbounds %struct.bNodeClipboardExtraInfo, %struct.bNodeClipboardExtraInfo* %19, i32 0, i32 4, !dbg !8690
  %arrayidx19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %library_name18, i64 0, i64 0, !dbg !8689
  store i8 0, i8* %arrayidx19, align 2, !dbg !8691
  br label %if.end20

if.end20:                                         ; preds = %if.else15, %if.end
  %20 = load %struct.bNodeClipboardExtraInfo*, %struct.bNodeClipboardExtraInfo** %node_info, align 8, !dbg !8692
  %21 = bitcast %struct.bNodeClipboardExtraInfo* %20 to i8*, !dbg !8692
  call void @BLI_addtail(%struct.ListBase* getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 1), i8* %21), !dbg !8693
  %22 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8694
  %23 = bitcast %struct.bNode* %22 to i8*, !dbg !8694
  call void @BLI_addtail(%struct.ListBase* getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 0), i8* %23), !dbg !8695
  ret void, !dbg !8696
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_clipboard_add_link(%struct.bNodeLink* %link) #0 !dbg !8697 {
entry:
  %link.addr = alloca %struct.bNodeLink*, align 8
  store %struct.bNodeLink* %link, %struct.bNodeLink** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link.addr, metadata !8700, metadata !DIExpression()), !dbg !8701
  %0 = load %struct.bNodeLink*, %struct.bNodeLink** %link.addr, align 8, !dbg !8702
  %1 = bitcast %struct.bNodeLink* %0 to i8*, !dbg !8702
  call void @BLI_addtail(%struct.ListBase* getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 2), i8* %1), !dbg !8703
  ret void, !dbg !8704
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ListBase* @BKE_node_clipboard_get_nodes() #0 !dbg !8705 {
entry:
  ret %struct.ListBase* getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 0), !dbg !8710
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ListBase* @BKE_node_clipboard_get_links() #0 !dbg !8711 {
entry:
  ret %struct.ListBase* getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 2), !dbg !8712
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_node_clipboard_get_type() #0 !dbg !8713 {
entry:
  %0 = load i32, i32* getelementptr inbounds (%struct.bNodeClipboard, %struct.bNodeClipboard* @node_clipboard, i32 0, i32 3), align 8, !dbg !8716
  ret i32 %0, !dbg !8717
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_node_instance_key(i32 %parent_key.coerce, %struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !8718 {
entry:
  %retval = alloca %struct.bNodeInstanceKey, align 4
  %parent_key = alloca %struct.bNodeInstanceKey, align 4
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %tmp = alloca %struct.bNodeInstanceKey, align 4
  %tmp3 = alloca %struct.bNodeInstanceKey, align 4
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %parent_key, i32 0, i32 0
  store i32 %parent_key.coerce, i32* %coerce.dive, align 4
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %parent_key, metadata !8721, metadata !DIExpression()), !dbg !8722
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !8723, metadata !DIExpression()), !dbg !8724
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !8725, metadata !DIExpression()), !dbg !8726
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %retval, metadata !8727, metadata !DIExpression()), !dbg !8728
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8729
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 0, !dbg !8730
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !8731
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8729
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !8732
  %coerce.dive1 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %parent_key, i32 0, i32 0, !dbg !8733
  %1 = load i32, i32* %coerce.dive1, align 4, !dbg !8733
  %call = call i32 @node_hash_int_str(i32 %1, i8* %add.ptr), !dbg !8733
  %coerce.dive2 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %tmp, i32 0, i32 0, !dbg !8733
  store i32 %call, i32* %coerce.dive2, align 4, !dbg !8733
  %2 = bitcast %struct.bNodeInstanceKey* %retval to i8*, !dbg !8733
  %3 = bitcast %struct.bNodeInstanceKey* %tmp to i8*, !dbg !8733
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 4, i1 false), !dbg !8733
  %4 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8734
  %tobool = icmp ne %struct.bNode* %4, null, !dbg !8734
  br i1 %tobool, label %if.then, label %if.end, !dbg !8736

if.then:                                          ; preds = %entry
  %5 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8737
  %name4 = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 6, !dbg !8738
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %name4, i64 0, i64 0, !dbg !8737
  %coerce.dive6 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %retval, i32 0, i32 0, !dbg !8739
  %6 = load i32, i32* %coerce.dive6, align 4, !dbg !8739
  %call7 = call i32 @node_hash_int_str(i32 %6, i8* %arraydecay5), !dbg !8739
  %coerce.dive8 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %tmp3, i32 0, i32 0, !dbg !8739
  store i32 %call7, i32* %coerce.dive8, align 4, !dbg !8739
  %7 = bitcast %struct.bNodeInstanceKey* %retval to i8*, !dbg !8739
  %8 = bitcast %struct.bNodeInstanceKey* %tmp3 to i8*, !dbg !8739
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false), !dbg !8739
  br label %if.end, !dbg !8740

if.end:                                           ; preds = %if.then, %entry
  %coerce.dive9 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %retval, i32 0, i32 0, !dbg !8741
  %9 = load i32, i32* %coerce.dive9, align 4, !dbg !8741
  ret i32 %9, !dbg !8741
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_hash_int_str(i32 %hash.coerce, i8* %str) #0 !dbg !8742 {
entry:
  %retval = alloca %struct.bNodeInstanceKey, align 4
  %hash = alloca %struct.bNodeInstanceKey, align 4
  %str.addr = alloca i8*, align 8
  %c = alloca i8, align 1
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %hash, i32 0, i32 0
  store i32 %hash.coerce, i32* %coerce.dive, align 4
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %hash, metadata !8745, metadata !DIExpression()), !dbg !8746
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8747, metadata !DIExpression()), !dbg !8748
  call void @llvm.dbg.declare(metadata i8* %c, metadata !8749, metadata !DIExpression()), !dbg !8750
  br label %while.cond, !dbg !8751

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %str.addr, align 8, !dbg !8752
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i32 1, !dbg !8752
  store i8* %incdec.ptr, i8** %str.addr, align 8, !dbg !8752
  %1 = load i8, i8* %0, align 1, !dbg !8753
  store i8 %1, i8* %c, align 1, !dbg !8754
  %tobool = icmp ne i8 %1, 0, !dbg !8751
  br i1 %tobool, label %while.body, label %while.end, !dbg !8751

while.body:                                       ; preds = %while.cond
  %value = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %hash, i32 0, i32 0, !dbg !8755
  %2 = load i32, i32* %value, align 4, !dbg !8755
  %shl = shl i32 %2, 5, !dbg !8756
  %value1 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %hash, i32 0, i32 0, !dbg !8757
  %3 = load i32, i32* %value1, align 4, !dbg !8757
  %add = add i32 %shl, %3, !dbg !8758
  %4 = load i8, i8* %c, align 1, !dbg !8759
  %conv = zext i8 %4 to i32, !dbg !8759
  %xor = xor i32 %add, %conv, !dbg !8760
  %value2 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %hash, i32 0, i32 0, !dbg !8761
  store i32 %xor, i32* %value2, align 4, !dbg !8762
  br label %while.cond, !dbg !8751, !llvm.loop !8763

while.end:                                        ; preds = %while.cond
  %value3 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %hash, i32 0, i32 0, !dbg !8764
  %5 = load i32, i32* %value3, align 4, !dbg !8764
  %shl4 = shl i32 %5, 5, !dbg !8765
  %value5 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %hash, i32 0, i32 0, !dbg !8766
  %6 = load i32, i32* %value5, align 4, !dbg !8766
  %add6 = add i32 %shl4, %6, !dbg !8767
  %value7 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %hash, i32 0, i32 0, !dbg !8768
  store i32 %add6, i32* %value7, align 4, !dbg !8769
  %7 = bitcast %struct.bNodeInstanceKey* %retval to i8*, !dbg !8770
  %8 = bitcast %struct.bNodeInstanceKey* %hash to i8*, !dbg !8770
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 4, i1 false), !dbg !8770
  %coerce.dive8 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %retval, i32 0, i32 0, !dbg !8771
  %9 = load i32, i32* %coerce.dive8, align 4, !dbg !8771
  ret i32 %9, !dbg !8771
}

declare dso_local %struct.GHash* @BLI_ghash_new(i32 (i8*)*, i8 (i8*, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_instance_hash_key(i8* %key) #0 !dbg !8772 {
entry:
  %key.addr = alloca i8*, align 8
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !8777, metadata !DIExpression()), !dbg !8778
  %0 = load i8*, i8** %key.addr, align 8, !dbg !8779
  %1 = bitcast i8* %0 to %struct.bNodeInstanceKey*, !dbg !8780
  %value = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %1, i32 0, i32 0, !dbg !8781
  %2 = load i32, i32* %value, align 4, !dbg !8781
  ret i32 %2, !dbg !8782
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @node_instance_hash_key_cmp(i8* %a, i8* %b) #0 !dbg !8783 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %value_a = alloca i32, align 4
  %value_b = alloca i32, align 4
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8786, metadata !DIExpression()), !dbg !8787
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !8788, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.declare(metadata i32* %value_a, metadata !8790, metadata !DIExpression()), !dbg !8791
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8792
  %1 = bitcast i8* %0 to %struct.bNodeInstanceKey*, !dbg !8793
  %value = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %1, i32 0, i32 0, !dbg !8794
  %2 = load i32, i32* %value, align 4, !dbg !8794
  store i32 %2, i32* %value_a, align 4, !dbg !8791
  call void @llvm.dbg.declare(metadata i32* %value_b, metadata !8795, metadata !DIExpression()), !dbg !8796
  %3 = load i8*, i8** %b.addr, align 8, !dbg !8797
  %4 = bitcast i8* %3 to %struct.bNodeInstanceKey*, !dbg !8798
  %value1 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %4, i32 0, i32 0, !dbg !8799
  %5 = load i32, i32* %value1, align 4, !dbg !8799
  store i32 %5, i32* %value_b, align 4, !dbg !8796
  %6 = load i32, i32* %value_a, align 4, !dbg !8800
  %7 = load i32, i32* %value_b, align 4, !dbg !8801
  %cmp = icmp ne i32 %6, %7, !dbg !8802
  %conv = zext i1 %cmp to i32, !dbg !8802
  %conv2 = trunc i32 %conv to i8, !dbg !8803
  ret i8 %conv2, !dbg !8804
}

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_instance_hash_clear(%struct.bNodeInstanceHash* %hash, void (i8*)* %valfreefp) #0 !dbg !8805 {
entry:
  %hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  %valfreefp.addr = alloca void (i8*)*, align 8
  store %struct.bNodeInstanceHash* %hash, %struct.bNodeInstanceHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash.addr, metadata !8806, metadata !DIExpression()), !dbg !8807
  store void (i8*)* %valfreefp, void (i8*)** %valfreefp.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %valfreefp.addr, metadata !8808, metadata !DIExpression()), !dbg !8809
  %0 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !8810
  %ghash = getelementptr inbounds %struct.bNodeInstanceHash, %struct.bNodeInstanceHash* %0, i32 0, i32 0, !dbg !8811
  %1 = load %struct.GHash*, %struct.GHash** %ghash, align 8, !dbg !8811
  %2 = load void (i8*)*, void (i8*)** %valfreefp.addr, align 8, !dbg !8812
  call void @BLI_ghash_clear(%struct.GHash* %1, void (i8*)* null, void (i8*)* %2), !dbg !8813
  ret void, !dbg !8814
}

declare dso_local void @BLI_ghash_clear(%struct.GHash*, void (i8*)*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BKE_node_instance_hash_pop(%struct.bNodeInstanceHash* %hash, i32 %key.coerce) #0 !dbg !8815 {
entry:
  %key = alloca %struct.bNodeInstanceKey, align 4
  %hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0
  store i32 %key.coerce, i32* %coerce.dive, align 4
  store %struct.bNodeInstanceHash* %hash, %struct.bNodeInstanceHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash.addr, metadata !8816, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %key, metadata !8818, metadata !DIExpression()), !dbg !8819
  %0 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !8820
  %ghash = getelementptr inbounds %struct.bNodeInstanceHash, %struct.bNodeInstanceHash* %0, i32 0, i32 0, !dbg !8821
  %1 = load %struct.GHash*, %struct.GHash** %ghash, align 8, !dbg !8821
  %2 = bitcast %struct.bNodeInstanceKey* %key to i8*, !dbg !8822
  %call = call i8* @BLI_ghash_popkey(%struct.GHash* %1, i8* %2, void (i8*)* null), !dbg !8823
  ret i8* %call, !dbg !8824
}

declare dso_local i8* @BLI_ghash_popkey(%struct.GHash*, i8*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_node_instance_hash_haskey(%struct.bNodeInstanceHash* %hash, i32 %key.coerce) #0 !dbg !8825 {
entry:
  %key = alloca %struct.bNodeInstanceKey, align 4
  %hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0
  store i32 %key.coerce, i32* %coerce.dive, align 4
  store %struct.bNodeInstanceHash* %hash, %struct.bNodeInstanceHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash.addr, metadata !8828, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %key, metadata !8830, metadata !DIExpression()), !dbg !8831
  %0 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !8832
  %ghash = getelementptr inbounds %struct.bNodeInstanceHash, %struct.bNodeInstanceHash* %0, i32 0, i32 0, !dbg !8833
  %1 = load %struct.GHash*, %struct.GHash** %ghash, align 8, !dbg !8833
  %2 = bitcast %struct.bNodeInstanceKey* %key to i8*, !dbg !8834
  %call = call zeroext i8 @BLI_ghash_haskey(%struct.GHash* %1, i8* %2), !dbg !8835
  %conv = zext i8 %call to i32, !dbg !8835
  ret i32 %conv, !dbg !8836
}

declare dso_local zeroext i8 @BLI_ghash_haskey(%struct.GHash*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_node_instance_hash_size(%struct.bNodeInstanceHash* %hash) #0 !dbg !8837 {
entry:
  %hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  store %struct.bNodeInstanceHash* %hash, %struct.bNodeInstanceHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash.addr, metadata !8840, metadata !DIExpression()), !dbg !8841
  %0 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !8842
  %ghash = getelementptr inbounds %struct.bNodeInstanceHash, %struct.bNodeInstanceHash* %0, i32 0, i32 0, !dbg !8843
  %1 = load %struct.GHash*, %struct.GHash** %ghash, align 8, !dbg !8843
  %call = call i32 @BLI_ghash_size(%struct.GHash* %1), !dbg !8844
  ret i32 %call, !dbg !8845
}

declare dso_local i32 @BLI_ghash_size(%struct.GHash*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_node_instance_hash_tag(%struct.bNodeInstanceHash* %UNUSED_hash, i8* %value) #0 !dbg !8846 {
entry:
  %UNUSED_hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  %value.addr = alloca i8*, align 8
  %entry1 = alloca %struct.bNodeInstanceHashEntry*, align 8
  store %struct.bNodeInstanceHash* %UNUSED_hash, %struct.bNodeInstanceHash** %UNUSED_hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %UNUSED_hash.addr, metadata !8849, metadata !DIExpression()), !dbg !8850
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !8851, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHashEntry** %entry1, metadata !8853, metadata !DIExpression()), !dbg !8854
  %0 = load i8*, i8** %value.addr, align 8, !dbg !8855
  %1 = bitcast i8* %0 to %struct.bNodeInstanceHashEntry*, !dbg !8855
  store %struct.bNodeInstanceHashEntry* %1, %struct.bNodeInstanceHashEntry** %entry1, align 8, !dbg !8854
  %2 = load %struct.bNodeInstanceHashEntry*, %struct.bNodeInstanceHashEntry** %entry1, align 8, !dbg !8856
  %tag = getelementptr inbounds %struct.bNodeInstanceHashEntry, %struct.bNodeInstanceHashEntry* %2, i32 0, i32 1, !dbg !8857
  store i16 1, i16* %tag, align 4, !dbg !8858
  ret void, !dbg !8859
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_node_instance_hash_tag_key(%struct.bNodeInstanceHash* %hash, i32 %key.coerce) #0 !dbg !8860 {
entry:
  %retval = alloca i8, align 1
  %key = alloca %struct.bNodeInstanceKey, align 4
  %hash.addr = alloca %struct.bNodeInstanceHash*, align 8
  %entry1 = alloca %struct.bNodeInstanceHashEntry*, align 8
  %coerce.dive = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0
  store i32 %key.coerce, i32* %coerce.dive, align 4
  store %struct.bNodeInstanceHash* %hash, %struct.bNodeInstanceHash** %hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHash** %hash.addr, metadata !8863, metadata !DIExpression()), !dbg !8864
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceKey* %key, metadata !8865, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.declare(metadata %struct.bNodeInstanceHashEntry** %entry1, metadata !8867, metadata !DIExpression()), !dbg !8868
  %0 = load %struct.bNodeInstanceHash*, %struct.bNodeInstanceHash** %hash.addr, align 8, !dbg !8869
  %coerce.dive2 = getelementptr inbounds %struct.bNodeInstanceKey, %struct.bNodeInstanceKey* %key, i32 0, i32 0, !dbg !8870
  %1 = load i32, i32* %coerce.dive2, align 4, !dbg !8870
  %call = call i8* @BKE_node_instance_hash_lookup(%struct.bNodeInstanceHash* %0, i32 %1), !dbg !8870
  %2 = bitcast i8* %call to %struct.bNodeInstanceHashEntry*, !dbg !8870
  store %struct.bNodeInstanceHashEntry* %2, %struct.bNodeInstanceHashEntry** %entry1, align 8, !dbg !8868
  %3 = load %struct.bNodeInstanceHashEntry*, %struct.bNodeInstanceHashEntry** %entry1, align 8, !dbg !8871
  %tobool = icmp ne %struct.bNodeInstanceHashEntry* %3, null, !dbg !8871
  br i1 %tobool, label %if.then, label %if.else, !dbg !8873

if.then:                                          ; preds = %entry
  %4 = load %struct.bNodeInstanceHashEntry*, %struct.bNodeInstanceHashEntry** %entry1, align 8, !dbg !8874
  %tag = getelementptr inbounds %struct.bNodeInstanceHashEntry, %struct.bNodeInstanceHashEntry* %4, i32 0, i32 1, !dbg !8876
  store i16 1, i16* %tag, align 4, !dbg !8877
  store i8 1, i8* %retval, align 1, !dbg !8878
  br label %return, !dbg !8878

if.else:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8879
  br label %return, !dbg !8879

return:                                           ; preds = %if.else, %if.then
  %5 = load i8, i8* %retval, align 1, !dbg !8880
  ret i8 %5, !dbg !8880
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeGetDependencyList(%struct.bNodeTree* %ntree, %struct.bNode*** %deplist, i32* %totnodes) #0 !dbg !8881 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %deplist.addr = alloca %struct.bNode***, align 8
  %totnodes.addr = alloca i32*, align 8
  %node = alloca %struct.bNode*, align 8
  %nsort = alloca %struct.bNode**, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !8886, metadata !DIExpression()), !dbg !8887
  store %struct.bNode*** %deplist, %struct.bNode**** %deplist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode**** %deplist.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  store i32* %totnodes, i32** %totnodes.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totnodes.addr, metadata !8890, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !8892, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.declare(metadata %struct.bNode*** %nsort, metadata !8894, metadata !DIExpression()), !dbg !8895
  %0 = load i32*, i32** %totnodes.addr, align 8, !dbg !8896
  store i32 0, i32* %0, align 4, !dbg !8897
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8898
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 7, !dbg !8900
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !8901
  %2 = load i8*, i8** %first, align 8, !dbg !8901
  %3 = bitcast i8* %2 to %struct.bNode*, !dbg !8898
  store %struct.bNode* %3, %struct.bNode** %node, align 8, !dbg !8902
  br label %for.cond, !dbg !8903

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8904
  %tobool = icmp ne %struct.bNode* %4, null, !dbg !8906
  br i1 %tobool, label %for.body, label %for.end, !dbg !8906

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8907
  %done = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 10, !dbg !8909
  store i16 0, i16* %done, align 8, !dbg !8910
  %6 = load i32*, i32** %totnodes.addr, align 8, !dbg !8911
  %7 = load i32, i32* %6, align 4, !dbg !8912
  %inc = add nsw i32 %7, 1, !dbg !8912
  store i32 %inc, i32* %6, align 4, !dbg !8912
  br label %for.inc, !dbg !8913

for.inc:                                          ; preds = %for.body
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8914
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 0, !dbg !8915
  %9 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !8915
  store %struct.bNode* %9, %struct.bNode** %node, align 8, !dbg !8916
  br label %for.cond, !dbg !8917, !llvm.loop !8918

for.end:                                          ; preds = %for.cond
  %10 = load i32*, i32** %totnodes.addr, align 8, !dbg !8920
  %11 = load i32, i32* %10, align 4, !dbg !8922
  %cmp = icmp eq i32 %11, 0, !dbg !8923
  br i1 %cmp, label %if.then, label %if.end, !dbg !8924

if.then:                                          ; preds = %for.end
  %12 = load %struct.bNode***, %struct.bNode**** %deplist.addr, align 8, !dbg !8925
  store %struct.bNode** null, %struct.bNode*** %12, align 8, !dbg !8927
  br label %for.end16, !dbg !8928

if.end:                                           ; preds = %for.end
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8929
  %14 = load i32*, i32** %totnodes.addr, align 8, !dbg !8930
  %15 = load i32, i32* %14, align 4, !dbg !8931
  %conv = sext i32 %15 to i64, !dbg !8932
  %mul = mul i64 %conv, 8, !dbg !8933
  %call = call i8* %13(i64 %mul, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.55, i64 0, i64 0)), !dbg !8929
  %16 = bitcast i8* %call to %struct.bNode**, !dbg !8929
  %17 = load %struct.bNode***, %struct.bNode**** %deplist.addr, align 8, !dbg !8934
  store %struct.bNode** %16, %struct.bNode*** %17, align 8, !dbg !8935
  store %struct.bNode** %16, %struct.bNode*** %nsort, align 8, !dbg !8936
  %18 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8937
  %nodes1 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %18, i32 0, i32 7, !dbg !8939
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes1, i32 0, i32 0, !dbg !8940
  %19 = load i8*, i8** %first2, align 8, !dbg !8940
  %20 = bitcast i8* %19 to %struct.bNode*, !dbg !8937
  store %struct.bNode* %20, %struct.bNode** %node, align 8, !dbg !8941
  br label %for.cond3, !dbg !8942

for.cond3:                                        ; preds = %for.inc14, %if.end
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8943
  %tobool4 = icmp ne %struct.bNode* %21, null, !dbg !8945
  br i1 %tobool4, label %for.body5, label %for.end16, !dbg !8945

for.body5:                                        ; preds = %for.cond3
  %22 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8946
  %done6 = getelementptr inbounds %struct.bNode, %struct.bNode* %22, i32 0, i32 10, !dbg !8949
  %23 = load i16, i16* %done6, align 8, !dbg !8949
  %conv7 = sext i16 %23 to i32, !dbg !8946
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !8950
  br i1 %cmp8, label %if.then10, label %if.end13, !dbg !8951

if.then10:                                        ; preds = %for.body5
  %24 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8952
  %25 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8954
  %call11 = call i32 @node_get_deplist_recurs(%struct.bNodeTree* %24, %struct.bNode* %25, %struct.bNode*** %nsort), !dbg !8955
  %conv12 = trunc i32 %call11 to i16, !dbg !8955
  %26 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8956
  %level = getelementptr inbounds %struct.bNode, %struct.bNode* %26, i32 0, i32 11, !dbg !8957
  store i16 %conv12, i16* %level, align 2, !dbg !8958
  br label %if.end13, !dbg !8959

if.end13:                                         ; preds = %if.then10, %for.body5
  br label %for.inc14, !dbg !8960

for.inc14:                                        ; preds = %if.end13
  %27 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !8961
  %next15 = getelementptr inbounds %struct.bNode, %struct.bNode* %27, i32 0, i32 0, !dbg !8962
  %28 = load %struct.bNode*, %struct.bNode** %next15, align 8, !dbg !8962
  store %struct.bNode* %28, %struct.bNode** %node, align 8, !dbg !8963
  br label %for.cond3, !dbg !8964, !llvm.loop !8965

for.end16:                                        ; preds = %if.then, %for.cond3
  ret void, !dbg !8967
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_get_deplist_recurs(%struct.bNodeTree* %ntree, %struct.bNode* %node, %struct.bNode*** %nsort) #0 !dbg !8968 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %nsort.addr = alloca %struct.bNode***, align 8
  %fromnode = alloca %struct.bNode*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  %level = alloca i32, align 4
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !8972, metadata !DIExpression()), !dbg !8973
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !8974, metadata !DIExpression()), !dbg !8975
  store %struct.bNode*** %nsort, %struct.bNode**** %nsort.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode**** %nsort.addr, metadata !8976, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.declare(metadata %struct.bNode** %fromnode, metadata !8978, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !8980, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.declare(metadata i32* %level, metadata !8982, metadata !DIExpression()), !dbg !8983
  store i32 4095, i32* %level, align 4, !dbg !8983
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !8984
  %done = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 10, !dbg !8985
  store i16 1, i16* %done, align 8, !dbg !8986
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !8987
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 8, !dbg !8989
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !8990
  %2 = load i8*, i8** %first, align 8, !dbg !8990
  %3 = bitcast i8* %2 to %struct.bNodeLink*, !dbg !8987
  store %struct.bNodeLink* %3, %struct.bNodeLink** %link, align 8, !dbg !8991
  br label %for.cond, !dbg !8992

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !8993
  %tobool = icmp ne %struct.bNodeLink* %4, null, !dbg !8995
  br i1 %tobool, label %for.body, label %for.end, !dbg !8995

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !8996
  %tonode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %5, i32 0, i32 3, !dbg !8999
  %6 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !8999
  %7 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9000
  %cmp = icmp eq %struct.bNode* %6, %7, !dbg !9001
  br i1 %cmp, label %if.then, label %if.end16, !dbg !9002

if.then:                                          ; preds = %for.body
  %8 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9003
  %fromnode1 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %8, i32 0, i32 2, !dbg !9005
  %9 = load %struct.bNode*, %struct.bNode** %fromnode1, align 8, !dbg !9005
  store %struct.bNode* %9, %struct.bNode** %fromnode, align 8, !dbg !9006
  %10 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !9007
  %done2 = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 10, !dbg !9009
  %11 = load i16, i16* %done2, align 8, !dbg !9009
  %conv = sext i16 %11 to i32, !dbg !9007
  %cmp3 = icmp eq i32 %conv, 0, !dbg !9010
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !9011

if.then5:                                         ; preds = %if.then
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9012
  %13 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !9013
  %14 = load %struct.bNode***, %struct.bNode**** %nsort.addr, align 8, !dbg !9014
  %call = call i32 @node_get_deplist_recurs(%struct.bNodeTree* %12, %struct.bNode* %13, %struct.bNode*** %14), !dbg !9015
  %conv6 = trunc i32 %call to i16, !dbg !9015
  %15 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !9016
  %level7 = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 11, !dbg !9017
  store i16 %conv6, i16* %level7, align 2, !dbg !9018
  br label %if.end, !dbg !9016

if.end:                                           ; preds = %if.then5, %if.then
  %16 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !9019
  %level8 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 11, !dbg !9021
  %17 = load i16, i16* %level8, align 2, !dbg !9021
  %conv9 = sext i16 %17 to i32, !dbg !9019
  %18 = load i32, i32* %level, align 4, !dbg !9022
  %cmp10 = icmp sle i32 %conv9, %18, !dbg !9023
  br i1 %cmp10, label %if.then12, label %if.end15, !dbg !9024

if.then12:                                        ; preds = %if.end
  %19 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !9025
  %level13 = getelementptr inbounds %struct.bNode, %struct.bNode* %19, i32 0, i32 11, !dbg !9026
  %20 = load i16, i16* %level13, align 2, !dbg !9026
  %conv14 = sext i16 %20 to i32, !dbg !9025
  %sub = sub nsw i32 %conv14, 1, !dbg !9027
  store i32 %sub, i32* %level, align 4, !dbg !9028
  br label %if.end15, !dbg !9029

if.end15:                                         ; preds = %if.then12, %if.end
  br label %if.end16, !dbg !9030

if.end16:                                         ; preds = %if.end15, %for.body
  br label %for.inc, !dbg !9031

for.inc:                                          ; preds = %if.end16
  %21 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9032
  %next = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %21, i32 0, i32 0, !dbg !9033
  %22 = load %struct.bNodeLink*, %struct.bNodeLink** %next, align 8, !dbg !9033
  store %struct.bNodeLink* %22, %struct.bNodeLink** %link, align 8, !dbg !9034
  br label %for.cond, !dbg !9035, !llvm.loop !9036

for.end:                                          ; preds = %for.cond
  %23 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9038
  %parent = getelementptr inbounds %struct.bNode, %struct.bNode* %23, i32 0, i32 19, !dbg !9040
  %24 = load %struct.bNode*, %struct.bNode** %parent, align 8, !dbg !9040
  %tobool17 = icmp ne %struct.bNode* %24, null, !dbg !9038
  br i1 %tobool17, label %if.then18, label %if.end42, !dbg !9041

if.then18:                                        ; preds = %for.end
  %25 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9042
  %parent19 = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 19, !dbg !9045
  %26 = load %struct.bNode*, %struct.bNode** %parent19, align 8, !dbg !9045
  %done20 = getelementptr inbounds %struct.bNode, %struct.bNode* %26, i32 0, i32 10, !dbg !9046
  %27 = load i16, i16* %done20, align 8, !dbg !9046
  %conv21 = sext i16 %27 to i32, !dbg !9042
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !9047
  br i1 %cmp22, label %if.then24, label %if.end30, !dbg !9048

if.then24:                                        ; preds = %if.then18
  %28 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9049
  %29 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9050
  %parent25 = getelementptr inbounds %struct.bNode, %struct.bNode* %29, i32 0, i32 19, !dbg !9051
  %30 = load %struct.bNode*, %struct.bNode** %parent25, align 8, !dbg !9051
  %31 = load %struct.bNode***, %struct.bNode**** %nsort.addr, align 8, !dbg !9052
  %call26 = call i32 @node_get_deplist_recurs(%struct.bNodeTree* %28, %struct.bNode* %30, %struct.bNode*** %31), !dbg !9053
  %conv27 = trunc i32 %call26 to i16, !dbg !9053
  %32 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9054
  %parent28 = getelementptr inbounds %struct.bNode, %struct.bNode* %32, i32 0, i32 19, !dbg !9055
  %33 = load %struct.bNode*, %struct.bNode** %parent28, align 8, !dbg !9055
  %level29 = getelementptr inbounds %struct.bNode, %struct.bNode* %33, i32 0, i32 11, !dbg !9056
  store i16 %conv27, i16* %level29, align 2, !dbg !9057
  br label %if.end30, !dbg !9054

if.end30:                                         ; preds = %if.then24, %if.then18
  %34 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9058
  %parent31 = getelementptr inbounds %struct.bNode, %struct.bNode* %34, i32 0, i32 19, !dbg !9060
  %35 = load %struct.bNode*, %struct.bNode** %parent31, align 8, !dbg !9060
  %level32 = getelementptr inbounds %struct.bNode, %struct.bNode* %35, i32 0, i32 11, !dbg !9061
  %36 = load i16, i16* %level32, align 2, !dbg !9061
  %conv33 = sext i16 %36 to i32, !dbg !9058
  %37 = load i32, i32* %level, align 4, !dbg !9062
  %cmp34 = icmp sle i32 %conv33, %37, !dbg !9063
  br i1 %cmp34, label %if.then36, label %if.end41, !dbg !9064

if.then36:                                        ; preds = %if.end30
  %38 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9065
  %parent37 = getelementptr inbounds %struct.bNode, %struct.bNode* %38, i32 0, i32 19, !dbg !9066
  %39 = load %struct.bNode*, %struct.bNode** %parent37, align 8, !dbg !9066
  %level38 = getelementptr inbounds %struct.bNode, %struct.bNode* %39, i32 0, i32 11, !dbg !9067
  %40 = load i16, i16* %level38, align 2, !dbg !9067
  %conv39 = sext i16 %40 to i32, !dbg !9065
  %sub40 = sub nsw i32 %conv39, 1, !dbg !9068
  store i32 %sub40, i32* %level, align 4, !dbg !9069
  br label %if.end41, !dbg !9070

if.end41:                                         ; preds = %if.then36, %if.end30
  br label %if.end42, !dbg !9071

if.end42:                                         ; preds = %if.end41, %for.end
  %41 = load %struct.bNode***, %struct.bNode**** %nsort.addr, align 8, !dbg !9072
  %tobool43 = icmp ne %struct.bNode*** %41, null, !dbg !9072
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !9074

if.then44:                                        ; preds = %if.end42
  %42 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9075
  %43 = load %struct.bNode***, %struct.bNode**** %nsort.addr, align 8, !dbg !9077
  %44 = load %struct.bNode**, %struct.bNode*** %43, align 8, !dbg !9078
  store %struct.bNode* %42, %struct.bNode** %44, align 8, !dbg !9079
  %45 = load %struct.bNode***, %struct.bNode**** %nsort.addr, align 8, !dbg !9080
  %46 = load %struct.bNode**, %struct.bNode*** %45, align 8, !dbg !9081
  %incdec.ptr = getelementptr inbounds %struct.bNode*, %struct.bNode** %46, i32 1, !dbg !9081
  store %struct.bNode** %incdec.ptr, %struct.bNode*** %45, align 8, !dbg !9081
  br label %if.end45, !dbg !9082

if.end45:                                         ; preds = %if.then44, %if.end42
  %47 = load i32, i32* %level, align 4, !dbg !9083
  ret i32 %47, !dbg !9084
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeVerifyNodes(%struct.Main* %main, %struct.ID* %id) #0 !dbg !9085 {
entry:
  %main.addr = alloca %struct.Main*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %_nstore = alloca %struct.NodeTreeIterStore, align 8
  %ntree = alloca %struct.bNodeTree*, align 8
  %owner_id = alloca %struct.ID*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.Main* %main, %struct.Main** %main.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %main.addr, metadata !9088, metadata !DIExpression()), !dbg !9089
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !9090, metadata !DIExpression()), !dbg !9091
  call void @llvm.dbg.declare(metadata %struct.NodeTreeIterStore* %_nstore, metadata !9092, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree, metadata !9095, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.declare(metadata %struct.ID** %owner_id, metadata !9096, metadata !DIExpression()), !dbg !9094
  %0 = load %struct.Main*, %struct.Main** %main.addr, align 8, !dbg !9094
  call void @BKE_node_tree_iter_init(%struct.NodeTreeIterStore* %_nstore, %struct.Main* %0), !dbg !9094
  br label %while.cond, !dbg !9094

while.cond:                                       ; preds = %if.end7, %entry
  %call = call zeroext i8 @BKE_node_tree_iter_step(%struct.NodeTreeIterStore* %_nstore, %struct.bNodeTree** %ntree, %struct.ID** %owner_id), !dbg !9094
  %conv = zext i8 %call to i32, !dbg !9094
  %cmp = icmp eq i32 %conv, 1, !dbg !9094
  br i1 %cmp, label %while.body, label %while.end, !dbg !9094

while.body:                                       ; preds = %while.cond
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !9097
  %tobool = icmp ne %struct.bNodeTree* %1, null, !dbg !9097
  br i1 %tobool, label %if.then, label %if.end7, !dbg !9100

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !9101, metadata !DIExpression()), !dbg !9104
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !9105
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 7, !dbg !9107
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !9108
  %3 = load i8*, i8** %first, align 8, !dbg !9108
  %4 = bitcast i8* %3 to %struct.bNode*, !dbg !9105
  store %struct.bNode* %4, %struct.bNode** %node, align 8, !dbg !9109
  br label %for.cond, !dbg !9110

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9111
  %tobool2 = icmp ne %struct.bNode* %5, null, !dbg !9113
  br i1 %tobool2, label %for.body, label %for.end, !dbg !9113

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9114
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 4, !dbg !9116
  %7 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !9116
  %verifyfunc = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %7, i32 0, i32 30, !dbg !9117
  %8 = load void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)** %verifyfunc, align 8, !dbg !9117
  %tobool3 = icmp ne void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)* %8, null, !dbg !9114
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !9118

if.then4:                                         ; preds = %for.body
  %9 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9119
  %typeinfo5 = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 4, !dbg !9120
  %10 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo5, align 8, !dbg !9120
  %verifyfunc6 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %10, i32 0, i32 30, !dbg !9121
  %11 = load void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)** %verifyfunc6, align 8, !dbg !9121
  %12 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree, align 8, !dbg !9122
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9123
  %14 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !9124
  call void %11(%struct.bNodeTree* %12, %struct.bNode* %13, %struct.ID* %14), !dbg !9119
  br label %if.end, !dbg !9119

if.end:                                           ; preds = %if.then4, %for.body
  br label %for.inc, !dbg !9117

for.inc:                                          ; preds = %if.end
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9125
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 0, !dbg !9126
  %16 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !9126
  store %struct.bNode* %16, %struct.bNode** %node, align 8, !dbg !9127
  br label %for.cond, !dbg !9128, !llvm.loop !9129

for.end:                                          ; preds = %for.cond
  br label %if.end7, !dbg !9131

if.end7:                                          ; preds = %for.end, %while.body
  br label %while.cond, !dbg !9094, !llvm.loop !9132

while.end:                                        ; preds = %while.cond
  ret void, !dbg !9134
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ntreeUpdateTree(%struct.Main* %bmain, %struct.bNodeTree* %ntree) #0 !dbg !9135 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !9138, metadata !DIExpression()), !dbg !9139
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !9140, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !9142, metadata !DIExpression()), !dbg !9143
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9144
  %tobool = icmp ne %struct.bNodeTree* %0, null, !dbg !9144
  br i1 %tobool, label %if.end, label %if.then, !dbg !9146

if.then:                                          ; preds = %entry
  br label %return, !dbg !9147

if.end:                                           ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9148
  %is_updating = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %1, i32 0, i32 14, !dbg !9150
  %2 = load i16, i16* %is_updating, align 4, !dbg !9150
  %tobool1 = icmp ne i16 %2, 0, !dbg !9148
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !9151

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !9152

if.end3:                                          ; preds = %if.end
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9153
  %is_updating4 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 14, !dbg !9154
  store i16 1, i16* %is_updating4, align 4, !dbg !9155
  %4 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9156
  %update = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %4, i32 0, i32 13, !dbg !9158
  %5 = load i32, i32* %update, align 8, !dbg !9158
  %and = and i32 %5, 3, !dbg !9159
  %tobool5 = icmp ne i32 %and, 0, !dbg !9159
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !9160

if.then6:                                         ; preds = %if.end3
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9161
  call void @ntree_update_link_pointers(%struct.bNodeTree* %6), !dbg !9163
  br label %if.end7, !dbg !9164

if.end7:                                          ; preds = %if.then6, %if.end3
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9165
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 7, !dbg !9167
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !9168
  %8 = load i8*, i8** %first, align 8, !dbg !9168
  %9 = bitcast i8* %8 to %struct.bNode*, !dbg !9165
  store %struct.bNode* %9, %struct.bNode** %node, align 8, !dbg !9169
  br label %for.cond, !dbg !9170

for.cond:                                         ; preds = %for.inc, %if.end7
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9171
  %tobool8 = icmp ne %struct.bNode* %10, null, !dbg !9173
  br i1 %tobool8, label %for.body, label %for.end, !dbg !9173

for.body:                                         ; preds = %for.cond
  %11 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9174
  %update9 = getelementptr inbounds %struct.bNode, %struct.bNode* %11, i32 0, i32 31, !dbg !9177
  %12 = load i32, i32* %update9, align 4, !dbg !9177
  %and10 = and i32 %12, 65535, !dbg !9178
  %tobool11 = icmp ne i32 %and10, 0, !dbg !9178
  br i1 %tobool11, label %if.then15, label %lor.lhs.false, !dbg !9179

lor.lhs.false:                                    ; preds = %for.body
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9180
  %update12 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %13, i32 0, i32 13, !dbg !9181
  %14 = load i32, i32* %update12, align 8, !dbg !9181
  %and13 = and i32 %14, 65535, !dbg !9182
  %tobool14 = icmp ne i32 %and13, 0, !dbg !9182
  br i1 %tobool14, label %if.then15, label %if.end23, !dbg !9183

if.then15:                                        ; preds = %lor.lhs.false, %for.body
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9184
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 4, !dbg !9187
  %16 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !9187
  %updatefunc = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %16, i32 0, i32 29, !dbg !9188
  %updatefunc16 = bitcast {}** %updatefunc to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !9188
  %17 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %updatefunc16, align 8, !dbg !9188
  %tobool17 = icmp ne void (%struct.bNodeTree*, %struct.bNode*)* %17, null, !dbg !9184
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !9189

if.then18:                                        ; preds = %if.then15
  %18 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9190
  %typeinfo19 = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 4, !dbg !9191
  %19 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo19, align 8, !dbg !9191
  %updatefunc20 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %19, i32 0, i32 29, !dbg !9192
  %updatefunc21 = bitcast {}** %updatefunc20 to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !9192
  %20 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %updatefunc21, align 8, !dbg !9192
  %21 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9193
  %22 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9194
  call void %20(%struct.bNodeTree* %21, %struct.bNode* %22), !dbg !9190
  br label %if.end22, !dbg !9190

if.end22:                                         ; preds = %if.then18, %if.then15
  %23 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9195
  %24 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9196
  call void @nodeUpdateInternalLinks(%struct.bNodeTree* %23, %struct.bNode* %24), !dbg !9197
  br label %if.end23, !dbg !9198

if.end23:                                         ; preds = %if.end22, %lor.lhs.false
  br label %for.inc, !dbg !9199

for.inc:                                          ; preds = %if.end23
  %25 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9200
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 0, !dbg !9201
  %26 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !9201
  store %struct.bNode* %26, %struct.bNode** %node, align 8, !dbg !9202
  br label %for.cond, !dbg !9203, !llvm.loop !9204

for.end:                                          ; preds = %for.cond
  %27 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9206
  %typeinfo24 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %27, i32 0, i32 2, !dbg !9208
  %28 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo24, align 8, !dbg !9208
  %update25 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %28, i32 0, i32 13, !dbg !9209
  %29 = load void (%struct.bNodeTree*)*, void (%struct.bNodeTree*)** %update25, align 8, !dbg !9209
  %tobool26 = icmp ne void (%struct.bNodeTree*)* %29, null, !dbg !9206
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !9210

if.then27:                                        ; preds = %for.end
  %30 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9211
  %typeinfo28 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %30, i32 0, i32 2, !dbg !9212
  %31 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo28, align 8, !dbg !9212
  %update29 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %31, i32 0, i32 13, !dbg !9213
  %32 = load void (%struct.bNodeTree*)*, void (%struct.bNodeTree*)** %update29, align 8, !dbg !9213
  %33 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9214
  call void %32(%struct.bNodeTree* %33), !dbg !9211
  br label %if.end30, !dbg !9211

if.end30:                                         ; preds = %if.then27, %for.end
  %34 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9215
  %update31 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %34, i32 0, i32 13, !dbg !9217
  %35 = load i32, i32* %update31, align 8, !dbg !9217
  %and32 = and i32 %35, 48, !dbg !9218
  %tobool33 = icmp ne i32 %and32, 0, !dbg !9218
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !9219

if.then34:                                        ; preds = %if.end30
  %36 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9220
  call void @ntreeInterfaceTypeUpdate(%struct.bNodeTree* %36), !dbg !9221
  br label %if.end35, !dbg !9221

if.end35:                                         ; preds = %if.then34, %if.end30
  %37 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9222
  %tobool36 = icmp ne %struct.Main* %37, null, !dbg !9222
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !9224

if.then37:                                        ; preds = %if.end35
  %38 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9225
  %39 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9226
  %id = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %39, i32 0, i32 0, !dbg !9227
  call void @ntreeVerifyNodes(%struct.Main* %38, %struct.ID* %id), !dbg !9228
  br label %if.end38, !dbg !9228

if.end38:                                         ; preds = %if.then37, %if.end35
  %40 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9229
  %update39 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %40, i32 0, i32 13, !dbg !9231
  %41 = load i32, i32* %update39, align 8, !dbg !9231
  %and40 = and i32 %41, 3, !dbg !9232
  %tobool41 = icmp ne i32 %and40, 0, !dbg !9232
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !9233

if.then42:                                        ; preds = %if.end38
  %42 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9234
  call void @ntree_update_link_pointers(%struct.bNodeTree* %42), !dbg !9236
  %43 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9237
  call void @ntree_update_node_level(%struct.bNodeTree* %43), !dbg !9238
  %44 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9239
  call void @ntree_validate_links(%struct.bNodeTree* %44), !dbg !9240
  br label %if.end43, !dbg !9241

if.end43:                                         ; preds = %if.then42, %if.end38
  %45 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9242
  %nodes44 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %45, i32 0, i32 7, !dbg !9244
  %first45 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes44, i32 0, i32 0, !dbg !9245
  %46 = load i8*, i8** %first45, align 8, !dbg !9245
  %47 = bitcast i8* %46 to %struct.bNode*, !dbg !9242
  store %struct.bNode* %47, %struct.bNode** %node, align 8, !dbg !9246
  br label %for.cond46, !dbg !9247

for.cond46:                                       ; preds = %for.inc50, %if.end43
  %48 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9248
  %tobool47 = icmp ne %struct.bNode* %48, null, !dbg !9250
  br i1 %tobool47, label %for.body48, label %for.end52, !dbg !9250

for.body48:                                       ; preds = %for.cond46
  %49 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9251
  %update49 = getelementptr inbounds %struct.bNode, %struct.bNode* %49, i32 0, i32 31, !dbg !9253
  store i32 0, i32* %update49, align 4, !dbg !9254
  br label %for.inc50, !dbg !9255

for.inc50:                                        ; preds = %for.body48
  %50 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9256
  %next51 = getelementptr inbounds %struct.bNode, %struct.bNode* %50, i32 0, i32 0, !dbg !9257
  %51 = load %struct.bNode*, %struct.bNode** %next51, align 8, !dbg !9257
  store %struct.bNode* %51, %struct.bNode** %node, align 8, !dbg !9258
  br label %for.cond46, !dbg !9259, !llvm.loop !9260

for.end52:                                        ; preds = %for.cond46
  %52 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9262
  %update53 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %52, i32 0, i32 13, !dbg !9263
  store i32 0, i32* %update53, align 8, !dbg !9264
  %53 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9265
  %is_updating54 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %53, i32 0, i32 14, !dbg !9266
  store i16 0, i16* %is_updating54, align 4, !dbg !9267
  br label %return, !dbg !9268

return:                                           ; preds = %for.end52, %if.then2, %if.then
  ret void, !dbg !9268
}

; Function Attrs: noinline nounwind uwtable
define internal void @ntree_update_link_pointers(%struct.bNodeTree* %ntree) #0 !dbg !9269 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !9270, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !9272, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !9274, metadata !DIExpression()), !dbg !9275
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !9276, metadata !DIExpression()), !dbg !9277
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9278
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !9280
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !9281
  %1 = load i8*, i8** %first, align 8, !dbg !9281
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !9278
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !9282
  br label %for.cond, !dbg !9283

for.cond:                                         ; preds = %for.inc18, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9284
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !9286
  br i1 %tobool, label %for.body, label %for.end20, !dbg !9286

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9287
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 17, !dbg !9290
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !9291
  %5 = load i8*, i8** %first1, align 8, !dbg !9291
  %6 = bitcast i8* %5 to %struct.bNodeSocket*, !dbg !9287
  store %struct.bNodeSocket* %6, %struct.bNodeSocket** %sock, align 8, !dbg !9292
  br label %for.cond2, !dbg !9293

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9294
  %tobool3 = icmp ne %struct.bNodeSocket* %7, null, !dbg !9296
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !9296

for.body4:                                        ; preds = %for.cond2
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9297
  %link5 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %8, i32 0, i32 23, !dbg !9299
  store %struct.bNodeLink* null, %struct.bNodeLink** %link5, align 8, !dbg !9300
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9301
  %flag = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %9, i32 0, i32 8, !dbg !9302
  %10 = load i16, i16* %flag, align 2, !dbg !9303
  %conv = sext i16 %10 to i32, !dbg !9303
  %and = and i32 %conv, -5, !dbg !9303
  %conv6 = trunc i32 %and to i16, !dbg !9303
  store i16 %conv6, i16* %flag, align 2, !dbg !9303
  br label %for.inc, !dbg !9304

for.inc:                                          ; preds = %for.body4
  %11 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9305
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %11, i32 0, i32 0, !dbg !9306
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !9306
  store %struct.bNodeSocket* %12, %struct.bNodeSocket** %sock, align 8, !dbg !9307
  br label %for.cond2, !dbg !9308, !llvm.loop !9309

for.end:                                          ; preds = %for.cond2
  %13 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9311
  %outputs = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 18, !dbg !9313
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %outputs, i32 0, i32 0, !dbg !9314
  %14 = load i8*, i8** %first7, align 8, !dbg !9314
  %15 = bitcast i8* %14 to %struct.bNodeSocket*, !dbg !9311
  store %struct.bNodeSocket* %15, %struct.bNodeSocket** %sock, align 8, !dbg !9315
  br label %for.cond8, !dbg !9316

for.cond8:                                        ; preds = %for.inc15, %for.end
  %16 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9317
  %tobool9 = icmp ne %struct.bNodeSocket* %16, null, !dbg !9319
  br i1 %tobool9, label %for.body10, label %for.end17, !dbg !9319

for.body10:                                       ; preds = %for.cond8
  %17 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9320
  %flag11 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %17, i32 0, i32 8, !dbg !9322
  %18 = load i16, i16* %flag11, align 2, !dbg !9323
  %conv12 = sext i16 %18 to i32, !dbg !9323
  %and13 = and i32 %conv12, -5, !dbg !9323
  %conv14 = trunc i32 %and13 to i16, !dbg !9323
  store i16 %conv14, i16* %flag11, align 2, !dbg !9323
  br label %for.inc15, !dbg !9324

for.inc15:                                        ; preds = %for.body10
  %19 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9325
  %next16 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %19, i32 0, i32 0, !dbg !9326
  %20 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next16, align 8, !dbg !9326
  store %struct.bNodeSocket* %20, %struct.bNodeSocket** %sock, align 8, !dbg !9327
  br label %for.cond8, !dbg !9328, !llvm.loop !9329

for.end17:                                        ; preds = %for.cond8
  br label %for.inc18, !dbg !9331

for.inc18:                                        ; preds = %for.end17
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9332
  %next19 = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 0, !dbg !9333
  %22 = load %struct.bNode*, %struct.bNode** %next19, align 8, !dbg !9333
  store %struct.bNode* %22, %struct.bNode** %node, align 8, !dbg !9334
  br label %for.cond, !dbg !9335, !llvm.loop !9336

for.end20:                                        ; preds = %for.cond
  %23 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9338
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %23, i32 0, i32 8, !dbg !9340
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !9341
  %24 = load i8*, i8** %first21, align 8, !dbg !9341
  %25 = bitcast i8* %24 to %struct.bNodeLink*, !dbg !9338
  store %struct.bNodeLink* %25, %struct.bNodeLink** %link, align 8, !dbg !9342
  br label %for.cond22, !dbg !9343

for.cond22:                                       ; preds = %for.inc34, %for.end20
  %26 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9344
  %tobool23 = icmp ne %struct.bNodeLink* %26, null, !dbg !9346
  br i1 %tobool23, label %for.body24, label %for.end36, !dbg !9346

for.body24:                                       ; preds = %for.cond22
  %27 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9347
  %28 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9349
  %tosock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %28, i32 0, i32 5, !dbg !9350
  %29 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock, align 8, !dbg !9350
  %link25 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %29, i32 0, i32 23, !dbg !9351
  store %struct.bNodeLink* %27, %struct.bNodeLink** %link25, align 8, !dbg !9352
  %30 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9353
  %fromsock = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %30, i32 0, i32 4, !dbg !9354
  %31 = load %struct.bNodeSocket*, %struct.bNodeSocket** %fromsock, align 8, !dbg !9354
  %flag26 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %31, i32 0, i32 8, !dbg !9355
  %32 = load i16, i16* %flag26, align 2, !dbg !9356
  %conv27 = sext i16 %32 to i32, !dbg !9356
  %or = or i32 %conv27, 4, !dbg !9356
  %conv28 = trunc i32 %or to i16, !dbg !9356
  store i16 %conv28, i16* %flag26, align 2, !dbg !9356
  %33 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9357
  %tosock29 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %33, i32 0, i32 5, !dbg !9358
  %34 = load %struct.bNodeSocket*, %struct.bNodeSocket** %tosock29, align 8, !dbg !9358
  %flag30 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %34, i32 0, i32 8, !dbg !9359
  %35 = load i16, i16* %flag30, align 2, !dbg !9360
  %conv31 = sext i16 %35 to i32, !dbg !9360
  %or32 = or i32 %conv31, 4, !dbg !9360
  %conv33 = trunc i32 %or32 to i16, !dbg !9360
  store i16 %conv33, i16* %flag30, align 2, !dbg !9360
  br label %for.inc34, !dbg !9361

for.inc34:                                        ; preds = %for.body24
  %36 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9362
  %next35 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %36, i32 0, i32 0, !dbg !9363
  %37 = load %struct.bNodeLink*, %struct.bNodeLink** %next35, align 8, !dbg !9363
  store %struct.bNodeLink* %37, %struct.bNodeLink** %link, align 8, !dbg !9364
  br label %for.cond22, !dbg !9365, !llvm.loop !9366

for.end36:                                        ; preds = %for.cond22
  ret void, !dbg !9368
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeUpdateInternalLinks(%struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !9369 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !9370, metadata !DIExpression()), !dbg !9371
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !9372, metadata !DIExpression()), !dbg !9373
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9374
  %internal_links = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 23, !dbg !9375
  call void @BLI_freelistN(%struct.ListBase* %internal_links), !dbg !9376
  %1 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9377
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %1, i32 0, i32 4, !dbg !9379
  %2 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !9379
  %tobool = icmp ne %struct.bNodeType* %2, null, !dbg !9377
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9380

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9381
  %typeinfo1 = getelementptr inbounds %struct.bNode, %struct.bNode* %3, i32 0, i32 4, !dbg !9382
  %4 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo1, align 8, !dbg !9382
  %update_internal_links = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %4, i32 0, i32 39, !dbg !9383
  %update_internal_links2 = bitcast {}** %update_internal_links to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !9383
  %5 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %update_internal_links2, align 8, !dbg !9383
  %tobool3 = icmp ne void (%struct.bNodeTree*, %struct.bNode*)* %5, null, !dbg !9381
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9384

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9385
  %typeinfo4 = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 4, !dbg !9386
  %7 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo4, align 8, !dbg !9386
  %update_internal_links5 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %7, i32 0, i32 39, !dbg !9387
  %update_internal_links6 = bitcast {}** %update_internal_links5 to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !9387
  %8 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %update_internal_links6, align 8, !dbg !9387
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9388
  %10 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9389
  call void %8(%struct.bNodeTree* %9, %struct.bNode* %10), !dbg !9385
  br label %if.end, !dbg !9385

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !9390
}

; Function Attrs: noinline nounwind uwtable
define internal void @ntree_update_node_level(%struct.bNodeTree* %ntree) #0 !dbg !9391 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !9392, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !9394, metadata !DIExpression()), !dbg !9395
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9396
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !9398
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !9399
  %1 = load i8*, i8** %first, align 8, !dbg !9399
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !9396
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !9400
  br label %for.cond, !dbg !9401

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9402
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !9404
  br i1 %tobool, label %for.body, label %for.end, !dbg !9404

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9405
  %done = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 10, !dbg !9407
  store i16 0, i16* %done, align 8, !dbg !9408
  br label %for.inc, !dbg !9409

for.inc:                                          ; preds = %for.body
  %5 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9410
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 0, !dbg !9411
  %6 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !9411
  store %struct.bNode* %6, %struct.bNode** %node, align 8, !dbg !9412
  br label %for.cond, !dbg !9413, !llvm.loop !9414

for.end:                                          ; preds = %for.cond
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9416
  %nodes1 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 7, !dbg !9418
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes1, i32 0, i32 0, !dbg !9419
  %8 = load i8*, i8** %first2, align 8, !dbg !9419
  %9 = bitcast i8* %8 to %struct.bNode*, !dbg !9416
  store %struct.bNode* %9, %struct.bNode** %node, align 8, !dbg !9420
  br label %for.cond3, !dbg !9421

for.cond3:                                        ; preds = %for.inc9, %for.end
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9422
  %tobool4 = icmp ne %struct.bNode* %10, null, !dbg !9424
  br i1 %tobool4, label %for.body5, label %for.end11, !dbg !9424

for.body5:                                        ; preds = %for.cond3
  %11 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9425
  %done6 = getelementptr inbounds %struct.bNode, %struct.bNode* %11, i32 0, i32 10, !dbg !9428
  %12 = load i16, i16* %done6, align 8, !dbg !9428
  %conv = sext i16 %12 to i32, !dbg !9425
  %cmp = icmp eq i32 %conv, 0, !dbg !9429
  br i1 %cmp, label %if.then, label %if.end, !dbg !9430

if.then:                                          ; preds = %for.body5
  %13 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9431
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9433
  %call = call i32 @node_get_deplist_recurs(%struct.bNodeTree* %13, %struct.bNode* %14, %struct.bNode*** null), !dbg !9434
  %conv8 = trunc i32 %call to i16, !dbg !9434
  %15 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9435
  %level = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 11, !dbg !9436
  store i16 %conv8, i16* %level, align 2, !dbg !9437
  br label %if.end, !dbg !9438

if.end:                                           ; preds = %if.then, %for.body5
  br label %for.inc9, !dbg !9439

for.inc9:                                         ; preds = %if.end
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9440
  %next10 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 0, !dbg !9441
  %17 = load %struct.bNode*, %struct.bNode** %next10, align 8, !dbg !9441
  store %struct.bNode* %17, %struct.bNode** %node, align 8, !dbg !9442
  br label %for.cond3, !dbg !9443, !llvm.loop !9444

for.end11:                                        ; preds = %for.cond3
  ret void, !dbg !9446
}

; Function Attrs: noinline nounwind uwtable
define internal void @ntree_validate_links(%struct.bNodeTree* %ntree) #0 !dbg !9447 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %link = alloca %struct.bNodeLink*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !9448, metadata !DIExpression()), !dbg !9449
  call void @llvm.dbg.declare(metadata %struct.bNodeLink** %link, metadata !9450, metadata !DIExpression()), !dbg !9451
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9452
  %links = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 8, !dbg !9454
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %links, i32 0, i32 0, !dbg !9455
  %1 = load i8*, i8** %first, align 8, !dbg !9455
  %2 = bitcast i8* %1 to %struct.bNodeLink*, !dbg !9452
  store %struct.bNodeLink* %2, %struct.bNodeLink** %link, align 8, !dbg !9456
  br label %for.cond, !dbg !9457

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9458
  %tobool = icmp ne %struct.bNodeLink* %3, null, !dbg !9460
  br i1 %tobool, label %for.body, label %for.end, !dbg !9460

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9461
  %flag = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %4, i32 0, i32 6, !dbg !9463
  %5 = load i32, i32* %flag, align 8, !dbg !9464
  %or = or i32 %5, 2, !dbg !9464
  store i32 %or, i32* %flag, align 8, !dbg !9464
  %6 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9465
  %fromnode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %6, i32 0, i32 2, !dbg !9467
  %7 = load %struct.bNode*, %struct.bNode** %fromnode, align 8, !dbg !9467
  %tobool1 = icmp ne %struct.bNode* %7, null, !dbg !9465
  br i1 %tobool1, label %land.lhs.true, label %if.else, !dbg !9468

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9469
  %tonode = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %8, i32 0, i32 3, !dbg !9470
  %9 = load %struct.bNode*, %struct.bNode** %tonode, align 8, !dbg !9470
  %tobool2 = icmp ne %struct.bNode* %9, null, !dbg !9469
  br i1 %tobool2, label %land.lhs.true3, label %if.else, !dbg !9471

land.lhs.true3:                                   ; preds = %land.lhs.true
  %10 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9472
  %fromnode4 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %10, i32 0, i32 2, !dbg !9473
  %11 = load %struct.bNode*, %struct.bNode** %fromnode4, align 8, !dbg !9473
  %level = getelementptr inbounds %struct.bNode, %struct.bNode* %11, i32 0, i32 11, !dbg !9474
  %12 = load i16, i16* %level, align 2, !dbg !9474
  %conv = sext i16 %12 to i32, !dbg !9472
  %13 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9475
  %tonode5 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %13, i32 0, i32 3, !dbg !9476
  %14 = load %struct.bNode*, %struct.bNode** %tonode5, align 8, !dbg !9476
  %level6 = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 11, !dbg !9477
  %15 = load i16, i16* %level6, align 2, !dbg !9477
  %conv7 = sext i16 %15 to i32, !dbg !9475
  %cmp = icmp sle i32 %conv, %conv7, !dbg !9478
  br i1 %cmp, label %if.then, label %if.else, !dbg !9479

if.then:                                          ; preds = %land.lhs.true3
  %16 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9480
  %flag9 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %16, i32 0, i32 6, !dbg !9481
  %17 = load i32, i32* %flag9, align 8, !dbg !9482
  %and = and i32 %17, -3, !dbg !9482
  store i32 %and, i32* %flag9, align 8, !dbg !9482
  br label %if.end19, !dbg !9480

if.else:                                          ; preds = %land.lhs.true3, %land.lhs.true, %for.body
  %18 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9483
  %typeinfo = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %18, i32 0, i32 2, !dbg !9485
  %19 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo, align 8, !dbg !9485
  %validate_link = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %19, i32 0, i32 14, !dbg !9486
  %20 = load i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)** %validate_link, align 8, !dbg !9486
  %tobool10 = icmp ne i32 (%struct.bNodeTree*, %struct.bNodeLink*)* %20, null, !dbg !9483
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !9487

if.then11:                                        ; preds = %if.else
  %21 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9488
  %typeinfo12 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %21, i32 0, i32 2, !dbg !9491
  %22 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo12, align 8, !dbg !9491
  %validate_link13 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %22, i32 0, i32 14, !dbg !9492
  %23 = load i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)** %validate_link13, align 8, !dbg !9492
  %24 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9493
  %25 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9494
  %call = call i32 %23(%struct.bNodeTree* %24, %struct.bNodeLink* %25), !dbg !9488
  %tobool14 = icmp ne i32 %call, 0, !dbg !9488
  br i1 %tobool14, label %if.end, label %if.then15, !dbg !9495

if.then15:                                        ; preds = %if.then11
  %26 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9496
  %flag16 = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %26, i32 0, i32 6, !dbg !9497
  %27 = load i32, i32* %flag16, align 8, !dbg !9498
  %and17 = and i32 %27, -3, !dbg !9498
  store i32 %and17, i32* %flag16, align 8, !dbg !9498
  br label %if.end, !dbg !9496

if.end:                                           ; preds = %if.then15, %if.then11
  br label %if.end18, !dbg !9499

if.end18:                                         ; preds = %if.end, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then
  br label %for.inc, !dbg !9500

for.inc:                                          ; preds = %if.end19
  %28 = load %struct.bNodeLink*, %struct.bNodeLink** %link, align 8, !dbg !9501
  %next = getelementptr inbounds %struct.bNodeLink, %struct.bNodeLink* %28, i32 0, i32 0, !dbg !9502
  %29 = load %struct.bNodeLink*, %struct.bNodeLink** %next, align 8, !dbg !9502
  store %struct.bNodeLink* %29, %struct.bNodeLink** %link, align 8, !dbg !9503
  br label %for.cond, !dbg !9504, !llvm.loop !9505

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9507
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeUpdate(%struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !9508 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !9509, metadata !DIExpression()), !dbg !9510
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !9511, metadata !DIExpression()), !dbg !9512
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9513
  %is_updating = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 14, !dbg !9515
  %1 = load i16, i16* %is_updating, align 4, !dbg !9515
  %tobool = icmp ne i16 %1, 0, !dbg !9513
  br i1 %tobool, label %if.then, label %if.end, !dbg !9516

if.then:                                          ; preds = %entry
  br label %return, !dbg !9517

if.end:                                           ; preds = %entry
  %2 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9518
  %is_updating1 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %2, i32 0, i32 14, !dbg !9519
  store i16 1, i16* %is_updating1, align 4, !dbg !9520
  %3 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9521
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %3, i32 0, i32 4, !dbg !9523
  %4 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !9523
  %updatefunc = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %4, i32 0, i32 29, !dbg !9524
  %updatefunc2 = bitcast {}** %updatefunc to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !9524
  %5 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %updatefunc2, align 8, !dbg !9524
  %tobool3 = icmp ne void (%struct.bNodeTree*, %struct.bNode*)* %5, null, !dbg !9521
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !9525

if.then4:                                         ; preds = %if.end
  %6 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9526
  %typeinfo5 = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 4, !dbg !9527
  %7 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo5, align 8, !dbg !9527
  %updatefunc6 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %7, i32 0, i32 29, !dbg !9528
  %updatefunc7 = bitcast {}** %updatefunc6 to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !9528
  %8 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %updatefunc7, align 8, !dbg !9528
  %9 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9529
  %10 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9530
  call void %8(%struct.bNodeTree* %9, %struct.bNode* %10), !dbg !9526
  br label %if.end8, !dbg !9526

if.end8:                                          ; preds = %if.then4, %if.end
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9531
  %12 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9532
  call void @nodeUpdateInternalLinks(%struct.bNodeTree* %11, %struct.bNode* %12), !dbg !9533
  %13 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9534
  %update = getelementptr inbounds %struct.bNode, %struct.bNode* %13, i32 0, i32 31, !dbg !9535
  store i32 0, i32* %update, align 4, !dbg !9536
  %14 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9537
  %is_updating9 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %14, i32 0, i32 14, !dbg !9538
  store i16 0, i16* %is_updating9, align 4, !dbg !9539
  br label %return, !dbg !9540

return:                                           ; preds = %if.end8, %if.then
  ret void, !dbg !9540
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @nodeUpdateID(%struct.bNodeTree* %ntree, %struct.ID* %id) #0 !dbg !9541 {
entry:
  %retval = alloca i8, align 1
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %node = alloca %struct.bNode*, align 8
  %changed = alloca i8, align 1
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !9544, metadata !DIExpression()), !dbg !9545
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !9546, metadata !DIExpression()), !dbg !9547
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !9548, metadata !DIExpression()), !dbg !9549
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !9550, metadata !DIExpression()), !dbg !9551
  store i8 0, i8* %changed, align 1, !dbg !9551
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !9552
  %cmp = icmp eq %struct.ID* null, %0, !dbg !9552
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9552

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9552
  %cmp1 = icmp eq %struct.bNodeTree* null, %1, !dbg !9552
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9554

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i8, i8* %changed, align 1, !dbg !9555
  store i8 %2, i8* %retval, align 1, !dbg !9556
  br label %return, !dbg !9556

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9557
  %is_updating = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %3, i32 0, i32 14, !dbg !9559
  %4 = load i16, i16* %is_updating, align 4, !dbg !9559
  %tobool = icmp ne i16 %4, 0, !dbg !9557
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !9560

if.then2:                                         ; preds = %if.end
  %5 = load i8, i8* %changed, align 1, !dbg !9561
  store i8 %5, i8* %retval, align 1, !dbg !9562
  br label %return, !dbg !9562

if.end3:                                          ; preds = %if.end
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9563
  %is_updating4 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %6, i32 0, i32 14, !dbg !9564
  store i16 1, i16* %is_updating4, align 4, !dbg !9565
  %7 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9566
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %7, i32 0, i32 7, !dbg !9568
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !9569
  %8 = load i8*, i8** %first, align 8, !dbg !9569
  %9 = bitcast i8* %8 to %struct.bNode*, !dbg !9566
  store %struct.bNode* %9, %struct.bNode** %node, align 8, !dbg !9570
  br label %for.cond, !dbg !9571

for.cond:                                         ; preds = %for.inc, %if.end3
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9572
  %tobool5 = icmp ne %struct.bNode* %10, null, !dbg !9574
  br i1 %tobool5, label %for.body, label %for.end, !dbg !9574

for.body:                                         ; preds = %for.cond
  %11 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9575
  %id6 = getelementptr inbounds %struct.bNode, %struct.bNode* %11, i32 0, i32 20, !dbg !9578
  %12 = load %struct.ID*, %struct.ID** %id6, align 8, !dbg !9578
  %13 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !9579
  %cmp7 = icmp eq %struct.ID* %12, %13, !dbg !9580
  br i1 %cmp7, label %if.then8, label %if.end17, !dbg !9581

if.then8:                                         ; preds = %for.body
  store i8 1, i8* %changed, align 1, !dbg !9582
  %14 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9584
  %update = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 31, !dbg !9585
  %15 = load i32, i32* %update, align 4, !dbg !9586
  %or = or i32 %15, 1, !dbg !9586
  store i32 %or, i32* %update, align 4, !dbg !9586
  %16 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9587
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 4, !dbg !9589
  %17 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !9589
  %updatefunc = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %17, i32 0, i32 29, !dbg !9590
  %updatefunc9 = bitcast {}** %updatefunc to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !9590
  %18 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %updatefunc9, align 8, !dbg !9590
  %tobool10 = icmp ne void (%struct.bNodeTree*, %struct.bNode*)* %18, null, !dbg !9587
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !9591

if.then11:                                        ; preds = %if.then8
  %19 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9592
  %typeinfo12 = getelementptr inbounds %struct.bNode, %struct.bNode* %19, i32 0, i32 4, !dbg !9593
  %20 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo12, align 8, !dbg !9593
  %updatefunc13 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %20, i32 0, i32 29, !dbg !9594
  %updatefunc14 = bitcast {}** %updatefunc13 to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !9594
  %21 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %updatefunc14, align 8, !dbg !9594
  %22 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9595
  %23 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9596
  call void %21(%struct.bNodeTree* %22, %struct.bNode* %23), !dbg !9592
  br label %if.end15, !dbg !9592

if.end15:                                         ; preds = %if.then11, %if.then8
  %24 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9597
  %update16 = getelementptr inbounds %struct.bNode, %struct.bNode* %24, i32 0, i32 31, !dbg !9598
  store i32 0, i32* %update16, align 4, !dbg !9599
  br label %if.end17, !dbg !9600

if.end17:                                         ; preds = %if.end15, %for.body
  br label %for.inc, !dbg !9601

for.inc:                                          ; preds = %if.end17
  %25 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9602
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %25, i32 0, i32 0, !dbg !9603
  %26 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !9603
  store %struct.bNode* %26, %struct.bNode** %node, align 8, !dbg !9604
  br label %for.cond, !dbg !9605, !llvm.loop !9606

for.end:                                          ; preds = %for.cond
  %27 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9608
  %nodes18 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %27, i32 0, i32 7, !dbg !9610
  %first19 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes18, i32 0, i32 0, !dbg !9611
  %28 = load i8*, i8** %first19, align 8, !dbg !9611
  %29 = bitcast i8* %28 to %struct.bNode*, !dbg !9608
  store %struct.bNode* %29, %struct.bNode** %node, align 8, !dbg !9612
  br label %for.cond20, !dbg !9613

for.cond20:                                       ; preds = %for.inc23, %for.end
  %30 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9614
  %tobool21 = icmp ne %struct.bNode* %30, null, !dbg !9616
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !9616

for.body22:                                       ; preds = %for.cond20
  %31 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9617
  %32 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9619
  call void @nodeUpdateInternalLinks(%struct.bNodeTree* %31, %struct.bNode* %32), !dbg !9620
  br label %for.inc23, !dbg !9621

for.inc23:                                        ; preds = %for.body22
  %33 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !9622
  %next24 = getelementptr inbounds %struct.bNode, %struct.bNode* %33, i32 0, i32 0, !dbg !9623
  %34 = load %struct.bNode*, %struct.bNode** %next24, align 8, !dbg !9623
  store %struct.bNode* %34, %struct.bNode** %node, align 8, !dbg !9624
  br label %for.cond20, !dbg !9625, !llvm.loop !9626

for.end25:                                        ; preds = %for.cond20
  %35 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9628
  %is_updating26 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %35, i32 0, i32 14, !dbg !9629
  store i16 0, i16* %is_updating26, align 4, !dbg !9630
  %36 = load i8, i8* %changed, align 1, !dbg !9631
  store i8 %36, i8* %retval, align 1, !dbg !9632
  br label %return, !dbg !9632

return:                                           ; preds = %for.end25, %if.then2, %if.then
  %37 = load i8, i8* %retval, align 1, !dbg !9633
  ret i8 %37, !dbg !9633
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeSynchronizeID(%struct.bNode* %node, i8 zeroext %copy_to_id) #0 !dbg !9634 {
entry:
  %node.addr = alloca %struct.bNode*, align 8
  %copy_to_id.addr = alloca i8, align 1
  %sock = alloca %struct.bNodeSocket*, align 8
  %ma = alloca %struct.Material*, align 8
  %a = alloca i32, align 4
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !9635, metadata !DIExpression()), !dbg !9636
  store i8 %copy_to_id, i8* %copy_to_id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %copy_to_id.addr, metadata !9637, metadata !DIExpression()), !dbg !9638
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9639
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 20, !dbg !9641
  %1 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !9641
  %cmp = icmp eq %struct.ID* %1, null, !dbg !9642
  br i1 %cmp, label %if.then, label %if.end, !dbg !9643

if.then:                                          ; preds = %entry
  br label %if.end88, !dbg !9644

if.end:                                           ; preds = %entry
  %2 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9645
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %2, i32 0, i32 8, !dbg !9645
  %3 = load i16, i16* %type, align 4, !dbg !9645
  %conv = sext i16 %3 to i32, !dbg !9645
  %cmp1 = icmp eq i32 %conv, 100, !dbg !9645
  br i1 %cmp1, label %if.then7, label %lor.lhs.false, !dbg !9645

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9645
  %type3 = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 8, !dbg !9645
  %5 = load i16, i16* %type3, align 4, !dbg !9645
  %conv4 = sext i16 %5 to i32, !dbg !9645
  %cmp5 = icmp eq i32 %conv4, 118, !dbg !9645
  br i1 %cmp5, label %if.then7, label %if.end88, !dbg !9647

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !9648, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !9651, metadata !DIExpression()), !dbg !9652
  %6 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9653
  %id8 = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 20, !dbg !9654
  %7 = load %struct.ID*, %struct.ID** %id8, align 8, !dbg !9654
  %8 = bitcast %struct.ID* %7 to %struct.Material*, !dbg !9655
  store %struct.Material* %8, %struct.Material** %ma, align 8, !dbg !9652
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9656, metadata !DIExpression()), !dbg !9657
  store i32 0, i32* %a, align 4, !dbg !9658
  %9 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9660
  %inputs = getelementptr inbounds %struct.bNode, %struct.bNode* %9, i32 0, i32 17, !dbg !9661
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %inputs, i32 0, i32 0, !dbg !9662
  %10 = load i8*, i8** %first, align 8, !dbg !9662
  %11 = bitcast i8* %10 to %struct.bNodeSocket*, !dbg !9660
  store %struct.bNodeSocket* %11, %struct.bNodeSocket** %sock, align 8, !dbg !9663
  br label %for.cond, !dbg !9664

for.cond:                                         ; preds = %for.inc, %if.then7
  %12 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9665
  %tobool = icmp ne %struct.bNodeSocket* %12, null, !dbg !9667
  br i1 %tobool, label %for.body, label %for.end, !dbg !9667

for.body:                                         ; preds = %for.cond
  %13 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9668
  %call = call i32 @nodeSocketIsHidden(%struct.bNodeSocket* %13), !dbg !9671
  %tobool9 = icmp ne i32 %call, 0, !dbg !9671
  br i1 %tobool9, label %if.end87, label %if.then10, !dbg !9672

if.then10:                                        ; preds = %for.body
  %14 = load i8, i8* %copy_to_id.addr, align 1, !dbg !9673
  %tobool11 = icmp ne i8 %14, 0, !dbg !9673
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !9676

if.then12:                                        ; preds = %if.then10
  %15 = load i32, i32* %a, align 4, !dbg !9677
  switch i32 %15, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb13
    i32 2, label %sw.bb17
    i32 4, label %sw.bb20
    i32 5, label %sw.bb24
    i32 6, label %sw.bb27
    i32 7, label %sw.bb30
    i32 8, label %sw.bb33
    i32 9, label %sw.bb36
    i32 10, label %sw.bb39
  ], !dbg !9679

sw.bb:                                            ; preds = %if.then12
  %16 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9680
  %r = getelementptr inbounds %struct.Material, %struct.Material* %16, i32 0, i32 4, !dbg !9682
  %17 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9683
  %default_value = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %17, i32 0, i32 15, !dbg !9684
  %18 = load i8*, i8** %default_value, align 8, !dbg !9684
  %19 = bitcast i8* %18 to %struct.bNodeSocketValueRGBA*, !dbg !9685
  %value = getelementptr inbounds %struct.bNodeSocketValueRGBA, %struct.bNodeSocketValueRGBA* %19, i32 0, i32 0, !dbg !9686
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %value, i64 0, i64 0, !dbg !9687
  call void @copy_v3_v3(float* %r, float* %arraydecay), !dbg !9688
  br label %sw.epilog, !dbg !9689

sw.bb13:                                          ; preds = %if.then12
  %20 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9690
  %specr = getelementptr inbounds %struct.Material, %struct.Material* %20, i32 0, i32 7, !dbg !9691
  %21 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9692
  %default_value14 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %21, i32 0, i32 15, !dbg !9693
  %22 = load i8*, i8** %default_value14, align 8, !dbg !9693
  %23 = bitcast i8* %22 to %struct.bNodeSocketValueRGBA*, !dbg !9694
  %value15 = getelementptr inbounds %struct.bNodeSocketValueRGBA, %struct.bNodeSocketValueRGBA* %23, i32 0, i32 0, !dbg !9695
  %arraydecay16 = getelementptr inbounds [4 x float], [4 x float]* %value15, i64 0, i64 0, !dbg !9696
  call void @copy_v3_v3(float* %specr, float* %arraydecay16), !dbg !9697
  br label %sw.epilog, !dbg !9698

sw.bb17:                                          ; preds = %if.then12
  %24 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9699
  %default_value18 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %24, i32 0, i32 15, !dbg !9700
  %25 = load i8*, i8** %default_value18, align 8, !dbg !9700
  %26 = bitcast i8* %25 to %struct.bNodeSocketValueFloat*, !dbg !9701
  %value19 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %26, i32 0, i32 1, !dbg !9702
  %27 = load float, float* %value19, align 4, !dbg !9702
  %28 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9703
  %ref = getelementptr inbounds %struct.Material, %struct.Material* %28, i32 0, i32 22, !dbg !9704
  store float %27, float* %ref, align 4, !dbg !9705
  br label %sw.epilog, !dbg !9706

sw.bb20:                                          ; preds = %if.then12
  %29 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9707
  %mirr = getelementptr inbounds %struct.Material, %struct.Material* %29, i32 0, i32 10, !dbg !9708
  %30 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9709
  %default_value21 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %30, i32 0, i32 15, !dbg !9710
  %31 = load i8*, i8** %default_value21, align 8, !dbg !9710
  %32 = bitcast i8* %31 to %struct.bNodeSocketValueRGBA*, !dbg !9711
  %value22 = getelementptr inbounds %struct.bNodeSocketValueRGBA, %struct.bNodeSocketValueRGBA* %32, i32 0, i32 0, !dbg !9712
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %value22, i64 0, i64 0, !dbg !9713
  call void @copy_v3_v3(float* %mirr, float* %arraydecay23), !dbg !9714
  br label %sw.epilog, !dbg !9715

sw.bb24:                                          ; preds = %if.then12
  %33 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9716
  %default_value25 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %33, i32 0, i32 15, !dbg !9717
  %34 = load i8*, i8** %default_value25, align 8, !dbg !9717
  %35 = bitcast i8* %34 to %struct.bNodeSocketValueFloat*, !dbg !9718
  %value26 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %35, i32 0, i32 1, !dbg !9719
  %36 = load float, float* %value26, align 4, !dbg !9719
  %37 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9720
  %amb = getelementptr inbounds %struct.Material, %struct.Material* %37, i32 0, i32 16, !dbg !9721
  store float %36, float* %amb, align 4, !dbg !9722
  br label %sw.epilog, !dbg !9723

sw.bb27:                                          ; preds = %if.then12
  %38 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9724
  %default_value28 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %38, i32 0, i32 15, !dbg !9725
  %39 = load i8*, i8** %default_value28, align 8, !dbg !9725
  %40 = bitcast i8* %39 to %struct.bNodeSocketValueFloat*, !dbg !9726
  %value29 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %40, i32 0, i32 1, !dbg !9727
  %41 = load float, float* %value29, align 4, !dbg !9727
  %42 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9728
  %emit = getelementptr inbounds %struct.Material, %struct.Material* %42, i32 0, i32 17, !dbg !9729
  store float %41, float* %emit, align 8, !dbg !9730
  br label %sw.epilog, !dbg !9731

sw.bb30:                                          ; preds = %if.then12
  %43 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9732
  %default_value31 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %43, i32 0, i32 15, !dbg !9733
  %44 = load i8*, i8** %default_value31, align 8, !dbg !9733
  %45 = bitcast i8* %44 to %struct.bNodeSocketValueFloat*, !dbg !9734
  %value32 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %45, i32 0, i32 1, !dbg !9735
  %46 = load float, float* %value32, align 4, !dbg !9735
  %47 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9736
  %spectra = getelementptr inbounds %struct.Material, %struct.Material* %47, i32 0, i32 19, !dbg !9737
  store float %46, float* %spectra, align 8, !dbg !9738
  br label %sw.epilog, !dbg !9739

sw.bb33:                                          ; preds = %if.then12
  %48 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9740
  %default_value34 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %48, i32 0, i32 15, !dbg !9741
  %49 = load i8*, i8** %default_value34, align 8, !dbg !9741
  %50 = bitcast i8* %49 to %struct.bNodeSocketValueFloat*, !dbg !9742
  %value35 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %50, i32 0, i32 1, !dbg !9743
  %51 = load float, float* %value35, align 4, !dbg !9743
  %52 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9744
  %ray_mirror = getelementptr inbounds %struct.Material, %struct.Material* %52, i32 0, i32 20, !dbg !9745
  store float %51, float* %ray_mirror, align 4, !dbg !9746
  br label %sw.epilog, !dbg !9747

sw.bb36:                                          ; preds = %if.then12
  %53 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9748
  %default_value37 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %53, i32 0, i32 15, !dbg !9749
  %54 = load i8*, i8** %default_value37, align 8, !dbg !9749
  %55 = bitcast i8* %54 to %struct.bNodeSocketValueFloat*, !dbg !9750
  %value38 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %55, i32 0, i32 1, !dbg !9751
  %56 = load float, float* %value38, align 4, !dbg !9751
  %57 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9752
  %alpha = getelementptr inbounds %struct.Material, %struct.Material* %57, i32 0, i32 21, !dbg !9753
  store float %56, float* %alpha, align 8, !dbg !9754
  br label %sw.epilog, !dbg !9755

sw.bb39:                                          ; preds = %if.then12
  %58 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9756
  %default_value40 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %58, i32 0, i32 15, !dbg !9757
  %59 = load i8*, i8** %default_value40, align 8, !dbg !9757
  %60 = bitcast i8* %59 to %struct.bNodeSocketValueFloat*, !dbg !9758
  %value41 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %60, i32 0, i32 1, !dbg !9759
  %61 = load float, float* %value41, align 4, !dbg !9759
  %62 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9760
  %translucency = getelementptr inbounds %struct.Material, %struct.Material* %62, i32 0, i32 26, !dbg !9761
  store float %61, float* %translucency, align 4, !dbg !9762
  br label %sw.epilog, !dbg !9763

sw.epilog:                                        ; preds = %if.then12, %sw.bb39, %sw.bb36, %sw.bb33, %sw.bb30, %sw.bb27, %sw.bb24, %sw.bb20, %sw.bb17, %sw.bb13, %sw.bb
  br label %if.end86, !dbg !9764

if.else:                                          ; preds = %if.then10
  %63 = load i32, i32* %a, align 4, !dbg !9765
  switch i32 %63, label %sw.epilog85 [
    i32 0, label %sw.bb42
    i32 1, label %sw.bb47
    i32 2, label %sw.bb52
    i32 4, label %sw.bb56
    i32 5, label %sw.bb61
    i32 6, label %sw.bb65
    i32 7, label %sw.bb69
    i32 8, label %sw.bb73
    i32 9, label %sw.bb77
    i32 10, label %sw.bb81
  ], !dbg !9767

sw.bb42:                                          ; preds = %if.else
  %64 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9768
  %default_value43 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %64, i32 0, i32 15, !dbg !9770
  %65 = load i8*, i8** %default_value43, align 8, !dbg !9770
  %66 = bitcast i8* %65 to %struct.bNodeSocketValueRGBA*, !dbg !9771
  %value44 = getelementptr inbounds %struct.bNodeSocketValueRGBA, %struct.bNodeSocketValueRGBA* %66, i32 0, i32 0, !dbg !9772
  %arraydecay45 = getelementptr inbounds [4 x float], [4 x float]* %value44, i64 0, i64 0, !dbg !9773
  %67 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9774
  %r46 = getelementptr inbounds %struct.Material, %struct.Material* %67, i32 0, i32 4, !dbg !9775
  call void @copy_v3_v3(float* %arraydecay45, float* %r46), !dbg !9776
  br label %sw.epilog85, !dbg !9777

sw.bb47:                                          ; preds = %if.else
  %68 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9778
  %default_value48 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %68, i32 0, i32 15, !dbg !9779
  %69 = load i8*, i8** %default_value48, align 8, !dbg !9779
  %70 = bitcast i8* %69 to %struct.bNodeSocketValueRGBA*, !dbg !9780
  %value49 = getelementptr inbounds %struct.bNodeSocketValueRGBA, %struct.bNodeSocketValueRGBA* %70, i32 0, i32 0, !dbg !9781
  %arraydecay50 = getelementptr inbounds [4 x float], [4 x float]* %value49, i64 0, i64 0, !dbg !9782
  %71 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9783
  %specr51 = getelementptr inbounds %struct.Material, %struct.Material* %71, i32 0, i32 7, !dbg !9784
  call void @copy_v3_v3(float* %arraydecay50, float* %specr51), !dbg !9785
  br label %sw.epilog85, !dbg !9786

sw.bb52:                                          ; preds = %if.else
  %72 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9787
  %ref53 = getelementptr inbounds %struct.Material, %struct.Material* %72, i32 0, i32 22, !dbg !9788
  %73 = load float, float* %ref53, align 4, !dbg !9788
  %74 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9789
  %default_value54 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %74, i32 0, i32 15, !dbg !9790
  %75 = load i8*, i8** %default_value54, align 8, !dbg !9790
  %76 = bitcast i8* %75 to %struct.bNodeSocketValueFloat*, !dbg !9791
  %value55 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %76, i32 0, i32 1, !dbg !9792
  store float %73, float* %value55, align 4, !dbg !9793
  br label %sw.epilog85, !dbg !9794

sw.bb56:                                          ; preds = %if.else
  %77 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9795
  %default_value57 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %77, i32 0, i32 15, !dbg !9796
  %78 = load i8*, i8** %default_value57, align 8, !dbg !9796
  %79 = bitcast i8* %78 to %struct.bNodeSocketValueRGBA*, !dbg !9797
  %value58 = getelementptr inbounds %struct.bNodeSocketValueRGBA, %struct.bNodeSocketValueRGBA* %79, i32 0, i32 0, !dbg !9798
  %arraydecay59 = getelementptr inbounds [4 x float], [4 x float]* %value58, i64 0, i64 0, !dbg !9799
  %80 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9800
  %mirr60 = getelementptr inbounds %struct.Material, %struct.Material* %80, i32 0, i32 10, !dbg !9801
  call void @copy_v3_v3(float* %arraydecay59, float* %mirr60), !dbg !9802
  br label %sw.epilog85, !dbg !9803

sw.bb61:                                          ; preds = %if.else
  %81 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9804
  %amb62 = getelementptr inbounds %struct.Material, %struct.Material* %81, i32 0, i32 16, !dbg !9805
  %82 = load float, float* %amb62, align 4, !dbg !9805
  %83 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9806
  %default_value63 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %83, i32 0, i32 15, !dbg !9807
  %84 = load i8*, i8** %default_value63, align 8, !dbg !9807
  %85 = bitcast i8* %84 to %struct.bNodeSocketValueFloat*, !dbg !9808
  %value64 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %85, i32 0, i32 1, !dbg !9809
  store float %82, float* %value64, align 4, !dbg !9810
  br label %sw.epilog85, !dbg !9811

sw.bb65:                                          ; preds = %if.else
  %86 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9812
  %emit66 = getelementptr inbounds %struct.Material, %struct.Material* %86, i32 0, i32 17, !dbg !9813
  %87 = load float, float* %emit66, align 8, !dbg !9813
  %88 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9814
  %default_value67 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %88, i32 0, i32 15, !dbg !9815
  %89 = load i8*, i8** %default_value67, align 8, !dbg !9815
  %90 = bitcast i8* %89 to %struct.bNodeSocketValueFloat*, !dbg !9816
  %value68 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %90, i32 0, i32 1, !dbg !9817
  store float %87, float* %value68, align 4, !dbg !9818
  br label %sw.epilog85, !dbg !9819

sw.bb69:                                          ; preds = %if.else
  %91 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9820
  %spectra70 = getelementptr inbounds %struct.Material, %struct.Material* %91, i32 0, i32 19, !dbg !9821
  %92 = load float, float* %spectra70, align 8, !dbg !9821
  %93 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9822
  %default_value71 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %93, i32 0, i32 15, !dbg !9823
  %94 = load i8*, i8** %default_value71, align 8, !dbg !9823
  %95 = bitcast i8* %94 to %struct.bNodeSocketValueFloat*, !dbg !9824
  %value72 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %95, i32 0, i32 1, !dbg !9825
  store float %92, float* %value72, align 4, !dbg !9826
  br label %sw.epilog85, !dbg !9827

sw.bb73:                                          ; preds = %if.else
  %96 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9828
  %ray_mirror74 = getelementptr inbounds %struct.Material, %struct.Material* %96, i32 0, i32 20, !dbg !9829
  %97 = load float, float* %ray_mirror74, align 4, !dbg !9829
  %98 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9830
  %default_value75 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %98, i32 0, i32 15, !dbg !9831
  %99 = load i8*, i8** %default_value75, align 8, !dbg !9831
  %100 = bitcast i8* %99 to %struct.bNodeSocketValueFloat*, !dbg !9832
  %value76 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %100, i32 0, i32 1, !dbg !9833
  store float %97, float* %value76, align 4, !dbg !9834
  br label %sw.epilog85, !dbg !9835

sw.bb77:                                          ; preds = %if.else
  %101 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9836
  %alpha78 = getelementptr inbounds %struct.Material, %struct.Material* %101, i32 0, i32 21, !dbg !9837
  %102 = load float, float* %alpha78, align 8, !dbg !9837
  %103 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9838
  %default_value79 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %103, i32 0, i32 15, !dbg !9839
  %104 = load i8*, i8** %default_value79, align 8, !dbg !9839
  %105 = bitcast i8* %104 to %struct.bNodeSocketValueFloat*, !dbg !9840
  %value80 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %105, i32 0, i32 1, !dbg !9841
  store float %102, float* %value80, align 4, !dbg !9842
  br label %sw.epilog85, !dbg !9843

sw.bb81:                                          ; preds = %if.else
  %106 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9844
  %translucency82 = getelementptr inbounds %struct.Material, %struct.Material* %106, i32 0, i32 26, !dbg !9845
  %107 = load float, float* %translucency82, align 4, !dbg !9845
  %108 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9846
  %default_value83 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %108, i32 0, i32 15, !dbg !9847
  %109 = load i8*, i8** %default_value83, align 8, !dbg !9847
  %110 = bitcast i8* %109 to %struct.bNodeSocketValueFloat*, !dbg !9848
  %value84 = getelementptr inbounds %struct.bNodeSocketValueFloat, %struct.bNodeSocketValueFloat* %110, i32 0, i32 1, !dbg !9849
  store float %107, float* %value84, align 4, !dbg !9850
  br label %sw.epilog85, !dbg !9851

sw.epilog85:                                      ; preds = %if.else, %sw.bb81, %sw.bb77, %sw.bb73, %sw.bb69, %sw.bb65, %sw.bb61, %sw.bb56, %sw.bb52, %sw.bb47, %sw.bb42
  br label %if.end86

if.end86:                                         ; preds = %sw.epilog85, %sw.epilog
  br label %if.end87, !dbg !9852

if.end87:                                         ; preds = %if.end86, %for.body
  br label %for.inc, !dbg !9853

for.inc:                                          ; preds = %if.end87
  %111 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !9854
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %111, i32 0, i32 0, !dbg !9855
  %112 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !9855
  store %struct.bNodeSocket* %112, %struct.bNodeSocket** %sock, align 8, !dbg !9856
  %113 = load i32, i32* %a, align 4, !dbg !9857
  %inc = add nsw i32 %113, 1, !dbg !9857
  store i32 %inc, i32* %a, align 4, !dbg !9857
  br label %for.cond, !dbg !9858, !llvm.loop !9859

for.end:                                          ; preds = %for.cond
  br label %if.end88, !dbg !9861

if.end88:                                         ; preds = %if.then, %for.end, %lor.lhs.false
  ret void, !dbg !9862
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !9863 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9867, metadata !DIExpression()), !dbg !9868
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9869, metadata !DIExpression()), !dbg !9870
  %0 = load float*, float** %a.addr, align 8, !dbg !9871
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9871
  %1 = load float, float* %arrayidx, align 4, !dbg !9871
  %2 = load float*, float** %r.addr, align 8, !dbg !9872
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9872
  store float %1, float* %arrayidx1, align 4, !dbg !9873
  %3 = load float*, float** %a.addr, align 8, !dbg !9874
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !9874
  %4 = load float, float* %arrayidx2, align 4, !dbg !9874
  %5 = load float*, float** %r.addr, align 8, !dbg !9875
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9875
  store float %4, float* %arrayidx3, align 4, !dbg !9876
  %6 = load float*, float** %a.addr, align 8, !dbg !9877
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !9877
  %7 = load float, float* %arrayidx4, align 4, !dbg !9877
  %8 = load float*, float** %r.addr, align 8, !dbg !9878
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9878
  store float %7, float* %arrayidx5, align 4, !dbg !9879
  ret void, !dbg !9880
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nodeLabel(%struct.bNodeTree* %ntree, %struct.bNode* %node, i8* %label, i32 %maxlen) #0 !dbg !9881 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %label.addr = alloca i8*, align 8
  %maxlen.addr = alloca i32, align 4
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !9884, metadata !DIExpression()), !dbg !9885
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !9886, metadata !DIExpression()), !dbg !9887
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !9888, metadata !DIExpression()), !dbg !9889
  store i32 %maxlen, i32* %maxlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxlen.addr, metadata !9890, metadata !DIExpression()), !dbg !9891
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9892
  %label1 = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 32, !dbg !9894
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %label1, i64 0, i64 0, !dbg !9892
  %1 = load i8, i8* %arrayidx, align 8, !dbg !9892
  %conv = zext i8 %1 to i32, !dbg !9892
  %cmp = icmp ne i32 %conv, 0, !dbg !9895
  br i1 %cmp, label %if.then, label %if.else, !dbg !9896

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %label.addr, align 8, !dbg !9897
  %3 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9898
  %label3 = getelementptr inbounds %struct.bNode, %struct.bNode* %3, i32 0, i32 32, !dbg !9899
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %label3, i64 0, i64 0, !dbg !9898
  %4 = load i32, i32* %maxlen.addr, align 4, !dbg !9900
  %conv4 = sext i32 %4 to i64, !dbg !9900
  %call = call i8* @BLI_strncpy(i8* %2, i8* %arraydecay, i64 %conv4), !dbg !9901
  br label %if.end13, !dbg !9901

if.else:                                          ; preds = %entry
  %5 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9902
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %5, i32 0, i32 4, !dbg !9904
  %6 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !9904
  %labelfunc = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %6, i32 0, i32 25, !dbg !9905
  %7 = load void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)** %labelfunc, align 8, !dbg !9905
  %tobool = icmp ne void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)* %7, null, !dbg !9902
  br i1 %tobool, label %if.then5, label %if.else8, !dbg !9906

if.then5:                                         ; preds = %if.else
  %8 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9907
  %typeinfo6 = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 4, !dbg !9908
  %9 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo6, align 8, !dbg !9908
  %labelfunc7 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %9, i32 0, i32 25, !dbg !9909
  %10 = load void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)** %labelfunc7, align 8, !dbg !9909
  %11 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !9910
  %12 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9911
  %13 = load i8*, i8** %label.addr, align 8, !dbg !9912
  %14 = load i32, i32* %maxlen.addr, align 4, !dbg !9913
  call void %10(%struct.bNodeTree* %11, %struct.bNode* %12, i8* %13, i32 %14), !dbg !9907
  br label %if.end, !dbg !9907

if.else8:                                         ; preds = %if.else
  %15 = load i8*, i8** %label.addr, align 8, !dbg !9914
  %16 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !9915
  %typeinfo9 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 4, !dbg !9915
  %17 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo9, align 8, !dbg !9915
  %ui_name = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %17, i32 0, i32 5, !dbg !9915
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %ui_name, i64 0, i64 0, !dbg !9915
  %18 = load i32, i32* %maxlen.addr, align 4, !dbg !9916
  %conv11 = sext i32 %18 to i64, !dbg !9916
  %call12 = call i8* @BLI_strncpy(i8* %15, i8* %arraydecay10, i64 %conv11), !dbg !9917
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then5
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  ret void, !dbg !9918
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_base(%struct.bNodeType* %ntype, i32 %type, i8* %name, i16 signext %nclass, i16 signext %flag) #0 !dbg !9919 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %type.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %nclass.addr = alloca i16, align 2
  %flag.addr = alloca i16, align 2
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !9922, metadata !DIExpression()), !dbg !9923
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9924, metadata !DIExpression()), !dbg !9925
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9926, metadata !DIExpression()), !dbg !9927
  store i16 %nclass, i16* %nclass.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %nclass.addr, metadata !9928, metadata !DIExpression()), !dbg !9929
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !9930, metadata !DIExpression()), !dbg !9931
  %0 = load i32, i32* %type.addr, align 4, !dbg !9932
  switch i32 %0, label %sw.epilog [
    i32 5, label %sw.bb
    i32 2, label %sw.bb4
    i32 7, label %sw.bb13
    i32 8, label %sw.bb22
    i32 6, label %sw.bb31
    i32 1, label %sw.bb40
    i32 100, label %sw.bb49
    i32 101, label %sw.bb58
    i32 102, label %sw.bb67
    i32 103, label %sw.bb76
    i32 104, label %sw.bb85
    i32 105, label %sw.bb94
    i32 106, label %sw.bb103
    i32 107, label %sw.bb112
    i32 163, label %sw.bb121
    i32 165, label %sw.bb130
    i32 108, label %sw.bb139
    i32 109, label %sw.bb148
    i32 110, label %sw.bb157
    i32 111, label %sw.bb166
    i32 114, label %sw.bb175
    i32 186, label %sw.bb184
    i32 115, label %sw.bb193
    i32 116, label %sw.bb202
    i32 117, label %sw.bb211
    i32 118, label %sw.bb220
    i32 119, label %sw.bb229
    i32 120, label %sw.bb238
    i32 121, label %sw.bb247
    i32 122, label %sw.bb256
    i32 124, label %sw.bb265
    i32 126, label %sw.bb274
    i32 125, label %sw.bb283
    i32 190, label %sw.bb292
    i32 127, label %sw.bb301
    i32 160, label %sw.bb310
    i32 128, label %sw.bb319
    i32 156, label %sw.bb328
    i32 129, label %sw.bb337
    i32 172, label %sw.bb346
    i32 130, label %sw.bb355
    i32 159, label %sw.bb364
    i32 131, label %sw.bb373
    i32 132, label %sw.bb382
    i32 133, label %sw.bb391
    i32 134, label %sw.bb400
    i32 173, label %sw.bb409
    i32 137, label %sw.bb418
    i32 138, label %sw.bb427
    i32 139, label %sw.bb436
    i32 179, label %sw.bb445
    i32 185, label %sw.bb454
    i32 177, label %sw.bb463
    i32 161, label %sw.bb472
    i32 162, label %sw.bb481
    i32 140, label %sw.bb490
    i32 141, label %sw.bb499
    i32 142, label %sw.bb508
    i32 166, label %sw.bb517
    i32 167, label %sw.bb526
    i32 168, label %sw.bb535
    i32 176, label %sw.bb544
    i32 178, label %sw.bb553
    i32 180, label %sw.bb562
    i32 181, label %sw.bb571
    i32 170, label %sw.bb580
    i32 175, label %sw.bb589
    i32 174, label %sw.bb598
    i32 171, label %sw.bb607
    i32 143, label %sw.bb616
    i32 157, label %sw.bb625
    i32 145, label %sw.bb634
    i32 146, label %sw.bb643
    i32 150, label %sw.bb652
    i32 148, label %sw.bb661
    i32 149, label %sw.bb670
    i32 152, label %sw.bb679
    i32 147, label %sw.bb688
    i32 164, label %sw.bb697
    i32 169, label %sw.bb706
    i32 155, label %sw.bb715
    i32 182, label %sw.bb724
    i32 183, label %sw.bb733
    i32 184, label %sw.bb742
    i32 187, label %sw.bb751
    i32 191, label %sw.bb760
    i32 188, label %sw.bb769
    i32 189, label %sw.bb778
    i32 201, label %sw.bb787
    i32 202, label %sw.bb796
    i32 203, label %sw.bb805
    i32 204, label %sw.bb814
    i32 205, label %sw.bb823
    i32 206, label %sw.bb832
    i32 207, label %sw.bb841
    i32 208, label %sw.bb850
    i32 209, label %sw.bb859
    i32 210, label %sw.bb868
    i32 211, label %sw.bb877
    i32 212, label %sw.bb886
    i32 213, label %sw.bb895
    i32 319, label %sw.bb904
    i32 214, label %sw.bb913
    i32 215, label %sw.bb922
    i32 216, label %sw.bb931
    i32 217, label %sw.bb940
    i32 218, label %sw.bb949
    i32 219, label %sw.bb958
    i32 220, label %sw.bb967
    i32 221, label %sw.bb976
    i32 222, label %sw.bb985
    i32 223, label %sw.bb994
    i32 224, label %sw.bb1003
    i32 225, label %sw.bb1012
    i32 226, label %sw.bb1021
    i32 227, label %sw.bb1030
    i32 228, label %sw.bb1039
    i32 272, label %sw.bb1048
    i32 273, label %sw.bb1057
    i32 229, label %sw.bb1066
    i32 230, label %sw.bb1075
    i32 231, label %sw.bb1084
    i32 232, label %sw.bb1093
    i32 233, label %sw.bb1102
    i32 234, label %sw.bb1111
    i32 235, label %sw.bb1120
    i32 236, label %sw.bb1129
    i32 237, label %sw.bb1138
    i32 238, label %sw.bb1147
    i32 239, label %sw.bb1156
    i32 240, label %sw.bb1165
    i32 242, label %sw.bb1174
    i32 243, label %sw.bb1183
    i32 266, label %sw.bb1192
    i32 244, label %sw.bb1201
    i32 245, label %sw.bb1210
    i32 246, label %sw.bb1219
    i32 247, label %sw.bb1228
    i32 248, label %sw.bb1237
    i32 249, label %sw.bb1246
    i32 250, label %sw.bb1255
    i32 251, label %sw.bb1264
    i32 252, label %sw.bb1273
    i32 253, label %sw.bb1282
    i32 254, label %sw.bb1291
    i32 255, label %sw.bb1300
    i32 256, label %sw.bb1309
    i32 301, label %sw.bb1318
    i32 302, label %sw.bb1327
    i32 303, label %sw.bb1336
    i32 258, label %sw.bb1345
    i32 259, label %sw.bb1354
    i32 257, label %sw.bb1363
    i32 260, label %sw.bb1372
    i32 261, label %sw.bb1381
    i32 262, label %sw.bb1390
    i32 264, label %sw.bb1399
    i32 263, label %sw.bb1408
    i32 265, label %sw.bb1417
    i32 313, label %sw.bb1426
    i32 314, label %sw.bb1435
    i32 315, label %sw.bb1444
    i32 316, label %sw.bb1453
    i32 317, label %sw.bb1462
    i32 312, label %sw.bb1471
    i32 268, label %sw.bb1480
    i32 269, label %sw.bb1489
    i32 270, label %sw.bb1498
    i32 271, label %sw.bb1507
    i32 318, label %sw.bb1516
    i32 320, label %sw.bb1525
    i32 321, label %sw.bb1534
    i32 304, label %sw.bb1543
    i32 401, label %sw.bb1552
    i32 402, label %sw.bb1561
    i32 403, label %sw.bb1570
    i32 404, label %sw.bb1579
    i32 405, label %sw.bb1588
    i32 406, label %sw.bb1597
    i32 407, label %sw.bb1606
    i32 408, label %sw.bb1615
    i32 409, label %sw.bb1624
    i32 410, label %sw.bb1633
    i32 411, label %sw.bb1642
    i32 412, label %sw.bb1651
    i32 413, label %sw.bb1660
    i32 414, label %sw.bb1669
    i32 415, label %sw.bb1678
    i32 416, label %sw.bb1687
    i32 417, label %sw.bb1696
    i32 418, label %sw.bb1705
    i32 419, label %sw.bb1714
    i32 420, label %sw.bb1723
    i32 421, label %sw.bb1732
    i32 422, label %sw.bb1741
    i32 423, label %sw.bb1750
    i32 512, label %sw.bb1759
    i32 505, label %sw.bb1768
    i32 504, label %sw.bb1777
    i32 503, label %sw.bb1786
    i32 501, label %sw.bb1795
    i32 502, label %sw.bb1804
    i32 511, label %sw.bb1813
    i32 507, label %sw.bb1822
    i32 506, label %sw.bb1831
    i32 513, label %sw.bb1840
  ], !dbg !9933

sw.bb:                                            ; preds = %entry
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9934
  %idname = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 3, !dbg !9934
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !9934
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0), i64 64), !dbg !9934
  %call1 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0)), !dbg !9934
  %2 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9934
  %ext = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %2, i32 0, i32 44, !dbg !9934
  %srna = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext, i32 0, i32 1, !dbg !9934
  store %struct.StructRNA* %call1, %struct.StructRNA** %srna, align 8, !dbg !9934
  %3 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9934
  %ext2 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %3, i32 0, i32 44, !dbg !9934
  %srna3 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext2, i32 0, i32 1, !dbg !9934
  %4 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !9934
  %5 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9934
  %6 = bitcast %struct.bNodeType* %5 to i8*, !dbg !9934
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %4, i8* %6), !dbg !9934
  br label %sw.epilog, !dbg !9934

sw.bb4:                                           ; preds = %entry
  %7 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9938
  %idname5 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %7, i32 0, i32 3, !dbg !9938
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %idname5, i64 0, i64 0, !dbg !9938
  %call7 = call i8* @BLI_strncpy(i8* %arraydecay6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i64 0, i64 0), i64 64), !dbg !9938
  %call8 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i64 0, i64 0)), !dbg !9938
  %8 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9938
  %ext9 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %8, i32 0, i32 44, !dbg !9938
  %srna10 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext9, i32 0, i32 1, !dbg !9938
  store %struct.StructRNA* %call8, %struct.StructRNA** %srna10, align 8, !dbg !9938
  %9 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9938
  %ext11 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %9, i32 0, i32 44, !dbg !9938
  %srna12 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext11, i32 0, i32 1, !dbg !9938
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna12, align 8, !dbg !9938
  %11 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9938
  %12 = bitcast %struct.bNodeType* %11 to i8*, !dbg !9938
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %10, i8* %12), !dbg !9938
  br label %sw.epilog, !dbg !9938

sw.bb13:                                          ; preds = %entry
  %13 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9939
  %idname14 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %13, i32 0, i32 3, !dbg !9939
  %arraydecay15 = getelementptr inbounds [64 x i8], [64 x i8]* %idname14, i64 0, i64 0, !dbg !9939
  %call16 = call i8* @BLI_strncpy(i8* %arraydecay15, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i64 0, i64 0), i64 64), !dbg !9939
  %call17 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i64 0, i64 0)), !dbg !9939
  %14 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9939
  %ext18 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %14, i32 0, i32 44, !dbg !9939
  %srna19 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext18, i32 0, i32 1, !dbg !9939
  store %struct.StructRNA* %call17, %struct.StructRNA** %srna19, align 8, !dbg !9939
  %15 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9939
  %ext20 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %15, i32 0, i32 44, !dbg !9939
  %srna21 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext20, i32 0, i32 1, !dbg !9939
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna21, align 8, !dbg !9939
  %17 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9939
  %18 = bitcast %struct.bNodeType* %17 to i8*, !dbg !9939
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %16, i8* %18), !dbg !9939
  br label %sw.epilog, !dbg !9939

sw.bb22:                                          ; preds = %entry
  %19 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9940
  %idname23 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %19, i32 0, i32 3, !dbg !9940
  %arraydecay24 = getelementptr inbounds [64 x i8], [64 x i8]* %idname23, i64 0, i64 0, !dbg !9940
  %call25 = call i8* @BLI_strncpy(i8* %arraydecay24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i64 0, i64 0), i64 64), !dbg !9940
  %call26 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i64 0, i64 0)), !dbg !9940
  %20 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9940
  %ext27 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %20, i32 0, i32 44, !dbg !9940
  %srna28 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext27, i32 0, i32 1, !dbg !9940
  store %struct.StructRNA* %call26, %struct.StructRNA** %srna28, align 8, !dbg !9940
  %21 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9940
  %ext29 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %21, i32 0, i32 44, !dbg !9940
  %srna30 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext29, i32 0, i32 1, !dbg !9940
  %22 = load %struct.StructRNA*, %struct.StructRNA** %srna30, align 8, !dbg !9940
  %23 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9940
  %24 = bitcast %struct.bNodeType* %23 to i8*, !dbg !9940
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %22, i8* %24), !dbg !9940
  br label %sw.epilog, !dbg !9940

sw.bb31:                                          ; preds = %entry
  %25 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9941
  %idname32 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %25, i32 0, i32 3, !dbg !9941
  %arraydecay33 = getelementptr inbounds [64 x i8], [64 x i8]* %idname32, i64 0, i64 0, !dbg !9941
  %call34 = call i8* @BLI_strncpy(i8* %arraydecay33, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0), i64 64), !dbg !9941
  %call35 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.60, i64 0, i64 0)), !dbg !9941
  %26 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9941
  %ext36 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %26, i32 0, i32 44, !dbg !9941
  %srna37 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext36, i32 0, i32 1, !dbg !9941
  store %struct.StructRNA* %call35, %struct.StructRNA** %srna37, align 8, !dbg !9941
  %27 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9941
  %ext38 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %27, i32 0, i32 44, !dbg !9941
  %srna39 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext38, i32 0, i32 1, !dbg !9941
  %28 = load %struct.StructRNA*, %struct.StructRNA** %srna39, align 8, !dbg !9941
  %29 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9941
  %30 = bitcast %struct.bNodeType* %29 to i8*, !dbg !9941
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %28, i8* %30), !dbg !9941
  br label %sw.epilog, !dbg !9941

sw.bb40:                                          ; preds = %entry
  %31 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9942
  %idname41 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %31, i32 0, i32 3, !dbg !9942
  %arraydecay42 = getelementptr inbounds [64 x i8], [64 x i8]* %idname41, i64 0, i64 0, !dbg !9942
  %call43 = call i8* @BLI_strncpy(i8* %arraydecay42, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61, i64 0, i64 0), i64 64), !dbg !9942
  %call44 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61, i64 0, i64 0)), !dbg !9942
  %32 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9942
  %ext45 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %32, i32 0, i32 44, !dbg !9942
  %srna46 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext45, i32 0, i32 1, !dbg !9942
  store %struct.StructRNA* %call44, %struct.StructRNA** %srna46, align 8, !dbg !9942
  %33 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9942
  %ext47 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %33, i32 0, i32 44, !dbg !9942
  %srna48 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext47, i32 0, i32 1, !dbg !9942
  %34 = load %struct.StructRNA*, %struct.StructRNA** %srna48, align 8, !dbg !9942
  %35 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9942
  %36 = bitcast %struct.bNodeType* %35 to i8*, !dbg !9942
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %34, i8* %36), !dbg !9942
  br label %sw.epilog, !dbg !9942

sw.bb49:                                          ; preds = %entry
  %37 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9943
  %idname50 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %37, i32 0, i32 3, !dbg !9943
  %arraydecay51 = getelementptr inbounds [64 x i8], [64 x i8]* %idname50, i64 0, i64 0, !dbg !9943
  %call52 = call i8* @BLI_strncpy(i8* %arraydecay51, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0), i64 64), !dbg !9943
  %call53 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0)), !dbg !9943
  %38 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9943
  %ext54 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %38, i32 0, i32 44, !dbg !9943
  %srna55 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext54, i32 0, i32 1, !dbg !9943
  store %struct.StructRNA* %call53, %struct.StructRNA** %srna55, align 8, !dbg !9943
  %39 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9943
  %ext56 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %39, i32 0, i32 44, !dbg !9943
  %srna57 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext56, i32 0, i32 1, !dbg !9943
  %40 = load %struct.StructRNA*, %struct.StructRNA** %srna57, align 8, !dbg !9943
  %41 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9943
  %42 = bitcast %struct.bNodeType* %41 to i8*, !dbg !9943
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %40, i8* %42), !dbg !9943
  br label %sw.epilog, !dbg !9943

sw.bb58:                                          ; preds = %entry
  %43 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9944
  %idname59 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %43, i32 0, i32 3, !dbg !9944
  %arraydecay60 = getelementptr inbounds [64 x i8], [64 x i8]* %idname59, i64 0, i64 0, !dbg !9944
  %call61 = call i8* @BLI_strncpy(i8* %arraydecay60, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i64 0, i64 0), i64 64), !dbg !9944
  %call62 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i64 0, i64 0)), !dbg !9944
  %44 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9944
  %ext63 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %44, i32 0, i32 44, !dbg !9944
  %srna64 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext63, i32 0, i32 1, !dbg !9944
  store %struct.StructRNA* %call62, %struct.StructRNA** %srna64, align 8, !dbg !9944
  %45 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9944
  %ext65 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %45, i32 0, i32 44, !dbg !9944
  %srna66 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext65, i32 0, i32 1, !dbg !9944
  %46 = load %struct.StructRNA*, %struct.StructRNA** %srna66, align 8, !dbg !9944
  %47 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9944
  %48 = bitcast %struct.bNodeType* %47 to i8*, !dbg !9944
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %46, i8* %48), !dbg !9944
  br label %sw.epilog, !dbg !9944

sw.bb67:                                          ; preds = %entry
  %49 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9945
  %idname68 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %49, i32 0, i32 3, !dbg !9945
  %arraydecay69 = getelementptr inbounds [64 x i8], [64 x i8]* %idname68, i64 0, i64 0, !dbg !9945
  %call70 = call i8* @BLI_strncpy(i8* %arraydecay69, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.64, i64 0, i64 0), i64 64), !dbg !9945
  %call71 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.64, i64 0, i64 0)), !dbg !9945
  %50 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9945
  %ext72 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %50, i32 0, i32 44, !dbg !9945
  %srna73 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext72, i32 0, i32 1, !dbg !9945
  store %struct.StructRNA* %call71, %struct.StructRNA** %srna73, align 8, !dbg !9945
  %51 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9945
  %ext74 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %51, i32 0, i32 44, !dbg !9945
  %srna75 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext74, i32 0, i32 1, !dbg !9945
  %52 = load %struct.StructRNA*, %struct.StructRNA** %srna75, align 8, !dbg !9945
  %53 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9945
  %54 = bitcast %struct.bNodeType* %53 to i8*, !dbg !9945
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %52, i8* %54), !dbg !9945
  br label %sw.epilog, !dbg !9945

sw.bb76:                                          ; preds = %entry
  %55 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9946
  %idname77 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %55, i32 0, i32 3, !dbg !9946
  %arraydecay78 = getelementptr inbounds [64 x i8], [64 x i8]* %idname77, i64 0, i64 0, !dbg !9946
  %call79 = call i8* @BLI_strncpy(i8* %arraydecay78, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.65, i64 0, i64 0), i64 64), !dbg !9946
  %call80 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.65, i64 0, i64 0)), !dbg !9946
  %56 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9946
  %ext81 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %56, i32 0, i32 44, !dbg !9946
  %srna82 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext81, i32 0, i32 1, !dbg !9946
  store %struct.StructRNA* %call80, %struct.StructRNA** %srna82, align 8, !dbg !9946
  %57 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9946
  %ext83 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %57, i32 0, i32 44, !dbg !9946
  %srna84 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext83, i32 0, i32 1, !dbg !9946
  %58 = load %struct.StructRNA*, %struct.StructRNA** %srna84, align 8, !dbg !9946
  %59 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9946
  %60 = bitcast %struct.bNodeType* %59 to i8*, !dbg !9946
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %58, i8* %60), !dbg !9946
  br label %sw.epilog, !dbg !9946

sw.bb85:                                          ; preds = %entry
  %61 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9947
  %idname86 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %61, i32 0, i32 3, !dbg !9947
  %arraydecay87 = getelementptr inbounds [64 x i8], [64 x i8]* %idname86, i64 0, i64 0, !dbg !9947
  %call88 = call i8* @BLI_strncpy(i8* %arraydecay87, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.66, i64 0, i64 0), i64 64), !dbg !9947
  %call89 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.66, i64 0, i64 0)), !dbg !9947
  %62 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9947
  %ext90 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %62, i32 0, i32 44, !dbg !9947
  %srna91 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext90, i32 0, i32 1, !dbg !9947
  store %struct.StructRNA* %call89, %struct.StructRNA** %srna91, align 8, !dbg !9947
  %63 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9947
  %ext92 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %63, i32 0, i32 44, !dbg !9947
  %srna93 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext92, i32 0, i32 1, !dbg !9947
  %64 = load %struct.StructRNA*, %struct.StructRNA** %srna93, align 8, !dbg !9947
  %65 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9947
  %66 = bitcast %struct.bNodeType* %65 to i8*, !dbg !9947
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %64, i8* %66), !dbg !9947
  br label %sw.epilog, !dbg !9947

sw.bb94:                                          ; preds = %entry
  %67 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9948
  %idname95 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %67, i32 0, i32 3, !dbg !9948
  %arraydecay96 = getelementptr inbounds [64 x i8], [64 x i8]* %idname95, i64 0, i64 0, !dbg !9948
  %call97 = call i8* @BLI_strncpy(i8* %arraydecay96, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.67, i64 0, i64 0), i64 64), !dbg !9948
  %call98 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.67, i64 0, i64 0)), !dbg !9948
  %68 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9948
  %ext99 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %68, i32 0, i32 44, !dbg !9948
  %srna100 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext99, i32 0, i32 1, !dbg !9948
  store %struct.StructRNA* %call98, %struct.StructRNA** %srna100, align 8, !dbg !9948
  %69 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9948
  %ext101 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %69, i32 0, i32 44, !dbg !9948
  %srna102 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext101, i32 0, i32 1, !dbg !9948
  %70 = load %struct.StructRNA*, %struct.StructRNA** %srna102, align 8, !dbg !9948
  %71 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9948
  %72 = bitcast %struct.bNodeType* %71 to i8*, !dbg !9948
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %70, i8* %72), !dbg !9948
  br label %sw.epilog, !dbg !9948

sw.bb103:                                         ; preds = %entry
  %73 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9949
  %idname104 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %73, i32 0, i32 3, !dbg !9949
  %arraydecay105 = getelementptr inbounds [64 x i8], [64 x i8]* %idname104, i64 0, i64 0, !dbg !9949
  %call106 = call i8* @BLI_strncpy(i8* %arraydecay105, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0), i64 64), !dbg !9949
  %call107 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0)), !dbg !9949
  %74 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9949
  %ext108 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %74, i32 0, i32 44, !dbg !9949
  %srna109 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext108, i32 0, i32 1, !dbg !9949
  store %struct.StructRNA* %call107, %struct.StructRNA** %srna109, align 8, !dbg !9949
  %75 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9949
  %ext110 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %75, i32 0, i32 44, !dbg !9949
  %srna111 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext110, i32 0, i32 1, !dbg !9949
  %76 = load %struct.StructRNA*, %struct.StructRNA** %srna111, align 8, !dbg !9949
  %77 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9949
  %78 = bitcast %struct.bNodeType* %77 to i8*, !dbg !9949
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %76, i8* %78), !dbg !9949
  br label %sw.epilog, !dbg !9949

sw.bb112:                                         ; preds = %entry
  %79 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9950
  %idname113 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %79, i32 0, i32 3, !dbg !9950
  %arraydecay114 = getelementptr inbounds [64 x i8], [64 x i8]* %idname113, i64 0, i64 0, !dbg !9950
  %call115 = call i8* @BLI_strncpy(i8* %arraydecay114, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.69, i64 0, i64 0), i64 64), !dbg !9950
  %call116 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.69, i64 0, i64 0)), !dbg !9950
  %80 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9950
  %ext117 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %80, i32 0, i32 44, !dbg !9950
  %srna118 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext117, i32 0, i32 1, !dbg !9950
  store %struct.StructRNA* %call116, %struct.StructRNA** %srna118, align 8, !dbg !9950
  %81 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9950
  %ext119 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %81, i32 0, i32 44, !dbg !9950
  %srna120 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext119, i32 0, i32 1, !dbg !9950
  %82 = load %struct.StructRNA*, %struct.StructRNA** %srna120, align 8, !dbg !9950
  %83 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9950
  %84 = bitcast %struct.bNodeType* %83 to i8*, !dbg !9950
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %82, i8* %84), !dbg !9950
  br label %sw.epilog, !dbg !9950

sw.bb121:                                         ; preds = %entry
  %85 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9951
  %idname122 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %85, i32 0, i32 3, !dbg !9951
  %arraydecay123 = getelementptr inbounds [64 x i8], [64 x i8]* %idname122, i64 0, i64 0, !dbg !9951
  %call124 = call i8* @BLI_strncpy(i8* %arraydecay123, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i64 0, i64 0), i64 64), !dbg !9951
  %call125 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i64 0, i64 0)), !dbg !9951
  %86 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9951
  %ext126 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %86, i32 0, i32 44, !dbg !9951
  %srna127 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext126, i32 0, i32 1, !dbg !9951
  store %struct.StructRNA* %call125, %struct.StructRNA** %srna127, align 8, !dbg !9951
  %87 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9951
  %ext128 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %87, i32 0, i32 44, !dbg !9951
  %srna129 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext128, i32 0, i32 1, !dbg !9951
  %88 = load %struct.StructRNA*, %struct.StructRNA** %srna129, align 8, !dbg !9951
  %89 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9951
  %90 = bitcast %struct.bNodeType* %89 to i8*, !dbg !9951
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %88, i8* %90), !dbg !9951
  br label %sw.epilog, !dbg !9951

sw.bb130:                                         ; preds = %entry
  %91 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9952
  %idname131 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %91, i32 0, i32 3, !dbg !9952
  %arraydecay132 = getelementptr inbounds [64 x i8], [64 x i8]* %idname131, i64 0, i64 0, !dbg !9952
  %call133 = call i8* @BLI_strncpy(i8* %arraydecay132, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.71, i64 0, i64 0), i64 64), !dbg !9952
  %call134 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.71, i64 0, i64 0)), !dbg !9952
  %92 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9952
  %ext135 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %92, i32 0, i32 44, !dbg !9952
  %srna136 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext135, i32 0, i32 1, !dbg !9952
  store %struct.StructRNA* %call134, %struct.StructRNA** %srna136, align 8, !dbg !9952
  %93 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9952
  %ext137 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %93, i32 0, i32 44, !dbg !9952
  %srna138 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext137, i32 0, i32 1, !dbg !9952
  %94 = load %struct.StructRNA*, %struct.StructRNA** %srna138, align 8, !dbg !9952
  %95 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9952
  %96 = bitcast %struct.bNodeType* %95 to i8*, !dbg !9952
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %94, i8* %96), !dbg !9952
  br label %sw.epilog, !dbg !9952

sw.bb139:                                         ; preds = %entry
  %97 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9953
  %idname140 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %97, i32 0, i32 3, !dbg !9953
  %arraydecay141 = getelementptr inbounds [64 x i8], [64 x i8]* %idname140, i64 0, i64 0, !dbg !9953
  %call142 = call i8* @BLI_strncpy(i8* %arraydecay141, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i64 0, i64 0), i64 64), !dbg !9953
  %call143 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i64 0, i64 0)), !dbg !9953
  %98 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9953
  %ext144 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %98, i32 0, i32 44, !dbg !9953
  %srna145 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext144, i32 0, i32 1, !dbg !9953
  store %struct.StructRNA* %call143, %struct.StructRNA** %srna145, align 8, !dbg !9953
  %99 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9953
  %ext146 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %99, i32 0, i32 44, !dbg !9953
  %srna147 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext146, i32 0, i32 1, !dbg !9953
  %100 = load %struct.StructRNA*, %struct.StructRNA** %srna147, align 8, !dbg !9953
  %101 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9953
  %102 = bitcast %struct.bNodeType* %101 to i8*, !dbg !9953
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %100, i8* %102), !dbg !9953
  br label %sw.epilog, !dbg !9953

sw.bb148:                                         ; preds = %entry
  %103 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9954
  %idname149 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %103, i32 0, i32 3, !dbg !9954
  %arraydecay150 = getelementptr inbounds [64 x i8], [64 x i8]* %idname149, i64 0, i64 0, !dbg !9954
  %call151 = call i8* @BLI_strncpy(i8* %arraydecay150, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.73, i64 0, i64 0), i64 64), !dbg !9954
  %call152 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.73, i64 0, i64 0)), !dbg !9954
  %104 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9954
  %ext153 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %104, i32 0, i32 44, !dbg !9954
  %srna154 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext153, i32 0, i32 1, !dbg !9954
  store %struct.StructRNA* %call152, %struct.StructRNA** %srna154, align 8, !dbg !9954
  %105 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9954
  %ext155 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %105, i32 0, i32 44, !dbg !9954
  %srna156 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext155, i32 0, i32 1, !dbg !9954
  %106 = load %struct.StructRNA*, %struct.StructRNA** %srna156, align 8, !dbg !9954
  %107 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9954
  %108 = bitcast %struct.bNodeType* %107 to i8*, !dbg !9954
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %106, i8* %108), !dbg !9954
  br label %sw.epilog, !dbg !9954

sw.bb157:                                         ; preds = %entry
  %109 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9955
  %idname158 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %109, i32 0, i32 3, !dbg !9955
  %arraydecay159 = getelementptr inbounds [64 x i8], [64 x i8]* %idname158, i64 0, i64 0, !dbg !9955
  %call160 = call i8* @BLI_strncpy(i8* %arraydecay159, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i64 0, i64 0), i64 64), !dbg !9955
  %call161 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i64 0, i64 0)), !dbg !9955
  %110 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9955
  %ext162 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %110, i32 0, i32 44, !dbg !9955
  %srna163 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext162, i32 0, i32 1, !dbg !9955
  store %struct.StructRNA* %call161, %struct.StructRNA** %srna163, align 8, !dbg !9955
  %111 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9955
  %ext164 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %111, i32 0, i32 44, !dbg !9955
  %srna165 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext164, i32 0, i32 1, !dbg !9955
  %112 = load %struct.StructRNA*, %struct.StructRNA** %srna165, align 8, !dbg !9955
  %113 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9955
  %114 = bitcast %struct.bNodeType* %113 to i8*, !dbg !9955
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %112, i8* %114), !dbg !9955
  br label %sw.epilog, !dbg !9955

sw.bb166:                                         ; preds = %entry
  %115 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9956
  %idname167 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %115, i32 0, i32 3, !dbg !9956
  %arraydecay168 = getelementptr inbounds [64 x i8], [64 x i8]* %idname167, i64 0, i64 0, !dbg !9956
  %call169 = call i8* @BLI_strncpy(i8* %arraydecay168, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75, i64 0, i64 0), i64 64), !dbg !9956
  %call170 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75, i64 0, i64 0)), !dbg !9956
  %116 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9956
  %ext171 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %116, i32 0, i32 44, !dbg !9956
  %srna172 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext171, i32 0, i32 1, !dbg !9956
  store %struct.StructRNA* %call170, %struct.StructRNA** %srna172, align 8, !dbg !9956
  %117 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9956
  %ext173 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %117, i32 0, i32 44, !dbg !9956
  %srna174 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext173, i32 0, i32 1, !dbg !9956
  %118 = load %struct.StructRNA*, %struct.StructRNA** %srna174, align 8, !dbg !9956
  %119 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9956
  %120 = bitcast %struct.bNodeType* %119 to i8*, !dbg !9956
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %118, i8* %120), !dbg !9956
  br label %sw.epilog, !dbg !9956

sw.bb175:                                         ; preds = %entry
  %121 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9957
  %idname176 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %121, i32 0, i32 3, !dbg !9957
  %arraydecay177 = getelementptr inbounds [64 x i8], [64 x i8]* %idname176, i64 0, i64 0, !dbg !9957
  %call178 = call i8* @BLI_strncpy(i8* %arraydecay177, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.76, i64 0, i64 0), i64 64), !dbg !9957
  %call179 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.76, i64 0, i64 0)), !dbg !9957
  %122 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9957
  %ext180 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %122, i32 0, i32 44, !dbg !9957
  %srna181 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext180, i32 0, i32 1, !dbg !9957
  store %struct.StructRNA* %call179, %struct.StructRNA** %srna181, align 8, !dbg !9957
  %123 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9957
  %ext182 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %123, i32 0, i32 44, !dbg !9957
  %srna183 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext182, i32 0, i32 1, !dbg !9957
  %124 = load %struct.StructRNA*, %struct.StructRNA** %srna183, align 8, !dbg !9957
  %125 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9957
  %126 = bitcast %struct.bNodeType* %125 to i8*, !dbg !9957
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %124, i8* %126), !dbg !9957
  br label %sw.epilog, !dbg !9957

sw.bb184:                                         ; preds = %entry
  %127 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9958
  %idname185 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %127, i32 0, i32 3, !dbg !9958
  %arraydecay186 = getelementptr inbounds [64 x i8], [64 x i8]* %idname185, i64 0, i64 0, !dbg !9958
  %call187 = call i8* @BLI_strncpy(i8* %arraydecay186, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.77, i64 0, i64 0), i64 64), !dbg !9958
  %call188 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.77, i64 0, i64 0)), !dbg !9958
  %128 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9958
  %ext189 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %128, i32 0, i32 44, !dbg !9958
  %srna190 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext189, i32 0, i32 1, !dbg !9958
  store %struct.StructRNA* %call188, %struct.StructRNA** %srna190, align 8, !dbg !9958
  %129 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9958
  %ext191 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %129, i32 0, i32 44, !dbg !9958
  %srna192 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext191, i32 0, i32 1, !dbg !9958
  %130 = load %struct.StructRNA*, %struct.StructRNA** %srna192, align 8, !dbg !9958
  %131 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9958
  %132 = bitcast %struct.bNodeType* %131 to i8*, !dbg !9958
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %130, i8* %132), !dbg !9958
  br label %sw.epilog, !dbg !9958

sw.bb193:                                         ; preds = %entry
  %133 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9959
  %idname194 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %133, i32 0, i32 3, !dbg !9959
  %arraydecay195 = getelementptr inbounds [64 x i8], [64 x i8]* %idname194, i64 0, i64 0, !dbg !9959
  %call196 = call i8* @BLI_strncpy(i8* %arraydecay195, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i64 0, i64 0), i64 64), !dbg !9959
  %call197 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i64 0, i64 0)), !dbg !9959
  %134 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9959
  %ext198 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %134, i32 0, i32 44, !dbg !9959
  %srna199 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext198, i32 0, i32 1, !dbg !9959
  store %struct.StructRNA* %call197, %struct.StructRNA** %srna199, align 8, !dbg !9959
  %135 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9959
  %ext200 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %135, i32 0, i32 44, !dbg !9959
  %srna201 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext200, i32 0, i32 1, !dbg !9959
  %136 = load %struct.StructRNA*, %struct.StructRNA** %srna201, align 8, !dbg !9959
  %137 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9959
  %138 = bitcast %struct.bNodeType* %137 to i8*, !dbg !9959
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %136, i8* %138), !dbg !9959
  br label %sw.epilog, !dbg !9959

sw.bb202:                                         ; preds = %entry
  %139 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9960
  %idname203 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %139, i32 0, i32 3, !dbg !9960
  %arraydecay204 = getelementptr inbounds [64 x i8], [64 x i8]* %idname203, i64 0, i64 0, !dbg !9960
  %call205 = call i8* @BLI_strncpy(i8* %arraydecay204, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.79, i64 0, i64 0), i64 64), !dbg !9960
  %call206 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.79, i64 0, i64 0)), !dbg !9960
  %140 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9960
  %ext207 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %140, i32 0, i32 44, !dbg !9960
  %srna208 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext207, i32 0, i32 1, !dbg !9960
  store %struct.StructRNA* %call206, %struct.StructRNA** %srna208, align 8, !dbg !9960
  %141 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9960
  %ext209 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %141, i32 0, i32 44, !dbg !9960
  %srna210 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext209, i32 0, i32 1, !dbg !9960
  %142 = load %struct.StructRNA*, %struct.StructRNA** %srna210, align 8, !dbg !9960
  %143 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9960
  %144 = bitcast %struct.bNodeType* %143 to i8*, !dbg !9960
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %142, i8* %144), !dbg !9960
  br label %sw.epilog, !dbg !9960

sw.bb211:                                         ; preds = %entry
  %145 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9961
  %idname212 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %145, i32 0, i32 3, !dbg !9961
  %arraydecay213 = getelementptr inbounds [64 x i8], [64 x i8]* %idname212, i64 0, i64 0, !dbg !9961
  %call214 = call i8* @BLI_strncpy(i8* %arraydecay213, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), i64 64), !dbg !9961
  %call215 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0)), !dbg !9961
  %146 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9961
  %ext216 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %146, i32 0, i32 44, !dbg !9961
  %srna217 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext216, i32 0, i32 1, !dbg !9961
  store %struct.StructRNA* %call215, %struct.StructRNA** %srna217, align 8, !dbg !9961
  %147 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9961
  %ext218 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %147, i32 0, i32 44, !dbg !9961
  %srna219 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext218, i32 0, i32 1, !dbg !9961
  %148 = load %struct.StructRNA*, %struct.StructRNA** %srna219, align 8, !dbg !9961
  %149 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9961
  %150 = bitcast %struct.bNodeType* %149 to i8*, !dbg !9961
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %148, i8* %150), !dbg !9961
  br label %sw.epilog, !dbg !9961

sw.bb220:                                         ; preds = %entry
  %151 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9962
  %idname221 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %151, i32 0, i32 3, !dbg !9962
  %arraydecay222 = getelementptr inbounds [64 x i8], [64 x i8]* %idname221, i64 0, i64 0, !dbg !9962
  %call223 = call i8* @BLI_strncpy(i8* %arraydecay222, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.81, i64 0, i64 0), i64 64), !dbg !9962
  %call224 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.81, i64 0, i64 0)), !dbg !9962
  %152 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9962
  %ext225 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %152, i32 0, i32 44, !dbg !9962
  %srna226 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext225, i32 0, i32 1, !dbg !9962
  store %struct.StructRNA* %call224, %struct.StructRNA** %srna226, align 8, !dbg !9962
  %153 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9962
  %ext227 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %153, i32 0, i32 44, !dbg !9962
  %srna228 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext227, i32 0, i32 1, !dbg !9962
  %154 = load %struct.StructRNA*, %struct.StructRNA** %srna228, align 8, !dbg !9962
  %155 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9962
  %156 = bitcast %struct.bNodeType* %155 to i8*, !dbg !9962
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %154, i8* %156), !dbg !9962
  br label %sw.epilog, !dbg !9962

sw.bb229:                                         ; preds = %entry
  %157 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9963
  %idname230 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %157, i32 0, i32 3, !dbg !9963
  %arraydecay231 = getelementptr inbounds [64 x i8], [64 x i8]* %idname230, i64 0, i64 0, !dbg !9963
  %call232 = call i8* @BLI_strncpy(i8* %arraydecay231, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.82, i64 0, i64 0), i64 64), !dbg !9963
  %call233 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.82, i64 0, i64 0)), !dbg !9963
  %158 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9963
  %ext234 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %158, i32 0, i32 44, !dbg !9963
  %srna235 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext234, i32 0, i32 1, !dbg !9963
  store %struct.StructRNA* %call233, %struct.StructRNA** %srna235, align 8, !dbg !9963
  %159 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9963
  %ext236 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %159, i32 0, i32 44, !dbg !9963
  %srna237 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext236, i32 0, i32 1, !dbg !9963
  %160 = load %struct.StructRNA*, %struct.StructRNA** %srna237, align 8, !dbg !9963
  %161 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9963
  %162 = bitcast %struct.bNodeType* %161 to i8*, !dbg !9963
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %160, i8* %162), !dbg !9963
  br label %sw.epilog, !dbg !9963

sw.bb238:                                         ; preds = %entry
  %163 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9964
  %idname239 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %163, i32 0, i32 3, !dbg !9964
  %arraydecay240 = getelementptr inbounds [64 x i8], [64 x i8]* %idname239, i64 0, i64 0, !dbg !9964
  %call241 = call i8* @BLI_strncpy(i8* %arraydecay240, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.83, i64 0, i64 0), i64 64), !dbg !9964
  %call242 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.83, i64 0, i64 0)), !dbg !9964
  %164 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9964
  %ext243 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %164, i32 0, i32 44, !dbg !9964
  %srna244 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext243, i32 0, i32 1, !dbg !9964
  store %struct.StructRNA* %call242, %struct.StructRNA** %srna244, align 8, !dbg !9964
  %165 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9964
  %ext245 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %165, i32 0, i32 44, !dbg !9964
  %srna246 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext245, i32 0, i32 1, !dbg !9964
  %166 = load %struct.StructRNA*, %struct.StructRNA** %srna246, align 8, !dbg !9964
  %167 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9964
  %168 = bitcast %struct.bNodeType* %167 to i8*, !dbg !9964
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %166, i8* %168), !dbg !9964
  br label %sw.epilog, !dbg !9964

sw.bb247:                                         ; preds = %entry
  %169 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9965
  %idname248 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %169, i32 0, i32 3, !dbg !9965
  %arraydecay249 = getelementptr inbounds [64 x i8], [64 x i8]* %idname248, i64 0, i64 0, !dbg !9965
  %call250 = call i8* @BLI_strncpy(i8* %arraydecay249, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.84, i64 0, i64 0), i64 64), !dbg !9965
  %call251 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.84, i64 0, i64 0)), !dbg !9965
  %170 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9965
  %ext252 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %170, i32 0, i32 44, !dbg !9965
  %srna253 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext252, i32 0, i32 1, !dbg !9965
  store %struct.StructRNA* %call251, %struct.StructRNA** %srna253, align 8, !dbg !9965
  %171 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9965
  %ext254 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %171, i32 0, i32 44, !dbg !9965
  %srna255 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext254, i32 0, i32 1, !dbg !9965
  %172 = load %struct.StructRNA*, %struct.StructRNA** %srna255, align 8, !dbg !9965
  %173 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9965
  %174 = bitcast %struct.bNodeType* %173 to i8*, !dbg !9965
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %172, i8* %174), !dbg !9965
  br label %sw.epilog, !dbg !9965

sw.bb256:                                         ; preds = %entry
  %175 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9966
  %idname257 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %175, i32 0, i32 3, !dbg !9966
  %arraydecay258 = getelementptr inbounds [64 x i8], [64 x i8]* %idname257, i64 0, i64 0, !dbg !9966
  %call259 = call i8* @BLI_strncpy(i8* %arraydecay258, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i64 0, i64 0), i64 64), !dbg !9966
  %call260 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i64 0, i64 0)), !dbg !9966
  %176 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9966
  %ext261 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %176, i32 0, i32 44, !dbg !9966
  %srna262 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext261, i32 0, i32 1, !dbg !9966
  store %struct.StructRNA* %call260, %struct.StructRNA** %srna262, align 8, !dbg !9966
  %177 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9966
  %ext263 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %177, i32 0, i32 44, !dbg !9966
  %srna264 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext263, i32 0, i32 1, !dbg !9966
  %178 = load %struct.StructRNA*, %struct.StructRNA** %srna264, align 8, !dbg !9966
  %179 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9966
  %180 = bitcast %struct.bNodeType* %179 to i8*, !dbg !9966
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %178, i8* %180), !dbg !9966
  br label %sw.epilog, !dbg !9966

sw.bb265:                                         ; preds = %entry
  %181 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9967
  %idname266 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %181, i32 0, i32 3, !dbg !9967
  %arraydecay267 = getelementptr inbounds [64 x i8], [64 x i8]* %idname266, i64 0, i64 0, !dbg !9967
  %call268 = call i8* @BLI_strncpy(i8* %arraydecay267, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.86, i64 0, i64 0), i64 64), !dbg !9967
  %call269 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.86, i64 0, i64 0)), !dbg !9967
  %182 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9967
  %ext270 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %182, i32 0, i32 44, !dbg !9967
  %srna271 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext270, i32 0, i32 1, !dbg !9967
  store %struct.StructRNA* %call269, %struct.StructRNA** %srna271, align 8, !dbg !9967
  %183 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9967
  %ext272 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %183, i32 0, i32 44, !dbg !9967
  %srna273 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext272, i32 0, i32 1, !dbg !9967
  %184 = load %struct.StructRNA*, %struct.StructRNA** %srna273, align 8, !dbg !9967
  %185 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9967
  %186 = bitcast %struct.bNodeType* %185 to i8*, !dbg !9967
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %184, i8* %186), !dbg !9967
  br label %sw.epilog, !dbg !9967

sw.bb274:                                         ; preds = %entry
  %187 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9968
  %idname275 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %187, i32 0, i32 3, !dbg !9968
  %arraydecay276 = getelementptr inbounds [64 x i8], [64 x i8]* %idname275, i64 0, i64 0, !dbg !9968
  %call277 = call i8* @BLI_strncpy(i8* %arraydecay276, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.87, i64 0, i64 0), i64 64), !dbg !9968
  %call278 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.87, i64 0, i64 0)), !dbg !9968
  %188 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9968
  %ext279 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %188, i32 0, i32 44, !dbg !9968
  %srna280 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext279, i32 0, i32 1, !dbg !9968
  store %struct.StructRNA* %call278, %struct.StructRNA** %srna280, align 8, !dbg !9968
  %189 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9968
  %ext281 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %189, i32 0, i32 44, !dbg !9968
  %srna282 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext281, i32 0, i32 1, !dbg !9968
  %190 = load %struct.StructRNA*, %struct.StructRNA** %srna282, align 8, !dbg !9968
  %191 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9968
  %192 = bitcast %struct.bNodeType* %191 to i8*, !dbg !9968
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %190, i8* %192), !dbg !9968
  br label %sw.epilog, !dbg !9968

sw.bb283:                                         ; preds = %entry
  %193 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9969
  %idname284 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %193, i32 0, i32 3, !dbg !9969
  %arraydecay285 = getelementptr inbounds [64 x i8], [64 x i8]* %idname284, i64 0, i64 0, !dbg !9969
  %call286 = call i8* @BLI_strncpy(i8* %arraydecay285, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.88, i64 0, i64 0), i64 64), !dbg !9969
  %call287 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.88, i64 0, i64 0)), !dbg !9969
  %194 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9969
  %ext288 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %194, i32 0, i32 44, !dbg !9969
  %srna289 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext288, i32 0, i32 1, !dbg !9969
  store %struct.StructRNA* %call287, %struct.StructRNA** %srna289, align 8, !dbg !9969
  %195 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9969
  %ext290 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %195, i32 0, i32 44, !dbg !9969
  %srna291 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext290, i32 0, i32 1, !dbg !9969
  %196 = load %struct.StructRNA*, %struct.StructRNA** %srna291, align 8, !dbg !9969
  %197 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9969
  %198 = bitcast %struct.bNodeType* %197 to i8*, !dbg !9969
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %196, i8* %198), !dbg !9969
  br label %sw.epilog, !dbg !9969

sw.bb292:                                         ; preds = %entry
  %199 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9970
  %idname293 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %199, i32 0, i32 3, !dbg !9970
  %arraydecay294 = getelementptr inbounds [64 x i8], [64 x i8]* %idname293, i64 0, i64 0, !dbg !9970
  %call295 = call i8* @BLI_strncpy(i8* %arraydecay294, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.89, i64 0, i64 0), i64 64), !dbg !9970
  %call296 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.89, i64 0, i64 0)), !dbg !9970
  %200 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9970
  %ext297 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %200, i32 0, i32 44, !dbg !9970
  %srna298 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext297, i32 0, i32 1, !dbg !9970
  store %struct.StructRNA* %call296, %struct.StructRNA** %srna298, align 8, !dbg !9970
  %201 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9970
  %ext299 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %201, i32 0, i32 44, !dbg !9970
  %srna300 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext299, i32 0, i32 1, !dbg !9970
  %202 = load %struct.StructRNA*, %struct.StructRNA** %srna300, align 8, !dbg !9970
  %203 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9970
  %204 = bitcast %struct.bNodeType* %203 to i8*, !dbg !9970
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %202, i8* %204), !dbg !9970
  br label %sw.epilog, !dbg !9970

sw.bb301:                                         ; preds = %entry
  %205 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9971
  %idname302 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %205, i32 0, i32 3, !dbg !9971
  %arraydecay303 = getelementptr inbounds [64 x i8], [64 x i8]* %idname302, i64 0, i64 0, !dbg !9971
  %call304 = call i8* @BLI_strncpy(i8* %arraydecay303, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.90, i64 0, i64 0), i64 64), !dbg !9971
  %call305 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.90, i64 0, i64 0)), !dbg !9971
  %206 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9971
  %ext306 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %206, i32 0, i32 44, !dbg !9971
  %srna307 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext306, i32 0, i32 1, !dbg !9971
  store %struct.StructRNA* %call305, %struct.StructRNA** %srna307, align 8, !dbg !9971
  %207 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9971
  %ext308 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %207, i32 0, i32 44, !dbg !9971
  %srna309 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext308, i32 0, i32 1, !dbg !9971
  %208 = load %struct.StructRNA*, %struct.StructRNA** %srna309, align 8, !dbg !9971
  %209 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9971
  %210 = bitcast %struct.bNodeType* %209 to i8*, !dbg !9971
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %208, i8* %210), !dbg !9971
  br label %sw.epilog, !dbg !9971

sw.bb310:                                         ; preds = %entry
  %211 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9972
  %idname311 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %211, i32 0, i32 3, !dbg !9972
  %arraydecay312 = getelementptr inbounds [64 x i8], [64 x i8]* %idname311, i64 0, i64 0, !dbg !9972
  %call313 = call i8* @BLI_strncpy(i8* %arraydecay312, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.91, i64 0, i64 0), i64 64), !dbg !9972
  %call314 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.91, i64 0, i64 0)), !dbg !9972
  %212 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9972
  %ext315 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %212, i32 0, i32 44, !dbg !9972
  %srna316 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext315, i32 0, i32 1, !dbg !9972
  store %struct.StructRNA* %call314, %struct.StructRNA** %srna316, align 8, !dbg !9972
  %213 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9972
  %ext317 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %213, i32 0, i32 44, !dbg !9972
  %srna318 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext317, i32 0, i32 1, !dbg !9972
  %214 = load %struct.StructRNA*, %struct.StructRNA** %srna318, align 8, !dbg !9972
  %215 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9972
  %216 = bitcast %struct.bNodeType* %215 to i8*, !dbg !9972
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %214, i8* %216), !dbg !9972
  br label %sw.epilog, !dbg !9972

sw.bb319:                                         ; preds = %entry
  %217 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9973
  %idname320 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %217, i32 0, i32 3, !dbg !9973
  %arraydecay321 = getelementptr inbounds [64 x i8], [64 x i8]* %idname320, i64 0, i64 0, !dbg !9973
  %call322 = call i8* @BLI_strncpy(i8* %arraydecay321, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0), i64 64), !dbg !9973
  %call323 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0)), !dbg !9973
  %218 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9973
  %ext324 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %218, i32 0, i32 44, !dbg !9973
  %srna325 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext324, i32 0, i32 1, !dbg !9973
  store %struct.StructRNA* %call323, %struct.StructRNA** %srna325, align 8, !dbg !9973
  %219 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9973
  %ext326 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %219, i32 0, i32 44, !dbg !9973
  %srna327 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext326, i32 0, i32 1, !dbg !9973
  %220 = load %struct.StructRNA*, %struct.StructRNA** %srna327, align 8, !dbg !9973
  %221 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9973
  %222 = bitcast %struct.bNodeType* %221 to i8*, !dbg !9973
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %220, i8* %222), !dbg !9973
  br label %sw.epilog, !dbg !9973

sw.bb328:                                         ; preds = %entry
  %223 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9974
  %idname329 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %223, i32 0, i32 3, !dbg !9974
  %arraydecay330 = getelementptr inbounds [64 x i8], [64 x i8]* %idname329, i64 0, i64 0, !dbg !9974
  %call331 = call i8* @BLI_strncpy(i8* %arraydecay330, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.93, i64 0, i64 0), i64 64), !dbg !9974
  %call332 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.93, i64 0, i64 0)), !dbg !9974
  %224 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9974
  %ext333 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %224, i32 0, i32 44, !dbg !9974
  %srna334 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext333, i32 0, i32 1, !dbg !9974
  store %struct.StructRNA* %call332, %struct.StructRNA** %srna334, align 8, !dbg !9974
  %225 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9974
  %ext335 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %225, i32 0, i32 44, !dbg !9974
  %srna336 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext335, i32 0, i32 1, !dbg !9974
  %226 = load %struct.StructRNA*, %struct.StructRNA** %srna336, align 8, !dbg !9974
  %227 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9974
  %228 = bitcast %struct.bNodeType* %227 to i8*, !dbg !9974
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %226, i8* %228), !dbg !9974
  br label %sw.epilog, !dbg !9974

sw.bb337:                                         ; preds = %entry
  %229 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9975
  %idname338 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %229, i32 0, i32 3, !dbg !9975
  %arraydecay339 = getelementptr inbounds [64 x i8], [64 x i8]* %idname338, i64 0, i64 0, !dbg !9975
  %call340 = call i8* @BLI_strncpy(i8* %arraydecay339, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.94, i64 0, i64 0), i64 64), !dbg !9975
  %call341 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.94, i64 0, i64 0)), !dbg !9975
  %230 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9975
  %ext342 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %230, i32 0, i32 44, !dbg !9975
  %srna343 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext342, i32 0, i32 1, !dbg !9975
  store %struct.StructRNA* %call341, %struct.StructRNA** %srna343, align 8, !dbg !9975
  %231 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9975
  %ext344 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %231, i32 0, i32 44, !dbg !9975
  %srna345 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext344, i32 0, i32 1, !dbg !9975
  %232 = load %struct.StructRNA*, %struct.StructRNA** %srna345, align 8, !dbg !9975
  %233 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9975
  %234 = bitcast %struct.bNodeType* %233 to i8*, !dbg !9975
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %232, i8* %234), !dbg !9975
  br label %sw.epilog, !dbg !9975

sw.bb346:                                         ; preds = %entry
  %235 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9976
  %idname347 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %235, i32 0, i32 3, !dbg !9976
  %arraydecay348 = getelementptr inbounds [64 x i8], [64 x i8]* %idname347, i64 0, i64 0, !dbg !9976
  %call349 = call i8* @BLI_strncpy(i8* %arraydecay348, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.95, i64 0, i64 0), i64 64), !dbg !9976
  %call350 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.95, i64 0, i64 0)), !dbg !9976
  %236 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9976
  %ext351 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %236, i32 0, i32 44, !dbg !9976
  %srna352 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext351, i32 0, i32 1, !dbg !9976
  store %struct.StructRNA* %call350, %struct.StructRNA** %srna352, align 8, !dbg !9976
  %237 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9976
  %ext353 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %237, i32 0, i32 44, !dbg !9976
  %srna354 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext353, i32 0, i32 1, !dbg !9976
  %238 = load %struct.StructRNA*, %struct.StructRNA** %srna354, align 8, !dbg !9976
  %239 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9976
  %240 = bitcast %struct.bNodeType* %239 to i8*, !dbg !9976
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %238, i8* %240), !dbg !9976
  br label %sw.epilog, !dbg !9976

sw.bb355:                                         ; preds = %entry
  %241 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9977
  %idname356 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %241, i32 0, i32 3, !dbg !9977
  %arraydecay357 = getelementptr inbounds [64 x i8], [64 x i8]* %idname356, i64 0, i64 0, !dbg !9977
  %call358 = call i8* @BLI_strncpy(i8* %arraydecay357, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.96, i64 0, i64 0), i64 64), !dbg !9977
  %call359 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.96, i64 0, i64 0)), !dbg !9977
  %242 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9977
  %ext360 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %242, i32 0, i32 44, !dbg !9977
  %srna361 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext360, i32 0, i32 1, !dbg !9977
  store %struct.StructRNA* %call359, %struct.StructRNA** %srna361, align 8, !dbg !9977
  %243 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9977
  %ext362 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %243, i32 0, i32 44, !dbg !9977
  %srna363 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext362, i32 0, i32 1, !dbg !9977
  %244 = load %struct.StructRNA*, %struct.StructRNA** %srna363, align 8, !dbg !9977
  %245 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9977
  %246 = bitcast %struct.bNodeType* %245 to i8*, !dbg !9977
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %244, i8* %246), !dbg !9977
  br label %sw.epilog, !dbg !9977

sw.bb364:                                         ; preds = %entry
  %247 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9978
  %idname365 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %247, i32 0, i32 3, !dbg !9978
  %arraydecay366 = getelementptr inbounds [64 x i8], [64 x i8]* %idname365, i64 0, i64 0, !dbg !9978
  %call367 = call i8* @BLI_strncpy(i8* %arraydecay366, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.97, i64 0, i64 0), i64 64), !dbg !9978
  %call368 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.97, i64 0, i64 0)), !dbg !9978
  %248 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9978
  %ext369 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %248, i32 0, i32 44, !dbg !9978
  %srna370 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext369, i32 0, i32 1, !dbg !9978
  store %struct.StructRNA* %call368, %struct.StructRNA** %srna370, align 8, !dbg !9978
  %249 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9978
  %ext371 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %249, i32 0, i32 44, !dbg !9978
  %srna372 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext371, i32 0, i32 1, !dbg !9978
  %250 = load %struct.StructRNA*, %struct.StructRNA** %srna372, align 8, !dbg !9978
  %251 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9978
  %252 = bitcast %struct.bNodeType* %251 to i8*, !dbg !9978
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %250, i8* %252), !dbg !9978
  br label %sw.epilog, !dbg !9978

sw.bb373:                                         ; preds = %entry
  %253 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9979
  %idname374 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %253, i32 0, i32 3, !dbg !9979
  %arraydecay375 = getelementptr inbounds [64 x i8], [64 x i8]* %idname374, i64 0, i64 0, !dbg !9979
  %call376 = call i8* @BLI_strncpy(i8* %arraydecay375, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.98, i64 0, i64 0), i64 64), !dbg !9979
  %call377 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.98, i64 0, i64 0)), !dbg !9979
  %254 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9979
  %ext378 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %254, i32 0, i32 44, !dbg !9979
  %srna379 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext378, i32 0, i32 1, !dbg !9979
  store %struct.StructRNA* %call377, %struct.StructRNA** %srna379, align 8, !dbg !9979
  %255 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9979
  %ext380 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %255, i32 0, i32 44, !dbg !9979
  %srna381 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext380, i32 0, i32 1, !dbg !9979
  %256 = load %struct.StructRNA*, %struct.StructRNA** %srna381, align 8, !dbg !9979
  %257 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9979
  %258 = bitcast %struct.bNodeType* %257 to i8*, !dbg !9979
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %256, i8* %258), !dbg !9979
  br label %sw.epilog, !dbg !9979

sw.bb382:                                         ; preds = %entry
  %259 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9980
  %idname383 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %259, i32 0, i32 3, !dbg !9980
  %arraydecay384 = getelementptr inbounds [64 x i8], [64 x i8]* %idname383, i64 0, i64 0, !dbg !9980
  %call385 = call i8* @BLI_strncpy(i8* %arraydecay384, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.99, i64 0, i64 0), i64 64), !dbg !9980
  %call386 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.99, i64 0, i64 0)), !dbg !9980
  %260 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9980
  %ext387 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %260, i32 0, i32 44, !dbg !9980
  %srna388 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext387, i32 0, i32 1, !dbg !9980
  store %struct.StructRNA* %call386, %struct.StructRNA** %srna388, align 8, !dbg !9980
  %261 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9980
  %ext389 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %261, i32 0, i32 44, !dbg !9980
  %srna390 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext389, i32 0, i32 1, !dbg !9980
  %262 = load %struct.StructRNA*, %struct.StructRNA** %srna390, align 8, !dbg !9980
  %263 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9980
  %264 = bitcast %struct.bNodeType* %263 to i8*, !dbg !9980
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %262, i8* %264), !dbg !9980
  br label %sw.epilog, !dbg !9980

sw.bb391:                                         ; preds = %entry
  %265 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9981
  %idname392 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %265, i32 0, i32 3, !dbg !9981
  %arraydecay393 = getelementptr inbounds [64 x i8], [64 x i8]* %idname392, i64 0, i64 0, !dbg !9981
  %call394 = call i8* @BLI_strncpy(i8* %arraydecay393, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.100, i64 0, i64 0), i64 64), !dbg !9981
  %call395 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.100, i64 0, i64 0)), !dbg !9981
  %266 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9981
  %ext396 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %266, i32 0, i32 44, !dbg !9981
  %srna397 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext396, i32 0, i32 1, !dbg !9981
  store %struct.StructRNA* %call395, %struct.StructRNA** %srna397, align 8, !dbg !9981
  %267 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9981
  %ext398 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %267, i32 0, i32 44, !dbg !9981
  %srna399 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext398, i32 0, i32 1, !dbg !9981
  %268 = load %struct.StructRNA*, %struct.StructRNA** %srna399, align 8, !dbg !9981
  %269 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9981
  %270 = bitcast %struct.bNodeType* %269 to i8*, !dbg !9981
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %268, i8* %270), !dbg !9981
  br label %sw.epilog, !dbg !9981

sw.bb400:                                         ; preds = %entry
  %271 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9982
  %idname401 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %271, i32 0, i32 3, !dbg !9982
  %arraydecay402 = getelementptr inbounds [64 x i8], [64 x i8]* %idname401, i64 0, i64 0, !dbg !9982
  %call403 = call i8* @BLI_strncpy(i8* %arraydecay402, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.101, i64 0, i64 0), i64 64), !dbg !9982
  %call404 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.101, i64 0, i64 0)), !dbg !9982
  %272 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9982
  %ext405 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %272, i32 0, i32 44, !dbg !9982
  %srna406 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext405, i32 0, i32 1, !dbg !9982
  store %struct.StructRNA* %call404, %struct.StructRNA** %srna406, align 8, !dbg !9982
  %273 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9982
  %ext407 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %273, i32 0, i32 44, !dbg !9982
  %srna408 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext407, i32 0, i32 1, !dbg !9982
  %274 = load %struct.StructRNA*, %struct.StructRNA** %srna408, align 8, !dbg !9982
  %275 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9982
  %276 = bitcast %struct.bNodeType* %275 to i8*, !dbg !9982
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %274, i8* %276), !dbg !9982
  br label %sw.epilog, !dbg !9982

sw.bb409:                                         ; preds = %entry
  %277 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9983
  %idname410 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %277, i32 0, i32 3, !dbg !9983
  %arraydecay411 = getelementptr inbounds [64 x i8], [64 x i8]* %idname410, i64 0, i64 0, !dbg !9983
  %call412 = call i8* @BLI_strncpy(i8* %arraydecay411, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.102, i64 0, i64 0), i64 64), !dbg !9983
  %call413 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.102, i64 0, i64 0)), !dbg !9983
  %278 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9983
  %ext414 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %278, i32 0, i32 44, !dbg !9983
  %srna415 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext414, i32 0, i32 1, !dbg !9983
  store %struct.StructRNA* %call413, %struct.StructRNA** %srna415, align 8, !dbg !9983
  %279 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9983
  %ext416 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %279, i32 0, i32 44, !dbg !9983
  %srna417 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext416, i32 0, i32 1, !dbg !9983
  %280 = load %struct.StructRNA*, %struct.StructRNA** %srna417, align 8, !dbg !9983
  %281 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9983
  %282 = bitcast %struct.bNodeType* %281 to i8*, !dbg !9983
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %280, i8* %282), !dbg !9983
  br label %sw.epilog, !dbg !9983

sw.bb418:                                         ; preds = %entry
  %283 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9984
  %idname419 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %283, i32 0, i32 3, !dbg !9984
  %arraydecay420 = getelementptr inbounds [64 x i8], [64 x i8]* %idname419, i64 0, i64 0, !dbg !9984
  %call421 = call i8* @BLI_strncpy(i8* %arraydecay420, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.103, i64 0, i64 0), i64 64), !dbg !9984
  %call422 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.103, i64 0, i64 0)), !dbg !9984
  %284 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9984
  %ext423 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %284, i32 0, i32 44, !dbg !9984
  %srna424 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext423, i32 0, i32 1, !dbg !9984
  store %struct.StructRNA* %call422, %struct.StructRNA** %srna424, align 8, !dbg !9984
  %285 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9984
  %ext425 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %285, i32 0, i32 44, !dbg !9984
  %srna426 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext425, i32 0, i32 1, !dbg !9984
  %286 = load %struct.StructRNA*, %struct.StructRNA** %srna426, align 8, !dbg !9984
  %287 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9984
  %288 = bitcast %struct.bNodeType* %287 to i8*, !dbg !9984
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %286, i8* %288), !dbg !9984
  br label %sw.epilog, !dbg !9984

sw.bb427:                                         ; preds = %entry
  %289 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9985
  %idname428 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %289, i32 0, i32 3, !dbg !9985
  %arraydecay429 = getelementptr inbounds [64 x i8], [64 x i8]* %idname428, i64 0, i64 0, !dbg !9985
  %call430 = call i8* @BLI_strncpy(i8* %arraydecay429, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.104, i64 0, i64 0), i64 64), !dbg !9985
  %call431 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.104, i64 0, i64 0)), !dbg !9985
  %290 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9985
  %ext432 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %290, i32 0, i32 44, !dbg !9985
  %srna433 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext432, i32 0, i32 1, !dbg !9985
  store %struct.StructRNA* %call431, %struct.StructRNA** %srna433, align 8, !dbg !9985
  %291 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9985
  %ext434 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %291, i32 0, i32 44, !dbg !9985
  %srna435 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext434, i32 0, i32 1, !dbg !9985
  %292 = load %struct.StructRNA*, %struct.StructRNA** %srna435, align 8, !dbg !9985
  %293 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9985
  %294 = bitcast %struct.bNodeType* %293 to i8*, !dbg !9985
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %292, i8* %294), !dbg !9985
  br label %sw.epilog, !dbg !9985

sw.bb436:                                         ; preds = %entry
  %295 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9986
  %idname437 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %295, i32 0, i32 3, !dbg !9986
  %arraydecay438 = getelementptr inbounds [64 x i8], [64 x i8]* %idname437, i64 0, i64 0, !dbg !9986
  %call439 = call i8* @BLI_strncpy(i8* %arraydecay438, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.105, i64 0, i64 0), i64 64), !dbg !9986
  %call440 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.105, i64 0, i64 0)), !dbg !9986
  %296 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9986
  %ext441 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %296, i32 0, i32 44, !dbg !9986
  %srna442 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext441, i32 0, i32 1, !dbg !9986
  store %struct.StructRNA* %call440, %struct.StructRNA** %srna442, align 8, !dbg !9986
  %297 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9986
  %ext443 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %297, i32 0, i32 44, !dbg !9986
  %srna444 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext443, i32 0, i32 1, !dbg !9986
  %298 = load %struct.StructRNA*, %struct.StructRNA** %srna444, align 8, !dbg !9986
  %299 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9986
  %300 = bitcast %struct.bNodeType* %299 to i8*, !dbg !9986
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %298, i8* %300), !dbg !9986
  br label %sw.epilog, !dbg !9986

sw.bb445:                                         ; preds = %entry
  %301 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9987
  %idname446 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %301, i32 0, i32 3, !dbg !9987
  %arraydecay447 = getelementptr inbounds [64 x i8], [64 x i8]* %idname446, i64 0, i64 0, !dbg !9987
  %call448 = call i8* @BLI_strncpy(i8* %arraydecay447, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.106, i64 0, i64 0), i64 64), !dbg !9987
  %call449 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.106, i64 0, i64 0)), !dbg !9987
  %302 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9987
  %ext450 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %302, i32 0, i32 44, !dbg !9987
  %srna451 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext450, i32 0, i32 1, !dbg !9987
  store %struct.StructRNA* %call449, %struct.StructRNA** %srna451, align 8, !dbg !9987
  %303 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9987
  %ext452 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %303, i32 0, i32 44, !dbg !9987
  %srna453 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext452, i32 0, i32 1, !dbg !9987
  %304 = load %struct.StructRNA*, %struct.StructRNA** %srna453, align 8, !dbg !9987
  %305 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9987
  %306 = bitcast %struct.bNodeType* %305 to i8*, !dbg !9987
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %304, i8* %306), !dbg !9987
  br label %sw.epilog, !dbg !9987

sw.bb454:                                         ; preds = %entry
  %307 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9988
  %idname455 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %307, i32 0, i32 3, !dbg !9988
  %arraydecay456 = getelementptr inbounds [64 x i8], [64 x i8]* %idname455, i64 0, i64 0, !dbg !9988
  %call457 = call i8* @BLI_strncpy(i8* %arraydecay456, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.107, i64 0, i64 0), i64 64), !dbg !9988
  %call458 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.107, i64 0, i64 0)), !dbg !9988
  %308 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9988
  %ext459 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %308, i32 0, i32 44, !dbg !9988
  %srna460 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext459, i32 0, i32 1, !dbg !9988
  store %struct.StructRNA* %call458, %struct.StructRNA** %srna460, align 8, !dbg !9988
  %309 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9988
  %ext461 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %309, i32 0, i32 44, !dbg !9988
  %srna462 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext461, i32 0, i32 1, !dbg !9988
  %310 = load %struct.StructRNA*, %struct.StructRNA** %srna462, align 8, !dbg !9988
  %311 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9988
  %312 = bitcast %struct.bNodeType* %311 to i8*, !dbg !9988
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %310, i8* %312), !dbg !9988
  br label %sw.epilog, !dbg !9988

sw.bb463:                                         ; preds = %entry
  %313 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9989
  %idname464 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %313, i32 0, i32 3, !dbg !9989
  %arraydecay465 = getelementptr inbounds [64 x i8], [64 x i8]* %idname464, i64 0, i64 0, !dbg !9989
  %call466 = call i8* @BLI_strncpy(i8* %arraydecay465, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.108, i64 0, i64 0), i64 64), !dbg !9989
  %call467 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.108, i64 0, i64 0)), !dbg !9989
  %314 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9989
  %ext468 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %314, i32 0, i32 44, !dbg !9989
  %srna469 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext468, i32 0, i32 1, !dbg !9989
  store %struct.StructRNA* %call467, %struct.StructRNA** %srna469, align 8, !dbg !9989
  %315 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9989
  %ext470 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %315, i32 0, i32 44, !dbg !9989
  %srna471 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext470, i32 0, i32 1, !dbg !9989
  %316 = load %struct.StructRNA*, %struct.StructRNA** %srna471, align 8, !dbg !9989
  %317 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9989
  %318 = bitcast %struct.bNodeType* %317 to i8*, !dbg !9989
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %316, i8* %318), !dbg !9989
  br label %sw.epilog, !dbg !9989

sw.bb472:                                         ; preds = %entry
  %319 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9990
  %idname473 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %319, i32 0, i32 3, !dbg !9990
  %arraydecay474 = getelementptr inbounds [64 x i8], [64 x i8]* %idname473, i64 0, i64 0, !dbg !9990
  %call475 = call i8* @BLI_strncpy(i8* %arraydecay474, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.109, i64 0, i64 0), i64 64), !dbg !9990
  %call476 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.109, i64 0, i64 0)), !dbg !9990
  %320 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9990
  %ext477 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %320, i32 0, i32 44, !dbg !9990
  %srna478 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext477, i32 0, i32 1, !dbg !9990
  store %struct.StructRNA* %call476, %struct.StructRNA** %srna478, align 8, !dbg !9990
  %321 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9990
  %ext479 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %321, i32 0, i32 44, !dbg !9990
  %srna480 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext479, i32 0, i32 1, !dbg !9990
  %322 = load %struct.StructRNA*, %struct.StructRNA** %srna480, align 8, !dbg !9990
  %323 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9990
  %324 = bitcast %struct.bNodeType* %323 to i8*, !dbg !9990
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %322, i8* %324), !dbg !9990
  br label %sw.epilog, !dbg !9990

sw.bb481:                                         ; preds = %entry
  %325 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9991
  %idname482 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %325, i32 0, i32 3, !dbg !9991
  %arraydecay483 = getelementptr inbounds [64 x i8], [64 x i8]* %idname482, i64 0, i64 0, !dbg !9991
  %call484 = call i8* @BLI_strncpy(i8* %arraydecay483, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.110, i64 0, i64 0), i64 64), !dbg !9991
  %call485 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.110, i64 0, i64 0)), !dbg !9991
  %326 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9991
  %ext486 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %326, i32 0, i32 44, !dbg !9991
  %srna487 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext486, i32 0, i32 1, !dbg !9991
  store %struct.StructRNA* %call485, %struct.StructRNA** %srna487, align 8, !dbg !9991
  %327 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9991
  %ext488 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %327, i32 0, i32 44, !dbg !9991
  %srna489 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext488, i32 0, i32 1, !dbg !9991
  %328 = load %struct.StructRNA*, %struct.StructRNA** %srna489, align 8, !dbg !9991
  %329 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9991
  %330 = bitcast %struct.bNodeType* %329 to i8*, !dbg !9991
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %328, i8* %330), !dbg !9991
  br label %sw.epilog, !dbg !9991

sw.bb490:                                         ; preds = %entry
  %331 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9992
  %idname491 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %331, i32 0, i32 3, !dbg !9992
  %arraydecay492 = getelementptr inbounds [64 x i8], [64 x i8]* %idname491, i64 0, i64 0, !dbg !9992
  %call493 = call i8* @BLI_strncpy(i8* %arraydecay492, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.111, i64 0, i64 0), i64 64), !dbg !9992
  %call494 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.111, i64 0, i64 0)), !dbg !9992
  %332 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9992
  %ext495 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %332, i32 0, i32 44, !dbg !9992
  %srna496 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext495, i32 0, i32 1, !dbg !9992
  store %struct.StructRNA* %call494, %struct.StructRNA** %srna496, align 8, !dbg !9992
  %333 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9992
  %ext497 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %333, i32 0, i32 44, !dbg !9992
  %srna498 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext497, i32 0, i32 1, !dbg !9992
  %334 = load %struct.StructRNA*, %struct.StructRNA** %srna498, align 8, !dbg !9992
  %335 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9992
  %336 = bitcast %struct.bNodeType* %335 to i8*, !dbg !9992
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %334, i8* %336), !dbg !9992
  br label %sw.epilog, !dbg !9992

sw.bb499:                                         ; preds = %entry
  %337 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9993
  %idname500 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %337, i32 0, i32 3, !dbg !9993
  %arraydecay501 = getelementptr inbounds [64 x i8], [64 x i8]* %idname500, i64 0, i64 0, !dbg !9993
  %call502 = call i8* @BLI_strncpy(i8* %arraydecay501, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.112, i64 0, i64 0), i64 64), !dbg !9993
  %call503 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.112, i64 0, i64 0)), !dbg !9993
  %338 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9993
  %ext504 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %338, i32 0, i32 44, !dbg !9993
  %srna505 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext504, i32 0, i32 1, !dbg !9993
  store %struct.StructRNA* %call503, %struct.StructRNA** %srna505, align 8, !dbg !9993
  %339 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9993
  %ext506 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %339, i32 0, i32 44, !dbg !9993
  %srna507 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext506, i32 0, i32 1, !dbg !9993
  %340 = load %struct.StructRNA*, %struct.StructRNA** %srna507, align 8, !dbg !9993
  %341 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9993
  %342 = bitcast %struct.bNodeType* %341 to i8*, !dbg !9993
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %340, i8* %342), !dbg !9993
  br label %sw.epilog, !dbg !9993

sw.bb508:                                         ; preds = %entry
  %343 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9994
  %idname509 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %343, i32 0, i32 3, !dbg !9994
  %arraydecay510 = getelementptr inbounds [64 x i8], [64 x i8]* %idname509, i64 0, i64 0, !dbg !9994
  %call511 = call i8* @BLI_strncpy(i8* %arraydecay510, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.113, i64 0, i64 0), i64 64), !dbg !9994
  %call512 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.113, i64 0, i64 0)), !dbg !9994
  %344 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9994
  %ext513 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %344, i32 0, i32 44, !dbg !9994
  %srna514 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext513, i32 0, i32 1, !dbg !9994
  store %struct.StructRNA* %call512, %struct.StructRNA** %srna514, align 8, !dbg !9994
  %345 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9994
  %ext515 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %345, i32 0, i32 44, !dbg !9994
  %srna516 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext515, i32 0, i32 1, !dbg !9994
  %346 = load %struct.StructRNA*, %struct.StructRNA** %srna516, align 8, !dbg !9994
  %347 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9994
  %348 = bitcast %struct.bNodeType* %347 to i8*, !dbg !9994
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %346, i8* %348), !dbg !9994
  br label %sw.epilog, !dbg !9994

sw.bb517:                                         ; preds = %entry
  %349 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9995
  %idname518 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %349, i32 0, i32 3, !dbg !9995
  %arraydecay519 = getelementptr inbounds [64 x i8], [64 x i8]* %idname518, i64 0, i64 0, !dbg !9995
  %call520 = call i8* @BLI_strncpy(i8* %arraydecay519, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.114, i64 0, i64 0), i64 64), !dbg !9995
  %call521 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.114, i64 0, i64 0)), !dbg !9995
  %350 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9995
  %ext522 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %350, i32 0, i32 44, !dbg !9995
  %srna523 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext522, i32 0, i32 1, !dbg !9995
  store %struct.StructRNA* %call521, %struct.StructRNA** %srna523, align 8, !dbg !9995
  %351 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9995
  %ext524 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %351, i32 0, i32 44, !dbg !9995
  %srna525 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext524, i32 0, i32 1, !dbg !9995
  %352 = load %struct.StructRNA*, %struct.StructRNA** %srna525, align 8, !dbg !9995
  %353 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9995
  %354 = bitcast %struct.bNodeType* %353 to i8*, !dbg !9995
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %352, i8* %354), !dbg !9995
  br label %sw.epilog, !dbg !9995

sw.bb526:                                         ; preds = %entry
  %355 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9996
  %idname527 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %355, i32 0, i32 3, !dbg !9996
  %arraydecay528 = getelementptr inbounds [64 x i8], [64 x i8]* %idname527, i64 0, i64 0, !dbg !9996
  %call529 = call i8* @BLI_strncpy(i8* %arraydecay528, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.115, i64 0, i64 0), i64 64), !dbg !9996
  %call530 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.115, i64 0, i64 0)), !dbg !9996
  %356 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9996
  %ext531 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %356, i32 0, i32 44, !dbg !9996
  %srna532 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext531, i32 0, i32 1, !dbg !9996
  store %struct.StructRNA* %call530, %struct.StructRNA** %srna532, align 8, !dbg !9996
  %357 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9996
  %ext533 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %357, i32 0, i32 44, !dbg !9996
  %srna534 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext533, i32 0, i32 1, !dbg !9996
  %358 = load %struct.StructRNA*, %struct.StructRNA** %srna534, align 8, !dbg !9996
  %359 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9996
  %360 = bitcast %struct.bNodeType* %359 to i8*, !dbg !9996
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %358, i8* %360), !dbg !9996
  br label %sw.epilog, !dbg !9996

sw.bb535:                                         ; preds = %entry
  %361 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9997
  %idname536 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %361, i32 0, i32 3, !dbg !9997
  %arraydecay537 = getelementptr inbounds [64 x i8], [64 x i8]* %idname536, i64 0, i64 0, !dbg !9997
  %call538 = call i8* @BLI_strncpy(i8* %arraydecay537, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.116, i64 0, i64 0), i64 64), !dbg !9997
  %call539 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.116, i64 0, i64 0)), !dbg !9997
  %362 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9997
  %ext540 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %362, i32 0, i32 44, !dbg !9997
  %srna541 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext540, i32 0, i32 1, !dbg !9997
  store %struct.StructRNA* %call539, %struct.StructRNA** %srna541, align 8, !dbg !9997
  %363 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9997
  %ext542 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %363, i32 0, i32 44, !dbg !9997
  %srna543 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext542, i32 0, i32 1, !dbg !9997
  %364 = load %struct.StructRNA*, %struct.StructRNA** %srna543, align 8, !dbg !9997
  %365 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9997
  %366 = bitcast %struct.bNodeType* %365 to i8*, !dbg !9997
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %364, i8* %366), !dbg !9997
  br label %sw.epilog, !dbg !9997

sw.bb544:                                         ; preds = %entry
  %367 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9998
  %idname545 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %367, i32 0, i32 3, !dbg !9998
  %arraydecay546 = getelementptr inbounds [64 x i8], [64 x i8]* %idname545, i64 0, i64 0, !dbg !9998
  %call547 = call i8* @BLI_strncpy(i8* %arraydecay546, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.117, i64 0, i64 0), i64 64), !dbg !9998
  %call548 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.117, i64 0, i64 0)), !dbg !9998
  %368 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9998
  %ext549 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %368, i32 0, i32 44, !dbg !9998
  %srna550 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext549, i32 0, i32 1, !dbg !9998
  store %struct.StructRNA* %call548, %struct.StructRNA** %srna550, align 8, !dbg !9998
  %369 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9998
  %ext551 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %369, i32 0, i32 44, !dbg !9998
  %srna552 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext551, i32 0, i32 1, !dbg !9998
  %370 = load %struct.StructRNA*, %struct.StructRNA** %srna552, align 8, !dbg !9998
  %371 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9998
  %372 = bitcast %struct.bNodeType* %371 to i8*, !dbg !9998
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %370, i8* %372), !dbg !9998
  br label %sw.epilog, !dbg !9998

sw.bb553:                                         ; preds = %entry
  %373 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9999
  %idname554 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %373, i32 0, i32 3, !dbg !9999
  %arraydecay555 = getelementptr inbounds [64 x i8], [64 x i8]* %idname554, i64 0, i64 0, !dbg !9999
  %call556 = call i8* @BLI_strncpy(i8* %arraydecay555, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.118, i64 0, i64 0), i64 64), !dbg !9999
  %call557 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.118, i64 0, i64 0)), !dbg !9999
  %374 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9999
  %ext558 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %374, i32 0, i32 44, !dbg !9999
  %srna559 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext558, i32 0, i32 1, !dbg !9999
  store %struct.StructRNA* %call557, %struct.StructRNA** %srna559, align 8, !dbg !9999
  %375 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9999
  %ext560 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %375, i32 0, i32 44, !dbg !9999
  %srna561 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext560, i32 0, i32 1, !dbg !9999
  %376 = load %struct.StructRNA*, %struct.StructRNA** %srna561, align 8, !dbg !9999
  %377 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !9999
  %378 = bitcast %struct.bNodeType* %377 to i8*, !dbg !9999
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %376, i8* %378), !dbg !9999
  br label %sw.epilog, !dbg !9999

sw.bb562:                                         ; preds = %entry
  %379 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10000
  %idname563 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %379, i32 0, i32 3, !dbg !10000
  %arraydecay564 = getelementptr inbounds [64 x i8], [64 x i8]* %idname563, i64 0, i64 0, !dbg !10000
  %call565 = call i8* @BLI_strncpy(i8* %arraydecay564, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.119, i64 0, i64 0), i64 64), !dbg !10000
  %call566 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.119, i64 0, i64 0)), !dbg !10000
  %380 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10000
  %ext567 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %380, i32 0, i32 44, !dbg !10000
  %srna568 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext567, i32 0, i32 1, !dbg !10000
  store %struct.StructRNA* %call566, %struct.StructRNA** %srna568, align 8, !dbg !10000
  %381 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10000
  %ext569 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %381, i32 0, i32 44, !dbg !10000
  %srna570 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext569, i32 0, i32 1, !dbg !10000
  %382 = load %struct.StructRNA*, %struct.StructRNA** %srna570, align 8, !dbg !10000
  %383 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10000
  %384 = bitcast %struct.bNodeType* %383 to i8*, !dbg !10000
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %382, i8* %384), !dbg !10000
  br label %sw.epilog, !dbg !10000

sw.bb571:                                         ; preds = %entry
  %385 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10001
  %idname572 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %385, i32 0, i32 3, !dbg !10001
  %arraydecay573 = getelementptr inbounds [64 x i8], [64 x i8]* %idname572, i64 0, i64 0, !dbg !10001
  %call574 = call i8* @BLI_strncpy(i8* %arraydecay573, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.120, i64 0, i64 0), i64 64), !dbg !10001
  %call575 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.120, i64 0, i64 0)), !dbg !10001
  %386 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10001
  %ext576 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %386, i32 0, i32 44, !dbg !10001
  %srna577 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext576, i32 0, i32 1, !dbg !10001
  store %struct.StructRNA* %call575, %struct.StructRNA** %srna577, align 8, !dbg !10001
  %387 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10001
  %ext578 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %387, i32 0, i32 44, !dbg !10001
  %srna579 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext578, i32 0, i32 1, !dbg !10001
  %388 = load %struct.StructRNA*, %struct.StructRNA** %srna579, align 8, !dbg !10001
  %389 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10001
  %390 = bitcast %struct.bNodeType* %389 to i8*, !dbg !10001
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %388, i8* %390), !dbg !10001
  br label %sw.epilog, !dbg !10001

sw.bb580:                                         ; preds = %entry
  %391 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10002
  %idname581 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %391, i32 0, i32 3, !dbg !10002
  %arraydecay582 = getelementptr inbounds [64 x i8], [64 x i8]* %idname581, i64 0, i64 0, !dbg !10002
  %call583 = call i8* @BLI_strncpy(i8* %arraydecay582, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.121, i64 0, i64 0), i64 64), !dbg !10002
  %call584 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.121, i64 0, i64 0)), !dbg !10002
  %392 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10002
  %ext585 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %392, i32 0, i32 44, !dbg !10002
  %srna586 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext585, i32 0, i32 1, !dbg !10002
  store %struct.StructRNA* %call584, %struct.StructRNA** %srna586, align 8, !dbg !10002
  %393 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10002
  %ext587 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %393, i32 0, i32 44, !dbg !10002
  %srna588 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext587, i32 0, i32 1, !dbg !10002
  %394 = load %struct.StructRNA*, %struct.StructRNA** %srna588, align 8, !dbg !10002
  %395 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10002
  %396 = bitcast %struct.bNodeType* %395 to i8*, !dbg !10002
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %394, i8* %396), !dbg !10002
  br label %sw.epilog, !dbg !10002

sw.bb589:                                         ; preds = %entry
  %397 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10003
  %idname590 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %397, i32 0, i32 3, !dbg !10003
  %arraydecay591 = getelementptr inbounds [64 x i8], [64 x i8]* %idname590, i64 0, i64 0, !dbg !10003
  %call592 = call i8* @BLI_strncpy(i8* %arraydecay591, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.122, i64 0, i64 0), i64 64), !dbg !10003
  %call593 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.122, i64 0, i64 0)), !dbg !10003
  %398 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10003
  %ext594 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %398, i32 0, i32 44, !dbg !10003
  %srna595 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext594, i32 0, i32 1, !dbg !10003
  store %struct.StructRNA* %call593, %struct.StructRNA** %srna595, align 8, !dbg !10003
  %399 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10003
  %ext596 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %399, i32 0, i32 44, !dbg !10003
  %srna597 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext596, i32 0, i32 1, !dbg !10003
  %400 = load %struct.StructRNA*, %struct.StructRNA** %srna597, align 8, !dbg !10003
  %401 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10003
  %402 = bitcast %struct.bNodeType* %401 to i8*, !dbg !10003
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %400, i8* %402), !dbg !10003
  br label %sw.epilog, !dbg !10003

sw.bb598:                                         ; preds = %entry
  %403 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10004
  %idname599 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %403, i32 0, i32 3, !dbg !10004
  %arraydecay600 = getelementptr inbounds [64 x i8], [64 x i8]* %idname599, i64 0, i64 0, !dbg !10004
  %call601 = call i8* @BLI_strncpy(i8* %arraydecay600, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.123, i64 0, i64 0), i64 64), !dbg !10004
  %call602 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.123, i64 0, i64 0)), !dbg !10004
  %404 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10004
  %ext603 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %404, i32 0, i32 44, !dbg !10004
  %srna604 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext603, i32 0, i32 1, !dbg !10004
  store %struct.StructRNA* %call602, %struct.StructRNA** %srna604, align 8, !dbg !10004
  %405 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10004
  %ext605 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %405, i32 0, i32 44, !dbg !10004
  %srna606 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext605, i32 0, i32 1, !dbg !10004
  %406 = load %struct.StructRNA*, %struct.StructRNA** %srna606, align 8, !dbg !10004
  %407 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10004
  %408 = bitcast %struct.bNodeType* %407 to i8*, !dbg !10004
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %406, i8* %408), !dbg !10004
  br label %sw.epilog, !dbg !10004

sw.bb607:                                         ; preds = %entry
  %409 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10005
  %idname608 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %409, i32 0, i32 3, !dbg !10005
  %arraydecay609 = getelementptr inbounds [64 x i8], [64 x i8]* %idname608, i64 0, i64 0, !dbg !10005
  %call610 = call i8* @BLI_strncpy(i8* %arraydecay609, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.124, i64 0, i64 0), i64 64), !dbg !10005
  %call611 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.124, i64 0, i64 0)), !dbg !10005
  %410 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10005
  %ext612 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %410, i32 0, i32 44, !dbg !10005
  %srna613 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext612, i32 0, i32 1, !dbg !10005
  store %struct.StructRNA* %call611, %struct.StructRNA** %srna613, align 8, !dbg !10005
  %411 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10005
  %ext614 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %411, i32 0, i32 44, !dbg !10005
  %srna615 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext614, i32 0, i32 1, !dbg !10005
  %412 = load %struct.StructRNA*, %struct.StructRNA** %srna615, align 8, !dbg !10005
  %413 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10005
  %414 = bitcast %struct.bNodeType* %413 to i8*, !dbg !10005
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %412, i8* %414), !dbg !10005
  br label %sw.epilog, !dbg !10005

sw.bb616:                                         ; preds = %entry
  %415 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10006
  %idname617 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %415, i32 0, i32 3, !dbg !10006
  %arraydecay618 = getelementptr inbounds [64 x i8], [64 x i8]* %idname617, i64 0, i64 0, !dbg !10006
  %call619 = call i8* @BLI_strncpy(i8* %arraydecay618, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.125, i64 0, i64 0), i64 64), !dbg !10006
  %call620 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.125, i64 0, i64 0)), !dbg !10006
  %416 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10006
  %ext621 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %416, i32 0, i32 44, !dbg !10006
  %srna622 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext621, i32 0, i32 1, !dbg !10006
  store %struct.StructRNA* %call620, %struct.StructRNA** %srna622, align 8, !dbg !10006
  %417 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10006
  %ext623 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %417, i32 0, i32 44, !dbg !10006
  %srna624 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext623, i32 0, i32 1, !dbg !10006
  %418 = load %struct.StructRNA*, %struct.StructRNA** %srna624, align 8, !dbg !10006
  %419 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10006
  %420 = bitcast %struct.bNodeType* %419 to i8*, !dbg !10006
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %418, i8* %420), !dbg !10006
  br label %sw.epilog, !dbg !10006

sw.bb625:                                         ; preds = %entry
  %421 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10007
  %idname626 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %421, i32 0, i32 3, !dbg !10007
  %arraydecay627 = getelementptr inbounds [64 x i8], [64 x i8]* %idname626, i64 0, i64 0, !dbg !10007
  %call628 = call i8* @BLI_strncpy(i8* %arraydecay627, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.126, i64 0, i64 0), i64 64), !dbg !10007
  %call629 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.126, i64 0, i64 0)), !dbg !10007
  %422 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10007
  %ext630 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %422, i32 0, i32 44, !dbg !10007
  %srna631 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext630, i32 0, i32 1, !dbg !10007
  store %struct.StructRNA* %call629, %struct.StructRNA** %srna631, align 8, !dbg !10007
  %423 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10007
  %ext632 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %423, i32 0, i32 44, !dbg !10007
  %srna633 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext632, i32 0, i32 1, !dbg !10007
  %424 = load %struct.StructRNA*, %struct.StructRNA** %srna633, align 8, !dbg !10007
  %425 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10007
  %426 = bitcast %struct.bNodeType* %425 to i8*, !dbg !10007
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %424, i8* %426), !dbg !10007
  br label %sw.epilog, !dbg !10007

sw.bb634:                                         ; preds = %entry
  %427 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10008
  %idname635 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %427, i32 0, i32 3, !dbg !10008
  %arraydecay636 = getelementptr inbounds [64 x i8], [64 x i8]* %idname635, i64 0, i64 0, !dbg !10008
  %call637 = call i8* @BLI_strncpy(i8* %arraydecay636, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.127, i64 0, i64 0), i64 64), !dbg !10008
  %call638 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.127, i64 0, i64 0)), !dbg !10008
  %428 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10008
  %ext639 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %428, i32 0, i32 44, !dbg !10008
  %srna640 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext639, i32 0, i32 1, !dbg !10008
  store %struct.StructRNA* %call638, %struct.StructRNA** %srna640, align 8, !dbg !10008
  %429 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10008
  %ext641 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %429, i32 0, i32 44, !dbg !10008
  %srna642 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext641, i32 0, i32 1, !dbg !10008
  %430 = load %struct.StructRNA*, %struct.StructRNA** %srna642, align 8, !dbg !10008
  %431 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10008
  %432 = bitcast %struct.bNodeType* %431 to i8*, !dbg !10008
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %430, i8* %432), !dbg !10008
  br label %sw.epilog, !dbg !10008

sw.bb643:                                         ; preds = %entry
  %433 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10009
  %idname644 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %433, i32 0, i32 3, !dbg !10009
  %arraydecay645 = getelementptr inbounds [64 x i8], [64 x i8]* %idname644, i64 0, i64 0, !dbg !10009
  %call646 = call i8* @BLI_strncpy(i8* %arraydecay645, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.128, i64 0, i64 0), i64 64), !dbg !10009
  %call647 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.128, i64 0, i64 0)), !dbg !10009
  %434 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10009
  %ext648 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %434, i32 0, i32 44, !dbg !10009
  %srna649 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext648, i32 0, i32 1, !dbg !10009
  store %struct.StructRNA* %call647, %struct.StructRNA** %srna649, align 8, !dbg !10009
  %435 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10009
  %ext650 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %435, i32 0, i32 44, !dbg !10009
  %srna651 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext650, i32 0, i32 1, !dbg !10009
  %436 = load %struct.StructRNA*, %struct.StructRNA** %srna651, align 8, !dbg !10009
  %437 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10009
  %438 = bitcast %struct.bNodeType* %437 to i8*, !dbg !10009
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %436, i8* %438), !dbg !10009
  br label %sw.epilog, !dbg !10009

sw.bb652:                                         ; preds = %entry
  %439 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10010
  %idname653 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %439, i32 0, i32 3, !dbg !10010
  %arraydecay654 = getelementptr inbounds [64 x i8], [64 x i8]* %idname653, i64 0, i64 0, !dbg !10010
  %call655 = call i8* @BLI_strncpy(i8* %arraydecay654, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.129, i64 0, i64 0), i64 64), !dbg !10010
  %call656 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.129, i64 0, i64 0)), !dbg !10010
  %440 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10010
  %ext657 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %440, i32 0, i32 44, !dbg !10010
  %srna658 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext657, i32 0, i32 1, !dbg !10010
  store %struct.StructRNA* %call656, %struct.StructRNA** %srna658, align 8, !dbg !10010
  %441 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10010
  %ext659 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %441, i32 0, i32 44, !dbg !10010
  %srna660 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext659, i32 0, i32 1, !dbg !10010
  %442 = load %struct.StructRNA*, %struct.StructRNA** %srna660, align 8, !dbg !10010
  %443 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10010
  %444 = bitcast %struct.bNodeType* %443 to i8*, !dbg !10010
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %442, i8* %444), !dbg !10010
  br label %sw.epilog, !dbg !10010

sw.bb661:                                         ; preds = %entry
  %445 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10011
  %idname662 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %445, i32 0, i32 3, !dbg !10011
  %arraydecay663 = getelementptr inbounds [64 x i8], [64 x i8]* %idname662, i64 0, i64 0, !dbg !10011
  %call664 = call i8* @BLI_strncpy(i8* %arraydecay663, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.130, i64 0, i64 0), i64 64), !dbg !10011
  %call665 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.130, i64 0, i64 0)), !dbg !10011
  %446 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10011
  %ext666 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %446, i32 0, i32 44, !dbg !10011
  %srna667 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext666, i32 0, i32 1, !dbg !10011
  store %struct.StructRNA* %call665, %struct.StructRNA** %srna667, align 8, !dbg !10011
  %447 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10011
  %ext668 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %447, i32 0, i32 44, !dbg !10011
  %srna669 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext668, i32 0, i32 1, !dbg !10011
  %448 = load %struct.StructRNA*, %struct.StructRNA** %srna669, align 8, !dbg !10011
  %449 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10011
  %450 = bitcast %struct.bNodeType* %449 to i8*, !dbg !10011
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %448, i8* %450), !dbg !10011
  br label %sw.epilog, !dbg !10011

sw.bb670:                                         ; preds = %entry
  %451 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10012
  %idname671 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %451, i32 0, i32 3, !dbg !10012
  %arraydecay672 = getelementptr inbounds [64 x i8], [64 x i8]* %idname671, i64 0, i64 0, !dbg !10012
  %call673 = call i8* @BLI_strncpy(i8* %arraydecay672, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.131, i64 0, i64 0), i64 64), !dbg !10012
  %call674 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.131, i64 0, i64 0)), !dbg !10012
  %452 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10012
  %ext675 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %452, i32 0, i32 44, !dbg !10012
  %srna676 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext675, i32 0, i32 1, !dbg !10012
  store %struct.StructRNA* %call674, %struct.StructRNA** %srna676, align 8, !dbg !10012
  %453 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10012
  %ext677 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %453, i32 0, i32 44, !dbg !10012
  %srna678 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext677, i32 0, i32 1, !dbg !10012
  %454 = load %struct.StructRNA*, %struct.StructRNA** %srna678, align 8, !dbg !10012
  %455 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10012
  %456 = bitcast %struct.bNodeType* %455 to i8*, !dbg !10012
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %454, i8* %456), !dbg !10012
  br label %sw.epilog, !dbg !10012

sw.bb679:                                         ; preds = %entry
  %457 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10013
  %idname680 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %457, i32 0, i32 3, !dbg !10013
  %arraydecay681 = getelementptr inbounds [64 x i8], [64 x i8]* %idname680, i64 0, i64 0, !dbg !10013
  %call682 = call i8* @BLI_strncpy(i8* %arraydecay681, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.132, i64 0, i64 0), i64 64), !dbg !10013
  %call683 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.132, i64 0, i64 0)), !dbg !10013
  %458 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10013
  %ext684 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %458, i32 0, i32 44, !dbg !10013
  %srna685 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext684, i32 0, i32 1, !dbg !10013
  store %struct.StructRNA* %call683, %struct.StructRNA** %srna685, align 8, !dbg !10013
  %459 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10013
  %ext686 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %459, i32 0, i32 44, !dbg !10013
  %srna687 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext686, i32 0, i32 1, !dbg !10013
  %460 = load %struct.StructRNA*, %struct.StructRNA** %srna687, align 8, !dbg !10013
  %461 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10013
  %462 = bitcast %struct.bNodeType* %461 to i8*, !dbg !10013
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %460, i8* %462), !dbg !10013
  br label %sw.epilog, !dbg !10013

sw.bb688:                                         ; preds = %entry
  %463 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10014
  %idname689 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %463, i32 0, i32 3, !dbg !10014
  %arraydecay690 = getelementptr inbounds [64 x i8], [64 x i8]* %idname689, i64 0, i64 0, !dbg !10014
  %call691 = call i8* @BLI_strncpy(i8* %arraydecay690, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.133, i64 0, i64 0), i64 64), !dbg !10014
  %call692 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.133, i64 0, i64 0)), !dbg !10014
  %464 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10014
  %ext693 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %464, i32 0, i32 44, !dbg !10014
  %srna694 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext693, i32 0, i32 1, !dbg !10014
  store %struct.StructRNA* %call692, %struct.StructRNA** %srna694, align 8, !dbg !10014
  %465 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10014
  %ext695 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %465, i32 0, i32 44, !dbg !10014
  %srna696 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext695, i32 0, i32 1, !dbg !10014
  %466 = load %struct.StructRNA*, %struct.StructRNA** %srna696, align 8, !dbg !10014
  %467 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10014
  %468 = bitcast %struct.bNodeType* %467 to i8*, !dbg !10014
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %466, i8* %468), !dbg !10014
  br label %sw.epilog, !dbg !10014

sw.bb697:                                         ; preds = %entry
  %469 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10015
  %idname698 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %469, i32 0, i32 3, !dbg !10015
  %arraydecay699 = getelementptr inbounds [64 x i8], [64 x i8]* %idname698, i64 0, i64 0, !dbg !10015
  %call700 = call i8* @BLI_strncpy(i8* %arraydecay699, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.134, i64 0, i64 0), i64 64), !dbg !10015
  %call701 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.134, i64 0, i64 0)), !dbg !10015
  %470 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10015
  %ext702 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %470, i32 0, i32 44, !dbg !10015
  %srna703 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext702, i32 0, i32 1, !dbg !10015
  store %struct.StructRNA* %call701, %struct.StructRNA** %srna703, align 8, !dbg !10015
  %471 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10015
  %ext704 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %471, i32 0, i32 44, !dbg !10015
  %srna705 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext704, i32 0, i32 1, !dbg !10015
  %472 = load %struct.StructRNA*, %struct.StructRNA** %srna705, align 8, !dbg !10015
  %473 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10015
  %474 = bitcast %struct.bNodeType* %473 to i8*, !dbg !10015
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %472, i8* %474), !dbg !10015
  br label %sw.epilog, !dbg !10015

sw.bb706:                                         ; preds = %entry
  %475 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10016
  %idname707 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %475, i32 0, i32 3, !dbg !10016
  %arraydecay708 = getelementptr inbounds [64 x i8], [64 x i8]* %idname707, i64 0, i64 0, !dbg !10016
  %call709 = call i8* @BLI_strncpy(i8* %arraydecay708, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.135, i64 0, i64 0), i64 64), !dbg !10016
  %call710 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.135, i64 0, i64 0)), !dbg !10016
  %476 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10016
  %ext711 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %476, i32 0, i32 44, !dbg !10016
  %srna712 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext711, i32 0, i32 1, !dbg !10016
  store %struct.StructRNA* %call710, %struct.StructRNA** %srna712, align 8, !dbg !10016
  %477 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10016
  %ext713 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %477, i32 0, i32 44, !dbg !10016
  %srna714 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext713, i32 0, i32 1, !dbg !10016
  %478 = load %struct.StructRNA*, %struct.StructRNA** %srna714, align 8, !dbg !10016
  %479 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10016
  %480 = bitcast %struct.bNodeType* %479 to i8*, !dbg !10016
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %478, i8* %480), !dbg !10016
  br label %sw.epilog, !dbg !10016

sw.bb715:                                         ; preds = %entry
  %481 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10017
  %idname716 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %481, i32 0, i32 3, !dbg !10017
  %arraydecay717 = getelementptr inbounds [64 x i8], [64 x i8]* %idname716, i64 0, i64 0, !dbg !10017
  %call718 = call i8* @BLI_strncpy(i8* %arraydecay717, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.136, i64 0, i64 0), i64 64), !dbg !10017
  %call719 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.136, i64 0, i64 0)), !dbg !10017
  %482 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10017
  %ext720 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %482, i32 0, i32 44, !dbg !10017
  %srna721 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext720, i32 0, i32 1, !dbg !10017
  store %struct.StructRNA* %call719, %struct.StructRNA** %srna721, align 8, !dbg !10017
  %483 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10017
  %ext722 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %483, i32 0, i32 44, !dbg !10017
  %srna723 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext722, i32 0, i32 1, !dbg !10017
  %484 = load %struct.StructRNA*, %struct.StructRNA** %srna723, align 8, !dbg !10017
  %485 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10017
  %486 = bitcast %struct.bNodeType* %485 to i8*, !dbg !10017
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %484, i8* %486), !dbg !10017
  br label %sw.epilog, !dbg !10017

sw.bb724:                                         ; preds = %entry
  %487 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10018
  %idname725 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %487, i32 0, i32 3, !dbg !10018
  %arraydecay726 = getelementptr inbounds [64 x i8], [64 x i8]* %idname725, i64 0, i64 0, !dbg !10018
  %call727 = call i8* @BLI_strncpy(i8* %arraydecay726, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.137, i64 0, i64 0), i64 64), !dbg !10018
  %call728 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.137, i64 0, i64 0)), !dbg !10018
  %488 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10018
  %ext729 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %488, i32 0, i32 44, !dbg !10018
  %srna730 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext729, i32 0, i32 1, !dbg !10018
  store %struct.StructRNA* %call728, %struct.StructRNA** %srna730, align 8, !dbg !10018
  %489 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10018
  %ext731 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %489, i32 0, i32 44, !dbg !10018
  %srna732 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext731, i32 0, i32 1, !dbg !10018
  %490 = load %struct.StructRNA*, %struct.StructRNA** %srna732, align 8, !dbg !10018
  %491 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10018
  %492 = bitcast %struct.bNodeType* %491 to i8*, !dbg !10018
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %490, i8* %492), !dbg !10018
  br label %sw.epilog, !dbg !10018

sw.bb733:                                         ; preds = %entry
  %493 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10019
  %idname734 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %493, i32 0, i32 3, !dbg !10019
  %arraydecay735 = getelementptr inbounds [64 x i8], [64 x i8]* %idname734, i64 0, i64 0, !dbg !10019
  %call736 = call i8* @BLI_strncpy(i8* %arraydecay735, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.138, i64 0, i64 0), i64 64), !dbg !10019
  %call737 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.138, i64 0, i64 0)), !dbg !10019
  %494 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10019
  %ext738 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %494, i32 0, i32 44, !dbg !10019
  %srna739 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext738, i32 0, i32 1, !dbg !10019
  store %struct.StructRNA* %call737, %struct.StructRNA** %srna739, align 8, !dbg !10019
  %495 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10019
  %ext740 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %495, i32 0, i32 44, !dbg !10019
  %srna741 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext740, i32 0, i32 1, !dbg !10019
  %496 = load %struct.StructRNA*, %struct.StructRNA** %srna741, align 8, !dbg !10019
  %497 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10019
  %498 = bitcast %struct.bNodeType* %497 to i8*, !dbg !10019
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %496, i8* %498), !dbg !10019
  br label %sw.epilog, !dbg !10019

sw.bb742:                                         ; preds = %entry
  %499 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10020
  %idname743 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %499, i32 0, i32 3, !dbg !10020
  %arraydecay744 = getelementptr inbounds [64 x i8], [64 x i8]* %idname743, i64 0, i64 0, !dbg !10020
  %call745 = call i8* @BLI_strncpy(i8* %arraydecay744, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.139, i64 0, i64 0), i64 64), !dbg !10020
  %call746 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.139, i64 0, i64 0)), !dbg !10020
  %500 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10020
  %ext747 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %500, i32 0, i32 44, !dbg !10020
  %srna748 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext747, i32 0, i32 1, !dbg !10020
  store %struct.StructRNA* %call746, %struct.StructRNA** %srna748, align 8, !dbg !10020
  %501 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10020
  %ext749 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %501, i32 0, i32 44, !dbg !10020
  %srna750 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext749, i32 0, i32 1, !dbg !10020
  %502 = load %struct.StructRNA*, %struct.StructRNA** %srna750, align 8, !dbg !10020
  %503 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10020
  %504 = bitcast %struct.bNodeType* %503 to i8*, !dbg !10020
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %502, i8* %504), !dbg !10020
  br label %sw.epilog, !dbg !10020

sw.bb751:                                         ; preds = %entry
  %505 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10021
  %idname752 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %505, i32 0, i32 3, !dbg !10021
  %arraydecay753 = getelementptr inbounds [64 x i8], [64 x i8]* %idname752, i64 0, i64 0, !dbg !10021
  %call754 = call i8* @BLI_strncpy(i8* %arraydecay753, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.140, i64 0, i64 0), i64 64), !dbg !10021
  %call755 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.140, i64 0, i64 0)), !dbg !10021
  %506 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10021
  %ext756 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %506, i32 0, i32 44, !dbg !10021
  %srna757 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext756, i32 0, i32 1, !dbg !10021
  store %struct.StructRNA* %call755, %struct.StructRNA** %srna757, align 8, !dbg !10021
  %507 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10021
  %ext758 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %507, i32 0, i32 44, !dbg !10021
  %srna759 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext758, i32 0, i32 1, !dbg !10021
  %508 = load %struct.StructRNA*, %struct.StructRNA** %srna759, align 8, !dbg !10021
  %509 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10021
  %510 = bitcast %struct.bNodeType* %509 to i8*, !dbg !10021
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %508, i8* %510), !dbg !10021
  br label %sw.epilog, !dbg !10021

sw.bb760:                                         ; preds = %entry
  %511 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10022
  %idname761 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %511, i32 0, i32 3, !dbg !10022
  %arraydecay762 = getelementptr inbounds [64 x i8], [64 x i8]* %idname761, i64 0, i64 0, !dbg !10022
  %call763 = call i8* @BLI_strncpy(i8* %arraydecay762, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.141, i64 0, i64 0), i64 64), !dbg !10022
  %call764 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.141, i64 0, i64 0)), !dbg !10022
  %512 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10022
  %ext765 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %512, i32 0, i32 44, !dbg !10022
  %srna766 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext765, i32 0, i32 1, !dbg !10022
  store %struct.StructRNA* %call764, %struct.StructRNA** %srna766, align 8, !dbg !10022
  %513 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10022
  %ext767 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %513, i32 0, i32 44, !dbg !10022
  %srna768 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext767, i32 0, i32 1, !dbg !10022
  %514 = load %struct.StructRNA*, %struct.StructRNA** %srna768, align 8, !dbg !10022
  %515 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10022
  %516 = bitcast %struct.bNodeType* %515 to i8*, !dbg !10022
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %514, i8* %516), !dbg !10022
  br label %sw.epilog, !dbg !10022

sw.bb769:                                         ; preds = %entry
  %517 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10023
  %idname770 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %517, i32 0, i32 3, !dbg !10023
  %arraydecay771 = getelementptr inbounds [64 x i8], [64 x i8]* %idname770, i64 0, i64 0, !dbg !10023
  %call772 = call i8* @BLI_strncpy(i8* %arraydecay771, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.142, i64 0, i64 0), i64 64), !dbg !10023
  %call773 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.142, i64 0, i64 0)), !dbg !10023
  %518 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10023
  %ext774 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %518, i32 0, i32 44, !dbg !10023
  %srna775 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext774, i32 0, i32 1, !dbg !10023
  store %struct.StructRNA* %call773, %struct.StructRNA** %srna775, align 8, !dbg !10023
  %519 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10023
  %ext776 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %519, i32 0, i32 44, !dbg !10023
  %srna777 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext776, i32 0, i32 1, !dbg !10023
  %520 = load %struct.StructRNA*, %struct.StructRNA** %srna777, align 8, !dbg !10023
  %521 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10023
  %522 = bitcast %struct.bNodeType* %521 to i8*, !dbg !10023
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %520, i8* %522), !dbg !10023
  br label %sw.epilog, !dbg !10023

sw.bb778:                                         ; preds = %entry
  %523 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10024
  %idname779 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %523, i32 0, i32 3, !dbg !10024
  %arraydecay780 = getelementptr inbounds [64 x i8], [64 x i8]* %idname779, i64 0, i64 0, !dbg !10024
  %call781 = call i8* @BLI_strncpy(i8* %arraydecay780, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.143, i64 0, i64 0), i64 64), !dbg !10024
  %call782 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.143, i64 0, i64 0)), !dbg !10024
  %524 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10024
  %ext783 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %524, i32 0, i32 44, !dbg !10024
  %srna784 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext783, i32 0, i32 1, !dbg !10024
  store %struct.StructRNA* %call782, %struct.StructRNA** %srna784, align 8, !dbg !10024
  %525 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10024
  %ext785 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %525, i32 0, i32 44, !dbg !10024
  %srna786 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext785, i32 0, i32 1, !dbg !10024
  %526 = load %struct.StructRNA*, %struct.StructRNA** %srna786, align 8, !dbg !10024
  %527 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10024
  %528 = bitcast %struct.bNodeType* %527 to i8*, !dbg !10024
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %526, i8* %528), !dbg !10024
  br label %sw.epilog, !dbg !10024

sw.bb787:                                         ; preds = %entry
  %529 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10025
  %idname788 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %529, i32 0, i32 3, !dbg !10025
  %arraydecay789 = getelementptr inbounds [64 x i8], [64 x i8]* %idname788, i64 0, i64 0, !dbg !10025
  %call790 = call i8* @BLI_strncpy(i8* %arraydecay789, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.144, i64 0, i64 0), i64 64), !dbg !10025
  %call791 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.144, i64 0, i64 0)), !dbg !10025
  %530 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10025
  %ext792 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %530, i32 0, i32 44, !dbg !10025
  %srna793 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext792, i32 0, i32 1, !dbg !10025
  store %struct.StructRNA* %call791, %struct.StructRNA** %srna793, align 8, !dbg !10025
  %531 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10025
  %ext794 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %531, i32 0, i32 44, !dbg !10025
  %srna795 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext794, i32 0, i32 1, !dbg !10025
  %532 = load %struct.StructRNA*, %struct.StructRNA** %srna795, align 8, !dbg !10025
  %533 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10025
  %534 = bitcast %struct.bNodeType* %533 to i8*, !dbg !10025
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %532, i8* %534), !dbg !10025
  br label %sw.epilog, !dbg !10025

sw.bb796:                                         ; preds = %entry
  %535 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10026
  %idname797 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %535, i32 0, i32 3, !dbg !10026
  %arraydecay798 = getelementptr inbounds [64 x i8], [64 x i8]* %idname797, i64 0, i64 0, !dbg !10026
  %call799 = call i8* @BLI_strncpy(i8* %arraydecay798, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.145, i64 0, i64 0), i64 64), !dbg !10026
  %call800 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.145, i64 0, i64 0)), !dbg !10026
  %536 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10026
  %ext801 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %536, i32 0, i32 44, !dbg !10026
  %srna802 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext801, i32 0, i32 1, !dbg !10026
  store %struct.StructRNA* %call800, %struct.StructRNA** %srna802, align 8, !dbg !10026
  %537 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10026
  %ext803 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %537, i32 0, i32 44, !dbg !10026
  %srna804 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext803, i32 0, i32 1, !dbg !10026
  %538 = load %struct.StructRNA*, %struct.StructRNA** %srna804, align 8, !dbg !10026
  %539 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10026
  %540 = bitcast %struct.bNodeType* %539 to i8*, !dbg !10026
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %538, i8* %540), !dbg !10026
  br label %sw.epilog, !dbg !10026

sw.bb805:                                         ; preds = %entry
  %541 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10027
  %idname806 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %541, i32 0, i32 3, !dbg !10027
  %arraydecay807 = getelementptr inbounds [64 x i8], [64 x i8]* %idname806, i64 0, i64 0, !dbg !10027
  %call808 = call i8* @BLI_strncpy(i8* %arraydecay807, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.146, i64 0, i64 0), i64 64), !dbg !10027
  %call809 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.146, i64 0, i64 0)), !dbg !10027
  %542 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10027
  %ext810 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %542, i32 0, i32 44, !dbg !10027
  %srna811 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext810, i32 0, i32 1, !dbg !10027
  store %struct.StructRNA* %call809, %struct.StructRNA** %srna811, align 8, !dbg !10027
  %543 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10027
  %ext812 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %543, i32 0, i32 44, !dbg !10027
  %srna813 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext812, i32 0, i32 1, !dbg !10027
  %544 = load %struct.StructRNA*, %struct.StructRNA** %srna813, align 8, !dbg !10027
  %545 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10027
  %546 = bitcast %struct.bNodeType* %545 to i8*, !dbg !10027
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %544, i8* %546), !dbg !10027
  br label %sw.epilog, !dbg !10027

sw.bb814:                                         ; preds = %entry
  %547 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10028
  %idname815 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %547, i32 0, i32 3, !dbg !10028
  %arraydecay816 = getelementptr inbounds [64 x i8], [64 x i8]* %idname815, i64 0, i64 0, !dbg !10028
  %call817 = call i8* @BLI_strncpy(i8* %arraydecay816, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.147, i64 0, i64 0), i64 64), !dbg !10028
  %call818 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.147, i64 0, i64 0)), !dbg !10028
  %548 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10028
  %ext819 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %548, i32 0, i32 44, !dbg !10028
  %srna820 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext819, i32 0, i32 1, !dbg !10028
  store %struct.StructRNA* %call818, %struct.StructRNA** %srna820, align 8, !dbg !10028
  %549 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10028
  %ext821 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %549, i32 0, i32 44, !dbg !10028
  %srna822 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext821, i32 0, i32 1, !dbg !10028
  %550 = load %struct.StructRNA*, %struct.StructRNA** %srna822, align 8, !dbg !10028
  %551 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10028
  %552 = bitcast %struct.bNodeType* %551 to i8*, !dbg !10028
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %550, i8* %552), !dbg !10028
  br label %sw.epilog, !dbg !10028

sw.bb823:                                         ; preds = %entry
  %553 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10029
  %idname824 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %553, i32 0, i32 3, !dbg !10029
  %arraydecay825 = getelementptr inbounds [64 x i8], [64 x i8]* %idname824, i64 0, i64 0, !dbg !10029
  %call826 = call i8* @BLI_strncpy(i8* %arraydecay825, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.148, i64 0, i64 0), i64 64), !dbg !10029
  %call827 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.148, i64 0, i64 0)), !dbg !10029
  %554 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10029
  %ext828 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %554, i32 0, i32 44, !dbg !10029
  %srna829 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext828, i32 0, i32 1, !dbg !10029
  store %struct.StructRNA* %call827, %struct.StructRNA** %srna829, align 8, !dbg !10029
  %555 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10029
  %ext830 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %555, i32 0, i32 44, !dbg !10029
  %srna831 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext830, i32 0, i32 1, !dbg !10029
  %556 = load %struct.StructRNA*, %struct.StructRNA** %srna831, align 8, !dbg !10029
  %557 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10029
  %558 = bitcast %struct.bNodeType* %557 to i8*, !dbg !10029
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %556, i8* %558), !dbg !10029
  br label %sw.epilog, !dbg !10029

sw.bb832:                                         ; preds = %entry
  %559 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10030
  %idname833 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %559, i32 0, i32 3, !dbg !10030
  %arraydecay834 = getelementptr inbounds [64 x i8], [64 x i8]* %idname833, i64 0, i64 0, !dbg !10030
  %call835 = call i8* @BLI_strncpy(i8* %arraydecay834, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.149, i64 0, i64 0), i64 64), !dbg !10030
  %call836 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.149, i64 0, i64 0)), !dbg !10030
  %560 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10030
  %ext837 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %560, i32 0, i32 44, !dbg !10030
  %srna838 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext837, i32 0, i32 1, !dbg !10030
  store %struct.StructRNA* %call836, %struct.StructRNA** %srna838, align 8, !dbg !10030
  %561 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10030
  %ext839 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %561, i32 0, i32 44, !dbg !10030
  %srna840 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext839, i32 0, i32 1, !dbg !10030
  %562 = load %struct.StructRNA*, %struct.StructRNA** %srna840, align 8, !dbg !10030
  %563 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10030
  %564 = bitcast %struct.bNodeType* %563 to i8*, !dbg !10030
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %562, i8* %564), !dbg !10030
  br label %sw.epilog, !dbg !10030

sw.bb841:                                         ; preds = %entry
  %565 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10031
  %idname842 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %565, i32 0, i32 3, !dbg !10031
  %arraydecay843 = getelementptr inbounds [64 x i8], [64 x i8]* %idname842, i64 0, i64 0, !dbg !10031
  %call844 = call i8* @BLI_strncpy(i8* %arraydecay843, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.150, i64 0, i64 0), i64 64), !dbg !10031
  %call845 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.150, i64 0, i64 0)), !dbg !10031
  %566 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10031
  %ext846 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %566, i32 0, i32 44, !dbg !10031
  %srna847 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext846, i32 0, i32 1, !dbg !10031
  store %struct.StructRNA* %call845, %struct.StructRNA** %srna847, align 8, !dbg !10031
  %567 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10031
  %ext848 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %567, i32 0, i32 44, !dbg !10031
  %srna849 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext848, i32 0, i32 1, !dbg !10031
  %568 = load %struct.StructRNA*, %struct.StructRNA** %srna849, align 8, !dbg !10031
  %569 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10031
  %570 = bitcast %struct.bNodeType* %569 to i8*, !dbg !10031
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %568, i8* %570), !dbg !10031
  br label %sw.epilog, !dbg !10031

sw.bb850:                                         ; preds = %entry
  %571 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10032
  %idname851 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %571, i32 0, i32 3, !dbg !10032
  %arraydecay852 = getelementptr inbounds [64 x i8], [64 x i8]* %idname851, i64 0, i64 0, !dbg !10032
  %call853 = call i8* @BLI_strncpy(i8* %arraydecay852, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.151, i64 0, i64 0), i64 64), !dbg !10032
  %call854 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.151, i64 0, i64 0)), !dbg !10032
  %572 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10032
  %ext855 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %572, i32 0, i32 44, !dbg !10032
  %srna856 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext855, i32 0, i32 1, !dbg !10032
  store %struct.StructRNA* %call854, %struct.StructRNA** %srna856, align 8, !dbg !10032
  %573 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10032
  %ext857 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %573, i32 0, i32 44, !dbg !10032
  %srna858 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext857, i32 0, i32 1, !dbg !10032
  %574 = load %struct.StructRNA*, %struct.StructRNA** %srna858, align 8, !dbg !10032
  %575 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10032
  %576 = bitcast %struct.bNodeType* %575 to i8*, !dbg !10032
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %574, i8* %576), !dbg !10032
  br label %sw.epilog, !dbg !10032

sw.bb859:                                         ; preds = %entry
  %577 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10033
  %idname860 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %577, i32 0, i32 3, !dbg !10033
  %arraydecay861 = getelementptr inbounds [64 x i8], [64 x i8]* %idname860, i64 0, i64 0, !dbg !10033
  %call862 = call i8* @BLI_strncpy(i8* %arraydecay861, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.152, i64 0, i64 0), i64 64), !dbg !10033
  %call863 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.152, i64 0, i64 0)), !dbg !10033
  %578 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10033
  %ext864 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %578, i32 0, i32 44, !dbg !10033
  %srna865 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext864, i32 0, i32 1, !dbg !10033
  store %struct.StructRNA* %call863, %struct.StructRNA** %srna865, align 8, !dbg !10033
  %579 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10033
  %ext866 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %579, i32 0, i32 44, !dbg !10033
  %srna867 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext866, i32 0, i32 1, !dbg !10033
  %580 = load %struct.StructRNA*, %struct.StructRNA** %srna867, align 8, !dbg !10033
  %581 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10033
  %582 = bitcast %struct.bNodeType* %581 to i8*, !dbg !10033
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %580, i8* %582), !dbg !10033
  br label %sw.epilog, !dbg !10033

sw.bb868:                                         ; preds = %entry
  %583 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10034
  %idname869 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %583, i32 0, i32 3, !dbg !10034
  %arraydecay870 = getelementptr inbounds [64 x i8], [64 x i8]* %idname869, i64 0, i64 0, !dbg !10034
  %call871 = call i8* @BLI_strncpy(i8* %arraydecay870, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.153, i64 0, i64 0), i64 64), !dbg !10034
  %call872 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.153, i64 0, i64 0)), !dbg !10034
  %584 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10034
  %ext873 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %584, i32 0, i32 44, !dbg !10034
  %srna874 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext873, i32 0, i32 1, !dbg !10034
  store %struct.StructRNA* %call872, %struct.StructRNA** %srna874, align 8, !dbg !10034
  %585 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10034
  %ext875 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %585, i32 0, i32 44, !dbg !10034
  %srna876 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext875, i32 0, i32 1, !dbg !10034
  %586 = load %struct.StructRNA*, %struct.StructRNA** %srna876, align 8, !dbg !10034
  %587 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10034
  %588 = bitcast %struct.bNodeType* %587 to i8*, !dbg !10034
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %586, i8* %588), !dbg !10034
  br label %sw.epilog, !dbg !10034

sw.bb877:                                         ; preds = %entry
  %589 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10035
  %idname878 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %589, i32 0, i32 3, !dbg !10035
  %arraydecay879 = getelementptr inbounds [64 x i8], [64 x i8]* %idname878, i64 0, i64 0, !dbg !10035
  %call880 = call i8* @BLI_strncpy(i8* %arraydecay879, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.154, i64 0, i64 0), i64 64), !dbg !10035
  %call881 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.154, i64 0, i64 0)), !dbg !10035
  %590 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10035
  %ext882 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %590, i32 0, i32 44, !dbg !10035
  %srna883 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext882, i32 0, i32 1, !dbg !10035
  store %struct.StructRNA* %call881, %struct.StructRNA** %srna883, align 8, !dbg !10035
  %591 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10035
  %ext884 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %591, i32 0, i32 44, !dbg !10035
  %srna885 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext884, i32 0, i32 1, !dbg !10035
  %592 = load %struct.StructRNA*, %struct.StructRNA** %srna885, align 8, !dbg !10035
  %593 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10035
  %594 = bitcast %struct.bNodeType* %593 to i8*, !dbg !10035
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %592, i8* %594), !dbg !10035
  br label %sw.epilog, !dbg !10035

sw.bb886:                                         ; preds = %entry
  %595 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10036
  %idname887 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %595, i32 0, i32 3, !dbg !10036
  %arraydecay888 = getelementptr inbounds [64 x i8], [64 x i8]* %idname887, i64 0, i64 0, !dbg !10036
  %call889 = call i8* @BLI_strncpy(i8* %arraydecay888, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.155, i64 0, i64 0), i64 64), !dbg !10036
  %call890 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.155, i64 0, i64 0)), !dbg !10036
  %596 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10036
  %ext891 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %596, i32 0, i32 44, !dbg !10036
  %srna892 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext891, i32 0, i32 1, !dbg !10036
  store %struct.StructRNA* %call890, %struct.StructRNA** %srna892, align 8, !dbg !10036
  %597 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10036
  %ext893 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %597, i32 0, i32 44, !dbg !10036
  %srna894 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext893, i32 0, i32 1, !dbg !10036
  %598 = load %struct.StructRNA*, %struct.StructRNA** %srna894, align 8, !dbg !10036
  %599 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10036
  %600 = bitcast %struct.bNodeType* %599 to i8*, !dbg !10036
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %598, i8* %600), !dbg !10036
  br label %sw.epilog, !dbg !10036

sw.bb895:                                         ; preds = %entry
  %601 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10037
  %idname896 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %601, i32 0, i32 3, !dbg !10037
  %arraydecay897 = getelementptr inbounds [64 x i8], [64 x i8]* %idname896, i64 0, i64 0, !dbg !10037
  %call898 = call i8* @BLI_strncpy(i8* %arraydecay897, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.156, i64 0, i64 0), i64 64), !dbg !10037
  %call899 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.156, i64 0, i64 0)), !dbg !10037
  %602 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10037
  %ext900 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %602, i32 0, i32 44, !dbg !10037
  %srna901 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext900, i32 0, i32 1, !dbg !10037
  store %struct.StructRNA* %call899, %struct.StructRNA** %srna901, align 8, !dbg !10037
  %603 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10037
  %ext902 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %603, i32 0, i32 44, !dbg !10037
  %srna903 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext902, i32 0, i32 1, !dbg !10037
  %604 = load %struct.StructRNA*, %struct.StructRNA** %srna903, align 8, !dbg !10037
  %605 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10037
  %606 = bitcast %struct.bNodeType* %605 to i8*, !dbg !10037
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %604, i8* %606), !dbg !10037
  br label %sw.epilog, !dbg !10037

sw.bb904:                                         ; preds = %entry
  %607 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10038
  %idname905 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %607, i32 0, i32 3, !dbg !10038
  %arraydecay906 = getelementptr inbounds [64 x i8], [64 x i8]* %idname905, i64 0, i64 0, !dbg !10038
  %call907 = call i8* @BLI_strncpy(i8* %arraydecay906, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.157, i64 0, i64 0), i64 64), !dbg !10038
  %call908 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.157, i64 0, i64 0)), !dbg !10038
  %608 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10038
  %ext909 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %608, i32 0, i32 44, !dbg !10038
  %srna910 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext909, i32 0, i32 1, !dbg !10038
  store %struct.StructRNA* %call908, %struct.StructRNA** %srna910, align 8, !dbg !10038
  %609 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10038
  %ext911 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %609, i32 0, i32 44, !dbg !10038
  %srna912 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext911, i32 0, i32 1, !dbg !10038
  %610 = load %struct.StructRNA*, %struct.StructRNA** %srna912, align 8, !dbg !10038
  %611 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10038
  %612 = bitcast %struct.bNodeType* %611 to i8*, !dbg !10038
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %610, i8* %612), !dbg !10038
  br label %sw.epilog, !dbg !10038

sw.bb913:                                         ; preds = %entry
  %613 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10039
  %idname914 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %613, i32 0, i32 3, !dbg !10039
  %arraydecay915 = getelementptr inbounds [64 x i8], [64 x i8]* %idname914, i64 0, i64 0, !dbg !10039
  %call916 = call i8* @BLI_strncpy(i8* %arraydecay915, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.158, i64 0, i64 0), i64 64), !dbg !10039
  %call917 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.158, i64 0, i64 0)), !dbg !10039
  %614 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10039
  %ext918 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %614, i32 0, i32 44, !dbg !10039
  %srna919 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext918, i32 0, i32 1, !dbg !10039
  store %struct.StructRNA* %call917, %struct.StructRNA** %srna919, align 8, !dbg !10039
  %615 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10039
  %ext920 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %615, i32 0, i32 44, !dbg !10039
  %srna921 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext920, i32 0, i32 1, !dbg !10039
  %616 = load %struct.StructRNA*, %struct.StructRNA** %srna921, align 8, !dbg !10039
  %617 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10039
  %618 = bitcast %struct.bNodeType* %617 to i8*, !dbg !10039
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %616, i8* %618), !dbg !10039
  br label %sw.epilog, !dbg !10039

sw.bb922:                                         ; preds = %entry
  %619 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10040
  %idname923 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %619, i32 0, i32 3, !dbg !10040
  %arraydecay924 = getelementptr inbounds [64 x i8], [64 x i8]* %idname923, i64 0, i64 0, !dbg !10040
  %call925 = call i8* @BLI_strncpy(i8* %arraydecay924, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.159, i64 0, i64 0), i64 64), !dbg !10040
  %call926 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.159, i64 0, i64 0)), !dbg !10040
  %620 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10040
  %ext927 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %620, i32 0, i32 44, !dbg !10040
  %srna928 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext927, i32 0, i32 1, !dbg !10040
  store %struct.StructRNA* %call926, %struct.StructRNA** %srna928, align 8, !dbg !10040
  %621 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10040
  %ext929 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %621, i32 0, i32 44, !dbg !10040
  %srna930 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext929, i32 0, i32 1, !dbg !10040
  %622 = load %struct.StructRNA*, %struct.StructRNA** %srna930, align 8, !dbg !10040
  %623 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10040
  %624 = bitcast %struct.bNodeType* %623 to i8*, !dbg !10040
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %622, i8* %624), !dbg !10040
  br label %sw.epilog, !dbg !10040

sw.bb931:                                         ; preds = %entry
  %625 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10041
  %idname932 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %625, i32 0, i32 3, !dbg !10041
  %arraydecay933 = getelementptr inbounds [64 x i8], [64 x i8]* %idname932, i64 0, i64 0, !dbg !10041
  %call934 = call i8* @BLI_strncpy(i8* %arraydecay933, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.160, i64 0, i64 0), i64 64), !dbg !10041
  %call935 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.160, i64 0, i64 0)), !dbg !10041
  %626 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10041
  %ext936 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %626, i32 0, i32 44, !dbg !10041
  %srna937 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext936, i32 0, i32 1, !dbg !10041
  store %struct.StructRNA* %call935, %struct.StructRNA** %srna937, align 8, !dbg !10041
  %627 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10041
  %ext938 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %627, i32 0, i32 44, !dbg !10041
  %srna939 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext938, i32 0, i32 1, !dbg !10041
  %628 = load %struct.StructRNA*, %struct.StructRNA** %srna939, align 8, !dbg !10041
  %629 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10041
  %630 = bitcast %struct.bNodeType* %629 to i8*, !dbg !10041
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %628, i8* %630), !dbg !10041
  br label %sw.epilog, !dbg !10041

sw.bb940:                                         ; preds = %entry
  %631 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10042
  %idname941 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %631, i32 0, i32 3, !dbg !10042
  %arraydecay942 = getelementptr inbounds [64 x i8], [64 x i8]* %idname941, i64 0, i64 0, !dbg !10042
  %call943 = call i8* @BLI_strncpy(i8* %arraydecay942, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.161, i64 0, i64 0), i64 64), !dbg !10042
  %call944 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.161, i64 0, i64 0)), !dbg !10042
  %632 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10042
  %ext945 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %632, i32 0, i32 44, !dbg !10042
  %srna946 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext945, i32 0, i32 1, !dbg !10042
  store %struct.StructRNA* %call944, %struct.StructRNA** %srna946, align 8, !dbg !10042
  %633 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10042
  %ext947 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %633, i32 0, i32 44, !dbg !10042
  %srna948 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext947, i32 0, i32 1, !dbg !10042
  %634 = load %struct.StructRNA*, %struct.StructRNA** %srna948, align 8, !dbg !10042
  %635 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10042
  %636 = bitcast %struct.bNodeType* %635 to i8*, !dbg !10042
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %634, i8* %636), !dbg !10042
  br label %sw.epilog, !dbg !10042

sw.bb949:                                         ; preds = %entry
  %637 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10043
  %idname950 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %637, i32 0, i32 3, !dbg !10043
  %arraydecay951 = getelementptr inbounds [64 x i8], [64 x i8]* %idname950, i64 0, i64 0, !dbg !10043
  %call952 = call i8* @BLI_strncpy(i8* %arraydecay951, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.162, i64 0, i64 0), i64 64), !dbg !10043
  %call953 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.162, i64 0, i64 0)), !dbg !10043
  %638 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10043
  %ext954 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %638, i32 0, i32 44, !dbg !10043
  %srna955 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext954, i32 0, i32 1, !dbg !10043
  store %struct.StructRNA* %call953, %struct.StructRNA** %srna955, align 8, !dbg !10043
  %639 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10043
  %ext956 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %639, i32 0, i32 44, !dbg !10043
  %srna957 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext956, i32 0, i32 1, !dbg !10043
  %640 = load %struct.StructRNA*, %struct.StructRNA** %srna957, align 8, !dbg !10043
  %641 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10043
  %642 = bitcast %struct.bNodeType* %641 to i8*, !dbg !10043
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %640, i8* %642), !dbg !10043
  br label %sw.epilog, !dbg !10043

sw.bb958:                                         ; preds = %entry
  %643 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10044
  %idname959 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %643, i32 0, i32 3, !dbg !10044
  %arraydecay960 = getelementptr inbounds [64 x i8], [64 x i8]* %idname959, i64 0, i64 0, !dbg !10044
  %call961 = call i8* @BLI_strncpy(i8* %arraydecay960, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.163, i64 0, i64 0), i64 64), !dbg !10044
  %call962 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.163, i64 0, i64 0)), !dbg !10044
  %644 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10044
  %ext963 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %644, i32 0, i32 44, !dbg !10044
  %srna964 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext963, i32 0, i32 1, !dbg !10044
  store %struct.StructRNA* %call962, %struct.StructRNA** %srna964, align 8, !dbg !10044
  %645 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10044
  %ext965 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %645, i32 0, i32 44, !dbg !10044
  %srna966 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext965, i32 0, i32 1, !dbg !10044
  %646 = load %struct.StructRNA*, %struct.StructRNA** %srna966, align 8, !dbg !10044
  %647 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10044
  %648 = bitcast %struct.bNodeType* %647 to i8*, !dbg !10044
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %646, i8* %648), !dbg !10044
  br label %sw.epilog, !dbg !10044

sw.bb967:                                         ; preds = %entry
  %649 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10045
  %idname968 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %649, i32 0, i32 3, !dbg !10045
  %arraydecay969 = getelementptr inbounds [64 x i8], [64 x i8]* %idname968, i64 0, i64 0, !dbg !10045
  %call970 = call i8* @BLI_strncpy(i8* %arraydecay969, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.164, i64 0, i64 0), i64 64), !dbg !10045
  %call971 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.164, i64 0, i64 0)), !dbg !10045
  %650 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10045
  %ext972 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %650, i32 0, i32 44, !dbg !10045
  %srna973 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext972, i32 0, i32 1, !dbg !10045
  store %struct.StructRNA* %call971, %struct.StructRNA** %srna973, align 8, !dbg !10045
  %651 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10045
  %ext974 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %651, i32 0, i32 44, !dbg !10045
  %srna975 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext974, i32 0, i32 1, !dbg !10045
  %652 = load %struct.StructRNA*, %struct.StructRNA** %srna975, align 8, !dbg !10045
  %653 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10045
  %654 = bitcast %struct.bNodeType* %653 to i8*, !dbg !10045
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %652, i8* %654), !dbg !10045
  br label %sw.epilog, !dbg !10045

sw.bb976:                                         ; preds = %entry
  %655 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10046
  %idname977 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %655, i32 0, i32 3, !dbg !10046
  %arraydecay978 = getelementptr inbounds [64 x i8], [64 x i8]* %idname977, i64 0, i64 0, !dbg !10046
  %call979 = call i8* @BLI_strncpy(i8* %arraydecay978, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.165, i64 0, i64 0), i64 64), !dbg !10046
  %call980 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.165, i64 0, i64 0)), !dbg !10046
  %656 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10046
  %ext981 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %656, i32 0, i32 44, !dbg !10046
  %srna982 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext981, i32 0, i32 1, !dbg !10046
  store %struct.StructRNA* %call980, %struct.StructRNA** %srna982, align 8, !dbg !10046
  %657 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10046
  %ext983 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %657, i32 0, i32 44, !dbg !10046
  %srna984 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext983, i32 0, i32 1, !dbg !10046
  %658 = load %struct.StructRNA*, %struct.StructRNA** %srna984, align 8, !dbg !10046
  %659 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10046
  %660 = bitcast %struct.bNodeType* %659 to i8*, !dbg !10046
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %658, i8* %660), !dbg !10046
  br label %sw.epilog, !dbg !10046

sw.bb985:                                         ; preds = %entry
  %661 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10047
  %idname986 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %661, i32 0, i32 3, !dbg !10047
  %arraydecay987 = getelementptr inbounds [64 x i8], [64 x i8]* %idname986, i64 0, i64 0, !dbg !10047
  %call988 = call i8* @BLI_strncpy(i8* %arraydecay987, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.166, i64 0, i64 0), i64 64), !dbg !10047
  %call989 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.166, i64 0, i64 0)), !dbg !10047
  %662 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10047
  %ext990 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %662, i32 0, i32 44, !dbg !10047
  %srna991 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext990, i32 0, i32 1, !dbg !10047
  store %struct.StructRNA* %call989, %struct.StructRNA** %srna991, align 8, !dbg !10047
  %663 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10047
  %ext992 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %663, i32 0, i32 44, !dbg !10047
  %srna993 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext992, i32 0, i32 1, !dbg !10047
  %664 = load %struct.StructRNA*, %struct.StructRNA** %srna993, align 8, !dbg !10047
  %665 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10047
  %666 = bitcast %struct.bNodeType* %665 to i8*, !dbg !10047
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %664, i8* %666), !dbg !10047
  br label %sw.epilog, !dbg !10047

sw.bb994:                                         ; preds = %entry
  %667 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10048
  %idname995 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %667, i32 0, i32 3, !dbg !10048
  %arraydecay996 = getelementptr inbounds [64 x i8], [64 x i8]* %idname995, i64 0, i64 0, !dbg !10048
  %call997 = call i8* @BLI_strncpy(i8* %arraydecay996, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.167, i64 0, i64 0), i64 64), !dbg !10048
  %call998 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.167, i64 0, i64 0)), !dbg !10048
  %668 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10048
  %ext999 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %668, i32 0, i32 44, !dbg !10048
  %srna1000 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext999, i32 0, i32 1, !dbg !10048
  store %struct.StructRNA* %call998, %struct.StructRNA** %srna1000, align 8, !dbg !10048
  %669 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10048
  %ext1001 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %669, i32 0, i32 44, !dbg !10048
  %srna1002 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1001, i32 0, i32 1, !dbg !10048
  %670 = load %struct.StructRNA*, %struct.StructRNA** %srna1002, align 8, !dbg !10048
  %671 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10048
  %672 = bitcast %struct.bNodeType* %671 to i8*, !dbg !10048
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %670, i8* %672), !dbg !10048
  br label %sw.epilog, !dbg !10048

sw.bb1003:                                        ; preds = %entry
  %673 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10049
  %idname1004 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %673, i32 0, i32 3, !dbg !10049
  %arraydecay1005 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1004, i64 0, i64 0, !dbg !10049
  %call1006 = call i8* @BLI_strncpy(i8* %arraydecay1005, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.168, i64 0, i64 0), i64 64), !dbg !10049
  %call1007 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.168, i64 0, i64 0)), !dbg !10049
  %674 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10049
  %ext1008 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %674, i32 0, i32 44, !dbg !10049
  %srna1009 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1008, i32 0, i32 1, !dbg !10049
  store %struct.StructRNA* %call1007, %struct.StructRNA** %srna1009, align 8, !dbg !10049
  %675 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10049
  %ext1010 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %675, i32 0, i32 44, !dbg !10049
  %srna1011 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1010, i32 0, i32 1, !dbg !10049
  %676 = load %struct.StructRNA*, %struct.StructRNA** %srna1011, align 8, !dbg !10049
  %677 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10049
  %678 = bitcast %struct.bNodeType* %677 to i8*, !dbg !10049
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %676, i8* %678), !dbg !10049
  br label %sw.epilog, !dbg !10049

sw.bb1012:                                        ; preds = %entry
  %679 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10050
  %idname1013 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %679, i32 0, i32 3, !dbg !10050
  %arraydecay1014 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1013, i64 0, i64 0, !dbg !10050
  %call1015 = call i8* @BLI_strncpy(i8* %arraydecay1014, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.169, i64 0, i64 0), i64 64), !dbg !10050
  %call1016 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.169, i64 0, i64 0)), !dbg !10050
  %680 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10050
  %ext1017 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %680, i32 0, i32 44, !dbg !10050
  %srna1018 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1017, i32 0, i32 1, !dbg !10050
  store %struct.StructRNA* %call1016, %struct.StructRNA** %srna1018, align 8, !dbg !10050
  %681 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10050
  %ext1019 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %681, i32 0, i32 44, !dbg !10050
  %srna1020 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1019, i32 0, i32 1, !dbg !10050
  %682 = load %struct.StructRNA*, %struct.StructRNA** %srna1020, align 8, !dbg !10050
  %683 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10050
  %684 = bitcast %struct.bNodeType* %683 to i8*, !dbg !10050
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %682, i8* %684), !dbg !10050
  br label %sw.epilog, !dbg !10050

sw.bb1021:                                        ; preds = %entry
  %685 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10051
  %idname1022 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %685, i32 0, i32 3, !dbg !10051
  %arraydecay1023 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1022, i64 0, i64 0, !dbg !10051
  %call1024 = call i8* @BLI_strncpy(i8* %arraydecay1023, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.170, i64 0, i64 0), i64 64), !dbg !10051
  %call1025 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.170, i64 0, i64 0)), !dbg !10051
  %686 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10051
  %ext1026 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %686, i32 0, i32 44, !dbg !10051
  %srna1027 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1026, i32 0, i32 1, !dbg !10051
  store %struct.StructRNA* %call1025, %struct.StructRNA** %srna1027, align 8, !dbg !10051
  %687 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10051
  %ext1028 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %687, i32 0, i32 44, !dbg !10051
  %srna1029 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1028, i32 0, i32 1, !dbg !10051
  %688 = load %struct.StructRNA*, %struct.StructRNA** %srna1029, align 8, !dbg !10051
  %689 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10051
  %690 = bitcast %struct.bNodeType* %689 to i8*, !dbg !10051
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %688, i8* %690), !dbg !10051
  br label %sw.epilog, !dbg !10051

sw.bb1030:                                        ; preds = %entry
  %691 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10052
  %idname1031 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %691, i32 0, i32 3, !dbg !10052
  %arraydecay1032 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1031, i64 0, i64 0, !dbg !10052
  %call1033 = call i8* @BLI_strncpy(i8* %arraydecay1032, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.171, i64 0, i64 0), i64 64), !dbg !10052
  %call1034 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.171, i64 0, i64 0)), !dbg !10052
  %692 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10052
  %ext1035 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %692, i32 0, i32 44, !dbg !10052
  %srna1036 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1035, i32 0, i32 1, !dbg !10052
  store %struct.StructRNA* %call1034, %struct.StructRNA** %srna1036, align 8, !dbg !10052
  %693 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10052
  %ext1037 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %693, i32 0, i32 44, !dbg !10052
  %srna1038 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1037, i32 0, i32 1, !dbg !10052
  %694 = load %struct.StructRNA*, %struct.StructRNA** %srna1038, align 8, !dbg !10052
  %695 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10052
  %696 = bitcast %struct.bNodeType* %695 to i8*, !dbg !10052
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %694, i8* %696), !dbg !10052
  br label %sw.epilog, !dbg !10052

sw.bb1039:                                        ; preds = %entry
  %697 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10053
  %idname1040 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %697, i32 0, i32 3, !dbg !10053
  %arraydecay1041 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1040, i64 0, i64 0, !dbg !10053
  %call1042 = call i8* @BLI_strncpy(i8* %arraydecay1041, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.172, i64 0, i64 0), i64 64), !dbg !10053
  %call1043 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.172, i64 0, i64 0)), !dbg !10053
  %698 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10053
  %ext1044 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %698, i32 0, i32 44, !dbg !10053
  %srna1045 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1044, i32 0, i32 1, !dbg !10053
  store %struct.StructRNA* %call1043, %struct.StructRNA** %srna1045, align 8, !dbg !10053
  %699 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10053
  %ext1046 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %699, i32 0, i32 44, !dbg !10053
  %srna1047 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1046, i32 0, i32 1, !dbg !10053
  %700 = load %struct.StructRNA*, %struct.StructRNA** %srna1047, align 8, !dbg !10053
  %701 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10053
  %702 = bitcast %struct.bNodeType* %701 to i8*, !dbg !10053
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %700, i8* %702), !dbg !10053
  br label %sw.epilog, !dbg !10053

sw.bb1048:                                        ; preds = %entry
  %703 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10054
  %idname1049 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %703, i32 0, i32 3, !dbg !10054
  %arraydecay1050 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1049, i64 0, i64 0, !dbg !10054
  %call1051 = call i8* @BLI_strncpy(i8* %arraydecay1050, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.173, i64 0, i64 0), i64 64), !dbg !10054
  %call1052 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.173, i64 0, i64 0)), !dbg !10054
  %704 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10054
  %ext1053 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %704, i32 0, i32 44, !dbg !10054
  %srna1054 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1053, i32 0, i32 1, !dbg !10054
  store %struct.StructRNA* %call1052, %struct.StructRNA** %srna1054, align 8, !dbg !10054
  %705 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10054
  %ext1055 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %705, i32 0, i32 44, !dbg !10054
  %srna1056 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1055, i32 0, i32 1, !dbg !10054
  %706 = load %struct.StructRNA*, %struct.StructRNA** %srna1056, align 8, !dbg !10054
  %707 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10054
  %708 = bitcast %struct.bNodeType* %707 to i8*, !dbg !10054
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %706, i8* %708), !dbg !10054
  br label %sw.epilog, !dbg !10054

sw.bb1057:                                        ; preds = %entry
  %709 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10055
  %idname1058 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %709, i32 0, i32 3, !dbg !10055
  %arraydecay1059 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1058, i64 0, i64 0, !dbg !10055
  %call1060 = call i8* @BLI_strncpy(i8* %arraydecay1059, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.174, i64 0, i64 0), i64 64), !dbg !10055
  %call1061 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.174, i64 0, i64 0)), !dbg !10055
  %710 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10055
  %ext1062 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %710, i32 0, i32 44, !dbg !10055
  %srna1063 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1062, i32 0, i32 1, !dbg !10055
  store %struct.StructRNA* %call1061, %struct.StructRNA** %srna1063, align 8, !dbg !10055
  %711 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10055
  %ext1064 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %711, i32 0, i32 44, !dbg !10055
  %srna1065 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1064, i32 0, i32 1, !dbg !10055
  %712 = load %struct.StructRNA*, %struct.StructRNA** %srna1065, align 8, !dbg !10055
  %713 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10055
  %714 = bitcast %struct.bNodeType* %713 to i8*, !dbg !10055
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %712, i8* %714), !dbg !10055
  br label %sw.epilog, !dbg !10055

sw.bb1066:                                        ; preds = %entry
  %715 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10056
  %idname1067 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %715, i32 0, i32 3, !dbg !10056
  %arraydecay1068 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1067, i64 0, i64 0, !dbg !10056
  %call1069 = call i8* @BLI_strncpy(i8* %arraydecay1068, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.175, i64 0, i64 0), i64 64), !dbg !10056
  %call1070 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.175, i64 0, i64 0)), !dbg !10056
  %716 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10056
  %ext1071 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %716, i32 0, i32 44, !dbg !10056
  %srna1072 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1071, i32 0, i32 1, !dbg !10056
  store %struct.StructRNA* %call1070, %struct.StructRNA** %srna1072, align 8, !dbg !10056
  %717 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10056
  %ext1073 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %717, i32 0, i32 44, !dbg !10056
  %srna1074 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1073, i32 0, i32 1, !dbg !10056
  %718 = load %struct.StructRNA*, %struct.StructRNA** %srna1074, align 8, !dbg !10056
  %719 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10056
  %720 = bitcast %struct.bNodeType* %719 to i8*, !dbg !10056
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %718, i8* %720), !dbg !10056
  br label %sw.epilog, !dbg !10056

sw.bb1075:                                        ; preds = %entry
  %721 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10057
  %idname1076 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %721, i32 0, i32 3, !dbg !10057
  %arraydecay1077 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1076, i64 0, i64 0, !dbg !10057
  %call1078 = call i8* @BLI_strncpy(i8* %arraydecay1077, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.176, i64 0, i64 0), i64 64), !dbg !10057
  %call1079 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.176, i64 0, i64 0)), !dbg !10057
  %722 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10057
  %ext1080 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %722, i32 0, i32 44, !dbg !10057
  %srna1081 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1080, i32 0, i32 1, !dbg !10057
  store %struct.StructRNA* %call1079, %struct.StructRNA** %srna1081, align 8, !dbg !10057
  %723 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10057
  %ext1082 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %723, i32 0, i32 44, !dbg !10057
  %srna1083 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1082, i32 0, i32 1, !dbg !10057
  %724 = load %struct.StructRNA*, %struct.StructRNA** %srna1083, align 8, !dbg !10057
  %725 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10057
  %726 = bitcast %struct.bNodeType* %725 to i8*, !dbg !10057
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %724, i8* %726), !dbg !10057
  br label %sw.epilog, !dbg !10057

sw.bb1084:                                        ; preds = %entry
  %727 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10058
  %idname1085 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %727, i32 0, i32 3, !dbg !10058
  %arraydecay1086 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1085, i64 0, i64 0, !dbg !10058
  %call1087 = call i8* @BLI_strncpy(i8* %arraydecay1086, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.177, i64 0, i64 0), i64 64), !dbg !10058
  %call1088 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.177, i64 0, i64 0)), !dbg !10058
  %728 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10058
  %ext1089 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %728, i32 0, i32 44, !dbg !10058
  %srna1090 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1089, i32 0, i32 1, !dbg !10058
  store %struct.StructRNA* %call1088, %struct.StructRNA** %srna1090, align 8, !dbg !10058
  %729 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10058
  %ext1091 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %729, i32 0, i32 44, !dbg !10058
  %srna1092 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1091, i32 0, i32 1, !dbg !10058
  %730 = load %struct.StructRNA*, %struct.StructRNA** %srna1092, align 8, !dbg !10058
  %731 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10058
  %732 = bitcast %struct.bNodeType* %731 to i8*, !dbg !10058
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %730, i8* %732), !dbg !10058
  br label %sw.epilog, !dbg !10058

sw.bb1093:                                        ; preds = %entry
  %733 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10059
  %idname1094 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %733, i32 0, i32 3, !dbg !10059
  %arraydecay1095 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1094, i64 0, i64 0, !dbg !10059
  %call1096 = call i8* @BLI_strncpy(i8* %arraydecay1095, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.178, i64 0, i64 0), i64 64), !dbg !10059
  %call1097 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.178, i64 0, i64 0)), !dbg !10059
  %734 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10059
  %ext1098 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %734, i32 0, i32 44, !dbg !10059
  %srna1099 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1098, i32 0, i32 1, !dbg !10059
  store %struct.StructRNA* %call1097, %struct.StructRNA** %srna1099, align 8, !dbg !10059
  %735 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10059
  %ext1100 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %735, i32 0, i32 44, !dbg !10059
  %srna1101 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1100, i32 0, i32 1, !dbg !10059
  %736 = load %struct.StructRNA*, %struct.StructRNA** %srna1101, align 8, !dbg !10059
  %737 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10059
  %738 = bitcast %struct.bNodeType* %737 to i8*, !dbg !10059
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %736, i8* %738), !dbg !10059
  br label %sw.epilog, !dbg !10059

sw.bb1102:                                        ; preds = %entry
  %739 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10060
  %idname1103 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %739, i32 0, i32 3, !dbg !10060
  %arraydecay1104 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1103, i64 0, i64 0, !dbg !10060
  %call1105 = call i8* @BLI_strncpy(i8* %arraydecay1104, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.179, i64 0, i64 0), i64 64), !dbg !10060
  %call1106 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.179, i64 0, i64 0)), !dbg !10060
  %740 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10060
  %ext1107 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %740, i32 0, i32 44, !dbg !10060
  %srna1108 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1107, i32 0, i32 1, !dbg !10060
  store %struct.StructRNA* %call1106, %struct.StructRNA** %srna1108, align 8, !dbg !10060
  %741 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10060
  %ext1109 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %741, i32 0, i32 44, !dbg !10060
  %srna1110 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1109, i32 0, i32 1, !dbg !10060
  %742 = load %struct.StructRNA*, %struct.StructRNA** %srna1110, align 8, !dbg !10060
  %743 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10060
  %744 = bitcast %struct.bNodeType* %743 to i8*, !dbg !10060
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %742, i8* %744), !dbg !10060
  br label %sw.epilog, !dbg !10060

sw.bb1111:                                        ; preds = %entry
  %745 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10061
  %idname1112 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %745, i32 0, i32 3, !dbg !10061
  %arraydecay1113 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1112, i64 0, i64 0, !dbg !10061
  %call1114 = call i8* @BLI_strncpy(i8* %arraydecay1113, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.180, i64 0, i64 0), i64 64), !dbg !10061
  %call1115 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.180, i64 0, i64 0)), !dbg !10061
  %746 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10061
  %ext1116 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %746, i32 0, i32 44, !dbg !10061
  %srna1117 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1116, i32 0, i32 1, !dbg !10061
  store %struct.StructRNA* %call1115, %struct.StructRNA** %srna1117, align 8, !dbg !10061
  %747 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10061
  %ext1118 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %747, i32 0, i32 44, !dbg !10061
  %srna1119 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1118, i32 0, i32 1, !dbg !10061
  %748 = load %struct.StructRNA*, %struct.StructRNA** %srna1119, align 8, !dbg !10061
  %749 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10061
  %750 = bitcast %struct.bNodeType* %749 to i8*, !dbg !10061
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %748, i8* %750), !dbg !10061
  br label %sw.epilog, !dbg !10061

sw.bb1120:                                        ; preds = %entry
  %751 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10062
  %idname1121 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %751, i32 0, i32 3, !dbg !10062
  %arraydecay1122 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1121, i64 0, i64 0, !dbg !10062
  %call1123 = call i8* @BLI_strncpy(i8* %arraydecay1122, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.181, i64 0, i64 0), i64 64), !dbg !10062
  %call1124 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.181, i64 0, i64 0)), !dbg !10062
  %752 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10062
  %ext1125 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %752, i32 0, i32 44, !dbg !10062
  %srna1126 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1125, i32 0, i32 1, !dbg !10062
  store %struct.StructRNA* %call1124, %struct.StructRNA** %srna1126, align 8, !dbg !10062
  %753 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10062
  %ext1127 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %753, i32 0, i32 44, !dbg !10062
  %srna1128 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1127, i32 0, i32 1, !dbg !10062
  %754 = load %struct.StructRNA*, %struct.StructRNA** %srna1128, align 8, !dbg !10062
  %755 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10062
  %756 = bitcast %struct.bNodeType* %755 to i8*, !dbg !10062
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %754, i8* %756), !dbg !10062
  br label %sw.epilog, !dbg !10062

sw.bb1129:                                        ; preds = %entry
  %757 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10063
  %idname1130 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %757, i32 0, i32 3, !dbg !10063
  %arraydecay1131 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1130, i64 0, i64 0, !dbg !10063
  %call1132 = call i8* @BLI_strncpy(i8* %arraydecay1131, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.182, i64 0, i64 0), i64 64), !dbg !10063
  %call1133 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.182, i64 0, i64 0)), !dbg !10063
  %758 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10063
  %ext1134 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %758, i32 0, i32 44, !dbg !10063
  %srna1135 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1134, i32 0, i32 1, !dbg !10063
  store %struct.StructRNA* %call1133, %struct.StructRNA** %srna1135, align 8, !dbg !10063
  %759 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10063
  %ext1136 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %759, i32 0, i32 44, !dbg !10063
  %srna1137 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1136, i32 0, i32 1, !dbg !10063
  %760 = load %struct.StructRNA*, %struct.StructRNA** %srna1137, align 8, !dbg !10063
  %761 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10063
  %762 = bitcast %struct.bNodeType* %761 to i8*, !dbg !10063
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %760, i8* %762), !dbg !10063
  br label %sw.epilog, !dbg !10063

sw.bb1138:                                        ; preds = %entry
  %763 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10064
  %idname1139 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %763, i32 0, i32 3, !dbg !10064
  %arraydecay1140 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1139, i64 0, i64 0, !dbg !10064
  %call1141 = call i8* @BLI_strncpy(i8* %arraydecay1140, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.183, i64 0, i64 0), i64 64), !dbg !10064
  %call1142 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.183, i64 0, i64 0)), !dbg !10064
  %764 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10064
  %ext1143 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %764, i32 0, i32 44, !dbg !10064
  %srna1144 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1143, i32 0, i32 1, !dbg !10064
  store %struct.StructRNA* %call1142, %struct.StructRNA** %srna1144, align 8, !dbg !10064
  %765 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10064
  %ext1145 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %765, i32 0, i32 44, !dbg !10064
  %srna1146 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1145, i32 0, i32 1, !dbg !10064
  %766 = load %struct.StructRNA*, %struct.StructRNA** %srna1146, align 8, !dbg !10064
  %767 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10064
  %768 = bitcast %struct.bNodeType* %767 to i8*, !dbg !10064
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %766, i8* %768), !dbg !10064
  br label %sw.epilog, !dbg !10064

sw.bb1147:                                        ; preds = %entry
  %769 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10065
  %idname1148 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %769, i32 0, i32 3, !dbg !10065
  %arraydecay1149 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1148, i64 0, i64 0, !dbg !10065
  %call1150 = call i8* @BLI_strncpy(i8* %arraydecay1149, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.184, i64 0, i64 0), i64 64), !dbg !10065
  %call1151 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.184, i64 0, i64 0)), !dbg !10065
  %770 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10065
  %ext1152 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %770, i32 0, i32 44, !dbg !10065
  %srna1153 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1152, i32 0, i32 1, !dbg !10065
  store %struct.StructRNA* %call1151, %struct.StructRNA** %srna1153, align 8, !dbg !10065
  %771 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10065
  %ext1154 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %771, i32 0, i32 44, !dbg !10065
  %srna1155 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1154, i32 0, i32 1, !dbg !10065
  %772 = load %struct.StructRNA*, %struct.StructRNA** %srna1155, align 8, !dbg !10065
  %773 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10065
  %774 = bitcast %struct.bNodeType* %773 to i8*, !dbg !10065
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %772, i8* %774), !dbg !10065
  br label %sw.epilog, !dbg !10065

sw.bb1156:                                        ; preds = %entry
  %775 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10066
  %idname1157 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %775, i32 0, i32 3, !dbg !10066
  %arraydecay1158 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1157, i64 0, i64 0, !dbg !10066
  %call1159 = call i8* @BLI_strncpy(i8* %arraydecay1158, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.185, i64 0, i64 0), i64 64), !dbg !10066
  %call1160 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.185, i64 0, i64 0)), !dbg !10066
  %776 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10066
  %ext1161 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %776, i32 0, i32 44, !dbg !10066
  %srna1162 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1161, i32 0, i32 1, !dbg !10066
  store %struct.StructRNA* %call1160, %struct.StructRNA** %srna1162, align 8, !dbg !10066
  %777 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10066
  %ext1163 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %777, i32 0, i32 44, !dbg !10066
  %srna1164 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1163, i32 0, i32 1, !dbg !10066
  %778 = load %struct.StructRNA*, %struct.StructRNA** %srna1164, align 8, !dbg !10066
  %779 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10066
  %780 = bitcast %struct.bNodeType* %779 to i8*, !dbg !10066
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %778, i8* %780), !dbg !10066
  br label %sw.epilog, !dbg !10066

sw.bb1165:                                        ; preds = %entry
  %781 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10067
  %idname1166 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %781, i32 0, i32 3, !dbg !10067
  %arraydecay1167 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1166, i64 0, i64 0, !dbg !10067
  %call1168 = call i8* @BLI_strncpy(i8* %arraydecay1167, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.186, i64 0, i64 0), i64 64), !dbg !10067
  %call1169 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.186, i64 0, i64 0)), !dbg !10067
  %782 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10067
  %ext1170 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %782, i32 0, i32 44, !dbg !10067
  %srna1171 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1170, i32 0, i32 1, !dbg !10067
  store %struct.StructRNA* %call1169, %struct.StructRNA** %srna1171, align 8, !dbg !10067
  %783 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10067
  %ext1172 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %783, i32 0, i32 44, !dbg !10067
  %srna1173 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1172, i32 0, i32 1, !dbg !10067
  %784 = load %struct.StructRNA*, %struct.StructRNA** %srna1173, align 8, !dbg !10067
  %785 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10067
  %786 = bitcast %struct.bNodeType* %785 to i8*, !dbg !10067
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %784, i8* %786), !dbg !10067
  br label %sw.epilog, !dbg !10067

sw.bb1174:                                        ; preds = %entry
  %787 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10068
  %idname1175 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %787, i32 0, i32 3, !dbg !10068
  %arraydecay1176 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1175, i64 0, i64 0, !dbg !10068
  %call1177 = call i8* @BLI_strncpy(i8* %arraydecay1176, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.187, i64 0, i64 0), i64 64), !dbg !10068
  %call1178 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.187, i64 0, i64 0)), !dbg !10068
  %788 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10068
  %ext1179 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %788, i32 0, i32 44, !dbg !10068
  %srna1180 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1179, i32 0, i32 1, !dbg !10068
  store %struct.StructRNA* %call1178, %struct.StructRNA** %srna1180, align 8, !dbg !10068
  %789 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10068
  %ext1181 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %789, i32 0, i32 44, !dbg !10068
  %srna1182 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1181, i32 0, i32 1, !dbg !10068
  %790 = load %struct.StructRNA*, %struct.StructRNA** %srna1182, align 8, !dbg !10068
  %791 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10068
  %792 = bitcast %struct.bNodeType* %791 to i8*, !dbg !10068
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %790, i8* %792), !dbg !10068
  br label %sw.epilog, !dbg !10068

sw.bb1183:                                        ; preds = %entry
  %793 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10069
  %idname1184 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %793, i32 0, i32 3, !dbg !10069
  %arraydecay1185 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1184, i64 0, i64 0, !dbg !10069
  %call1186 = call i8* @BLI_strncpy(i8* %arraydecay1185, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.188, i64 0, i64 0), i64 64), !dbg !10069
  %call1187 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.188, i64 0, i64 0)), !dbg !10069
  %794 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10069
  %ext1188 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %794, i32 0, i32 44, !dbg !10069
  %srna1189 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1188, i32 0, i32 1, !dbg !10069
  store %struct.StructRNA* %call1187, %struct.StructRNA** %srna1189, align 8, !dbg !10069
  %795 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10069
  %ext1190 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %795, i32 0, i32 44, !dbg !10069
  %srna1191 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1190, i32 0, i32 1, !dbg !10069
  %796 = load %struct.StructRNA*, %struct.StructRNA** %srna1191, align 8, !dbg !10069
  %797 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10069
  %798 = bitcast %struct.bNodeType* %797 to i8*, !dbg !10069
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %796, i8* %798), !dbg !10069
  br label %sw.epilog, !dbg !10069

sw.bb1192:                                        ; preds = %entry
  %799 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10070
  %idname1193 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %799, i32 0, i32 3, !dbg !10070
  %arraydecay1194 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1193, i64 0, i64 0, !dbg !10070
  %call1195 = call i8* @BLI_strncpy(i8* %arraydecay1194, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.189, i64 0, i64 0), i64 64), !dbg !10070
  %call1196 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.189, i64 0, i64 0)), !dbg !10070
  %800 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10070
  %ext1197 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %800, i32 0, i32 44, !dbg !10070
  %srna1198 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1197, i32 0, i32 1, !dbg !10070
  store %struct.StructRNA* %call1196, %struct.StructRNA** %srna1198, align 8, !dbg !10070
  %801 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10070
  %ext1199 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %801, i32 0, i32 44, !dbg !10070
  %srna1200 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1199, i32 0, i32 1, !dbg !10070
  %802 = load %struct.StructRNA*, %struct.StructRNA** %srna1200, align 8, !dbg !10070
  %803 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10070
  %804 = bitcast %struct.bNodeType* %803 to i8*, !dbg !10070
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %802, i8* %804), !dbg !10070
  br label %sw.epilog, !dbg !10070

sw.bb1201:                                        ; preds = %entry
  %805 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10071
  %idname1202 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %805, i32 0, i32 3, !dbg !10071
  %arraydecay1203 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1202, i64 0, i64 0, !dbg !10071
  %call1204 = call i8* @BLI_strncpy(i8* %arraydecay1203, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.190, i64 0, i64 0), i64 64), !dbg !10071
  %call1205 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.190, i64 0, i64 0)), !dbg !10071
  %806 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10071
  %ext1206 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %806, i32 0, i32 44, !dbg !10071
  %srna1207 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1206, i32 0, i32 1, !dbg !10071
  store %struct.StructRNA* %call1205, %struct.StructRNA** %srna1207, align 8, !dbg !10071
  %807 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10071
  %ext1208 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %807, i32 0, i32 44, !dbg !10071
  %srna1209 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1208, i32 0, i32 1, !dbg !10071
  %808 = load %struct.StructRNA*, %struct.StructRNA** %srna1209, align 8, !dbg !10071
  %809 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10071
  %810 = bitcast %struct.bNodeType* %809 to i8*, !dbg !10071
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %808, i8* %810), !dbg !10071
  br label %sw.epilog, !dbg !10071

sw.bb1210:                                        ; preds = %entry
  %811 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10072
  %idname1211 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %811, i32 0, i32 3, !dbg !10072
  %arraydecay1212 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1211, i64 0, i64 0, !dbg !10072
  %call1213 = call i8* @BLI_strncpy(i8* %arraydecay1212, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.191, i64 0, i64 0), i64 64), !dbg !10072
  %call1214 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.191, i64 0, i64 0)), !dbg !10072
  %812 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10072
  %ext1215 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %812, i32 0, i32 44, !dbg !10072
  %srna1216 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1215, i32 0, i32 1, !dbg !10072
  store %struct.StructRNA* %call1214, %struct.StructRNA** %srna1216, align 8, !dbg !10072
  %813 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10072
  %ext1217 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %813, i32 0, i32 44, !dbg !10072
  %srna1218 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1217, i32 0, i32 1, !dbg !10072
  %814 = load %struct.StructRNA*, %struct.StructRNA** %srna1218, align 8, !dbg !10072
  %815 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10072
  %816 = bitcast %struct.bNodeType* %815 to i8*, !dbg !10072
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %814, i8* %816), !dbg !10072
  br label %sw.epilog, !dbg !10072

sw.bb1219:                                        ; preds = %entry
  %817 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10073
  %idname1220 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %817, i32 0, i32 3, !dbg !10073
  %arraydecay1221 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1220, i64 0, i64 0, !dbg !10073
  %call1222 = call i8* @BLI_strncpy(i8* %arraydecay1221, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.192, i64 0, i64 0), i64 64), !dbg !10073
  %call1223 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.192, i64 0, i64 0)), !dbg !10073
  %818 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10073
  %ext1224 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %818, i32 0, i32 44, !dbg !10073
  %srna1225 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1224, i32 0, i32 1, !dbg !10073
  store %struct.StructRNA* %call1223, %struct.StructRNA** %srna1225, align 8, !dbg !10073
  %819 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10073
  %ext1226 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %819, i32 0, i32 44, !dbg !10073
  %srna1227 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1226, i32 0, i32 1, !dbg !10073
  %820 = load %struct.StructRNA*, %struct.StructRNA** %srna1227, align 8, !dbg !10073
  %821 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10073
  %822 = bitcast %struct.bNodeType* %821 to i8*, !dbg !10073
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %820, i8* %822), !dbg !10073
  br label %sw.epilog, !dbg !10073

sw.bb1228:                                        ; preds = %entry
  %823 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10074
  %idname1229 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %823, i32 0, i32 3, !dbg !10074
  %arraydecay1230 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1229, i64 0, i64 0, !dbg !10074
  %call1231 = call i8* @BLI_strncpy(i8* %arraydecay1230, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.193, i64 0, i64 0), i64 64), !dbg !10074
  %call1232 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.193, i64 0, i64 0)), !dbg !10074
  %824 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10074
  %ext1233 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %824, i32 0, i32 44, !dbg !10074
  %srna1234 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1233, i32 0, i32 1, !dbg !10074
  store %struct.StructRNA* %call1232, %struct.StructRNA** %srna1234, align 8, !dbg !10074
  %825 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10074
  %ext1235 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %825, i32 0, i32 44, !dbg !10074
  %srna1236 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1235, i32 0, i32 1, !dbg !10074
  %826 = load %struct.StructRNA*, %struct.StructRNA** %srna1236, align 8, !dbg !10074
  %827 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10074
  %828 = bitcast %struct.bNodeType* %827 to i8*, !dbg !10074
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %826, i8* %828), !dbg !10074
  br label %sw.epilog, !dbg !10074

sw.bb1237:                                        ; preds = %entry
  %829 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10075
  %idname1238 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %829, i32 0, i32 3, !dbg !10075
  %arraydecay1239 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1238, i64 0, i64 0, !dbg !10075
  %call1240 = call i8* @BLI_strncpy(i8* %arraydecay1239, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.194, i64 0, i64 0), i64 64), !dbg !10075
  %call1241 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.194, i64 0, i64 0)), !dbg !10075
  %830 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10075
  %ext1242 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %830, i32 0, i32 44, !dbg !10075
  %srna1243 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1242, i32 0, i32 1, !dbg !10075
  store %struct.StructRNA* %call1241, %struct.StructRNA** %srna1243, align 8, !dbg !10075
  %831 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10075
  %ext1244 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %831, i32 0, i32 44, !dbg !10075
  %srna1245 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1244, i32 0, i32 1, !dbg !10075
  %832 = load %struct.StructRNA*, %struct.StructRNA** %srna1245, align 8, !dbg !10075
  %833 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10075
  %834 = bitcast %struct.bNodeType* %833 to i8*, !dbg !10075
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %832, i8* %834), !dbg !10075
  br label %sw.epilog, !dbg !10075

sw.bb1246:                                        ; preds = %entry
  %835 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10076
  %idname1247 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %835, i32 0, i32 3, !dbg !10076
  %arraydecay1248 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1247, i64 0, i64 0, !dbg !10076
  %call1249 = call i8* @BLI_strncpy(i8* %arraydecay1248, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.195, i64 0, i64 0), i64 64), !dbg !10076
  %call1250 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.195, i64 0, i64 0)), !dbg !10076
  %836 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10076
  %ext1251 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %836, i32 0, i32 44, !dbg !10076
  %srna1252 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1251, i32 0, i32 1, !dbg !10076
  store %struct.StructRNA* %call1250, %struct.StructRNA** %srna1252, align 8, !dbg !10076
  %837 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10076
  %ext1253 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %837, i32 0, i32 44, !dbg !10076
  %srna1254 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1253, i32 0, i32 1, !dbg !10076
  %838 = load %struct.StructRNA*, %struct.StructRNA** %srna1254, align 8, !dbg !10076
  %839 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10076
  %840 = bitcast %struct.bNodeType* %839 to i8*, !dbg !10076
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %838, i8* %840), !dbg !10076
  br label %sw.epilog, !dbg !10076

sw.bb1255:                                        ; preds = %entry
  %841 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10077
  %idname1256 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %841, i32 0, i32 3, !dbg !10077
  %arraydecay1257 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1256, i64 0, i64 0, !dbg !10077
  %call1258 = call i8* @BLI_strncpy(i8* %arraydecay1257, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.196, i64 0, i64 0), i64 64), !dbg !10077
  %call1259 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.196, i64 0, i64 0)), !dbg !10077
  %842 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10077
  %ext1260 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %842, i32 0, i32 44, !dbg !10077
  %srna1261 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1260, i32 0, i32 1, !dbg !10077
  store %struct.StructRNA* %call1259, %struct.StructRNA** %srna1261, align 8, !dbg !10077
  %843 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10077
  %ext1262 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %843, i32 0, i32 44, !dbg !10077
  %srna1263 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1262, i32 0, i32 1, !dbg !10077
  %844 = load %struct.StructRNA*, %struct.StructRNA** %srna1263, align 8, !dbg !10077
  %845 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10077
  %846 = bitcast %struct.bNodeType* %845 to i8*, !dbg !10077
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %844, i8* %846), !dbg !10077
  br label %sw.epilog, !dbg !10077

sw.bb1264:                                        ; preds = %entry
  %847 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10078
  %idname1265 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %847, i32 0, i32 3, !dbg !10078
  %arraydecay1266 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1265, i64 0, i64 0, !dbg !10078
  %call1267 = call i8* @BLI_strncpy(i8* %arraydecay1266, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.197, i64 0, i64 0), i64 64), !dbg !10078
  %call1268 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.197, i64 0, i64 0)), !dbg !10078
  %848 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10078
  %ext1269 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %848, i32 0, i32 44, !dbg !10078
  %srna1270 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1269, i32 0, i32 1, !dbg !10078
  store %struct.StructRNA* %call1268, %struct.StructRNA** %srna1270, align 8, !dbg !10078
  %849 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10078
  %ext1271 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %849, i32 0, i32 44, !dbg !10078
  %srna1272 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1271, i32 0, i32 1, !dbg !10078
  %850 = load %struct.StructRNA*, %struct.StructRNA** %srna1272, align 8, !dbg !10078
  %851 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10078
  %852 = bitcast %struct.bNodeType* %851 to i8*, !dbg !10078
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %850, i8* %852), !dbg !10078
  br label %sw.epilog, !dbg !10078

sw.bb1273:                                        ; preds = %entry
  %853 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10079
  %idname1274 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %853, i32 0, i32 3, !dbg !10079
  %arraydecay1275 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1274, i64 0, i64 0, !dbg !10079
  %call1276 = call i8* @BLI_strncpy(i8* %arraydecay1275, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.198, i64 0, i64 0), i64 64), !dbg !10079
  %call1277 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.198, i64 0, i64 0)), !dbg !10079
  %854 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10079
  %ext1278 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %854, i32 0, i32 44, !dbg !10079
  %srna1279 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1278, i32 0, i32 1, !dbg !10079
  store %struct.StructRNA* %call1277, %struct.StructRNA** %srna1279, align 8, !dbg !10079
  %855 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10079
  %ext1280 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %855, i32 0, i32 44, !dbg !10079
  %srna1281 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1280, i32 0, i32 1, !dbg !10079
  %856 = load %struct.StructRNA*, %struct.StructRNA** %srna1281, align 8, !dbg !10079
  %857 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10079
  %858 = bitcast %struct.bNodeType* %857 to i8*, !dbg !10079
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %856, i8* %858), !dbg !10079
  br label %sw.epilog, !dbg !10079

sw.bb1282:                                        ; preds = %entry
  %859 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10080
  %idname1283 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %859, i32 0, i32 3, !dbg !10080
  %arraydecay1284 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1283, i64 0, i64 0, !dbg !10080
  %call1285 = call i8* @BLI_strncpy(i8* %arraydecay1284, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.199, i64 0, i64 0), i64 64), !dbg !10080
  %call1286 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.199, i64 0, i64 0)), !dbg !10080
  %860 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10080
  %ext1287 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %860, i32 0, i32 44, !dbg !10080
  %srna1288 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1287, i32 0, i32 1, !dbg !10080
  store %struct.StructRNA* %call1286, %struct.StructRNA** %srna1288, align 8, !dbg !10080
  %861 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10080
  %ext1289 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %861, i32 0, i32 44, !dbg !10080
  %srna1290 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1289, i32 0, i32 1, !dbg !10080
  %862 = load %struct.StructRNA*, %struct.StructRNA** %srna1290, align 8, !dbg !10080
  %863 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10080
  %864 = bitcast %struct.bNodeType* %863 to i8*, !dbg !10080
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %862, i8* %864), !dbg !10080
  br label %sw.epilog, !dbg !10080

sw.bb1291:                                        ; preds = %entry
  %865 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10081
  %idname1292 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %865, i32 0, i32 3, !dbg !10081
  %arraydecay1293 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1292, i64 0, i64 0, !dbg !10081
  %call1294 = call i8* @BLI_strncpy(i8* %arraydecay1293, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.200, i64 0, i64 0), i64 64), !dbg !10081
  %call1295 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.200, i64 0, i64 0)), !dbg !10081
  %866 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10081
  %ext1296 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %866, i32 0, i32 44, !dbg !10081
  %srna1297 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1296, i32 0, i32 1, !dbg !10081
  store %struct.StructRNA* %call1295, %struct.StructRNA** %srna1297, align 8, !dbg !10081
  %867 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10081
  %ext1298 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %867, i32 0, i32 44, !dbg !10081
  %srna1299 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1298, i32 0, i32 1, !dbg !10081
  %868 = load %struct.StructRNA*, %struct.StructRNA** %srna1299, align 8, !dbg !10081
  %869 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10081
  %870 = bitcast %struct.bNodeType* %869 to i8*, !dbg !10081
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %868, i8* %870), !dbg !10081
  br label %sw.epilog, !dbg !10081

sw.bb1300:                                        ; preds = %entry
  %871 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10082
  %idname1301 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %871, i32 0, i32 3, !dbg !10082
  %arraydecay1302 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1301, i64 0, i64 0, !dbg !10082
  %call1303 = call i8* @BLI_strncpy(i8* %arraydecay1302, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.201, i64 0, i64 0), i64 64), !dbg !10082
  %call1304 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.201, i64 0, i64 0)), !dbg !10082
  %872 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10082
  %ext1305 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %872, i32 0, i32 44, !dbg !10082
  %srna1306 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1305, i32 0, i32 1, !dbg !10082
  store %struct.StructRNA* %call1304, %struct.StructRNA** %srna1306, align 8, !dbg !10082
  %873 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10082
  %ext1307 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %873, i32 0, i32 44, !dbg !10082
  %srna1308 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1307, i32 0, i32 1, !dbg !10082
  %874 = load %struct.StructRNA*, %struct.StructRNA** %srna1308, align 8, !dbg !10082
  %875 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10082
  %876 = bitcast %struct.bNodeType* %875 to i8*, !dbg !10082
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %874, i8* %876), !dbg !10082
  br label %sw.epilog, !dbg !10082

sw.bb1309:                                        ; preds = %entry
  %877 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10083
  %idname1310 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %877, i32 0, i32 3, !dbg !10083
  %arraydecay1311 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1310, i64 0, i64 0, !dbg !10083
  %call1312 = call i8* @BLI_strncpy(i8* %arraydecay1311, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.202, i64 0, i64 0), i64 64), !dbg !10083
  %call1313 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.202, i64 0, i64 0)), !dbg !10083
  %878 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10083
  %ext1314 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %878, i32 0, i32 44, !dbg !10083
  %srna1315 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1314, i32 0, i32 1, !dbg !10083
  store %struct.StructRNA* %call1313, %struct.StructRNA** %srna1315, align 8, !dbg !10083
  %879 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10083
  %ext1316 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %879, i32 0, i32 44, !dbg !10083
  %srna1317 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1316, i32 0, i32 1, !dbg !10083
  %880 = load %struct.StructRNA*, %struct.StructRNA** %srna1317, align 8, !dbg !10083
  %881 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10083
  %882 = bitcast %struct.bNodeType* %881 to i8*, !dbg !10083
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %880, i8* %882), !dbg !10083
  br label %sw.epilog, !dbg !10083

sw.bb1318:                                        ; preds = %entry
  %883 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10084
  %idname1319 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %883, i32 0, i32 3, !dbg !10084
  %arraydecay1320 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1319, i64 0, i64 0, !dbg !10084
  %call1321 = call i8* @BLI_strncpy(i8* %arraydecay1320, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.203, i64 0, i64 0), i64 64), !dbg !10084
  %call1322 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.203, i64 0, i64 0)), !dbg !10084
  %884 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10084
  %ext1323 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %884, i32 0, i32 44, !dbg !10084
  %srna1324 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1323, i32 0, i32 1, !dbg !10084
  store %struct.StructRNA* %call1322, %struct.StructRNA** %srna1324, align 8, !dbg !10084
  %885 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10084
  %ext1325 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %885, i32 0, i32 44, !dbg !10084
  %srna1326 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1325, i32 0, i32 1, !dbg !10084
  %886 = load %struct.StructRNA*, %struct.StructRNA** %srna1326, align 8, !dbg !10084
  %887 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10084
  %888 = bitcast %struct.bNodeType* %887 to i8*, !dbg !10084
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %886, i8* %888), !dbg !10084
  br label %sw.epilog, !dbg !10084

sw.bb1327:                                        ; preds = %entry
  %889 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10085
  %idname1328 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %889, i32 0, i32 3, !dbg !10085
  %arraydecay1329 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1328, i64 0, i64 0, !dbg !10085
  %call1330 = call i8* @BLI_strncpy(i8* %arraydecay1329, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.204, i64 0, i64 0), i64 64), !dbg !10085
  %call1331 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.204, i64 0, i64 0)), !dbg !10085
  %890 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10085
  %ext1332 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %890, i32 0, i32 44, !dbg !10085
  %srna1333 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1332, i32 0, i32 1, !dbg !10085
  store %struct.StructRNA* %call1331, %struct.StructRNA** %srna1333, align 8, !dbg !10085
  %891 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10085
  %ext1334 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %891, i32 0, i32 44, !dbg !10085
  %srna1335 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1334, i32 0, i32 1, !dbg !10085
  %892 = load %struct.StructRNA*, %struct.StructRNA** %srna1335, align 8, !dbg !10085
  %893 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10085
  %894 = bitcast %struct.bNodeType* %893 to i8*, !dbg !10085
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %892, i8* %894), !dbg !10085
  br label %sw.epilog, !dbg !10085

sw.bb1336:                                        ; preds = %entry
  %895 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10086
  %idname1337 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %895, i32 0, i32 3, !dbg !10086
  %arraydecay1338 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1337, i64 0, i64 0, !dbg !10086
  %call1339 = call i8* @BLI_strncpy(i8* %arraydecay1338, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.205, i64 0, i64 0), i64 64), !dbg !10086
  %call1340 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.205, i64 0, i64 0)), !dbg !10086
  %896 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10086
  %ext1341 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %896, i32 0, i32 44, !dbg !10086
  %srna1342 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1341, i32 0, i32 1, !dbg !10086
  store %struct.StructRNA* %call1340, %struct.StructRNA** %srna1342, align 8, !dbg !10086
  %897 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10086
  %ext1343 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %897, i32 0, i32 44, !dbg !10086
  %srna1344 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1343, i32 0, i32 1, !dbg !10086
  %898 = load %struct.StructRNA*, %struct.StructRNA** %srna1344, align 8, !dbg !10086
  %899 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10086
  %900 = bitcast %struct.bNodeType* %899 to i8*, !dbg !10086
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %898, i8* %900), !dbg !10086
  br label %sw.epilog, !dbg !10086

sw.bb1345:                                        ; preds = %entry
  %901 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10087
  %idname1346 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %901, i32 0, i32 3, !dbg !10087
  %arraydecay1347 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1346, i64 0, i64 0, !dbg !10087
  %call1348 = call i8* @BLI_strncpy(i8* %arraydecay1347, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.206, i64 0, i64 0), i64 64), !dbg !10087
  %call1349 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.206, i64 0, i64 0)), !dbg !10087
  %902 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10087
  %ext1350 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %902, i32 0, i32 44, !dbg !10087
  %srna1351 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1350, i32 0, i32 1, !dbg !10087
  store %struct.StructRNA* %call1349, %struct.StructRNA** %srna1351, align 8, !dbg !10087
  %903 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10087
  %ext1352 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %903, i32 0, i32 44, !dbg !10087
  %srna1353 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1352, i32 0, i32 1, !dbg !10087
  %904 = load %struct.StructRNA*, %struct.StructRNA** %srna1353, align 8, !dbg !10087
  %905 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10087
  %906 = bitcast %struct.bNodeType* %905 to i8*, !dbg !10087
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %904, i8* %906), !dbg !10087
  br label %sw.epilog, !dbg !10087

sw.bb1354:                                        ; preds = %entry
  %907 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10088
  %idname1355 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %907, i32 0, i32 3, !dbg !10088
  %arraydecay1356 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1355, i64 0, i64 0, !dbg !10088
  %call1357 = call i8* @BLI_strncpy(i8* %arraydecay1356, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.207, i64 0, i64 0), i64 64), !dbg !10088
  %call1358 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.207, i64 0, i64 0)), !dbg !10088
  %908 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10088
  %ext1359 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %908, i32 0, i32 44, !dbg !10088
  %srna1360 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1359, i32 0, i32 1, !dbg !10088
  store %struct.StructRNA* %call1358, %struct.StructRNA** %srna1360, align 8, !dbg !10088
  %909 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10088
  %ext1361 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %909, i32 0, i32 44, !dbg !10088
  %srna1362 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1361, i32 0, i32 1, !dbg !10088
  %910 = load %struct.StructRNA*, %struct.StructRNA** %srna1362, align 8, !dbg !10088
  %911 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10088
  %912 = bitcast %struct.bNodeType* %911 to i8*, !dbg !10088
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %910, i8* %912), !dbg !10088
  br label %sw.epilog, !dbg !10088

sw.bb1363:                                        ; preds = %entry
  %913 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10089
  %idname1364 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %913, i32 0, i32 3, !dbg !10089
  %arraydecay1365 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1364, i64 0, i64 0, !dbg !10089
  %call1366 = call i8* @BLI_strncpy(i8* %arraydecay1365, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.208, i64 0, i64 0), i64 64), !dbg !10089
  %call1367 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.208, i64 0, i64 0)), !dbg !10089
  %914 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10089
  %ext1368 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %914, i32 0, i32 44, !dbg !10089
  %srna1369 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1368, i32 0, i32 1, !dbg !10089
  store %struct.StructRNA* %call1367, %struct.StructRNA** %srna1369, align 8, !dbg !10089
  %915 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10089
  %ext1370 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %915, i32 0, i32 44, !dbg !10089
  %srna1371 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1370, i32 0, i32 1, !dbg !10089
  %916 = load %struct.StructRNA*, %struct.StructRNA** %srna1371, align 8, !dbg !10089
  %917 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10089
  %918 = bitcast %struct.bNodeType* %917 to i8*, !dbg !10089
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %916, i8* %918), !dbg !10089
  br label %sw.epilog, !dbg !10089

sw.bb1372:                                        ; preds = %entry
  %919 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10090
  %idname1373 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %919, i32 0, i32 3, !dbg !10090
  %arraydecay1374 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1373, i64 0, i64 0, !dbg !10090
  %call1375 = call i8* @BLI_strncpy(i8* %arraydecay1374, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.209, i64 0, i64 0), i64 64), !dbg !10090
  %call1376 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.209, i64 0, i64 0)), !dbg !10090
  %920 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10090
  %ext1377 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %920, i32 0, i32 44, !dbg !10090
  %srna1378 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1377, i32 0, i32 1, !dbg !10090
  store %struct.StructRNA* %call1376, %struct.StructRNA** %srna1378, align 8, !dbg !10090
  %921 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10090
  %ext1379 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %921, i32 0, i32 44, !dbg !10090
  %srna1380 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1379, i32 0, i32 1, !dbg !10090
  %922 = load %struct.StructRNA*, %struct.StructRNA** %srna1380, align 8, !dbg !10090
  %923 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10090
  %924 = bitcast %struct.bNodeType* %923 to i8*, !dbg !10090
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %922, i8* %924), !dbg !10090
  br label %sw.epilog, !dbg !10090

sw.bb1381:                                        ; preds = %entry
  %925 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10091
  %idname1382 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %925, i32 0, i32 3, !dbg !10091
  %arraydecay1383 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1382, i64 0, i64 0, !dbg !10091
  %call1384 = call i8* @BLI_strncpy(i8* %arraydecay1383, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.210, i64 0, i64 0), i64 64), !dbg !10091
  %call1385 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.210, i64 0, i64 0)), !dbg !10091
  %926 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10091
  %ext1386 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %926, i32 0, i32 44, !dbg !10091
  %srna1387 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1386, i32 0, i32 1, !dbg !10091
  store %struct.StructRNA* %call1385, %struct.StructRNA** %srna1387, align 8, !dbg !10091
  %927 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10091
  %ext1388 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %927, i32 0, i32 44, !dbg !10091
  %srna1389 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1388, i32 0, i32 1, !dbg !10091
  %928 = load %struct.StructRNA*, %struct.StructRNA** %srna1389, align 8, !dbg !10091
  %929 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10091
  %930 = bitcast %struct.bNodeType* %929 to i8*, !dbg !10091
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %928, i8* %930), !dbg !10091
  br label %sw.epilog, !dbg !10091

sw.bb1390:                                        ; preds = %entry
  %931 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10092
  %idname1391 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %931, i32 0, i32 3, !dbg !10092
  %arraydecay1392 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1391, i64 0, i64 0, !dbg !10092
  %call1393 = call i8* @BLI_strncpy(i8* %arraydecay1392, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.211, i64 0, i64 0), i64 64), !dbg !10092
  %call1394 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.211, i64 0, i64 0)), !dbg !10092
  %932 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10092
  %ext1395 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %932, i32 0, i32 44, !dbg !10092
  %srna1396 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1395, i32 0, i32 1, !dbg !10092
  store %struct.StructRNA* %call1394, %struct.StructRNA** %srna1396, align 8, !dbg !10092
  %933 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10092
  %ext1397 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %933, i32 0, i32 44, !dbg !10092
  %srna1398 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1397, i32 0, i32 1, !dbg !10092
  %934 = load %struct.StructRNA*, %struct.StructRNA** %srna1398, align 8, !dbg !10092
  %935 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10092
  %936 = bitcast %struct.bNodeType* %935 to i8*, !dbg !10092
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %934, i8* %936), !dbg !10092
  br label %sw.epilog, !dbg !10092

sw.bb1399:                                        ; preds = %entry
  %937 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10093
  %idname1400 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %937, i32 0, i32 3, !dbg !10093
  %arraydecay1401 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1400, i64 0, i64 0, !dbg !10093
  %call1402 = call i8* @BLI_strncpy(i8* %arraydecay1401, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.212, i64 0, i64 0), i64 64), !dbg !10093
  %call1403 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.212, i64 0, i64 0)), !dbg !10093
  %938 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10093
  %ext1404 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %938, i32 0, i32 44, !dbg !10093
  %srna1405 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1404, i32 0, i32 1, !dbg !10093
  store %struct.StructRNA* %call1403, %struct.StructRNA** %srna1405, align 8, !dbg !10093
  %939 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10093
  %ext1406 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %939, i32 0, i32 44, !dbg !10093
  %srna1407 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1406, i32 0, i32 1, !dbg !10093
  %940 = load %struct.StructRNA*, %struct.StructRNA** %srna1407, align 8, !dbg !10093
  %941 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10093
  %942 = bitcast %struct.bNodeType* %941 to i8*, !dbg !10093
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %940, i8* %942), !dbg !10093
  br label %sw.epilog, !dbg !10093

sw.bb1408:                                        ; preds = %entry
  %943 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10094
  %idname1409 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %943, i32 0, i32 3, !dbg !10094
  %arraydecay1410 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1409, i64 0, i64 0, !dbg !10094
  %call1411 = call i8* @BLI_strncpy(i8* %arraydecay1410, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.213, i64 0, i64 0), i64 64), !dbg !10094
  %call1412 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.213, i64 0, i64 0)), !dbg !10094
  %944 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10094
  %ext1413 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %944, i32 0, i32 44, !dbg !10094
  %srna1414 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1413, i32 0, i32 1, !dbg !10094
  store %struct.StructRNA* %call1412, %struct.StructRNA** %srna1414, align 8, !dbg !10094
  %945 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10094
  %ext1415 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %945, i32 0, i32 44, !dbg !10094
  %srna1416 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1415, i32 0, i32 1, !dbg !10094
  %946 = load %struct.StructRNA*, %struct.StructRNA** %srna1416, align 8, !dbg !10094
  %947 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10094
  %948 = bitcast %struct.bNodeType* %947 to i8*, !dbg !10094
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %946, i8* %948), !dbg !10094
  br label %sw.epilog, !dbg !10094

sw.bb1417:                                        ; preds = %entry
  %949 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10095
  %idname1418 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %949, i32 0, i32 3, !dbg !10095
  %arraydecay1419 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1418, i64 0, i64 0, !dbg !10095
  %call1420 = call i8* @BLI_strncpy(i8* %arraydecay1419, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.214, i64 0, i64 0), i64 64), !dbg !10095
  %call1421 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.214, i64 0, i64 0)), !dbg !10095
  %950 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10095
  %ext1422 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %950, i32 0, i32 44, !dbg !10095
  %srna1423 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1422, i32 0, i32 1, !dbg !10095
  store %struct.StructRNA* %call1421, %struct.StructRNA** %srna1423, align 8, !dbg !10095
  %951 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10095
  %ext1424 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %951, i32 0, i32 44, !dbg !10095
  %srna1425 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1424, i32 0, i32 1, !dbg !10095
  %952 = load %struct.StructRNA*, %struct.StructRNA** %srna1425, align 8, !dbg !10095
  %953 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10095
  %954 = bitcast %struct.bNodeType* %953 to i8*, !dbg !10095
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %952, i8* %954), !dbg !10095
  br label %sw.epilog, !dbg !10095

sw.bb1426:                                        ; preds = %entry
  %955 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10096
  %idname1427 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %955, i32 0, i32 3, !dbg !10096
  %arraydecay1428 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1427, i64 0, i64 0, !dbg !10096
  %call1429 = call i8* @BLI_strncpy(i8* %arraydecay1428, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.215, i64 0, i64 0), i64 64), !dbg !10096
  %call1430 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.215, i64 0, i64 0)), !dbg !10096
  %956 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10096
  %ext1431 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %956, i32 0, i32 44, !dbg !10096
  %srna1432 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1431, i32 0, i32 1, !dbg !10096
  store %struct.StructRNA* %call1430, %struct.StructRNA** %srna1432, align 8, !dbg !10096
  %957 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10096
  %ext1433 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %957, i32 0, i32 44, !dbg !10096
  %srna1434 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1433, i32 0, i32 1, !dbg !10096
  %958 = load %struct.StructRNA*, %struct.StructRNA** %srna1434, align 8, !dbg !10096
  %959 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10096
  %960 = bitcast %struct.bNodeType* %959 to i8*, !dbg !10096
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %958, i8* %960), !dbg !10096
  br label %sw.epilog, !dbg !10096

sw.bb1435:                                        ; preds = %entry
  %961 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10097
  %idname1436 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %961, i32 0, i32 3, !dbg !10097
  %arraydecay1437 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1436, i64 0, i64 0, !dbg !10097
  %call1438 = call i8* @BLI_strncpy(i8* %arraydecay1437, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.216, i64 0, i64 0), i64 64), !dbg !10097
  %call1439 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.216, i64 0, i64 0)), !dbg !10097
  %962 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10097
  %ext1440 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %962, i32 0, i32 44, !dbg !10097
  %srna1441 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1440, i32 0, i32 1, !dbg !10097
  store %struct.StructRNA* %call1439, %struct.StructRNA** %srna1441, align 8, !dbg !10097
  %963 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10097
  %ext1442 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %963, i32 0, i32 44, !dbg !10097
  %srna1443 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1442, i32 0, i32 1, !dbg !10097
  %964 = load %struct.StructRNA*, %struct.StructRNA** %srna1443, align 8, !dbg !10097
  %965 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10097
  %966 = bitcast %struct.bNodeType* %965 to i8*, !dbg !10097
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %964, i8* %966), !dbg !10097
  br label %sw.epilog, !dbg !10097

sw.bb1444:                                        ; preds = %entry
  %967 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10098
  %idname1445 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %967, i32 0, i32 3, !dbg !10098
  %arraydecay1446 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1445, i64 0, i64 0, !dbg !10098
  %call1447 = call i8* @BLI_strncpy(i8* %arraydecay1446, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.217, i64 0, i64 0), i64 64), !dbg !10098
  %call1448 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.217, i64 0, i64 0)), !dbg !10098
  %968 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10098
  %ext1449 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %968, i32 0, i32 44, !dbg !10098
  %srna1450 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1449, i32 0, i32 1, !dbg !10098
  store %struct.StructRNA* %call1448, %struct.StructRNA** %srna1450, align 8, !dbg !10098
  %969 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10098
  %ext1451 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %969, i32 0, i32 44, !dbg !10098
  %srna1452 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1451, i32 0, i32 1, !dbg !10098
  %970 = load %struct.StructRNA*, %struct.StructRNA** %srna1452, align 8, !dbg !10098
  %971 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10098
  %972 = bitcast %struct.bNodeType* %971 to i8*, !dbg !10098
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %970, i8* %972), !dbg !10098
  br label %sw.epilog, !dbg !10098

sw.bb1453:                                        ; preds = %entry
  %973 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10099
  %idname1454 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %973, i32 0, i32 3, !dbg !10099
  %arraydecay1455 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1454, i64 0, i64 0, !dbg !10099
  %call1456 = call i8* @BLI_strncpy(i8* %arraydecay1455, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.218, i64 0, i64 0), i64 64), !dbg !10099
  %call1457 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.218, i64 0, i64 0)), !dbg !10099
  %974 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10099
  %ext1458 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %974, i32 0, i32 44, !dbg !10099
  %srna1459 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1458, i32 0, i32 1, !dbg !10099
  store %struct.StructRNA* %call1457, %struct.StructRNA** %srna1459, align 8, !dbg !10099
  %975 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10099
  %ext1460 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %975, i32 0, i32 44, !dbg !10099
  %srna1461 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1460, i32 0, i32 1, !dbg !10099
  %976 = load %struct.StructRNA*, %struct.StructRNA** %srna1461, align 8, !dbg !10099
  %977 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10099
  %978 = bitcast %struct.bNodeType* %977 to i8*, !dbg !10099
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %976, i8* %978), !dbg !10099
  br label %sw.epilog, !dbg !10099

sw.bb1462:                                        ; preds = %entry
  %979 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10100
  %idname1463 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %979, i32 0, i32 3, !dbg !10100
  %arraydecay1464 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1463, i64 0, i64 0, !dbg !10100
  %call1465 = call i8* @BLI_strncpy(i8* %arraydecay1464, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.219, i64 0, i64 0), i64 64), !dbg !10100
  %call1466 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.219, i64 0, i64 0)), !dbg !10100
  %980 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10100
  %ext1467 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %980, i32 0, i32 44, !dbg !10100
  %srna1468 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1467, i32 0, i32 1, !dbg !10100
  store %struct.StructRNA* %call1466, %struct.StructRNA** %srna1468, align 8, !dbg !10100
  %981 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10100
  %ext1469 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %981, i32 0, i32 44, !dbg !10100
  %srna1470 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1469, i32 0, i32 1, !dbg !10100
  %982 = load %struct.StructRNA*, %struct.StructRNA** %srna1470, align 8, !dbg !10100
  %983 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10100
  %984 = bitcast %struct.bNodeType* %983 to i8*, !dbg !10100
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %982, i8* %984), !dbg !10100
  br label %sw.epilog, !dbg !10100

sw.bb1471:                                        ; preds = %entry
  %985 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10101
  %idname1472 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %985, i32 0, i32 3, !dbg !10101
  %arraydecay1473 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1472, i64 0, i64 0, !dbg !10101
  %call1474 = call i8* @BLI_strncpy(i8* %arraydecay1473, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.220, i64 0, i64 0), i64 64), !dbg !10101
  %call1475 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.220, i64 0, i64 0)), !dbg !10101
  %986 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10101
  %ext1476 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %986, i32 0, i32 44, !dbg !10101
  %srna1477 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1476, i32 0, i32 1, !dbg !10101
  store %struct.StructRNA* %call1475, %struct.StructRNA** %srna1477, align 8, !dbg !10101
  %987 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10101
  %ext1478 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %987, i32 0, i32 44, !dbg !10101
  %srna1479 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1478, i32 0, i32 1, !dbg !10101
  %988 = load %struct.StructRNA*, %struct.StructRNA** %srna1479, align 8, !dbg !10101
  %989 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10101
  %990 = bitcast %struct.bNodeType* %989 to i8*, !dbg !10101
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %988, i8* %990), !dbg !10101
  br label %sw.epilog, !dbg !10101

sw.bb1480:                                        ; preds = %entry
  %991 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10102
  %idname1481 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %991, i32 0, i32 3, !dbg !10102
  %arraydecay1482 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1481, i64 0, i64 0, !dbg !10102
  %call1483 = call i8* @BLI_strncpy(i8* %arraydecay1482, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.221, i64 0, i64 0), i64 64), !dbg !10102
  %call1484 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.221, i64 0, i64 0)), !dbg !10102
  %992 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10102
  %ext1485 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %992, i32 0, i32 44, !dbg !10102
  %srna1486 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1485, i32 0, i32 1, !dbg !10102
  store %struct.StructRNA* %call1484, %struct.StructRNA** %srna1486, align 8, !dbg !10102
  %993 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10102
  %ext1487 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %993, i32 0, i32 44, !dbg !10102
  %srna1488 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1487, i32 0, i32 1, !dbg !10102
  %994 = load %struct.StructRNA*, %struct.StructRNA** %srna1488, align 8, !dbg !10102
  %995 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10102
  %996 = bitcast %struct.bNodeType* %995 to i8*, !dbg !10102
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %994, i8* %996), !dbg !10102
  br label %sw.epilog, !dbg !10102

sw.bb1489:                                        ; preds = %entry
  %997 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10103
  %idname1490 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %997, i32 0, i32 3, !dbg !10103
  %arraydecay1491 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1490, i64 0, i64 0, !dbg !10103
  %call1492 = call i8* @BLI_strncpy(i8* %arraydecay1491, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.222, i64 0, i64 0), i64 64), !dbg !10103
  %call1493 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.222, i64 0, i64 0)), !dbg !10103
  %998 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10103
  %ext1494 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %998, i32 0, i32 44, !dbg !10103
  %srna1495 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1494, i32 0, i32 1, !dbg !10103
  store %struct.StructRNA* %call1493, %struct.StructRNA** %srna1495, align 8, !dbg !10103
  %999 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10103
  %ext1496 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %999, i32 0, i32 44, !dbg !10103
  %srna1497 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1496, i32 0, i32 1, !dbg !10103
  %1000 = load %struct.StructRNA*, %struct.StructRNA** %srna1497, align 8, !dbg !10103
  %1001 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10103
  %1002 = bitcast %struct.bNodeType* %1001 to i8*, !dbg !10103
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1000, i8* %1002), !dbg !10103
  br label %sw.epilog, !dbg !10103

sw.bb1498:                                        ; preds = %entry
  %1003 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10104
  %idname1499 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1003, i32 0, i32 3, !dbg !10104
  %arraydecay1500 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1499, i64 0, i64 0, !dbg !10104
  %call1501 = call i8* @BLI_strncpy(i8* %arraydecay1500, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.223, i64 0, i64 0), i64 64), !dbg !10104
  %call1502 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.223, i64 0, i64 0)), !dbg !10104
  %1004 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10104
  %ext1503 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1004, i32 0, i32 44, !dbg !10104
  %srna1504 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1503, i32 0, i32 1, !dbg !10104
  store %struct.StructRNA* %call1502, %struct.StructRNA** %srna1504, align 8, !dbg !10104
  %1005 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10104
  %ext1505 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1005, i32 0, i32 44, !dbg !10104
  %srna1506 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1505, i32 0, i32 1, !dbg !10104
  %1006 = load %struct.StructRNA*, %struct.StructRNA** %srna1506, align 8, !dbg !10104
  %1007 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10104
  %1008 = bitcast %struct.bNodeType* %1007 to i8*, !dbg !10104
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1006, i8* %1008), !dbg !10104
  br label %sw.epilog, !dbg !10104

sw.bb1507:                                        ; preds = %entry
  %1009 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10105
  %idname1508 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1009, i32 0, i32 3, !dbg !10105
  %arraydecay1509 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1508, i64 0, i64 0, !dbg !10105
  %call1510 = call i8* @BLI_strncpy(i8* %arraydecay1509, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.224, i64 0, i64 0), i64 64), !dbg !10105
  %call1511 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.224, i64 0, i64 0)), !dbg !10105
  %1010 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10105
  %ext1512 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1010, i32 0, i32 44, !dbg !10105
  %srna1513 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1512, i32 0, i32 1, !dbg !10105
  store %struct.StructRNA* %call1511, %struct.StructRNA** %srna1513, align 8, !dbg !10105
  %1011 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10105
  %ext1514 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1011, i32 0, i32 44, !dbg !10105
  %srna1515 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1514, i32 0, i32 1, !dbg !10105
  %1012 = load %struct.StructRNA*, %struct.StructRNA** %srna1515, align 8, !dbg !10105
  %1013 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10105
  %1014 = bitcast %struct.bNodeType* %1013 to i8*, !dbg !10105
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1012, i8* %1014), !dbg !10105
  br label %sw.epilog, !dbg !10105

sw.bb1516:                                        ; preds = %entry
  %1015 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10106
  %idname1517 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1015, i32 0, i32 3, !dbg !10106
  %arraydecay1518 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1517, i64 0, i64 0, !dbg !10106
  %call1519 = call i8* @BLI_strncpy(i8* %arraydecay1518, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.225, i64 0, i64 0), i64 64), !dbg !10106
  %call1520 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.225, i64 0, i64 0)), !dbg !10106
  %1016 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10106
  %ext1521 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1016, i32 0, i32 44, !dbg !10106
  %srna1522 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1521, i32 0, i32 1, !dbg !10106
  store %struct.StructRNA* %call1520, %struct.StructRNA** %srna1522, align 8, !dbg !10106
  %1017 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10106
  %ext1523 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1017, i32 0, i32 44, !dbg !10106
  %srna1524 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1523, i32 0, i32 1, !dbg !10106
  %1018 = load %struct.StructRNA*, %struct.StructRNA** %srna1524, align 8, !dbg !10106
  %1019 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10106
  %1020 = bitcast %struct.bNodeType* %1019 to i8*, !dbg !10106
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1018, i8* %1020), !dbg !10106
  br label %sw.epilog, !dbg !10106

sw.bb1525:                                        ; preds = %entry
  %1021 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10107
  %idname1526 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1021, i32 0, i32 3, !dbg !10107
  %arraydecay1527 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1526, i64 0, i64 0, !dbg !10107
  %call1528 = call i8* @BLI_strncpy(i8* %arraydecay1527, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.226, i64 0, i64 0), i64 64), !dbg !10107
  %call1529 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.226, i64 0, i64 0)), !dbg !10107
  %1022 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10107
  %ext1530 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1022, i32 0, i32 44, !dbg !10107
  %srna1531 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1530, i32 0, i32 1, !dbg !10107
  store %struct.StructRNA* %call1529, %struct.StructRNA** %srna1531, align 8, !dbg !10107
  %1023 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10107
  %ext1532 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1023, i32 0, i32 44, !dbg !10107
  %srna1533 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1532, i32 0, i32 1, !dbg !10107
  %1024 = load %struct.StructRNA*, %struct.StructRNA** %srna1533, align 8, !dbg !10107
  %1025 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10107
  %1026 = bitcast %struct.bNodeType* %1025 to i8*, !dbg !10107
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1024, i8* %1026), !dbg !10107
  br label %sw.epilog, !dbg !10107

sw.bb1534:                                        ; preds = %entry
  %1027 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10108
  %idname1535 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1027, i32 0, i32 3, !dbg !10108
  %arraydecay1536 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1535, i64 0, i64 0, !dbg !10108
  %call1537 = call i8* @BLI_strncpy(i8* %arraydecay1536, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.227, i64 0, i64 0), i64 64), !dbg !10108
  %call1538 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.227, i64 0, i64 0)), !dbg !10108
  %1028 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10108
  %ext1539 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1028, i32 0, i32 44, !dbg !10108
  %srna1540 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1539, i32 0, i32 1, !dbg !10108
  store %struct.StructRNA* %call1538, %struct.StructRNA** %srna1540, align 8, !dbg !10108
  %1029 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10108
  %ext1541 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1029, i32 0, i32 44, !dbg !10108
  %srna1542 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1541, i32 0, i32 1, !dbg !10108
  %1030 = load %struct.StructRNA*, %struct.StructRNA** %srna1542, align 8, !dbg !10108
  %1031 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10108
  %1032 = bitcast %struct.bNodeType* %1031 to i8*, !dbg !10108
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1030, i8* %1032), !dbg !10108
  br label %sw.epilog, !dbg !10108

sw.bb1543:                                        ; preds = %entry
  %1033 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10109
  %idname1544 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1033, i32 0, i32 3, !dbg !10109
  %arraydecay1545 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1544, i64 0, i64 0, !dbg !10109
  %call1546 = call i8* @BLI_strncpy(i8* %arraydecay1545, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.228, i64 0, i64 0), i64 64), !dbg !10109
  %call1547 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.228, i64 0, i64 0)), !dbg !10109
  %1034 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10109
  %ext1548 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1034, i32 0, i32 44, !dbg !10109
  %srna1549 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1548, i32 0, i32 1, !dbg !10109
  store %struct.StructRNA* %call1547, %struct.StructRNA** %srna1549, align 8, !dbg !10109
  %1035 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10109
  %ext1550 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1035, i32 0, i32 44, !dbg !10109
  %srna1551 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1550, i32 0, i32 1, !dbg !10109
  %1036 = load %struct.StructRNA*, %struct.StructRNA** %srna1551, align 8, !dbg !10109
  %1037 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10109
  %1038 = bitcast %struct.bNodeType* %1037 to i8*, !dbg !10109
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1036, i8* %1038), !dbg !10109
  br label %sw.epilog, !dbg !10109

sw.bb1552:                                        ; preds = %entry
  %1039 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10110
  %idname1553 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1039, i32 0, i32 3, !dbg !10110
  %arraydecay1554 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1553, i64 0, i64 0, !dbg !10110
  %call1555 = call i8* @BLI_strncpy(i8* %arraydecay1554, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.229, i64 0, i64 0), i64 64), !dbg !10110
  %call1556 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.229, i64 0, i64 0)), !dbg !10110
  %1040 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10110
  %ext1557 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1040, i32 0, i32 44, !dbg !10110
  %srna1558 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1557, i32 0, i32 1, !dbg !10110
  store %struct.StructRNA* %call1556, %struct.StructRNA** %srna1558, align 8, !dbg !10110
  %1041 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10110
  %ext1559 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1041, i32 0, i32 44, !dbg !10110
  %srna1560 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1559, i32 0, i32 1, !dbg !10110
  %1042 = load %struct.StructRNA*, %struct.StructRNA** %srna1560, align 8, !dbg !10110
  %1043 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10110
  %1044 = bitcast %struct.bNodeType* %1043 to i8*, !dbg !10110
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1042, i8* %1044), !dbg !10110
  br label %sw.epilog, !dbg !10110

sw.bb1561:                                        ; preds = %entry
  %1045 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10111
  %idname1562 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1045, i32 0, i32 3, !dbg !10111
  %arraydecay1563 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1562, i64 0, i64 0, !dbg !10111
  %call1564 = call i8* @BLI_strncpy(i8* %arraydecay1563, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.230, i64 0, i64 0), i64 64), !dbg !10111
  %call1565 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.230, i64 0, i64 0)), !dbg !10111
  %1046 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10111
  %ext1566 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1046, i32 0, i32 44, !dbg !10111
  %srna1567 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1566, i32 0, i32 1, !dbg !10111
  store %struct.StructRNA* %call1565, %struct.StructRNA** %srna1567, align 8, !dbg !10111
  %1047 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10111
  %ext1568 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1047, i32 0, i32 44, !dbg !10111
  %srna1569 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1568, i32 0, i32 1, !dbg !10111
  %1048 = load %struct.StructRNA*, %struct.StructRNA** %srna1569, align 8, !dbg !10111
  %1049 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10111
  %1050 = bitcast %struct.bNodeType* %1049 to i8*, !dbg !10111
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1048, i8* %1050), !dbg !10111
  br label %sw.epilog, !dbg !10111

sw.bb1570:                                        ; preds = %entry
  %1051 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10112
  %idname1571 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1051, i32 0, i32 3, !dbg !10112
  %arraydecay1572 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1571, i64 0, i64 0, !dbg !10112
  %call1573 = call i8* @BLI_strncpy(i8* %arraydecay1572, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.231, i64 0, i64 0), i64 64), !dbg !10112
  %call1574 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.231, i64 0, i64 0)), !dbg !10112
  %1052 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10112
  %ext1575 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1052, i32 0, i32 44, !dbg !10112
  %srna1576 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1575, i32 0, i32 1, !dbg !10112
  store %struct.StructRNA* %call1574, %struct.StructRNA** %srna1576, align 8, !dbg !10112
  %1053 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10112
  %ext1577 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1053, i32 0, i32 44, !dbg !10112
  %srna1578 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1577, i32 0, i32 1, !dbg !10112
  %1054 = load %struct.StructRNA*, %struct.StructRNA** %srna1578, align 8, !dbg !10112
  %1055 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10112
  %1056 = bitcast %struct.bNodeType* %1055 to i8*, !dbg !10112
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1054, i8* %1056), !dbg !10112
  br label %sw.epilog, !dbg !10112

sw.bb1579:                                        ; preds = %entry
  %1057 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10113
  %idname1580 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1057, i32 0, i32 3, !dbg !10113
  %arraydecay1581 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1580, i64 0, i64 0, !dbg !10113
  %call1582 = call i8* @BLI_strncpy(i8* %arraydecay1581, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.232, i64 0, i64 0), i64 64), !dbg !10113
  %call1583 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.232, i64 0, i64 0)), !dbg !10113
  %1058 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10113
  %ext1584 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1058, i32 0, i32 44, !dbg !10113
  %srna1585 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1584, i32 0, i32 1, !dbg !10113
  store %struct.StructRNA* %call1583, %struct.StructRNA** %srna1585, align 8, !dbg !10113
  %1059 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10113
  %ext1586 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1059, i32 0, i32 44, !dbg !10113
  %srna1587 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1586, i32 0, i32 1, !dbg !10113
  %1060 = load %struct.StructRNA*, %struct.StructRNA** %srna1587, align 8, !dbg !10113
  %1061 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10113
  %1062 = bitcast %struct.bNodeType* %1061 to i8*, !dbg !10113
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1060, i8* %1062), !dbg !10113
  br label %sw.epilog, !dbg !10113

sw.bb1588:                                        ; preds = %entry
  %1063 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10114
  %idname1589 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1063, i32 0, i32 3, !dbg !10114
  %arraydecay1590 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1589, i64 0, i64 0, !dbg !10114
  %call1591 = call i8* @BLI_strncpy(i8* %arraydecay1590, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.233, i64 0, i64 0), i64 64), !dbg !10114
  %call1592 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.233, i64 0, i64 0)), !dbg !10114
  %1064 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10114
  %ext1593 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1064, i32 0, i32 44, !dbg !10114
  %srna1594 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1593, i32 0, i32 1, !dbg !10114
  store %struct.StructRNA* %call1592, %struct.StructRNA** %srna1594, align 8, !dbg !10114
  %1065 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10114
  %ext1595 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1065, i32 0, i32 44, !dbg !10114
  %srna1596 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1595, i32 0, i32 1, !dbg !10114
  %1066 = load %struct.StructRNA*, %struct.StructRNA** %srna1596, align 8, !dbg !10114
  %1067 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10114
  %1068 = bitcast %struct.bNodeType* %1067 to i8*, !dbg !10114
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1066, i8* %1068), !dbg !10114
  br label %sw.epilog, !dbg !10114

sw.bb1597:                                        ; preds = %entry
  %1069 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10115
  %idname1598 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1069, i32 0, i32 3, !dbg !10115
  %arraydecay1599 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1598, i64 0, i64 0, !dbg !10115
  %call1600 = call i8* @BLI_strncpy(i8* %arraydecay1599, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.234, i64 0, i64 0), i64 64), !dbg !10115
  %call1601 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.234, i64 0, i64 0)), !dbg !10115
  %1070 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10115
  %ext1602 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1070, i32 0, i32 44, !dbg !10115
  %srna1603 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1602, i32 0, i32 1, !dbg !10115
  store %struct.StructRNA* %call1601, %struct.StructRNA** %srna1603, align 8, !dbg !10115
  %1071 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10115
  %ext1604 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1071, i32 0, i32 44, !dbg !10115
  %srna1605 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1604, i32 0, i32 1, !dbg !10115
  %1072 = load %struct.StructRNA*, %struct.StructRNA** %srna1605, align 8, !dbg !10115
  %1073 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10115
  %1074 = bitcast %struct.bNodeType* %1073 to i8*, !dbg !10115
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1072, i8* %1074), !dbg !10115
  br label %sw.epilog, !dbg !10115

sw.bb1606:                                        ; preds = %entry
  %1075 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10116
  %idname1607 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1075, i32 0, i32 3, !dbg !10116
  %arraydecay1608 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1607, i64 0, i64 0, !dbg !10116
  %call1609 = call i8* @BLI_strncpy(i8* %arraydecay1608, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.235, i64 0, i64 0), i64 64), !dbg !10116
  %call1610 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.235, i64 0, i64 0)), !dbg !10116
  %1076 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10116
  %ext1611 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1076, i32 0, i32 44, !dbg !10116
  %srna1612 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1611, i32 0, i32 1, !dbg !10116
  store %struct.StructRNA* %call1610, %struct.StructRNA** %srna1612, align 8, !dbg !10116
  %1077 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10116
  %ext1613 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1077, i32 0, i32 44, !dbg !10116
  %srna1614 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1613, i32 0, i32 1, !dbg !10116
  %1078 = load %struct.StructRNA*, %struct.StructRNA** %srna1614, align 8, !dbg !10116
  %1079 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10116
  %1080 = bitcast %struct.bNodeType* %1079 to i8*, !dbg !10116
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1078, i8* %1080), !dbg !10116
  br label %sw.epilog, !dbg !10116

sw.bb1615:                                        ; preds = %entry
  %1081 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10117
  %idname1616 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1081, i32 0, i32 3, !dbg !10117
  %arraydecay1617 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1616, i64 0, i64 0, !dbg !10117
  %call1618 = call i8* @BLI_strncpy(i8* %arraydecay1617, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.236, i64 0, i64 0), i64 64), !dbg !10117
  %call1619 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.236, i64 0, i64 0)), !dbg !10117
  %1082 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10117
  %ext1620 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1082, i32 0, i32 44, !dbg !10117
  %srna1621 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1620, i32 0, i32 1, !dbg !10117
  store %struct.StructRNA* %call1619, %struct.StructRNA** %srna1621, align 8, !dbg !10117
  %1083 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10117
  %ext1622 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1083, i32 0, i32 44, !dbg !10117
  %srna1623 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1622, i32 0, i32 1, !dbg !10117
  %1084 = load %struct.StructRNA*, %struct.StructRNA** %srna1623, align 8, !dbg !10117
  %1085 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10117
  %1086 = bitcast %struct.bNodeType* %1085 to i8*, !dbg !10117
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1084, i8* %1086), !dbg !10117
  br label %sw.epilog, !dbg !10117

sw.bb1624:                                        ; preds = %entry
  %1087 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10118
  %idname1625 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1087, i32 0, i32 3, !dbg !10118
  %arraydecay1626 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1625, i64 0, i64 0, !dbg !10118
  %call1627 = call i8* @BLI_strncpy(i8* %arraydecay1626, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.237, i64 0, i64 0), i64 64), !dbg !10118
  %call1628 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.237, i64 0, i64 0)), !dbg !10118
  %1088 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10118
  %ext1629 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1088, i32 0, i32 44, !dbg !10118
  %srna1630 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1629, i32 0, i32 1, !dbg !10118
  store %struct.StructRNA* %call1628, %struct.StructRNA** %srna1630, align 8, !dbg !10118
  %1089 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10118
  %ext1631 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1089, i32 0, i32 44, !dbg !10118
  %srna1632 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1631, i32 0, i32 1, !dbg !10118
  %1090 = load %struct.StructRNA*, %struct.StructRNA** %srna1632, align 8, !dbg !10118
  %1091 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10118
  %1092 = bitcast %struct.bNodeType* %1091 to i8*, !dbg !10118
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1090, i8* %1092), !dbg !10118
  br label %sw.epilog, !dbg !10118

sw.bb1633:                                        ; preds = %entry
  %1093 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10119
  %idname1634 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1093, i32 0, i32 3, !dbg !10119
  %arraydecay1635 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1634, i64 0, i64 0, !dbg !10119
  %call1636 = call i8* @BLI_strncpy(i8* %arraydecay1635, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.238, i64 0, i64 0), i64 64), !dbg !10119
  %call1637 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.238, i64 0, i64 0)), !dbg !10119
  %1094 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10119
  %ext1638 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1094, i32 0, i32 44, !dbg !10119
  %srna1639 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1638, i32 0, i32 1, !dbg !10119
  store %struct.StructRNA* %call1637, %struct.StructRNA** %srna1639, align 8, !dbg !10119
  %1095 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10119
  %ext1640 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1095, i32 0, i32 44, !dbg !10119
  %srna1641 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1640, i32 0, i32 1, !dbg !10119
  %1096 = load %struct.StructRNA*, %struct.StructRNA** %srna1641, align 8, !dbg !10119
  %1097 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10119
  %1098 = bitcast %struct.bNodeType* %1097 to i8*, !dbg !10119
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1096, i8* %1098), !dbg !10119
  br label %sw.epilog, !dbg !10119

sw.bb1642:                                        ; preds = %entry
  %1099 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10120
  %idname1643 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1099, i32 0, i32 3, !dbg !10120
  %arraydecay1644 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1643, i64 0, i64 0, !dbg !10120
  %call1645 = call i8* @BLI_strncpy(i8* %arraydecay1644, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.239, i64 0, i64 0), i64 64), !dbg !10120
  %call1646 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.239, i64 0, i64 0)), !dbg !10120
  %1100 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10120
  %ext1647 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1100, i32 0, i32 44, !dbg !10120
  %srna1648 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1647, i32 0, i32 1, !dbg !10120
  store %struct.StructRNA* %call1646, %struct.StructRNA** %srna1648, align 8, !dbg !10120
  %1101 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10120
  %ext1649 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1101, i32 0, i32 44, !dbg !10120
  %srna1650 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1649, i32 0, i32 1, !dbg !10120
  %1102 = load %struct.StructRNA*, %struct.StructRNA** %srna1650, align 8, !dbg !10120
  %1103 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10120
  %1104 = bitcast %struct.bNodeType* %1103 to i8*, !dbg !10120
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1102, i8* %1104), !dbg !10120
  br label %sw.epilog, !dbg !10120

sw.bb1651:                                        ; preds = %entry
  %1105 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10121
  %idname1652 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1105, i32 0, i32 3, !dbg !10121
  %arraydecay1653 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1652, i64 0, i64 0, !dbg !10121
  %call1654 = call i8* @BLI_strncpy(i8* %arraydecay1653, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.240, i64 0, i64 0), i64 64), !dbg !10121
  %call1655 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.240, i64 0, i64 0)), !dbg !10121
  %1106 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10121
  %ext1656 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1106, i32 0, i32 44, !dbg !10121
  %srna1657 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1656, i32 0, i32 1, !dbg !10121
  store %struct.StructRNA* %call1655, %struct.StructRNA** %srna1657, align 8, !dbg !10121
  %1107 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10121
  %ext1658 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1107, i32 0, i32 44, !dbg !10121
  %srna1659 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1658, i32 0, i32 1, !dbg !10121
  %1108 = load %struct.StructRNA*, %struct.StructRNA** %srna1659, align 8, !dbg !10121
  %1109 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10121
  %1110 = bitcast %struct.bNodeType* %1109 to i8*, !dbg !10121
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1108, i8* %1110), !dbg !10121
  br label %sw.epilog, !dbg !10121

sw.bb1660:                                        ; preds = %entry
  %1111 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10122
  %idname1661 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1111, i32 0, i32 3, !dbg !10122
  %arraydecay1662 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1661, i64 0, i64 0, !dbg !10122
  %call1663 = call i8* @BLI_strncpy(i8* %arraydecay1662, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.241, i64 0, i64 0), i64 64), !dbg !10122
  %call1664 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.241, i64 0, i64 0)), !dbg !10122
  %1112 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10122
  %ext1665 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1112, i32 0, i32 44, !dbg !10122
  %srna1666 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1665, i32 0, i32 1, !dbg !10122
  store %struct.StructRNA* %call1664, %struct.StructRNA** %srna1666, align 8, !dbg !10122
  %1113 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10122
  %ext1667 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1113, i32 0, i32 44, !dbg !10122
  %srna1668 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1667, i32 0, i32 1, !dbg !10122
  %1114 = load %struct.StructRNA*, %struct.StructRNA** %srna1668, align 8, !dbg !10122
  %1115 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10122
  %1116 = bitcast %struct.bNodeType* %1115 to i8*, !dbg !10122
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1114, i8* %1116), !dbg !10122
  br label %sw.epilog, !dbg !10122

sw.bb1669:                                        ; preds = %entry
  %1117 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10123
  %idname1670 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1117, i32 0, i32 3, !dbg !10123
  %arraydecay1671 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1670, i64 0, i64 0, !dbg !10123
  %call1672 = call i8* @BLI_strncpy(i8* %arraydecay1671, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.242, i64 0, i64 0), i64 64), !dbg !10123
  %call1673 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.242, i64 0, i64 0)), !dbg !10123
  %1118 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10123
  %ext1674 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1118, i32 0, i32 44, !dbg !10123
  %srna1675 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1674, i32 0, i32 1, !dbg !10123
  store %struct.StructRNA* %call1673, %struct.StructRNA** %srna1675, align 8, !dbg !10123
  %1119 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10123
  %ext1676 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1119, i32 0, i32 44, !dbg !10123
  %srna1677 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1676, i32 0, i32 1, !dbg !10123
  %1120 = load %struct.StructRNA*, %struct.StructRNA** %srna1677, align 8, !dbg !10123
  %1121 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10123
  %1122 = bitcast %struct.bNodeType* %1121 to i8*, !dbg !10123
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1120, i8* %1122), !dbg !10123
  br label %sw.epilog, !dbg !10123

sw.bb1678:                                        ; preds = %entry
  %1123 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10124
  %idname1679 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1123, i32 0, i32 3, !dbg !10124
  %arraydecay1680 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1679, i64 0, i64 0, !dbg !10124
  %call1681 = call i8* @BLI_strncpy(i8* %arraydecay1680, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.243, i64 0, i64 0), i64 64), !dbg !10124
  %call1682 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.243, i64 0, i64 0)), !dbg !10124
  %1124 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10124
  %ext1683 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1124, i32 0, i32 44, !dbg !10124
  %srna1684 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1683, i32 0, i32 1, !dbg !10124
  store %struct.StructRNA* %call1682, %struct.StructRNA** %srna1684, align 8, !dbg !10124
  %1125 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10124
  %ext1685 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1125, i32 0, i32 44, !dbg !10124
  %srna1686 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1685, i32 0, i32 1, !dbg !10124
  %1126 = load %struct.StructRNA*, %struct.StructRNA** %srna1686, align 8, !dbg !10124
  %1127 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10124
  %1128 = bitcast %struct.bNodeType* %1127 to i8*, !dbg !10124
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1126, i8* %1128), !dbg !10124
  br label %sw.epilog, !dbg !10124

sw.bb1687:                                        ; preds = %entry
  %1129 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10125
  %idname1688 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1129, i32 0, i32 3, !dbg !10125
  %arraydecay1689 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1688, i64 0, i64 0, !dbg !10125
  %call1690 = call i8* @BLI_strncpy(i8* %arraydecay1689, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.244, i64 0, i64 0), i64 64), !dbg !10125
  %call1691 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.244, i64 0, i64 0)), !dbg !10125
  %1130 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10125
  %ext1692 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1130, i32 0, i32 44, !dbg !10125
  %srna1693 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1692, i32 0, i32 1, !dbg !10125
  store %struct.StructRNA* %call1691, %struct.StructRNA** %srna1693, align 8, !dbg !10125
  %1131 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10125
  %ext1694 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1131, i32 0, i32 44, !dbg !10125
  %srna1695 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1694, i32 0, i32 1, !dbg !10125
  %1132 = load %struct.StructRNA*, %struct.StructRNA** %srna1695, align 8, !dbg !10125
  %1133 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10125
  %1134 = bitcast %struct.bNodeType* %1133 to i8*, !dbg !10125
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1132, i8* %1134), !dbg !10125
  br label %sw.epilog, !dbg !10125

sw.bb1696:                                        ; preds = %entry
  %1135 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10126
  %idname1697 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1135, i32 0, i32 3, !dbg !10126
  %arraydecay1698 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1697, i64 0, i64 0, !dbg !10126
  %call1699 = call i8* @BLI_strncpy(i8* %arraydecay1698, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.245, i64 0, i64 0), i64 64), !dbg !10126
  %call1700 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.245, i64 0, i64 0)), !dbg !10126
  %1136 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10126
  %ext1701 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1136, i32 0, i32 44, !dbg !10126
  %srna1702 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1701, i32 0, i32 1, !dbg !10126
  store %struct.StructRNA* %call1700, %struct.StructRNA** %srna1702, align 8, !dbg !10126
  %1137 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10126
  %ext1703 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1137, i32 0, i32 44, !dbg !10126
  %srna1704 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1703, i32 0, i32 1, !dbg !10126
  %1138 = load %struct.StructRNA*, %struct.StructRNA** %srna1704, align 8, !dbg !10126
  %1139 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10126
  %1140 = bitcast %struct.bNodeType* %1139 to i8*, !dbg !10126
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1138, i8* %1140), !dbg !10126
  br label %sw.epilog, !dbg !10126

sw.bb1705:                                        ; preds = %entry
  %1141 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10127
  %idname1706 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1141, i32 0, i32 3, !dbg !10127
  %arraydecay1707 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1706, i64 0, i64 0, !dbg !10127
  %call1708 = call i8* @BLI_strncpy(i8* %arraydecay1707, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.246, i64 0, i64 0), i64 64), !dbg !10127
  %call1709 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.246, i64 0, i64 0)), !dbg !10127
  %1142 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10127
  %ext1710 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1142, i32 0, i32 44, !dbg !10127
  %srna1711 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1710, i32 0, i32 1, !dbg !10127
  store %struct.StructRNA* %call1709, %struct.StructRNA** %srna1711, align 8, !dbg !10127
  %1143 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10127
  %ext1712 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1143, i32 0, i32 44, !dbg !10127
  %srna1713 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1712, i32 0, i32 1, !dbg !10127
  %1144 = load %struct.StructRNA*, %struct.StructRNA** %srna1713, align 8, !dbg !10127
  %1145 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10127
  %1146 = bitcast %struct.bNodeType* %1145 to i8*, !dbg !10127
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1144, i8* %1146), !dbg !10127
  br label %sw.epilog, !dbg !10127

sw.bb1714:                                        ; preds = %entry
  %1147 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10128
  %idname1715 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1147, i32 0, i32 3, !dbg !10128
  %arraydecay1716 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1715, i64 0, i64 0, !dbg !10128
  %call1717 = call i8* @BLI_strncpy(i8* %arraydecay1716, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.247, i64 0, i64 0), i64 64), !dbg !10128
  %call1718 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.247, i64 0, i64 0)), !dbg !10128
  %1148 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10128
  %ext1719 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1148, i32 0, i32 44, !dbg !10128
  %srna1720 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1719, i32 0, i32 1, !dbg !10128
  store %struct.StructRNA* %call1718, %struct.StructRNA** %srna1720, align 8, !dbg !10128
  %1149 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10128
  %ext1721 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1149, i32 0, i32 44, !dbg !10128
  %srna1722 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1721, i32 0, i32 1, !dbg !10128
  %1150 = load %struct.StructRNA*, %struct.StructRNA** %srna1722, align 8, !dbg !10128
  %1151 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10128
  %1152 = bitcast %struct.bNodeType* %1151 to i8*, !dbg !10128
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1150, i8* %1152), !dbg !10128
  br label %sw.epilog, !dbg !10128

sw.bb1723:                                        ; preds = %entry
  %1153 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10129
  %idname1724 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1153, i32 0, i32 3, !dbg !10129
  %arraydecay1725 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1724, i64 0, i64 0, !dbg !10129
  %call1726 = call i8* @BLI_strncpy(i8* %arraydecay1725, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.248, i64 0, i64 0), i64 64), !dbg !10129
  %call1727 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.248, i64 0, i64 0)), !dbg !10129
  %1154 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10129
  %ext1728 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1154, i32 0, i32 44, !dbg !10129
  %srna1729 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1728, i32 0, i32 1, !dbg !10129
  store %struct.StructRNA* %call1727, %struct.StructRNA** %srna1729, align 8, !dbg !10129
  %1155 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10129
  %ext1730 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1155, i32 0, i32 44, !dbg !10129
  %srna1731 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1730, i32 0, i32 1, !dbg !10129
  %1156 = load %struct.StructRNA*, %struct.StructRNA** %srna1731, align 8, !dbg !10129
  %1157 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10129
  %1158 = bitcast %struct.bNodeType* %1157 to i8*, !dbg !10129
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1156, i8* %1158), !dbg !10129
  br label %sw.epilog, !dbg !10129

sw.bb1732:                                        ; preds = %entry
  %1159 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10130
  %idname1733 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1159, i32 0, i32 3, !dbg !10130
  %arraydecay1734 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1733, i64 0, i64 0, !dbg !10130
  %call1735 = call i8* @BLI_strncpy(i8* %arraydecay1734, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.249, i64 0, i64 0), i64 64), !dbg !10130
  %call1736 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.249, i64 0, i64 0)), !dbg !10130
  %1160 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10130
  %ext1737 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1160, i32 0, i32 44, !dbg !10130
  %srna1738 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1737, i32 0, i32 1, !dbg !10130
  store %struct.StructRNA* %call1736, %struct.StructRNA** %srna1738, align 8, !dbg !10130
  %1161 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10130
  %ext1739 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1161, i32 0, i32 44, !dbg !10130
  %srna1740 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1739, i32 0, i32 1, !dbg !10130
  %1162 = load %struct.StructRNA*, %struct.StructRNA** %srna1740, align 8, !dbg !10130
  %1163 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10130
  %1164 = bitcast %struct.bNodeType* %1163 to i8*, !dbg !10130
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1162, i8* %1164), !dbg !10130
  br label %sw.epilog, !dbg !10130

sw.bb1741:                                        ; preds = %entry
  %1165 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10131
  %idname1742 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1165, i32 0, i32 3, !dbg !10131
  %arraydecay1743 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1742, i64 0, i64 0, !dbg !10131
  %call1744 = call i8* @BLI_strncpy(i8* %arraydecay1743, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.250, i64 0, i64 0), i64 64), !dbg !10131
  %call1745 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.250, i64 0, i64 0)), !dbg !10131
  %1166 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10131
  %ext1746 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1166, i32 0, i32 44, !dbg !10131
  %srna1747 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1746, i32 0, i32 1, !dbg !10131
  store %struct.StructRNA* %call1745, %struct.StructRNA** %srna1747, align 8, !dbg !10131
  %1167 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10131
  %ext1748 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1167, i32 0, i32 44, !dbg !10131
  %srna1749 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1748, i32 0, i32 1, !dbg !10131
  %1168 = load %struct.StructRNA*, %struct.StructRNA** %srna1749, align 8, !dbg !10131
  %1169 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10131
  %1170 = bitcast %struct.bNodeType* %1169 to i8*, !dbg !10131
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1168, i8* %1170), !dbg !10131
  br label %sw.epilog, !dbg !10131

sw.bb1750:                                        ; preds = %entry
  %1171 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10132
  %idname1751 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1171, i32 0, i32 3, !dbg !10132
  %arraydecay1752 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1751, i64 0, i64 0, !dbg !10132
  %call1753 = call i8* @BLI_strncpy(i8* %arraydecay1752, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.251, i64 0, i64 0), i64 64), !dbg !10132
  %call1754 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.251, i64 0, i64 0)), !dbg !10132
  %1172 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10132
  %ext1755 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1172, i32 0, i32 44, !dbg !10132
  %srna1756 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1755, i32 0, i32 1, !dbg !10132
  store %struct.StructRNA* %call1754, %struct.StructRNA** %srna1756, align 8, !dbg !10132
  %1173 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10132
  %ext1757 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1173, i32 0, i32 44, !dbg !10132
  %srna1758 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1757, i32 0, i32 1, !dbg !10132
  %1174 = load %struct.StructRNA*, %struct.StructRNA** %srna1758, align 8, !dbg !10132
  %1175 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10132
  %1176 = bitcast %struct.bNodeType* %1175 to i8*, !dbg !10132
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1174, i8* %1176), !dbg !10132
  br label %sw.epilog, !dbg !10132

sw.bb1759:                                        ; preds = %entry
  %1177 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10133
  %idname1760 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1177, i32 0, i32 3, !dbg !10133
  %arraydecay1761 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1760, i64 0, i64 0, !dbg !10133
  %call1762 = call i8* @BLI_strncpy(i8* %arraydecay1761, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.252, i64 0, i64 0), i64 64), !dbg !10133
  %call1763 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.252, i64 0, i64 0)), !dbg !10133
  %1178 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10133
  %ext1764 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1178, i32 0, i32 44, !dbg !10133
  %srna1765 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1764, i32 0, i32 1, !dbg !10133
  store %struct.StructRNA* %call1763, %struct.StructRNA** %srna1765, align 8, !dbg !10133
  %1179 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10133
  %ext1766 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1179, i32 0, i32 44, !dbg !10133
  %srna1767 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1766, i32 0, i32 1, !dbg !10133
  %1180 = load %struct.StructRNA*, %struct.StructRNA** %srna1767, align 8, !dbg !10133
  %1181 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10133
  %1182 = bitcast %struct.bNodeType* %1181 to i8*, !dbg !10133
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1180, i8* %1182), !dbg !10133
  br label %sw.epilog, !dbg !10133

sw.bb1768:                                        ; preds = %entry
  %1183 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10134
  %idname1769 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1183, i32 0, i32 3, !dbg !10134
  %arraydecay1770 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1769, i64 0, i64 0, !dbg !10134
  %call1771 = call i8* @BLI_strncpy(i8* %arraydecay1770, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.253, i64 0, i64 0), i64 64), !dbg !10134
  %call1772 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.253, i64 0, i64 0)), !dbg !10134
  %1184 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10134
  %ext1773 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1184, i32 0, i32 44, !dbg !10134
  %srna1774 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1773, i32 0, i32 1, !dbg !10134
  store %struct.StructRNA* %call1772, %struct.StructRNA** %srna1774, align 8, !dbg !10134
  %1185 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10134
  %ext1775 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1185, i32 0, i32 44, !dbg !10134
  %srna1776 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1775, i32 0, i32 1, !dbg !10134
  %1186 = load %struct.StructRNA*, %struct.StructRNA** %srna1776, align 8, !dbg !10134
  %1187 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10134
  %1188 = bitcast %struct.bNodeType* %1187 to i8*, !dbg !10134
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1186, i8* %1188), !dbg !10134
  br label %sw.epilog, !dbg !10134

sw.bb1777:                                        ; preds = %entry
  %1189 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10135
  %idname1778 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1189, i32 0, i32 3, !dbg !10135
  %arraydecay1779 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1778, i64 0, i64 0, !dbg !10135
  %call1780 = call i8* @BLI_strncpy(i8* %arraydecay1779, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.254, i64 0, i64 0), i64 64), !dbg !10135
  %call1781 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.254, i64 0, i64 0)), !dbg !10135
  %1190 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10135
  %ext1782 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1190, i32 0, i32 44, !dbg !10135
  %srna1783 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1782, i32 0, i32 1, !dbg !10135
  store %struct.StructRNA* %call1781, %struct.StructRNA** %srna1783, align 8, !dbg !10135
  %1191 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10135
  %ext1784 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1191, i32 0, i32 44, !dbg !10135
  %srna1785 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1784, i32 0, i32 1, !dbg !10135
  %1192 = load %struct.StructRNA*, %struct.StructRNA** %srna1785, align 8, !dbg !10135
  %1193 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10135
  %1194 = bitcast %struct.bNodeType* %1193 to i8*, !dbg !10135
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1192, i8* %1194), !dbg !10135
  br label %sw.epilog, !dbg !10135

sw.bb1786:                                        ; preds = %entry
  %1195 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10136
  %idname1787 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1195, i32 0, i32 3, !dbg !10136
  %arraydecay1788 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1787, i64 0, i64 0, !dbg !10136
  %call1789 = call i8* @BLI_strncpy(i8* %arraydecay1788, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.255, i64 0, i64 0), i64 64), !dbg !10136
  %call1790 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.255, i64 0, i64 0)), !dbg !10136
  %1196 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10136
  %ext1791 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1196, i32 0, i32 44, !dbg !10136
  %srna1792 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1791, i32 0, i32 1, !dbg !10136
  store %struct.StructRNA* %call1790, %struct.StructRNA** %srna1792, align 8, !dbg !10136
  %1197 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10136
  %ext1793 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1197, i32 0, i32 44, !dbg !10136
  %srna1794 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1793, i32 0, i32 1, !dbg !10136
  %1198 = load %struct.StructRNA*, %struct.StructRNA** %srna1794, align 8, !dbg !10136
  %1199 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10136
  %1200 = bitcast %struct.bNodeType* %1199 to i8*, !dbg !10136
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1198, i8* %1200), !dbg !10136
  br label %sw.epilog, !dbg !10136

sw.bb1795:                                        ; preds = %entry
  %1201 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10137
  %idname1796 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1201, i32 0, i32 3, !dbg !10137
  %arraydecay1797 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1796, i64 0, i64 0, !dbg !10137
  %call1798 = call i8* @BLI_strncpy(i8* %arraydecay1797, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.256, i64 0, i64 0), i64 64), !dbg !10137
  %call1799 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.256, i64 0, i64 0)), !dbg !10137
  %1202 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10137
  %ext1800 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1202, i32 0, i32 44, !dbg !10137
  %srna1801 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1800, i32 0, i32 1, !dbg !10137
  store %struct.StructRNA* %call1799, %struct.StructRNA** %srna1801, align 8, !dbg !10137
  %1203 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10137
  %ext1802 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1203, i32 0, i32 44, !dbg !10137
  %srna1803 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1802, i32 0, i32 1, !dbg !10137
  %1204 = load %struct.StructRNA*, %struct.StructRNA** %srna1803, align 8, !dbg !10137
  %1205 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10137
  %1206 = bitcast %struct.bNodeType* %1205 to i8*, !dbg !10137
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1204, i8* %1206), !dbg !10137
  br label %sw.epilog, !dbg !10137

sw.bb1804:                                        ; preds = %entry
  %1207 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10138
  %idname1805 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1207, i32 0, i32 3, !dbg !10138
  %arraydecay1806 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1805, i64 0, i64 0, !dbg !10138
  %call1807 = call i8* @BLI_strncpy(i8* %arraydecay1806, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.257, i64 0, i64 0), i64 64), !dbg !10138
  %call1808 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.257, i64 0, i64 0)), !dbg !10138
  %1208 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10138
  %ext1809 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1208, i32 0, i32 44, !dbg !10138
  %srna1810 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1809, i32 0, i32 1, !dbg !10138
  store %struct.StructRNA* %call1808, %struct.StructRNA** %srna1810, align 8, !dbg !10138
  %1209 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10138
  %ext1811 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1209, i32 0, i32 44, !dbg !10138
  %srna1812 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1811, i32 0, i32 1, !dbg !10138
  %1210 = load %struct.StructRNA*, %struct.StructRNA** %srna1812, align 8, !dbg !10138
  %1211 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10138
  %1212 = bitcast %struct.bNodeType* %1211 to i8*, !dbg !10138
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1210, i8* %1212), !dbg !10138
  br label %sw.epilog, !dbg !10138

sw.bb1813:                                        ; preds = %entry
  %1213 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10139
  %idname1814 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1213, i32 0, i32 3, !dbg !10139
  %arraydecay1815 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1814, i64 0, i64 0, !dbg !10139
  %call1816 = call i8* @BLI_strncpy(i8* %arraydecay1815, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.258, i64 0, i64 0), i64 64), !dbg !10139
  %call1817 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.258, i64 0, i64 0)), !dbg !10139
  %1214 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10139
  %ext1818 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1214, i32 0, i32 44, !dbg !10139
  %srna1819 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1818, i32 0, i32 1, !dbg !10139
  store %struct.StructRNA* %call1817, %struct.StructRNA** %srna1819, align 8, !dbg !10139
  %1215 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10139
  %ext1820 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1215, i32 0, i32 44, !dbg !10139
  %srna1821 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1820, i32 0, i32 1, !dbg !10139
  %1216 = load %struct.StructRNA*, %struct.StructRNA** %srna1821, align 8, !dbg !10139
  %1217 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10139
  %1218 = bitcast %struct.bNodeType* %1217 to i8*, !dbg !10139
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1216, i8* %1218), !dbg !10139
  br label %sw.epilog, !dbg !10139

sw.bb1822:                                        ; preds = %entry
  %1219 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10140
  %idname1823 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1219, i32 0, i32 3, !dbg !10140
  %arraydecay1824 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1823, i64 0, i64 0, !dbg !10140
  %call1825 = call i8* @BLI_strncpy(i8* %arraydecay1824, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.259, i64 0, i64 0), i64 64), !dbg !10140
  %call1826 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.259, i64 0, i64 0)), !dbg !10140
  %1220 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10140
  %ext1827 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1220, i32 0, i32 44, !dbg !10140
  %srna1828 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1827, i32 0, i32 1, !dbg !10140
  store %struct.StructRNA* %call1826, %struct.StructRNA** %srna1828, align 8, !dbg !10140
  %1221 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10140
  %ext1829 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1221, i32 0, i32 44, !dbg !10140
  %srna1830 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1829, i32 0, i32 1, !dbg !10140
  %1222 = load %struct.StructRNA*, %struct.StructRNA** %srna1830, align 8, !dbg !10140
  %1223 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10140
  %1224 = bitcast %struct.bNodeType* %1223 to i8*, !dbg !10140
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1222, i8* %1224), !dbg !10140
  br label %sw.epilog, !dbg !10140

sw.bb1831:                                        ; preds = %entry
  %1225 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10141
  %idname1832 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1225, i32 0, i32 3, !dbg !10141
  %arraydecay1833 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1832, i64 0, i64 0, !dbg !10141
  %call1834 = call i8* @BLI_strncpy(i8* %arraydecay1833, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.260, i64 0, i64 0), i64 64), !dbg !10141
  %call1835 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.260, i64 0, i64 0)), !dbg !10141
  %1226 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10141
  %ext1836 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1226, i32 0, i32 44, !dbg !10141
  %srna1837 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1836, i32 0, i32 1, !dbg !10141
  store %struct.StructRNA* %call1835, %struct.StructRNA** %srna1837, align 8, !dbg !10141
  %1227 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10141
  %ext1838 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1227, i32 0, i32 44, !dbg !10141
  %srna1839 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1838, i32 0, i32 1, !dbg !10141
  %1228 = load %struct.StructRNA*, %struct.StructRNA** %srna1839, align 8, !dbg !10141
  %1229 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10141
  %1230 = bitcast %struct.bNodeType* %1229 to i8*, !dbg !10141
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1228, i8* %1230), !dbg !10141
  br label %sw.epilog, !dbg !10141

sw.bb1840:                                        ; preds = %entry
  %1231 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10142
  %idname1841 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1231, i32 0, i32 3, !dbg !10142
  %arraydecay1842 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1841, i64 0, i64 0, !dbg !10142
  %call1843 = call i8* @BLI_strncpy(i8* %arraydecay1842, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.261, i64 0, i64 0), i64 64), !dbg !10142
  %call1844 = call %struct.StructRNA* @RNA_struct_find(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.261, i64 0, i64 0)), !dbg !10142
  %1232 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10142
  %ext1845 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1232, i32 0, i32 44, !dbg !10142
  %srna1846 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1845, i32 0, i32 1, !dbg !10142
  store %struct.StructRNA* %call1844, %struct.StructRNA** %srna1846, align 8, !dbg !10142
  %1233 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10142
  %ext1847 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1233, i32 0, i32 44, !dbg !10142
  %srna1848 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext1847, i32 0, i32 1, !dbg !10142
  %1234 = load %struct.StructRNA*, %struct.StructRNA** %srna1848, align 8, !dbg !10142
  %1235 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10142
  %1236 = bitcast %struct.bNodeType* %1235 to i8*, !dbg !10142
  call void @RNA_struct_blender_type_set(%struct.StructRNA* %1234, i8* %1236), !dbg !10142
  br label %sw.epilog, !dbg !10142

sw.epilog:                                        ; preds = %entry, %sw.bb1840, %sw.bb1831, %sw.bb1822, %sw.bb1813, %sw.bb1804, %sw.bb1795, %sw.bb1786, %sw.bb1777, %sw.bb1768, %sw.bb1759, %sw.bb1750, %sw.bb1741, %sw.bb1732, %sw.bb1723, %sw.bb1714, %sw.bb1705, %sw.bb1696, %sw.bb1687, %sw.bb1678, %sw.bb1669, %sw.bb1660, %sw.bb1651, %sw.bb1642, %sw.bb1633, %sw.bb1624, %sw.bb1615, %sw.bb1606, %sw.bb1597, %sw.bb1588, %sw.bb1579, %sw.bb1570, %sw.bb1561, %sw.bb1552, %sw.bb1543, %sw.bb1534, %sw.bb1525, %sw.bb1516, %sw.bb1507, %sw.bb1498, %sw.bb1489, %sw.bb1480, %sw.bb1471, %sw.bb1462, %sw.bb1453, %sw.bb1444, %sw.bb1435, %sw.bb1426, %sw.bb1417, %sw.bb1408, %sw.bb1399, %sw.bb1390, %sw.bb1381, %sw.bb1372, %sw.bb1363, %sw.bb1354, %sw.bb1345, %sw.bb1336, %sw.bb1327, %sw.bb1318, %sw.bb1309, %sw.bb1300, %sw.bb1291, %sw.bb1282, %sw.bb1273, %sw.bb1264, %sw.bb1255, %sw.bb1246, %sw.bb1237, %sw.bb1228, %sw.bb1219, %sw.bb1210, %sw.bb1201, %sw.bb1192, %sw.bb1183, %sw.bb1174, %sw.bb1165, %sw.bb1156, %sw.bb1147, %sw.bb1138, %sw.bb1129, %sw.bb1120, %sw.bb1111, %sw.bb1102, %sw.bb1093, %sw.bb1084, %sw.bb1075, %sw.bb1066, %sw.bb1057, %sw.bb1048, %sw.bb1039, %sw.bb1030, %sw.bb1021, %sw.bb1012, %sw.bb1003, %sw.bb994, %sw.bb985, %sw.bb976, %sw.bb967, %sw.bb958, %sw.bb949, %sw.bb940, %sw.bb931, %sw.bb922, %sw.bb913, %sw.bb904, %sw.bb895, %sw.bb886, %sw.bb877, %sw.bb868, %sw.bb859, %sw.bb850, %sw.bb841, %sw.bb832, %sw.bb823, %sw.bb814, %sw.bb805, %sw.bb796, %sw.bb787, %sw.bb778, %sw.bb769, %sw.bb760, %sw.bb751, %sw.bb742, %sw.bb733, %sw.bb724, %sw.bb715, %sw.bb706, %sw.bb697, %sw.bb688, %sw.bb679, %sw.bb670, %sw.bb661, %sw.bb652, %sw.bb643, %sw.bb634, %sw.bb625, %sw.bb616, %sw.bb607, %sw.bb598, %sw.bb589, %sw.bb580, %sw.bb571, %sw.bb562, %sw.bb553, %sw.bb544, %sw.bb535, %sw.bb526, %sw.bb517, %sw.bb508, %sw.bb499, %sw.bb490, %sw.bb481, %sw.bb472, %sw.bb463, %sw.bb454, %sw.bb445, %sw.bb436, %sw.bb427, %sw.bb418, %sw.bb409, %sw.bb400, %sw.bb391, %sw.bb382, %sw.bb373, %sw.bb364, %sw.bb355, %sw.bb346, %sw.bb337, %sw.bb328, %sw.bb319, %sw.bb310, %sw.bb301, %sw.bb292, %sw.bb283, %sw.bb274, %sw.bb265, %sw.bb256, %sw.bb247, %sw.bb238, %sw.bb229, %sw.bb220, %sw.bb211, %sw.bb202, %sw.bb193, %sw.bb184, %sw.bb175, %sw.bb166, %sw.bb157, %sw.bb148, %sw.bb139, %sw.bb130, %sw.bb121, %sw.bb112, %sw.bb103, %sw.bb94, %sw.bb85, %sw.bb76, %sw.bb67, %sw.bb58, %sw.bb49, %sw.bb40, %sw.bb31, %sw.bb22, %sw.bb13, %sw.bb4, %sw.bb
  %1237 = load i32, i32* %type.addr, align 4, !dbg !10143
  %1238 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10144
  %type1849 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1238, i32 0, i32 4, !dbg !10145
  store i32 %1237, i32* %type1849, align 4, !dbg !10146
  %1239 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10147
  %ui_name = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1239, i32 0, i32 5, !dbg !10148
  %arraydecay1850 = getelementptr inbounds [64 x i8], [64 x i8]* %ui_name, i64 0, i64 0, !dbg !10147
  %1240 = load i8*, i8** %name.addr, align 8, !dbg !10149
  %call1851 = call i8* @BLI_strncpy(i8* %arraydecay1850, i8* %1240, i64 64), !dbg !10150
  %1241 = load i16, i16* %nclass.addr, align 2, !dbg !10151
  %1242 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10152
  %nclass1852 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1242, i32 0, i32 14, !dbg !10153
  store i16 %1241, i16* %nclass1852, align 4, !dbg !10154
  %1243 = load i16, i16* %flag.addr, align 2, !dbg !10155
  %1244 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10156
  %flag1853 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1244, i32 0, i32 15, !dbg !10157
  store i16 %1243, i16* %flag1853, align 2, !dbg !10158
  %1245 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10159
  call void @node_type_base_defaults(%struct.bNodeType* %1245), !dbg !10160
  %1246 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10161
  %poll = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1246, i32 0, i32 37, !dbg !10162
  store i32 (%struct.bNodeType*, %struct.bNodeTree*)* @node_poll_default, i32 (%struct.bNodeType*, %struct.bNodeTree*)** %poll, align 8, !dbg !10163
  %1247 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10164
  %poll_instance = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1247, i32 0, i32 38, !dbg !10165
  store i32 (%struct.bNode*, %struct.bNodeTree*)* @node_poll_instance_default, i32 (%struct.bNode*, %struct.bNodeTree*)** %poll_instance, align 8, !dbg !10166
  ret void, !dbg !10167
}

declare dso_local %struct.StructRNA* @RNA_struct_find(i8*) #2

declare dso_local void @RNA_struct_blender_type_set(%struct.StructRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @node_type_base_defaults(%struct.bNodeType* %ntype) #0 !dbg !10168 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10169, metadata !DIExpression()), !dbg !10170
  %0 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10171
  call void @node_type_size_preset(%struct.bNodeType* %0, i32 0), !dbg !10172
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10173
  %height = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 11, !dbg !10174
  store float 1.000000e+02, float* %height, align 8, !dbg !10175
  %2 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10176
  %minheight = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %2, i32 0, i32 12, !dbg !10177
  store float 3.000000e+01, float* %minheight, align 4, !dbg !10178
  %3 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10179
  %maxheight = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %3, i32 0, i32 13, !dbg !10180
  store float 0x47EFFFFFE0000000, float* %maxheight, align 8, !dbg !10181
  ret void, !dbg !10182
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_poll_default(%struct.bNodeType* %UNUSED_ntype, %struct.bNodeTree* %UNUSED_ntree) #0 !dbg !10183 {
entry:
  %UNUSED_ntype.addr = alloca %struct.bNodeType*, align 8
  %UNUSED_ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeType* %UNUSED_ntype, %struct.bNodeType** %UNUSED_ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %UNUSED_ntype.addr, metadata !10186, metadata !DIExpression()), !dbg !10187
  store %struct.bNodeTree* %UNUSED_ntree, %struct.bNodeTree** %UNUSED_ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %UNUSED_ntree.addr, metadata !10188, metadata !DIExpression()), !dbg !10189
  ret i32 1, !dbg !10190
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_poll_instance_default(%struct.bNode* %node, %struct.bNodeTree* %ntree) #0 !dbg !10191 {
entry:
  %node.addr = alloca %struct.bNode*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !10194, metadata !DIExpression()), !dbg !10195
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !10196, metadata !DIExpression()), !dbg !10197
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10198
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 4, !dbg !10199
  %1 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !10199
  %poll = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 37, !dbg !10200
  %2 = load i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)** %poll, align 8, !dbg !10200
  %3 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10201
  %typeinfo1 = getelementptr inbounds %struct.bNode, %struct.bNode* %3, i32 0, i32 4, !dbg !10202
  %4 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo1, align 8, !dbg !10202
  %5 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !10203
  %call = call i32 %2(%struct.bNodeType* %4, %struct.bNodeTree* %5), !dbg !10198
  ret i32 %call, !dbg !10204
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_base_custom(%struct.bNodeType* %ntype, i8* %idname, i8* %name, i16 signext %nclass, i16 signext %flag) #0 !dbg !10205 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %idname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %nclass.addr = alloca i16, align 2
  %flag.addr = alloca i16, align 2
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10208, metadata !DIExpression()), !dbg !10209
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !10210, metadata !DIExpression()), !dbg !10211
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10212, metadata !DIExpression()), !dbg !10213
  store i16 %nclass, i16* %nclass.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %nclass.addr, metadata !10214, metadata !DIExpression()), !dbg !10215
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !10216, metadata !DIExpression()), !dbg !10217
  %0 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10218
  %idname1 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %0, i32 0, i32 3, !dbg !10219
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !10218
  %1 = load i8*, i8** %idname.addr, align 8, !dbg !10220
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %1, i64 64), !dbg !10221
  %2 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10222
  %type = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %2, i32 0, i32 4, !dbg !10223
  store i32 -1, i32* %type, align 4, !dbg !10224
  %3 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10225
  %ui_name = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %3, i32 0, i32 5, !dbg !10226
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %ui_name, i64 0, i64 0, !dbg !10225
  %4 = load i8*, i8** %name.addr, align 8, !dbg !10227
  %call3 = call i8* @BLI_strncpy(i8* %arraydecay2, i8* %4, i64 64), !dbg !10228
  %5 = load i16, i16* %nclass.addr, align 2, !dbg !10229
  %6 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10230
  %nclass4 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %6, i32 0, i32 14, !dbg !10231
  store i16 %5, i16* %nclass4, align 4, !dbg !10232
  %7 = load i16, i16* %flag.addr, align 2, !dbg !10233
  %8 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10234
  %flag5 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %8, i32 0, i32 15, !dbg !10235
  store i16 %7, i16* %flag5, align 2, !dbg !10236
  %9 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10237
  call void @node_type_base_defaults(%struct.bNodeType* %9), !dbg !10238
  ret void, !dbg !10239
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_socket_templates(%struct.bNodeType* %ntype, %struct.bNodeSocketTemplate* %inputs, %struct.bNodeSocketTemplate* %outputs) #0 !dbg !10240 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %inputs.addr = alloca %struct.bNodeSocketTemplate*, align 8
  %outputs.addr = alloca %struct.bNodeSocketTemplate*, align 8
  %ntemp = alloca %struct.bNodeSocketTemplate*, align 8
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10244, metadata !DIExpression()), !dbg !10245
  store %struct.bNodeSocketTemplate* %inputs, %struct.bNodeSocketTemplate** %inputs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketTemplate** %inputs.addr, metadata !10246, metadata !DIExpression()), !dbg !10247
  store %struct.bNodeSocketTemplate* %outputs, %struct.bNodeSocketTemplate** %outputs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketTemplate** %outputs.addr, metadata !10248, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketTemplate** %ntemp, metadata !10250, metadata !DIExpression()), !dbg !10251
  %0 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %inputs.addr, align 8, !dbg !10252
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10253
  %inputs1 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 17, !dbg !10254
  store %struct.bNodeSocketTemplate* %0, %struct.bNodeSocketTemplate** %inputs1, align 8, !dbg !10255
  %2 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %outputs.addr, align 8, !dbg !10256
  %3 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10257
  %outputs2 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %3, i32 0, i32 18, !dbg !10258
  store %struct.bNodeSocketTemplate* %2, %struct.bNodeSocketTemplate** %outputs2, align 8, !dbg !10259
  %4 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %inputs.addr, align 8, !dbg !10260
  %tobool = icmp ne %struct.bNodeSocketTemplate* %4, null, !dbg !10260
  br i1 %tobool, label %if.then, label %if.end, !dbg !10262

if.then:                                          ; preds = %entry
  %5 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %inputs.addr, align 8, !dbg !10263
  store %struct.bNodeSocketTemplate* %5, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10266
  br label %for.cond, !dbg !10267

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10268
  %type = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %6, i32 0, i32 0, !dbg !10270
  %7 = load i32, i32* %type, align 8, !dbg !10270
  %cmp = icmp sge i32 %7, 0, !dbg !10271
  br i1 %cmp, label %for.body, label %for.end, !dbg !10272

for.body:                                         ; preds = %for.cond
  %8 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10273
  %identifier = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %8, i32 0, i32 12, !dbg !10274
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %identifier, i64 0, i64 0, !dbg !10273
  store i8 0, i8* %arrayidx, align 8, !dbg !10275
  br label %for.inc, !dbg !10273

for.inc:                                          ; preds = %for.body
  %9 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10276
  %incdec.ptr = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %9, i32 1, !dbg !10276
  store %struct.bNodeSocketTemplate* %incdec.ptr, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10276
  br label %for.cond, !dbg !10277, !llvm.loop !10278

for.end:                                          ; preds = %for.cond
  %10 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %inputs.addr, align 8, !dbg !10280
  store %struct.bNodeSocketTemplate* %10, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10282
  br label %for.cond3, !dbg !10283

for.cond3:                                        ; preds = %for.inc11, %for.end
  %11 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10284
  %type4 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %11, i32 0, i32 0, !dbg !10286
  %12 = load i32, i32* %type4, align 8, !dbg !10286
  %cmp5 = icmp sge i32 %12, 0, !dbg !10287
  br i1 %cmp5, label %for.body6, label %for.end13, !dbg !10288

for.body6:                                        ; preds = %for.cond3
  %13 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10289
  %identifier7 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %13, i32 0, i32 12, !dbg !10291
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %identifier7, i64 0, i64 0, !dbg !10289
  %14 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10292
  %name = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %14, i32 0, i32 2, !dbg !10293
  %arraydecay8 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10292
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay8, i64 64), !dbg !10294
  %15 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %inputs.addr, align 8, !dbg !10295
  %16 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10296
  %17 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10297
  %identifier9 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %17, i32 0, i32 12, !dbg !10298
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %identifier9, i64 0, i64 0, !dbg !10297
  call void @unique_socket_template_identifier(%struct.bNodeSocketTemplate* %15, %struct.bNodeSocketTemplate* %16, i8* %arraydecay10, i8 zeroext 95), !dbg !10299
  br label %for.inc11, !dbg !10300

for.inc11:                                        ; preds = %for.body6
  %18 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10301
  %incdec.ptr12 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %18, i32 1, !dbg !10301
  store %struct.bNodeSocketTemplate* %incdec.ptr12, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10301
  br label %for.cond3, !dbg !10302, !llvm.loop !10303

for.end13:                                        ; preds = %for.cond3
  br label %if.end, !dbg !10305

if.end:                                           ; preds = %for.end13, %entry
  %19 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %outputs.addr, align 8, !dbg !10306
  %tobool14 = icmp ne %struct.bNodeSocketTemplate* %19, null, !dbg !10306
  br i1 %tobool14, label %if.then15, label %if.end39, !dbg !10308

if.then15:                                        ; preds = %if.end
  %20 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %outputs.addr, align 8, !dbg !10309
  store %struct.bNodeSocketTemplate* %20, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10312
  br label %for.cond16, !dbg !10313

for.cond16:                                       ; preds = %for.inc22, %if.then15
  %21 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10314
  %type17 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %21, i32 0, i32 0, !dbg !10316
  %22 = load i32, i32* %type17, align 8, !dbg !10316
  %cmp18 = icmp sge i32 %22, 0, !dbg !10317
  br i1 %cmp18, label %for.body19, label %for.end24, !dbg !10318

for.body19:                                       ; preds = %for.cond16
  %23 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10319
  %identifier20 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %23, i32 0, i32 12, !dbg !10320
  %arrayidx21 = getelementptr inbounds [64 x i8], [64 x i8]* %identifier20, i64 0, i64 0, !dbg !10319
  store i8 0, i8* %arrayidx21, align 8, !dbg !10321
  br label %for.inc22, !dbg !10319

for.inc22:                                        ; preds = %for.body19
  %24 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10322
  %incdec.ptr23 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %24, i32 1, !dbg !10322
  store %struct.bNodeSocketTemplate* %incdec.ptr23, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10322
  br label %for.cond16, !dbg !10323, !llvm.loop !10324

for.end24:                                        ; preds = %for.cond16
  %25 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %outputs.addr, align 8, !dbg !10326
  store %struct.bNodeSocketTemplate* %25, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10328
  br label %for.cond25, !dbg !10329

for.cond25:                                       ; preds = %for.inc36, %for.end24
  %26 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10330
  %type26 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %26, i32 0, i32 0, !dbg !10332
  %27 = load i32, i32* %type26, align 8, !dbg !10332
  %cmp27 = icmp sge i32 %27, 0, !dbg !10333
  br i1 %cmp27, label %for.body28, label %for.end38, !dbg !10334

for.body28:                                       ; preds = %for.cond25
  %28 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10335
  %identifier29 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %28, i32 0, i32 12, !dbg !10337
  %arraydecay30 = getelementptr inbounds [64 x i8], [64 x i8]* %identifier29, i64 0, i64 0, !dbg !10335
  %29 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10338
  %name31 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %29, i32 0, i32 2, !dbg !10339
  %arraydecay32 = getelementptr inbounds [64 x i8], [64 x i8]* %name31, i64 0, i64 0, !dbg !10338
  %call33 = call i8* @BLI_strncpy(i8* %arraydecay30, i8* %arraydecay32, i64 64), !dbg !10340
  %30 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %outputs.addr, align 8, !dbg !10341
  %31 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10342
  %32 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10343
  %identifier34 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %32, i32 0, i32 12, !dbg !10344
  %arraydecay35 = getelementptr inbounds [64 x i8], [64 x i8]* %identifier34, i64 0, i64 0, !dbg !10343
  call void @unique_socket_template_identifier(%struct.bNodeSocketTemplate* %30, %struct.bNodeSocketTemplate* %31, i8* %arraydecay35, i8 zeroext 95), !dbg !10345
  br label %for.inc36, !dbg !10346

for.inc36:                                        ; preds = %for.body28
  %33 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10347
  %incdec.ptr37 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %33, i32 1, !dbg !10347
  store %struct.bNodeSocketTemplate* %incdec.ptr37, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !10347
  br label %for.cond25, !dbg !10348, !llvm.loop !10349

for.end38:                                        ; preds = %for.cond25
  br label %if.end39, !dbg !10351

if.end39:                                         ; preds = %for.end38, %if.end
  ret void, !dbg !10352
}

; Function Attrs: noinline nounwind uwtable
define internal void @unique_socket_template_identifier(%struct.bNodeSocketTemplate* %list, %struct.bNodeSocketTemplate* %ntemp, i8* %defname, i8 zeroext %delim) #0 !dbg !10353 {
entry:
  %list.addr = alloca %struct.bNodeSocketTemplate*, align 8
  %ntemp.addr = alloca %struct.bNodeSocketTemplate*, align 8
  %defname.addr = alloca i8*, align 8
  %delim.addr = alloca i8, align 1
  %data = alloca %struct.anon.0, align 8
  store %struct.bNodeSocketTemplate* %list, %struct.bNodeSocketTemplate** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketTemplate** %list.addr, metadata !10356, metadata !DIExpression()), !dbg !10357
  store %struct.bNodeSocketTemplate* %ntemp, %struct.bNodeSocketTemplate** %ntemp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketTemplate** %ntemp.addr, metadata !10358, metadata !DIExpression()), !dbg !10359
  store i8* %defname, i8** %defname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %defname.addr, metadata !10360, metadata !DIExpression()), !dbg !10361
  store i8 %delim, i8* %delim.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %delim.addr, metadata !10362, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.declare(metadata %struct.anon.0* %data, metadata !10364, metadata !DIExpression()), !dbg !10369
  %0 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %list.addr, align 8, !dbg !10370
  %list1 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data, i32 0, i32 0, !dbg !10371
  store %struct.bNodeSocketTemplate* %0, %struct.bNodeSocketTemplate** %list1, align 8, !dbg !10372
  %1 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp.addr, align 8, !dbg !10373
  %ntemp2 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %data, i32 0, i32 1, !dbg !10374
  store %struct.bNodeSocketTemplate* %1, %struct.bNodeSocketTemplate** %ntemp2, align 8, !dbg !10375
  %2 = bitcast %struct.anon.0* %data to i8*, !dbg !10376
  %3 = load i8*, i8** %defname.addr, align 8, !dbg !10377
  %4 = load i8, i8* %delim.addr, align 1, !dbg !10378
  %5 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp.addr, align 8, !dbg !10379
  %identifier = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %5, i32 0, i32 12, !dbg !10380
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %identifier, i64 0, i64 0, !dbg !10379
  %call = call zeroext i8 @BLI_uniquename_cb(i8 (i8*, i8*)* @unique_socket_template_identifier_check, i8* %2, i8* %3, i8 zeroext %4, i8* %arraydecay, i32 64), !dbg !10381
  ret void, !dbg !10382
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_init(%struct.bNodeType* %ntype, void (%struct.bNodeTree*, %struct.bNode*)* %initfunc) #0 !dbg !10383 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %initfunc.addr = alloca void (%struct.bNodeTree*, %struct.bNode*)*, align 8
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10386, metadata !DIExpression()), !dbg !10387
  store void (%struct.bNodeTree*, %struct.bNode*)* %initfunc, void (%struct.bNodeTree*, %struct.bNode*)** %initfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bNodeTree*, %struct.bNode*)** %initfunc.addr, metadata !10388, metadata !DIExpression()), !dbg !10389
  %0 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %initfunc.addr, align 8, !dbg !10390
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10391
  %initfunc1 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 31, !dbg !10392
  %initfunc2 = bitcast {}** %initfunc1 to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !10392
  store void (%struct.bNodeTree*, %struct.bNode*)* %0, void (%struct.bNodeTree*, %struct.bNode*)** %initfunc2, align 8, !dbg !10393
  ret void, !dbg !10394
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_size(%struct.bNodeType* %ntype, i32 %width, i32 %minwidth, i32 %maxwidth) #0 !dbg !10395 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %width.addr = alloca i32, align 4
  %minwidth.addr = alloca i32, align 4
  %maxwidth.addr = alloca i32, align 4
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10398, metadata !DIExpression()), !dbg !10399
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !10400, metadata !DIExpression()), !dbg !10401
  store i32 %minwidth, i32* %minwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minwidth.addr, metadata !10402, metadata !DIExpression()), !dbg !10403
  store i32 %maxwidth, i32* %maxwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxwidth.addr, metadata !10404, metadata !DIExpression()), !dbg !10405
  %0 = load i32, i32* %width.addr, align 4, !dbg !10406
  %conv = sitofp i32 %0 to float, !dbg !10406
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10407
  %width1 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 8, !dbg !10408
  store float %conv, float* %width1, align 4, !dbg !10409
  %2 = load i32, i32* %minwidth.addr, align 4, !dbg !10410
  %conv2 = sitofp i32 %2 to float, !dbg !10410
  %3 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10411
  %minwidth3 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %3, i32 0, i32 9, !dbg !10412
  store float %conv2, float* %minwidth3, align 8, !dbg !10413
  %4 = load i32, i32* %maxwidth.addr, align 4, !dbg !10414
  %5 = load i32, i32* %minwidth.addr, align 4, !dbg !10416
  %cmp = icmp sle i32 %4, %5, !dbg !10417
  br i1 %cmp, label %if.then, label %if.else, !dbg !10418

if.then:                                          ; preds = %entry
  %6 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10419
  %maxwidth5 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %6, i32 0, i32 10, !dbg !10420
  store float 0x47EFFFFFE0000000, float* %maxwidth5, align 4, !dbg !10421
  br label %if.end, !dbg !10419

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %maxwidth.addr, align 4, !dbg !10422
  %conv6 = sitofp i32 %7 to float, !dbg !10422
  %8 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10423
  %maxwidth7 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %8, i32 0, i32 10, !dbg !10424
  store float %conv6, float* %maxwidth7, align 4, !dbg !10425
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10426
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_size_preset(%struct.bNodeType* %ntype, i32 %size) #0 !dbg !10427 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %size.addr = alloca i32, align 4
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10431, metadata !DIExpression()), !dbg !10432
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10433, metadata !DIExpression()), !dbg !10434
  %0 = load i32, i32* %size.addr, align 4, !dbg !10435
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !10436

sw.bb:                                            ; preds = %entry
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10437
  call void @node_type_size(%struct.bNodeType* %1, i32 140, i32 100, i32 320), !dbg !10439
  br label %sw.epilog, !dbg !10440

sw.bb1:                                           ; preds = %entry
  %2 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10441
  call void @node_type_size(%struct.bNodeType* %2, i32 100, i32 80, i32 320), !dbg !10442
  br label %sw.epilog, !dbg !10443

sw.bb2:                                           ; preds = %entry
  %3 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10444
  call void @node_type_size(%struct.bNodeType* %3, i32 150, i32 120, i32 320), !dbg !10445
  br label %sw.epilog, !dbg !10446

sw.bb3:                                           ; preds = %entry
  %4 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10447
  call void @node_type_size(%struct.bNodeType* %4, i32 240, i32 140, i32 320), !dbg !10448
  br label %sw.epilog, !dbg !10449

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void, !dbg !10450
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_storage(%struct.bNodeType* %ntype, i8* %storagename, void (%struct.bNode*)* %freefunc, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)* %copyfunc) #0 !dbg !10451 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %storagename.addr = alloca i8*, align 8
  %freefunc.addr = alloca void (%struct.bNode*)*, align 8
  %copyfunc.addr = alloca void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, align 8
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10454, metadata !DIExpression()), !dbg !10455
  store i8* %storagename, i8** %storagename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %storagename.addr, metadata !10456, metadata !DIExpression()), !dbg !10457
  store void (%struct.bNode*)* %freefunc, void (%struct.bNode*)** %freefunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bNode*)** %freefunc.addr, metadata !10458, metadata !DIExpression()), !dbg !10459
  store void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)* %copyfunc, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)** %copyfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)** %copyfunc.addr, metadata !10460, metadata !DIExpression()), !dbg !10461
  %0 = load i8*, i8** %storagename.addr, align 8, !dbg !10462
  %tobool = icmp ne i8* %0, null, !dbg !10462
  br i1 %tobool, label %if.then, label %if.else, !dbg !10464

if.then:                                          ; preds = %entry
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10465
  %storagename1 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 19, !dbg !10466
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %storagename1, i64 0, i64 0, !dbg !10465
  %2 = load i8*, i8** %storagename.addr, align 8, !dbg !10467
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %2, i64 64), !dbg !10468
  br label %if.end, !dbg !10468

if.else:                                          ; preds = %entry
  %3 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10469
  %storagename2 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %3, i32 0, i32 19, !dbg !10470
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %storagename2, i64 0, i64 0, !dbg !10469
  store i8 0, i8* %arrayidx, align 8, !dbg !10471
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)** %copyfunc.addr, align 8, !dbg !10472
  %5 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10473
  %copyfunc3 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %5, i32 0, i32 33, !dbg !10474
  store void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)* %4, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)** %copyfunc3, align 8, !dbg !10475
  %6 = load void (%struct.bNode*)*, void (%struct.bNode*)** %freefunc.addr, align 8, !dbg !10476
  %7 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10477
  %freefunc4 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %7, i32 0, i32 32, !dbg !10478
  store void (%struct.bNode*)* %6, void (%struct.bNode*)** %freefunc4, align 8, !dbg !10479
  ret void, !dbg !10480
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_label(%struct.bNodeType* %ntype, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)* %labelfunc) #0 !dbg !10481 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %labelfunc.addr = alloca void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, align 8
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10484, metadata !DIExpression()), !dbg !10485
  store void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)* %labelfunc, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)** %labelfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)** %labelfunc.addr, metadata !10486, metadata !DIExpression()), !dbg !10487
  %0 = load void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)** %labelfunc.addr, align 8, !dbg !10488
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10489
  %labelfunc1 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 25, !dbg !10490
  store void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)* %0, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)** %labelfunc1, align 8, !dbg !10491
  ret void, !dbg !10492
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_update(%struct.bNodeType* %ntype, void (%struct.bNodeTree*, %struct.bNode*)* %updatefunc, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)* %verifyfunc) #0 !dbg !10493 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %updatefunc.addr = alloca void (%struct.bNodeTree*, %struct.bNode*)*, align 8
  %verifyfunc.addr = alloca void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, align 8
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10496, metadata !DIExpression()), !dbg !10497
  store void (%struct.bNodeTree*, %struct.bNode*)* %updatefunc, void (%struct.bNodeTree*, %struct.bNode*)** %updatefunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bNodeTree*, %struct.bNode*)** %updatefunc.addr, metadata !10498, metadata !DIExpression()), !dbg !10499
  store void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)* %verifyfunc, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)** %verifyfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)** %verifyfunc.addr, metadata !10500, metadata !DIExpression()), !dbg !10501
  %0 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %updatefunc.addr, align 8, !dbg !10502
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10503
  %updatefunc1 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 29, !dbg !10504
  %updatefunc2 = bitcast {}** %updatefunc1 to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !10504
  store void (%struct.bNodeTree*, %struct.bNode*)* %0, void (%struct.bNodeTree*, %struct.bNode*)** %updatefunc2, align 8, !dbg !10505
  %2 = load void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)** %verifyfunc.addr, align 8, !dbg !10506
  %3 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10507
  %verifyfunc3 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %3, i32 0, i32 30, !dbg !10508
  store void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)* %2, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)** %verifyfunc3, align 8, !dbg !10509
  ret void, !dbg !10510
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_exec(%struct.bNodeType* %ntype, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)* %initexecfunc, void (i8*)* %freeexecfunc, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)* %execfunc) #0 !dbg !10511 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %initexecfunc.addr = alloca i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, align 8
  %freeexecfunc.addr = alloca void (i8*)*, align 8
  %execfunc.addr = alloca void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, align 8
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10514, metadata !DIExpression()), !dbg !10515
  store i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)* %initexecfunc, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)** %initexecfunc.addr, align 8
  call void @llvm.dbg.declare(metadata i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)** %initexecfunc.addr, metadata !10516, metadata !DIExpression()), !dbg !10517
  store void (i8*)* %freeexecfunc, void (i8*)** %freeexecfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %freeexecfunc.addr, metadata !10518, metadata !DIExpression()), !dbg !10519
  store void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)* %execfunc, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)** %execfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)** %execfunc.addr, metadata !10520, metadata !DIExpression()), !dbg !10521
  %0 = load i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)** %initexecfunc.addr, align 8, !dbg !10522
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10523
  %initexecfunc1 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 40, !dbg !10524
  store i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)* %0, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)** %initexecfunc1, align 8, !dbg !10525
  %2 = load void (i8*)*, void (i8*)** %freeexecfunc.addr, align 8, !dbg !10526
  %3 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10527
  %freeexecfunc2 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %3, i32 0, i32 41, !dbg !10528
  store void (i8*)* %2, void (i8*)** %freeexecfunc2, align 8, !dbg !10529
  %4 = load void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)** %execfunc.addr, align 8, !dbg !10530
  %5 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10531
  %execfunc3 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %5, i32 0, i32 42, !dbg !10532
  store void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)* %4, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)** %execfunc3, align 8, !dbg !10533
  ret void, !dbg !10534
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_gpu(%struct.bNodeType* %ntype, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)* %gpufunc) #0 !dbg !10535 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %gpufunc.addr = alloca i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, align 8
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10538, metadata !DIExpression()), !dbg !10539
  store i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)* %gpufunc, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)** %gpufunc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)** %gpufunc.addr, metadata !10540, metadata !DIExpression()), !dbg !10541
  %0 = load i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)** %gpufunc.addr, align 8, !dbg !10542
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10543
  %gpufunc1 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 43, !dbg !10544
  store i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)* %0, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)** %gpufunc1, align 8, !dbg !10545
  ret void, !dbg !10546
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_internal_links(%struct.bNodeType* %ntype, void (%struct.bNodeTree*, %struct.bNode*)* %update_internal_links) #0 !dbg !10547 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %update_internal_links.addr = alloca void (%struct.bNodeTree*, %struct.bNode*)*, align 8
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10551, metadata !DIExpression()), !dbg !10552
  store void (%struct.bNodeTree*, %struct.bNode*)* %update_internal_links, void (%struct.bNodeTree*, %struct.bNode*)** %update_internal_links.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bNodeTree*, %struct.bNode*)** %update_internal_links.addr, metadata !10553, metadata !DIExpression()), !dbg !10554
  %0 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %update_internal_links.addr, align 8, !dbg !10555
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10556
  %update_internal_links1 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 39, !dbg !10557
  %update_internal_links2 = bitcast {}** %update_internal_links1 to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !10557
  store void (%struct.bNodeTree*, %struct.bNode*)* %0, void (%struct.bNodeTree*, %struct.bNode*)** %update_internal_links2, align 8, !dbg !10558
  ret void, !dbg !10559
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @node_type_compatibility(%struct.bNodeType* %ntype, i16 signext %compatibility) #0 !dbg !10560 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %compatibility.addr = alloca i16, align 2
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !10563, metadata !DIExpression()), !dbg !10564
  store i16 %compatibility, i16* %compatibility.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %compatibility.addr, metadata !10565, metadata !DIExpression()), !dbg !10566
  %0 = load i16, i16* %compatibility.addr, align 2, !dbg !10567
  %1 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !10568
  %compatibility1 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %1, i32 0, i32 16, !dbg !10569
  store i16 %0, i16* %compatibility1, align 8, !dbg !10570
  ret void, !dbg !10571
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_nodesystem() #0 !dbg !10572 {
entry:
  %call = call %struct.GHash* @BLI_ghash_str_new(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.262, i64 0, i64 0)), !dbg !10573
  store %struct.GHash* %call, %struct.GHash** @nodetreetypes_hash, align 8, !dbg !10574
  %call1 = call %struct.GHash* @BLI_ghash_str_new(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.263, i64 0, i64 0)), !dbg !10575
  store %struct.GHash* %call1, %struct.GHash** @nodetypes_hash, align 8, !dbg !10576
  %call2 = call %struct.GHash* @BLI_ghash_str_new(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.264, i64 0, i64 0)), !dbg !10577
  store %struct.GHash* %call2, %struct.GHash** @nodesockettypes_hash, align 8, !dbg !10578
  call void @register_undefined_types(), !dbg !10579
  call void @register_standard_node_socket_types(), !dbg !10580
  call void @register_node_tree_type_cmp(), !dbg !10581
  call void @register_node_tree_type_sh(), !dbg !10582
  call void @register_node_tree_type_tex(), !dbg !10583
  call void @register_node_type_frame(), !dbg !10584
  call void @register_node_type_reroute(), !dbg !10585
  call void @register_node_type_group_input(), !dbg !10586
  call void @register_node_type_group_output(), !dbg !10587
  call void @registerCompositNodes(), !dbg !10588
  call void @registerShaderNodes(), !dbg !10589
  call void @registerTextureNodes(), !dbg !10590
  ret void, !dbg !10591
}

declare dso_local %struct.GHash* @BLI_ghash_str_new(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @register_undefined_types() #0 !dbg !10592 {
entry:
  %call = call i8* @strcpy(i8* getelementptr inbounds (%struct.bNodeTreeType, %struct.bNodeTreeType* @NodeTreeTypeUndefined, i32 0, i32 1, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.274, i64 0, i64 0)) #7, !dbg !10593
  %call1 = call i8* @strcpy(i8* getelementptr inbounds (%struct.bNodeTreeType, %struct.bNodeTreeType* @NodeTreeTypeUndefined, i32 0, i32 2, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.275, i64 0, i64 0)) #7, !dbg !10594
  %call2 = call i8* @strcpy(i8* getelementptr inbounds (%struct.bNodeTreeType, %struct.bNodeTreeType* @NodeTreeTypeUndefined, i32 0, i32 3, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.276, i64 0, i64 0)) #7, !dbg !10595
  call void @node_type_base_custom(%struct.bNodeType* @NodeTypeUndefined, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.277, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.275, i64 0, i64 0), i16 signext 0, i16 signext 0), !dbg !10596
  store i32 (%struct.bNodeType*, %struct.bNodeTree*)* @node_undefined_poll, i32 (%struct.bNodeType*, %struct.bNodeTree*)** getelementptr inbounds (%struct.bNodeType, %struct.bNodeType* @NodeTypeUndefined, i32 0, i32 37), align 8, !dbg !10597
  %call3 = call i8* @BLI_strncpy(i8* getelementptr inbounds (%struct.bNodeSocketType, %struct.bNodeSocketType* @NodeSocketTypeUndefined, i32 0, i32 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.278, i64 0, i64 0), i64 64), !dbg !10598
  store i32 -1, i32* getelementptr inbounds (%struct.bNodeSocketType, %struct.bNodeSocketType* @NodeSocketTypeUndefined, i32 0, i32 11), align 8, !dbg !10599
  store i32 0, i32* getelementptr inbounds (%struct.bNodeSocketType, %struct.bNodeSocketType* @NodeSocketTypeUndefined, i32 0, i32 12), align 4, !dbg !10600
  ret void, !dbg !10601
}

declare dso_local void @register_standard_node_socket_types() #2

declare dso_local void @register_node_tree_type_cmp() #2

declare dso_local void @register_node_tree_type_sh() #2

declare dso_local void @register_node_tree_type_tex() #2

declare dso_local void @register_node_type_frame() #2

declare dso_local void @register_node_type_reroute() #2

declare dso_local void @register_node_type_group_input() #2

declare dso_local void @register_node_type_group_output() #2

; Function Attrs: noinline nounwind uwtable
define internal void @registerCompositNodes() #0 !dbg !10602 {
entry:
  call void @register_node_type_cmp_group(), !dbg !10603
  call void @register_node_type_cmp_rlayers(), !dbg !10604
  call void @register_node_type_cmp_image(), !dbg !10605
  call void @register_node_type_cmp_texture(), !dbg !10606
  call void @register_node_type_cmp_value(), !dbg !10607
  call void @register_node_type_cmp_rgb(), !dbg !10608
  call void @register_node_type_cmp_curve_time(), !dbg !10609
  call void @register_node_type_cmp_movieclip(), !dbg !10610
  call void @register_node_type_cmp_composite(), !dbg !10611
  call void @register_node_type_cmp_viewer(), !dbg !10612
  call void @register_node_type_cmp_splitviewer(), !dbg !10613
  call void @register_node_type_cmp_output_file(), !dbg !10614
  call void @register_node_type_cmp_view_levels(), !dbg !10615
  call void @register_node_type_cmp_curve_rgb(), !dbg !10616
  call void @register_node_type_cmp_mix_rgb(), !dbg !10617
  call void @register_node_type_cmp_hue_sat(), !dbg !10618
  call void @register_node_type_cmp_brightcontrast(), !dbg !10619
  call void @register_node_type_cmp_gamma(), !dbg !10620
  call void @register_node_type_cmp_invert(), !dbg !10621
  call void @register_node_type_cmp_alphaover(), !dbg !10622
  call void @register_node_type_cmp_zcombine(), !dbg !10623
  call void @register_node_type_cmp_colorbalance(), !dbg !10624
  call void @register_node_type_cmp_huecorrect(), !dbg !10625
  call void @register_node_type_cmp_normal(), !dbg !10626
  call void @register_node_type_cmp_curve_vec(), !dbg !10627
  call void @register_node_type_cmp_map_value(), !dbg !10628
  call void @register_node_type_cmp_map_range(), !dbg !10629
  call void @register_node_type_cmp_normalize(), !dbg !10630
  call void @register_node_type_cmp_filter(), !dbg !10631
  call void @register_node_type_cmp_blur(), !dbg !10632
  call void @register_node_type_cmp_dblur(), !dbg !10633
  call void @register_node_type_cmp_bilateralblur(), !dbg !10634
  call void @register_node_type_cmp_vecblur(), !dbg !10635
  call void @register_node_type_cmp_dilateerode(), !dbg !10636
  call void @register_node_type_cmp_inpaint(), !dbg !10637
  call void @register_node_type_cmp_despeckle(), !dbg !10638
  call void @register_node_type_cmp_defocus(), !dbg !10639
  call void @register_node_type_cmp_sunbeams(), !dbg !10640
  call void @register_node_type_cmp_valtorgb(), !dbg !10641
  call void @register_node_type_cmp_rgbtobw(), !dbg !10642
  call void @register_node_type_cmp_setalpha(), !dbg !10643
  call void @register_node_type_cmp_idmask(), !dbg !10644
  call void @register_node_type_cmp_math(), !dbg !10645
  call void @register_node_type_cmp_seprgba(), !dbg !10646
  call void @register_node_type_cmp_combrgba(), !dbg !10647
  call void @register_node_type_cmp_sephsva(), !dbg !10648
  call void @register_node_type_cmp_combhsva(), !dbg !10649
  call void @register_node_type_cmp_sepyuva(), !dbg !10650
  call void @register_node_type_cmp_combyuva(), !dbg !10651
  call void @register_node_type_cmp_sepycca(), !dbg !10652
  call void @register_node_type_cmp_combycca(), !dbg !10653
  call void @register_node_type_cmp_premulkey(), !dbg !10654
  call void @register_node_type_cmp_diff_matte(), !dbg !10655
  call void @register_node_type_cmp_distance_matte(), !dbg !10656
  call void @register_node_type_cmp_chroma_matte(), !dbg !10657
  call void @register_node_type_cmp_color_matte(), !dbg !10658
  call void @register_node_type_cmp_channel_matte(), !dbg !10659
  call void @register_node_type_cmp_color_spill(), !dbg !10660
  call void @register_node_type_cmp_luma_matte(), !dbg !10661
  call void @register_node_type_cmp_doubleedgemask(), !dbg !10662
  call void @register_node_type_cmp_keyingscreen(), !dbg !10663
  call void @register_node_type_cmp_keying(), !dbg !10664
  call void @register_node_type_cmp_translate(), !dbg !10665
  call void @register_node_type_cmp_rotate(), !dbg !10666
  call void @register_node_type_cmp_scale(), !dbg !10667
  call void @register_node_type_cmp_flip(), !dbg !10668
  call void @register_node_type_cmp_crop(), !dbg !10669
  call void @register_node_type_cmp_displace(), !dbg !10670
  call void @register_node_type_cmp_mapuv(), !dbg !10671
  call void @register_node_type_cmp_glare(), !dbg !10672
  call void @register_node_type_cmp_tonemap(), !dbg !10673
  call void @register_node_type_cmp_lensdist(), !dbg !10674
  call void @register_node_type_cmp_transform(), !dbg !10675
  call void @register_node_type_cmp_stabilize2d(), !dbg !10676
  call void @register_node_type_cmp_moviedistortion(), !dbg !10677
  call void @register_node_type_cmp_colorcorrection(), !dbg !10678
  call void @register_node_type_cmp_boxmask(), !dbg !10679
  call void @register_node_type_cmp_ellipsemask(), !dbg !10680
  call void @register_node_type_cmp_bokehimage(), !dbg !10681
  call void @register_node_type_cmp_bokehblur(), !dbg !10682
  call void @register_node_type_cmp_switch(), !dbg !10683
  call void @register_node_type_cmp_pixelate(), !dbg !10684
  call void @register_node_type_cmp_mask(), !dbg !10685
  call void @register_node_type_cmp_trackpos(), !dbg !10686
  call void @register_node_type_cmp_planetrackdeform(), !dbg !10687
  call void @register_node_type_cmp_cornerpin(), !dbg !10688
  ret void, !dbg !10689
}

; Function Attrs: noinline nounwind uwtable
define internal void @registerShaderNodes() #0 !dbg !10690 {
entry:
  call void @register_node_type_sh_group(), !dbg !10691
  call void @register_node_type_sh_output(), !dbg !10692
  call void @register_node_type_sh_material(), !dbg !10693
  call void @register_node_type_sh_camera(), !dbg !10694
  call void @register_node_type_sh_lamp(), !dbg !10695
  call void @register_node_type_sh_gamma(), !dbg !10696
  call void @register_node_type_sh_brightcontrast(), !dbg !10697
  call void @register_node_type_sh_value(), !dbg !10698
  call void @register_node_type_sh_rgb(), !dbg !10699
  call void @register_node_type_sh_wireframe(), !dbg !10700
  call void @register_node_type_sh_wavelength(), !dbg !10701
  call void @register_node_type_sh_blackbody(), !dbg !10702
  call void @register_node_type_sh_mix_rgb(), !dbg !10703
  call void @register_node_type_sh_valtorgb(), !dbg !10704
  call void @register_node_type_sh_rgbtobw(), !dbg !10705
  call void @register_node_type_sh_texture(), !dbg !10706
  call void @register_node_type_sh_normal(), !dbg !10707
  call void @register_node_type_sh_geom(), !dbg !10708
  call void @register_node_type_sh_mapping(), !dbg !10709
  call void @register_node_type_sh_curve_vec(), !dbg !10710
  call void @register_node_type_sh_curve_rgb(), !dbg !10711
  call void @register_node_type_sh_math(), !dbg !10712
  call void @register_node_type_sh_vect_math(), !dbg !10713
  call void @register_node_type_sh_vect_transform(), !dbg !10714
  call void @register_node_type_sh_squeeze(), !dbg !10715
  call void @register_node_type_sh_material_ext(), !dbg !10716
  call void @register_node_type_sh_invert(), !dbg !10717
  call void @register_node_type_sh_seprgb(), !dbg !10718
  call void @register_node_type_sh_combrgb(), !dbg !10719
  call void @register_node_type_sh_sephsv(), !dbg !10720
  call void @register_node_type_sh_combhsv(), !dbg !10721
  call void @register_node_type_sh_sepxyz(), !dbg !10722
  call void @register_node_type_sh_combxyz(), !dbg !10723
  call void @register_node_type_sh_hue_sat(), !dbg !10724
  call void @register_node_type_sh_attribute(), !dbg !10725
  call void @register_node_type_sh_geometry(), !dbg !10726
  call void @register_node_type_sh_light_path(), !dbg !10727
  call void @register_node_type_sh_light_falloff(), !dbg !10728
  call void @register_node_type_sh_object_info(), !dbg !10729
  call void @register_node_type_sh_fresnel(), !dbg !10730
  call void @register_node_type_sh_layer_weight(), !dbg !10731
  call void @register_node_type_sh_tex_coord(), !dbg !10732
  call void @register_node_type_sh_particle_info(), !dbg !10733
  call void @register_node_type_sh_bump(), !dbg !10734
  call void @register_node_type_sh_background(), !dbg !10735
  call void @register_node_type_sh_bsdf_anisotropic(), !dbg !10736
  call void @register_node_type_sh_bsdf_diffuse(), !dbg !10737
  call void @register_node_type_sh_bsdf_glossy(), !dbg !10738
  call void @register_node_type_sh_bsdf_glass(), !dbg !10739
  call void @register_node_type_sh_bsdf_translucent(), !dbg !10740
  call void @register_node_type_sh_bsdf_transparent(), !dbg !10741
  call void @register_node_type_sh_bsdf_velvet(), !dbg !10742
  call void @register_node_type_sh_bsdf_toon(), !dbg !10743
  call void @register_node_type_sh_bsdf_hair(), !dbg !10744
  call void @register_node_type_sh_emission(), !dbg !10745
  call void @register_node_type_sh_holdout(), !dbg !10746
  call void @register_node_type_sh_volume_absorption(), !dbg !10747
  call void @register_node_type_sh_volume_scatter(), !dbg !10748
  call void @register_node_type_sh_subsurface_scattering(), !dbg !10749
  call void @register_node_type_sh_mix_shader(), !dbg !10750
  call void @register_node_type_sh_add_shader(), !dbg !10751
  call void @register_node_type_sh_uvmap(), !dbg !10752
  call void @register_node_type_sh_uvalongstroke(), !dbg !10753
  call void @register_node_type_sh_output_lamp(), !dbg !10754
  call void @register_node_type_sh_output_material(), !dbg !10755
  call void @register_node_type_sh_output_world(), !dbg !10756
  call void @register_node_type_sh_output_linestyle(), !dbg !10757
  call void @register_node_type_sh_tex_image(), !dbg !10758
  call void @register_node_type_sh_tex_environment(), !dbg !10759
  call void @register_node_type_sh_tex_sky(), !dbg !10760
  call void @register_node_type_sh_tex_noise(), !dbg !10761
  call void @register_node_type_sh_tex_wave(), !dbg !10762
  call void @register_node_type_sh_tex_voronoi(), !dbg !10763
  call void @register_node_type_sh_tex_musgrave(), !dbg !10764
  call void @register_node_type_sh_tex_gradient(), !dbg !10765
  call void @register_node_type_sh_tex_magic(), !dbg !10766
  call void @register_node_type_sh_tex_checker(), !dbg !10767
  call void @register_node_type_sh_tex_brick(), !dbg !10768
  ret void, !dbg !10769
}

; Function Attrs: noinline nounwind uwtable
define internal void @registerTextureNodes() #0 !dbg !10770 {
entry:
  call void @register_node_type_tex_group(), !dbg !10771
  call void @register_node_type_tex_math(), !dbg !10772
  call void @register_node_type_tex_mix_rgb(), !dbg !10773
  call void @register_node_type_tex_valtorgb(), !dbg !10774
  call void @register_node_type_tex_rgbtobw(), !dbg !10775
  call void @register_node_type_tex_valtonor(), !dbg !10776
  call void @register_node_type_tex_curve_rgb(), !dbg !10777
  call void @register_node_type_tex_curve_time(), !dbg !10778
  call void @register_node_type_tex_invert(), !dbg !10779
  call void @register_node_type_tex_hue_sat(), !dbg !10780
  call void @register_node_type_tex_coord(), !dbg !10781
  call void @register_node_type_tex_distance(), !dbg !10782
  call void @register_node_type_tex_compose(), !dbg !10783
  call void @register_node_type_tex_decompose(), !dbg !10784
  call void @register_node_type_tex_output(), !dbg !10785
  call void @register_node_type_tex_viewer(), !dbg !10786
  call void @register_node_type_sh_script(), !dbg !10787
  call void @register_node_type_sh_tangent(), !dbg !10788
  call void @register_node_type_sh_normal_map(), !dbg !10789
  call void @register_node_type_sh_hair_info(), !dbg !10790
  call void @register_node_type_tex_checker(), !dbg !10791
  call void @register_node_type_tex_texture(), !dbg !10792
  call void @register_node_type_tex_bricks(), !dbg !10793
  call void @register_node_type_tex_image(), !dbg !10794
  call void @register_node_type_sh_bsdf_refraction(), !dbg !10795
  call void @register_node_type_sh_ambient_occlusion(), !dbg !10796
  call void @register_node_type_tex_rotate(), !dbg !10797
  call void @register_node_type_tex_translate(), !dbg !10798
  call void @register_node_type_tex_scale(), !dbg !10799
  call void @register_node_type_tex_at(), !dbg !10800
  call void @register_node_type_tex_proc_voronoi(), !dbg !10801
  call void @register_node_type_tex_proc_blend(), !dbg !10802
  call void @register_node_type_tex_proc_magic(), !dbg !10803
  call void @register_node_type_tex_proc_marble(), !dbg !10804
  call void @register_node_type_tex_proc_clouds(), !dbg !10805
  call void @register_node_type_tex_proc_wood(), !dbg !10806
  call void @register_node_type_tex_proc_musgrave(), !dbg !10807
  call void @register_node_type_tex_proc_noise(), !dbg !10808
  call void @register_node_type_tex_proc_stucci(), !dbg !10809
  call void @register_node_type_tex_proc_distnoise(), !dbg !10810
  ret void, !dbg !10811
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @free_nodesystem() #0 !dbg !10812 {
entry:
  %__node_type_iter__ = alloca %struct.GHashIterator*, align 8
  %nt = alloca %struct.bNodeType*, align 8
  %__node_socket_type_iter__ = alloca %struct.GHashIterator*, align 8
  %st = alloca %struct.bNodeSocketType*, align 8
  %__node_tree_type_iter__ = alloca %struct.GHashIterator*, align 8
  %nt46 = alloca %struct.bNodeTreeType*, align 8
  %0 = load %struct.GHash*, %struct.GHash** @nodetypes_hash, align 8, !dbg !10813
  %tobool = icmp ne %struct.GHash* %0, null, !dbg !10813
  br i1 %tobool, label %if.then, label %if.end9, !dbg !10815

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %__node_type_iter__, metadata !10816, metadata !DIExpression()), !dbg !10819
  %call = call %struct.GHashIterator* @nodeTypeGetIterator(), !dbg !10819
  store %struct.GHashIterator* %call, %struct.GHashIterator** %__node_type_iter__, align 8, !dbg !10819
  br label %for.cond, !dbg !10819

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_type_iter__, align 8, !dbg !10820
  %call1 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %1), !dbg !10820
  %tobool2 = icmp ne i8 %call1, 0, !dbg !10820
  %lnot = xor i1 %tobool2, true, !dbg !10820
  br i1 %lnot, label %for.body, label %for.end, !dbg !10823

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %nt, metadata !10824, metadata !DIExpression()), !dbg !10826
  %2 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_type_iter__, align 8, !dbg !10826
  %call3 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %2), !dbg !10826
  %3 = bitcast i8* %call3 to %struct.bNodeType*, !dbg !10826
  store %struct.bNodeType* %3, %struct.bNodeType** %nt, align 8, !dbg !10826
  %4 = load %struct.bNodeType*, %struct.bNodeType** %nt, align 8, !dbg !10827
  %ext = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %4, i32 0, i32 44, !dbg !10829
  %free = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext, i32 0, i32 3, !dbg !10830
  %5 = load void (i8*)*, void (i8*)** %free, align 8, !dbg !10830
  %tobool4 = icmp ne void (i8*)* %5, null, !dbg !10827
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !10831

if.then5:                                         ; preds = %for.body
  %6 = load %struct.bNodeType*, %struct.bNodeType** %nt, align 8, !dbg !10832
  %ext6 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %6, i32 0, i32 44, !dbg !10834
  %free7 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext6, i32 0, i32 3, !dbg !10835
  %7 = load void (i8*)*, void (i8*)** %free7, align 8, !dbg !10835
  %8 = load %struct.bNodeType*, %struct.bNodeType** %nt, align 8, !dbg !10836
  %ext8 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %8, i32 0, i32 44, !dbg !10837
  %data = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext8, i32 0, i32 0, !dbg !10838
  %9 = load i8*, i8** %data, align 8, !dbg !10838
  call void %7(i8* %9), !dbg !10832
  br label %if.end, !dbg !10839

if.end:                                           ; preds = %if.then5, %for.body
  br label %for.inc, !dbg !10840

for.inc:                                          ; preds = %if.end
  %10 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_type_iter__, align 8, !dbg !10820
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %10), !dbg !10820
  br label %for.cond, !dbg !10820, !llvm.loop !10841

for.end:                                          ; preds = %for.cond
  %11 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_type_iter__, align 8, !dbg !10843
  call void @BLI_ghashIterator_free(%struct.GHashIterator* %11), !dbg !10843
  %12 = load %struct.GHash*, %struct.GHash** @nodetypes_hash, align 8, !dbg !10844
  call void @BLI_ghash_free(%struct.GHash* %12, void (i8*)* null, void (i8*)* @node_free_type), !dbg !10845
  store %struct.GHash* null, %struct.GHash** @nodetypes_hash, align 8, !dbg !10846
  br label %if.end9, !dbg !10847

if.end9:                                          ; preds = %for.end, %entry
  %13 = load %struct.GHash*, %struct.GHash** @nodesockettypes_hash, align 8, !dbg !10848
  %tobool10 = icmp ne %struct.GHash* %13, null, !dbg !10848
  br i1 %tobool10, label %if.then11, label %if.end37, !dbg !10850

if.then11:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %__node_socket_type_iter__, metadata !10851, metadata !DIExpression()), !dbg !10854
  %call12 = call %struct.GHashIterator* @nodeSocketTypeGetIterator(), !dbg !10854
  store %struct.GHashIterator* %call12, %struct.GHashIterator** %__node_socket_type_iter__, align 8, !dbg !10854
  br label %for.cond13, !dbg !10854

for.cond13:                                       ; preds = %for.inc35, %if.then11
  %14 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_socket_type_iter__, align 8, !dbg !10855
  %call14 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %14), !dbg !10855
  %tobool15 = icmp ne i8 %call14, 0, !dbg !10855
  %lnot16 = xor i1 %tobool15, true, !dbg !10855
  br i1 %lnot16, label %for.body17, label %for.end36, !dbg !10858

for.body17:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketType** %st, metadata !10859, metadata !DIExpression()), !dbg !10861
  %15 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_socket_type_iter__, align 8, !dbg !10861
  %call18 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %15), !dbg !10861
  %16 = bitcast i8* %call18 to %struct.bNodeSocketType*, !dbg !10861
  store %struct.bNodeSocketType* %16, %struct.bNodeSocketType** %st, align 8, !dbg !10861
  %17 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %st, align 8, !dbg !10862
  %ext_socket = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %17, i32 0, i32 9, !dbg !10864
  %free19 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext_socket, i32 0, i32 3, !dbg !10865
  %18 = load void (i8*)*, void (i8*)** %free19, align 8, !dbg !10865
  %tobool20 = icmp ne void (i8*)* %18, null, !dbg !10862
  br i1 %tobool20, label %if.then21, label %if.end26, !dbg !10866

if.then21:                                        ; preds = %for.body17
  %19 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %st, align 8, !dbg !10867
  %ext_socket22 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %19, i32 0, i32 9, !dbg !10868
  %free23 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext_socket22, i32 0, i32 3, !dbg !10869
  %20 = load void (i8*)*, void (i8*)** %free23, align 8, !dbg !10869
  %21 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %st, align 8, !dbg !10870
  %ext_socket24 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %21, i32 0, i32 9, !dbg !10871
  %data25 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext_socket24, i32 0, i32 0, !dbg !10872
  %22 = load i8*, i8** %data25, align 8, !dbg !10872
  call void %20(i8* %22), !dbg !10867
  br label %if.end26, !dbg !10867

if.end26:                                         ; preds = %if.then21, %for.body17
  %23 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %st, align 8, !dbg !10873
  %ext_interface = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %23, i32 0, i32 10, !dbg !10875
  %free27 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext_interface, i32 0, i32 3, !dbg !10876
  %24 = load void (i8*)*, void (i8*)** %free27, align 8, !dbg !10876
  %tobool28 = icmp ne void (i8*)* %24, null, !dbg !10873
  br i1 %tobool28, label %if.then29, label %if.end34, !dbg !10877

if.then29:                                        ; preds = %if.end26
  %25 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %st, align 8, !dbg !10878
  %ext_interface30 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %25, i32 0, i32 10, !dbg !10879
  %free31 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext_interface30, i32 0, i32 3, !dbg !10880
  %26 = load void (i8*)*, void (i8*)** %free31, align 8, !dbg !10880
  %27 = load %struct.bNodeSocketType*, %struct.bNodeSocketType** %st, align 8, !dbg !10881
  %ext_interface32 = getelementptr inbounds %struct.bNodeSocketType, %struct.bNodeSocketType* %27, i32 0, i32 10, !dbg !10882
  %data33 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext_interface32, i32 0, i32 0, !dbg !10883
  %28 = load i8*, i8** %data33, align 8, !dbg !10883
  call void %26(i8* %28), !dbg !10878
  br label %if.end34, !dbg !10878

if.end34:                                         ; preds = %if.then29, %if.end26
  br label %for.inc35, !dbg !10884

for.inc35:                                        ; preds = %if.end34
  %29 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_socket_type_iter__, align 8, !dbg !10855
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %29), !dbg !10855
  br label %for.cond13, !dbg !10855, !llvm.loop !10885

for.end36:                                        ; preds = %for.cond13
  %30 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_socket_type_iter__, align 8, !dbg !10887
  call void @BLI_ghashIterator_free(%struct.GHashIterator* %30), !dbg !10887
  %31 = load %struct.GHash*, %struct.GHash** @nodesockettypes_hash, align 8, !dbg !10888
  call void @BLI_ghash_free(%struct.GHash* %31, void (i8*)* null, void (i8*)* @node_free_socket_type), !dbg !10889
  store %struct.GHash* null, %struct.GHash** @nodesockettypes_hash, align 8, !dbg !10890
  br label %if.end37, !dbg !10891

if.end37:                                         ; preds = %for.end36, %if.end9
  %32 = load %struct.GHash*, %struct.GHash** @nodetreetypes_hash, align 8, !dbg !10892
  %tobool38 = icmp ne %struct.GHash* %32, null, !dbg !10892
  br i1 %tobool38, label %if.then39, label %if.end59, !dbg !10894

if.then39:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %__node_tree_type_iter__, metadata !10895, metadata !DIExpression()), !dbg !10898
  %call40 = call %struct.GHashIterator* @ntreeTypeGetIterator(), !dbg !10898
  store %struct.GHashIterator* %call40, %struct.GHashIterator** %__node_tree_type_iter__, align 8, !dbg !10898
  br label %for.cond41, !dbg !10898

for.cond41:                                       ; preds = %for.inc57, %if.then39
  %33 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_tree_type_iter__, align 8, !dbg !10899
  %call42 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %33), !dbg !10899
  %tobool43 = icmp ne i8 %call42, 0, !dbg !10899
  %lnot44 = xor i1 %tobool43, true, !dbg !10899
  br i1 %lnot44, label %for.body45, label %for.end58, !dbg !10902

for.body45:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata %struct.bNodeTreeType** %nt46, metadata !10903, metadata !DIExpression()), !dbg !10905
  %34 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_tree_type_iter__, align 8, !dbg !10905
  %call47 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %34), !dbg !10905
  %35 = bitcast i8* %call47 to %struct.bNodeTreeType*, !dbg !10905
  store %struct.bNodeTreeType* %35, %struct.bNodeTreeType** %nt46, align 8, !dbg !10905
  %36 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %nt46, align 8, !dbg !10906
  %ext48 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %36, i32 0, i32 16, !dbg !10909
  %free49 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext48, i32 0, i32 3, !dbg !10910
  %37 = load void (i8*)*, void (i8*)** %free49, align 8, !dbg !10910
  %tobool50 = icmp ne void (i8*)* %37, null, !dbg !10906
  br i1 %tobool50, label %if.then51, label %if.end56, !dbg !10911

if.then51:                                        ; preds = %for.body45
  %38 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %nt46, align 8, !dbg !10912
  %ext52 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %38, i32 0, i32 16, !dbg !10914
  %free53 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext52, i32 0, i32 3, !dbg !10915
  %39 = load void (i8*)*, void (i8*)** %free53, align 8, !dbg !10915
  %40 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %nt46, align 8, !dbg !10916
  %ext54 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %40, i32 0, i32 16, !dbg !10917
  %data55 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext54, i32 0, i32 0, !dbg !10918
  %41 = load i8*, i8** %data55, align 8, !dbg !10918
  call void %39(i8* %41), !dbg !10912
  br label %if.end56, !dbg !10919

if.end56:                                         ; preds = %if.then51, %for.body45
  br label %for.inc57, !dbg !10920

for.inc57:                                        ; preds = %if.end56
  %42 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_tree_type_iter__, align 8, !dbg !10899
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %42), !dbg !10899
  br label %for.cond41, !dbg !10899, !llvm.loop !10921

for.end58:                                        ; preds = %for.cond41
  %43 = load %struct.GHashIterator*, %struct.GHashIterator** %__node_tree_type_iter__, align 8, !dbg !10923
  call void @BLI_ghashIterator_free(%struct.GHashIterator* %43), !dbg !10923
  %44 = load %struct.GHash*, %struct.GHash** @nodetreetypes_hash, align 8, !dbg !10924
  call void @BLI_ghash_free(%struct.GHash* %44, void (i8*)* null, void (i8*)* @ntree_free_type), !dbg !10925
  store %struct.GHash* null, %struct.GHash** @nodetreetypes_hash, align 8, !dbg !10926
  br label %if.end59, !dbg !10927

if.end59:                                         ; preds = %for.end58, %if.end37
  ret void, !dbg !10928
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_init(%struct.bContext* %C, %struct.bNodeTree* %ntree, %struct.bNode* %node) #0 !dbg !10929 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %ntype = alloca %struct.bNodeType*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10932, metadata !DIExpression()), !dbg !10933
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !10934, metadata !DIExpression()), !dbg !10935
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !10936, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype, metadata !10938, metadata !DIExpression()), !dbg !10939
  %0 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10940
  %typeinfo = getelementptr inbounds %struct.bNode, %struct.bNode* %0, i32 0, i32 4, !dbg !10941
  %1 = load %struct.bNodeType*, %struct.bNodeType** %typeinfo, align 8, !dbg !10941
  store %struct.bNodeType* %1, %struct.bNodeType** %ntype, align 8, !dbg !10939
  %2 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !10942
  %cmp = icmp eq %struct.bNodeType* %2, @NodeTypeUndefined, !dbg !10944
  br i1 %cmp, label %if.then, label %if.end, !dbg !10945

if.then:                                          ; preds = %entry
  br label %return, !dbg !10946

if.end:                                           ; preds = %entry
  %3 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10947
  %flag = getelementptr inbounds %struct.bNode, %struct.bNode* %3, i32 0, i32 7, !dbg !10949
  %4 = load i32, i32* %flag, align 8, !dbg !10949
  %and = and i32 %4, 65536, !dbg !10950
  %tobool = icmp ne i32 %and, 0, !dbg !10950
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !10951

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !10952

if.end2:                                          ; preds = %if.end
  %5 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !10953
  %flag3 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %5, i32 0, i32 15, !dbg !10954
  %6 = load i16, i16* %flag3, align 2, !dbg !10954
  %conv = sext i16 %6 to i32, !dbg !10953
  %or = or i32 3, %conv, !dbg !10955
  %7 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10956
  %flag4 = getelementptr inbounds %struct.bNode, %struct.bNode* %7, i32 0, i32 7, !dbg !10957
  store i32 %or, i32* %flag4, align 8, !dbg !10958
  %8 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !10959
  %width = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %8, i32 0, i32 8, !dbg !10960
  %9 = load float, float* %width, align 4, !dbg !10960
  %10 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10961
  %width5 = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 26, !dbg !10962
  store float %9, float* %width5, align 8, !dbg !10963
  %11 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10964
  %miniwidth = getelementptr inbounds %struct.bNode, %struct.bNode* %11, i32 0, i32 28, !dbg !10965
  store float 4.200000e+01, float* %miniwidth, align 8, !dbg !10966
  %12 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !10967
  %height = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %12, i32 0, i32 11, !dbg !10968
  %13 = load float, float* %height, align 8, !dbg !10968
  %14 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10969
  %height6 = getelementptr inbounds %struct.bNode, %struct.bNode* %14, i32 0, i32 27, !dbg !10970
  store float %13, float* %height6, align 4, !dbg !10971
  %15 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10972
  %color = getelementptr inbounds %struct.bNode, %struct.bNode* %15, i32 0, i32 16, !dbg !10973
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %color, i64 0, i64 2, !dbg !10972
  store float 0x3FE374BC60000000, float* %arrayidx, align 4, !dbg !10974
  %16 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10975
  %color7 = getelementptr inbounds %struct.bNode, %struct.bNode* %16, i32 0, i32 16, !dbg !10976
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %color7, i64 0, i64 1, !dbg !10975
  store float 0x3FE374BC60000000, float* %arrayidx8, align 4, !dbg !10977
  %17 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10978
  %color9 = getelementptr inbounds %struct.bNode, %struct.bNode* %17, i32 0, i32 16, !dbg !10979
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %color9, i64 0, i64 0, !dbg !10978
  store float 0x3FE374BC60000000, float* %arrayidx10, align 4, !dbg !10980
  %18 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10981
  %name = getelementptr inbounds %struct.bNode, %struct.bNode* %18, i32 0, i32 6, !dbg !10982
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !10981
  %19 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !10983
  %ui_name = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %19, i32 0, i32 5, !dbg !10983
  %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %ui_name, i64 0, i64 0, !dbg !10983
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay11, i64 64), !dbg !10984
  %20 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !10985
  %21 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10986
  call void @nodeUniqueName(%struct.bNodeTree* %20, %struct.bNode* %21), !dbg !10987
  %22 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !10988
  %23 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !10989
  %24 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !10990
  call void @node_add_sockets_from_type(%struct.bNodeTree* %22, %struct.bNode* %23, %struct.bNodeType* %24), !dbg !10991
  %25 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !10992
  %initfunc = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %25, i32 0, i32 31, !dbg !10994
  %initfunc12 = bitcast {}** %initfunc to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !10994
  %26 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %initfunc12, align 8, !dbg !10994
  %cmp13 = icmp ne void (%struct.bNodeTree*, %struct.bNode*)* %26, null, !dbg !10995
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !10996

if.then15:                                        ; preds = %if.end2
  %27 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !10997
  %initfunc16 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %27, i32 0, i32 31, !dbg !10998
  %initfunc17 = bitcast {}** %initfunc16 to void (%struct.bNodeTree*, %struct.bNode*)**, !dbg !10998
  %28 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %initfunc17, align 8, !dbg !10998
  %29 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !10999
  %30 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !11000
  call void %28(%struct.bNodeTree* %29, %struct.bNode* %30), !dbg !10997
  br label %if.end18, !dbg !10997

if.end18:                                         ; preds = %if.then15, %if.end2
  %31 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !11001
  %typeinfo19 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %31, i32 0, i32 2, !dbg !11003
  %32 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo19, align 8, !dbg !11003
  %node_add_init = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %32, i32 0, i32 15, !dbg !11004
  %33 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %node_add_init, align 8, !dbg !11004
  %cmp20 = icmp ne void (%struct.bNodeTree*, %struct.bNode*)* %33, null, !dbg !11005
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !11006

if.then22:                                        ; preds = %if.end18
  %34 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !11007
  %typeinfo23 = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %34, i32 0, i32 2, !dbg !11008
  %35 = load %struct.bNodeTreeType*, %struct.bNodeTreeType** %typeinfo23, align 8, !dbg !11008
  %node_add_init24 = getelementptr inbounds %struct.bNodeTreeType, %struct.bNodeTreeType* %35, i32 0, i32 15, !dbg !11009
  %36 = load void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*)** %node_add_init24, align 8, !dbg !11009
  %37 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !11010
  %38 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !11011
  call void %36(%struct.bNodeTree* %37, %struct.bNode* %38), !dbg !11007
  br label %if.end25, !dbg !11007

if.end25:                                         ; preds = %if.then22, %if.end18
  %39 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !11012
  %initfunc_api = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %39, i32 0, i32 34, !dbg !11014
  %40 = load void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*)** %initfunc_api, align 8, !dbg !11014
  %tobool26 = icmp ne void (%struct.bContext*, %struct.PointerRNA*)* %40, null, !dbg !11012
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !11015

if.then27:                                        ; preds = %if.end25
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !11016, metadata !DIExpression()), !dbg !11018
  %41 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !11019
  %42 = bitcast %struct.bNodeTree* %41 to %struct.ID*, !dbg !11020
  %43 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !11021
  %44 = bitcast %struct.bNode* %43 to i8*, !dbg !11021
  call void @RNA_pointer_create(%struct.ID* %42, %struct.StructRNA* @RNA_Node, i8* %44, %struct.PointerRNA* %ptr), !dbg !11022
  %45 = load %struct.bNodeType*, %struct.bNodeType** %ntype, align 8, !dbg !11023
  %initfunc_api28 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %45, i32 0, i32 34, !dbg !11024
  %46 = load void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*)** %initfunc_api28, align 8, !dbg !11024
  %47 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11025
  call void %46(%struct.bContext* %47, %struct.PointerRNA* %ptr), !dbg !11023
  br label %if.end29, !dbg !11026

if.end29:                                         ; preds = %if.then27, %if.end25
  %48 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !11027
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %48, i32 0, i32 20, !dbg !11029
  %49 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !11029
  %tobool30 = icmp ne %struct.ID* %49, null, !dbg !11027
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !11030

if.then31:                                        ; preds = %if.end29
  %50 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !11031
  %id32 = getelementptr inbounds %struct.bNode, %struct.bNode* %50, i32 0, i32 20, !dbg !11032
  %51 = load %struct.ID*, %struct.ID** %id32, align 8, !dbg !11032
  call void @id_us_plus(%struct.ID* %51), !dbg !11033
  br label %if.end33, !dbg !11033

if.end33:                                         ; preds = %if.then31, %if.end29
  %52 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !11034
  %flag34 = getelementptr inbounds %struct.bNode, %struct.bNode* %52, i32 0, i32 7, !dbg !11035
  %53 = load i32, i32* %flag34, align 8, !dbg !11036
  %or35 = or i32 %53, 65536, !dbg !11036
  store i32 %or35, i32* %flag34, align 8, !dbg !11036
  br label %return, !dbg !11037

return:                                           ; preds = %if.end33, %if.then1, %if.then
  ret void, !dbg !11037
}

; Function Attrs: noinline nounwind uwtable
define internal void @node_add_sockets_from_type(%struct.bNodeTree* %ntree, %struct.bNode* %node, %struct.bNodeType* %ntype) #0 !dbg !11038 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node.addr = alloca %struct.bNode*, align 8
  %ntype.addr = alloca %struct.bNodeType*, align 8
  %sockdef = alloca %struct.bNodeSocketTemplate*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !11041, metadata !DIExpression()), !dbg !11042
  store %struct.bNode* %node, %struct.bNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %node.addr, metadata !11043, metadata !DIExpression()), !dbg !11044
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !11045, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketTemplate** %sockdef, metadata !11047, metadata !DIExpression()), !dbg !11048
  %0 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !11049
  %inputs = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %0, i32 0, i32 17, !dbg !11051
  %1 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %inputs, align 8, !dbg !11051
  %tobool = icmp ne %struct.bNodeSocketTemplate* %1, null, !dbg !11049
  br i1 %tobool, label %if.then, label %if.end, !dbg !11052

if.then:                                          ; preds = %entry
  %2 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !11053
  %inputs1 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %2, i32 0, i32 17, !dbg !11055
  %3 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %inputs1, align 8, !dbg !11055
  store %struct.bNodeSocketTemplate* %3, %struct.bNodeSocketTemplate** %sockdef, align 8, !dbg !11056
  br label %while.cond, !dbg !11057

while.cond:                                       ; preds = %while.body, %if.then
  %4 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %sockdef, align 8, !dbg !11058
  %type = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %4, i32 0, i32 0, !dbg !11059
  %5 = load i32, i32* %type, align 8, !dbg !11059
  %cmp = icmp ne i32 %5, -1, !dbg !11060
  br i1 %cmp, label %while.body, label %while.end, !dbg !11057

while.body:                                       ; preds = %while.cond
  %6 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !11061
  %7 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !11063
  %8 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %sockdef, align 8, !dbg !11064
  %call = call %struct.bNodeSocket* @node_add_socket_from_template(%struct.bNodeTree* %6, %struct.bNode* %7, %struct.bNodeSocketTemplate* %8, i32 1), !dbg !11065
  %9 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %sockdef, align 8, !dbg !11066
  %incdec.ptr = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %9, i32 1, !dbg !11066
  store %struct.bNodeSocketTemplate* %incdec.ptr, %struct.bNodeSocketTemplate** %sockdef, align 8, !dbg !11066
  br label %while.cond, !dbg !11057, !llvm.loop !11067

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11069

if.end:                                           ; preds = %while.end, %entry
  %10 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !11070
  %outputs = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %10, i32 0, i32 18, !dbg !11072
  %11 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %outputs, align 8, !dbg !11072
  %tobool2 = icmp ne %struct.bNodeSocketTemplate* %11, null, !dbg !11070
  br i1 %tobool2, label %if.then3, label %if.end12, !dbg !11073

if.then3:                                         ; preds = %if.end
  %12 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !11074
  %outputs4 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %12, i32 0, i32 18, !dbg !11076
  %13 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %outputs4, align 8, !dbg !11076
  store %struct.bNodeSocketTemplate* %13, %struct.bNodeSocketTemplate** %sockdef, align 8, !dbg !11077
  br label %while.cond5, !dbg !11078

while.cond5:                                      ; preds = %while.body8, %if.then3
  %14 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %sockdef, align 8, !dbg !11079
  %type6 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %14, i32 0, i32 0, !dbg !11080
  %15 = load i32, i32* %type6, align 8, !dbg !11080
  %cmp7 = icmp ne i32 %15, -1, !dbg !11081
  br i1 %cmp7, label %while.body8, label %while.end11, !dbg !11078

while.body8:                                      ; preds = %while.cond5
  %16 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !11082
  %17 = load %struct.bNode*, %struct.bNode** %node.addr, align 8, !dbg !11084
  %18 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %sockdef, align 8, !dbg !11085
  %call9 = call %struct.bNodeSocket* @node_add_socket_from_template(%struct.bNodeTree* %16, %struct.bNode* %17, %struct.bNodeSocketTemplate* %18, i32 2), !dbg !11086
  %19 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %sockdef, align 8, !dbg !11087
  %incdec.ptr10 = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %19, i32 1, !dbg !11087
  store %struct.bNodeSocketTemplate* %incdec.ptr10, %struct.bNodeSocketTemplate** %sockdef, align 8, !dbg !11087
  br label %while.cond5, !dbg !11078, !llvm.loop !11088

while.end11:                                      ; preds = %while.cond5
  br label %if.end12, !dbg !11090

if.end12:                                         ; preds = %while.end11, %if.end
  ret void, !dbg !11091
}

declare dso_local %struct.bNodeSocket* @node_add_socket_from_template(%struct.bNodeTree*, %struct.bNode*, %struct.bNodeSocketTemplate*, i32) #2

declare dso_local void @node_socket_init_default_value(%struct.bNodeSocket*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @free_dynamic_typeinfo(%struct.bNodeType* %ntype) #0 !dbg !11092 {
entry:
  %ntype.addr = alloca %struct.bNodeType*, align 8
  store %struct.bNodeType* %ntype, %struct.bNodeType** %ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %ntype.addr, metadata !11093, metadata !DIExpression()), !dbg !11094
  %0 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !11095
  %type = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %0, i32 0, i32 4, !dbg !11097
  %1 = load i32, i32* %type, align 4, !dbg !11097
  %cmp = icmp eq i32 %1, 123, !dbg !11098
  br i1 %cmp, label %if.then, label %if.end7, !dbg !11099

if.then:                                          ; preds = %entry
  %2 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !11100
  %inputs = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %2, i32 0, i32 17, !dbg !11103
  %3 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %inputs, align 8, !dbg !11103
  %tobool = icmp ne %struct.bNodeSocketTemplate* %3, null, !dbg !11100
  br i1 %tobool, label %if.then1, label %if.end, !dbg !11104

if.then1:                                         ; preds = %if.then
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11105
  %5 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !11107
  %inputs2 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %5, i32 0, i32 17, !dbg !11108
  %6 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %inputs2, align 8, !dbg !11108
  %7 = bitcast %struct.bNodeSocketTemplate* %6 to i8*, !dbg !11107
  call void %4(i8* %7), !dbg !11105
  br label %if.end, !dbg !11109

if.end:                                           ; preds = %if.then1, %if.then
  %8 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !11110
  %outputs = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %8, i32 0, i32 18, !dbg !11112
  %9 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %outputs, align 8, !dbg !11112
  %tobool3 = icmp ne %struct.bNodeSocketTemplate* %9, null, !dbg !11110
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !11113

if.then4:                                         ; preds = %if.end
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11114
  %11 = load %struct.bNodeType*, %struct.bNodeType** %ntype.addr, align 8, !dbg !11116
  %outputs5 = getelementptr inbounds %struct.bNodeType, %struct.bNodeType* %11, i32 0, i32 18, !dbg !11117
  %12 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %outputs5, align 8, !dbg !11117
  %13 = bitcast %struct.bNodeSocketTemplate* %12 to i8*, !dbg !11116
  call void %10(i8* %13), !dbg !11114
  br label %if.end6, !dbg !11118

if.end6:                                          ; preds = %if.then4, %if.end
  br label %if.end7, !dbg !11119

if.end7:                                          ; preds = %if.end6, %entry
  ret void, !dbg !11120
}

declare dso_local zeroext i8 @BLI_uniquename_cb(i8 (i8*, i8*)*, i8*, i8*, i8 zeroext, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @unique_identifier_check(i8* %arg, i8* %identifier) #0 !dbg !11121 {
entry:
  %retval = alloca i8, align 1
  %arg.addr = alloca i8*, align 8
  %identifier.addr = alloca i8*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %sock = alloca %struct.bNodeSocket*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !11124, metadata !DIExpression()), !dbg !11125
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !11126, metadata !DIExpression()), !dbg !11127
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !11128, metadata !DIExpression()), !dbg !11129
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !11130
  %1 = bitcast i8* %0 to %struct.ListBase*, !dbg !11130
  store %struct.ListBase* %1, %struct.ListBase** %lb, align 8, !dbg !11129
  call void @llvm.dbg.declare(metadata %struct.bNodeSocket** %sock, metadata !11131, metadata !DIExpression()), !dbg !11132
  %2 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !11133
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !11135
  %3 = load i8*, i8** %first, align 8, !dbg !11135
  %4 = bitcast i8* %3 to %struct.bNodeSocket*, !dbg !11133
  store %struct.bNodeSocket* %4, %struct.bNodeSocket** %sock, align 8, !dbg !11136
  br label %for.cond, !dbg !11137

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !11138
  %tobool = icmp ne %struct.bNodeSocket* %5, null, !dbg !11140
  br i1 %tobool, label %for.body, label %for.end, !dbg !11140

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !11141
  %identifier1 = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %6, i32 0, i32 4, !dbg !11141
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %identifier1, i64 0, i64 0, !dbg !11141
  %7 = load i8*, i8** %identifier.addr, align 8, !dbg !11141
  %call = call i32 @strcmp(i8* %arraydecay, i8* %7) #6, !dbg !11141
  %cmp = icmp eq i32 %call, 0, !dbg !11141
  br i1 %cmp, label %if.then, label %if.end, !dbg !11144

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !11145
  br label %return, !dbg !11145

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11146

for.inc:                                          ; preds = %if.end
  %8 = load %struct.bNodeSocket*, %struct.bNodeSocket** %sock, align 8, !dbg !11147
  %next = getelementptr inbounds %struct.bNodeSocket, %struct.bNodeSocket* %8, i32 0, i32 0, !dbg !11148
  %9 = load %struct.bNodeSocket*, %struct.bNodeSocket** %next, align 8, !dbg !11148
  store %struct.bNodeSocket* %9, %struct.bNodeSocket** %sock, align 8, !dbg !11149
  br label %for.cond, !dbg !11150, !llvm.loop !11151

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !11153
  br label %return, !dbg !11153

return:                                           ; preds = %for.end, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !11154
  ret i8 %10, !dbg !11154
}

declare dso_local void @IDP_FreeProperty(%struct.IDProperty*) #2

declare dso_local i8* @BKE_libblock_copy(%struct.ID*) #2

declare dso_local i8* @BKE_libblock_copy_nolib(%struct.ID*, i8 zeroext) #2

declare dso_local void @id_lib_extern(%struct.ID*) #2

declare dso_local void @BLI_ghashIterator_init(%struct.GHashIterator*, %struct.GHash*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %ghi) #0 !dbg !11155 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !11156, metadata !DIExpression()), !dbg !11157
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !11158
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !11159
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !11159
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !11160
  %key = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 1, !dbg !11160
  %3 = load i8*, i8** %key, align 8, !dbg !11160
  ret i8* %3, !dbg !11161
}

; Function Attrs: noinline nounwind uwtable
define internal void @linearrgb_to_srgb_v4(float* %srgb, float* %linear) #0 !dbg !11162 {
entry:
  %srgb.addr = alloca float*, align 8
  %linear.addr = alloca float*, align 8
  store float* %srgb, float** %srgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %srgb.addr, metadata !11163, metadata !DIExpression()), !dbg !11164
  store float* %linear, float** %linear.addr, align 8
  call void @llvm.dbg.declare(metadata float** %linear.addr, metadata !11165, metadata !DIExpression()), !dbg !11166
  %0 = load float*, float** %srgb.addr, align 8, !dbg !11167
  %1 = load float*, float** %linear.addr, align 8, !dbg !11168
  call void @linearrgb_to_srgb_v3_v3(float* %0, float* %1), !dbg !11169
  %2 = load float*, float** %linear.addr, align 8, !dbg !11170
  %arrayidx = getelementptr inbounds float, float* %2, i64 3, !dbg !11170
  %3 = load float, float* %arrayidx, align 4, !dbg !11170
  %4 = load float*, float** %srgb.addr, align 8, !dbg !11171
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 3, !dbg !11171
  store float %3, float* %arrayidx1, align 4, !dbg !11172
  ret void, !dbg !11173
}

; Function Attrs: noinline nounwind uwtable
define internal void @linearrgb_to_srgb_v3_v3(float* %srgb, float* %linear) #0 !dbg !11174 {
entry:
  %srgb.addr = alloca float*, align 8
  %linear.addr = alloca float*, align 8
  store float* %srgb, float** %srgb.addr, align 8
  call void @llvm.dbg.declare(metadata float** %srgb.addr, metadata !11175, metadata !DIExpression()), !dbg !11176
  store float* %linear, float** %linear.addr, align 8
  call void @llvm.dbg.declare(metadata float** %linear.addr, metadata !11177, metadata !DIExpression()), !dbg !11178
  %0 = load float*, float** %linear.addr, align 8, !dbg !11179
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11179
  %1 = load float, float* %arrayidx, align 4, !dbg !11179
  %call = call float @linearrgb_to_srgb(float %1), !dbg !11180
  %2 = load float*, float** %srgb.addr, align 8, !dbg !11181
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11181
  store float %call, float* %arrayidx1, align 4, !dbg !11182
  %3 = load float*, float** %linear.addr, align 8, !dbg !11183
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !11183
  %4 = load float, float* %arrayidx2, align 4, !dbg !11183
  %call3 = call float @linearrgb_to_srgb(float %4), !dbg !11184
  %5 = load float*, float** %srgb.addr, align 8, !dbg !11185
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !11185
  store float %call3, float* %arrayidx4, align 4, !dbg !11186
  %6 = load float*, float** %linear.addr, align 8, !dbg !11187
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !11187
  %7 = load float, float* %arrayidx5, align 4, !dbg !11187
  %call6 = call float @linearrgb_to_srgb(float %7), !dbg !11188
  %8 = load float*, float** %srgb.addr, align 8, !dbg !11189
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !11189
  store float %call6, float* %arrayidx7, align 4, !dbg !11190
  ret void, !dbg !11191
}

declare dso_local float @linearrgb_to_srgb(float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @node_unlink_attached(%struct.bNodeTree* %ntree, %struct.bNode* %parent) #0 !dbg !11192 {
entry:
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %parent.addr = alloca %struct.bNode*, align 8
  %node = alloca %struct.bNode*, align 8
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !11193, metadata !DIExpression()), !dbg !11194
  store %struct.bNode* %parent, %struct.bNode** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNode** %parent.addr, metadata !11195, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !11197, metadata !DIExpression()), !dbg !11198
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !11199
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !11201
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !11202
  %1 = load i8*, i8** %first, align 8, !dbg !11202
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !11199
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !11203
  br label %for.cond, !dbg !11204

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !11205
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !11207
  br i1 %tobool, label %for.body, label %for.end, !dbg !11207

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !11208
  %parent1 = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 19, !dbg !11211
  %5 = load %struct.bNode*, %struct.bNode** %parent1, align 8, !dbg !11211
  %6 = load %struct.bNode*, %struct.bNode** %parent.addr, align 8, !dbg !11212
  %cmp = icmp eq %struct.bNode* %5, %6, !dbg !11213
  br i1 %cmp, label %if.then, label %if.end, !dbg !11214

if.then:                                          ; preds = %for.body
  %7 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !11215
  call void @nodeDetachNode(%struct.bNode* %7), !dbg !11216
  br label %if.end, !dbg !11216

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !11217

for.inc:                                          ; preds = %if.end
  %8 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !11218
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %8, i32 0, i32 0, !dbg !11219
  %9 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !11219
  store %struct.bNode* %9, %struct.bNode** %node, align 8, !dbg !11220
  br label %for.cond, !dbg !11221, !llvm.loop !11222

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11224
}

declare dso_local i64 @BLI_strescape(i8*, i8*, i64) #2

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

declare dso_local void @BKE_animdata_fix_paths_remove(%struct.ID*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #5

declare dso_local void @RNA_identifier_sanitize(i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ntree_interface_unique_identifier_check(i8* %UNUSED_data, i8* %identifier) #0 !dbg !11225 {
entry:
  %UNUSED_data.addr = alloca i8*, align 8
  %identifier.addr = alloca i8*, align 8
  store i8* %UNUSED_data, i8** %UNUSED_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_data.addr, metadata !11226, metadata !DIExpression()), !dbg !11227
  store i8* %identifier, i8** %identifier.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identifier.addr, metadata !11228, metadata !DIExpression()), !dbg !11229
  %0 = load i8*, i8** %identifier.addr, align 8, !dbg !11230
  %call = call %struct.StructRNA* @RNA_struct_find(i8* %0), !dbg !11231
  %cmp = icmp ne %struct.StructRNA* %call, null, !dbg !11232
  %conv = zext i1 %cmp to i32, !dbg !11232
  %conv1 = trunc i32 %conv to i8, !dbg !11233
  ret i8 %conv1, !dbg !11234
}

declare dso_local %struct.StructRNA* @RNA_def_struct_ptr(%struct.BlenderRNA*, i8*, %struct.StructRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @unique_socket_template_identifier_check(i8* %arg, i8* %name) #0 !dbg !11235 {
entry:
  %retval = alloca i8, align 1
  %arg.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %ntemp = alloca %struct.bNodeSocketTemplate*, align 8
  %data = alloca %struct.anon.1*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !11236, metadata !DIExpression()), !dbg !11237
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !11238, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.declare(metadata %struct.bNodeSocketTemplate** %ntemp, metadata !11240, metadata !DIExpression()), !dbg !11241
  call void @llvm.dbg.declare(metadata %struct.anon.1** %data, metadata !11242, metadata !DIExpression()), !dbg !11248
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !11249
  %1 = bitcast i8* %0 to %struct.anon.1*, !dbg !11249
  store %struct.anon.1* %1, %struct.anon.1** %data, align 8, !dbg !11248
  %2 = load %struct.anon.1*, %struct.anon.1** %data, align 8, !dbg !11250
  %list = getelementptr inbounds %struct.anon.1, %struct.anon.1* %2, i32 0, i32 0, !dbg !11252
  %3 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %list, align 8, !dbg !11252
  store %struct.bNodeSocketTemplate* %3, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !11253
  br label %for.cond, !dbg !11254

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !11255
  %type = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %4, i32 0, i32 0, !dbg !11257
  %5 = load i32, i32* %type, align 8, !dbg !11257
  %cmp = icmp sge i32 %5, 0, !dbg !11258
  br i1 %cmp, label %for.body, label %for.end, !dbg !11259

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !11260
  %7 = load %struct.anon.1*, %struct.anon.1** %data, align 8, !dbg !11263
  %ntemp1 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %7, i32 0, i32 1, !dbg !11264
  %8 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp1, align 8, !dbg !11264
  %cmp2 = icmp ne %struct.bNodeSocketTemplate* %6, %8, !dbg !11265
  br i1 %cmp2, label %if.then, label %if.end5, !dbg !11266

if.then:                                          ; preds = %for.body
  %9 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !11267
  %identifier = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %9, i32 0, i32 12, !dbg !11267
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %identifier, i64 0, i64 0, !dbg !11267
  %10 = load i8*, i8** %name.addr, align 8, !dbg !11267
  %call = call i32 @strcmp(i8* %arraydecay, i8* %10) #6, !dbg !11267
  %cmp3 = icmp eq i32 %call, 0, !dbg !11267
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11270

if.then4:                                         ; preds = %if.then
  store i8 1, i8* %retval, align 1, !dbg !11271
  br label %return, !dbg !11271

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !11273

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11274

for.inc:                                          ; preds = %if.end5
  %11 = load %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !11275
  %incdec.ptr = getelementptr inbounds %struct.bNodeSocketTemplate, %struct.bNodeSocketTemplate* %11, i32 1, !dbg !11275
  store %struct.bNodeSocketTemplate* %incdec.ptr, %struct.bNodeSocketTemplate** %ntemp, align 8, !dbg !11275
  br label %for.cond, !dbg !11276, !llvm.loop !11277

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !11279
  br label %return, !dbg !11279

return:                                           ; preds = %for.end, %if.then4
  %12 = load i8, i8* %retval, align 1, !dbg !11280
  ret i8 %12, !dbg !11280
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @node_undefined_poll(%struct.bNodeType* %UNUSED_ntype, %struct.bNodeTree* %UNUSED_nodetree) #0 !dbg !11281 {
entry:
  %UNUSED_ntype.addr = alloca %struct.bNodeType*, align 8
  %UNUSED_nodetree.addr = alloca %struct.bNodeTree*, align 8
  store %struct.bNodeType* %UNUSED_ntype, %struct.bNodeType** %UNUSED_ntype.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeType** %UNUSED_ntype.addr, metadata !11282, metadata !DIExpression()), !dbg !11283
  store %struct.bNodeTree* %UNUSED_nodetree, %struct.bNodeTree** %UNUSED_nodetree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %UNUSED_nodetree.addr, metadata !11284, metadata !DIExpression()), !dbg !11285
  ret i32 0, !dbg !11286
}

declare dso_local void @register_node_type_cmp_group() #2

declare dso_local void @register_node_type_cmp_rlayers() #2

declare dso_local void @register_node_type_cmp_image() #2

declare dso_local void @register_node_type_cmp_texture() #2

declare dso_local void @register_node_type_cmp_value() #2

declare dso_local void @register_node_type_cmp_rgb() #2

declare dso_local void @register_node_type_cmp_curve_time() #2

declare dso_local void @register_node_type_cmp_movieclip() #2

declare dso_local void @register_node_type_cmp_composite() #2

declare dso_local void @register_node_type_cmp_viewer() #2

declare dso_local void @register_node_type_cmp_splitviewer() #2

declare dso_local void @register_node_type_cmp_output_file() #2

declare dso_local void @register_node_type_cmp_view_levels() #2

declare dso_local void @register_node_type_cmp_curve_rgb() #2

declare dso_local void @register_node_type_cmp_mix_rgb() #2

declare dso_local void @register_node_type_cmp_hue_sat() #2

declare dso_local void @register_node_type_cmp_brightcontrast() #2

declare dso_local void @register_node_type_cmp_gamma() #2

declare dso_local void @register_node_type_cmp_invert() #2

declare dso_local void @register_node_type_cmp_alphaover() #2

declare dso_local void @register_node_type_cmp_zcombine() #2

declare dso_local void @register_node_type_cmp_colorbalance() #2

declare dso_local void @register_node_type_cmp_huecorrect() #2

declare dso_local void @register_node_type_cmp_normal() #2

declare dso_local void @register_node_type_cmp_curve_vec() #2

declare dso_local void @register_node_type_cmp_map_value() #2

declare dso_local void @register_node_type_cmp_map_range() #2

declare dso_local void @register_node_type_cmp_normalize() #2

declare dso_local void @register_node_type_cmp_filter() #2

declare dso_local void @register_node_type_cmp_blur() #2

declare dso_local void @register_node_type_cmp_dblur() #2

declare dso_local void @register_node_type_cmp_bilateralblur() #2

declare dso_local void @register_node_type_cmp_vecblur() #2

declare dso_local void @register_node_type_cmp_dilateerode() #2

declare dso_local void @register_node_type_cmp_inpaint() #2

declare dso_local void @register_node_type_cmp_despeckle() #2

declare dso_local void @register_node_type_cmp_defocus() #2

declare dso_local void @register_node_type_cmp_sunbeams() #2

declare dso_local void @register_node_type_cmp_valtorgb() #2

declare dso_local void @register_node_type_cmp_rgbtobw() #2

declare dso_local void @register_node_type_cmp_setalpha() #2

declare dso_local void @register_node_type_cmp_idmask() #2

declare dso_local void @register_node_type_cmp_math() #2

declare dso_local void @register_node_type_cmp_seprgba() #2

declare dso_local void @register_node_type_cmp_combrgba() #2

declare dso_local void @register_node_type_cmp_sephsva() #2

declare dso_local void @register_node_type_cmp_combhsva() #2

declare dso_local void @register_node_type_cmp_sepyuva() #2

declare dso_local void @register_node_type_cmp_combyuva() #2

declare dso_local void @register_node_type_cmp_sepycca() #2

declare dso_local void @register_node_type_cmp_combycca() #2

declare dso_local void @register_node_type_cmp_premulkey() #2

declare dso_local void @register_node_type_cmp_diff_matte() #2

declare dso_local void @register_node_type_cmp_distance_matte() #2

declare dso_local void @register_node_type_cmp_chroma_matte() #2

declare dso_local void @register_node_type_cmp_color_matte() #2

declare dso_local void @register_node_type_cmp_channel_matte() #2

declare dso_local void @register_node_type_cmp_color_spill() #2

declare dso_local void @register_node_type_cmp_luma_matte() #2

declare dso_local void @register_node_type_cmp_doubleedgemask() #2

declare dso_local void @register_node_type_cmp_keyingscreen() #2

declare dso_local void @register_node_type_cmp_keying() #2

declare dso_local void @register_node_type_cmp_translate() #2

declare dso_local void @register_node_type_cmp_rotate() #2

declare dso_local void @register_node_type_cmp_scale() #2

declare dso_local void @register_node_type_cmp_flip() #2

declare dso_local void @register_node_type_cmp_crop() #2

declare dso_local void @register_node_type_cmp_displace() #2

declare dso_local void @register_node_type_cmp_mapuv() #2

declare dso_local void @register_node_type_cmp_glare() #2

declare dso_local void @register_node_type_cmp_tonemap() #2

declare dso_local void @register_node_type_cmp_lensdist() #2

declare dso_local void @register_node_type_cmp_transform() #2

declare dso_local void @register_node_type_cmp_stabilize2d() #2

declare dso_local void @register_node_type_cmp_moviedistortion() #2

declare dso_local void @register_node_type_cmp_colorcorrection() #2

declare dso_local void @register_node_type_cmp_boxmask() #2

declare dso_local void @register_node_type_cmp_ellipsemask() #2

declare dso_local void @register_node_type_cmp_bokehimage() #2

declare dso_local void @register_node_type_cmp_bokehblur() #2

declare dso_local void @register_node_type_cmp_switch() #2

declare dso_local void @register_node_type_cmp_pixelate() #2

declare dso_local void @register_node_type_cmp_mask() #2

declare dso_local void @register_node_type_cmp_trackpos() #2

declare dso_local void @register_node_type_cmp_planetrackdeform() #2

declare dso_local void @register_node_type_cmp_cornerpin() #2

declare dso_local void @register_node_type_sh_group() #2

declare dso_local void @register_node_type_sh_output() #2

declare dso_local void @register_node_type_sh_material() #2

declare dso_local void @register_node_type_sh_camera() #2

declare dso_local void @register_node_type_sh_lamp() #2

declare dso_local void @register_node_type_sh_gamma() #2

declare dso_local void @register_node_type_sh_brightcontrast() #2

declare dso_local void @register_node_type_sh_value() #2

declare dso_local void @register_node_type_sh_rgb() #2

declare dso_local void @register_node_type_sh_wireframe() #2

declare dso_local void @register_node_type_sh_wavelength() #2

declare dso_local void @register_node_type_sh_blackbody() #2

declare dso_local void @register_node_type_sh_mix_rgb() #2

declare dso_local void @register_node_type_sh_valtorgb() #2

declare dso_local void @register_node_type_sh_rgbtobw() #2

declare dso_local void @register_node_type_sh_texture() #2

declare dso_local void @register_node_type_sh_normal() #2

declare dso_local void @register_node_type_sh_geom() #2

declare dso_local void @register_node_type_sh_mapping() #2

declare dso_local void @register_node_type_sh_curve_vec() #2

declare dso_local void @register_node_type_sh_curve_rgb() #2

declare dso_local void @register_node_type_sh_math() #2

declare dso_local void @register_node_type_sh_vect_math() #2

declare dso_local void @register_node_type_sh_vect_transform() #2

declare dso_local void @register_node_type_sh_squeeze() #2

declare dso_local void @register_node_type_sh_material_ext() #2

declare dso_local void @register_node_type_sh_invert() #2

declare dso_local void @register_node_type_sh_seprgb() #2

declare dso_local void @register_node_type_sh_combrgb() #2

declare dso_local void @register_node_type_sh_sephsv() #2

declare dso_local void @register_node_type_sh_combhsv() #2

declare dso_local void @register_node_type_sh_sepxyz() #2

declare dso_local void @register_node_type_sh_combxyz() #2

declare dso_local void @register_node_type_sh_hue_sat() #2

declare dso_local void @register_node_type_sh_attribute() #2

declare dso_local void @register_node_type_sh_geometry() #2

declare dso_local void @register_node_type_sh_light_path() #2

declare dso_local void @register_node_type_sh_light_falloff() #2

declare dso_local void @register_node_type_sh_object_info() #2

declare dso_local void @register_node_type_sh_fresnel() #2

declare dso_local void @register_node_type_sh_layer_weight() #2

declare dso_local void @register_node_type_sh_tex_coord() #2

declare dso_local void @register_node_type_sh_particle_info() #2

declare dso_local void @register_node_type_sh_bump() #2

declare dso_local void @register_node_type_sh_background() #2

declare dso_local void @register_node_type_sh_bsdf_anisotropic() #2

declare dso_local void @register_node_type_sh_bsdf_diffuse() #2

declare dso_local void @register_node_type_sh_bsdf_glossy() #2

declare dso_local void @register_node_type_sh_bsdf_glass() #2

declare dso_local void @register_node_type_sh_bsdf_translucent() #2

declare dso_local void @register_node_type_sh_bsdf_transparent() #2

declare dso_local void @register_node_type_sh_bsdf_velvet() #2

declare dso_local void @register_node_type_sh_bsdf_toon() #2

declare dso_local void @register_node_type_sh_bsdf_hair() #2

declare dso_local void @register_node_type_sh_emission() #2

declare dso_local void @register_node_type_sh_holdout() #2

declare dso_local void @register_node_type_sh_volume_absorption() #2

declare dso_local void @register_node_type_sh_volume_scatter() #2

declare dso_local void @register_node_type_sh_subsurface_scattering() #2

declare dso_local void @register_node_type_sh_mix_shader() #2

declare dso_local void @register_node_type_sh_add_shader() #2

declare dso_local void @register_node_type_sh_uvmap() #2

declare dso_local void @register_node_type_sh_uvalongstroke() #2

declare dso_local void @register_node_type_sh_output_lamp() #2

declare dso_local void @register_node_type_sh_output_material() #2

declare dso_local void @register_node_type_sh_output_world() #2

declare dso_local void @register_node_type_sh_output_linestyle() #2

declare dso_local void @register_node_type_sh_tex_image() #2

declare dso_local void @register_node_type_sh_tex_environment() #2

declare dso_local void @register_node_type_sh_tex_sky() #2

declare dso_local void @register_node_type_sh_tex_noise() #2

declare dso_local void @register_node_type_sh_tex_wave() #2

declare dso_local void @register_node_type_sh_tex_voronoi() #2

declare dso_local void @register_node_type_sh_tex_musgrave() #2

declare dso_local void @register_node_type_sh_tex_gradient() #2

declare dso_local void @register_node_type_sh_tex_magic() #2

declare dso_local void @register_node_type_sh_tex_checker() #2

declare dso_local void @register_node_type_sh_tex_brick() #2

declare dso_local void @register_node_type_tex_group() #2

declare dso_local void @register_node_type_tex_math() #2

declare dso_local void @register_node_type_tex_mix_rgb() #2

declare dso_local void @register_node_type_tex_valtorgb() #2

declare dso_local void @register_node_type_tex_rgbtobw() #2

declare dso_local void @register_node_type_tex_valtonor() #2

declare dso_local void @register_node_type_tex_curve_rgb() #2

declare dso_local void @register_node_type_tex_curve_time() #2

declare dso_local void @register_node_type_tex_invert() #2

declare dso_local void @register_node_type_tex_hue_sat() #2

declare dso_local void @register_node_type_tex_coord() #2

declare dso_local void @register_node_type_tex_distance() #2

declare dso_local void @register_node_type_tex_compose() #2

declare dso_local void @register_node_type_tex_decompose() #2

declare dso_local void @register_node_type_tex_output() #2

declare dso_local void @register_node_type_tex_viewer() #2

declare dso_local void @register_node_type_sh_script() #2

declare dso_local void @register_node_type_sh_tangent() #2

declare dso_local void @register_node_type_sh_normal_map() #2

declare dso_local void @register_node_type_sh_hair_info() #2

declare dso_local void @register_node_type_tex_checker() #2

declare dso_local void @register_node_type_tex_texture() #2

declare dso_local void @register_node_type_tex_bricks() #2

declare dso_local void @register_node_type_tex_image() #2

declare dso_local void @register_node_type_sh_bsdf_refraction() #2

declare dso_local void @register_node_type_sh_ambient_occlusion() #2

declare dso_local void @register_node_type_tex_rotate() #2

declare dso_local void @register_node_type_tex_translate() #2

declare dso_local void @register_node_type_tex_scale() #2

declare dso_local void @register_node_type_tex_at() #2

declare dso_local void @register_node_type_tex_proc_voronoi() #2

declare dso_local void @register_node_type_tex_proc_blend() #2

declare dso_local void @register_node_type_tex_proc_magic() #2

declare dso_local void @register_node_type_tex_proc_marble() #2

declare dso_local void @register_node_type_tex_proc_clouds() #2

declare dso_local void @register_node_type_tex_proc_wood() #2

declare dso_local void @register_node_type_tex_proc_musgrave() #2

declare dso_local void @register_node_type_tex_proc_noise() #2

declare dso_local void @register_node_type_tex_proc_stucci() #2

declare dso_local void @register_node_type_tex_proc_distnoise() #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2153, !2154, !2155}
!llvm.ident = !{!2156}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "nodetreetypes_hash", scope: !2, file: !3, line: 287, type: !997, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !79, globals: !2126, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/node.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !11, !19, !28, !35, !47}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNodeSocketInOut", file: !6, line: 148, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "SOCK_IN", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "SOCK_OUT", value: 2, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNodeTreeUpdate", file: !6, line: 418, baseType: !7, size: 32, elements: !12)
!12 = !{!13, !14, !15, !16, !17, !18}
!13 = !DIEnumerator(name: "NTREE_UPDATE", value: 65535, isUnsigned: true)
!14 = !DIEnumerator(name: "NTREE_UPDATE_LINKS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "NTREE_UPDATE_NODES", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "NTREE_UPDATE_GROUP_IN", value: 16, isUnsigned: true)
!17 = !DIEnumerator(name: "NTREE_UPDATE_GROUP_OUT", value: 32, isUnsigned: true)
!18 = !DIEnumerator(name: "NTREE_UPDATE_GROUP", value: 48, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNodeSocketFlag", file: !6, line: 154, baseType: !7, size: 32, elements: !20)
!20 = !{!21, !22, !23, !24, !25, !26, !27}
!21 = !DIEnumerator(name: "SOCK_HIDDEN", value: 2, isUnsigned: true)
!22 = !DIEnumerator(name: "SOCK_IN_USE", value: 4, isUnsigned: true)
!23 = !DIEnumerator(name: "SOCK_UNAVAIL", value: 8, isUnsigned: true)
!24 = !DIEnumerator(name: "SOCK_COLLAPSED", value: 64, isUnsigned: true)
!25 = !DIEnumerator(name: "SOCK_HIDE_VALUE", value: 128, isUnsigned: true)
!26 = !DIEnumerator(name: "SOCK_AUTO_HIDDEN__DEPRECATED", value: 256, isUnsigned: true)
!27 = !DIEnumerator(name: "SOCK_NO_INTERNAL_LINK", value: 512, isUnsigned: true)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNodeSizePreset", file: !29, line: 273, baseType: !7, size: 32, elements: !30)
!29 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!30 = !{!31, !32, !33, !34}
!31 = !DIEnumerator(name: "NODE_SIZE_DEFAULT", value: 0, isUnsigned: true)
!32 = !DIEnumerator(name: "NODE_SIZE_SMALL", value: 1, isUnsigned: true)
!33 = !DIEnumerator(name: "NODE_SIZE_MIDDLE", value: 2, isUnsigned: true)
!34 = !DIEnumerator(name: "NODE_SIZE_LARGE", value: 3, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNodeSocketDatatype", file: !6, line: 135, baseType: !36, size: 32, elements: !37)
!36 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!37 = !{!38, !39, !40, !41, !42, !43, !44, !45, !46}
!38 = !DIEnumerator(name: "SOCK_CUSTOM", value: -1)
!39 = !DIEnumerator(name: "SOCK_FLOAT", value: 0)
!40 = !DIEnumerator(name: "SOCK_VECTOR", value: 1)
!41 = !DIEnumerator(name: "SOCK_RGBA", value: 2)
!42 = !DIEnumerator(name: "SOCK_SHADER", value: 3)
!43 = !DIEnumerator(name: "SOCK_BOOLEAN", value: 4)
!44 = !DIEnumerator(name: "__SOCK_MESH", value: 5)
!45 = !DIEnumerator(name: "SOCK_INT", value: 6)
!46 = !DIEnumerator(name: "SOCK_STRING", value: 7)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertySubType", file: !48, line: 107, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!49 = !{!50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78}
!50 = !DIEnumerator(name: "PROP_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "PROP_FILEPATH", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "PROP_DIRPATH", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "PROP_FILENAME", value: 3, isUnsigned: true)
!54 = !DIEnumerator(name: "PROP_BYTESTRING", value: 4, isUnsigned: true)
!55 = !DIEnumerator(name: "PROP_PASSWORD", value: 6, isUnsigned: true)
!56 = !DIEnumerator(name: "PROP_PIXEL", value: 12, isUnsigned: true)
!57 = !DIEnumerator(name: "PROP_UNSIGNED", value: 13, isUnsigned: true)
!58 = !DIEnumerator(name: "PROP_PERCENTAGE", value: 14, isUnsigned: true)
!59 = !DIEnumerator(name: "PROP_FACTOR", value: 15, isUnsigned: true)
!60 = !DIEnumerator(name: "PROP_ANGLE", value: 327696, isUnsigned: true)
!61 = !DIEnumerator(name: "PROP_TIME", value: 393233, isUnsigned: true)
!62 = !DIEnumerator(name: "PROP_DISTANCE", value: 65554, isUnsigned: true)
!63 = !DIEnumerator(name: "PROP_DISTANCE_CAMERA", value: 589843, isUnsigned: true)
!64 = !DIEnumerator(name: "PROP_COLOR", value: 20, isUnsigned: true)
!65 = !DIEnumerator(name: "PROP_TRANSLATION", value: 65557, isUnsigned: true)
!66 = !DIEnumerator(name: "PROP_DIRECTION", value: 22, isUnsigned: true)
!67 = !DIEnumerator(name: "PROP_VELOCITY", value: 458775, isUnsigned: true)
!68 = !DIEnumerator(name: "PROP_ACCELERATION", value: 524312, isUnsigned: true)
!69 = !DIEnumerator(name: "PROP_MATRIX", value: 25, isUnsigned: true)
!70 = !DIEnumerator(name: "PROP_EULER", value: 327706, isUnsigned: true)
!71 = !DIEnumerator(name: "PROP_QUATERNION", value: 27, isUnsigned: true)
!72 = !DIEnumerator(name: "PROP_AXISANGLE", value: 28, isUnsigned: true)
!73 = !DIEnumerator(name: "PROP_XYZ", value: 29, isUnsigned: true)
!74 = !DIEnumerator(name: "PROP_XYZ_LENGTH", value: 65565, isUnsigned: true)
!75 = !DIEnumerator(name: "PROP_COLOR_GAMMA", value: 30, isUnsigned: true)
!76 = !DIEnumerator(name: "PROP_COORDS", value: 31, isUnsigned: true)
!77 = !DIEnumerator(name: "PROP_LAYER", value: 40, isUnsigned: true)
!78 = !DIEnumerator(name: "PROP_LAYER_MEMBER", value: 41, isUnsigned: true)
!79 = !{!80, !81, !150, !151, !155, !156, !1963, !2044, !2046, !2048, !2050, !2101, !2103, !2104, !2109, !2117, !2123, !209, !101, !2124}
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !83, line: 130, baseType: !84)
!83 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!84 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !83, line: 117, size: 960, elements: !85)
!85 = !{!86, !87, !88, !90, !109, !113, !115, !116, !117, !118}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !84, file: !83, line: 118, baseType: !80, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !84, file: !83, line: 118, baseType: !80, size: 64, offset: 64)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !84, file: !83, line: 119, baseType: !89, size: 64, offset: 128)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !84, file: !83, line: 120, baseType: !91, size: 64, offset: 192)
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!92 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !83, line: 136, size: 17600, elements: !93)
!93 = !{!94, !95, !96, !99, !104, !105, !106}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !92, file: !83, line: 137, baseType: !82, size: 960)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !92, file: !83, line: 138, baseType: !81, size: 64, offset: 960)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !92, file: !83, line: 139, baseType: !97, size: 64, offset: 1024)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!98 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !83, line: 43, flags: DIFlagFwdDecl)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !92, file: !83, line: 140, baseType: !100, size: 8192, offset: 1088)
!100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 8192, elements: !102)
!101 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!102 = !{!103}
!103 = !DISubrange(count: 1024)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !92, file: !83, line: 141, baseType: !100, size: 8192, offset: 9280)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !92, file: !83, line: 148, baseType: !91, size: 64, offset: 17472)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !92, file: !83, line: 150, baseType: !107, size: 64, offset: 17536)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !83, line: 45, flags: DIFlagFwdDecl)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !84, file: !83, line: 121, baseType: !110, size: 528, offset: 256)
!110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 528, elements: !111)
!111 = !{!112}
!112 = !DISubrange(count: 66)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !84, file: !83, line: 126, baseType: !114, size: 16, offset: 784)
!114 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !84, file: !83, line: 127, baseType: !36, size: 32, offset: 800)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !84, file: !83, line: 128, baseType: !36, size: 32, offset: 832)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !84, file: !83, line: 128, baseType: !36, size: 32, offset: 864)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !84, file: !83, line: 129, baseType: !119, size: 64, offset: 896)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !83, line: 75, baseType: !121)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !83, line: 62, size: 1024, elements: !122)
!122 = !{!123, !125, !126, !127, !128, !129, !133, !134, !148, !149}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !121, file: !83, line: 63, baseType: !124, size: 64)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !121, file: !83, line: 63, baseType: !124, size: 64, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !121, file: !83, line: 64, baseType: !101, size: 8, offset: 128)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !121, file: !83, line: 64, baseType: !101, size: 8, offset: 136)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !121, file: !83, line: 65, baseType: !114, size: 16, offset: 144)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !121, file: !83, line: 66, baseType: !130, size: 512, offset: 160)
!130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 512, elements: !131)
!131 = !{!132}
!132 = !DISubrange(count: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !121, file: !83, line: 67, baseType: !36, size: 32, offset: 672)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !121, file: !83, line: 69, baseType: !135, size: 256, offset: 704)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !83, line: 60, baseType: !136)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !83, line: 48, size: 256, elements: !137)
!137 = !{!138, !139, !146, !147}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !136, file: !83, line: 49, baseType: !80, size: 64)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !136, file: !83, line: 58, baseType: !140, size: 128, offset: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !141, line: 71, baseType: !142)
!141 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !141, line: 69, size: 128, elements: !143)
!143 = !{!144, !145}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !142, file: !141, line: 70, baseType: !80, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !142, file: !141, line: 70, baseType: !80, size: 64, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !136, file: !83, line: 59, baseType: !36, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !136, file: !83, line: 59, baseType: !36, size: 32, offset: 224)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !121, file: !83, line: 70, baseType: !36, size: 32, offset: 960)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !121, file: !83, line: 74, baseType: !36, size: 32, offset: 992)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceValueFP", file: !29, line: 505, baseType: !152)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!153 = !DISubroutineType(types: !154)
!154 = !{null, !80}
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !158, line: 203, baseType: !159)
!158 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !158, line: 93, size: 7552, elements: !160)
!160 = !{!161, !162, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !282, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !351, !352, !353, !354, !355, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !1920, !1921, !1922, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1962}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !159, file: !158, line: 94, baseType: !82, size: 960)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !159, file: !158, line: 95, baseType: !163, size: 64, offset: 960)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !165, line: 838, size: 768, elements: !166)
!165 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!166 = !{!167, !182, !183, !193, !194, !226, !227, !228, !229, !230, !231, !232}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !164, file: !165, line: 840, baseType: !168, size: 64)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !170, line: 499, baseType: !171)
!170 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !170, line: 486, size: 1600, elements: !172)
!172 = !{!173, !174, !175, !176, !177, !178, !179, !180, !181}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !171, file: !170, line: 487, baseType: !82, size: 960)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !171, file: !170, line: 489, baseType: !140, size: 128, offset: 960)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !171, file: !170, line: 490, baseType: !140, size: 128, offset: 1088)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !171, file: !170, line: 491, baseType: !140, size: 128, offset: 1216)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !171, file: !170, line: 492, baseType: !140, size: 128, offset: 1344)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !171, file: !170, line: 494, baseType: !36, size: 32, offset: 1472)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !171, file: !170, line: 495, baseType: !36, size: 32, offset: 1504)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !171, file: !170, line: 497, baseType: !36, size: 32, offset: 1536)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !171, file: !170, line: 498, baseType: !36, size: 32, offset: 1568)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !164, file: !165, line: 844, baseType: !168, size: 64, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !164, file: !165, line: 848, baseType: !184, size: 64, offset: 128)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !165, line: 549, baseType: !186)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !165, line: 544, size: 320, elements: !187)
!187 = !{!188, !190, !191, !192}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !186, file: !165, line: 545, baseType: !189, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !186, file: !165, line: 545, baseType: !189, size: 64, offset: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !186, file: !165, line: 547, baseType: !168, size: 64, offset: 128)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !186, file: !165, line: 548, baseType: !140, size: 128, offset: 192)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !164, file: !165, line: 851, baseType: !140, size: 128, offset: 192)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !164, file: !165, line: 853, baseType: !195, size: 64, offset: 320)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !165, line: 594, baseType: !197)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !165, line: 561, size: 1664, elements: !198)
!198 = !{!199, !201, !202, !203, !204, !205, !206, !207, !208, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !197, file: !165, line: 562, baseType: !200, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !197, file: !165, line: 562, baseType: !200, size: 64, offset: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !197, file: !165, line: 564, baseType: !140, size: 128, offset: 128)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !197, file: !165, line: 565, baseType: !168, size: 64, offset: 256)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !197, file: !165, line: 566, baseType: !184, size: 64, offset: 320)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !197, file: !165, line: 568, baseType: !140, size: 128, offset: 384)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !197, file: !165, line: 569, baseType: !140, size: 128, offset: 512)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !197, file: !165, line: 571, baseType: !130, size: 512, offset: 640)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !197, file: !165, line: 573, baseType: !209, size: 32, offset: 1152)
!209 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !197, file: !165, line: 574, baseType: !209, size: 32, offset: 1184)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !197, file: !165, line: 576, baseType: !209, size: 32, offset: 1216)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !197, file: !165, line: 576, baseType: !209, size: 32, offset: 1248)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !197, file: !165, line: 577, baseType: !209, size: 32, offset: 1280)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !197, file: !165, line: 577, baseType: !209, size: 32, offset: 1312)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !197, file: !165, line: 579, baseType: !209, size: 32, offset: 1344)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !197, file: !165, line: 580, baseType: !209, size: 32, offset: 1376)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !197, file: !165, line: 582, baseType: !209, size: 32, offset: 1408)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !197, file: !165, line: 582, baseType: !209, size: 32, offset: 1440)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !197, file: !165, line: 583, baseType: !114, size: 16, offset: 1472)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !197, file: !165, line: 585, baseType: !114, size: 16, offset: 1488)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !197, file: !165, line: 586, baseType: !114, size: 16, offset: 1504)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !197, file: !165, line: 588, baseType: !114, size: 16, offset: 1520)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !197, file: !165, line: 590, baseType: !80, size: 64, offset: 1536)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !197, file: !165, line: 592, baseType: !36, size: 32, offset: 1600)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !197, file: !165, line: 593, baseType: !36, size: 32, offset: 1632)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !164, file: !165, line: 858, baseType: !140, size: 128, offset: 384)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !164, file: !165, line: 859, baseType: !140, size: 128, offset: 512)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !164, file: !165, line: 862, baseType: !36, size: 32, offset: 640)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !164, file: !165, line: 863, baseType: !36, size: 32, offset: 672)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !164, file: !165, line: 866, baseType: !114, size: 16, offset: 704)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !164, file: !165, line: 867, baseType: !114, size: 16, offset: 720)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !164, file: !165, line: 868, baseType: !209, size: 32, offset: 736)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !159, file: !158, line: 97, baseType: !114, size: 16, offset: 1024)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !159, file: !158, line: 97, baseType: !114, size: 16, offset: 1040)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !159, file: !158, line: 99, baseType: !209, size: 32, offset: 1056)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !159, file: !158, line: 99, baseType: !209, size: 32, offset: 1088)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !159, file: !158, line: 99, baseType: !209, size: 32, offset: 1120)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !159, file: !158, line: 100, baseType: !209, size: 32, offset: 1152)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !159, file: !158, line: 100, baseType: !209, size: 32, offset: 1184)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !159, file: !158, line: 100, baseType: !209, size: 32, offset: 1216)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !159, file: !158, line: 101, baseType: !209, size: 32, offset: 1248)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !159, file: !158, line: 101, baseType: !209, size: 32, offset: 1280)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !159, file: !158, line: 101, baseType: !209, size: 32, offset: 1312)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !159, file: !158, line: 102, baseType: !209, size: 32, offset: 1344)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !159, file: !158, line: 102, baseType: !209, size: 32, offset: 1376)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !159, file: !158, line: 102, baseType: !209, size: 32, offset: 1408)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !159, file: !158, line: 103, baseType: !209, size: 32, offset: 1440)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !159, file: !158, line: 103, baseType: !209, size: 32, offset: 1472)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !159, file: !158, line: 103, baseType: !209, size: 32, offset: 1504)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !159, file: !158, line: 103, baseType: !209, size: 32, offset: 1536)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !159, file: !158, line: 103, baseType: !209, size: 32, offset: 1568)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !159, file: !158, line: 104, baseType: !209, size: 32, offset: 1600)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !159, file: !158, line: 104, baseType: !209, size: 32, offset: 1632)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !159, file: !158, line: 104, baseType: !209, size: 32, offset: 1664)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !159, file: !158, line: 104, baseType: !209, size: 32, offset: 1696)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !159, file: !158, line: 104, baseType: !209, size: 32, offset: 1728)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !159, file: !158, line: 105, baseType: !209, size: 32, offset: 1760)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !159, file: !158, line: 108, baseType: !259, size: 704, offset: 1792)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !158, line: 53, size: 704, elements: !260)
!260 = !{!261, !262, !263, !264, !265, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !259, file: !158, line: 54, baseType: !209, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !259, file: !158, line: 55, baseType: !209, size: 32, offset: 32)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !259, file: !158, line: 56, baseType: !209, size: 32, offset: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !259, file: !158, line: 57, baseType: !209, size: 32, offset: 96)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !259, file: !158, line: 59, baseType: !266, size: 96, offset: 128)
!266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 96, elements: !267)
!267 = !{!268}
!268 = !DISubrange(count: 3)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !259, file: !158, line: 60, baseType: !266, size: 96, offset: 224)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !259, file: !158, line: 61, baseType: !266, size: 96, offset: 320)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !259, file: !158, line: 63, baseType: !209, size: 32, offset: 416)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !259, file: !158, line: 64, baseType: !209, size: 32, offset: 448)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !259, file: !158, line: 65, baseType: !209, size: 32, offset: 480)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !259, file: !158, line: 67, baseType: !114, size: 16, offset: 512)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !259, file: !158, line: 68, baseType: !114, size: 16, offset: 528)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !259, file: !158, line: 69, baseType: !114, size: 16, offset: 544)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !259, file: !158, line: 70, baseType: !114, size: 16, offset: 560)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !259, file: !158, line: 72, baseType: !209, size: 32, offset: 576)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !259, file: !158, line: 73, baseType: !209, size: 32, offset: 608)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !259, file: !158, line: 74, baseType: !209, size: 32, offset: 640)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !259, file: !158, line: 75, baseType: !209, size: 32, offset: 672)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !159, file: !158, line: 109, baseType: !283, size: 128, offset: 2496)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !158, line: 79, size: 128, elements: !284)
!284 = !{!285, !286, !287, !288}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !283, file: !158, line: 80, baseType: !36, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !283, file: !158, line: 81, baseType: !36, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !283, file: !158, line: 82, baseType: !36, size: 32, offset: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !283, file: !158, line: 83, baseType: !36, size: 32, offset: 96)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !159, file: !158, line: 111, baseType: !209, size: 32, offset: 2624)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !159, file: !158, line: 111, baseType: !209, size: 32, offset: 2656)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !159, file: !158, line: 112, baseType: !209, size: 32, offset: 2688)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !159, file: !158, line: 112, baseType: !209, size: 32, offset: 2720)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !159, file: !158, line: 113, baseType: !209, size: 32, offset: 2752)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !159, file: !158, line: 114, baseType: !209, size: 32, offset: 2784)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !159, file: !158, line: 114, baseType: !209, size: 32, offset: 2816)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !159, file: !158, line: 115, baseType: !114, size: 16, offset: 2848)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !159, file: !158, line: 115, baseType: !114, size: 16, offset: 2864)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !159, file: !158, line: 116, baseType: !114, size: 16, offset: 2880)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !159, file: !158, line: 117, baseType: !101, size: 8, offset: 2896)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !159, file: !158, line: 117, baseType: !101, size: 8, offset: 2904)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !159, file: !158, line: 119, baseType: !209, size: 32, offset: 2912)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !159, file: !158, line: 119, baseType: !209, size: 32, offset: 2944)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !159, file: !158, line: 120, baseType: !114, size: 16, offset: 2976)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !159, file: !158, line: 120, baseType: !114, size: 16, offset: 2992)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !159, file: !158, line: 121, baseType: !209, size: 32, offset: 3008)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !159, file: !158, line: 121, baseType: !209, size: 32, offset: 3040)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !159, file: !158, line: 122, baseType: !209, size: 32, offset: 3072)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !159, file: !158, line: 123, baseType: !209, size: 32, offset: 3104)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !159, file: !158, line: 124, baseType: !114, size: 16, offset: 3136)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !159, file: !158, line: 125, baseType: !114, size: 16, offset: 3152)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !159, file: !158, line: 127, baseType: !36, size: 32, offset: 3168)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !159, file: !158, line: 127, baseType: !36, size: 32, offset: 3200)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !159, file: !158, line: 128, baseType: !36, size: 32, offset: 3232)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !159, file: !158, line: 128, baseType: !36, size: 32, offset: 3264)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !159, file: !158, line: 129, baseType: !114, size: 16, offset: 3296)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !159, file: !158, line: 129, baseType: !114, size: 16, offset: 3312)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !159, file: !158, line: 129, baseType: !114, size: 16, offset: 3328)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !159, file: !158, line: 129, baseType: !114, size: 16, offset: 3344)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !159, file: !158, line: 130, baseType: !209, size: 32, offset: 3360)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !159, file: !158, line: 130, baseType: !209, size: 32, offset: 3392)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !159, file: !158, line: 130, baseType: !209, size: 32, offset: 3424)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !159, file: !158, line: 130, baseType: !209, size: 32, offset: 3456)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !159, file: !158, line: 131, baseType: !209, size: 32, offset: 3488)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !159, file: !158, line: 131, baseType: !209, size: 32, offset: 3520)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !159, file: !158, line: 131, baseType: !209, size: 32, offset: 3552)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !159, file: !158, line: 131, baseType: !209, size: 32, offset: 3584)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !159, file: !158, line: 132, baseType: !209, size: 32, offset: 3616)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !159, file: !158, line: 132, baseType: !209, size: 32, offset: 3648)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !159, file: !158, line: 133, baseType: !130, size: 512, offset: 3680)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !159, file: !158, line: 135, baseType: !209, size: 32, offset: 4192)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !159, file: !158, line: 136, baseType: !209, size: 32, offset: 4224)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !159, file: !158, line: 137, baseType: !209, size: 32, offset: 4256)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !159, file: !158, line: 138, baseType: !36, size: 32, offset: 4288)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !159, file: !158, line: 141, baseType: !101, size: 8, offset: 4320)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !159, file: !158, line: 141, baseType: !101, size: 8, offset: 4328)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !159, file: !158, line: 141, baseType: !101, size: 8, offset: 4336)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !159, file: !158, line: 141, baseType: !101, size: 8, offset: 4344)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !159, file: !158, line: 142, baseType: !114, size: 16, offset: 4352)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !159, file: !158, line: 142, baseType: !114, size: 16, offset: 4368)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !159, file: !158, line: 142, baseType: !114, size: 16, offset: 4384)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !159, file: !158, line: 145, baseType: !101, size: 8, offset: 4400)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !159, file: !158, line: 145, baseType: !101, size: 8, offset: 4408)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !159, file: !158, line: 148, baseType: !114, size: 16, offset: 4416)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !159, file: !158, line: 148, baseType: !114, size: 16, offset: 4432)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !159, file: !158, line: 149, baseType: !209, size: 32, offset: 4448)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !159, file: !158, line: 149, baseType: !209, size: 32, offset: 4480)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !159, file: !158, line: 152, baseType: !348, size: 128, offset: 4512)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 128, elements: !349)
!349 = !{!350}
!350 = !DISubrange(count: 4)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !159, file: !158, line: 153, baseType: !209, size: 32, offset: 4640)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !159, file: !158, line: 154, baseType: !209, size: 32, offset: 4672)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !159, file: !158, line: 157, baseType: !114, size: 16, offset: 4704)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !159, file: !158, line: 157, baseType: !114, size: 16, offset: 4720)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !159, file: !158, line: 160, baseType: !356, size: 64, offset: 4736)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !358, line: 113, size: 6208, elements: !359)
!358 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!359 = !{!360, !361, !362, !363, !364, !365, !369}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !357, file: !358, line: 114, baseType: !114, size: 16)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !357, file: !358, line: 114, baseType: !114, size: 16, offset: 16)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !357, file: !358, line: 115, baseType: !101, size: 8, offset: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !357, file: !358, line: 115, baseType: !101, size: 8, offset: 40)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !357, file: !358, line: 116, baseType: !101, size: 8, offset: 48)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !357, file: !358, line: 117, baseType: !366, size: 8, offset: 56)
!366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 8, elements: !367)
!367 = !{!368}
!368 = !DISubrange(count: 1)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !357, file: !358, line: 119, baseType: !370, size: 6144, offset: 64)
!370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 6144, elements: !380)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !358, line: 109, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !358, line: 106, size: 192, elements: !373)
!373 = !{!374, !375, !376, !377, !378, !379}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !372, file: !358, line: 107, baseType: !209, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !372, file: !358, line: 107, baseType: !209, size: 32, offset: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !372, file: !358, line: 107, baseType: !209, size: 32, offset: 64)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !372, file: !358, line: 107, baseType: !209, size: 32, offset: 96)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !372, file: !358, line: 107, baseType: !209, size: 32, offset: 128)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !372, file: !358, line: 108, baseType: !36, size: 32, offset: 160)
!380 = !{!381}
!381 = !DISubrange(count: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !159, file: !158, line: 161, baseType: !356, size: 64, offset: 4800)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !159, file: !158, line: 162, baseType: !101, size: 8, offset: 4864)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !159, file: !158, line: 162, baseType: !101, size: 8, offset: 4872)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !159, file: !158, line: 163, baseType: !101, size: 8, offset: 4880)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !159, file: !158, line: 163, baseType: !101, size: 8, offset: 4888)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !159, file: !158, line: 164, baseType: !114, size: 16, offset: 4896)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !159, file: !158, line: 164, baseType: !114, size: 16, offset: 4912)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !159, file: !158, line: 165, baseType: !209, size: 32, offset: 4928)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !159, file: !158, line: 165, baseType: !209, size: 32, offset: 4960)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !159, file: !158, line: 167, baseType: !392, size: 1152, offset: 4992)
!392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !393, size: 1152, elements: !1918)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !358, line: 57, size: 2496, elements: !395)
!395 = !{!396, !397, !398, !399, !400, !403, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !394, file: !358, line: 59, baseType: !114, size: 16)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !394, file: !358, line: 59, baseType: !114, size: 16, offset: 16)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !394, file: !358, line: 59, baseType: !114, size: 16, offset: 32)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !394, file: !358, line: 59, baseType: !114, size: 16, offset: 48)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !394, file: !358, line: 60, baseType: !401, size: 64, offset: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !358, line: 49, flags: DIFlagFwdDecl)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !394, file: !358, line: 61, baseType: !404, size: 64, offset: 128)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !358, line: 202, size: 3328, elements: !406)
!406 = !{!407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !1769, !1770, !1771, !1772, !1773, !1799, !1800, !1829, !1849, !1857, !1858}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !405, file: !358, line: 203, baseType: !82, size: 960)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !405, file: !358, line: 204, baseType: !163, size: 64, offset: 960)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !405, file: !358, line: 206, baseType: !209, size: 32, offset: 1024)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !405, file: !358, line: 206, baseType: !209, size: 32, offset: 1056)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !405, file: !358, line: 207, baseType: !209, size: 32, offset: 1088)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !405, file: !358, line: 207, baseType: !209, size: 32, offset: 1120)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !405, file: !358, line: 207, baseType: !209, size: 32, offset: 1152)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !405, file: !358, line: 207, baseType: !209, size: 32, offset: 1184)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !405, file: !358, line: 207, baseType: !209, size: 32, offset: 1216)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !405, file: !358, line: 207, baseType: !209, size: 32, offset: 1248)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !405, file: !358, line: 208, baseType: !209, size: 32, offset: 1280)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !405, file: !358, line: 208, baseType: !209, size: 32, offset: 1312)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !405, file: !358, line: 211, baseType: !209, size: 32, offset: 1344)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !405, file: !358, line: 211, baseType: !209, size: 32, offset: 1376)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !405, file: !358, line: 211, baseType: !209, size: 32, offset: 1408)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !405, file: !358, line: 211, baseType: !209, size: 32, offset: 1440)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !405, file: !358, line: 211, baseType: !209, size: 32, offset: 1472)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !405, file: !358, line: 214, baseType: !209, size: 32, offset: 1504)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !405, file: !358, line: 214, baseType: !209, size: 32, offset: 1536)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !405, file: !358, line: 217, baseType: !209, size: 32, offset: 1568)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !405, file: !358, line: 218, baseType: !209, size: 32, offset: 1600)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !405, file: !358, line: 219, baseType: !209, size: 32, offset: 1632)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !405, file: !358, line: 220, baseType: !209, size: 32, offset: 1664)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !405, file: !358, line: 221, baseType: !209, size: 32, offset: 1696)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !405, file: !358, line: 222, baseType: !114, size: 16, offset: 1728)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !405, file: !358, line: 222, baseType: !114, size: 16, offset: 1744)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !405, file: !358, line: 224, baseType: !114, size: 16, offset: 1760)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !405, file: !358, line: 224, baseType: !114, size: 16, offset: 1776)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !405, file: !358, line: 227, baseType: !114, size: 16, offset: 1792)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !405, file: !358, line: 227, baseType: !114, size: 16, offset: 1808)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !405, file: !358, line: 229, baseType: !114, size: 16, offset: 1824)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !405, file: !358, line: 229, baseType: !114, size: 16, offset: 1840)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !405, file: !358, line: 230, baseType: !114, size: 16, offset: 1856)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !405, file: !358, line: 230, baseType: !114, size: 16, offset: 1872)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !405, file: !358, line: 232, baseType: !209, size: 32, offset: 1888)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !405, file: !358, line: 232, baseType: !209, size: 32, offset: 1920)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !405, file: !358, line: 232, baseType: !209, size: 32, offset: 1952)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !405, file: !358, line: 232, baseType: !209, size: 32, offset: 1984)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !405, file: !358, line: 233, baseType: !36, size: 32, offset: 2016)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !405, file: !358, line: 234, baseType: !36, size: 32, offset: 2048)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !405, file: !358, line: 235, baseType: !114, size: 16, offset: 2080)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !405, file: !358, line: 235, baseType: !114, size: 16, offset: 2096)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !405, file: !358, line: 236, baseType: !114, size: 16, offset: 2112)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !405, file: !358, line: 239, baseType: !114, size: 16, offset: 2128)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !405, file: !358, line: 240, baseType: !36, size: 32, offset: 2144)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !405, file: !358, line: 241, baseType: !36, size: 32, offset: 2176)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !405, file: !358, line: 241, baseType: !36, size: 32, offset: 2208)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !405, file: !358, line: 241, baseType: !36, size: 32, offset: 2240)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !405, file: !358, line: 243, baseType: !209, size: 32, offset: 2272)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !405, file: !358, line: 243, baseType: !209, size: 32, offset: 2304)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !405, file: !358, line: 244, baseType: !209, size: 32, offset: 2336)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !405, file: !358, line: 246, baseType: !459, size: 320, offset: 2368)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !460, line: 50, size: 320, elements: !461)
!460 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!461 = !{!462, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !459, file: !460, line: 51, baseType: !463, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !465, line: 1216, size: 39680, elements: !466)
!465 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!466 = !{!467, !468, !469, !470, !1023, !1024, !1025, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1052, !1332, !1335, !1624, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1646, !1647, !1648, !1649, !1650, !1658, !1725, !1732, !1733, !1740, !1743, !1749, !1750, !1751, !1752, !1753}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !464, file: !465, line: 1217, baseType: !82, size: 960)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !464, file: !465, line: 1218, baseType: !163, size: 64, offset: 960)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !464, file: !465, line: 1220, baseType: !401, size: 64, offset: 1024)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !464, file: !465, line: 1221, baseType: !471, size: 64, offset: 1088)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !473, line: 52, size: 4224, elements: !474)
!473 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!474 = !{!475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !544, !545, !548, !549, !550, !551, !555, !571}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !472, file: !473, line: 53, baseType: !82, size: 960)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !472, file: !473, line: 54, baseType: !163, size: 64, offset: 960)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !472, file: !473, line: 56, baseType: !114, size: 16, offset: 1024)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !472, file: !473, line: 56, baseType: !114, size: 16, offset: 1040)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !472, file: !473, line: 57, baseType: !114, size: 16, offset: 1056)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !472, file: !473, line: 57, baseType: !114, size: 16, offset: 1072)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !472, file: !473, line: 59, baseType: !209, size: 32, offset: 1088)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !472, file: !473, line: 59, baseType: !209, size: 32, offset: 1120)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !472, file: !473, line: 59, baseType: !209, size: 32, offset: 1152)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !472, file: !473, line: 60, baseType: !209, size: 32, offset: 1184)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !472, file: !473, line: 60, baseType: !209, size: 32, offset: 1216)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !472, file: !473, line: 60, baseType: !209, size: 32, offset: 1248)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !472, file: !473, line: 61, baseType: !209, size: 32, offset: 1280)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !472, file: !473, line: 61, baseType: !209, size: 32, offset: 1312)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !472, file: !473, line: 61, baseType: !209, size: 32, offset: 1344)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !472, file: !473, line: 68, baseType: !209, size: 32, offset: 1376)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !472, file: !473, line: 68, baseType: !209, size: 32, offset: 1408)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !472, file: !473, line: 68, baseType: !209, size: 32, offset: 1440)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !472, file: !473, line: 69, baseType: !209, size: 32, offset: 1472)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !472, file: !473, line: 69, baseType: !209, size: 32, offset: 1504)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !472, file: !473, line: 74, baseType: !209, size: 32, offset: 1536)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !472, file: !473, line: 79, baseType: !209, size: 32, offset: 1568)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !472, file: !473, line: 81, baseType: !114, size: 16, offset: 1600)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !472, file: !473, line: 91, baseType: !114, size: 16, offset: 1616)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !472, file: !473, line: 92, baseType: !114, size: 16, offset: 1632)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !472, file: !473, line: 93, baseType: !114, size: 16, offset: 1648)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !472, file: !473, line: 94, baseType: !114, size: 16, offset: 1664)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !472, file: !473, line: 94, baseType: !114, size: 16, offset: 1680)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !472, file: !473, line: 94, baseType: !114, size: 16, offset: 1696)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !472, file: !473, line: 94, baseType: !114, size: 16, offset: 1712)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !472, file: !473, line: 96, baseType: !209, size: 32, offset: 1728)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !472, file: !473, line: 96, baseType: !209, size: 32, offset: 1760)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !472, file: !473, line: 96, baseType: !209, size: 32, offset: 1792)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !472, file: !473, line: 96, baseType: !209, size: 32, offset: 1824)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !472, file: !473, line: 98, baseType: !209, size: 32, offset: 1856)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !472, file: !473, line: 98, baseType: !209, size: 32, offset: 1888)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !472, file: !473, line: 98, baseType: !209, size: 32, offset: 1920)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !472, file: !473, line: 98, baseType: !209, size: 32, offset: 1952)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !472, file: !473, line: 99, baseType: !209, size: 32, offset: 1984)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !472, file: !473, line: 99, baseType: !209, size: 32, offset: 2016)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !472, file: !473, line: 100, baseType: !209, size: 32, offset: 2048)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !472, file: !473, line: 100, baseType: !209, size: 32, offset: 2080)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !472, file: !473, line: 103, baseType: !114, size: 16, offset: 2112)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !472, file: !473, line: 103, baseType: !114, size: 16, offset: 2128)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !472, file: !473, line: 103, baseType: !114, size: 16, offset: 2144)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !472, file: !473, line: 103, baseType: !114, size: 16, offset: 2160)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !472, file: !473, line: 106, baseType: !209, size: 32, offset: 2176)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !472, file: !473, line: 106, baseType: !209, size: 32, offset: 2208)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !472, file: !473, line: 106, baseType: !209, size: 32, offset: 2240)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !472, file: !473, line: 106, baseType: !209, size: 32, offset: 2272)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !472, file: !473, line: 107, baseType: !114, size: 16, offset: 2304)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !472, file: !473, line: 107, baseType: !114, size: 16, offset: 2320)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !472, file: !473, line: 107, baseType: !114, size: 16, offset: 2336)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !472, file: !473, line: 107, baseType: !114, size: 16, offset: 2352)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !472, file: !473, line: 108, baseType: !209, size: 32, offset: 2368)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !472, file: !473, line: 108, baseType: !209, size: 32, offset: 2400)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !472, file: !473, line: 109, baseType: !209, size: 32, offset: 2432)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !472, file: !473, line: 109, baseType: !209, size: 32, offset: 2464)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !472, file: !473, line: 110, baseType: !209, size: 32, offset: 2496)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !472, file: !473, line: 110, baseType: !209, size: 32, offset: 2528)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !472, file: !473, line: 110, baseType: !209, size: 32, offset: 2560)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !472, file: !473, line: 111, baseType: !114, size: 16, offset: 2592)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !472, file: !473, line: 111, baseType: !114, size: 16, offset: 2608)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !472, file: !473, line: 112, baseType: !114, size: 16, offset: 2624)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !472, file: !473, line: 112, baseType: !114, size: 16, offset: 2640)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !472, file: !473, line: 112, baseType: !114, size: 16, offset: 2656)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !472, file: !473, line: 115, baseType: !114, size: 16, offset: 2672)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !472, file: !473, line: 118, baseType: !543, size: 64, offset: 2688)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !472, file: !473, line: 118, baseType: !543, size: 64, offset: 2752)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !472, file: !473, line: 121, baseType: !546, size: 64, offset: 2816)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !358, line: 46, flags: DIFlagFwdDecl)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !472, file: !473, line: 122, baseType: !392, size: 1152, offset: 2880)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !472, file: !473, line: 123, baseType: !114, size: 16, offset: 4032)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !472, file: !473, line: 123, baseType: !114, size: 16, offset: 4048)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !472, file: !473, line: 123, baseType: !552, size: 32, offset: 4064)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 32, elements: !553)
!553 = !{!554}
!554 = !DISubrange(count: 2)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !472, file: !473, line: 126, baseType: !556, size: 64, offset: 4096)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !83, line: 159, size: 448, elements: !558)
!558 = !{!559, !561, !562, !563, !564, !567}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !557, file: !83, line: 161, baseType: !560, size: 64)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !553)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !557, file: !83, line: 162, baseType: !560, size: 64, offset: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !557, file: !83, line: 163, baseType: !552, size: 32, offset: 128)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !557, file: !83, line: 164, baseType: !552, size: 32, offset: 160)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !557, file: !83, line: 165, baseType: !565, size: 128, offset: 192)
!565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 128, elements: !553)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !557, file: !83, line: 166, baseType: !568, size: 128, offset: 320)
!568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 128, elements: !553)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !83, line: 46, flags: DIFlagFwdDecl)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !472, file: !473, line: 129, baseType: !572, size: 64, offset: 4160)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !6, line: 328, size: 3456, elements: !574)
!574 = !{!575, !576, !577, !968, !969, !970, !973, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !1001, !1002, !1003, !1006, !1010, !1014, !1018, !1019, !1020, !1021, !1022}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !573, file: !6, line: 329, baseType: !82, size: 960)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !573, file: !6, line: 330, baseType: !163, size: 64, offset: 960)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !573, file: !6, line: 332, baseType: !578, size: 64, offset: 1024)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !29, line: 283, size: 4096, elements: !580)
!580 = !{!581, !582, !583, !584, !588, !589, !593, !937, !945, !949, !955, !959, !960, !961, !962, !966, !967}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !579, file: !29, line: 284, baseType: !36, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !579, file: !29, line: 285, baseType: !130, size: 512, offset: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !579, file: !29, line: 287, baseType: !130, size: 512, offset: 544)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !579, file: !29, line: 288, baseType: !585, size: 2048, offset: 1056)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 2048, elements: !586)
!586 = !{!587}
!587 = !DISubrange(count: 256)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !579, file: !29, line: 289, baseType: !36, size: 32, offset: 3104)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !579, file: !29, line: 292, baseType: !590, size: 64, offset: 3136)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{null, !572}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !579, file: !29, line: 293, baseType: !594, size: 64, offset: 3200)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{null, !572, !597}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !6, line: 167, size: 3712, elements: !599)
!599 = !{!600, !601, !602, !603, !604, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !929, !930, !931, !932, !933, !934}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !598, file: !6, line: 168, baseType: !597, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !598, file: !6, line: 168, baseType: !597, size: 64, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !598, file: !6, line: 168, baseType: !597, size: 64, offset: 128)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !598, file: !6, line: 170, baseType: !119, size: 64, offset: 192)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !598, file: !6, line: 172, baseType: !605, size: 64, offset: 256)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !29, line: 144, size: 6016, elements: !607)
!607 = !{!608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !780, !781, !782, !796, !800, !804, !805, !812, !816, !820, !821, !822, !823, !827, !828, !832, !836, !840, !844, !848, !852, !856, !857, !864, !866, !875, !884}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !606, file: !29, line: 145, baseType: !80, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !606, file: !29, line: 145, baseType: !80, size: 64, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !606, file: !29, line: 146, baseType: !114, size: 16, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !606, file: !29, line: 148, baseType: !130, size: 512, offset: 144)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !606, file: !29, line: 149, baseType: !36, size: 32, offset: 672)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !606, file: !29, line: 151, baseType: !130, size: 512, offset: 704)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !606, file: !29, line: 152, baseType: !585, size: 2048, offset: 1216)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !606, file: !29, line: 153, baseType: !36, size: 32, offset: 3264)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !606, file: !29, line: 155, baseType: !209, size: 32, offset: 3296)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !606, file: !29, line: 155, baseType: !209, size: 32, offset: 3328)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !606, file: !29, line: 155, baseType: !209, size: 32, offset: 3360)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !606, file: !29, line: 156, baseType: !209, size: 32, offset: 3392)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !606, file: !29, line: 156, baseType: !209, size: 32, offset: 3424)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !606, file: !29, line: 156, baseType: !209, size: 32, offset: 3456)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !606, file: !29, line: 157, baseType: !114, size: 16, offset: 3488)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !606, file: !29, line: 157, baseType: !114, size: 16, offset: 3504)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !606, file: !29, line: 157, baseType: !114, size: 16, offset: 3520)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !606, file: !29, line: 160, baseType: !626, size: 64, offset: 3584)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !29, line: 109, baseType: !628)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !29, line: 98, size: 1408, elements: !629)
!629 = !{!630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !779}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !628, file: !29, line: 99, baseType: !36, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !628, file: !29, line: 99, baseType: !36, size: 32, offset: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !628, file: !29, line: 100, baseType: !130, size: 512, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !628, file: !29, line: 101, baseType: !209, size: 32, offset: 576)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !628, file: !29, line: 101, baseType: !209, size: 32, offset: 608)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !628, file: !29, line: 101, baseType: !209, size: 32, offset: 640)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !628, file: !29, line: 101, baseType: !209, size: 32, offset: 672)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !628, file: !29, line: 102, baseType: !209, size: 32, offset: 704)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !628, file: !29, line: 102, baseType: !209, size: 32, offset: 736)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !628, file: !29, line: 103, baseType: !36, size: 32, offset: 768)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !628, file: !29, line: 104, baseType: !36, size: 32, offset: 800)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !628, file: !29, line: 107, baseType: !642, size: 64, offset: 832)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !6, line: 87, size: 2816, elements: !644)
!644 = !{!645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !764}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !643, file: !6, line: 88, baseType: !642, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !643, file: !6, line: 88, baseType: !642, size: 64, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !643, file: !6, line: 88, baseType: !642, size: 64, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !643, file: !6, line: 90, baseType: !119, size: 64, offset: 192)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !643, file: !6, line: 92, baseType: !130, size: 512, offset: 256)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !643, file: !6, line: 94, baseType: !130, size: 512, offset: 768)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !643, file: !6, line: 99, baseType: !80, size: 64, offset: 1280)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !643, file: !6, line: 101, baseType: !114, size: 16, offset: 1344)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !643, file: !6, line: 101, baseType: !114, size: 16, offset: 1360)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !643, file: !6, line: 102, baseType: !114, size: 16, offset: 1376)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !643, file: !6, line: 103, baseType: !114, size: 16, offset: 1392)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !643, file: !6, line: 104, baseType: !657, size: 64, offset: 1408)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !29, line: 114, size: 1600, elements: !659)
!659 = !{!660, !661, !683, !687, !691, !695, !699, !703, !704, !708, !734, !735, !736}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !658, file: !29, line: 115, baseType: !130, size: 512)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !658, file: !29, line: 117, baseType: !662, size: 64, offset: 512)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DISubroutineType(types: !664)
!664 = !{null, !665, !668, !670, !670, !681}
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !667, line: 40, flags: DIFlagFwdDecl)
!667 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_animsys.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !29, line: 73, flags: DIFlagFwdDecl)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !48, line: 55, size: 192, elements: !672)
!672 = !{!673, !677, !680}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !671, file: !48, line: 58, baseType: !674, size: 64)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !671, file: !48, line: 56, size: 64, elements: !675)
!675 = !{!676}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !674, file: !48, line: 57, baseType: !80, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !671, file: !48, line: 60, baseType: !678, size: 64, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !6, line: 335, flags: DIFlagFwdDecl)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !671, file: !48, line: 61, baseType: !80, size: 64, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !101)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !658, file: !29, line: 118, baseType: !684, size: 64, offset: 576)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DISubroutineType(types: !686)
!686 = !{null, !665, !670, !670, !543}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !658, file: !29, line: 120, baseType: !688, size: 64, offset: 640)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DISubroutineType(types: !690)
!690 = !{null, !665, !668, !670}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !658, file: !29, line: 121, baseType: !692, size: 64, offset: 704)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DISubroutineType(types: !694)
!694 = !{null, !665, !670, !543}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !658, file: !29, line: 122, baseType: !696, size: 64, offset: 768)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DISubroutineType(types: !698)
!698 = !{null, !572, !642, !678}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !658, file: !29, line: 123, baseType: !700, size: 64, offset: 832)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{null, !572, !642, !597, !642, !681}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !658, file: !29, line: 124, baseType: !700, size: 64, offset: 896)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !658, file: !29, line: 125, baseType: !705, size: 64, offset: 960)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DISubroutineType(types: !707)
!707 = !{null, !572, !642, !597, !642}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !658, file: !29, line: 128, baseType: !709, size: 256, offset: 1024)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !48, line: 436, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !48, line: 430, size: 256, elements: !711)
!711 = !{!712, !713, !716, !732}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !710, file: !48, line: 431, baseType: !80, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !710, file: !48, line: 432, baseType: !714, size: 64, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !48, line: 417, baseType: !679)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !710, file: !48, line: 433, baseType: !717, size: 64, offset: 128)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !48, line: 408, baseType: !718)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DISubroutineType(types: !720)
!720 = !{!36, !665, !670, !721, !723}
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !48, line: 38, flags: DIFlagFwdDecl)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !48, line: 348, baseType: !725)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !48, line: 337, size: 256, elements: !726)
!726 = !{!727, !728, !729, !730, !731}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !725, file: !48, line: 339, baseType: !80, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !725, file: !48, line: 342, baseType: !721, size: 64, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !725, file: !48, line: 345, baseType: !36, size: 32, offset: 128)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !725, file: !48, line: 347, baseType: !36, size: 32, offset: 160)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !725, file: !48, line: 347, baseType: !36, size: 32, offset: 192)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !710, file: !48, line: 434, baseType: !733, size: 64, offset: 192)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !48, line: 409, baseType: !152)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !658, file: !29, line: 129, baseType: !709, size: 256, offset: 1280)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !658, file: !29, line: 132, baseType: !36, size: 32, offset: 1536)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !658, file: !29, line: 132, baseType: !36, size: 32, offset: 1568)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !643, file: !6, line: 105, baseType: !130, size: 512, offset: 1472)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !643, file: !6, line: 107, baseType: !209, size: 32, offset: 1984)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !643, file: !6, line: 107, baseType: !209, size: 32, offset: 2016)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !643, file: !6, line: 109, baseType: !80, size: 64, offset: 2048)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !643, file: !6, line: 112, baseType: !114, size: 16, offset: 2112)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !643, file: !6, line: 114, baseType: !114, size: 16, offset: 2128)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !643, file: !6, line: 115, baseType: !36, size: 32, offset: 2144)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !643, file: !6, line: 117, baseType: !80, size: 64, offset: 2176)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !643, file: !6, line: 122, baseType: !36, size: 32, offset: 2240)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !643, file: !6, line: 124, baseType: !36, size: 32, offset: 2272)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !643, file: !6, line: 126, baseType: !642, size: 64, offset: 2304)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !643, file: !6, line: 128, baseType: !749, size: 64, offset: 2368)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !6, line: 298, size: 448, elements: !751)
!751 = !{!752, !753, !754, !757, !758, !761, !762, !763}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !750, file: !6, line: 299, baseType: !749, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !750, file: !6, line: 299, baseType: !749, size: 64, offset: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !750, file: !6, line: 301, baseType: !755, size: 64, offset: 128)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !6, line: 218, baseType: !598)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !750, file: !6, line: 301, baseType: !755, size: 64, offset: 192)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !750, file: !6, line: 302, baseType: !759, size: 64, offset: 256)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !6, line: 132, baseType: !643)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !750, file: !6, line: 302, baseType: !759, size: 64, offset: 320)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !750, file: !6, line: 304, baseType: !36, size: 32, offset: 384)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !750, file: !6, line: 305, baseType: !36, size: 32, offset: 416)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !643, file: !6, line: 131, baseType: !765, size: 384, offset: 2432)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !6, line: 73, baseType: !766)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !6, line: 62, size: 384, elements: !767)
!767 = !{!768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !766, file: !6, line: 63, baseType: !348, size: 128)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !766, file: !6, line: 64, baseType: !209, size: 32, offset: 128)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !766, file: !6, line: 64, baseType: !209, size: 32, offset: 160)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !766, file: !6, line: 65, baseType: !80, size: 64, offset: 192)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !766, file: !6, line: 66, baseType: !114, size: 16, offset: 256)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !766, file: !6, line: 67, baseType: !114, size: 16, offset: 272)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !766, file: !6, line: 68, baseType: !114, size: 16, offset: 288)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !766, file: !6, line: 69, baseType: !114, size: 16, offset: 304)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !766, file: !6, line: 70, baseType: !114, size: 16, offset: 320)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !766, file: !6, line: 71, baseType: !114, size: 16, offset: 336)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !766, file: !6, line: 72, baseType: !552, size: 32, offset: 352)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !628, file: !29, line: 108, baseType: !130, size: 512, offset: 896)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !606, file: !29, line: 160, baseType: !626, size: 64, offset: 3648)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !606, file: !29, line: 162, baseType: !130, size: 512, offset: 3712)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !606, file: !29, line: 165, baseType: !783, size: 64, offset: 4224)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DISubroutineType(types: !785)
!785 = !{null, !786, !788, !790, !572, !597, !792}
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !666)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !29, line: 81, flags: DIFlagFwdDecl)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !6, line: 43, flags: DIFlagFwdDecl)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !6, line: 274, baseType: !793)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !6, line: 271, size: 32, elements: !794)
!794 = !{!795}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !793, file: !6, line: 273, baseType: !7, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !606, file: !29, line: 168, baseType: !797, size: 64, offset: 4288)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DISubroutineType(types: !799)
!799 = !{null, !786, !572, !597}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !606, file: !29, line: 171, baseType: !801, size: 64, offset: 4352)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DISubroutineType(types: !803)
!803 = !{null, !668, !665, !670}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !606, file: !29, line: 173, baseType: !801, size: 64, offset: 4416)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !606, file: !29, line: 176, baseType: !806, size: 64, offset: 4480)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{null, !790, !809, !597, !36, !36}
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !811, line: 136, flags: DIFlagFwdDecl)
!811 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!812 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !606, file: !29, line: 179, baseType: !813, size: 64, offset: 4544)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DISubroutineType(types: !815)
!815 = !{null, !572, !597, !155, !36}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !606, file: !29, line: 181, baseType: !817, size: 64, offset: 4608)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DISubroutineType(types: !819)
!819 = !{!36, !597, !36, !36}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !606, file: !29, line: 183, baseType: !817, size: 64, offset: 4672)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !606, file: !29, line: 185, baseType: !817, size: 64, offset: 4736)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !606, file: !29, line: 188, baseType: !594, size: 64, offset: 4800)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !606, file: !29, line: 190, baseType: !824, size: 64, offset: 4864)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{null, !572, !597, !89}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !606, file: !29, line: 193, baseType: !594, size: 64, offset: 4928)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !606, file: !29, line: 195, baseType: !829, size: 64, offset: 4992)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DISubroutineType(types: !831)
!831 = !{null, !597}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !606, file: !29, line: 197, baseType: !833, size: 64, offset: 5056)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{null, !572, !597, !597}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !606, file: !29, line: 200, baseType: !837, size: 64, offset: 5120)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{null, !786, !670}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !606, file: !29, line: 201, baseType: !841, size: 64, offset: 5184)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DISubroutineType(types: !843)
!843 = !{null, !670}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !606, file: !29, line: 202, baseType: !845, size: 64, offset: 5248)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DISubroutineType(types: !847)
!847 = !{null, !670, !597}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !606, file: !29, line: 205, baseType: !849, size: 64, offset: 5312)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DISubroutineType(types: !851)
!851 = !{!36, !605, !572}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !606, file: !29, line: 207, baseType: !853, size: 64, offset: 5376)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DISubroutineType(types: !855)
!855 = !{!36, !597, !572}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !606, file: !29, line: 210, baseType: !594, size: 64, offset: 5440)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !606, file: !29, line: 213, baseType: !858, size: 64, offset: 5504)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !29, line: 135, baseType: !859)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{!80, !862, !597, !792}
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !29, line: 62, flags: DIFlagFwdDecl)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !606, file: !29, line: 214, baseType: !865, size: 64, offset: 5568)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !29, line: 136, baseType: !152)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !606, file: !29, line: 215, baseType: !867, size: 64, offset: 5632)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !29, line: 137, baseType: !868)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DISubroutineType(types: !870)
!870 = !{null, !80, !36, !597, !871, !873, !873}
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !29, line: 63, flags: DIFlagFwdDecl)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !606, file: !29, line: 217, baseType: !876, size: 64, offset: 5696)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !29, line: 138, baseType: !877)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DISubroutineType(types: !879)
!879 = !{!36, !880, !597, !871, !882, !882}
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !29, line: 64, flags: DIFlagFwdDecl)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !29, line: 66, flags: DIFlagFwdDecl)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !606, file: !29, line: 220, baseType: !709, size: 256, offset: 5760)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !598, file: !6, line: 173, baseType: !130, size: 512, offset: 320)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !598, file: !6, line: 175, baseType: !130, size: 512, offset: 832)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !598, file: !6, line: 176, baseType: !36, size: 32, offset: 1344)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !598, file: !6, line: 177, baseType: !114, size: 16, offset: 1376)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !598, file: !6, line: 177, baseType: !114, size: 16, offset: 1392)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !598, file: !6, line: 178, baseType: !114, size: 16, offset: 1408)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !598, file: !6, line: 178, baseType: !114, size: 16, offset: 1424)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !598, file: !6, line: 179, baseType: !114, size: 16, offset: 1440)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !598, file: !6, line: 179, baseType: !114, size: 16, offset: 1456)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !598, file: !6, line: 180, baseType: !114, size: 16, offset: 1472)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !598, file: !6, line: 181, baseType: !114, size: 16, offset: 1488)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !598, file: !6, line: 182, baseType: !266, size: 96, offset: 1504)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !598, file: !6, line: 184, baseType: !140, size: 128, offset: 1600)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !598, file: !6, line: 184, baseType: !140, size: 128, offset: 1728)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !598, file: !6, line: 185, baseType: !597, size: 64, offset: 1856)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !598, file: !6, line: 186, baseType: !89, size: 64, offset: 1920)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !598, file: !6, line: 187, baseType: !80, size: 64, offset: 1984)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !598, file: !6, line: 188, baseType: !597, size: 64, offset: 2048)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !598, file: !6, line: 189, baseType: !140, size: 128, offset: 2112)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !598, file: !6, line: 191, baseType: !209, size: 32, offset: 2240)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !598, file: !6, line: 191, baseType: !209, size: 32, offset: 2272)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !598, file: !6, line: 192, baseType: !209, size: 32, offset: 2304)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !598, file: !6, line: 192, baseType: !209, size: 32, offset: 2336)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !598, file: !6, line: 193, baseType: !209, size: 32, offset: 2368)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !598, file: !6, line: 194, baseType: !209, size: 32, offset: 2400)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !598, file: !6, line: 194, baseType: !209, size: 32, offset: 2432)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !598, file: !6, line: 196, baseType: !36, size: 32, offset: 2464)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !598, file: !6, line: 198, baseType: !130, size: 512, offset: 2496)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !598, file: !6, line: 199, baseType: !114, size: 16, offset: 3008)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !598, file: !6, line: 199, baseType: !114, size: 16, offset: 3024)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !598, file: !6, line: 200, baseType: !209, size: 32, offset: 3040)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !598, file: !6, line: 200, baseType: !209, size: 32, offset: 3072)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !598, file: !6, line: 202, baseType: !114, size: 16, offset: 3104)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !598, file: !6, line: 202, baseType: !114, size: 16, offset: 3120)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !598, file: !6, line: 203, baseType: !80, size: 64, offset: 3136)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !598, file: !6, line: 204, baseType: !921, size: 128, offset: 3200)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !922, line: 95, baseType: !923)
!922 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !922, line: 92, size: 128, elements: !924)
!924 = !{!925, !926, !927, !928}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !923, file: !922, line: 93, baseType: !209, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !923, file: !922, line: 93, baseType: !209, size: 32, offset: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !923, file: !922, line: 94, baseType: !209, size: 32, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !923, file: !922, line: 94, baseType: !209, size: 32, offset: 96)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !598, file: !6, line: 205, baseType: !921, size: 128, offset: 3328)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !598, file: !6, line: 206, baseType: !921, size: 128, offset: 3456)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !598, file: !6, line: 215, baseType: !114, size: 16, offset: 3584)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !598, file: !6, line: 215, baseType: !114, size: 16, offset: 3600)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !598, file: !6, line: 216, baseType: !36, size: 32, offset: 3616)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !598, file: !6, line: 217, baseType: !935, size: 64, offset: 3648)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !6, line: 51, flags: DIFlagFwdDecl)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !579, file: !29, line: 294, baseType: !938, size: 64, offset: 3264)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{null, !463, !80, !941}
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !29, line: 282, baseType: !942)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DISubroutineType(types: !944)
!944 = !{null, !80, !36, !681}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !579, file: !29, line: 296, baseType: !946, size: 64, offset: 3328)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DISubroutineType(types: !948)
!948 = !{!36, !786, !578}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !579, file: !29, line: 298, baseType: !950, size: 64, offset: 3392)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DISubroutineType(types: !952)
!952 = !{null, !786, !578, !953, !954, !954}
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !579, file: !29, line: 302, baseType: !956, size: 64, offset: 3456)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DISubroutineType(types: !958)
!958 = !{null, !572, !572}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !579, file: !29, line: 303, baseType: !956, size: 64, offset: 3520)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !579, file: !29, line: 304, baseType: !956, size: 64, offset: 3584)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !579, file: !29, line: 307, baseType: !590, size: 64, offset: 3648)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !579, file: !29, line: 309, baseType: !963, size: 64, offset: 3712)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DISubroutineType(types: !965)
!965 = !{!36, !572, !749}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !579, file: !29, line: 311, baseType: !594, size: 64, offset: 3776)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !579, file: !29, line: 314, baseType: !709, size: 256, offset: 3840)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !573, file: !6, line: 333, baseType: !130, size: 512, offset: 1088)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !573, file: !6, line: 335, baseType: !678, size: 64, offset: 1600)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !573, file: !6, line: 337, baseType: !971, size: 64, offset: 1664)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !465, line: 61, flags: DIFlagFwdDecl)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !573, file: !6, line: 338, baseType: !974, size: 64, offset: 1728)
!974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 64, elements: !553)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !573, file: !6, line: 340, baseType: !140, size: 128, offset: 1792)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !573, file: !6, line: 340, baseType: !140, size: 128, offset: 1920)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !573, file: !6, line: 342, baseType: !36, size: 32, offset: 2048)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !573, file: !6, line: 342, baseType: !36, size: 32, offset: 2080)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !573, file: !6, line: 343, baseType: !36, size: 32, offset: 2112)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !573, file: !6, line: 345, baseType: !36, size: 32, offset: 2144)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !573, file: !6, line: 346, baseType: !36, size: 32, offset: 2176)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !573, file: !6, line: 347, baseType: !114, size: 16, offset: 2208)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !573, file: !6, line: 348, baseType: !114, size: 16, offset: 2224)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !573, file: !6, line: 349, baseType: !36, size: 32, offset: 2240)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !573, file: !6, line: 351, baseType: !36, size: 32, offset: 2272)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !573, file: !6, line: 353, baseType: !114, size: 16, offset: 2304)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !573, file: !6, line: 354, baseType: !114, size: 16, offset: 2320)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !573, file: !6, line: 355, baseType: !36, size: 32, offset: 2336)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !573, file: !6, line: 357, baseType: !921, size: 128, offset: 2368)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !573, file: !6, line: 363, baseType: !140, size: 128, offset: 2496)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !573, file: !6, line: 363, baseType: !140, size: 128, offset: 2624)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !573, file: !6, line: 368, baseType: !993, size: 64, offset: 2752)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !29, line: 500, size: 64, elements: !995)
!995 = !{!996}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !994, file: !29, line: 502, baseType: !997, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !999, line: 48, baseType: !1000)
!999 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1000 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !170, line: 47, flags: DIFlagFwdDecl)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !573, file: !6, line: 372, baseType: !792, size: 32, offset: 2816)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !573, file: !6, line: 373, baseType: !36, size: 32, offset: 2848)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !573, file: !6, line: 382, baseType: !1004, size: 64, offset: 2880)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !6, line: 46, flags: DIFlagFwdDecl)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !573, file: !6, line: 385, baseType: !1007, size: 64, offset: 2944)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{null, !80, !209}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !573, file: !6, line: 386, baseType: !1011, size: 64, offset: 3008)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{null, !80, !155}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !573, file: !6, line: 387, baseType: !1015, size: 64, offset: 3072)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!36, !80}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !573, file: !6, line: 388, baseType: !152, size: 64, offset: 3136)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !573, file: !6, line: 389, baseType: !80, size: 64, offset: 3200)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !573, file: !6, line: 389, baseType: !80, size: 64, offset: 3264)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !573, file: !6, line: 389, baseType: !80, size: 64, offset: 3328)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !573, file: !6, line: 389, baseType: !80, size: 64, offset: 3392)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !464, file: !465, line: 1223, baseType: !463, size: 64, offset: 1152)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !464, file: !465, line: 1225, baseType: !140, size: 128, offset: 1216)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !464, file: !465, line: 1226, baseType: !1026, size: 64, offset: 1344)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !465, line: 69, size: 320, elements: !1028)
!1028 = !{!1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1027, file: !465, line: 70, baseType: !1026, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1027, file: !465, line: 70, baseType: !1026, size: 64, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1027, file: !465, line: 71, baseType: !7, size: 32, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1027, file: !465, line: 71, baseType: !7, size: 32, offset: 160)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1027, file: !465, line: 72, baseType: !36, size: 32, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1027, file: !465, line: 73, baseType: !114, size: 16, offset: 224)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1027, file: !465, line: 73, baseType: !114, size: 16, offset: 240)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1027, file: !465, line: 74, baseType: !401, size: 64, offset: 256)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !464, file: !465, line: 1227, baseType: !401, size: 64, offset: 1408)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !464, file: !465, line: 1229, baseType: !266, size: 96, offset: 1472)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !464, file: !465, line: 1230, baseType: !266, size: 96, offset: 1568)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !464, file: !465, line: 1231, baseType: !266, size: 96, offset: 1664)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !464, file: !465, line: 1231, baseType: !266, size: 96, offset: 1760)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !464, file: !465, line: 1233, baseType: !7, size: 32, offset: 1856)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !464, file: !465, line: 1234, baseType: !36, size: 32, offset: 1888)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !464, file: !465, line: 1235, baseType: !7, size: 32, offset: 1920)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !464, file: !465, line: 1237, baseType: !114, size: 16, offset: 1952)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !464, file: !465, line: 1239, baseType: !101, size: 8, offset: 1968)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !464, file: !465, line: 1240, baseType: !366, size: 8, offset: 1976)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !464, file: !465, line: 1242, baseType: !572, size: 64, offset: 1984)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !464, file: !465, line: 1244, baseType: !1050, size: 64, offset: 2048)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !465, line: 59, flags: DIFlagFwdDecl)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !464, file: !465, line: 1246, baseType: !1053, size: 64, offset: 2112)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !465, line: 1067, size: 5184, elements: !1055)
!1055 = !{!1056, !1086, !1087, !1102, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1124, !1204, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1315}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1054, file: !465, line: 1068, baseType: !1057, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !465, line: 934, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !465, line: 925, size: 576, elements: !1060)
!1060 = !{!1061, !1078, !1079, !1080, !1081, !1082, !1085}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1059, file: !465, line: 926, baseType: !1062, size: 320)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !465, line: 830, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !465, line: 813, size: 320, elements: !1064)
!1064 = !{!1065, !1068, !1071, !1072, !1075, !1076, !1077}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1063, file: !465, line: 814, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !465, line: 51, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1063, file: !465, line: 815, baseType: !1069, size: 64, offset: 64)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !465, line: 815, flags: DIFlagFwdDecl)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1063, file: !465, line: 818, baseType: !80, size: 64, offset: 128)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1063, file: !465, line: 819, baseType: !1073, size: 32, offset: 192)
!1073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1074, size: 32, elements: !349)
!1074 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1063, file: !465, line: 822, baseType: !36, size: 32, offset: 224)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1063, file: !465, line: 826, baseType: !36, size: 32, offset: 256)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1063, file: !465, line: 829, baseType: !36, size: 32, offset: 288)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1059, file: !465, line: 928, baseType: !114, size: 16, offset: 320)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1059, file: !465, line: 928, baseType: !114, size: 16, offset: 336)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1059, file: !465, line: 929, baseType: !36, size: 32, offset: 352)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1059, file: !465, line: 930, baseType: !566, size: 64, offset: 384)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1059, file: !465, line: 931, baseType: !1083, size: 64, offset: 448)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !465, line: 931, flags: DIFlagFwdDecl)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1059, file: !465, line: 933, baseType: !80, size: 64, offset: 512)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1054, file: !465, line: 1069, baseType: !1057, size: 64, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1054, file: !465, line: 1070, baseType: !1088, size: 64, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !465, line: 916, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !465, line: 891, size: 704, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1096, !1097, !1098, !1099, !1100, !1101}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1090, file: !465, line: 892, baseType: !1062, size: 320)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1090, file: !465, line: 896, baseType: !36, size: 32, offset: 320)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1090, file: !465, line: 900, baseType: !1095, size: 96, offset: 352)
!1095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 96, elements: !267)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1090, file: !465, line: 903, baseType: !209, size: 32, offset: 448)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1090, file: !465, line: 906, baseType: !36, size: 32, offset: 480)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1090, file: !465, line: 909, baseType: !209, size: 32, offset: 512)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1090, file: !465, line: 912, baseType: !209, size: 32, offset: 544)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1090, file: !465, line: 914, baseType: !401, size: 64, offset: 576)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1090, file: !465, line: 915, baseType: !80, size: 64, offset: 640)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1054, file: !465, line: 1071, baseType: !1103, size: 64, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !465, line: 920, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !465, line: 918, size: 320, elements: !1106)
!1106 = !{!1107}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1105, file: !465, line: 919, baseType: !1062, size: 320)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1054, file: !465, line: 1075, baseType: !209, size: 32, offset: 256)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1054, file: !465, line: 1077, baseType: !209, size: 32, offset: 288)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1054, file: !465, line: 1078, baseType: !209, size: 32, offset: 320)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1054, file: !465, line: 1079, baseType: !114, size: 16, offset: 352)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1054, file: !465, line: 1082, baseType: !114, size: 16, offset: 368)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1054, file: !465, line: 1085, baseType: !101, size: 8, offset: 384)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1054, file: !465, line: 1086, baseType: !101, size: 8, offset: 392)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1054, file: !465, line: 1087, baseType: !101, size: 8, offset: 400)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1054, file: !465, line: 1088, baseType: !101, size: 8, offset: 408)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1054, file: !465, line: 1090, baseType: !209, size: 32, offset: 416)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1054, file: !465, line: 1093, baseType: !114, size: 16, offset: 448)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1054, file: !465, line: 1096, baseType: !101, size: 8, offset: 464)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1054, file: !465, line: 1098, baseType: !1121, size: 40, offset: 472)
!1121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 40, elements: !1122)
!1122 = !{!1123}
!1123 = !DISubrange(count: 5)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1054, file: !465, line: 1101, baseType: !1125, size: 832, offset: 512)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !465, line: 836, size: 832, elements: !1126)
!1126 = !{!1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1200, !1201, !1202, !1203}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1125, file: !465, line: 837, baseType: !1062, size: 320)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1125, file: !465, line: 839, baseType: !114, size: 16, offset: 320)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1125, file: !465, line: 839, baseType: !114, size: 16, offset: 336)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1125, file: !465, line: 842, baseType: !114, size: 16, offset: 352)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1125, file: !465, line: 842, baseType: !114, size: 16, offset: 368)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1125, file: !465, line: 843, baseType: !552, size: 32, offset: 384)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1125, file: !465, line: 845, baseType: !36, size: 32, offset: 416)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1125, file: !465, line: 847, baseType: !80, size: 64, offset: 448)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1125, file: !465, line: 848, baseType: !1136, size: 64, offset: 512)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !460, line: 77, size: 15424, elements: !1138)
!1138 = !{!1139, !1140, !1141, !1144, !1145, !1148, !1151, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1189, !1190, !1194}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1137, file: !460, line: 78, baseType: !82, size: 960)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1137, file: !460, line: 80, baseType: !100, size: 8192, offset: 960)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1137, file: !460, line: 82, baseType: !1142, size: 64, offset: 9152)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !460, line: 43, flags: DIFlagFwdDecl)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1137, file: !460, line: 83, baseType: !569, size: 64, offset: 9216)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1137, file: !460, line: 86, baseType: !1146, size: 64, offset: 9280)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !460, line: 41, flags: DIFlagFwdDecl)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1137, file: !460, line: 87, baseType: !1149, size: 64, offset: 9344)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !460, line: 44, flags: DIFlagFwdDecl)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1137, file: !460, line: 89, baseType: !1152, size: 512, offset: 9408)
!1152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 512, elements: !1153)
!1153 = !{!1154}
!1154 = !DISubrange(count: 8)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1137, file: !460, line: 90, baseType: !114, size: 16, offset: 9920)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1137, file: !460, line: 90, baseType: !114, size: 16, offset: 9936)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1137, file: !460, line: 92, baseType: !114, size: 16, offset: 9952)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1137, file: !460, line: 92, baseType: !114, size: 16, offset: 9968)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1137, file: !460, line: 93, baseType: !114, size: 16, offset: 9984)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1137, file: !460, line: 93, baseType: !114, size: 16, offset: 10000)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1137, file: !460, line: 94, baseType: !36, size: 32, offset: 10016)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1137, file: !460, line: 97, baseType: !114, size: 16, offset: 10048)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1137, file: !460, line: 97, baseType: !114, size: 16, offset: 10064)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1137, file: !460, line: 98, baseType: !114, size: 16, offset: 10080)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1137, file: !460, line: 98, baseType: !114, size: 16, offset: 10096)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1137, file: !460, line: 99, baseType: !114, size: 16, offset: 10112)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1137, file: !460, line: 99, baseType: !114, size: 16, offset: 10128)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1137, file: !460, line: 100, baseType: !7, size: 32, offset: 10144)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1137, file: !460, line: 101, baseType: !566, size: 64, offset: 10176)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1137, file: !460, line: 103, baseType: !107, size: 64, offset: 10240)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1137, file: !460, line: 104, baseType: !556, size: 64, offset: 10304)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1137, file: !460, line: 107, baseType: !209, size: 32, offset: 10368)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1137, file: !460, line: 108, baseType: !36, size: 32, offset: 10400)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1137, file: !460, line: 109, baseType: !114, size: 16, offset: 10432)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1137, file: !460, line: 110, baseType: !114, size: 16, offset: 10448)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1137, file: !460, line: 113, baseType: !36, size: 32, offset: 10464)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1137, file: !460, line: 113, baseType: !36, size: 32, offset: 10496)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1137, file: !460, line: 114, baseType: !101, size: 8, offset: 10528)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1137, file: !460, line: 114, baseType: !101, size: 8, offset: 10536)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1137, file: !460, line: 115, baseType: !114, size: 16, offset: 10544)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1137, file: !460, line: 116, baseType: !348, size: 128, offset: 10560)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1137, file: !460, line: 119, baseType: !209, size: 32, offset: 10688)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1137, file: !460, line: 119, baseType: !209, size: 32, offset: 10720)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1137, file: !460, line: 122, baseType: !1185, size: 512, offset: 10752)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !811, line: 182, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !811, line: 180, size: 512, elements: !1187)
!1187 = !{!1188}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1186, file: !811, line: 181, baseType: !130, size: 512)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1137, file: !460, line: 123, baseType: !101, size: 8, offset: 11264)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1137, file: !460, line: 125, baseType: !1191, size: 56, offset: 11272)
!1191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 56, elements: !1192)
!1192 = !{!1193}
!1193 = !DISubrange(count: 7)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1137, file: !460, line: 126, baseType: !1195, size: 4096, offset: 11328)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1196, size: 4096, elements: !1153)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !460, line: 69, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !460, line: 67, size: 512, elements: !1198)
!1198 = !{!1199}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1197, file: !460, line: 68, baseType: !130, size: 512)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1125, file: !465, line: 849, baseType: !1136, size: 64, offset: 576)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1125, file: !465, line: 850, baseType: !1136, size: 64, offset: 640)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1125, file: !465, line: 851, baseType: !266, size: 96, offset: 704)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1125, file: !465, line: 852, baseType: !209, size: 32, offset: 800)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1054, file: !465, line: 1104, baseType: !1205, size: 1344, offset: 1344)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !465, line: 867, size: 1344, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210, !1211, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1205, file: !465, line: 868, baseType: !114, size: 16)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1205, file: !465, line: 869, baseType: !114, size: 16, offset: 16)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1205, file: !465, line: 870, baseType: !114, size: 16, offset: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1205, file: !465, line: 871, baseType: !114, size: 16, offset: 48)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1205, file: !465, line: 873, baseType: !1212, size: 896, offset: 64)
!1212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1213, size: 896, elements: !1192)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !465, line: 864, baseType: !1214)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !465, line: 859, size: 128, elements: !1215)
!1215 = !{!1216, !1217, !1218, !1219, !1220, !1221}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1214, file: !465, line: 860, baseType: !114, size: 16)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1214, file: !465, line: 861, baseType: !114, size: 16, offset: 16)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1214, file: !465, line: 861, baseType: !114, size: 16, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1214, file: !465, line: 861, baseType: !114, size: 16, offset: 48)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1214, file: !465, line: 862, baseType: !36, size: 32, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1214, file: !465, line: 863, baseType: !209, size: 32, offset: 96)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1205, file: !465, line: 874, baseType: !80, size: 64, offset: 960)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1205, file: !465, line: 876, baseType: !209, size: 32, offset: 1024)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1205, file: !465, line: 876, baseType: !209, size: 32, offset: 1056)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1205, file: !465, line: 878, baseType: !36, size: 32, offset: 1088)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1205, file: !465, line: 879, baseType: !36, size: 32, offset: 1120)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1205, file: !465, line: 881, baseType: !36, size: 32, offset: 1152)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1205, file: !465, line: 881, baseType: !36, size: 32, offset: 1184)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1205, file: !465, line: 883, baseType: !463, size: 64, offset: 1216)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1205, file: !465, line: 884, baseType: !401, size: 64, offset: 1280)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1054, file: !465, line: 1107, baseType: !209, size: 32, offset: 2688)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1054, file: !465, line: 1110, baseType: !209, size: 32, offset: 2720)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1054, file: !465, line: 1113, baseType: !114, size: 16, offset: 2752)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1054, file: !465, line: 1113, baseType: !114, size: 16, offset: 2768)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1054, file: !465, line: 1116, baseType: !101, size: 8, offset: 2784)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1054, file: !465, line: 1117, baseType: !366, size: 8, offset: 2792)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1054, file: !465, line: 1120, baseType: !114, size: 16, offset: 2800)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1054, file: !465, line: 1121, baseType: !209, size: 32, offset: 2816)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1054, file: !465, line: 1122, baseType: !209, size: 32, offset: 2848)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1054, file: !465, line: 1123, baseType: !209, size: 32, offset: 2880)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1054, file: !465, line: 1124, baseType: !209, size: 32, offset: 2912)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1054, file: !465, line: 1125, baseType: !209, size: 32, offset: 2944)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1054, file: !465, line: 1126, baseType: !209, size: 32, offset: 2976)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1054, file: !465, line: 1127, baseType: !209, size: 32, offset: 3008)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1054, file: !465, line: 1128, baseType: !209, size: 32, offset: 3040)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1054, file: !465, line: 1129, baseType: !209, size: 32, offset: 3072)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1054, file: !465, line: 1130, baseType: !209, size: 32, offset: 3104)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1054, file: !465, line: 1131, baseType: !114, size: 16, offset: 3136)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1054, file: !465, line: 1132, baseType: !101, size: 8, offset: 3152)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1054, file: !465, line: 1133, baseType: !101, size: 8, offset: 3160)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1054, file: !465, line: 1134, baseType: !1252, size: 24, offset: 3168)
!1252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 24, elements: !267)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1054, file: !465, line: 1135, baseType: !101, size: 8, offset: 3192)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1054, file: !465, line: 1138, baseType: !401, size: 64, offset: 3200)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1054, file: !465, line: 1139, baseType: !101, size: 8, offset: 3264)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1054, file: !465, line: 1140, baseType: !101, size: 8, offset: 3272)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1054, file: !465, line: 1141, baseType: !101, size: 8, offset: 3280)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1054, file: !465, line: 1142, baseType: !101, size: 8, offset: 3288)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1054, file: !465, line: 1143, baseType: !101, size: 8, offset: 3296)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1054, file: !465, line: 1144, baseType: !1261, size: 64, offset: 3304)
!1261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 64, elements: !1153)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1054, file: !465, line: 1145, baseType: !1261, size: 64, offset: 3368)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1054, file: !465, line: 1148, baseType: !101, size: 8, offset: 3432)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1054, file: !465, line: 1149, baseType: !101, size: 8, offset: 3440)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1054, file: !465, line: 1152, baseType: !101, size: 8, offset: 3448)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1054, file: !465, line: 1152, baseType: !101, size: 8, offset: 3456)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1054, file: !465, line: 1153, baseType: !101, size: 8, offset: 3464)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1054, file: !465, line: 1154, baseType: !114, size: 16, offset: 3472)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1054, file: !465, line: 1154, baseType: !114, size: 16, offset: 3488)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1054, file: !465, line: 1155, baseType: !114, size: 16, offset: 3504)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1054, file: !465, line: 1155, baseType: !114, size: 16, offset: 3520)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1054, file: !465, line: 1156, baseType: !101, size: 8, offset: 3536)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1054, file: !465, line: 1157, baseType: !101, size: 8, offset: 3544)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1054, file: !465, line: 1159, baseType: !101, size: 8, offset: 3552)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1054, file: !465, line: 1160, baseType: !101, size: 8, offset: 3560)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1054, file: !465, line: 1161, baseType: !101, size: 8, offset: 3568)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1054, file: !465, line: 1162, baseType: !101, size: 8, offset: 3576)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1054, file: !465, line: 1165, baseType: !36, size: 32, offset: 3584)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1054, file: !465, line: 1166, baseType: !36, size: 32, offset: 3616)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1054, file: !465, line: 1167, baseType: !36, size: 32, offset: 3648)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1054, file: !465, line: 1168, baseType: !36, size: 32, offset: 3680)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1054, file: !465, line: 1171, baseType: !114, size: 16, offset: 3712)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1054, file: !465, line: 1171, baseType: !114, size: 16, offset: 3728)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1054, file: !465, line: 1172, baseType: !36, size: 32, offset: 3744)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1054, file: !465, line: 1173, baseType: !209, size: 32, offset: 3776)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1054, file: !465, line: 1174, baseType: !209, size: 32, offset: 3808)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1054, file: !465, line: 1177, baseType: !1288, size: 1024, offset: 3840)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !465, line: 963, size: 1024, elements: !1289)
!1289 = !{!1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1313, !1314}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1288, file: !465, line: 965, baseType: !36, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1288, file: !465, line: 968, baseType: !209, size: 32, offset: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1288, file: !465, line: 971, baseType: !209, size: 32, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1288, file: !465, line: 974, baseType: !209, size: 32, offset: 96)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1288, file: !465, line: 977, baseType: !266, size: 96, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1288, file: !465, line: 979, baseType: !266, size: 96, offset: 224)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1288, file: !465, line: 982, baseType: !36, size: 32, offset: 320)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1288, file: !465, line: 987, baseType: !974, size: 64, offset: 352)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1288, file: !465, line: 989, baseType: !209, size: 32, offset: 416)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1288, file: !465, line: 994, baseType: !36, size: 32, offset: 448)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1288, file: !465, line: 995, baseType: !36, size: 32, offset: 480)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1288, file: !465, line: 997, baseType: !101, size: 8, offset: 512)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1288, file: !465, line: 998, baseType: !1191, size: 56, offset: 520)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1288, file: !465, line: 1000, baseType: !209, size: 32, offset: 576)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1288, file: !465, line: 1003, baseType: !974, size: 64, offset: 608)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1288, file: !465, line: 1006, baseType: !36, size: 32, offset: 672)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1288, file: !465, line: 1009, baseType: !209, size: 32, offset: 704)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1288, file: !465, line: 1012, baseType: !974, size: 64, offset: 736)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1288, file: !465, line: 1015, baseType: !974, size: 64, offset: 800)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1288, file: !465, line: 1018, baseType: !36, size: 32, offset: 864)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1288, file: !465, line: 1019, baseType: !1311, size: 64, offset: 896)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !465, line: 63, flags: DIFlagFwdDecl)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1288, file: !465, line: 1023, baseType: !209, size: 32, offset: 960)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1288, file: !465, line: 1024, baseType: !36, size: 32, offset: 992)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1054, file: !465, line: 1179, baseType: !1316, size: 320, offset: 4864)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !465, line: 1043, size: 320, elements: !1317)
!1317 = !{!1318, !1319, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1316, file: !465, line: 1044, baseType: !101, size: 8)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1316, file: !465, line: 1045, baseType: !1320, size: 16, offset: 8)
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 16, elements: !553)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1316, file: !465, line: 1048, baseType: !101, size: 8, offset: 24)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1316, file: !465, line: 1049, baseType: !209, size: 32, offset: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1316, file: !465, line: 1049, baseType: !209, size: 32, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1316, file: !465, line: 1052, baseType: !209, size: 32, offset: 96)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1316, file: !465, line: 1052, baseType: !209, size: 32, offset: 128)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1316, file: !465, line: 1053, baseType: !101, size: 8, offset: 160)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1316, file: !465, line: 1054, baseType: !1252, size: 24, offset: 168)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1316, file: !465, line: 1057, baseType: !209, size: 32, offset: 192)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1316, file: !465, line: 1057, baseType: !209, size: 32, offset: 224)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1316, file: !465, line: 1060, baseType: !209, size: 32, offset: 256)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1316, file: !465, line: 1060, baseType: !209, size: 32, offset: 288)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !464, file: !465, line: 1247, baseType: !1333, size: 64, offset: 2176)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !465, line: 60, flags: DIFlagFwdDecl)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !464, file: !465, line: 1251, baseType: !1336, size: 31872, offset: 2240)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !465, line: 403, size: 31872, elements: !1337)
!1337 = !{!1338, !1413, !1433, !1442, !1462, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1602, !1603, !1604, !1606, !1622, !1623}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1336, file: !465, line: 404, baseType: !1339, size: 1984)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !465, line: 259, size: 1984, elements: !1340)
!1340 = !{!1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1358, !1408}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1339, file: !465, line: 260, baseType: !101, size: 8)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1339, file: !465, line: 263, baseType: !101, size: 8, offset: 8)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1339, file: !465, line: 266, baseType: !101, size: 8, offset: 16)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1339, file: !465, line: 267, baseType: !101, size: 8, offset: 24)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1339, file: !465, line: 269, baseType: !101, size: 8, offset: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1339, file: !465, line: 270, baseType: !101, size: 8, offset: 40)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1339, file: !465, line: 276, baseType: !101, size: 8, offset: 48)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1339, file: !465, line: 279, baseType: !101, size: 8, offset: 56)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1339, file: !465, line: 280, baseType: !114, size: 16, offset: 64)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1339, file: !465, line: 280, baseType: !114, size: 16, offset: 80)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1339, file: !465, line: 281, baseType: !209, size: 32, offset: 96)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1339, file: !465, line: 284, baseType: !101, size: 8, offset: 128)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1339, file: !465, line: 285, baseType: !101, size: 8, offset: 136)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1339, file: !465, line: 287, baseType: !1355, size: 48, offset: 144)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 48, elements: !1356)
!1356 = !{!1357}
!1357 = !DISubrange(count: 6)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1339, file: !465, line: 290, baseType: !1359, size: 1280, offset: 192)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !811, line: 174, baseType: !1360)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !811, line: 166, size: 1280, elements: !1361)
!1361 = !{!1362, !1363, !1364, !1365, !1366, !1367, !1368, !1407}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1360, file: !811, line: 167, baseType: !36, size: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1360, file: !811, line: 167, baseType: !36, size: 32, offset: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1360, file: !811, line: 168, baseType: !130, size: 512, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1360, file: !811, line: 169, baseType: !130, size: 512, offset: 576)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1360, file: !811, line: 170, baseType: !209, size: 32, offset: 1088)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1360, file: !811, line: 171, baseType: !209, size: 32, offset: 1120)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1360, file: !811, line: 172, baseType: !1369, size: 64, offset: 1152)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !811, line: 72, size: 3072, elements: !1371)
!1371 = !{!1372, !1373, !1374, !1375, !1376, !1377, !1378, !1403, !1404, !1405, !1406}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1370, file: !811, line: 73, baseType: !36, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1370, file: !811, line: 73, baseType: !36, size: 32, offset: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1370, file: !811, line: 74, baseType: !36, size: 32, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1370, file: !811, line: 75, baseType: !36, size: 32, offset: 96)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1370, file: !811, line: 77, baseType: !921, size: 128, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1370, file: !811, line: 77, baseType: !921, size: 128, offset: 256)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1370, file: !811, line: 79, baseType: !1379, size: 2304, offset: 384)
!1379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1380, size: 2304, elements: !349)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !811, line: 67, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !811, line: 55, size: 576, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1399, !1400, !1401, !1402}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1381, file: !811, line: 56, baseType: !114, size: 16)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1381, file: !811, line: 56, baseType: !114, size: 16, offset: 16)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1381, file: !811, line: 58, baseType: !209, size: 32, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1381, file: !811, line: 59, baseType: !209, size: 32, offset: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1381, file: !811, line: 59, baseType: !209, size: 32, offset: 96)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1381, file: !811, line: 60, baseType: !974, size: 64, offset: 128)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1381, file: !811, line: 60, baseType: !974, size: 64, offset: 192)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1381, file: !811, line: 61, baseType: !1391, size: 64, offset: 256)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !811, line: 47, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !811, line: 44, size: 96, elements: !1394)
!1394 = !{!1395, !1396, !1397, !1398}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1393, file: !811, line: 45, baseType: !209, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1393, file: !811, line: 45, baseType: !209, size: 32, offset: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1393, file: !811, line: 46, baseType: !114, size: 16, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1393, file: !811, line: 46, baseType: !114, size: 16, offset: 80)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1381, file: !811, line: 62, baseType: !1391, size: 64, offset: 320)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1381, file: !811, line: 64, baseType: !1391, size: 64, offset: 384)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1381, file: !811, line: 65, baseType: !974, size: 64, offset: 448)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1381, file: !811, line: 66, baseType: !974, size: 64, offset: 512)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1370, file: !811, line: 80, baseType: !266, size: 96, offset: 2688)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1370, file: !811, line: 80, baseType: !266, size: 96, offset: 2784)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1370, file: !811, line: 81, baseType: !266, size: 96, offset: 2880)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1370, file: !811, line: 83, baseType: !266, size: 96, offset: 2976)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1360, file: !811, line: 173, baseType: !80, size: 64, offset: 1216)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1339, file: !465, line: 291, baseType: !1409, size: 512, offset: 1472)
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !811, line: 178, baseType: !1410)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !811, line: 176, size: 512, elements: !1411)
!1411 = !{!1412}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1410, file: !811, line: 177, baseType: !130, size: 512)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1336, file: !465, line: 406, baseType: !1414, size: 64, offset: 1984)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !465, line: 80, size: 1472, elements: !1416)
!1416 = !{!1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1415, file: !465, line: 81, baseType: !80, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1415, file: !465, line: 82, baseType: !80, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1415, file: !465, line: 83, baseType: !7, size: 32, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1415, file: !465, line: 84, baseType: !7, size: 32, offset: 160)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1415, file: !465, line: 86, baseType: !7, size: 32, offset: 192)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1415, file: !465, line: 87, baseType: !7, size: 32, offset: 224)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1415, file: !465, line: 88, baseType: !7, size: 32, offset: 256)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1415, file: !465, line: 89, baseType: !7, size: 32, offset: 288)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1415, file: !465, line: 90, baseType: !7, size: 32, offset: 320)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1415, file: !465, line: 91, baseType: !7, size: 32, offset: 352)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1415, file: !465, line: 92, baseType: !7, size: 32, offset: 384)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1415, file: !465, line: 93, baseType: !7, size: 32, offset: 416)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1415, file: !465, line: 95, baseType: !1430, size: 1024, offset: 448)
!1430 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 1024, elements: !1431)
!1431 = !{!1432}
!1432 = !DISubrange(count: 128)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1336, file: !465, line: 407, baseType: !1434, size: 64, offset: 2048)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !465, line: 98, size: 1216, elements: !1436)
!1436 = !{!1437, !1438, !1439, !1440, !1441}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1435, file: !465, line: 100, baseType: !80, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1435, file: !465, line: 101, baseType: !80, size: 64, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1435, file: !465, line: 103, baseType: !7, size: 32, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1435, file: !465, line: 104, baseType: !7, size: 32, offset: 160)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1435, file: !465, line: 106, baseType: !1430, size: 1024, offset: 192)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1336, file: !465, line: 408, baseType: !1443, size: 512, offset: 2112)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !465, line: 109, size: 512, elements: !1444)
!1444 = !{!1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1443, file: !465, line: 111, baseType: !36, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1443, file: !465, line: 112, baseType: !36, size: 32, offset: 32)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1443, file: !465, line: 115, baseType: !36, size: 32, offset: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1443, file: !465, line: 116, baseType: !36, size: 32, offset: 96)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1443, file: !465, line: 117, baseType: !36, size: 32, offset: 128)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1443, file: !465, line: 118, baseType: !36, size: 32, offset: 160)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1443, file: !465, line: 119, baseType: !36, size: 32, offset: 192)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1443, file: !465, line: 120, baseType: !36, size: 32, offset: 224)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1443, file: !465, line: 121, baseType: !36, size: 32, offset: 256)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1443, file: !465, line: 122, baseType: !36, size: 32, offset: 288)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1443, file: !465, line: 125, baseType: !36, size: 32, offset: 320)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1443, file: !465, line: 126, baseType: !36, size: 32, offset: 352)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1443, file: !465, line: 127, baseType: !114, size: 16, offset: 384)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1443, file: !465, line: 128, baseType: !114, size: 16, offset: 400)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1443, file: !465, line: 129, baseType: !36, size: 32, offset: 416)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1443, file: !465, line: 130, baseType: !36, size: 32, offset: 448)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1443, file: !465, line: 131, baseType: !36, size: 32, offset: 480)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1336, file: !465, line: 409, baseType: !1463, size: 576, offset: 2624)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !465, line: 134, size: 576, elements: !1464)
!1464 = !{!1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1463, file: !465, line: 135, baseType: !36, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1463, file: !465, line: 136, baseType: !36, size: 32, offset: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1463, file: !465, line: 137, baseType: !36, size: 32, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1463, file: !465, line: 138, baseType: !36, size: 32, offset: 96)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1463, file: !465, line: 139, baseType: !36, size: 32, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1463, file: !465, line: 140, baseType: !36, size: 32, offset: 160)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1463, file: !465, line: 141, baseType: !36, size: 32, offset: 192)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1463, file: !465, line: 142, baseType: !36, size: 32, offset: 224)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1463, file: !465, line: 143, baseType: !209, size: 32, offset: 256)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1463, file: !465, line: 144, baseType: !36, size: 32, offset: 288)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1463, file: !465, line: 145, baseType: !36, size: 32, offset: 320)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1463, file: !465, line: 147, baseType: !36, size: 32, offset: 352)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1463, file: !465, line: 148, baseType: !36, size: 32, offset: 384)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1463, file: !465, line: 149, baseType: !36, size: 32, offset: 416)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1463, file: !465, line: 150, baseType: !36, size: 32, offset: 448)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1463, file: !465, line: 151, baseType: !36, size: 32, offset: 480)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1463, file: !465, line: 152, baseType: !119, size: 64, offset: 512)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1336, file: !465, line: 411, baseType: !36, size: 32, offset: 3200)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1336, file: !465, line: 411, baseType: !36, size: 32, offset: 3232)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1336, file: !465, line: 411, baseType: !36, size: 32, offset: 3264)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1336, file: !465, line: 412, baseType: !209, size: 32, offset: 3296)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1336, file: !465, line: 413, baseType: !36, size: 32, offset: 3328)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1336, file: !465, line: 413, baseType: !36, size: 32, offset: 3360)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1336, file: !465, line: 415, baseType: !36, size: 32, offset: 3392)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1336, file: !465, line: 415, baseType: !36, size: 32, offset: 3424)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1336, file: !465, line: 416, baseType: !114, size: 16, offset: 3456)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1336, file: !465, line: 416, baseType: !114, size: 16, offset: 3472)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1336, file: !465, line: 418, baseType: !209, size: 32, offset: 3488)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1336, file: !465, line: 418, baseType: !209, size: 32, offset: 3520)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1336, file: !465, line: 421, baseType: !209, size: 32, offset: 3552)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1336, file: !465, line: 421, baseType: !209, size: 32, offset: 3584)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1336, file: !465, line: 421, baseType: !209, size: 32, offset: 3616)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1336, file: !465, line: 425, baseType: !114, size: 16, offset: 3648)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1336, file: !465, line: 425, baseType: !114, size: 16, offset: 3664)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1336, file: !465, line: 425, baseType: !114, size: 16, offset: 3680)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1336, file: !465, line: 426, baseType: !114, size: 16, offset: 3696)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1336, file: !465, line: 428, baseType: !114, size: 16, offset: 3712)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1336, file: !465, line: 428, baseType: !114, size: 16, offset: 3728)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1336, file: !465, line: 431, baseType: !36, size: 32, offset: 3744)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1336, file: !465, line: 433, baseType: !114, size: 16, offset: 3776)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1336, file: !465, line: 435, baseType: !114, size: 16, offset: 3792)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1336, file: !465, line: 437, baseType: !114, size: 16, offset: 3808)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1336, file: !465, line: 439, baseType: !114, size: 16, offset: 3824)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1336, file: !465, line: 441, baseType: !114, size: 16, offset: 3840)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1336, file: !465, line: 443, baseType: !114, size: 16, offset: 3856)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1336, file: !465, line: 449, baseType: !36, size: 32, offset: 3872)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1336, file: !465, line: 453, baseType: !36, size: 32, offset: 3904)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1336, file: !465, line: 458, baseType: !114, size: 16, offset: 3936)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1336, file: !465, line: 462, baseType: !114, size: 16, offset: 3952)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1336, file: !465, line: 467, baseType: !36, size: 32, offset: 3968)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1336, file: !465, line: 467, baseType: !36, size: 32, offset: 4000)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1336, file: !465, line: 469, baseType: !114, size: 16, offset: 4032)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1336, file: !465, line: 469, baseType: !114, size: 16, offset: 4048)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1336, file: !465, line: 469, baseType: !114, size: 16, offset: 4064)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1336, file: !465, line: 469, baseType: !114, size: 16, offset: 4080)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1336, file: !465, line: 474, baseType: !114, size: 16, offset: 4096)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1336, file: !465, line: 475, baseType: !101, size: 8, offset: 4112)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1336, file: !465, line: 476, baseType: !101, size: 8, offset: 4120)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1336, file: !465, line: 481, baseType: !36, size: 32, offset: 4128)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1336, file: !465, line: 486, baseType: !36, size: 32, offset: 4160)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1336, file: !465, line: 491, baseType: !36, size: 32, offset: 4192)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1336, file: !465, line: 496, baseType: !114, size: 16, offset: 4224)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1336, file: !465, line: 498, baseType: !114, size: 16, offset: 4240)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1336, file: !465, line: 501, baseType: !114, size: 16, offset: 4256)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1336, file: !465, line: 502, baseType: !114, size: 16, offset: 4272)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1336, file: !465, line: 508, baseType: !114, size: 16, offset: 4288)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1336, file: !465, line: 513, baseType: !114, size: 16, offset: 4304)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1336, file: !465, line: 515, baseType: !114, size: 16, offset: 4320)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1336, file: !465, line: 515, baseType: !114, size: 16, offset: 4336)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1336, file: !465, line: 519, baseType: !921, size: 128, offset: 4352)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1336, file: !465, line: 519, baseType: !921, size: 128, offset: 4480)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1336, file: !465, line: 520, baseType: !1537, size: 128, offset: 4608)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !922, line: 89, baseType: !1538)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !922, line: 86, size: 128, elements: !1539)
!1539 = !{!1540, !1541, !1542, !1543}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1538, file: !922, line: 87, baseType: !36, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1538, file: !922, line: 87, baseType: !36, size: 32, offset: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1538, file: !922, line: 88, baseType: !36, size: 32, offset: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1538, file: !922, line: 88, baseType: !36, size: 32, offset: 96)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1336, file: !465, line: 523, baseType: !140, size: 128, offset: 4736)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1336, file: !465, line: 524, baseType: !114, size: 16, offset: 4864)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1336, file: !465, line: 527, baseType: !114, size: 16, offset: 4880)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1336, file: !465, line: 532, baseType: !209, size: 32, offset: 4896)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1336, file: !465, line: 532, baseType: !209, size: 32, offset: 4928)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1336, file: !465, line: 534, baseType: !209, size: 32, offset: 4960)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1336, file: !465, line: 538, baseType: !209, size: 32, offset: 4992)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1336, file: !465, line: 542, baseType: !36, size: 32, offset: 5024)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1336, file: !465, line: 545, baseType: !209, size: 32, offset: 5056)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1336, file: !465, line: 545, baseType: !209, size: 32, offset: 5088)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1336, file: !465, line: 545, baseType: !209, size: 32, offset: 5120)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1336, file: !465, line: 548, baseType: !209, size: 32, offset: 5152)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1336, file: !465, line: 551, baseType: !114, size: 16, offset: 5184)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1336, file: !465, line: 551, baseType: !114, size: 16, offset: 5200)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1336, file: !465, line: 551, baseType: !114, size: 16, offset: 5216)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1336, file: !465, line: 551, baseType: !114, size: 16, offset: 5232)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1336, file: !465, line: 552, baseType: !114, size: 16, offset: 5248)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1336, file: !465, line: 552, baseType: !114, size: 16, offset: 5264)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1336, file: !465, line: 553, baseType: !209, size: 32, offset: 5280)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1336, file: !465, line: 553, baseType: !209, size: 32, offset: 5312)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1336, file: !465, line: 554, baseType: !114, size: 16, offset: 5344)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1336, file: !465, line: 554, baseType: !114, size: 16, offset: 5360)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1336, file: !465, line: 555, baseType: !209, size: 32, offset: 5376)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1336, file: !465, line: 555, baseType: !209, size: 32, offset: 5408)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1336, file: !465, line: 558, baseType: !100, size: 8192, offset: 5440)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1336, file: !465, line: 561, baseType: !36, size: 32, offset: 13632)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1336, file: !465, line: 562, baseType: !114, size: 16, offset: 13664)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1336, file: !465, line: 562, baseType: !114, size: 16, offset: 13680)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1336, file: !465, line: 565, baseType: !1573, size: 6144, offset: 13696)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 6144, elements: !1574)
!1574 = !{!1575}
!1575 = !DISubrange(count: 768)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1336, file: !465, line: 568, baseType: !348, size: 128, offset: 19840)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1336, file: !465, line: 569, baseType: !348, size: 128, offset: 19968)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1336, file: !465, line: 572, baseType: !101, size: 8, offset: 20096)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1336, file: !465, line: 573, baseType: !101, size: 8, offset: 20104)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1336, file: !465, line: 574, baseType: !101, size: 8, offset: 20112)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1336, file: !465, line: 575, baseType: !1121, size: 40, offset: 20120)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1336, file: !465, line: 578, baseType: !36, size: 32, offset: 20160)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1336, file: !465, line: 579, baseType: !114, size: 16, offset: 20192)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1336, file: !465, line: 580, baseType: !114, size: 16, offset: 20208)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1336, file: !465, line: 581, baseType: !209, size: 32, offset: 20224)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1336, file: !465, line: 582, baseType: !209, size: 32, offset: 20256)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1336, file: !465, line: 585, baseType: !114, size: 16, offset: 20288)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1336, file: !465, line: 585, baseType: !114, size: 16, offset: 20304)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1336, file: !465, line: 586, baseType: !209, size: 32, offset: 20320)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1336, file: !465, line: 589, baseType: !114, size: 16, offset: 20352)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1336, file: !465, line: 589, baseType: !114, size: 16, offset: 20368)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1336, file: !465, line: 590, baseType: !36, size: 32, offset: 20384)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1336, file: !465, line: 593, baseType: !114, size: 16, offset: 20416)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1336, file: !465, line: 593, baseType: !114, size: 16, offset: 20432)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1336, file: !465, line: 594, baseType: !114, size: 16, offset: 20448)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1336, file: !465, line: 594, baseType: !114, size: 16, offset: 20464)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1336, file: !465, line: 595, baseType: !209, size: 32, offset: 20480)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1336, file: !465, line: 596, baseType: !209, size: 32, offset: 20512)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1336, file: !465, line: 597, baseType: !1600, size: 64, offset: 20544)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !165, line: 205, flags: DIFlagFwdDecl)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1336, file: !465, line: 600, baseType: !36, size: 32, offset: 20608)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1336, file: !465, line: 601, baseType: !209, size: 32, offset: 20640)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1336, file: !465, line: 604, baseType: !1605, size: 256, offset: 20672)
!1605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 256, elements: !380)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1336, file: !465, line: 607, baseType: !1607, size: 10880, offset: 20928)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !465, line: 364, size: 10880, elements: !1608)
!1608 = !{!1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1607, file: !465, line: 365, baseType: !1339, size: 1984)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1607, file: !465, line: 367, baseType: !100, size: 8192, offset: 1984)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1607, file: !465, line: 369, baseType: !114, size: 16, offset: 10176)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1607, file: !465, line: 369, baseType: !114, size: 16, offset: 10192)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1607, file: !465, line: 370, baseType: !114, size: 16, offset: 10208)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1607, file: !465, line: 370, baseType: !114, size: 16, offset: 10224)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1607, file: !465, line: 372, baseType: !209, size: 32, offset: 10240)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1607, file: !465, line: 373, baseType: !209, size: 32, offset: 10272)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1607, file: !465, line: 375, baseType: !1252, size: 24, offset: 10304)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1607, file: !465, line: 376, baseType: !101, size: 8, offset: 10328)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1607, file: !465, line: 378, baseType: !101, size: 8, offset: 10336)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1607, file: !465, line: 379, baseType: !1252, size: 24, offset: 10344)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1607, file: !465, line: 381, baseType: !130, size: 512, offset: 10368)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1336, file: !465, line: 609, baseType: !36, size: 32, offset: 31808)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1336, file: !465, line: 610, baseType: !36, size: 32, offset: 31840)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !464, file: !465, line: 1252, baseType: !1625, size: 256, offset: 34112)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !465, line: 158, size: 256, elements: !1626)
!1626 = !{!1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1625, file: !465, line: 159, baseType: !36, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1625, file: !465, line: 160, baseType: !209, size: 32, offset: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1625, file: !465, line: 161, baseType: !209, size: 32, offset: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1625, file: !465, line: 162, baseType: !209, size: 32, offset: 96)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1625, file: !465, line: 163, baseType: !36, size: 32, offset: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1625, file: !465, line: 164, baseType: !114, size: 16, offset: 160)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1625, file: !465, line: 165, baseType: !114, size: 16, offset: 176)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1625, file: !465, line: 166, baseType: !209, size: 32, offset: 192)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1625, file: !465, line: 167, baseType: !209, size: 32, offset: 224)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !464, file: !465, line: 1254, baseType: !140, size: 128, offset: 34368)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !464, file: !465, line: 1255, baseType: !140, size: 128, offset: 34496)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !464, file: !465, line: 1257, baseType: !80, size: 64, offset: 34624)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !464, file: !465, line: 1258, baseType: !80, size: 64, offset: 34688)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !464, file: !465, line: 1259, baseType: !80, size: 64, offset: 34752)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !464, file: !465, line: 1260, baseType: !80, size: 64, offset: 34816)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !464, file: !465, line: 1262, baseType: !80, size: 64, offset: 34880)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !464, file: !465, line: 1265, baseType: !1644, size: 64, offset: 34944)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !465, line: 1265, flags: DIFlagFwdDecl)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !464, file: !465, line: 1266, baseType: !114, size: 16, offset: 35008)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !464, file: !465, line: 1267, baseType: !114, size: 16, offset: 35024)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !464, file: !465, line: 1270, baseType: !36, size: 32, offset: 35040)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !464, file: !465, line: 1271, baseType: !140, size: 128, offset: 35072)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !464, file: !465, line: 1274, baseType: !1651, size: 128, offset: 35200)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !465, line: 650, size: 128, elements: !1652)
!1652 = !{!1653, !1654, !1655, !1656, !1657}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1651, file: !465, line: 651, baseType: !266, size: 96)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1651, file: !465, line: 652, baseType: !101, size: 8, offset: 96)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1651, file: !465, line: 652, baseType: !101, size: 8, offset: 104)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1651, file: !465, line: 652, baseType: !101, size: 8, offset: 112)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1651, file: !465, line: 652, baseType: !101, size: 8, offset: 120)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !464, file: !465, line: 1275, baseType: !1659, size: 1472, offset: 35328)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !465, line: 676, size: 1472, elements: !1660)
!1660 = !{!1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1673, !1683, !1684, !1685, !1686, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1659, file: !465, line: 679, baseType: !1651, size: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1659, file: !465, line: 680, baseType: !114, size: 16, offset: 128)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1659, file: !465, line: 680, baseType: !114, size: 16, offset: 144)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1659, file: !465, line: 680, baseType: !114, size: 16, offset: 160)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1659, file: !465, line: 680, baseType: !114, size: 16, offset: 176)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1659, file: !465, line: 681, baseType: !114, size: 16, offset: 192)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1659, file: !465, line: 681, baseType: !114, size: 16, offset: 208)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1659, file: !465, line: 681, baseType: !114, size: 16, offset: 224)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1659, file: !465, line: 681, baseType: !114, size: 16, offset: 240)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1659, file: !465, line: 682, baseType: !114, size: 16, offset: 256)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1659, file: !465, line: 682, baseType: !1672, size: 48, offset: 272)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 48, elements: !267)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1659, file: !465, line: 685, baseType: !1674, size: 192, offset: 320)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !465, line: 633, size: 192, elements: !1675)
!1675 = !{!1676, !1677, !1678, !1679, !1680, !1681, !1682}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1674, file: !465, line: 634, baseType: !114, size: 16)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1674, file: !465, line: 634, baseType: !114, size: 16, offset: 16)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1674, file: !465, line: 635, baseType: !114, size: 16, offset: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1674, file: !465, line: 635, baseType: !114, size: 16, offset: 48)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1674, file: !465, line: 636, baseType: !209, size: 32, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1674, file: !465, line: 636, baseType: !209, size: 32, offset: 96)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1674, file: !465, line: 637, baseType: !1600, size: 64, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1659, file: !465, line: 686, baseType: !114, size: 16, offset: 512)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1659, file: !465, line: 686, baseType: !114, size: 16, offset: 528)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1659, file: !465, line: 687, baseType: !209, size: 32, offset: 544)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1659, file: !465, line: 688, baseType: !1687, size: 448, offset: 576)
!1687 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !465, line: 674, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !465, line: 659, size: 448, elements: !1689)
!1689 = !{!1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1688, file: !465, line: 660, baseType: !209, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1688, file: !465, line: 661, baseType: !209, size: 32, offset: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1688, file: !465, line: 662, baseType: !209, size: 32, offset: 64)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1688, file: !465, line: 663, baseType: !209, size: 32, offset: 96)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1688, file: !465, line: 664, baseType: !209, size: 32, offset: 128)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1688, file: !465, line: 665, baseType: !209, size: 32, offset: 160)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1688, file: !465, line: 666, baseType: !209, size: 32, offset: 192)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1688, file: !465, line: 667, baseType: !209, size: 32, offset: 224)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1688, file: !465, line: 668, baseType: !209, size: 32, offset: 256)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1688, file: !465, line: 669, baseType: !209, size: 32, offset: 288)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1688, file: !465, line: 670, baseType: !36, size: 32, offset: 320)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1688, file: !465, line: 671, baseType: !209, size: 32, offset: 352)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1688, file: !465, line: 672, baseType: !209, size: 32, offset: 384)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1688, file: !465, line: 673, baseType: !114, size: 16, offset: 416)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1688, file: !465, line: 673, baseType: !114, size: 16, offset: 432)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1659, file: !465, line: 692, baseType: !209, size: 32, offset: 1024)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1659, file: !465, line: 697, baseType: !209, size: 32, offset: 1056)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1659, file: !465, line: 703, baseType: !36, size: 32, offset: 1088)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1659, file: !465, line: 704, baseType: !114, size: 16, offset: 1120)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1659, file: !465, line: 704, baseType: !114, size: 16, offset: 1136)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1659, file: !465, line: 705, baseType: !114, size: 16, offset: 1152)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1659, file: !465, line: 706, baseType: !114, size: 16, offset: 1168)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1659, file: !465, line: 707, baseType: !114, size: 16, offset: 1184)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1659, file: !465, line: 708, baseType: !114, size: 16, offset: 1200)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1659, file: !465, line: 709, baseType: !114, size: 16, offset: 1216)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1659, file: !465, line: 709, baseType: !114, size: 16, offset: 1232)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1659, file: !465, line: 709, baseType: !114, size: 16, offset: 1248)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1659, file: !465, line: 709, baseType: !114, size: 16, offset: 1264)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1659, file: !465, line: 710, baseType: !114, size: 16, offset: 1280)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1659, file: !465, line: 711, baseType: !114, size: 16, offset: 1296)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1659, file: !465, line: 712, baseType: !209, size: 32, offset: 1312)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1659, file: !465, line: 713, baseType: !209, size: 32, offset: 1344)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1659, file: !465, line: 713, baseType: !209, size: 32, offset: 1376)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1659, file: !465, line: 713, baseType: !209, size: 32, offset: 1408)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1659, file: !465, line: 713, baseType: !209, size: 32, offset: 1440)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !464, file: !465, line: 1278, baseType: !1726, size: 64, offset: 36800)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !465, line: 1197, size: 64, elements: !1727)
!1727 = !{!1728, !1729, !1730, !1731}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1726, file: !465, line: 1199, baseType: !209, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1726, file: !465, line: 1200, baseType: !101, size: 8, offset: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1726, file: !465, line: 1201, baseType: !101, size: 8, offset: 40)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1726, file: !465, line: 1202, baseType: !114, size: 16, offset: 48)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !464, file: !465, line: 1281, baseType: !971, size: 64, offset: 36864)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !464, file: !465, line: 1284, baseType: !1734, size: 192, offset: 36928)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !465, line: 1208, size: 192, elements: !1735)
!1735 = !{!1736, !1737, !1738, !1739}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1734, file: !465, line: 1209, baseType: !266, size: 96)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1734, file: !465, line: 1210, baseType: !36, size: 32, offset: 96)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1734, file: !465, line: 1210, baseType: !36, size: 32, offset: 128)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1734, file: !465, line: 1210, baseType: !36, size: 32, offset: 160)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !464, file: !465, line: 1287, baseType: !1741, size: 64, offset: 37120)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !465, line: 62, flags: DIFlagFwdDecl)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !464, file: !465, line: 1289, baseType: !1744, size: 64, offset: 37184)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1745, line: 27, baseType: !1746)
!1745 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1746 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1747, line: 45, baseType: !1748)
!1747 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1748 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !464, file: !465, line: 1290, baseType: !1744, size: 64, offset: 37248)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !464, file: !465, line: 1293, baseType: !1359, size: 1280, offset: 37312)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !464, file: !465, line: 1294, baseType: !1409, size: 512, offset: 38592)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !464, file: !465, line: 1295, baseType: !1185, size: 512, offset: 39104)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !464, file: !465, line: 1298, baseType: !1754, size: 64, offset: 39616)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !465, line: 1298, flags: DIFlagFwdDecl)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !459, file: !460, line: 53, baseType: !36, size: 32, offset: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !459, file: !460, line: 54, baseType: !36, size: 32, offset: 96)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !459, file: !460, line: 55, baseType: !36, size: 32, offset: 128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !459, file: !460, line: 55, baseType: !36, size: 32, offset: 160)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !459, file: !460, line: 56, baseType: !101, size: 8, offset: 192)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !459, file: !460, line: 56, baseType: !101, size: 8, offset: 200)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !459, file: !460, line: 57, baseType: !101, size: 8, offset: 208)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !459, file: !460, line: 57, baseType: !101, size: 8, offset: 216)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !459, file: !460, line: 59, baseType: !114, size: 16, offset: 224)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !459, file: !460, line: 59, baseType: !114, size: 16, offset: 240)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !459, file: !460, line: 59, baseType: !114, size: 16, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !459, file: !460, line: 61, baseType: !114, size: 16, offset: 272)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !459, file: !460, line: 63, baseType: !36, size: 32, offset: 288)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !405, file: !358, line: 248, baseType: !572, size: 64, offset: 2688)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !405, file: !358, line: 249, baseType: !546, size: 64, offset: 2752)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !405, file: !358, line: 250, baseType: !1136, size: 64, offset: 2816)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !405, file: !358, line: 251, baseType: !356, size: 64, offset: 2880)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !405, file: !358, line: 252, baseType: !1774, size: 64, offset: 2944)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !358, line: 122, size: 1600, elements: !1776)
!1776 = !{!1777, !1778, !1779, !1781, !1784, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1775, file: !358, line: 123, baseType: !401, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1775, file: !358, line: 124, baseType: !1136, size: 64, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1775, file: !358, line: 125, baseType: !1780, size: 384, offset: 128)
!1780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !809, size: 384, elements: !1356)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1775, file: !358, line: 126, baseType: !1782, size: 512, offset: 512)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 512, elements: !1783)
!1783 = !{!350, !350}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1775, file: !358, line: 127, baseType: !1785, size: 288, offset: 1024)
!1785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 288, elements: !1786)
!1786 = !{!268, !268}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1775, file: !358, line: 128, baseType: !114, size: 16, offset: 1312)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1775, file: !358, line: 128, baseType: !114, size: 16, offset: 1328)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1775, file: !358, line: 129, baseType: !209, size: 32, offset: 1344)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1775, file: !358, line: 129, baseType: !209, size: 32, offset: 1376)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1775, file: !358, line: 130, baseType: !209, size: 32, offset: 1408)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1775, file: !358, line: 131, baseType: !7, size: 32, offset: 1440)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1775, file: !358, line: 132, baseType: !114, size: 16, offset: 1472)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1775, file: !358, line: 132, baseType: !114, size: 16, offset: 1488)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1775, file: !358, line: 133, baseType: !36, size: 32, offset: 1504)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1775, file: !358, line: 133, baseType: !36, size: 32, offset: 1536)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1775, file: !358, line: 134, baseType: !114, size: 16, offset: 1568)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1775, file: !358, line: 134, baseType: !114, size: 16, offset: 1584)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !405, file: !358, line: 253, baseType: !556, size: 64, offset: 3008)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !405, file: !358, line: 254, baseType: !1801, size: 64, offset: 3072)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !358, line: 137, size: 832, elements: !1803)
!1803 = !{!1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1802, file: !358, line: 138, baseType: !114, size: 16)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1802, file: !358, line: 140, baseType: !114, size: 16, offset: 16)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1802, file: !358, line: 141, baseType: !209, size: 32, offset: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1802, file: !358, line: 142, baseType: !209, size: 32, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1802, file: !358, line: 143, baseType: !114, size: 16, offset: 96)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1802, file: !358, line: 144, baseType: !114, size: 16, offset: 112)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1802, file: !358, line: 145, baseType: !36, size: 32, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1802, file: !358, line: 147, baseType: !36, size: 32, offset: 160)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1802, file: !358, line: 149, baseType: !401, size: 64, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1802, file: !358, line: 150, baseType: !36, size: 32, offset: 256)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1802, file: !358, line: 151, baseType: !114, size: 16, offset: 288)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1802, file: !358, line: 152, baseType: !114, size: 16, offset: 304)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1802, file: !358, line: 154, baseType: !80, size: 64, offset: 320)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1802, file: !358, line: 155, baseType: !543, size: 64, offset: 384)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1802, file: !358, line: 157, baseType: !209, size: 32, offset: 448)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1802, file: !358, line: 158, baseType: !114, size: 16, offset: 480)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1802, file: !358, line: 159, baseType: !114, size: 16, offset: 496)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1802, file: !358, line: 160, baseType: !114, size: 16, offset: 512)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1802, file: !358, line: 161, baseType: !1672, size: 48, offset: 528)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1802, file: !358, line: 162, baseType: !209, size: 32, offset: 576)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1802, file: !358, line: 164, baseType: !209, size: 32, offset: 608)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1802, file: !358, line: 164, baseType: !209, size: 32, offset: 640)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1802, file: !358, line: 164, baseType: !209, size: 32, offset: 672)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1802, file: !358, line: 165, baseType: !356, size: 64, offset: 704)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1802, file: !358, line: 167, baseType: !1369, size: 64, offset: 768)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !405, file: !358, line: 255, baseType: !1830, size: 64, offset: 3136)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !358, line: 170, size: 8704, elements: !1832)
!1832 = !{!1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1831, file: !358, line: 171, baseType: !1095, size: 96)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1831, file: !358, line: 172, baseType: !36, size: 32, offset: 96)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1831, file: !358, line: 173, baseType: !114, size: 16, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1831, file: !358, line: 174, baseType: !114, size: 16, offset: 144)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1831, file: !358, line: 175, baseType: !114, size: 16, offset: 160)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1831, file: !358, line: 176, baseType: !114, size: 16, offset: 176)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1831, file: !358, line: 177, baseType: !114, size: 16, offset: 192)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1831, file: !358, line: 178, baseType: !114, size: 16, offset: 208)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1831, file: !358, line: 179, baseType: !36, size: 32, offset: 224)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1831, file: !358, line: 181, baseType: !401, size: 64, offset: 256)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1831, file: !358, line: 182, baseType: !209, size: 32, offset: 320)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1831, file: !358, line: 183, baseType: !36, size: 32, offset: 352)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1831, file: !358, line: 184, baseType: !100, size: 8192, offset: 384)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1831, file: !358, line: 187, baseType: !543, size: 64, offset: 8576)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1831, file: !358, line: 188, baseType: !36, size: 32, offset: 8640)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1831, file: !358, line: 189, baseType: !36, size: 32, offset: 8672)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !405, file: !358, line: 256, baseType: !1850, size: 64, offset: 3200)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !358, line: 193, size: 640, elements: !1852)
!1852 = !{!1853, !1854, !1855, !1856}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1851, file: !358, line: 194, baseType: !401, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1851, file: !358, line: 195, baseType: !130, size: 512, offset: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1851, file: !358, line: 197, baseType: !36, size: 32, offset: 576)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1851, file: !358, line: 198, baseType: !36, size: 32, offset: 608)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !405, file: !358, line: 258, baseType: !101, size: 8, offset: 3264)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !405, file: !358, line: 259, baseType: !1191, size: 56, offset: 3272)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !394, file: !358, line: 62, baseType: !130, size: 512, offset: 192)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !394, file: !358, line: 64, baseType: !101, size: 8, offset: 704)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !394, file: !358, line: 64, baseType: !101, size: 8, offset: 712)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !394, file: !358, line: 64, baseType: !101, size: 8, offset: 720)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !394, file: !358, line: 64, baseType: !101, size: 8, offset: 728)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !394, file: !358, line: 65, baseType: !266, size: 96, offset: 736)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !394, file: !358, line: 65, baseType: !266, size: 96, offset: 832)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !394, file: !358, line: 65, baseType: !209, size: 32, offset: 928)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !394, file: !358, line: 67, baseType: !114, size: 16, offset: 960)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !394, file: !358, line: 67, baseType: !114, size: 16, offset: 976)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !394, file: !358, line: 67, baseType: !114, size: 16, offset: 992)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !394, file: !358, line: 67, baseType: !114, size: 16, offset: 1008)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !394, file: !358, line: 68, baseType: !114, size: 16, offset: 1024)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !394, file: !358, line: 68, baseType: !114, size: 16, offset: 1040)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !394, file: !358, line: 69, baseType: !101, size: 8, offset: 1056)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !394, file: !358, line: 69, baseType: !1191, size: 56, offset: 1064)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !394, file: !358, line: 70, baseType: !209, size: 32, offset: 1120)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !394, file: !358, line: 70, baseType: !209, size: 32, offset: 1152)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !394, file: !358, line: 70, baseType: !209, size: 32, offset: 1184)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !394, file: !358, line: 70, baseType: !209, size: 32, offset: 1216)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !394, file: !358, line: 71, baseType: !209, size: 32, offset: 1248)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !394, file: !358, line: 71, baseType: !209, size: 32, offset: 1280)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !394, file: !358, line: 74, baseType: !209, size: 32, offset: 1312)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !394, file: !358, line: 74, baseType: !209, size: 32, offset: 1344)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !394, file: !358, line: 77, baseType: !209, size: 32, offset: 1376)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !394, file: !358, line: 77, baseType: !209, size: 32, offset: 1408)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !394, file: !358, line: 77, baseType: !209, size: 32, offset: 1440)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !394, file: !358, line: 78, baseType: !209, size: 32, offset: 1472)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !394, file: !358, line: 78, baseType: !209, size: 32, offset: 1504)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !394, file: !358, line: 78, baseType: !209, size: 32, offset: 1536)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !394, file: !358, line: 79, baseType: !209, size: 32, offset: 1568)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !394, file: !358, line: 79, baseType: !209, size: 32, offset: 1600)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !394, file: !358, line: 79, baseType: !209, size: 32, offset: 1632)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !394, file: !358, line: 79, baseType: !209, size: 32, offset: 1664)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !394, file: !358, line: 80, baseType: !209, size: 32, offset: 1696)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !394, file: !358, line: 80, baseType: !209, size: 32, offset: 1728)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !394, file: !358, line: 80, baseType: !209, size: 32, offset: 1760)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !394, file: !358, line: 81, baseType: !209, size: 32, offset: 1792)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !394, file: !358, line: 81, baseType: !209, size: 32, offset: 1824)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !394, file: !358, line: 81, baseType: !209, size: 32, offset: 1856)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !394, file: !358, line: 82, baseType: !209, size: 32, offset: 1888)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !394, file: !358, line: 82, baseType: !209, size: 32, offset: 1920)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !394, file: !358, line: 82, baseType: !209, size: 32, offset: 1952)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !394, file: !358, line: 85, baseType: !209, size: 32, offset: 1984)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !394, file: !358, line: 85, baseType: !209, size: 32, offset: 2016)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !394, file: !358, line: 85, baseType: !209, size: 32, offset: 2048)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !394, file: !358, line: 85, baseType: !209, size: 32, offset: 2080)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !394, file: !358, line: 86, baseType: !209, size: 32, offset: 2112)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !394, file: !358, line: 86, baseType: !209, size: 32, offset: 2144)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !394, file: !358, line: 86, baseType: !209, size: 32, offset: 2176)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !394, file: !358, line: 86, baseType: !209, size: 32, offset: 2208)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !394, file: !358, line: 87, baseType: !209, size: 32, offset: 2240)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !394, file: !358, line: 87, baseType: !209, size: 32, offset: 2272)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !394, file: !358, line: 87, baseType: !209, size: 32, offset: 2304)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !394, file: !358, line: 87, baseType: !209, size: 32, offset: 2336)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !394, file: !358, line: 90, baseType: !209, size: 32, offset: 2368)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !394, file: !358, line: 93, baseType: !209, size: 32, offset: 2400)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !394, file: !358, line: 93, baseType: !209, size: 32, offset: 2432)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !394, file: !358, line: 93, baseType: !209, size: 32, offset: 2464)
!1918 = !{!1919}
!1919 = !DISubrange(count: 18)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !159, file: !158, line: 168, baseType: !572, size: 64, offset: 6144)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !159, file: !158, line: 169, baseType: !546, size: 64, offset: 6208)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !159, file: !158, line: 170, baseType: !1923, size: 64, offset: 6272)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !170, line: 46, flags: DIFlagFwdDecl)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !159, file: !158, line: 171, baseType: !556, size: 64, offset: 6336)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !159, file: !158, line: 174, baseType: !209, size: 32, offset: 6400)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !159, file: !158, line: 174, baseType: !209, size: 32, offset: 6432)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !159, file: !158, line: 174, baseType: !209, size: 32, offset: 6464)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !159, file: !158, line: 175, baseType: !209, size: 32, offset: 6496)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !159, file: !158, line: 175, baseType: !209, size: 32, offset: 6528)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !159, file: !158, line: 176, baseType: !114, size: 16, offset: 6560)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !159, file: !158, line: 176, baseType: !114, size: 16, offset: 6576)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !159, file: !158, line: 179, baseType: !266, size: 96, offset: 6592)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !159, file: !158, line: 179, baseType: !266, size: 96, offset: 6688)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !159, file: !158, line: 180, baseType: !209, size: 32, offset: 6784)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !159, file: !158, line: 180, baseType: !209, size: 32, offset: 6816)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !159, file: !158, line: 180, baseType: !209, size: 32, offset: 6848)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !159, file: !158, line: 181, baseType: !209, size: 32, offset: 6880)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !159, file: !158, line: 181, baseType: !209, size: 32, offset: 6912)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !159, file: !158, line: 182, baseType: !209, size: 32, offset: 6944)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !159, file: !158, line: 182, baseType: !209, size: 32, offset: 6976)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !159, file: !158, line: 183, baseType: !114, size: 16, offset: 7008)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !159, file: !158, line: 183, baseType: !114, size: 16, offset: 7024)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !159, file: !158, line: 185, baseType: !36, size: 32, offset: 7040)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !159, file: !158, line: 186, baseType: !114, size: 16, offset: 7072)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !159, file: !158, line: 187, baseType: !114, size: 16, offset: 7088)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !159, file: !158, line: 190, baseType: !348, size: 128, offset: 7104)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !159, file: !158, line: 191, baseType: !114, size: 16, offset: 7232)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !159, file: !158, line: 192, baseType: !114, size: 16, offset: 7248)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !159, file: !158, line: 195, baseType: !114, size: 16, offset: 7264)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !159, file: !158, line: 196, baseType: !114, size: 16, offset: 7280)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !159, file: !158, line: 197, baseType: !114, size: 16, offset: 7296)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !159, file: !158, line: 198, baseType: !1672, size: 48, offset: 7312)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !159, file: !158, line: 200, baseType: !1955, size: 64, offset: 7360)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !158, line: 86, size: 192, elements: !1957)
!1957 = !{!1958, !1959, !1960, !1961}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1956, file: !158, line: 87, baseType: !1136, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1956, file: !158, line: 88, baseType: !155, size: 64, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1956, file: !158, line: 89, baseType: !36, size: 32, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1956, file: !158, line: 90, baseType: !36, size: 32, offset: 160)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !159, file: !158, line: 202, baseType: !140, size: 128, offset: 7424)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lamp", file: !1965, line: 113, baseType: !1966)
!1965 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lamp_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lamp", file: !1965, line: 48, size: 4160, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2042, !2043}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1966, file: !1965, line: 49, baseType: !82, size: 960)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1966, file: !1965, line: 50, baseType: !163, size: 64, offset: 960)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1966, file: !1965, line: 52, baseType: !114, size: 16, offset: 1024)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1966, file: !1965, line: 52, baseType: !114, size: 16, offset: 1040)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1966, file: !1965, line: 53, baseType: !36, size: 32, offset: 1056)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1966, file: !1965, line: 55, baseType: !114, size: 16, offset: 1088)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !1966, file: !1965, line: 55, baseType: !114, size: 16, offset: 1104)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1966, file: !1965, line: 56, baseType: !209, size: 32, offset: 1120)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1966, file: !1965, line: 56, baseType: !209, size: 32, offset: 1152)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1966, file: !1965, line: 56, baseType: !209, size: 32, offset: 1184)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1966, file: !1965, line: 56, baseType: !209, size: 32, offset: 1216)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !1966, file: !1965, line: 57, baseType: !209, size: 32, offset: 1248)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !1966, file: !1965, line: 57, baseType: !209, size: 32, offset: 1280)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !1966, file: !1965, line: 57, baseType: !209, size: 32, offset: 1312)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "shdwpad", scope: !1966, file: !1965, line: 57, baseType: !209, size: 32, offset: 1344)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !1966, file: !1965, line: 59, baseType: !209, size: 32, offset: 1376)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1966, file: !1965, line: 59, baseType: !209, size: 32, offset: 1408)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "spotsize", scope: !1966, file: !1965, line: 59, baseType: !209, size: 32, offset: 1440)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "spotblend", scope: !1966, file: !1965, line: 59, baseType: !209, size: 32, offset: 1472)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !1966, file: !1965, line: 60, baseType: !209, size: 32, offset: 1504)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "att1", scope: !1966, file: !1965, line: 63, baseType: !209, size: 32, offset: 1536)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "att2", scope: !1966, file: !1965, line: 63, baseType: !209, size: 32, offset: 1568)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !1966, file: !1965, line: 64, baseType: !1369, size: 64, offset: 1600)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1966, file: !1965, line: 65, baseType: !114, size: 16, offset: 1664)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1966, file: !1965, line: 66, baseType: !114, size: 16, offset: 1680)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1966, file: !1965, line: 68, baseType: !209, size: 32, offset: 1696)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1966, file: !1965, line: 68, baseType: !209, size: 32, offset: 1728)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !1966, file: !1965, line: 69, baseType: !209, size: 32, offset: 1760)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1966, file: !1965, line: 69, baseType: !209, size: 32, offset: 1792)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !1966, file: !1965, line: 69, baseType: !209, size: 32, offset: 1824)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "bleedbias", scope: !1966, file: !1965, line: 69, baseType: !209, size: 32, offset: 1856)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1966, file: !1965, line: 69, baseType: !209, size: 32, offset: 1888)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !1966, file: !1965, line: 70, baseType: !114, size: 16, offset: 1920)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !1966, file: !1965, line: 70, baseType: !114, size: 16, offset: 1936)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !1966, file: !1965, line: 70, baseType: !114, size: 16, offset: 1952)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1966, file: !1965, line: 70, baseType: !114, size: 16, offset: 1968)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !1966, file: !1965, line: 71, baseType: !101, size: 8, offset: 1984)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !1966, file: !1965, line: 71, baseType: !101, size: 8, offset: 1992)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !1966, file: !1965, line: 73, baseType: !114, size: 16, offset: 2000)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !1966, file: !1965, line: 73, baseType: !114, size: 16, offset: 2016)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !1966, file: !1965, line: 73, baseType: !114, size: 16, offset: 2032)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !1966, file: !1965, line: 74, baseType: !114, size: 16, offset: 2048)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !1966, file: !1965, line: 75, baseType: !114, size: 16, offset: 2064)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !1966, file: !1965, line: 76, baseType: !209, size: 32, offset: 2080)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !1966, file: !1965, line: 76, baseType: !209, size: 32, offset: 2112)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !1966, file: !1965, line: 76, baseType: !209, size: 32, offset: 2144)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !1966, file: !1965, line: 77, baseType: !209, size: 32, offset: 2176)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !1966, file: !1965, line: 78, baseType: !114, size: 16, offset: 2208)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "shadowmap_type", scope: !1966, file: !1965, line: 79, baseType: !114, size: 16, offset: 2224)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !1966, file: !1965, line: 82, baseType: !114, size: 16, offset: 2240)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !1966, file: !1965, line: 82, baseType: !114, size: 16, offset: 2256)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "sun_effect_type", scope: !1966, file: !1965, line: 85, baseType: !114, size: 16, offset: 2272)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !1966, file: !1965, line: 86, baseType: !114, size: 16, offset: 2288)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !1966, file: !1965, line: 87, baseType: !209, size: 32, offset: 2304)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !1966, file: !1965, line: 88, baseType: !209, size: 32, offset: 2336)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !1966, file: !1965, line: 89, baseType: !209, size: 32, offset: 2368)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !1966, file: !1965, line: 90, baseType: !209, size: 32, offset: 2400)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !1966, file: !1965, line: 91, baseType: !209, size: 32, offset: 2432)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "sun_intensity", scope: !1966, file: !1965, line: 92, baseType: !209, size: 32, offset: 2464)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "atm_turbidity", scope: !1966, file: !1965, line: 93, baseType: !209, size: 32, offset: 2496)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "atm_inscattering_factor", scope: !1966, file: !1965, line: 94, baseType: !209, size: 32, offset: 2528)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "atm_extinction_factor", scope: !1966, file: !1965, line: 95, baseType: !209, size: 32, offset: 2560)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "atm_distance_factor", scope: !1966, file: !1965, line: 96, baseType: !209, size: 32, offset: 2592)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !1966, file: !1965, line: 97, baseType: !209, size: 32, offset: 2624)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !1966, file: !1965, line: 98, baseType: !209, size: 32, offset: 2656)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "shadow_frustum_size", scope: !1966, file: !1965, line: 99, baseType: !209, size: 32, offset: 2688)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !1966, file: !1965, line: 100, baseType: !114, size: 16, offset: 2720)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1966, file: !1965, line: 101, baseType: !1320, size: 16, offset: 2736)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1966, file: !1965, line: 103, baseType: !546, size: 64, offset: 2752)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1966, file: !1965, line: 104, baseType: !392, size: 1152, offset: 2816)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !1966, file: !1965, line: 105, baseType: !114, size: 16, offset: 3968)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1966, file: !1965, line: 105, baseType: !114, size: 16, offset: 3984)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1966, file: !1965, line: 106, baseType: !2041, size: 32, offset: 4000)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 32, elements: !349)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1966, file: !1965, line: 109, baseType: !556, size: 64, offset: 4032)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1966, file: !1965, line: 112, baseType: !572, size: 64, offset: 4096)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !473, line: 131, baseType: !472)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !358, line: 261, baseType: !405)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !465, line: 1299, baseType: !464)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreestyleLineStyle", file: !2052, line: 454, baseType: !2053)
!2052 = !DIFile(filename: "blender/source/blender/makesdna/DNA_linestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleLineStyle", file: !2052, line: 421, size: 3712, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2053, file: !2052, line: 422, baseType: !82, size: 960)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2053, file: !2052, line: 423, baseType: !163, size: 64, offset: 960)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2053, file: !2052, line: 425, baseType: !209, size: 32, offset: 1024)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2053, file: !2052, line: 425, baseType: !209, size: 32, offset: 1056)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2053, file: !2052, line: 425, baseType: !209, size: 32, offset: 1088)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2053, file: !2052, line: 425, baseType: !209, size: 32, offset: 1120)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "thickness", scope: !2053, file: !2052, line: 426, baseType: !209, size: 32, offset: 1152)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_position", scope: !2053, file: !2052, line: 427, baseType: !36, size: 32, offset: 1184)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_ratio", scope: !2053, file: !2052, line: 428, baseType: !209, size: 32, offset: 1216)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2053, file: !2052, line: 429, baseType: !36, size: 32, offset: 1248)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !2053, file: !2052, line: 429, baseType: !36, size: 32, offset: 1280)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "chaining", scope: !2053, file: !2052, line: 430, baseType: !36, size: 32, offset: 1312)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "rounds", scope: !2053, file: !2052, line: 431, baseType: !7, size: 32, offset: 1344)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "split_length", scope: !2053, file: !2052, line: 432, baseType: !209, size: 32, offset: 1376)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "min_angle", scope: !2053, file: !2052, line: 433, baseType: !209, size: 32, offset: 1408)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "max_angle", scope: !2053, file: !2052, line: 433, baseType: !209, size: 32, offset: 1440)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "min_length", scope: !2053, file: !2052, line: 434, baseType: !209, size: 32, offset: 1472)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "max_length", scope: !2053, file: !2052, line: 434, baseType: !209, size: 32, offset: 1504)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "chain_count", scope: !2053, file: !2052, line: 435, baseType: !7, size: 32, offset: 1536)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash1", scope: !2053, file: !2052, line: 436, baseType: !2075, size: 16, offset: 1568)
!2075 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap1", scope: !2053, file: !2052, line: 436, baseType: !2075, size: 16, offset: 1584)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash2", scope: !2053, file: !2052, line: 437, baseType: !2075, size: 16, offset: 1600)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap2", scope: !2053, file: !2052, line: 437, baseType: !2075, size: 16, offset: 1616)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash3", scope: !2053, file: !2052, line: 438, baseType: !2075, size: 16, offset: 1632)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap3", scope: !2053, file: !2052, line: 438, baseType: !2075, size: 16, offset: 1648)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "sort_key", scope: !2053, file: !2052, line: 439, baseType: !36, size: 32, offset: 1664)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "integration_type", scope: !2053, file: !2052, line: 439, baseType: !36, size: 32, offset: 1696)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "texstep", scope: !2053, file: !2052, line: 440, baseType: !209, size: 32, offset: 1728)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !2053, file: !2052, line: 441, baseType: !114, size: 16, offset: 1760)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !2053, file: !2052, line: 441, baseType: !114, size: 16, offset: 1776)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2053, file: !2052, line: 442, baseType: !114, size: 16, offset: 1792)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2053, file: !2052, line: 442, baseType: !1672, size: 48, offset: 1808)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "dash1", scope: !2053, file: !2052, line: 443, baseType: !2075, size: 16, offset: 1856)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "gap1", scope: !2053, file: !2052, line: 443, baseType: !2075, size: 16, offset: 1872)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "dash2", scope: !2053, file: !2052, line: 443, baseType: !2075, size: 16, offset: 1888)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "gap2", scope: !2053, file: !2052, line: 443, baseType: !2075, size: 16, offset: 1904)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "dash3", scope: !2053, file: !2052, line: 443, baseType: !2075, size: 16, offset: 1920)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "gap3", scope: !2053, file: !2052, line: 443, baseType: !2075, size: 16, offset: 1936)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !2053, file: !2052, line: 444, baseType: !36, size: 32, offset: 1952)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2053, file: !2052, line: 446, baseType: !392, size: 1152, offset: 1984)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2053, file: !2052, line: 448, baseType: !572, size: 64, offset: 3136)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "color_modifiers", scope: !2053, file: !2052, line: 450, baseType: !140, size: 128, offset: 3200)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_modifiers", scope: !2053, file: !2052, line: 451, baseType: !140, size: 128, offset: 3328)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_modifiers", scope: !2053, file: !2052, line: 452, baseType: !140, size: 128, offset: 3456)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "geometry_modifiers", scope: !2053, file: !2052, line: 453, baseType: !140, size: 128, offset: 3584)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTree", file: !6, line: 391, baseType: !573)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashValFreeFP", file: !999, line: 46, baseType: !152)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketValueRGBA", file: !6, line: 457, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketValueRGBA", file: !6, line: 455, size: 128, elements: !2107)
!2107 = !{!2108}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2106, file: !6, line: 456, baseType: !348, size: 128)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketValueFloat", file: !6, line: 442, baseType: !2111)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketValueFloat", file: !6, line: 438, size: 128, elements: !2112)
!2112 = !{!2113, !2114, !2115, !2116}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !2111, file: !6, line: 439, baseType: !36, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2111, file: !6, line: 440, baseType: !209, size: 32, offset: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2111, file: !6, line: 441, baseType: !209, size: 32, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2111, file: !6, line: 441, baseType: !209, size: 32, offset: 96)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gh_Entry", file: !999, line: 94, size: 192, elements: !2119)
!2119 = !{!2120, !2121, !2122}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2118, file: !999, line: 94, baseType: !80, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2118, file: !999, line: 94, baseType: !80, size: 64, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2118, file: !999, line: 94, baseType: !80, size: 64, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !792)
!2126 = !{!2127, !2129, !2131, !2134, !2137, !0, !2140, !2142, !2144}
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "NODE_INSTANCE_KEY_BASE", scope: !2, file: !3, line: 2648, type: !2125, isLocal: false, isDefinition: true)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "NODE_INSTANCE_KEY_NONE", scope: !2, file: !3, line: 2649, type: !2125, isLocal: false, isDefinition: true)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "NodeTreeTypeUndefined", scope: !2, file: !3, line: 75, type: !2133, isLocal: false, isDefinition: true)
!2133 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTreeType", file: !29, line: 315, baseType: !579)
!2134 = !DIGlobalVariableExpression(var: !2135, expr: !DIExpression())
!2135 = distinct !DIGlobalVariable(name: "NodeTypeUndefined", scope: !2, file: !3, line: 76, type: !2136, isLocal: false, isDefinition: true)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeType", file: !29, line: 221, baseType: !606)
!2137 = !DIGlobalVariableExpression(var: !2138, expr: !DIExpression())
!2138 = distinct !DIGlobalVariable(name: "NodeSocketTypeUndefined", scope: !2, file: !3, line: 77, type: !2139, isLocal: false, isDefinition: true)
!2139 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketType", file: !29, line: 133, baseType: !658)
!2140 = !DIGlobalVariableExpression(var: !2141, expr: !DIExpression())
!2141 = distinct !DIGlobalVariable(name: "nodetypes_hash", scope: !2, file: !3, line: 288, type: !997, isLocal: true, isDefinition: true)
!2142 = !DIGlobalVariableExpression(var: !2143, expr: !DIExpression())
!2143 = distinct !DIGlobalVariable(name: "nodesockettypes_hash", scope: !2, file: !3, line: 289, type: !997, isLocal: true, isDefinition: true)
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "node_clipboard", scope: !2, file: !3, line: 2522, type: !2146, isLocal: true, isDefinition: true)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClipboard", file: !3, line: 2520, baseType: !2147)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeClipboard", file: !3, line: 2511, size: 448, elements: !2148)
!2148 = !{!2149, !2150, !2151, !2152}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2147, file: !3, line: 2512, baseType: !140, size: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "nodes_extra_info", scope: !2147, file: !3, line: 2515, baseType: !140, size: 128, offset: 128)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !2147, file: !3, line: 2518, baseType: !140, size: 128, offset: 256)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2147, file: !3, line: 2519, baseType: !36, size: 32, offset: 384)
!2153 = !{i32 7, !"Dwarf Version", i32 4}
!2154 = !{i32 2, !"Debug Info Version", i32 3}
!2155 = !{i32 1, !"wchar_size", i32 4}
!2156 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2157 = distinct !DISubprogram(name: "ntreeSetTypes", scope: !3, file: !3, line: 262, type: !2158, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{null, !786, !2101}
!2160 = !{}
!2161 = !DILocalVariable(name: "C", arg: 1, scope: !2157, file: !3, line: 262, type: !786)
!2162 = !DILocation(line: 262, column: 43, scope: !2157)
!2163 = !DILocalVariable(name: "ntree", arg: 2, scope: !2157, file: !3, line: 262, type: !2101)
!2164 = !DILocation(line: 262, column: 57, scope: !2157)
!2165 = !DILocalVariable(name: "node", scope: !2157, file: !3, line: 264, type: !755)
!2166 = !DILocation(line: 264, column: 9, scope: !2157)
!2167 = !DILocalVariable(name: "sock", scope: !2157, file: !3, line: 265, type: !759)
!2168 = !DILocation(line: 265, column: 15, scope: !2157)
!2169 = !DILocation(line: 267, column: 2, scope: !2157)
!2170 = !DILocation(line: 267, column: 9, scope: !2157)
!2171 = !DILocation(line: 267, column: 14, scope: !2157)
!2172 = !DILocation(line: 269, column: 21, scope: !2157)
!2173 = !DILocation(line: 269, column: 42, scope: !2157)
!2174 = !DILocation(line: 269, column: 49, scope: !2157)
!2175 = !DILocation(line: 269, column: 28, scope: !2157)
!2176 = !DILocation(line: 269, column: 2, scope: !2157)
!2177 = !DILocation(line: 271, column: 14, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2157, file: !3, line: 271, column: 2)
!2179 = !DILocation(line: 271, column: 21, scope: !2178)
!2180 = !DILocation(line: 271, column: 27, scope: !2178)
!2181 = !DILocation(line: 271, column: 12, scope: !2178)
!2182 = !DILocation(line: 271, column: 7, scope: !2178)
!2183 = !DILocation(line: 271, column: 34, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 271, column: 2)
!2185 = !DILocation(line: 271, column: 2, scope: !2178)
!2186 = !DILocation(line: 272, column: 21, scope: !2187)
!2187 = distinct !DILexicalBlock(scope: !2184, file: !3, line: 271, column: 59)
!2188 = !DILocation(line: 272, column: 24, scope: !2187)
!2189 = !DILocation(line: 272, column: 31, scope: !2187)
!2190 = !DILocation(line: 272, column: 50, scope: !2187)
!2191 = !DILocation(line: 272, column: 56, scope: !2187)
!2192 = !DILocation(line: 272, column: 37, scope: !2187)
!2193 = !DILocation(line: 272, column: 3, scope: !2187)
!2194 = !DILocation(line: 274, column: 15, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2187, file: !3, line: 274, column: 3)
!2196 = !DILocation(line: 274, column: 21, scope: !2195)
!2197 = !DILocation(line: 274, column: 28, scope: !2195)
!2198 = !DILocation(line: 274, column: 13, scope: !2195)
!2199 = !DILocation(line: 274, column: 8, scope: !2195)
!2200 = !DILocation(line: 274, column: 35, scope: !2201)
!2201 = distinct !DILexicalBlock(scope: !2195, file: !3, line: 274, column: 3)
!2202 = !DILocation(line: 274, column: 3, scope: !2195)
!2203 = !DILocation(line: 275, column: 29, scope: !2201)
!2204 = !DILocation(line: 275, column: 36, scope: !2201)
!2205 = !DILocation(line: 275, column: 61, scope: !2201)
!2206 = !DILocation(line: 275, column: 67, scope: !2201)
!2207 = !DILocation(line: 275, column: 42, scope: !2201)
!2208 = !DILocation(line: 275, column: 4, scope: !2201)
!2209 = !DILocation(line: 274, column: 48, scope: !2201)
!2210 = !DILocation(line: 274, column: 54, scope: !2201)
!2211 = !DILocation(line: 274, column: 46, scope: !2201)
!2212 = !DILocation(line: 274, column: 3, scope: !2201)
!2213 = distinct !{!2213, !2202, !2214}
!2214 = !DILocation(line: 275, column: 74, scope: !2195)
!2215 = !DILocation(line: 276, column: 15, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2187, file: !3, line: 276, column: 3)
!2217 = !DILocation(line: 276, column: 21, scope: !2216)
!2218 = !DILocation(line: 276, column: 29, scope: !2216)
!2219 = !DILocation(line: 276, column: 13, scope: !2216)
!2220 = !DILocation(line: 276, column: 8, scope: !2216)
!2221 = !DILocation(line: 276, column: 36, scope: !2222)
!2222 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 276, column: 3)
!2223 = !DILocation(line: 276, column: 3, scope: !2216)
!2224 = !DILocation(line: 277, column: 29, scope: !2222)
!2225 = !DILocation(line: 277, column: 36, scope: !2222)
!2226 = !DILocation(line: 277, column: 61, scope: !2222)
!2227 = !DILocation(line: 277, column: 67, scope: !2222)
!2228 = !DILocation(line: 277, column: 42, scope: !2222)
!2229 = !DILocation(line: 277, column: 4, scope: !2222)
!2230 = !DILocation(line: 276, column: 49, scope: !2222)
!2231 = !DILocation(line: 276, column: 55, scope: !2222)
!2232 = !DILocation(line: 276, column: 47, scope: !2222)
!2233 = !DILocation(line: 276, column: 3, scope: !2222)
!2234 = distinct !{!2234, !2223, !2235}
!2235 = !DILocation(line: 277, column: 74, scope: !2216)
!2236 = !DILocation(line: 278, column: 2, scope: !2187)
!2237 = !DILocation(line: 271, column: 47, scope: !2184)
!2238 = !DILocation(line: 271, column: 53, scope: !2184)
!2239 = !DILocation(line: 271, column: 45, scope: !2184)
!2240 = !DILocation(line: 271, column: 2, scope: !2184)
!2241 = distinct !{!2241, !2185, !2242}
!2242 = !DILocation(line: 278, column: 2, scope: !2178)
!2243 = !DILocation(line: 280, column: 14, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2157, file: !3, line: 280, column: 2)
!2245 = !DILocation(line: 280, column: 21, scope: !2244)
!2246 = !DILocation(line: 280, column: 28, scope: !2244)
!2247 = !DILocation(line: 280, column: 12, scope: !2244)
!2248 = !DILocation(line: 280, column: 7, scope: !2244)
!2249 = !DILocation(line: 280, column: 35, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2244, file: !3, line: 280, column: 2)
!2251 = !DILocation(line: 280, column: 2, scope: !2244)
!2252 = !DILocation(line: 281, column: 28, scope: !2250)
!2253 = !DILocation(line: 281, column: 35, scope: !2250)
!2254 = !DILocation(line: 281, column: 60, scope: !2250)
!2255 = !DILocation(line: 281, column: 66, scope: !2250)
!2256 = !DILocation(line: 281, column: 41, scope: !2250)
!2257 = !DILocation(line: 281, column: 3, scope: !2250)
!2258 = !DILocation(line: 280, column: 48, scope: !2250)
!2259 = !DILocation(line: 280, column: 54, scope: !2250)
!2260 = !DILocation(line: 280, column: 46, scope: !2250)
!2261 = !DILocation(line: 280, column: 2, scope: !2250)
!2262 = distinct !{!2262, !2251, !2263}
!2263 = !DILocation(line: 281, column: 73, scope: !2244)
!2264 = !DILocation(line: 282, column: 14, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2157, file: !3, line: 282, column: 2)
!2266 = !DILocation(line: 282, column: 21, scope: !2265)
!2267 = !DILocation(line: 282, column: 29, scope: !2265)
!2268 = !DILocation(line: 282, column: 12, scope: !2265)
!2269 = !DILocation(line: 282, column: 7, scope: !2265)
!2270 = !DILocation(line: 282, column: 36, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !2265, file: !3, line: 282, column: 2)
!2272 = !DILocation(line: 282, column: 2, scope: !2265)
!2273 = !DILocation(line: 283, column: 28, scope: !2271)
!2274 = !DILocation(line: 283, column: 35, scope: !2271)
!2275 = !DILocation(line: 283, column: 60, scope: !2271)
!2276 = !DILocation(line: 283, column: 66, scope: !2271)
!2277 = !DILocation(line: 283, column: 41, scope: !2271)
!2278 = !DILocation(line: 283, column: 3, scope: !2271)
!2279 = !DILocation(line: 282, column: 49, scope: !2271)
!2280 = !DILocation(line: 282, column: 55, scope: !2271)
!2281 = !DILocation(line: 282, column: 47, scope: !2271)
!2282 = !DILocation(line: 282, column: 2, scope: !2271)
!2283 = distinct !{!2283, !2272, !2284}
!2284 = !DILocation(line: 283, column: 73, scope: !2265)
!2285 = !DILocation(line: 284, column: 1, scope: !2157)
!2286 = distinct !DISubprogram(name: "ntree_set_typeinfo", scope: !3, file: !3, line: 158, type: !2287, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{null, !2101, !2289}
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2290 = !DILocalVariable(name: "ntree", arg: 1, scope: !2286, file: !3, line: 158, type: !2101)
!2291 = !DILocation(line: 158, column: 43, scope: !2286)
!2292 = !DILocalVariable(name: "typeinfo", arg: 2, scope: !2286, file: !3, line: 158, type: !2289)
!2293 = !DILocation(line: 158, column: 65, scope: !2286)
!2294 = !DILocation(line: 160, column: 6, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 160, column: 6)
!2296 = !DILocation(line: 160, column: 6, scope: !2286)
!2297 = !DILocation(line: 161, column: 21, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2295, file: !3, line: 160, column: 16)
!2299 = !DILocation(line: 161, column: 3, scope: !2298)
!2300 = !DILocation(line: 161, column: 10, scope: !2298)
!2301 = !DILocation(line: 161, column: 19, scope: !2298)
!2302 = !DILocation(line: 164, column: 17, scope: !2298)
!2303 = !DILocation(line: 164, column: 27, scope: !2298)
!2304 = !DILocation(line: 164, column: 3, scope: !2298)
!2305 = !DILocation(line: 164, column: 10, scope: !2298)
!2306 = !DILocation(line: 164, column: 15, scope: !2298)
!2307 = !DILocation(line: 165, column: 2, scope: !2298)
!2308 = !DILocation(line: 167, column: 3, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2295, file: !3, line: 166, column: 7)
!2310 = !DILocation(line: 167, column: 10, scope: !2309)
!2311 = !DILocation(line: 167, column: 19, scope: !2309)
!2312 = !DILocation(line: 169, column: 3, scope: !2309)
!2313 = !DILocation(line: 169, column: 10, scope: !2309)
!2314 = !DILocation(line: 169, column: 15, scope: !2309)
!2315 = !DILocation(line: 171, column: 1, scope: !2286)
!2316 = distinct !DISubprogram(name: "ntreeTypeFind", scope: !3, file: !3, line: 291, type: !2317, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!578, !681}
!2319 = !DILocalVariable(name: "idname", arg: 1, scope: !2316, file: !3, line: 291, type: !681)
!2320 = !DILocation(line: 291, column: 42, scope: !2316)
!2321 = !DILocalVariable(name: "nt", scope: !2316, file: !3, line: 293, type: !2289)
!2322 = !DILocation(line: 293, column: 17, scope: !2316)
!2323 = !DILocation(line: 295, column: 6, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2316, file: !3, line: 295, column: 6)
!2325 = !DILocation(line: 295, column: 6, scope: !2316)
!2326 = !DILocation(line: 296, column: 25, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 295, column: 17)
!2328 = !DILocation(line: 296, column: 45, scope: !2327)
!2329 = !DILocation(line: 296, column: 8, scope: !2327)
!2330 = !DILocation(line: 296, column: 6, scope: !2327)
!2331 = !DILocation(line: 297, column: 7, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !2327, file: !3, line: 297, column: 7)
!2333 = !DILocation(line: 297, column: 7, scope: !2327)
!2334 = !DILocation(line: 298, column: 11, scope: !2332)
!2335 = !DILocation(line: 298, column: 4, scope: !2332)
!2336 = !DILocation(line: 299, column: 2, scope: !2327)
!2337 = !DILocation(line: 301, column: 2, scope: !2316)
!2338 = !DILocation(line: 302, column: 1, scope: !2316)
!2339 = distinct !DISubprogram(name: "node_set_typeinfo", scope: !3, file: !3, line: 173, type: !2340, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2340 = !DISubroutineType(types: !2341)
!2341 = !{null, !786, !2101, !755, !2342}
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2343 = !DILocalVariable(name: "C", arg: 1, scope: !2339, file: !3, line: 173, type: !786)
!2344 = !DILocation(line: 173, column: 54, scope: !2339)
!2345 = !DILocalVariable(name: "ntree", arg: 2, scope: !2339, file: !3, line: 173, type: !2101)
!2346 = !DILocation(line: 173, column: 68, scope: !2339)
!2347 = !DILocalVariable(name: "node", arg: 3, scope: !2339, file: !3, line: 173, type: !755)
!2348 = !DILocation(line: 173, column: 82, scope: !2339)
!2349 = !DILocalVariable(name: "typeinfo", arg: 4, scope: !2339, file: !3, line: 173, type: !2342)
!2350 = !DILocation(line: 173, column: 99, scope: !2339)
!2351 = !DILocation(line: 176, column: 6, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2339, file: !3, line: 176, column: 6)
!2353 = !DILocation(line: 176, column: 12, scope: !2352)
!2354 = !DILocation(line: 176, column: 17, scope: !2352)
!2355 = !DILocation(line: 176, column: 6, scope: !2339)
!2356 = !DILocation(line: 177, column: 7, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2358, file: !3, line: 177, column: 7)
!2358 = distinct !DILexicalBlock(scope: !2352, file: !3, line: 176, column: 30)
!2359 = !DILocation(line: 177, column: 16, scope: !2357)
!2360 = !DILocation(line: 177, column: 19, scope: !2357)
!2361 = !DILocation(line: 177, column: 29, scope: !2357)
!2362 = !DILocation(line: 177, column: 44, scope: !2357)
!2363 = !DILocation(line: 177, column: 48, scope: !2357)
!2364 = !DILocation(line: 177, column: 54, scope: !2357)
!2365 = !DILocation(line: 177, column: 7, scope: !2358)
!2366 = !DILocation(line: 178, column: 13, scope: !2357)
!2367 = !DILocation(line: 178, column: 4, scope: !2357)
!2368 = !DILocation(line: 179, column: 2, scope: !2358)
!2369 = !DILocation(line: 181, column: 6, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2339, file: !3, line: 181, column: 6)
!2371 = !DILocation(line: 181, column: 6, scope: !2339)
!2372 = !DILocation(line: 182, column: 20, scope: !2373)
!2373 = distinct !DILexicalBlock(scope: !2370, file: !3, line: 181, column: 16)
!2374 = !DILocation(line: 182, column: 3, scope: !2373)
!2375 = !DILocation(line: 182, column: 9, scope: !2373)
!2376 = !DILocation(line: 182, column: 18, scope: !2373)
!2377 = !DILocation(line: 185, column: 16, scope: !2373)
!2378 = !DILocation(line: 185, column: 26, scope: !2373)
!2379 = !DILocation(line: 185, column: 3, scope: !2373)
!2380 = !DILocation(line: 185, column: 9, scope: !2373)
!2381 = !DILocation(line: 185, column: 14, scope: !2373)
!2382 = !DILocation(line: 188, column: 13, scope: !2373)
!2383 = !DILocation(line: 188, column: 16, scope: !2373)
!2384 = !DILocation(line: 188, column: 23, scope: !2373)
!2385 = !DILocation(line: 188, column: 3, scope: !2373)
!2386 = !DILocation(line: 189, column: 2, scope: !2373)
!2387 = !DILocation(line: 191, column: 3, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2370, file: !3, line: 190, column: 7)
!2389 = !DILocation(line: 191, column: 9, scope: !2388)
!2390 = !DILocation(line: 191, column: 18, scope: !2388)
!2391 = !DILocation(line: 193, column: 3, scope: !2388)
!2392 = !DILocation(line: 193, column: 10, scope: !2388)
!2393 = !DILocation(line: 193, column: 15, scope: !2388)
!2394 = !DILocation(line: 195, column: 1, scope: !2339)
!2395 = distinct !DISubprogram(name: "nodeTypeFind", scope: !3, file: !3, line: 335, type: !2396, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{!605, !681}
!2398 = !DILocalVariable(name: "idname", arg: 1, scope: !2395, file: !3, line: 335, type: !681)
!2399 = !DILocation(line: 335, column: 37, scope: !2395)
!2400 = !DILocalVariable(name: "nt", scope: !2395, file: !3, line: 337, type: !2342)
!2401 = !DILocation(line: 337, column: 13, scope: !2395)
!2402 = !DILocation(line: 339, column: 6, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2395, file: !3, line: 339, column: 6)
!2404 = !DILocation(line: 339, column: 6, scope: !2395)
!2405 = !DILocation(line: 340, column: 25, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2403, file: !3, line: 339, column: 17)
!2407 = !DILocation(line: 340, column: 41, scope: !2406)
!2408 = !DILocation(line: 340, column: 8, scope: !2406)
!2409 = !DILocation(line: 340, column: 6, scope: !2406)
!2410 = !DILocation(line: 341, column: 7, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2406, file: !3, line: 341, column: 7)
!2412 = !DILocation(line: 341, column: 7, scope: !2406)
!2413 = !DILocation(line: 342, column: 11, scope: !2411)
!2414 = !DILocation(line: 342, column: 4, scope: !2411)
!2415 = !DILocation(line: 343, column: 2, scope: !2406)
!2416 = !DILocation(line: 345, column: 2, scope: !2395)
!2417 = !DILocation(line: 346, column: 1, scope: !2395)
!2418 = distinct !DISubprogram(name: "node_socket_set_typeinfo", scope: !3, file: !3, line: 197, type: !2419, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2419 = !DISubroutineType(types: !2420)
!2420 = !{null, !2101, !759, !2421}
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2422 = !DILocalVariable(name: "ntree", arg: 1, scope: !2418, file: !3, line: 197, type: !2101)
!2423 = !DILocation(line: 197, column: 49, scope: !2418)
!2424 = !DILocalVariable(name: "sock", arg: 2, scope: !2418, file: !3, line: 197, type: !759)
!2425 = !DILocation(line: 197, column: 69, scope: !2418)
!2426 = !DILocalVariable(name: "typeinfo", arg: 3, scope: !2418, file: !3, line: 197, type: !2421)
!2427 = !DILocation(line: 197, column: 92, scope: !2418)
!2428 = !DILocation(line: 199, column: 6, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2418, file: !3, line: 199, column: 6)
!2430 = !DILocation(line: 199, column: 6, scope: !2418)
!2431 = !DILocation(line: 200, column: 20, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2429, file: !3, line: 199, column: 16)
!2433 = !DILocation(line: 200, column: 3, scope: !2432)
!2434 = !DILocation(line: 200, column: 9, scope: !2432)
!2435 = !DILocation(line: 200, column: 18, scope: !2432)
!2436 = !DILocation(line: 203, column: 16, scope: !2432)
!2437 = !DILocation(line: 203, column: 26, scope: !2432)
!2438 = !DILocation(line: 203, column: 3, scope: !2432)
!2439 = !DILocation(line: 203, column: 9, scope: !2432)
!2440 = !DILocation(line: 203, column: 14, scope: !2432)
!2441 = !DILocation(line: 205, column: 7, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2432, file: !3, line: 205, column: 7)
!2443 = !DILocation(line: 205, column: 13, scope: !2442)
!2444 = !DILocation(line: 205, column: 27, scope: !2442)
!2445 = !DILocation(line: 205, column: 7, scope: !2432)
!2446 = !DILocation(line: 207, column: 35, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2442, file: !3, line: 205, column: 36)
!2448 = !DILocation(line: 207, column: 4, scope: !2447)
!2449 = !DILocation(line: 208, column: 3, scope: !2447)
!2450 = !DILocation(line: 209, column: 2, scope: !2432)
!2451 = !DILocation(line: 211, column: 3, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2429, file: !3, line: 210, column: 7)
!2453 = !DILocation(line: 211, column: 9, scope: !2452)
!2454 = !DILocation(line: 211, column: 18, scope: !2452)
!2455 = !DILocation(line: 213, column: 3, scope: !2452)
!2456 = !DILocation(line: 213, column: 10, scope: !2452)
!2457 = !DILocation(line: 213, column: 15, scope: !2452)
!2458 = !DILocation(line: 215, column: 1, scope: !2418)
!2459 = distinct !DISubprogram(name: "nodeSocketTypeFind", scope: !3, file: !3, line: 401, type: !2460, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{!657, !681}
!2462 = !DILocalVariable(name: "idname", arg: 1, scope: !2459, file: !3, line: 401, type: !681)
!2463 = !DILocation(line: 401, column: 49, scope: !2459)
!2464 = !DILocalVariable(name: "st", scope: !2459, file: !3, line: 403, type: !2421)
!2465 = !DILocation(line: 403, column: 19, scope: !2459)
!2466 = !DILocation(line: 405, column: 6, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2459, file: !3, line: 405, column: 6)
!2468 = !DILocation(line: 405, column: 6, scope: !2459)
!2469 = !DILocation(line: 406, column: 25, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2467, file: !3, line: 405, column: 17)
!2471 = !DILocation(line: 406, column: 47, scope: !2470)
!2472 = !DILocation(line: 406, column: 8, scope: !2470)
!2473 = !DILocation(line: 406, column: 6, scope: !2470)
!2474 = !DILocation(line: 407, column: 7, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2470, file: !3, line: 407, column: 7)
!2476 = !DILocation(line: 407, column: 7, scope: !2470)
!2477 = !DILocation(line: 408, column: 11, scope: !2475)
!2478 = !DILocation(line: 408, column: 4, scope: !2475)
!2479 = !DILocation(line: 409, column: 2, scope: !2470)
!2480 = !DILocation(line: 411, column: 2, scope: !2459)
!2481 = !DILocation(line: 412, column: 1, scope: !2459)
!2482 = distinct !DISubprogram(name: "ntreeTypeAdd", scope: !3, file: !3, line: 304, type: !2483, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{null, !2289}
!2485 = !DILocalVariable(name: "nt", arg: 1, scope: !2482, file: !3, line: 304, type: !2289)
!2486 = !DILocation(line: 304, column: 34, scope: !2482)
!2487 = !DILocation(line: 306, column: 19, scope: !2482)
!2488 = !DILocation(line: 306, column: 47, scope: !2482)
!2489 = !DILocation(line: 306, column: 51, scope: !2482)
!2490 = !DILocation(line: 306, column: 59, scope: !2482)
!2491 = !DILocation(line: 306, column: 2, scope: !2482)
!2492 = !DILocation(line: 308, column: 20, scope: !2482)
!2493 = !DILocation(line: 308, column: 32, scope: !2482)
!2494 = !DILocation(line: 308, column: 2, scope: !2482)
!2495 = !DILocation(line: 309, column: 1, scope: !2482)
!2496 = distinct !DISubprogram(name: "update_typeinfo", scope: !3, file: !3, line: 218, type: !2497, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{null, !2499, !786, !2289, !2342, !2421, !1074}
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !2501, line: 104, baseType: !2502)
!2501 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !2501, line: 53, size: 15232, elements: !2503)
!2503 = !{!2504, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2557}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2502, file: !2501, line: 54, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2502, file: !2501, line: 54, baseType: !2505, size: 64, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2502, file: !2501, line: 55, baseType: !100, size: 8192, offset: 128)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !2502, file: !2501, line: 56, baseType: !114, size: 16, offset: 8320)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !2502, file: !2501, line: 56, baseType: !114, size: 16, offset: 8336)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !2502, file: !2501, line: 57, baseType: !114, size: 16, offset: 8352)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !2502, file: !2501, line: 57, baseType: !114, size: 16, offset: 8368)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !2502, file: !2501, line: 58, baseType: !1744, size: 64, offset: 8384)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !2502, file: !2501, line: 59, baseType: !2514, size: 128, offset: 8448)
!2514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 128, elements: !2515)
!2515 = !{!2516}
!2516 = !DISubrange(count: 16)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !2502, file: !2501, line: 60, baseType: !114, size: 16, offset: 8576)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !2502, file: !2501, line: 62, baseType: !91, size: 64, offset: 8640)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2502, file: !2501, line: 63, baseType: !140, size: 128, offset: 8704)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !2502, file: !2501, line: 64, baseType: !140, size: 128, offset: 8832)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2502, file: !2501, line: 65, baseType: !140, size: 128, offset: 8960)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !2502, file: !2501, line: 66, baseType: !140, size: 128, offset: 9088)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2502, file: !2501, line: 67, baseType: !140, size: 128, offset: 9216)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !2502, file: !2501, line: 68, baseType: !140, size: 128, offset: 9344)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2502, file: !2501, line: 69, baseType: !140, size: 128, offset: 9472)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2502, file: !2501, line: 70, baseType: !140, size: 128, offset: 9600)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2502, file: !2501, line: 71, baseType: !140, size: 128, offset: 9728)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !2502, file: !2501, line: 72, baseType: !140, size: 128, offset: 9856)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !2502, file: !2501, line: 73, baseType: !140, size: 128, offset: 9984)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2502, file: !2501, line: 74, baseType: !140, size: 128, offset: 10112)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2502, file: !2501, line: 75, baseType: !140, size: 128, offset: 10240)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2502, file: !2501, line: 76, baseType: !140, size: 128, offset: 10368)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !2502, file: !2501, line: 77, baseType: !140, size: 128, offset: 10496)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2502, file: !2501, line: 78, baseType: !140, size: 128, offset: 10624)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !2502, file: !2501, line: 79, baseType: !140, size: 128, offset: 10752)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2502, file: !2501, line: 80, baseType: !140, size: 128, offset: 10880)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2502, file: !2501, line: 81, baseType: !140, size: 128, offset: 11008)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !2502, file: !2501, line: 82, baseType: !140, size: 128, offset: 11136)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2502, file: !2501, line: 83, baseType: !140, size: 128, offset: 11264)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2502, file: !2501, line: 84, baseType: !140, size: 128, offset: 11392)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !2502, file: !2501, line: 85, baseType: !140, size: 128, offset: 11520)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2502, file: !2501, line: 86, baseType: !140, size: 128, offset: 11648)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2502, file: !2501, line: 87, baseType: !140, size: 128, offset: 11776)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2502, file: !2501, line: 88, baseType: !140, size: 128, offset: 11904)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2502, file: !2501, line: 89, baseType: !140, size: 128, offset: 12032)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !2502, file: !2501, line: 90, baseType: !140, size: 128, offset: 12160)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !2502, file: !2501, line: 91, baseType: !140, size: 128, offset: 12288)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !2502, file: !2501, line: 92, baseType: !140, size: 128, offset: 12416)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !2502, file: !2501, line: 93, baseType: !140, size: 128, offset: 12544)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !2502, file: !2501, line: 94, baseType: !140, size: 128, offset: 12672)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2502, file: !2501, line: 95, baseType: !140, size: 128, offset: 12800)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !2502, file: !2501, line: 96, baseType: !140, size: 128, offset: 12928)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !2502, file: !2501, line: 98, baseType: !585, size: 2048, offset: 13056)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !2502, file: !2501, line: 101, baseType: !2555, size: 64, offset: 15104)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !2501, line: 49, flags: DIFlagFwdDecl)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2502, file: !2501, line: 103, baseType: !2558, size: 64, offset: 15168)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !2501, line: 51, flags: DIFlagFwdDecl)
!2560 = !DILocalVariable(name: "bmain", arg: 1, scope: !2496, file: !3, line: 218, type: !2499)
!2561 = !DILocation(line: 218, column: 35, scope: !2496)
!2562 = !DILocalVariable(name: "C", arg: 2, scope: !2496, file: !3, line: 218, type: !786)
!2563 = !DILocation(line: 218, column: 65, scope: !2496)
!2564 = !DILocalVariable(name: "treetype", arg: 3, scope: !2496, file: !3, line: 218, type: !2289)
!2565 = !DILocation(line: 218, column: 83, scope: !2496)
!2566 = !DILocalVariable(name: "nodetype", arg: 4, scope: !2496, file: !3, line: 218, type: !2342)
!2567 = !DILocation(line: 218, column: 104, scope: !2496)
!2568 = !DILocalVariable(name: "socktype", arg: 5, scope: !2496, file: !3, line: 218, type: !2421)
!2569 = !DILocation(line: 218, column: 131, scope: !2496)
!2570 = !DILocalVariable(name: "unregister", arg: 6, scope: !2496, file: !3, line: 218, type: !1074)
!2571 = !DILocation(line: 218, column: 146, scope: !2496)
!2572 = !DILocation(line: 220, column: 7, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2496, file: !3, line: 220, column: 6)
!2574 = !DILocation(line: 220, column: 6, scope: !2496)
!2575 = !DILocation(line: 221, column: 3, scope: !2573)
!2576 = !DILocalVariable(name: "_nstore", scope: !2577, file: !3, line: 223, type: !2578)
!2577 = distinct !DILexicalBlock(scope: !2496, file: !3, line: 223, column: 2)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NodeTreeIterStore", file: !29, line: 632, size: 448, elements: !2579)
!2579 = !{!2580, !2581, !2582, !2583, !2584, !2585, !2586}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ngroup", scope: !2578, file: !29, line: 633, baseType: !2101, size: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2578, file: !29, line: 634, baseType: !2048, size: 64, offset: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2578, file: !29, line: 635, baseType: !156, size: 64, offset: 128)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2578, file: !29, line: 636, baseType: !2046, size: 64, offset: 192)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !2578, file: !29, line: 637, baseType: !1963, size: 64, offset: 256)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !2578, file: !29, line: 638, baseType: !2044, size: 64, offset: 320)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !2578, file: !29, line: 639, baseType: !2050, size: 64, offset: 384)
!2587 = !DILocation(line: 223, column: 2, scope: !2577)
!2588 = !DILocalVariable(name: "ntree", scope: !2577, file: !3, line: 223, type: !2101)
!2589 = !DILocalVariable(name: "id", scope: !2577, file: !3, line: 223, type: !81)
!2590 = !DILocation(line: 223, column: 2, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2592, file: !3, line: 223, column: 2)
!2592 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 223, column: 2)
!2593 = !DILocation(line: 223, column: 2, scope: !2592)
!2594 = !DILocalVariable(name: "node", scope: !2595, file: !3, line: 224, type: !755)
!2595 = distinct !DILexicalBlock(scope: !2596, file: !3, line: 223, column: 37)
!2596 = distinct !DILexicalBlock(scope: !2591, file: !3, line: 223, column: 2)
!2597 = !DILocation(line: 224, column: 10, scope: !2595)
!2598 = !DILocalVariable(name: "sock", scope: !2595, file: !3, line: 225, type: !759)
!2599 = !DILocation(line: 225, column: 16, scope: !2595)
!2600 = !DILocation(line: 227, column: 3, scope: !2595)
!2601 = !DILocation(line: 227, column: 10, scope: !2595)
!2602 = !DILocation(line: 227, column: 15, scope: !2595)
!2603 = !DILocation(line: 229, column: 7, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 229, column: 7)
!2605 = !DILocation(line: 229, column: 16, scope: !2604)
!2606 = !DILocation(line: 229, column: 19, scope: !2604)
!2607 = !DILocation(line: 229, column: 7, scope: !2595)
!2608 = !DILocation(line: 230, column: 23, scope: !2604)
!2609 = !DILocation(line: 230, column: 30, scope: !2604)
!2610 = !DILocation(line: 230, column: 50, scope: !2604)
!2611 = !DILocation(line: 230, column: 4, scope: !2604)
!2612 = !DILocation(line: 233, column: 15, scope: !2613)
!2613 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 233, column: 3)
!2614 = !DILocation(line: 233, column: 22, scope: !2613)
!2615 = !DILocation(line: 233, column: 28, scope: !2613)
!2616 = !DILocation(line: 233, column: 13, scope: !2613)
!2617 = !DILocation(line: 233, column: 8, scope: !2613)
!2618 = !DILocation(line: 233, column: 35, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2613, file: !3, line: 233, column: 3)
!2620 = !DILocation(line: 233, column: 3, scope: !2613)
!2621 = !DILocation(line: 234, column: 8, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2623, file: !3, line: 234, column: 8)
!2623 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 233, column: 60)
!2624 = !DILocation(line: 234, column: 17, scope: !2622)
!2625 = !DILocation(line: 234, column: 20, scope: !2622)
!2626 = !DILocation(line: 234, column: 8, scope: !2623)
!2627 = !DILocation(line: 235, column: 23, scope: !2622)
!2628 = !DILocation(line: 235, column: 26, scope: !2622)
!2629 = !DILocation(line: 235, column: 33, scope: !2622)
!2630 = !DILocation(line: 235, column: 39, scope: !2622)
!2631 = !DILocation(line: 235, column: 59, scope: !2622)
!2632 = !DILocation(line: 235, column: 5, scope: !2622)
!2633 = !DILocation(line: 238, column: 16, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2623, file: !3, line: 238, column: 4)
!2635 = !DILocation(line: 238, column: 22, scope: !2634)
!2636 = !DILocation(line: 238, column: 29, scope: !2634)
!2637 = !DILocation(line: 238, column: 14, scope: !2634)
!2638 = !DILocation(line: 238, column: 9, scope: !2634)
!2639 = !DILocation(line: 238, column: 36, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 238, column: 4)
!2641 = !DILocation(line: 238, column: 4, scope: !2634)
!2642 = !DILocation(line: 239, column: 9, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2640, file: !3, line: 239, column: 9)
!2644 = !DILocation(line: 239, column: 18, scope: !2643)
!2645 = !DILocation(line: 239, column: 21, scope: !2643)
!2646 = !DILocation(line: 239, column: 9, scope: !2640)
!2647 = !DILocation(line: 240, column: 31, scope: !2643)
!2648 = !DILocation(line: 240, column: 38, scope: !2643)
!2649 = !DILocation(line: 240, column: 44, scope: !2643)
!2650 = !DILocation(line: 240, column: 64, scope: !2643)
!2651 = !DILocation(line: 240, column: 6, scope: !2643)
!2652 = !DILocation(line: 238, column: 49, scope: !2640)
!2653 = !DILocation(line: 238, column: 55, scope: !2640)
!2654 = !DILocation(line: 238, column: 47, scope: !2640)
!2655 = !DILocation(line: 238, column: 4, scope: !2640)
!2656 = distinct !{!2656, !2641, !2657}
!2657 = !DILocation(line: 240, column: 72, scope: !2634)
!2658 = !DILocation(line: 241, column: 16, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2623, file: !3, line: 241, column: 4)
!2660 = !DILocation(line: 241, column: 22, scope: !2659)
!2661 = !DILocation(line: 241, column: 30, scope: !2659)
!2662 = !DILocation(line: 241, column: 14, scope: !2659)
!2663 = !DILocation(line: 241, column: 9, scope: !2659)
!2664 = !DILocation(line: 241, column: 37, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2659, file: !3, line: 241, column: 4)
!2666 = !DILocation(line: 241, column: 4, scope: !2659)
!2667 = !DILocation(line: 242, column: 9, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2665, file: !3, line: 242, column: 9)
!2669 = !DILocation(line: 242, column: 18, scope: !2668)
!2670 = !DILocation(line: 242, column: 21, scope: !2668)
!2671 = !DILocation(line: 242, column: 9, scope: !2665)
!2672 = !DILocation(line: 243, column: 31, scope: !2668)
!2673 = !DILocation(line: 243, column: 38, scope: !2668)
!2674 = !DILocation(line: 243, column: 44, scope: !2668)
!2675 = !DILocation(line: 243, column: 64, scope: !2668)
!2676 = !DILocation(line: 243, column: 6, scope: !2668)
!2677 = !DILocation(line: 241, column: 50, scope: !2665)
!2678 = !DILocation(line: 241, column: 56, scope: !2665)
!2679 = !DILocation(line: 241, column: 48, scope: !2665)
!2680 = !DILocation(line: 241, column: 4, scope: !2665)
!2681 = distinct !{!2681, !2666, !2682}
!2682 = !DILocation(line: 243, column: 72, scope: !2659)
!2683 = !DILocation(line: 244, column: 3, scope: !2623)
!2684 = !DILocation(line: 233, column: 48, scope: !2619)
!2685 = !DILocation(line: 233, column: 54, scope: !2619)
!2686 = !DILocation(line: 233, column: 46, scope: !2619)
!2687 = !DILocation(line: 233, column: 3, scope: !2619)
!2688 = distinct !{!2688, !2620, !2689}
!2689 = !DILocation(line: 244, column: 3, scope: !2613)
!2690 = !DILocation(line: 247, column: 15, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 247, column: 3)
!2692 = !DILocation(line: 247, column: 22, scope: !2691)
!2693 = !DILocation(line: 247, column: 29, scope: !2691)
!2694 = !DILocation(line: 247, column: 13, scope: !2691)
!2695 = !DILocation(line: 247, column: 8, scope: !2691)
!2696 = !DILocation(line: 247, column: 36, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 247, column: 3)
!2698 = !DILocation(line: 247, column: 3, scope: !2691)
!2699 = !DILocation(line: 248, column: 8, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 248, column: 8)
!2701 = !DILocation(line: 248, column: 17, scope: !2700)
!2702 = !DILocation(line: 248, column: 20, scope: !2700)
!2703 = !DILocation(line: 248, column: 8, scope: !2697)
!2704 = !DILocation(line: 249, column: 30, scope: !2700)
!2705 = !DILocation(line: 249, column: 37, scope: !2700)
!2706 = !DILocation(line: 249, column: 43, scope: !2700)
!2707 = !DILocation(line: 249, column: 63, scope: !2700)
!2708 = !DILocation(line: 249, column: 5, scope: !2700)
!2709 = !DILocation(line: 247, column: 49, scope: !2697)
!2710 = !DILocation(line: 247, column: 55, scope: !2697)
!2711 = !DILocation(line: 247, column: 47, scope: !2697)
!2712 = !DILocation(line: 247, column: 3, scope: !2697)
!2713 = distinct !{!2713, !2698, !2714}
!2714 = !DILocation(line: 249, column: 71, scope: !2691)
!2715 = !DILocation(line: 250, column: 15, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 250, column: 3)
!2717 = !DILocation(line: 250, column: 22, scope: !2716)
!2718 = !DILocation(line: 250, column: 30, scope: !2716)
!2719 = !DILocation(line: 250, column: 13, scope: !2716)
!2720 = !DILocation(line: 250, column: 8, scope: !2716)
!2721 = !DILocation(line: 250, column: 37, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2716, file: !3, line: 250, column: 3)
!2723 = !DILocation(line: 250, column: 3, scope: !2716)
!2724 = !DILocation(line: 251, column: 8, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2722, file: !3, line: 251, column: 8)
!2726 = !DILocation(line: 251, column: 17, scope: !2725)
!2727 = !DILocation(line: 251, column: 20, scope: !2725)
!2728 = !DILocation(line: 251, column: 8, scope: !2722)
!2729 = !DILocation(line: 252, column: 30, scope: !2725)
!2730 = !DILocation(line: 252, column: 37, scope: !2725)
!2731 = !DILocation(line: 252, column: 43, scope: !2725)
!2732 = !DILocation(line: 252, column: 63, scope: !2725)
!2733 = !DILocation(line: 252, column: 5, scope: !2725)
!2734 = !DILocation(line: 250, column: 50, scope: !2722)
!2735 = !DILocation(line: 250, column: 56, scope: !2722)
!2736 = !DILocation(line: 250, column: 48, scope: !2722)
!2737 = !DILocation(line: 250, column: 3, scope: !2722)
!2738 = distinct !{!2738, !2723, !2739}
!2739 = !DILocation(line: 252, column: 71, scope: !2716)
!2740 = !DILocation(line: 254, column: 2, scope: !2596)
!2741 = distinct !{!2741, !2587, !2742}
!2742 = !DILocation(line: 254, column: 2, scope: !2577)
!2743 = !DILocation(line: 255, column: 1, scope: !2496)
!2744 = distinct !DISubprogram(name: "ntreeTypeFreeLink", scope: !3, file: !3, line: 320, type: !2483, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2745 = !DILocalVariable(name: "nt", arg: 1, scope: !2744, file: !3, line: 320, type: !2289)
!2746 = !DILocation(line: 320, column: 39, scope: !2744)
!2747 = !DILocation(line: 322, column: 19, scope: !2744)
!2748 = !DILocation(line: 322, column: 39, scope: !2744)
!2749 = !DILocation(line: 322, column: 43, scope: !2744)
!2750 = !DILocation(line: 322, column: 2, scope: !2744)
!2751 = !DILocation(line: 323, column: 1, scope: !2744)
!2752 = distinct !DISubprogram(name: "ntree_free_type", scope: !3, file: !3, line: 312, type: !153, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2753 = !DILocalVariable(name: "treetype_v", arg: 1, scope: !2752, file: !3, line: 312, type: !80)
!2754 = !DILocation(line: 312, column: 35, scope: !2752)
!2755 = !DILocalVariable(name: "treetype", scope: !2752, file: !3, line: 314, type: !2289)
!2756 = !DILocation(line: 314, column: 17, scope: !2752)
!2757 = !DILocation(line: 314, column: 28, scope: !2752)
!2758 = !DILocation(line: 316, column: 20, scope: !2752)
!2759 = !DILocation(line: 316, column: 32, scope: !2752)
!2760 = !DILocation(line: 316, column: 2, scope: !2752)
!2761 = !DILocation(line: 317, column: 2, scope: !2752)
!2762 = !DILocation(line: 317, column: 12, scope: !2752)
!2763 = !DILocation(line: 318, column: 1, scope: !2752)
!2764 = distinct !DISubprogram(name: "ntreeIsRegistered", scope: !3, file: !3, line: 325, type: !2765, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2765 = !DISubroutineType(types: !2766)
!2766 = !{!1074, !2101}
!2767 = !DILocalVariable(name: "ntree", arg: 1, scope: !2764, file: !3, line: 325, type: !2101)
!2768 = !DILocation(line: 325, column: 35, scope: !2764)
!2769 = !DILocation(line: 327, column: 10, scope: !2764)
!2770 = !DILocation(line: 327, column: 17, scope: !2764)
!2771 = !DILocation(line: 327, column: 26, scope: !2764)
!2772 = !DILocation(line: 327, column: 9, scope: !2764)
!2773 = !DILocation(line: 327, column: 2, scope: !2764)
!2774 = distinct !DISubprogram(name: "ntreeTypeGetIterator", scope: !3, file: !3, line: 330, type: !2775, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2775 = !DISubroutineType(types: !2776)
!2776 = !{!2777}
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 64)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GHashIterator", file: !999, line: 50, size: 192, elements: !2779)
!2779 = !{!2780, !2781, !2784}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "gh", scope: !2778, file: !999, line: 51, baseType: !997, size: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !2778, file: !999, line: 52, baseType: !2782, size: 64, offset: 64)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", file: !999, line: 52, flags: DIFlagFwdDecl)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !2778, file: !999, line: 53, baseType: !7, size: 32, offset: 128)
!2785 = !DILocation(line: 332, column: 31, scope: !2774)
!2786 = !DILocation(line: 332, column: 9, scope: !2774)
!2787 = !DILocation(line: 332, column: 2, scope: !2774)
!2788 = distinct !DISubprogram(name: "nodeRegisterType", scope: !3, file: !3, line: 375, type: !2789, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{null, !2342}
!2791 = !DILocalVariable(name: "nt", arg: 1, scope: !2788, file: !3, line: 375, type: !2342)
!2792 = !DILocation(line: 375, column: 34, scope: !2788)
!2793 = !DILocation(line: 381, column: 19, scope: !2788)
!2794 = !DILocation(line: 381, column: 43, scope: !2788)
!2795 = !DILocation(line: 381, column: 47, scope: !2788)
!2796 = !DILocation(line: 381, column: 55, scope: !2788)
!2797 = !DILocation(line: 381, column: 2, scope: !2788)
!2798 = !DILocation(line: 383, column: 20, scope: !2788)
!2799 = !DILocation(line: 383, column: 38, scope: !2788)
!2800 = !DILocation(line: 383, column: 2, scope: !2788)
!2801 = !DILocation(line: 384, column: 1, scope: !2788)
!2802 = distinct !DISubprogram(name: "nodeUnregisterType", scope: !3, file: !3, line: 386, type: !2789, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2803 = !DILocalVariable(name: "nt", arg: 1, scope: !2802, file: !3, line: 386, type: !2342)
!2804 = !DILocation(line: 386, column: 36, scope: !2802)
!2805 = !DILocation(line: 388, column: 19, scope: !2802)
!2806 = !DILocation(line: 388, column: 35, scope: !2802)
!2807 = !DILocation(line: 388, column: 39, scope: !2802)
!2808 = !DILocation(line: 388, column: 2, scope: !2802)
!2809 = !DILocation(line: 389, column: 1, scope: !2802)
!2810 = distinct !DISubprogram(name: "node_free_type", scope: !3, file: !3, line: 361, type: !153, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2811 = !DILocalVariable(name: "nodetype_v", arg: 1, scope: !2810, file: !3, line: 361, type: !80)
!2812 = !DILocation(line: 361, column: 34, scope: !2810)
!2813 = !DILocalVariable(name: "nodetype", scope: !2810, file: !3, line: 363, type: !2342)
!2814 = !DILocation(line: 363, column: 13, scope: !2810)
!2815 = !DILocation(line: 363, column: 24, scope: !2810)
!2816 = !DILocation(line: 365, column: 20, scope: !2810)
!2817 = !DILocation(line: 365, column: 38, scope: !2810)
!2818 = !DILocation(line: 365, column: 2, scope: !2810)
!2819 = !DILocation(line: 368, column: 6, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 368, column: 6)
!2821 = !DILocation(line: 368, column: 16, scope: !2820)
!2822 = !DILocation(line: 368, column: 21, scope: !2820)
!2823 = !DILocation(line: 368, column: 6, scope: !2810)
!2824 = !DILocation(line: 369, column: 25, scope: !2820)
!2825 = !DILocation(line: 369, column: 3, scope: !2820)
!2826 = !DILocation(line: 371, column: 6, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 371, column: 6)
!2828 = !DILocation(line: 371, column: 16, scope: !2827)
!2829 = !DILocation(line: 371, column: 6, scope: !2810)
!2830 = !DILocation(line: 372, column: 3, scope: !2827)
!2831 = !DILocation(line: 372, column: 13, scope: !2827)
!2832 = !DILocation(line: 373, column: 1, scope: !2810)
!2833 = distinct !DISubprogram(name: "nodeIsRegistered", scope: !3, file: !3, line: 391, type: !2834, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2834 = !DISubroutineType(types: !2835)
!2835 = !{!1074, !755}
!2836 = !DILocalVariable(name: "node", arg: 1, scope: !2833, file: !3, line: 391, type: !755)
!2837 = !DILocation(line: 391, column: 30, scope: !2833)
!2838 = !DILocation(line: 393, column: 10, scope: !2833)
!2839 = !DILocation(line: 393, column: 16, scope: !2833)
!2840 = !DILocation(line: 393, column: 25, scope: !2833)
!2841 = !DILocation(line: 393, column: 9, scope: !2833)
!2842 = !DILocation(line: 393, column: 2, scope: !2833)
!2843 = distinct !DISubprogram(name: "nodeTypeGetIterator", scope: !3, file: !3, line: 396, type: !2775, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2844 = !DILocation(line: 398, column: 31, scope: !2843)
!2845 = !DILocation(line: 398, column: 9, scope: !2843)
!2846 = !DILocation(line: 398, column: 2, scope: !2843)
!2847 = distinct !DISubprogram(name: "nodeRegisterSocketType", scope: !3, file: !3, line: 424, type: !2848, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{null, !2421}
!2850 = !DILocalVariable(name: "st", arg: 1, scope: !2847, file: !3, line: 424, type: !2421)
!2851 = !DILocation(line: 424, column: 46, scope: !2847)
!2852 = !DILocation(line: 426, column: 19, scope: !2847)
!2853 = !DILocation(line: 426, column: 49, scope: !2847)
!2854 = !DILocation(line: 426, column: 53, scope: !2847)
!2855 = !DILocation(line: 426, column: 61, scope: !2847)
!2856 = !DILocation(line: 426, column: 2, scope: !2847)
!2857 = !DILocation(line: 428, column: 20, scope: !2847)
!2858 = !DILocation(line: 428, column: 44, scope: !2847)
!2859 = !DILocation(line: 428, column: 2, scope: !2847)
!2860 = !DILocation(line: 429, column: 1, scope: !2847)
!2861 = distinct !DISubprogram(name: "nodeUnregisterSocketType", scope: !3, file: !3, line: 431, type: !2848, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2862 = !DILocalVariable(name: "st", arg: 1, scope: !2861, file: !3, line: 431, type: !2421)
!2863 = !DILocation(line: 431, column: 48, scope: !2861)
!2864 = !DILocation(line: 433, column: 19, scope: !2861)
!2865 = !DILocation(line: 433, column: 41, scope: !2861)
!2866 = !DILocation(line: 433, column: 45, scope: !2861)
!2867 = !DILocation(line: 433, column: 2, scope: !2861)
!2868 = !DILocation(line: 434, column: 1, scope: !2861)
!2869 = distinct !DISubprogram(name: "node_free_socket_type", scope: !3, file: !3, line: 415, type: !153, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2870 = !DILocalVariable(name: "socktype_v", arg: 1, scope: !2869, file: !3, line: 415, type: !80)
!2871 = !DILocation(line: 415, column: 41, scope: !2869)
!2872 = !DILocalVariable(name: "socktype", scope: !2869, file: !3, line: 417, type: !2421)
!2873 = !DILocation(line: 417, column: 19, scope: !2869)
!2874 = !DILocation(line: 417, column: 30, scope: !2869)
!2875 = !DILocation(line: 419, column: 20, scope: !2869)
!2876 = !DILocation(line: 419, column: 44, scope: !2869)
!2877 = !DILocation(line: 419, column: 2, scope: !2869)
!2878 = !DILocation(line: 421, column: 2, scope: !2869)
!2879 = !DILocation(line: 421, column: 12, scope: !2869)
!2880 = !DILocation(line: 422, column: 1, scope: !2869)
!2881 = distinct !DISubprogram(name: "nodeSocketIsRegistered", scope: !3, file: !3, line: 436, type: !2882, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{!1074, !759}
!2884 = !DILocalVariable(name: "sock", arg: 1, scope: !2881, file: !3, line: 436, type: !759)
!2885 = !DILocation(line: 436, column: 42, scope: !2881)
!2886 = !DILocation(line: 438, column: 10, scope: !2881)
!2887 = !DILocation(line: 438, column: 16, scope: !2881)
!2888 = !DILocation(line: 438, column: 25, scope: !2881)
!2889 = !DILocation(line: 438, column: 9, scope: !2881)
!2890 = !DILocation(line: 438, column: 2, scope: !2881)
!2891 = distinct !DISubprogram(name: "nodeSocketTypeGetIterator", scope: !3, file: !3, line: 441, type: !2775, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2892 = !DILocation(line: 443, column: 31, scope: !2891)
!2893 = !DILocation(line: 443, column: 9, scope: !2891)
!2894 = !DILocation(line: 443, column: 2, scope: !2891)
!2895 = distinct !DISubprogram(name: "nodeFindSocket", scope: !3, file: !3, line: 446, type: !2896, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!642, !755, !36, !681}
!2898 = !DILocalVariable(name: "node", arg: 1, scope: !2895, file: !3, line: 446, type: !755)
!2899 = !DILocation(line: 446, column: 43, scope: !2895)
!2900 = !DILocalVariable(name: "in_out", arg: 2, scope: !2895, file: !3, line: 446, type: !36)
!2901 = !DILocation(line: 446, column: 53, scope: !2895)
!2902 = !DILocalVariable(name: "identifier", arg: 3, scope: !2895, file: !3, line: 446, type: !681)
!2903 = !DILocation(line: 446, column: 73, scope: !2895)
!2904 = !DILocalVariable(name: "sock", scope: !2895, file: !3, line: 448, type: !759)
!2905 = !DILocation(line: 448, column: 15, scope: !2895)
!2906 = !DILocation(line: 448, column: 23, scope: !2895)
!2907 = !DILocation(line: 448, column: 30, scope: !2895)
!2908 = !DILocation(line: 448, column: 43, scope: !2895)
!2909 = !DILocation(line: 448, column: 49, scope: !2895)
!2910 = !DILocation(line: 448, column: 56, scope: !2895)
!2911 = !DILocation(line: 448, column: 64, scope: !2895)
!2912 = !DILocation(line: 448, column: 70, scope: !2895)
!2913 = !DILocation(line: 448, column: 78, scope: !2895)
!2914 = !DILocation(line: 448, column: 22, scope: !2895)
!2915 = !DILocation(line: 449, column: 2, scope: !2895)
!2916 = !DILocation(line: 449, column: 9, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 449, column: 2)
!2918 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 449, column: 2)
!2919 = !DILocation(line: 449, column: 2, scope: !2918)
!2920 = !DILocation(line: 450, column: 7, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 450, column: 7)
!2922 = distinct !DILexicalBlock(scope: !2917, file: !3, line: 449, column: 34)
!2923 = !DILocation(line: 450, column: 7, scope: !2922)
!2924 = !DILocation(line: 451, column: 11, scope: !2921)
!2925 = !DILocation(line: 451, column: 4, scope: !2921)
!2926 = !DILocation(line: 452, column: 2, scope: !2922)
!2927 = !DILocation(line: 449, column: 22, scope: !2917)
!2928 = !DILocation(line: 449, column: 28, scope: !2917)
!2929 = !DILocation(line: 449, column: 20, scope: !2917)
!2930 = !DILocation(line: 449, column: 2, scope: !2917)
!2931 = distinct !{!2931, !2919, !2932}
!2932 = !DILocation(line: 452, column: 2, scope: !2918)
!2933 = !DILocation(line: 453, column: 2, scope: !2895)
!2934 = !DILocation(line: 454, column: 1, scope: !2895)
!2935 = distinct !DISubprogram(name: "nodeAddSocket", scope: !3, file: !3, line: 502, type: !2936, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{!642, !2101, !755, !36, !681, !681, !681}
!2938 = !DILocalVariable(name: "ntree", arg: 1, scope: !2935, file: !3, line: 502, type: !2101)
!2939 = !DILocation(line: 502, column: 39, scope: !2935)
!2940 = !DILocalVariable(name: "node", arg: 2, scope: !2935, file: !3, line: 502, type: !755)
!2941 = !DILocation(line: 502, column: 53, scope: !2935)
!2942 = !DILocalVariable(name: "in_out", arg: 3, scope: !2935, file: !3, line: 502, type: !36)
!2943 = !DILocation(line: 502, column: 63, scope: !2935)
!2944 = !DILocalVariable(name: "idname", arg: 4, scope: !2935, file: !3, line: 502, type: !681)
!2945 = !DILocation(line: 502, column: 83, scope: !2935)
!2946 = !DILocalVariable(name: "identifier", arg: 5, scope: !2935, file: !3, line: 503, type: !681)
!2947 = !DILocation(line: 503, column: 40, scope: !2935)
!2948 = !DILocalVariable(name: "name", arg: 6, scope: !2935, file: !3, line: 503, type: !681)
!2949 = !DILocation(line: 503, column: 64, scope: !2935)
!2950 = !DILocalVariable(name: "lb", scope: !2935, file: !3, line: 505, type: !2951)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!2952 = !DILocation(line: 505, column: 12, scope: !2935)
!2953 = !DILocation(line: 505, column: 18, scope: !2935)
!2954 = !DILocation(line: 505, column: 25, scope: !2935)
!2955 = !DILocation(line: 505, column: 39, scope: !2935)
!2956 = !DILocation(line: 505, column: 45, scope: !2935)
!2957 = !DILocation(line: 505, column: 55, scope: !2935)
!2958 = !DILocation(line: 505, column: 61, scope: !2935)
!2959 = !DILocalVariable(name: "sock", scope: !2935, file: !3, line: 506, type: !759)
!2960 = !DILocation(line: 506, column: 15, scope: !2935)
!2961 = !DILocation(line: 506, column: 34, scope: !2935)
!2962 = !DILocation(line: 506, column: 41, scope: !2935)
!2963 = !DILocation(line: 506, column: 47, scope: !2935)
!2964 = !DILocation(line: 506, column: 55, scope: !2935)
!2965 = !DILocation(line: 506, column: 59, scope: !2935)
!2966 = !DILocation(line: 506, column: 67, scope: !2935)
!2967 = !DILocation(line: 506, column: 79, scope: !2935)
!2968 = !DILocation(line: 506, column: 22, scope: !2935)
!2969 = !DILocation(line: 508, column: 14, scope: !2935)
!2970 = !DILocation(line: 508, column: 18, scope: !2935)
!2971 = !DILocation(line: 508, column: 2, scope: !2935)
!2972 = !DILocation(line: 509, column: 14, scope: !2935)
!2973 = !DILocation(line: 509, column: 18, scope: !2935)
!2974 = !DILocation(line: 509, column: 2, scope: !2935)
!2975 = !DILocation(line: 511, column: 2, scope: !2935)
!2976 = !DILocation(line: 511, column: 8, scope: !2935)
!2977 = !DILocation(line: 511, column: 15, scope: !2935)
!2978 = !DILocation(line: 513, column: 9, scope: !2935)
!2979 = !DILocation(line: 513, column: 2, scope: !2935)
!2980 = distinct !DISubprogram(name: "make_socket", scope: !3, file: !3, line: 468, type: !2981, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{!759, !2101, !755, !36, !2951, !681, !681, !681}
!2983 = !DILocalVariable(name: "ntree", arg: 1, scope: !2980, file: !3, line: 468, type: !2101)
!2984 = !DILocation(line: 468, column: 44, scope: !2980)
!2985 = !DILocalVariable(name: "UNUSED_node", arg: 2, scope: !2980, file: !3, line: 468, type: !755)
!2986 = !DILocation(line: 468, column: 58, scope: !2980)
!2987 = !DILocalVariable(name: "in_out", arg: 3, scope: !2980, file: !3, line: 468, type: !36)
!2988 = !DILocation(line: 468, column: 76, scope: !2980)
!2989 = !DILocalVariable(name: "lb", arg: 4, scope: !2980, file: !3, line: 468, type: !2951)
!2990 = !DILocation(line: 468, column: 94, scope: !2980)
!2991 = !DILocalVariable(name: "idname", arg: 5, scope: !2980, file: !3, line: 469, type: !681)
!2992 = !DILocation(line: 469, column: 45, scope: !2980)
!2993 = !DILocalVariable(name: "identifier", arg: 6, scope: !2980, file: !3, line: 469, type: !681)
!2994 = !DILocation(line: 469, column: 65, scope: !2980)
!2995 = !DILocalVariable(name: "name", arg: 7, scope: !2980, file: !3, line: 469, type: !681)
!2996 = !DILocation(line: 469, column: 89, scope: !2980)
!2997 = !DILocalVariable(name: "sock", scope: !2980, file: !3, line: 471, type: !759)
!2998 = !DILocation(line: 471, column: 15, scope: !2980)
!2999 = !DILocalVariable(name: "auto_identifier", scope: !2980, file: !3, line: 472, type: !130)
!3000 = !DILocation(line: 472, column: 7, scope: !2980)
!3001 = !DILocation(line: 474, column: 6, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 474, column: 6)
!3003 = !DILocation(line: 474, column: 17, scope: !3002)
!3004 = !DILocation(line: 474, column: 20, scope: !3002)
!3005 = !DILocation(line: 474, column: 34, scope: !3002)
!3006 = !DILocation(line: 474, column: 6, scope: !2980)
!3007 = !DILocation(line: 476, column: 15, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 474, column: 43)
!3009 = !DILocation(line: 476, column: 32, scope: !3008)
!3010 = !DILocation(line: 476, column: 3, scope: !3008)
!3011 = !DILocation(line: 477, column: 2, scope: !3008)
!3012 = !DILocation(line: 480, column: 15, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 478, column: 7)
!3014 = !DILocation(line: 480, column: 32, scope: !3013)
!3015 = !DILocation(line: 480, column: 3, scope: !3013)
!3016 = !DILocation(line: 483, column: 45, scope: !2980)
!3017 = !DILocation(line: 483, column: 64, scope: !2980)
!3018 = !DILocation(line: 483, column: 2, scope: !2980)
!3019 = !DILocation(line: 485, column: 9, scope: !2980)
!3020 = !DILocation(line: 485, column: 7, scope: !2980)
!3021 = !DILocation(line: 486, column: 17, scope: !2980)
!3022 = !DILocation(line: 486, column: 2, scope: !2980)
!3023 = !DILocation(line: 486, column: 8, scope: !2980)
!3024 = !DILocation(line: 486, column: 15, scope: !2980)
!3025 = !DILocation(line: 488, column: 14, scope: !2980)
!3026 = !DILocation(line: 488, column: 20, scope: !2980)
!3027 = !DILocation(line: 488, column: 32, scope: !2980)
!3028 = !DILocation(line: 488, column: 2, scope: !2980)
!3029 = !DILocation(line: 489, column: 17, scope: !2980)
!3030 = !DILocation(line: 489, column: 24, scope: !2980)
!3031 = !DILocation(line: 489, column: 16, scope: !2980)
!3032 = !DILocation(line: 489, column: 2, scope: !2980)
!3033 = !DILocation(line: 489, column: 8, scope: !2980)
!3034 = !DILocation(line: 489, column: 14, scope: !2980)
!3035 = !DILocation(line: 491, column: 14, scope: !2980)
!3036 = !DILocation(line: 491, column: 20, scope: !2980)
!3037 = !DILocation(line: 491, column: 26, scope: !2980)
!3038 = !DILocation(line: 491, column: 2, scope: !2980)
!3039 = !DILocation(line: 492, column: 2, scope: !2980)
!3040 = !DILocation(line: 492, column: 8, scope: !2980)
!3041 = !DILocation(line: 492, column: 16, scope: !2980)
!3042 = !DILocation(line: 493, column: 2, scope: !2980)
!3043 = !DILocation(line: 493, column: 8, scope: !2980)
!3044 = !DILocation(line: 493, column: 13, scope: !2980)
!3045 = !DILocation(line: 494, column: 2, scope: !2980)
!3046 = !DILocation(line: 494, column: 8, scope: !2980)
!3047 = !DILocation(line: 494, column: 13, scope: !2980)
!3048 = !DILocation(line: 496, column: 14, scope: !2980)
!3049 = !DILocation(line: 496, column: 20, scope: !2980)
!3050 = !DILocation(line: 496, column: 28, scope: !2980)
!3051 = !DILocation(line: 496, column: 2, scope: !2980)
!3052 = !DILocation(line: 497, column: 27, scope: !2980)
!3053 = !DILocation(line: 497, column: 34, scope: !2980)
!3054 = !DILocation(line: 497, column: 59, scope: !2980)
!3055 = !DILocation(line: 497, column: 40, scope: !2980)
!3056 = !DILocation(line: 497, column: 2, scope: !2980)
!3057 = !DILocation(line: 499, column: 9, scope: !2980)
!3058 = !DILocation(line: 499, column: 2, scope: !2980)
!3059 = distinct !DISubprogram(name: "nodeInsertSocket", scope: !3, file: !3, line: 516, type: !3060, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!642, !2101, !755, !36, !681, !759, !681, !681}
!3062 = !DILocalVariable(name: "ntree", arg: 1, scope: !3059, file: !3, line: 516, type: !2101)
!3063 = !DILocation(line: 516, column: 42, scope: !3059)
!3064 = !DILocalVariable(name: "node", arg: 2, scope: !3059, file: !3, line: 516, type: !755)
!3065 = !DILocation(line: 516, column: 56, scope: !3059)
!3066 = !DILocalVariable(name: "in_out", arg: 3, scope: !3059, file: !3, line: 516, type: !36)
!3067 = !DILocation(line: 516, column: 66, scope: !3059)
!3068 = !DILocalVariable(name: "idname", arg: 4, scope: !3059, file: !3, line: 516, type: !681)
!3069 = !DILocation(line: 516, column: 86, scope: !3059)
!3070 = !DILocalVariable(name: "next_sock", arg: 5, scope: !3059, file: !3, line: 517, type: !759)
!3071 = !DILocation(line: 517, column: 44, scope: !3059)
!3072 = !DILocalVariable(name: "identifier", arg: 6, scope: !3059, file: !3, line: 517, type: !681)
!3073 = !DILocation(line: 517, column: 67, scope: !3059)
!3074 = !DILocalVariable(name: "name", arg: 7, scope: !3059, file: !3, line: 517, type: !681)
!3075 = !DILocation(line: 517, column: 91, scope: !3059)
!3076 = !DILocalVariable(name: "lb", scope: !3059, file: !3, line: 519, type: !2951)
!3077 = !DILocation(line: 519, column: 12, scope: !3059)
!3078 = !DILocation(line: 519, column: 18, scope: !3059)
!3079 = !DILocation(line: 519, column: 25, scope: !3059)
!3080 = !DILocation(line: 519, column: 39, scope: !3059)
!3081 = !DILocation(line: 519, column: 45, scope: !3059)
!3082 = !DILocation(line: 519, column: 55, scope: !3059)
!3083 = !DILocation(line: 519, column: 61, scope: !3059)
!3084 = !DILocalVariable(name: "sock", scope: !3059, file: !3, line: 520, type: !759)
!3085 = !DILocation(line: 520, column: 15, scope: !3059)
!3086 = !DILocation(line: 520, column: 34, scope: !3059)
!3087 = !DILocation(line: 520, column: 41, scope: !3059)
!3088 = !DILocation(line: 520, column: 47, scope: !3059)
!3089 = !DILocation(line: 520, column: 55, scope: !3059)
!3090 = !DILocation(line: 520, column: 59, scope: !3059)
!3091 = !DILocation(line: 520, column: 67, scope: !3059)
!3092 = !DILocation(line: 520, column: 79, scope: !3059)
!3093 = !DILocation(line: 520, column: 22, scope: !3059)
!3094 = !DILocation(line: 522, column: 14, scope: !3059)
!3095 = !DILocation(line: 522, column: 18, scope: !3059)
!3096 = !DILocation(line: 522, column: 2, scope: !3059)
!3097 = !DILocation(line: 523, column: 23, scope: !3059)
!3098 = !DILocation(line: 523, column: 27, scope: !3059)
!3099 = !DILocation(line: 523, column: 38, scope: !3059)
!3100 = !DILocation(line: 523, column: 2, scope: !3059)
!3101 = !DILocation(line: 525, column: 2, scope: !3059)
!3102 = !DILocation(line: 525, column: 8, scope: !3059)
!3103 = !DILocation(line: 525, column: 15, scope: !3059)
!3104 = !DILocation(line: 527, column: 9, scope: !3059)
!3105 = !DILocation(line: 527, column: 2, scope: !3059)
!3106 = distinct !DISubprogram(name: "nodeStaticSocketType", scope: !3, file: !3, line: 530, type: !3107, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3107 = !DISubroutineType(types: !3108)
!3108 = !{!681, !36, !36}
!3109 = !DILocalVariable(name: "type", arg: 1, scope: !3106, file: !3, line: 530, type: !36)
!3110 = !DILocation(line: 530, column: 38, scope: !3106)
!3111 = !DILocalVariable(name: "subtype", arg: 2, scope: !3106, file: !3, line: 530, type: !36)
!3112 = !DILocation(line: 530, column: 48, scope: !3106)
!3113 = !DILocation(line: 532, column: 10, scope: !3106)
!3114 = !DILocation(line: 532, column: 2, scope: !3106)
!3115 = !DILocation(line: 534, column: 12, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 532, column: 16)
!3117 = !DILocation(line: 534, column: 4, scope: !3116)
!3118 = !DILocation(line: 536, column: 6, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 534, column: 21)
!3120 = !DILocation(line: 538, column: 6, scope: !3119)
!3121 = !DILocation(line: 540, column: 6, scope: !3119)
!3122 = !DILocation(line: 542, column: 6, scope: !3119)
!3123 = !DILocation(line: 544, column: 6, scope: !3119)
!3124 = !DILocation(line: 547, column: 6, scope: !3119)
!3125 = !DILocation(line: 550, column: 12, scope: !3116)
!3126 = !DILocation(line: 550, column: 4, scope: !3116)
!3127 = !DILocation(line: 552, column: 6, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 550, column: 21)
!3129 = !DILocation(line: 554, column: 6, scope: !3128)
!3130 = !DILocation(line: 556, column: 6, scope: !3128)
!3131 = !DILocation(line: 559, column: 6, scope: !3128)
!3132 = !DILocation(line: 562, column: 4, scope: !3116)
!3133 = !DILocation(line: 564, column: 12, scope: !3116)
!3134 = !DILocation(line: 564, column: 4, scope: !3116)
!3135 = !DILocation(line: 566, column: 6, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3116, file: !3, line: 564, column: 21)
!3137 = !DILocation(line: 568, column: 6, scope: !3136)
!3138 = !DILocation(line: 570, column: 6, scope: !3136)
!3139 = !DILocation(line: 572, column: 6, scope: !3136)
!3140 = !DILocation(line: 574, column: 6, scope: !3136)
!3141 = !DILocation(line: 576, column: 6, scope: !3136)
!3142 = !DILocation(line: 579, column: 6, scope: !3136)
!3143 = !DILocation(line: 582, column: 4, scope: !3116)
!3144 = !DILocation(line: 584, column: 4, scope: !3116)
!3145 = !DILocation(line: 586, column: 4, scope: !3116)
!3146 = !DILocation(line: 588, column: 2, scope: !3106)
!3147 = !DILocation(line: 589, column: 1, scope: !3106)
!3148 = distinct !DISubprogram(name: "nodeStaticSocketInterfaceType", scope: !3, file: !3, line: 591, type: !3107, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3149 = !DILocalVariable(name: "type", arg: 1, scope: !3148, file: !3, line: 591, type: !36)
!3150 = !DILocation(line: 591, column: 47, scope: !3148)
!3151 = !DILocalVariable(name: "subtype", arg: 2, scope: !3148, file: !3, line: 591, type: !36)
!3152 = !DILocation(line: 591, column: 57, scope: !3148)
!3153 = !DILocation(line: 593, column: 10, scope: !3148)
!3154 = !DILocation(line: 593, column: 2, scope: !3148)
!3155 = !DILocation(line: 595, column: 12, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3148, file: !3, line: 593, column: 16)
!3157 = !DILocation(line: 595, column: 4, scope: !3156)
!3158 = !DILocation(line: 597, column: 6, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 595, column: 21)
!3160 = !DILocation(line: 599, column: 6, scope: !3159)
!3161 = !DILocation(line: 601, column: 6, scope: !3159)
!3162 = !DILocation(line: 603, column: 6, scope: !3159)
!3163 = !DILocation(line: 605, column: 6, scope: !3159)
!3164 = !DILocation(line: 608, column: 6, scope: !3159)
!3165 = !DILocation(line: 611, column: 12, scope: !3156)
!3166 = !DILocation(line: 611, column: 4, scope: !3156)
!3167 = !DILocation(line: 613, column: 6, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 611, column: 21)
!3169 = !DILocation(line: 615, column: 6, scope: !3168)
!3170 = !DILocation(line: 617, column: 6, scope: !3168)
!3171 = !DILocation(line: 620, column: 6, scope: !3168)
!3172 = !DILocation(line: 623, column: 4, scope: !3156)
!3173 = !DILocation(line: 625, column: 12, scope: !3156)
!3174 = !DILocation(line: 625, column: 4, scope: !3156)
!3175 = !DILocation(line: 627, column: 6, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 625, column: 21)
!3177 = !DILocation(line: 629, column: 6, scope: !3176)
!3178 = !DILocation(line: 631, column: 6, scope: !3176)
!3179 = !DILocation(line: 633, column: 6, scope: !3176)
!3180 = !DILocation(line: 635, column: 6, scope: !3176)
!3181 = !DILocation(line: 637, column: 6, scope: !3176)
!3182 = !DILocation(line: 640, column: 6, scope: !3176)
!3183 = !DILocation(line: 643, column: 4, scope: !3156)
!3184 = !DILocation(line: 645, column: 4, scope: !3156)
!3185 = !DILocation(line: 647, column: 4, scope: !3156)
!3186 = !DILocation(line: 649, column: 2, scope: !3148)
!3187 = !DILocation(line: 650, column: 1, scope: !3148)
!3188 = distinct !DISubprogram(name: "nodeAddStaticSocket", scope: !3, file: !3, line: 652, type: !3189, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{!642, !2101, !755, !36, !36, !36, !681, !681}
!3191 = !DILocalVariable(name: "ntree", arg: 1, scope: !3188, file: !3, line: 652, type: !2101)
!3192 = !DILocation(line: 652, column: 45, scope: !3188)
!3193 = !DILocalVariable(name: "node", arg: 2, scope: !3188, file: !3, line: 652, type: !755)
!3194 = !DILocation(line: 652, column: 59, scope: !3188)
!3195 = !DILocalVariable(name: "in_out", arg: 3, scope: !3188, file: !3, line: 652, type: !36)
!3196 = !DILocation(line: 652, column: 69, scope: !3188)
!3197 = !DILocalVariable(name: "type", arg: 4, scope: !3188, file: !3, line: 652, type: !36)
!3198 = !DILocation(line: 652, column: 81, scope: !3188)
!3199 = !DILocalVariable(name: "subtype", arg: 5, scope: !3188, file: !3, line: 652, type: !36)
!3200 = !DILocation(line: 652, column: 91, scope: !3188)
!3201 = !DILocalVariable(name: "identifier", arg: 6, scope: !3188, file: !3, line: 653, type: !681)
!3202 = !DILocation(line: 653, column: 46, scope: !3188)
!3203 = !DILocalVariable(name: "name", arg: 7, scope: !3188, file: !3, line: 653, type: !681)
!3204 = !DILocation(line: 653, column: 70, scope: !3188)
!3205 = !DILocalVariable(name: "idname", scope: !3188, file: !3, line: 655, type: !681)
!3206 = !DILocation(line: 655, column: 14, scope: !3188)
!3207 = !DILocation(line: 655, column: 44, scope: !3188)
!3208 = !DILocation(line: 655, column: 50, scope: !3188)
!3209 = !DILocation(line: 655, column: 23, scope: !3188)
!3210 = !DILocalVariable(name: "sock", scope: !3188, file: !3, line: 656, type: !759)
!3211 = !DILocation(line: 656, column: 15, scope: !3188)
!3212 = !DILocation(line: 658, column: 7, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 658, column: 6)
!3214 = !DILocation(line: 658, column: 6, scope: !3188)
!3215 = !DILocation(line: 659, column: 59, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3213, file: !3, line: 658, column: 15)
!3217 = !DILocation(line: 659, column: 3, scope: !3216)
!3218 = !DILocation(line: 660, column: 3, scope: !3216)
!3219 = !DILocation(line: 663, column: 23, scope: !3188)
!3220 = !DILocation(line: 663, column: 30, scope: !3188)
!3221 = !DILocation(line: 663, column: 36, scope: !3188)
!3222 = !DILocation(line: 663, column: 44, scope: !3188)
!3223 = !DILocation(line: 663, column: 52, scope: !3188)
!3224 = !DILocation(line: 663, column: 64, scope: !3188)
!3225 = !DILocation(line: 663, column: 9, scope: !3188)
!3226 = !DILocation(line: 663, column: 7, scope: !3188)
!3227 = !DILocation(line: 664, column: 15, scope: !3188)
!3228 = !DILocation(line: 664, column: 2, scope: !3188)
!3229 = !DILocation(line: 664, column: 8, scope: !3188)
!3230 = !DILocation(line: 664, column: 13, scope: !3188)
!3231 = !DILocation(line: 665, column: 9, scope: !3188)
!3232 = !DILocation(line: 665, column: 2, scope: !3188)
!3233 = !DILocation(line: 666, column: 1, scope: !3188)
!3234 = distinct !DISubprogram(name: "nodeInsertStaticSocket", scope: !3, file: !3, line: 668, type: !3235, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3235 = !DISubroutineType(types: !3236)
!3236 = !{!642, !2101, !755, !36, !36, !36, !759, !681, !681}
!3237 = !DILocalVariable(name: "ntree", arg: 1, scope: !3234, file: !3, line: 668, type: !2101)
!3238 = !DILocation(line: 668, column: 48, scope: !3234)
!3239 = !DILocalVariable(name: "node", arg: 2, scope: !3234, file: !3, line: 668, type: !755)
!3240 = !DILocation(line: 668, column: 62, scope: !3234)
!3241 = !DILocalVariable(name: "in_out", arg: 3, scope: !3234, file: !3, line: 668, type: !36)
!3242 = !DILocation(line: 668, column: 72, scope: !3234)
!3243 = !DILocalVariable(name: "type", arg: 4, scope: !3234, file: !3, line: 668, type: !36)
!3244 = !DILocation(line: 668, column: 84, scope: !3234)
!3245 = !DILocalVariable(name: "subtype", arg: 5, scope: !3234, file: !3, line: 668, type: !36)
!3246 = !DILocation(line: 668, column: 94, scope: !3234)
!3247 = !DILocalVariable(name: "next_sock", arg: 6, scope: !3234, file: !3, line: 669, type: !759)
!3248 = !DILocation(line: 669, column: 50, scope: !3234)
!3249 = !DILocalVariable(name: "identifier", arg: 7, scope: !3234, file: !3, line: 669, type: !681)
!3250 = !DILocation(line: 669, column: 73, scope: !3234)
!3251 = !DILocalVariable(name: "name", arg: 8, scope: !3234, file: !3, line: 669, type: !681)
!3252 = !DILocation(line: 669, column: 97, scope: !3234)
!3253 = !DILocalVariable(name: "idname", scope: !3234, file: !3, line: 671, type: !681)
!3254 = !DILocation(line: 671, column: 14, scope: !3234)
!3255 = !DILocation(line: 671, column: 44, scope: !3234)
!3256 = !DILocation(line: 671, column: 50, scope: !3234)
!3257 = !DILocation(line: 671, column: 23, scope: !3234)
!3258 = !DILocalVariable(name: "sock", scope: !3234, file: !3, line: 672, type: !759)
!3259 = !DILocation(line: 672, column: 15, scope: !3234)
!3260 = !DILocation(line: 674, column: 7, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 674, column: 6)
!3262 = !DILocation(line: 674, column: 6, scope: !3234)
!3263 = !DILocation(line: 675, column: 59, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 674, column: 15)
!3265 = !DILocation(line: 675, column: 3, scope: !3264)
!3266 = !DILocation(line: 676, column: 3, scope: !3264)
!3267 = !DILocation(line: 679, column: 26, scope: !3234)
!3268 = !DILocation(line: 679, column: 33, scope: !3234)
!3269 = !DILocation(line: 679, column: 39, scope: !3234)
!3270 = !DILocation(line: 679, column: 47, scope: !3234)
!3271 = !DILocation(line: 679, column: 55, scope: !3234)
!3272 = !DILocation(line: 679, column: 66, scope: !3234)
!3273 = !DILocation(line: 679, column: 78, scope: !3234)
!3274 = !DILocation(line: 679, column: 9, scope: !3234)
!3275 = !DILocation(line: 679, column: 7, scope: !3234)
!3276 = !DILocation(line: 680, column: 15, scope: !3234)
!3277 = !DILocation(line: 680, column: 2, scope: !3234)
!3278 = !DILocation(line: 680, column: 8, scope: !3234)
!3279 = !DILocation(line: 680, column: 13, scope: !3234)
!3280 = !DILocation(line: 681, column: 9, scope: !3234)
!3281 = !DILocation(line: 681, column: 2, scope: !3234)
!3282 = !DILocation(line: 682, column: 1, scope: !3234)
!3283 = distinct !DISubprogram(name: "nodeRemoveSocket", scope: !3, file: !3, line: 695, type: !3284, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3284 = !DISubroutineType(types: !3285)
!3285 = !{null, !2101, !755, !759}
!3286 = !DILocalVariable(name: "ntree", arg: 1, scope: !3283, file: !3, line: 695, type: !2101)
!3287 = !DILocation(line: 695, column: 34, scope: !3283)
!3288 = !DILocalVariable(name: "node", arg: 2, scope: !3283, file: !3, line: 695, type: !755)
!3289 = !DILocation(line: 695, column: 48, scope: !3283)
!3290 = !DILocalVariable(name: "sock", arg: 3, scope: !3283, file: !3, line: 695, type: !759)
!3291 = !DILocation(line: 695, column: 67, scope: !3283)
!3292 = !DILocalVariable(name: "link", scope: !3283, file: !3, line: 697, type: !3293)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeLink", file: !6, line: 306, baseType: !750)
!3295 = !DILocation(line: 697, column: 13, scope: !3283)
!3296 = !DILocalVariable(name: "next", scope: !3283, file: !3, line: 697, type: !3293)
!3297 = !DILocation(line: 697, column: 20, scope: !3283)
!3298 = !DILocation(line: 699, column: 14, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3283, file: !3, line: 699, column: 2)
!3300 = !DILocation(line: 699, column: 21, scope: !3299)
!3301 = !DILocation(line: 699, column: 27, scope: !3299)
!3302 = !DILocation(line: 699, column: 12, scope: !3299)
!3303 = !DILocation(line: 699, column: 7, scope: !3299)
!3304 = !DILocation(line: 699, column: 34, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3299, file: !3, line: 699, column: 2)
!3306 = !DILocation(line: 699, column: 2, scope: !3299)
!3307 = !DILocation(line: 700, column: 10, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 699, column: 53)
!3309 = !DILocation(line: 700, column: 16, scope: !3308)
!3310 = !DILocation(line: 700, column: 8, scope: !3308)
!3311 = !DILocation(line: 701, column: 7, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 701, column: 7)
!3313 = !DILocation(line: 701, column: 13, scope: !3312)
!3314 = !DILocation(line: 701, column: 25, scope: !3312)
!3315 = !DILocation(line: 701, column: 22, scope: !3312)
!3316 = !DILocation(line: 701, column: 30, scope: !3312)
!3317 = !DILocation(line: 701, column: 33, scope: !3312)
!3318 = !DILocation(line: 701, column: 39, scope: !3312)
!3319 = !DILocation(line: 701, column: 49, scope: !3312)
!3320 = !DILocation(line: 701, column: 46, scope: !3312)
!3321 = !DILocation(line: 701, column: 7, scope: !3308)
!3322 = !DILocation(line: 702, column: 16, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3312, file: !3, line: 701, column: 55)
!3324 = !DILocation(line: 702, column: 23, scope: !3323)
!3325 = !DILocation(line: 702, column: 4, scope: !3323)
!3326 = !DILocation(line: 703, column: 3, scope: !3323)
!3327 = !DILocation(line: 704, column: 2, scope: !3308)
!3328 = !DILocation(line: 699, column: 47, scope: !3305)
!3329 = !DILocation(line: 699, column: 45, scope: !3305)
!3330 = !DILocation(line: 699, column: 2, scope: !3305)
!3331 = distinct !{!3331, !3306, !3332}
!3332 = !DILocation(line: 704, column: 2, scope: !3299)
!3333 = !DILocation(line: 707, column: 15, scope: !3283)
!3334 = !DILocation(line: 707, column: 21, scope: !3283)
!3335 = !DILocation(line: 707, column: 29, scope: !3283)
!3336 = !DILocation(line: 707, column: 2, scope: !3283)
!3337 = !DILocation(line: 708, column: 15, scope: !3283)
!3338 = !DILocation(line: 708, column: 21, scope: !3283)
!3339 = !DILocation(line: 708, column: 30, scope: !3283)
!3340 = !DILocation(line: 708, column: 2, scope: !3283)
!3341 = !DILocation(line: 710, column: 19, scope: !3283)
!3342 = !DILocation(line: 710, column: 26, scope: !3283)
!3343 = !DILocation(line: 710, column: 32, scope: !3283)
!3344 = !DILocation(line: 710, column: 2, scope: !3283)
!3345 = !DILocation(line: 711, column: 2, scope: !3283)
!3346 = !DILocation(line: 711, column: 12, scope: !3283)
!3347 = !DILocation(line: 713, column: 2, scope: !3283)
!3348 = !DILocation(line: 713, column: 8, scope: !3283)
!3349 = !DILocation(line: 713, column: 15, scope: !3283)
!3350 = !DILocation(line: 714, column: 1, scope: !3283)
!3351 = distinct !DISubprogram(name: "nodeRemLink", scope: !3, file: !3, line: 930, type: !3352, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{null, !2101, !3293}
!3354 = !DILocalVariable(name: "ntree", arg: 1, scope: !3351, file: !3, line: 930, type: !2101)
!3355 = !DILocation(line: 930, column: 29, scope: !3351)
!3356 = !DILocalVariable(name: "link", arg: 2, scope: !3351, file: !3, line: 930, type: !3293)
!3357 = !DILocation(line: 930, column: 47, scope: !3351)
!3358 = !DILocation(line: 933, column: 6, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 933, column: 6)
!3360 = !DILocation(line: 933, column: 6, scope: !3351)
!3361 = !DILocation(line: 934, column: 16, scope: !3359)
!3362 = !DILocation(line: 934, column: 23, scope: !3359)
!3363 = !DILocation(line: 934, column: 30, scope: !3359)
!3364 = !DILocation(line: 934, column: 3, scope: !3359)
!3365 = !DILocation(line: 936, column: 6, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 936, column: 6)
!3367 = !DILocation(line: 936, column: 12, scope: !3366)
!3368 = !DILocation(line: 936, column: 6, scope: !3351)
!3369 = !DILocation(line: 937, column: 3, scope: !3366)
!3370 = !DILocation(line: 937, column: 9, scope: !3366)
!3371 = !DILocation(line: 937, column: 17, scope: !3366)
!3372 = !DILocation(line: 937, column: 22, scope: !3366)
!3373 = !DILocation(line: 938, column: 2, scope: !3351)
!3374 = !DILocation(line: 938, column: 12, scope: !3351)
!3375 = !DILocation(line: 940, column: 6, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 940, column: 6)
!3377 = !DILocation(line: 940, column: 6, scope: !3351)
!3378 = !DILocation(line: 941, column: 3, scope: !3376)
!3379 = !DILocation(line: 941, column: 10, scope: !3376)
!3380 = !DILocation(line: 941, column: 17, scope: !3376)
!3381 = !DILocation(line: 942, column: 1, scope: !3351)
!3382 = distinct !DISubprogram(name: "node_socket_free", scope: !3, file: !3, line: 684, type: !3383, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{null, !2101, !759, !755}
!3385 = !DILocalVariable(name: "UNUSED_ntree", arg: 1, scope: !3382, file: !3, line: 684, type: !2101)
!3386 = !DILocation(line: 684, column: 41, scope: !3382)
!3387 = !DILocalVariable(name: "sock", arg: 2, scope: !3382, file: !3, line: 684, type: !759)
!3388 = !DILocation(line: 684, column: 69, scope: !3382)
!3389 = !DILocalVariable(name: "UNUSED_node", arg: 3, scope: !3382, file: !3, line: 684, type: !755)
!3390 = !DILocation(line: 684, column: 82, scope: !3382)
!3391 = !DILocation(line: 686, column: 6, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 686, column: 6)
!3393 = !DILocation(line: 686, column: 12, scope: !3392)
!3394 = !DILocation(line: 686, column: 6, scope: !3382)
!3395 = !DILocation(line: 687, column: 20, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3392, file: !3, line: 686, column: 18)
!3397 = !DILocation(line: 687, column: 26, scope: !3396)
!3398 = !DILocation(line: 687, column: 3, scope: !3396)
!3399 = !DILocation(line: 688, column: 3, scope: !3396)
!3400 = !DILocation(line: 688, column: 13, scope: !3396)
!3401 = !DILocation(line: 688, column: 19, scope: !3396)
!3402 = !DILocation(line: 689, column: 2, scope: !3396)
!3403 = !DILocation(line: 691, column: 6, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 691, column: 6)
!3405 = !DILocation(line: 691, column: 12, scope: !3404)
!3406 = !DILocation(line: 691, column: 6, scope: !3382)
!3407 = !DILocation(line: 692, column: 3, scope: !3404)
!3408 = !DILocation(line: 692, column: 13, scope: !3404)
!3409 = !DILocation(line: 692, column: 19, scope: !3404)
!3410 = !DILocation(line: 693, column: 1, scope: !3382)
!3411 = distinct !DISubprogram(name: "nodeRemoveAllSockets", scope: !3, file: !3, line: 716, type: !3412, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3412 = !DISubroutineType(types: !3413)
!3413 = !{null, !2101, !755}
!3414 = !DILocalVariable(name: "ntree", arg: 1, scope: !3411, file: !3, line: 716, type: !2101)
!3415 = !DILocation(line: 716, column: 38, scope: !3411)
!3416 = !DILocalVariable(name: "node", arg: 2, scope: !3411, file: !3, line: 716, type: !755)
!3417 = !DILocation(line: 716, column: 52, scope: !3411)
!3418 = !DILocalVariable(name: "sock", scope: !3411, file: !3, line: 718, type: !759)
!3419 = !DILocation(line: 718, column: 15, scope: !3411)
!3420 = !DILocalVariable(name: "sock_next", scope: !3411, file: !3, line: 718, type: !759)
!3421 = !DILocation(line: 718, column: 22, scope: !3411)
!3422 = !DILocalVariable(name: "link", scope: !3411, file: !3, line: 719, type: !3293)
!3423 = !DILocation(line: 719, column: 13, scope: !3411)
!3424 = !DILocalVariable(name: "next", scope: !3411, file: !3, line: 719, type: !3293)
!3425 = !DILocation(line: 719, column: 20, scope: !3411)
!3426 = !DILocation(line: 721, column: 14, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 721, column: 2)
!3428 = !DILocation(line: 721, column: 21, scope: !3427)
!3429 = !DILocation(line: 721, column: 27, scope: !3427)
!3430 = !DILocation(line: 721, column: 12, scope: !3427)
!3431 = !DILocation(line: 721, column: 7, scope: !3427)
!3432 = !DILocation(line: 721, column: 34, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 721, column: 2)
!3434 = !DILocation(line: 721, column: 2, scope: !3427)
!3435 = !DILocation(line: 722, column: 10, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 721, column: 53)
!3437 = !DILocation(line: 722, column: 16, scope: !3436)
!3438 = !DILocation(line: 722, column: 8, scope: !3436)
!3439 = !DILocation(line: 723, column: 7, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3436, file: !3, line: 723, column: 7)
!3441 = !DILocation(line: 723, column: 13, scope: !3440)
!3442 = !DILocation(line: 723, column: 25, scope: !3440)
!3443 = !DILocation(line: 723, column: 22, scope: !3440)
!3444 = !DILocation(line: 723, column: 30, scope: !3440)
!3445 = !DILocation(line: 723, column: 33, scope: !3440)
!3446 = !DILocation(line: 723, column: 39, scope: !3440)
!3447 = !DILocation(line: 723, column: 49, scope: !3440)
!3448 = !DILocation(line: 723, column: 46, scope: !3440)
!3449 = !DILocation(line: 723, column: 7, scope: !3436)
!3450 = !DILocation(line: 724, column: 16, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 723, column: 55)
!3452 = !DILocation(line: 724, column: 23, scope: !3451)
!3453 = !DILocation(line: 724, column: 4, scope: !3451)
!3454 = !DILocation(line: 725, column: 3, scope: !3451)
!3455 = !DILocation(line: 726, column: 2, scope: !3436)
!3456 = !DILocation(line: 721, column: 47, scope: !3433)
!3457 = !DILocation(line: 721, column: 45, scope: !3433)
!3458 = !DILocation(line: 721, column: 2, scope: !3433)
!3459 = distinct !{!3459, !3434, !3460}
!3460 = !DILocation(line: 726, column: 2, scope: !3427)
!3461 = !DILocation(line: 728, column: 14, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 728, column: 2)
!3463 = !DILocation(line: 728, column: 20, scope: !3462)
!3464 = !DILocation(line: 728, column: 27, scope: !3462)
!3465 = !DILocation(line: 728, column: 12, scope: !3462)
!3466 = !DILocation(line: 728, column: 7, scope: !3462)
!3467 = !DILocation(line: 728, column: 34, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3462, file: !3, line: 728, column: 2)
!3469 = !DILocation(line: 728, column: 2, scope: !3462)
!3470 = !DILocation(line: 729, column: 15, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 728, column: 58)
!3472 = !DILocation(line: 729, column: 21, scope: !3471)
!3473 = !DILocation(line: 729, column: 13, scope: !3471)
!3474 = !DILocation(line: 730, column: 20, scope: !3471)
!3475 = !DILocation(line: 730, column: 27, scope: !3471)
!3476 = !DILocation(line: 730, column: 33, scope: !3471)
!3477 = !DILocation(line: 730, column: 3, scope: !3471)
!3478 = !DILocation(line: 731, column: 3, scope: !3471)
!3479 = !DILocation(line: 731, column: 13, scope: !3471)
!3480 = !DILocation(line: 732, column: 2, scope: !3471)
!3481 = !DILocation(line: 728, column: 47, scope: !3468)
!3482 = !DILocation(line: 728, column: 45, scope: !3468)
!3483 = !DILocation(line: 728, column: 2, scope: !3468)
!3484 = distinct !{!3484, !3469, !3485}
!3485 = !DILocation(line: 732, column: 2, scope: !3462)
!3486 = !DILocation(line: 733, column: 14, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 733, column: 2)
!3488 = !DILocation(line: 733, column: 20, scope: !3487)
!3489 = !DILocation(line: 733, column: 28, scope: !3487)
!3490 = !DILocation(line: 733, column: 12, scope: !3487)
!3491 = !DILocation(line: 733, column: 7, scope: !3487)
!3492 = !DILocation(line: 733, column: 35, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3487, file: !3, line: 733, column: 2)
!3494 = !DILocation(line: 733, column: 2, scope: !3487)
!3495 = !DILocation(line: 734, column: 15, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3493, file: !3, line: 733, column: 59)
!3497 = !DILocation(line: 734, column: 21, scope: !3496)
!3498 = !DILocation(line: 734, column: 13, scope: !3496)
!3499 = !DILocation(line: 735, column: 20, scope: !3496)
!3500 = !DILocation(line: 735, column: 27, scope: !3496)
!3501 = !DILocation(line: 735, column: 33, scope: !3496)
!3502 = !DILocation(line: 735, column: 3, scope: !3496)
!3503 = !DILocation(line: 736, column: 3, scope: !3496)
!3504 = !DILocation(line: 736, column: 13, scope: !3496)
!3505 = !DILocation(line: 737, column: 2, scope: !3496)
!3506 = !DILocation(line: 733, column: 48, scope: !3493)
!3507 = !DILocation(line: 733, column: 46, scope: !3493)
!3508 = !DILocation(line: 733, column: 2, scope: !3493)
!3509 = distinct !{!3509, !3494, !3510}
!3510 = !DILocation(line: 737, column: 2, scope: !3487)
!3511 = !DILocation(line: 739, column: 2, scope: !3411)
!3512 = !DILocation(line: 739, column: 8, scope: !3411)
!3513 = !DILocation(line: 739, column: 15, scope: !3411)
!3514 = !DILocation(line: 740, column: 1, scope: !3411)
!3515 = distinct !DISubprogram(name: "nodeFindNodebyName", scope: !3, file: !3, line: 743, type: !3516, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{!597, !2101, !681}
!3518 = !DILocalVariable(name: "ntree", arg: 1, scope: !3515, file: !3, line: 743, type: !2101)
!3519 = !DILocation(line: 743, column: 38, scope: !3515)
!3520 = !DILocalVariable(name: "name", arg: 2, scope: !3515, file: !3, line: 743, type: !681)
!3521 = !DILocation(line: 743, column: 57, scope: !3515)
!3522 = !DILocation(line: 745, column: 25, scope: !3515)
!3523 = !DILocation(line: 745, column: 32, scope: !3515)
!3524 = !DILocation(line: 745, column: 39, scope: !3515)
!3525 = !DILocation(line: 745, column: 9, scope: !3515)
!3526 = !DILocation(line: 745, column: 2, scope: !3515)
!3527 = distinct !DISubprogram(name: "nodeFindNode", scope: !3, file: !3, line: 749, type: !3528, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3528 = !DISubroutineType(types: !3529)
!3529 = !{!36, !2101, !759, !3530, !3531}
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64)
!3532 = !DILocalVariable(name: "ntree", arg: 1, scope: !3527, file: !3, line: 749, type: !2101)
!3533 = !DILocation(line: 749, column: 29, scope: !3527)
!3534 = !DILocalVariable(name: "sock", arg: 2, scope: !3527, file: !3, line: 749, type: !759)
!3535 = !DILocation(line: 749, column: 49, scope: !3527)
!3536 = !DILocalVariable(name: "nodep", arg: 3, scope: !3527, file: !3, line: 749, type: !3530)
!3537 = !DILocation(line: 749, column: 63, scope: !3527)
!3538 = !DILocalVariable(name: "sockindex", arg: 4, scope: !3527, file: !3, line: 749, type: !3531)
!3539 = !DILocation(line: 749, column: 75, scope: !3527)
!3540 = !DILocalVariable(name: "in_out", scope: !3527, file: !3, line: 751, type: !36)
!3541 = !DILocation(line: 751, column: 6, scope: !3527)
!3542 = !DILocation(line: 751, column: 15, scope: !3527)
!3543 = !DILocation(line: 751, column: 21, scope: !3527)
!3544 = !DILocalVariable(name: "node", scope: !3527, file: !3, line: 752, type: !755)
!3545 = !DILocation(line: 752, column: 9, scope: !3527)
!3546 = !DILocalVariable(name: "tsock", scope: !3527, file: !3, line: 753, type: !759)
!3547 = !DILocation(line: 753, column: 15, scope: !3527)
!3548 = !DILocalVariable(name: "index", scope: !3527, file: !3, line: 754, type: !36)
!3549 = !DILocation(line: 754, column: 6, scope: !3527)
!3550 = !DILocation(line: 756, column: 14, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 756, column: 2)
!3552 = !DILocation(line: 756, column: 21, scope: !3551)
!3553 = !DILocation(line: 756, column: 27, scope: !3551)
!3554 = !DILocation(line: 756, column: 12, scope: !3551)
!3555 = !DILocation(line: 756, column: 7, scope: !3551)
!3556 = !DILocation(line: 756, column: 34, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 756, column: 2)
!3558 = !DILocation(line: 756, column: 2, scope: !3551)
!3559 = !DILocation(line: 757, column: 12, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3557, file: !3, line: 756, column: 59)
!3561 = !DILocation(line: 757, column: 19, scope: !3560)
!3562 = !DILocation(line: 757, column: 32, scope: !3560)
!3563 = !DILocation(line: 757, column: 38, scope: !3560)
!3564 = !DILocation(line: 757, column: 45, scope: !3560)
!3565 = !DILocation(line: 757, column: 53, scope: !3560)
!3566 = !DILocation(line: 757, column: 59, scope: !3560)
!3567 = !DILocation(line: 757, column: 67, scope: !3560)
!3568 = !DILocation(line: 757, column: 11, scope: !3560)
!3569 = !DILocation(line: 757, column: 9, scope: !3560)
!3570 = !DILocation(line: 758, column: 14, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3560, file: !3, line: 758, column: 3)
!3572 = !DILocation(line: 758, column: 8, scope: !3571)
!3573 = !DILocation(line: 758, column: 19, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 758, column: 3)
!3575 = !DILocation(line: 758, column: 3, scope: !3571)
!3576 = !DILocation(line: 759, column: 8, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 759, column: 8)
!3578 = distinct !DILexicalBlock(scope: !3574, file: !3, line: 758, column: 56)
!3579 = !DILocation(line: 759, column: 17, scope: !3577)
!3580 = !DILocation(line: 759, column: 14, scope: !3577)
!3581 = !DILocation(line: 759, column: 8, scope: !3578)
!3582 = !DILocation(line: 760, column: 5, scope: !3577)
!3583 = !DILocation(line: 761, column: 3, scope: !3578)
!3584 = !DILocation(line: 758, column: 34, scope: !3574)
!3585 = !DILocation(line: 758, column: 41, scope: !3574)
!3586 = !DILocation(line: 758, column: 32, scope: !3574)
!3587 = !DILocation(line: 758, column: 52, scope: !3574)
!3588 = !DILocation(line: 758, column: 3, scope: !3574)
!3589 = distinct !{!3589, !3575, !3590}
!3590 = !DILocation(line: 761, column: 3, scope: !3571)
!3591 = !DILocation(line: 762, column: 7, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3560, file: !3, line: 762, column: 7)
!3593 = !DILocation(line: 762, column: 7, scope: !3560)
!3594 = !DILocation(line: 763, column: 4, scope: !3592)
!3595 = !DILocation(line: 764, column: 2, scope: !3560)
!3596 = !DILocation(line: 756, column: 47, scope: !3557)
!3597 = !DILocation(line: 756, column: 53, scope: !3557)
!3598 = !DILocation(line: 756, column: 45, scope: !3557)
!3599 = !DILocation(line: 756, column: 2, scope: !3557)
!3600 = distinct !{!3600, !3558, !3601}
!3601 = !DILocation(line: 764, column: 2, scope: !3551)
!3602 = !DILocation(line: 766, column: 6, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 766, column: 6)
!3604 = !DILocation(line: 766, column: 6, scope: !3527)
!3605 = !DILocation(line: 767, column: 12, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 766, column: 12)
!3607 = !DILocation(line: 767, column: 4, scope: !3606)
!3608 = !DILocation(line: 767, column: 10, scope: !3606)
!3609 = !DILocation(line: 768, column: 7, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 768, column: 7)
!3611 = !DILocation(line: 768, column: 7, scope: !3606)
!3612 = !DILocation(line: 768, column: 31, scope: !3610)
!3613 = !DILocation(line: 768, column: 19, scope: !3610)
!3614 = !DILocation(line: 768, column: 29, scope: !3610)
!3615 = !DILocation(line: 768, column: 18, scope: !3610)
!3616 = !DILocation(line: 769, column: 3, scope: !3606)
!3617 = !DILocation(line: 772, column: 3, scope: !3527)
!3618 = !DILocation(line: 772, column: 9, scope: !3527)
!3619 = !DILocation(line: 773, column: 2, scope: !3527)
!3620 = !DILocation(line: 774, column: 1, scope: !3527)
!3621 = distinct !DISubprogram(name: "nodeUniqueName", scope: !3, file: !3, line: 779, type: !3412, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3622 = !DILocalVariable(name: "ntree", arg: 1, scope: !3621, file: !3, line: 779, type: !2101)
!3623 = !DILocation(line: 779, column: 32, scope: !3621)
!3624 = !DILocalVariable(name: "node", arg: 2, scope: !3621, file: !3, line: 779, type: !755)
!3625 = !DILocation(line: 779, column: 46, scope: !3621)
!3626 = !DILocation(line: 781, column: 18, scope: !3621)
!3627 = !DILocation(line: 781, column: 25, scope: !3621)
!3628 = !DILocation(line: 781, column: 32, scope: !3621)
!3629 = !DILocation(line: 781, column: 2, scope: !3621)
!3630 = !DILocation(line: 782, column: 1, scope: !3621)
!3631 = distinct !DISubprogram(name: "nodeAddNode", scope: !3, file: !3, line: 784, type: !3632, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{!597, !786, !2101, !681}
!3634 = !DILocalVariable(name: "C", arg: 1, scope: !3631, file: !3, line: 784, type: !786)
!3635 = !DILocation(line: 784, column: 43, scope: !3631)
!3636 = !DILocalVariable(name: "ntree", arg: 2, scope: !3631, file: !3, line: 784, type: !2101)
!3637 = !DILocation(line: 784, column: 57, scope: !3631)
!3638 = !DILocalVariable(name: "idname", arg: 3, scope: !3631, file: !3, line: 784, type: !681)
!3639 = !DILocation(line: 784, column: 76, scope: !3631)
!3640 = !DILocalVariable(name: "node", scope: !3631, file: !3, line: 786, type: !755)
!3641 = !DILocation(line: 786, column: 9, scope: !3631)
!3642 = !DILocation(line: 788, column: 9, scope: !3631)
!3643 = !DILocation(line: 788, column: 7, scope: !3631)
!3644 = !DILocation(line: 789, column: 15, scope: !3631)
!3645 = !DILocation(line: 789, column: 22, scope: !3631)
!3646 = !DILocation(line: 789, column: 29, scope: !3631)
!3647 = !DILocation(line: 789, column: 2, scope: !3631)
!3648 = !DILocation(line: 791, column: 14, scope: !3631)
!3649 = !DILocation(line: 791, column: 20, scope: !3631)
!3650 = !DILocation(line: 791, column: 28, scope: !3631)
!3651 = !DILocation(line: 791, column: 2, scope: !3631)
!3652 = !DILocation(line: 792, column: 20, scope: !3631)
!3653 = !DILocation(line: 792, column: 23, scope: !3631)
!3654 = !DILocation(line: 792, column: 30, scope: !3631)
!3655 = !DILocation(line: 792, column: 49, scope: !3631)
!3656 = !DILocation(line: 792, column: 36, scope: !3631)
!3657 = !DILocation(line: 792, column: 2, scope: !3631)
!3658 = !DILocation(line: 794, column: 2, scope: !3631)
!3659 = !DILocation(line: 794, column: 9, scope: !3631)
!3660 = !DILocation(line: 794, column: 16, scope: !3631)
!3661 = !DILocation(line: 796, column: 9, scope: !3631)
!3662 = !DILocation(line: 796, column: 2, scope: !3631)
!3663 = distinct !DISubprogram(name: "nodeAddStaticNode", scope: !3, file: !3, line: 799, type: !3664, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3664 = !DISubroutineType(types: !3665)
!3665 = !{!597, !786, !2101, !36}
!3666 = !DILocalVariable(name: "C", arg: 1, scope: !3663, file: !3, line: 799, type: !786)
!3667 = !DILocation(line: 799, column: 49, scope: !3663)
!3668 = !DILocalVariable(name: "ntree", arg: 2, scope: !3663, file: !3, line: 799, type: !2101)
!3669 = !DILocation(line: 799, column: 63, scope: !3663)
!3670 = !DILocalVariable(name: "type", arg: 3, scope: !3663, file: !3, line: 799, type: !36)
!3671 = !DILocation(line: 799, column: 74, scope: !3663)
!3672 = !DILocalVariable(name: "idname", scope: !3663, file: !3, line: 801, type: !681)
!3673 = !DILocation(line: 801, column: 14, scope: !3663)
!3674 = !DILocalVariable(name: "__node_type_iter__", scope: !3675, file: !3, line: 803, type: !3676)
!3675 = distinct !DILexicalBlock(scope: !3663, file: !3, line: 803, column: 2)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashIterator", file: !999, line: 54, baseType: !2778)
!3678 = !DILocation(line: 803, column: 2, scope: !3675)
!3679 = !DILocation(line: 803, column: 2, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 803, column: 2)
!3681 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 803, column: 2)
!3682 = !DILocation(line: 803, column: 2, scope: !3681)
!3683 = !DILocalVariable(name: "ntype", scope: !3684, file: !3, line: 803, type: !2342)
!3684 = distinct !DILexicalBlock(scope: !3680, file: !3, line: 803, column: 2)
!3685 = !DILocation(line: 803, column: 2, scope: !3684)
!3686 = !DILocation(line: 807, column: 7, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3684, file: !3, line: 807, column: 7)
!3688 = !DILocation(line: 807, column: 14, scope: !3687)
!3689 = !DILocation(line: 807, column: 22, scope: !3687)
!3690 = !DILocation(line: 807, column: 19, scope: !3687)
!3691 = !DILocation(line: 807, column: 27, scope: !3687)
!3692 = !DILocation(line: 807, column: 32, scope: !3687)
!3693 = !DILocation(line: 807, column: 39, scope: !3687)
!3694 = !DILocation(line: 807, column: 44, scope: !3687)
!3695 = !DILocation(line: 807, column: 47, scope: !3687)
!3696 = !DILocation(line: 807, column: 54, scope: !3687)
!3697 = !DILocation(line: 807, column: 59, scope: !3687)
!3698 = !DILocation(line: 807, column: 66, scope: !3687)
!3699 = !DILocation(line: 807, column: 7, scope: !3684)
!3700 = !DILocation(line: 808, column: 13, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3687, file: !3, line: 807, column: 75)
!3702 = !DILocation(line: 808, column: 20, scope: !3701)
!3703 = !DILocation(line: 808, column: 11, scope: !3701)
!3704 = !DILocation(line: 809, column: 4, scope: !3701)
!3705 = !DILocation(line: 811, column: 2, scope: !3684)
!3706 = distinct !{!3706, !3682, !3707}
!3707 = !DILocation(line: 811, column: 2, scope: !3681)
!3708 = !DILocation(line: 811, column: 2, scope: !3675)
!3709 = !DILocation(line: 812, column: 7, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3663, file: !3, line: 812, column: 6)
!3711 = !DILocation(line: 812, column: 6, scope: !3663)
!3712 = !DILocation(line: 813, column: 52, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3710, file: !3, line: 812, column: 15)
!3714 = !DILocation(line: 813, column: 3, scope: !3713)
!3715 = !DILocation(line: 814, column: 3, scope: !3713)
!3716 = !DILocation(line: 816, column: 21, scope: !3663)
!3717 = !DILocation(line: 816, column: 24, scope: !3663)
!3718 = !DILocation(line: 816, column: 31, scope: !3663)
!3719 = !DILocation(line: 816, column: 9, scope: !3663)
!3720 = !DILocation(line: 816, column: 2, scope: !3663)
!3721 = !DILocation(line: 817, column: 1, scope: !3663)
!3722 = distinct !DISubprogram(name: "BLI_ghashIterator_done", scope: !999, file: !999, line: 98, type: !3723, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{!1074, !3676}
!3725 = !DILocalVariable(name: "ghi", arg: 1, scope: !3722, file: !999, line: 98, type: !3676)
!3726 = !DILocation(line: 98, column: 57, scope: !3722)
!3727 = !DILocation(line: 98, column: 78, scope: !3722)
!3728 = !DILocation(line: 98, column: 83, scope: !3722)
!3729 = !DILocation(line: 98, column: 77, scope: !3722)
!3730 = !DILocation(line: 98, column: 70, scope: !3722)
!3731 = distinct !DISubprogram(name: "BLI_ghashIterator_getValue", scope: !999, file: !999, line: 96, type: !3732, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!80, !3676}
!3734 = !DILocalVariable(name: "ghi", arg: 1, scope: !3731, file: !999, line: 96, type: !3676)
!3735 = !DILocation(line: 96, column: 61, scope: !3731)
!3736 = !DILocation(line: 96, column: 99, scope: !3731)
!3737 = !DILocation(line: 96, column: 104, scope: !3731)
!3738 = !DILocation(line: 96, column: 115, scope: !3731)
!3739 = !DILocation(line: 96, column: 70, scope: !3731)
!3740 = distinct !DISubprogram(name: "nodeCopyNode", scope: !3, file: !3, line: 838, type: !3741, scopeLine: 839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{!597, !572, !597}
!3743 = !DILocalVariable(name: "ntree", arg: 1, scope: !3740, file: !3, line: 838, type: !572)
!3744 = !DILocation(line: 838, column: 39, scope: !3740)
!3745 = !DILocalVariable(name: "node", arg: 2, scope: !3740, file: !3, line: 838, type: !597)
!3746 = !DILocation(line: 838, column: 60, scope: !3740)
!3747 = !DILocalVariable(name: "nnode", scope: !3740, file: !3, line: 840, type: !755)
!3748 = !DILocation(line: 840, column: 9, scope: !3740)
!3749 = !DILocation(line: 840, column: 17, scope: !3740)
!3750 = !DILocalVariable(name: "sock", scope: !3740, file: !3, line: 841, type: !759)
!3751 = !DILocation(line: 841, column: 15, scope: !3740)
!3752 = !DILocalVariable(name: "oldsock", scope: !3740, file: !3, line: 841, type: !759)
!3753 = !DILocation(line: 841, column: 22, scope: !3740)
!3754 = !DILocalVariable(name: "link", scope: !3740, file: !3, line: 842, type: !3293)
!3755 = !DILocation(line: 842, column: 13, scope: !3740)
!3756 = !DILocalVariable(name: "oldlink", scope: !3740, file: !3, line: 842, type: !3293)
!3757 = !DILocation(line: 842, column: 20, scope: !3740)
!3758 = !DILocation(line: 844, column: 3, scope: !3740)
!3759 = !DILocation(line: 844, column: 12, scope: !3740)
!3760 = !DILocation(line: 844, column: 11, scope: !3740)
!3761 = !DILocation(line: 846, column: 6, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 846, column: 6)
!3763 = !DILocation(line: 846, column: 6, scope: !3740)
!3764 = !DILocation(line: 847, column: 18, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 846, column: 13)
!3766 = !DILocation(line: 847, column: 25, scope: !3765)
!3767 = !DILocation(line: 847, column: 3, scope: !3765)
!3768 = !DILocation(line: 849, column: 16, scope: !3765)
!3769 = !DILocation(line: 849, column: 23, scope: !3765)
!3770 = !DILocation(line: 849, column: 30, scope: !3765)
!3771 = !DILocation(line: 849, column: 3, scope: !3765)
!3772 = !DILocation(line: 850, column: 2, scope: !3765)
!3773 = !DILocation(line: 852, column: 21, scope: !3740)
!3774 = !DILocation(line: 852, column: 28, scope: !3740)
!3775 = !DILocation(line: 852, column: 37, scope: !3740)
!3776 = !DILocation(line: 852, column: 43, scope: !3740)
!3777 = !DILocation(line: 852, column: 2, scope: !3740)
!3778 = !DILocation(line: 853, column: 12, scope: !3740)
!3779 = !DILocation(line: 853, column: 18, scope: !3740)
!3780 = !DILocation(line: 853, column: 25, scope: !3740)
!3781 = !DILocation(line: 853, column: 10, scope: !3740)
!3782 = !DILocation(line: 854, column: 14, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 854, column: 2)
!3784 = !DILocation(line: 854, column: 21, scope: !3783)
!3785 = !DILocation(line: 854, column: 28, scope: !3783)
!3786 = !DILocation(line: 854, column: 12, scope: !3783)
!3787 = !DILocation(line: 854, column: 7, scope: !3783)
!3788 = !DILocation(line: 854, column: 35, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3783, file: !3, line: 854, column: 2)
!3790 = !DILocation(line: 854, column: 2, scope: !3783)
!3791 = !DILocation(line: 855, column: 20, scope: !3789)
!3792 = !DILocation(line: 855, column: 26, scope: !3789)
!3793 = !DILocation(line: 855, column: 3, scope: !3789)
!3794 = !DILocation(line: 854, column: 48, scope: !3789)
!3795 = !DILocation(line: 854, column: 54, scope: !3789)
!3796 = !DILocation(line: 854, column: 46, scope: !3789)
!3797 = !DILocation(line: 854, column: 70, scope: !3789)
!3798 = !DILocation(line: 854, column: 79, scope: !3789)
!3799 = !DILocation(line: 854, column: 68, scope: !3789)
!3800 = !DILocation(line: 854, column: 2, scope: !3789)
!3801 = distinct !{!3801, !3790, !3802}
!3802 = !DILocation(line: 855, column: 33, scope: !3783)
!3803 = !DILocation(line: 857, column: 21, scope: !3740)
!3804 = !DILocation(line: 857, column: 28, scope: !3740)
!3805 = !DILocation(line: 857, column: 38, scope: !3740)
!3806 = !DILocation(line: 857, column: 44, scope: !3740)
!3807 = !DILocation(line: 857, column: 2, scope: !3740)
!3808 = !DILocation(line: 858, column: 12, scope: !3740)
!3809 = !DILocation(line: 858, column: 18, scope: !3740)
!3810 = !DILocation(line: 858, column: 26, scope: !3740)
!3811 = !DILocation(line: 858, column: 10, scope: !3740)
!3812 = !DILocation(line: 859, column: 14, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 859, column: 2)
!3814 = !DILocation(line: 859, column: 21, scope: !3813)
!3815 = !DILocation(line: 859, column: 29, scope: !3813)
!3816 = !DILocation(line: 859, column: 12, scope: !3813)
!3817 = !DILocation(line: 859, column: 7, scope: !3813)
!3818 = !DILocation(line: 859, column: 36, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 859, column: 2)
!3820 = !DILocation(line: 859, column: 2, scope: !3813)
!3821 = !DILocation(line: 860, column: 20, scope: !3819)
!3822 = !DILocation(line: 860, column: 26, scope: !3819)
!3823 = !DILocation(line: 860, column: 3, scope: !3819)
!3824 = !DILocation(line: 859, column: 49, scope: !3819)
!3825 = !DILocation(line: 859, column: 55, scope: !3819)
!3826 = !DILocation(line: 859, column: 47, scope: !3819)
!3827 = !DILocation(line: 859, column: 71, scope: !3819)
!3828 = !DILocation(line: 859, column: 80, scope: !3819)
!3829 = !DILocation(line: 859, column: 69, scope: !3819)
!3830 = !DILocation(line: 859, column: 2, scope: !3819)
!3831 = distinct !{!3831, !3820, !3832}
!3832 = !DILocation(line: 860, column: 33, scope: !3813)
!3833 = !DILocation(line: 862, column: 6, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 862, column: 6)
!3835 = !DILocation(line: 862, column: 12, scope: !3834)
!3836 = !DILocation(line: 862, column: 6, scope: !3740)
!3837 = !DILocation(line: 863, column: 34, scope: !3834)
!3838 = !DILocation(line: 863, column: 40, scope: !3834)
!3839 = !DILocation(line: 863, column: 17, scope: !3834)
!3840 = !DILocation(line: 863, column: 3, scope: !3834)
!3841 = !DILocation(line: 863, column: 10, scope: !3834)
!3842 = !DILocation(line: 863, column: 15, scope: !3834)
!3843 = !DILocation(line: 865, column: 21, scope: !3740)
!3844 = !DILocation(line: 865, column: 28, scope: !3740)
!3845 = !DILocation(line: 865, column: 45, scope: !3740)
!3846 = !DILocation(line: 865, column: 51, scope: !3740)
!3847 = !DILocation(line: 865, column: 2, scope: !3740)
!3848 = !DILocation(line: 866, column: 12, scope: !3740)
!3849 = !DILocation(line: 866, column: 18, scope: !3740)
!3850 = !DILocation(line: 866, column: 33, scope: !3740)
!3851 = !DILocation(line: 866, column: 10, scope: !3740)
!3852 = !DILocation(line: 867, column: 14, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 867, column: 2)
!3854 = !DILocation(line: 867, column: 21, scope: !3853)
!3855 = !DILocation(line: 867, column: 36, scope: !3853)
!3856 = !DILocation(line: 867, column: 12, scope: !3853)
!3857 = !DILocation(line: 867, column: 7, scope: !3853)
!3858 = !DILocation(line: 867, column: 43, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 867, column: 2)
!3860 = !DILocation(line: 867, column: 2, scope: !3853)
!3861 = !DILocation(line: 868, column: 20, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 867, column: 93)
!3863 = !DILocation(line: 868, column: 3, scope: !3862)
!3864 = !DILocation(line: 868, column: 9, scope: !3862)
!3865 = !DILocation(line: 868, column: 18, scope: !3862)
!3866 = !DILocation(line: 869, column: 18, scope: !3862)
!3867 = !DILocation(line: 869, column: 3, scope: !3862)
!3868 = !DILocation(line: 869, column: 9, scope: !3862)
!3869 = !DILocation(line: 869, column: 16, scope: !3862)
!3870 = !DILocation(line: 870, column: 20, scope: !3862)
!3871 = !DILocation(line: 870, column: 26, scope: !3862)
!3872 = !DILocation(line: 870, column: 36, scope: !3862)
!3873 = !DILocation(line: 870, column: 3, scope: !3862)
!3874 = !DILocation(line: 870, column: 9, scope: !3862)
!3875 = !DILocation(line: 870, column: 18, scope: !3862)
!3876 = !DILocation(line: 871, column: 18, scope: !3862)
!3877 = !DILocation(line: 871, column: 24, scope: !3862)
!3878 = !DILocation(line: 871, column: 32, scope: !3862)
!3879 = !DILocation(line: 871, column: 3, scope: !3862)
!3880 = !DILocation(line: 871, column: 9, scope: !3862)
!3881 = !DILocation(line: 871, column: 16, scope: !3862)
!3882 = !DILocation(line: 872, column: 2, scope: !3862)
!3883 = !DILocation(line: 867, column: 56, scope: !3859)
!3884 = !DILocation(line: 867, column: 62, scope: !3859)
!3885 = !DILocation(line: 867, column: 54, scope: !3859)
!3886 = !DILocation(line: 867, column: 78, scope: !3859)
!3887 = !DILocation(line: 867, column: 87, scope: !3859)
!3888 = !DILocation(line: 867, column: 76, scope: !3859)
!3889 = !DILocation(line: 867, column: 2, scope: !3859)
!3890 = distinct !{!3890, !3860, !3891}
!3891 = !DILocation(line: 872, column: 2, scope: !3853)
!3892 = !DILocation(line: 876, column: 6, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 876, column: 6)
!3894 = !DILocation(line: 876, column: 12, scope: !3893)
!3895 = !DILocation(line: 876, column: 22, scope: !3893)
!3896 = !DILocation(line: 876, column: 6, scope: !3740)
!3897 = !DILocation(line: 877, column: 3, scope: !3893)
!3898 = !DILocation(line: 877, column: 9, scope: !3893)
!3899 = !DILocation(line: 877, column: 19, scope: !3893)
!3900 = !DILocation(line: 877, column: 28, scope: !3893)
!3901 = !DILocation(line: 877, column: 35, scope: !3893)
!3902 = !DILocation(line: 877, column: 42, scope: !3893)
!3903 = !DILocation(line: 879, column: 19, scope: !3740)
!3904 = !DILocation(line: 879, column: 2, scope: !3740)
!3905 = !DILocation(line: 879, column: 8, scope: !3740)
!3906 = !DILocation(line: 879, column: 17, scope: !3740)
!3907 = !DILocation(line: 880, column: 2, scope: !3740)
!3908 = !DILocation(line: 880, column: 9, scope: !3740)
!3909 = !DILocation(line: 880, column: 18, scope: !3740)
!3910 = !DILocation(line: 882, column: 6, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 882, column: 6)
!3912 = !DILocation(line: 882, column: 13, scope: !3911)
!3913 = !DILocation(line: 882, column: 23, scope: !3911)
!3914 = !DILocation(line: 882, column: 6, scope: !3740)
!3915 = !DILocalVariable(name: "ptr", scope: !3916, file: !3, line: 883, type: !3917)
!3916 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 882, column: 37)
!3917 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !48, line: 62, baseType: !671)
!3918 = !DILocation(line: 883, column: 14, scope: !3916)
!3919 = !DILocation(line: 884, column: 28, scope: !3916)
!3920 = !DILocation(line: 884, column: 22, scope: !3916)
!3921 = !DILocation(line: 884, column: 46, scope: !3916)
!3922 = !DILocation(line: 884, column: 3, scope: !3916)
!3923 = !DILocation(line: 886, column: 3, scope: !3916)
!3924 = !DILocation(line: 886, column: 10, scope: !3916)
!3925 = !DILocation(line: 886, column: 20, scope: !3916)
!3926 = !DILocation(line: 886, column: 39, scope: !3916)
!3927 = !DILocation(line: 887, column: 2, scope: !3916)
!3928 = !DILocation(line: 889, column: 6, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 889, column: 6)
!3930 = !DILocation(line: 889, column: 6, scope: !3740)
!3931 = !DILocation(line: 890, column: 3, scope: !3929)
!3932 = !DILocation(line: 890, column: 10, scope: !3929)
!3933 = !DILocation(line: 890, column: 17, scope: !3929)
!3934 = !DILocation(line: 892, column: 9, scope: !3740)
!3935 = !DILocation(line: 892, column: 2, scope: !3740)
!3936 = distinct !DISubprogram(name: "node_socket_copy", scope: !3, file: !3, line: 819, type: !3937, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3937 = !DISubroutineType(types: !3938)
!3938 = !{null, !759, !759}
!3939 = !DILocalVariable(name: "dst", arg: 1, scope: !3936, file: !3, line: 819, type: !759)
!3940 = !DILocation(line: 819, column: 43, scope: !3936)
!3941 = !DILocalVariable(name: "src", arg: 2, scope: !3936, file: !3, line: 819, type: !759)
!3942 = !DILocation(line: 819, column: 61, scope: !3936)
!3943 = !DILocation(line: 821, column: 18, scope: !3936)
!3944 = !DILocation(line: 821, column: 2, scope: !3936)
!3945 = !DILocation(line: 821, column: 7, scope: !3936)
!3946 = !DILocation(line: 821, column: 16, scope: !3936)
!3947 = !DILocation(line: 823, column: 6, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 823, column: 6)
!3949 = !DILocation(line: 823, column: 11, scope: !3948)
!3950 = !DILocation(line: 823, column: 6, scope: !3936)
!3951 = !DILocation(line: 824, column: 32, scope: !3948)
!3952 = !DILocation(line: 824, column: 37, scope: !3948)
!3953 = !DILocation(line: 824, column: 15, scope: !3948)
!3954 = !DILocation(line: 824, column: 3, scope: !3948)
!3955 = !DILocation(line: 824, column: 8, scope: !3948)
!3956 = !DILocation(line: 824, column: 13, scope: !3948)
!3957 = !DILocation(line: 826, column: 6, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3936, file: !3, line: 826, column: 6)
!3959 = !DILocation(line: 826, column: 11, scope: !3958)
!3960 = !DILocation(line: 826, column: 6, scope: !3936)
!3961 = !DILocation(line: 827, column: 24, scope: !3958)
!3962 = !DILocation(line: 827, column: 38, scope: !3958)
!3963 = !DILocation(line: 827, column: 43, scope: !3958)
!3964 = !DILocation(line: 827, column: 3, scope: !3958)
!3965 = !DILocation(line: 827, column: 8, scope: !3958)
!3966 = !DILocation(line: 827, column: 22, scope: !3958)
!3967 = !DILocation(line: 829, column: 2, scope: !3936)
!3968 = !DILocation(line: 829, column: 7, scope: !3936)
!3969 = !DILocation(line: 829, column: 19, scope: !3936)
!3970 = !DILocation(line: 833, column: 2, scope: !3936)
!3971 = !DILocation(line: 833, column: 7, scope: !3936)
!3972 = !DILocation(line: 833, column: 13, scope: !3936)
!3973 = !DILocation(line: 834, column: 1, scope: !3936)
!3974 = distinct !DISubprogram(name: "nodeAddLink", scope: !3, file: !3, line: 896, type: !3975, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!749, !2101, !755, !759, !755, !759}
!3977 = !DILocalVariable(name: "ntree", arg: 1, scope: !3974, file: !3, line: 896, type: !2101)
!3978 = !DILocation(line: 896, column: 35, scope: !3974)
!3979 = !DILocalVariable(name: "fromnode", arg: 2, scope: !3974, file: !3, line: 896, type: !755)
!3980 = !DILocation(line: 896, column: 49, scope: !3974)
!3981 = !DILocalVariable(name: "fromsock", arg: 3, scope: !3974, file: !3, line: 896, type: !759)
!3982 = !DILocation(line: 896, column: 72, scope: !3974)
!3983 = !DILocalVariable(name: "tonode", arg: 4, scope: !3974, file: !3, line: 896, type: !755)
!3984 = !DILocation(line: 896, column: 89, scope: !3974)
!3985 = !DILocalVariable(name: "tosock", arg: 5, scope: !3974, file: !3, line: 896, type: !759)
!3986 = !DILocation(line: 896, column: 110, scope: !3974)
!3987 = !DILocalVariable(name: "link", scope: !3974, file: !3, line: 898, type: !3293)
!3988 = !DILocation(line: 898, column: 13, scope: !3974)
!3989 = !DILocation(line: 904, column: 6, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 904, column: 6)
!3991 = !DILocation(line: 904, column: 16, scope: !3990)
!3992 = !DILocation(line: 904, column: 23, scope: !3990)
!3993 = !DILocation(line: 904, column: 35, scope: !3990)
!3994 = !DILocation(line: 904, column: 38, scope: !3990)
!3995 = !DILocation(line: 904, column: 46, scope: !3990)
!3996 = !DILocation(line: 904, column: 53, scope: !3990)
!3997 = !DILocation(line: 904, column: 6, scope: !3974)
!3998 = !DILocation(line: 905, column: 10, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 904, column: 65)
!4000 = !DILocation(line: 905, column: 8, scope: !3999)
!4001 = !DILocation(line: 906, column: 7, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 906, column: 7)
!4003 = !DILocation(line: 906, column: 7, scope: !3999)
!4004 = !DILocation(line: 907, column: 17, scope: !4002)
!4005 = !DILocation(line: 907, column: 24, scope: !4002)
!4006 = !DILocation(line: 907, column: 31, scope: !4002)
!4007 = !DILocation(line: 907, column: 4, scope: !4002)
!4008 = !DILocation(line: 908, column: 20, scope: !3999)
!4009 = !DILocation(line: 908, column: 3, scope: !3999)
!4010 = !DILocation(line: 908, column: 9, scope: !3999)
!4011 = !DILocation(line: 908, column: 18, scope: !3999)
!4012 = !DILocation(line: 909, column: 20, scope: !3999)
!4013 = !DILocation(line: 909, column: 3, scope: !3999)
!4014 = !DILocation(line: 909, column: 9, scope: !3999)
!4015 = !DILocation(line: 909, column: 18, scope: !3999)
!4016 = !DILocation(line: 910, column: 18, scope: !3999)
!4017 = !DILocation(line: 910, column: 3, scope: !3999)
!4018 = !DILocation(line: 910, column: 9, scope: !3999)
!4019 = !DILocation(line: 910, column: 16, scope: !3999)
!4020 = !DILocation(line: 911, column: 18, scope: !3999)
!4021 = !DILocation(line: 911, column: 3, scope: !3999)
!4022 = !DILocation(line: 911, column: 9, scope: !3999)
!4023 = !DILocation(line: 911, column: 16, scope: !3999)
!4024 = !DILocation(line: 912, column: 2, scope: !3999)
!4025 = !DILocation(line: 913, column: 11, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !3990, file: !3, line: 913, column: 11)
!4027 = !DILocation(line: 913, column: 21, scope: !4026)
!4028 = !DILocation(line: 913, column: 28, scope: !4026)
!4029 = !DILocation(line: 913, column: 39, scope: !4026)
!4030 = !DILocation(line: 913, column: 42, scope: !4026)
!4031 = !DILocation(line: 913, column: 50, scope: !4026)
!4032 = !DILocation(line: 913, column: 57, scope: !4026)
!4033 = !DILocation(line: 913, column: 11, scope: !3990)
!4034 = !DILocation(line: 915, column: 10, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 913, column: 70)
!4036 = !DILocation(line: 915, column: 8, scope: !4035)
!4037 = !DILocation(line: 916, column: 7, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 916, column: 7)
!4039 = !DILocation(line: 916, column: 7, scope: !4035)
!4040 = !DILocation(line: 917, column: 17, scope: !4038)
!4041 = !DILocation(line: 917, column: 24, scope: !4038)
!4042 = !DILocation(line: 917, column: 31, scope: !4038)
!4043 = !DILocation(line: 917, column: 4, scope: !4038)
!4044 = !DILocation(line: 918, column: 20, scope: !4035)
!4045 = !DILocation(line: 918, column: 3, scope: !4035)
!4046 = !DILocation(line: 918, column: 9, scope: !4035)
!4047 = !DILocation(line: 918, column: 18, scope: !4035)
!4048 = !DILocation(line: 919, column: 20, scope: !4035)
!4049 = !DILocation(line: 919, column: 3, scope: !4035)
!4050 = !DILocation(line: 919, column: 9, scope: !4035)
!4051 = !DILocation(line: 919, column: 18, scope: !4035)
!4052 = !DILocation(line: 920, column: 18, scope: !4035)
!4053 = !DILocation(line: 920, column: 3, scope: !4035)
!4054 = !DILocation(line: 920, column: 9, scope: !4035)
!4055 = !DILocation(line: 920, column: 16, scope: !4035)
!4056 = !DILocation(line: 921, column: 18, scope: !4035)
!4057 = !DILocation(line: 921, column: 3, scope: !4035)
!4058 = !DILocation(line: 921, column: 9, scope: !4035)
!4059 = !DILocation(line: 921, column: 16, scope: !4035)
!4060 = !DILocation(line: 922, column: 2, scope: !4035)
!4061 = !DILocation(line: 924, column: 6, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 924, column: 6)
!4063 = !DILocation(line: 924, column: 6, scope: !3974)
!4064 = !DILocation(line: 925, column: 3, scope: !4062)
!4065 = !DILocation(line: 925, column: 10, scope: !4062)
!4066 = !DILocation(line: 925, column: 17, scope: !4062)
!4067 = !DILocation(line: 927, column: 9, scope: !3974)
!4068 = !DILocation(line: 927, column: 2, scope: !3974)
!4069 = distinct !DISubprogram(name: "nodeRemSocketLinks", scope: !3, file: !3, line: 944, type: !4070, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{null, !2101, !759}
!4072 = !DILocalVariable(name: "ntree", arg: 1, scope: !4069, file: !3, line: 944, type: !2101)
!4073 = !DILocation(line: 944, column: 36, scope: !4069)
!4074 = !DILocalVariable(name: "sock", arg: 2, scope: !4069, file: !3, line: 944, type: !759)
!4075 = !DILocation(line: 944, column: 56, scope: !4069)
!4076 = !DILocalVariable(name: "link", scope: !4069, file: !3, line: 946, type: !3293)
!4077 = !DILocation(line: 946, column: 13, scope: !4069)
!4078 = !DILocalVariable(name: "next", scope: !4069, file: !3, line: 946, type: !3293)
!4079 = !DILocation(line: 946, column: 20, scope: !4069)
!4080 = !DILocation(line: 948, column: 14, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 948, column: 2)
!4082 = !DILocation(line: 948, column: 21, scope: !4081)
!4083 = !DILocation(line: 948, column: 27, scope: !4081)
!4084 = !DILocation(line: 948, column: 12, scope: !4081)
!4085 = !DILocation(line: 948, column: 7, scope: !4081)
!4086 = !DILocation(line: 948, column: 34, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 948, column: 2)
!4088 = !DILocation(line: 948, column: 2, scope: !4081)
!4089 = !DILocation(line: 949, column: 10, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4087, file: !3, line: 948, column: 53)
!4091 = !DILocation(line: 949, column: 16, scope: !4090)
!4092 = !DILocation(line: 949, column: 8, scope: !4090)
!4093 = !DILocation(line: 950, column: 7, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 950, column: 7)
!4095 = !DILocation(line: 950, column: 13, scope: !4094)
!4096 = !DILocation(line: 950, column: 25, scope: !4094)
!4097 = !DILocation(line: 950, column: 22, scope: !4094)
!4098 = !DILocation(line: 950, column: 30, scope: !4094)
!4099 = !DILocation(line: 950, column: 33, scope: !4094)
!4100 = !DILocation(line: 950, column: 39, scope: !4094)
!4101 = !DILocation(line: 950, column: 49, scope: !4094)
!4102 = !DILocation(line: 950, column: 46, scope: !4094)
!4103 = !DILocation(line: 950, column: 7, scope: !4090)
!4104 = !DILocation(line: 951, column: 16, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 950, column: 55)
!4106 = !DILocation(line: 951, column: 23, scope: !4105)
!4107 = !DILocation(line: 951, column: 4, scope: !4105)
!4108 = !DILocation(line: 952, column: 3, scope: !4105)
!4109 = !DILocation(line: 953, column: 2, scope: !4090)
!4110 = !DILocation(line: 948, column: 47, scope: !4087)
!4111 = !DILocation(line: 948, column: 45, scope: !4087)
!4112 = !DILocation(line: 948, column: 2, scope: !4087)
!4113 = distinct !{!4113, !4088, !4114}
!4114 = !DILocation(line: 953, column: 2, scope: !4081)
!4115 = !DILocation(line: 955, column: 2, scope: !4069)
!4116 = !DILocation(line: 955, column: 9, scope: !4069)
!4117 = !DILocation(line: 955, column: 16, scope: !4069)
!4118 = !DILocation(line: 956, column: 1, scope: !4069)
!4119 = distinct !DISubprogram(name: "nodeLinkIsHidden", scope: !3, file: !3, line: 958, type: !4120, scopeLine: 959, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{!36, !3293}
!4122 = !DILocalVariable(name: "link", arg: 1, scope: !4119, file: !3, line: 958, type: !3293)
!4123 = !DILocation(line: 958, column: 33, scope: !4119)
!4124 = !DILocation(line: 960, column: 28, scope: !4119)
!4125 = !DILocation(line: 960, column: 34, scope: !4119)
!4126 = !DILocation(line: 960, column: 9, scope: !4119)
!4127 = !DILocation(line: 960, column: 44, scope: !4119)
!4128 = !DILocation(line: 960, column: 66, scope: !4119)
!4129 = !DILocation(line: 960, column: 72, scope: !4119)
!4130 = !DILocation(line: 960, column: 47, scope: !4119)
!4131 = !DILocation(line: 960, column: 2, scope: !4119)
!4132 = distinct !DISubprogram(name: "nodeSocketIsHidden", scope: !3, file: !3, line: 2485, type: !4133, scopeLine: 2486, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{!36, !759}
!4135 = !DILocalVariable(name: "sock", arg: 1, scope: !4132, file: !3, line: 2485, type: !759)
!4136 = !DILocation(line: 2485, column: 37, scope: !4132)
!4137 = !DILocation(line: 2487, column: 11, scope: !4132)
!4138 = !DILocation(line: 2487, column: 17, scope: !4132)
!4139 = !DILocation(line: 2487, column: 22, scope: !4132)
!4140 = !DILocation(line: 2487, column: 54, scope: !4132)
!4141 = !DILocation(line: 2487, column: 2, scope: !4132)
!4142 = distinct !DISubprogram(name: "nodeInternalRelink", scope: !3, file: !3, line: 963, type: !3412, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4143 = !DILocalVariable(name: "ntree", arg: 1, scope: !4142, file: !3, line: 963, type: !2101)
!4144 = !DILocation(line: 963, column: 36, scope: !4142)
!4145 = !DILocalVariable(name: "node", arg: 2, scope: !4142, file: !3, line: 963, type: !755)
!4146 = !DILocation(line: 963, column: 50, scope: !4142)
!4147 = !DILocalVariable(name: "link", scope: !4142, file: !3, line: 965, type: !3293)
!4148 = !DILocation(line: 965, column: 13, scope: !4142)
!4149 = !DILocalVariable(name: "link_next", scope: !4142, file: !3, line: 965, type: !3293)
!4150 = !DILocation(line: 965, column: 20, scope: !4142)
!4151 = !DILocation(line: 968, column: 14, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4142, file: !3, line: 968, column: 2)
!4153 = !DILocation(line: 968, column: 20, scope: !4152)
!4154 = !DILocation(line: 968, column: 35, scope: !4152)
!4155 = !DILocation(line: 968, column: 12, scope: !4152)
!4156 = !DILocation(line: 968, column: 7, scope: !4152)
!4157 = !DILocation(line: 968, column: 42, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 968, column: 2)
!4159 = !DILocation(line: 968, column: 2, scope: !4152)
!4160 = !DILocation(line: 969, column: 24, scope: !4158)
!4161 = !DILocation(line: 969, column: 3, scope: !4158)
!4162 = !DILocation(line: 969, column: 9, scope: !4158)
!4163 = !DILocation(line: 969, column: 17, scope: !4158)
!4164 = !DILocation(line: 969, column: 22, scope: !4158)
!4165 = !DILocation(line: 968, column: 55, scope: !4158)
!4166 = !DILocation(line: 968, column: 61, scope: !4158)
!4167 = !DILocation(line: 968, column: 53, scope: !4158)
!4168 = !DILocation(line: 968, column: 2, scope: !4158)
!4169 = distinct !{!4169, !4159, !4170}
!4170 = !DILocation(line: 969, column: 24, scope: !4152)
!4171 = !DILocation(line: 972, column: 14, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4142, file: !3, line: 972, column: 2)
!4173 = !DILocation(line: 972, column: 21, scope: !4172)
!4174 = !DILocation(line: 972, column: 27, scope: !4172)
!4175 = !DILocation(line: 972, column: 12, scope: !4172)
!4176 = !DILocation(line: 972, column: 7, scope: !4172)
!4177 = !DILocation(line: 972, column: 34, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 972, column: 2)
!4179 = !DILocation(line: 972, column: 2, scope: !4172)
!4180 = !DILocation(line: 973, column: 15, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4178, file: !3, line: 972, column: 58)
!4182 = !DILocation(line: 973, column: 21, scope: !4181)
!4183 = !DILocation(line: 973, column: 13, scope: !4181)
!4184 = !DILocation(line: 976, column: 7, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4181, file: !3, line: 976, column: 7)
!4186 = !DILocation(line: 976, column: 13, scope: !4185)
!4187 = !DILocation(line: 976, column: 25, scope: !4185)
!4188 = !DILocation(line: 976, column: 22, scope: !4185)
!4189 = !DILocation(line: 976, column: 7, scope: !4181)
!4190 = !DILocation(line: 977, column: 8, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 977, column: 8)
!4192 = distinct !DILexicalBlock(scope: !4185, file: !3, line: 976, column: 31)
!4193 = !DILocation(line: 977, column: 14, scope: !4191)
!4194 = !DILocation(line: 977, column: 24, scope: !4191)
!4195 = !DILocation(line: 977, column: 8, scope: !4192)
!4196 = !DILocalVariable(name: "fromlink", scope: !4197, file: !3, line: 979, type: !3293)
!4197 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 977, column: 30)
!4198 = !DILocation(line: 979, column: 16, scope: !4197)
!4199 = !DILocation(line: 979, column: 27, scope: !4197)
!4200 = !DILocation(line: 979, column: 33, scope: !4197)
!4201 = !DILocation(line: 979, column: 43, scope: !4197)
!4202 = !DILocation(line: 979, column: 49, scope: !4197)
!4203 = !DILocation(line: 979, column: 59, scope: !4197)
!4204 = !DILocation(line: 981, column: 9, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4197, file: !3, line: 981, column: 9)
!4206 = !DILocation(line: 981, column: 9, scope: !4197)
!4207 = !DILocation(line: 982, column: 23, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 981, column: 19)
!4209 = !DILocation(line: 982, column: 33, scope: !4208)
!4210 = !DILocation(line: 982, column: 6, scope: !4208)
!4211 = !DILocation(line: 982, column: 12, scope: !4208)
!4212 = !DILocation(line: 982, column: 21, scope: !4208)
!4213 = !DILocation(line: 983, column: 23, scope: !4208)
!4214 = !DILocation(line: 983, column: 33, scope: !4208)
!4215 = !DILocation(line: 983, column: 6, scope: !4208)
!4216 = !DILocation(line: 983, column: 12, scope: !4208)
!4217 = !DILocation(line: 983, column: 21, scope: !4208)
!4218 = !DILocation(line: 988, column: 12, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 988, column: 10)
!4220 = !DILocation(line: 988, column: 22, scope: !4219)
!4221 = !DILocation(line: 988, column: 27, scope: !4219)
!4222 = !DILocation(line: 988, column: 10, scope: !4208)
!4223 = !DILocation(line: 989, column: 7, scope: !4219)
!4224 = !DILocation(line: 989, column: 13, scope: !4219)
!4225 = !DILocation(line: 989, column: 18, scope: !4219)
!4226 = !DILocation(line: 991, column: 6, scope: !4208)
!4227 = !DILocation(line: 991, column: 13, scope: !4208)
!4228 = !DILocation(line: 991, column: 20, scope: !4208)
!4229 = !DILocation(line: 992, column: 5, scope: !4208)
!4230 = !DILocation(line: 994, column: 18, scope: !4205)
!4231 = !DILocation(line: 994, column: 25, scope: !4205)
!4232 = !DILocation(line: 994, column: 6, scope: !4205)
!4233 = !DILocation(line: 995, column: 4, scope: !4197)
!4234 = !DILocation(line: 997, column: 17, scope: !4191)
!4235 = !DILocation(line: 997, column: 24, scope: !4191)
!4236 = !DILocation(line: 997, column: 5, scope: !4191)
!4237 = !DILocation(line: 998, column: 3, scope: !4192)
!4238 = !DILocation(line: 999, column: 2, scope: !4181)
!4239 = !DILocation(line: 972, column: 47, scope: !4178)
!4240 = !DILocation(line: 972, column: 45, scope: !4178)
!4241 = !DILocation(line: 972, column: 2, scope: !4178)
!4242 = distinct !{!4242, !4179, !4243}
!4243 = !DILocation(line: 999, column: 2, scope: !4172)
!4244 = !DILocation(line: 1002, column: 14, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4142, file: !3, line: 1002, column: 2)
!4246 = !DILocation(line: 1002, column: 21, scope: !4245)
!4247 = !DILocation(line: 1002, column: 27, scope: !4245)
!4248 = !DILocation(line: 1002, column: 12, scope: !4245)
!4249 = !DILocation(line: 1002, column: 7, scope: !4245)
!4250 = !DILocation(line: 1002, column: 34, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 1002, column: 2)
!4252 = !DILocation(line: 1002, column: 2, scope: !4245)
!4253 = !DILocation(line: 1003, column: 15, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 1002, column: 58)
!4255 = !DILocation(line: 1003, column: 21, scope: !4254)
!4256 = !DILocation(line: 1003, column: 13, scope: !4254)
!4257 = !DILocation(line: 1005, column: 7, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 1005, column: 7)
!4259 = !DILocation(line: 1005, column: 13, scope: !4258)
!4260 = !DILocation(line: 1005, column: 23, scope: !4258)
!4261 = !DILocation(line: 1005, column: 20, scope: !4258)
!4262 = !DILocation(line: 1005, column: 7, scope: !4254)
!4263 = !DILocation(line: 1006, column: 16, scope: !4258)
!4264 = !DILocation(line: 1006, column: 23, scope: !4258)
!4265 = !DILocation(line: 1006, column: 4, scope: !4258)
!4266 = !DILocation(line: 1007, column: 2, scope: !4254)
!4267 = !DILocation(line: 1002, column: 47, scope: !4251)
!4268 = !DILocation(line: 1002, column: 45, scope: !4251)
!4269 = !DILocation(line: 1002, column: 2, scope: !4251)
!4270 = distinct !{!4270, !4252, !4271}
!4271 = !DILocation(line: 1007, column: 2, scope: !4245)
!4272 = !DILocation(line: 1008, column: 1, scope: !4142)
!4273 = distinct !DISubprogram(name: "nodeToView", scope: !3, file: !3, line: 1010, type: !4274, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{null, !755, !209, !209, !543, !543}
!4276 = !DILocalVariable(name: "node", arg: 1, scope: !4273, file: !3, line: 1010, type: !755)
!4277 = !DILocation(line: 1010, column: 24, scope: !4273)
!4278 = !DILocalVariable(name: "x", arg: 2, scope: !4273, file: !3, line: 1010, type: !209)
!4279 = !DILocation(line: 1010, column: 36, scope: !4273)
!4280 = !DILocalVariable(name: "y", arg: 3, scope: !4273, file: !3, line: 1010, type: !209)
!4281 = !DILocation(line: 1010, column: 45, scope: !4273)
!4282 = !DILocalVariable(name: "rx", arg: 4, scope: !4273, file: !3, line: 1010, type: !543)
!4283 = !DILocation(line: 1010, column: 55, scope: !4273)
!4284 = !DILocalVariable(name: "ry", arg: 5, scope: !4273, file: !3, line: 1010, type: !543)
!4285 = !DILocation(line: 1010, column: 66, scope: !4273)
!4286 = !DILocation(line: 1012, column: 6, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4273, file: !3, line: 1012, column: 6)
!4288 = !DILocation(line: 1012, column: 12, scope: !4287)
!4289 = !DILocation(line: 1012, column: 6, scope: !4273)
!4290 = !DILocation(line: 1013, column: 14, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 1012, column: 20)
!4292 = !DILocation(line: 1013, column: 20, scope: !4291)
!4293 = !DILocation(line: 1013, column: 28, scope: !4291)
!4294 = !DILocation(line: 1013, column: 32, scope: !4291)
!4295 = !DILocation(line: 1013, column: 38, scope: !4291)
!4296 = !DILocation(line: 1013, column: 30, scope: !4291)
!4297 = !DILocation(line: 1013, column: 44, scope: !4291)
!4298 = !DILocation(line: 1013, column: 48, scope: !4291)
!4299 = !DILocation(line: 1013, column: 54, scope: !4291)
!4300 = !DILocation(line: 1013, column: 46, scope: !4291)
!4301 = !DILocation(line: 1013, column: 60, scope: !4291)
!4302 = !DILocation(line: 1013, column: 64, scope: !4291)
!4303 = !DILocation(line: 1013, column: 3, scope: !4291)
!4304 = !DILocation(line: 1014, column: 2, scope: !4291)
!4305 = !DILocation(line: 1016, column: 9, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 1015, column: 7)
!4307 = !DILocation(line: 1016, column: 13, scope: !4306)
!4308 = !DILocation(line: 1016, column: 19, scope: !4306)
!4309 = !DILocation(line: 1016, column: 11, scope: !4306)
!4310 = !DILocation(line: 1016, column: 4, scope: !4306)
!4311 = !DILocation(line: 1016, column: 7, scope: !4306)
!4312 = !DILocation(line: 1017, column: 9, scope: !4306)
!4313 = !DILocation(line: 1017, column: 13, scope: !4306)
!4314 = !DILocation(line: 1017, column: 19, scope: !4306)
!4315 = !DILocation(line: 1017, column: 11, scope: !4306)
!4316 = !DILocation(line: 1017, column: 4, scope: !4306)
!4317 = !DILocation(line: 1017, column: 7, scope: !4306)
!4318 = !DILocation(line: 1019, column: 1, scope: !4273)
!4319 = distinct !DISubprogram(name: "nodeFromView", scope: !3, file: !3, line: 1021, type: !4274, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4320 = !DILocalVariable(name: "node", arg: 1, scope: !4319, file: !3, line: 1021, type: !755)
!4321 = !DILocation(line: 1021, column: 26, scope: !4319)
!4322 = !DILocalVariable(name: "x", arg: 2, scope: !4319, file: !3, line: 1021, type: !209)
!4323 = !DILocation(line: 1021, column: 38, scope: !4319)
!4324 = !DILocalVariable(name: "y", arg: 3, scope: !4319, file: !3, line: 1021, type: !209)
!4325 = !DILocation(line: 1021, column: 47, scope: !4319)
!4326 = !DILocalVariable(name: "rx", arg: 4, scope: !4319, file: !3, line: 1021, type: !543)
!4327 = !DILocation(line: 1021, column: 57, scope: !4319)
!4328 = !DILocalVariable(name: "ry", arg: 5, scope: !4319, file: !3, line: 1021, type: !543)
!4329 = !DILocation(line: 1021, column: 68, scope: !4319)
!4330 = !DILocation(line: 1023, column: 6, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 1023, column: 6)
!4332 = !DILocation(line: 1023, column: 12, scope: !4331)
!4333 = !DILocation(line: 1023, column: 6, scope: !4319)
!4334 = !DILocation(line: 1024, column: 16, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 1023, column: 20)
!4336 = !DILocation(line: 1024, column: 22, scope: !4335)
!4337 = !DILocation(line: 1024, column: 30, scope: !4335)
!4338 = !DILocation(line: 1024, column: 33, scope: !4335)
!4339 = !DILocation(line: 1024, column: 36, scope: !4335)
!4340 = !DILocation(line: 1024, column: 40, scope: !4335)
!4341 = !DILocation(line: 1024, column: 3, scope: !4335)
!4342 = !DILocation(line: 1025, column: 10, scope: !4335)
!4343 = !DILocation(line: 1025, column: 16, scope: !4335)
!4344 = !DILocation(line: 1025, column: 4, scope: !4335)
!4345 = !DILocation(line: 1025, column: 7, scope: !4335)
!4346 = !DILocation(line: 1026, column: 10, scope: !4335)
!4347 = !DILocation(line: 1026, column: 16, scope: !4335)
!4348 = !DILocation(line: 1026, column: 4, scope: !4335)
!4349 = !DILocation(line: 1026, column: 7, scope: !4335)
!4350 = !DILocation(line: 1027, column: 2, scope: !4335)
!4351 = !DILocation(line: 1029, column: 9, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 1028, column: 7)
!4353 = !DILocation(line: 1029, column: 13, scope: !4352)
!4354 = !DILocation(line: 1029, column: 19, scope: !4352)
!4355 = !DILocation(line: 1029, column: 11, scope: !4352)
!4356 = !DILocation(line: 1029, column: 4, scope: !4352)
!4357 = !DILocation(line: 1029, column: 7, scope: !4352)
!4358 = !DILocation(line: 1030, column: 9, scope: !4352)
!4359 = !DILocation(line: 1030, column: 13, scope: !4352)
!4360 = !DILocation(line: 1030, column: 19, scope: !4352)
!4361 = !DILocation(line: 1030, column: 11, scope: !4352)
!4362 = !DILocation(line: 1030, column: 4, scope: !4352)
!4363 = !DILocation(line: 1030, column: 7, scope: !4352)
!4364 = !DILocation(line: 1032, column: 1, scope: !4319)
!4365 = distinct !DISubprogram(name: "nodeAttachNodeCheck", scope: !3, file: !3, line: 1034, type: !4366, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4366 = !DISubroutineType(types: !4367)
!4367 = !{!1074, !755, !755}
!4368 = !DILocalVariable(name: "node", arg: 1, scope: !4365, file: !3, line: 1034, type: !755)
!4369 = !DILocation(line: 1034, column: 33, scope: !4365)
!4370 = !DILocalVariable(name: "parent", arg: 2, scope: !4365, file: !3, line: 1034, type: !755)
!4371 = !DILocation(line: 1034, column: 46, scope: !4365)
!4372 = !DILocalVariable(name: "parent_recurse", scope: !4365, file: !3, line: 1036, type: !755)
!4373 = !DILocation(line: 1036, column: 9, scope: !4365)
!4374 = !DILocation(line: 1037, column: 24, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 1037, column: 2)
!4376 = !DILocation(line: 1037, column: 22, scope: !4375)
!4377 = !DILocation(line: 1037, column: 7, scope: !4375)
!4378 = !DILocation(line: 1037, column: 30, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1037, column: 2)
!4380 = !DILocation(line: 1037, column: 2, scope: !4375)
!4381 = !DILocation(line: 1038, column: 7, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 1038, column: 7)
!4383 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1037, column: 87)
!4384 = !DILocation(line: 1038, column: 25, scope: !4382)
!4385 = !DILocation(line: 1038, column: 22, scope: !4382)
!4386 = !DILocation(line: 1038, column: 7, scope: !4383)
!4387 = !DILocation(line: 1039, column: 4, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 1038, column: 33)
!4389 = !DILocation(line: 1041, column: 2, scope: !4383)
!4390 = !DILocation(line: 1037, column: 63, scope: !4379)
!4391 = !DILocation(line: 1037, column: 79, scope: !4379)
!4392 = !DILocation(line: 1037, column: 61, scope: !4379)
!4393 = !DILocation(line: 1037, column: 2, scope: !4379)
!4394 = distinct !{!4394, !4380, !4395}
!4395 = !DILocation(line: 1041, column: 2, scope: !4375)
!4396 = !DILocation(line: 1043, column: 2, scope: !4365)
!4397 = !DILocation(line: 1044, column: 1, scope: !4365)
!4398 = distinct !DISubprogram(name: "nodeAttachNode", scope: !3, file: !3, line: 1046, type: !4399, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4399 = !DISubroutineType(types: !4400)
!4400 = !{null, !755, !755}
!4401 = !DILocalVariable(name: "node", arg: 1, scope: !4398, file: !3, line: 1046, type: !755)
!4402 = !DILocation(line: 1046, column: 28, scope: !4398)
!4403 = !DILocalVariable(name: "parent", arg: 2, scope: !4398, file: !3, line: 1046, type: !755)
!4404 = !DILocation(line: 1046, column: 41, scope: !4398)
!4405 = !DILocalVariable(name: "locx", scope: !4398, file: !3, line: 1048, type: !209)
!4406 = !DILocation(line: 1048, column: 8, scope: !4398)
!4407 = !DILocalVariable(name: "locy", scope: !4398, file: !3, line: 1048, type: !209)
!4408 = !DILocation(line: 1048, column: 14, scope: !4398)
!4409 = !DILocation(line: 1053, column: 13, scope: !4398)
!4410 = !DILocation(line: 1053, column: 2, scope: !4398)
!4411 = !DILocation(line: 1055, column: 17, scope: !4398)
!4412 = !DILocation(line: 1055, column: 2, scope: !4398)
!4413 = !DILocation(line: 1055, column: 8, scope: !4398)
!4414 = !DILocation(line: 1055, column: 15, scope: !4398)
!4415 = !DILocation(line: 1057, column: 15, scope: !4398)
!4416 = !DILocation(line: 1057, column: 23, scope: !4398)
!4417 = !DILocation(line: 1057, column: 29, scope: !4398)
!4418 = !DILocation(line: 1057, column: 36, scope: !4398)
!4419 = !DILocation(line: 1057, column: 42, scope: !4398)
!4420 = !DILocation(line: 1057, column: 49, scope: !4398)
!4421 = !DILocation(line: 1057, column: 55, scope: !4398)
!4422 = !DILocation(line: 1057, column: 2, scope: !4398)
!4423 = !DILocation(line: 1058, column: 1, scope: !4398)
!4424 = distinct !DISubprogram(name: "nodeDetachNode", scope: !3, file: !3, line: 1060, type: !830, scopeLine: 1061, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4425 = !DILocalVariable(name: "node", arg: 1, scope: !4424, file: !3, line: 1060, type: !597)
!4426 = !DILocation(line: 1060, column: 35, scope: !4424)
!4427 = !DILocalVariable(name: "locx", scope: !4424, file: !3, line: 1062, type: !209)
!4428 = !DILocation(line: 1062, column: 8, scope: !4424)
!4429 = !DILocalVariable(name: "locy", scope: !4424, file: !3, line: 1062, type: !209)
!4430 = !DILocation(line: 1062, column: 14, scope: !4424)
!4431 = !DILocation(line: 1064, column: 6, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 1064, column: 6)
!4433 = !DILocation(line: 1064, column: 12, scope: !4432)
!4434 = !DILocation(line: 1064, column: 6, scope: !4424)
!4435 = !DILocation(line: 1069, column: 14, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 1064, column: 20)
!4437 = !DILocation(line: 1069, column: 3, scope: !4436)
!4438 = !DILocation(line: 1070, column: 16, scope: !4436)
!4439 = !DILocation(line: 1070, column: 3, scope: !4436)
!4440 = !DILocation(line: 1070, column: 9, scope: !4436)
!4441 = !DILocation(line: 1070, column: 14, scope: !4436)
!4442 = !DILocation(line: 1071, column: 16, scope: !4436)
!4443 = !DILocation(line: 1071, column: 3, scope: !4436)
!4444 = !DILocation(line: 1071, column: 9, scope: !4436)
!4445 = !DILocation(line: 1071, column: 14, scope: !4436)
!4446 = !DILocation(line: 1072, column: 3, scope: !4436)
!4447 = !DILocation(line: 1072, column: 9, scope: !4436)
!4448 = !DILocation(line: 1072, column: 16, scope: !4436)
!4449 = !DILocation(line: 1073, column: 2, scope: !4436)
!4450 = !DILocation(line: 1074, column: 1, scope: !4424)
!4451 = distinct !DISubprogram(name: "ntreeAddTree", scope: !3, file: !3, line: 1076, type: !4452, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{!572, !2499, !681, !681}
!4454 = !DILocalVariable(name: "bmain", arg: 1, scope: !4451, file: !3, line: 1076, type: !2499)
!4455 = !DILocation(line: 1076, column: 31, scope: !4451)
!4456 = !DILocalVariable(name: "name", arg: 2, scope: !4451, file: !3, line: 1076, type: !681)
!4457 = !DILocation(line: 1076, column: 50, scope: !4451)
!4458 = !DILocalVariable(name: "idname", arg: 3, scope: !4451, file: !3, line: 1076, type: !681)
!4459 = !DILocation(line: 1076, column: 68, scope: !4451)
!4460 = !DILocalVariable(name: "ntree", scope: !4451, file: !3, line: 1078, type: !2101)
!4461 = !DILocation(line: 1078, column: 13, scope: !4451)
!4462 = !DILocation(line: 1083, column: 6, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 1083, column: 6)
!4464 = !DILocation(line: 1083, column: 6, scope: !4451)
!4465 = !DILocation(line: 1084, column: 30, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4463, file: !3, line: 1083, column: 13)
!4467 = !DILocation(line: 1084, column: 44, scope: !4466)
!4468 = !DILocation(line: 1084, column: 11, scope: !4466)
!4469 = !DILocation(line: 1084, column: 9, scope: !4466)
!4470 = !DILocation(line: 1085, column: 2, scope: !4466)
!4471 = !DILocation(line: 1087, column: 11, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4463, file: !3, line: 1086, column: 7)
!4473 = !DILocation(line: 1087, column: 9, scope: !4472)
!4474 = !DILocation(line: 1088, column: 15, scope: !4472)
!4475 = !DILocation(line: 1088, column: 22, scope: !4472)
!4476 = !DILocation(line: 1088, column: 25, scope: !4472)
!4477 = !DILocation(line: 1088, column: 3, scope: !4472)
!4478 = !DILocation(line: 1088, column: 32, scope: !4472)
!4479 = !DILocation(line: 1089, column: 15, scope: !4472)
!4480 = !DILocation(line: 1089, column: 22, scope: !4472)
!4481 = !DILocation(line: 1089, column: 25, scope: !4472)
!4482 = !DILocation(line: 1089, column: 30, scope: !4472)
!4483 = !DILocation(line: 1089, column: 35, scope: !4472)
!4484 = !DILocation(line: 1089, column: 3, scope: !4472)
!4485 = !DILocation(line: 1095, column: 2, scope: !4451)
!4486 = !DILocation(line: 1095, column: 9, scope: !4451)
!4487 = !DILocation(line: 1095, column: 14, scope: !4451)
!4488 = !DILocation(line: 1097, column: 14, scope: !4451)
!4489 = !DILocation(line: 1097, column: 21, scope: !4451)
!4490 = !DILocation(line: 1097, column: 29, scope: !4451)
!4491 = !DILocation(line: 1097, column: 2, scope: !4451)
!4492 = !DILocation(line: 1098, column: 21, scope: !4451)
!4493 = !DILocation(line: 1098, column: 42, scope: !4451)
!4494 = !DILocation(line: 1098, column: 28, scope: !4451)
!4495 = !DILocation(line: 1098, column: 2, scope: !4451)
!4496 = !DILocation(line: 1100, column: 9, scope: !4451)
!4497 = !DILocation(line: 1100, column: 2, scope: !4451)
!4498 = distinct !DISubprogram(name: "ntreeCopyTree_ex", scope: !3, file: !3, line: 1208, type: !4499, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4499 = !DISubroutineType(types: !4500)
!4500 = !{!572, !2101, !2499, !4501}
!4501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1074)
!4502 = !DILocalVariable(name: "ntree", arg: 1, scope: !4498, file: !3, line: 1208, type: !2101)
!4503 = !DILocation(line: 1208, column: 40, scope: !4498)
!4504 = !DILocalVariable(name: "bmain", arg: 2, scope: !4498, file: !3, line: 1208, type: !2499)
!4505 = !DILocation(line: 1208, column: 53, scope: !4498)
!4506 = !DILocalVariable(name: "do_id_user", arg: 3, scope: !4498, file: !3, line: 1208, type: !4501)
!4507 = !DILocation(line: 1208, column: 71, scope: !4498)
!4508 = !DILocation(line: 1210, column: 32, scope: !4498)
!4509 = !DILocation(line: 1210, column: 39, scope: !4498)
!4510 = !DILocation(line: 1210, column: 46, scope: !4498)
!4511 = !DILocation(line: 1210, column: 9, scope: !4498)
!4512 = !DILocation(line: 1210, column: 2, scope: !4498)
!4513 = distinct !DISubprogram(name: "ntreeCopyTree_internal", scope: !3, file: !3, line: 1112, type: !4514, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4514 = !DISubroutineType(types: !4515)
!4515 = !{!2101, !2101, !2499, !1074, !1074, !1074}
!4516 = !DILocalVariable(name: "ntree", arg: 1, scope: !4513, file: !3, line: 1112, type: !2101)
!4517 = !DILocation(line: 1112, column: 53, scope: !4513)
!4518 = !DILocalVariable(name: "bmain", arg: 2, scope: !4513, file: !3, line: 1112, type: !2499)
!4519 = !DILocation(line: 1112, column: 66, scope: !4513)
!4520 = !DILocalVariable(name: "do_id_user", arg: 3, scope: !4513, file: !3, line: 1112, type: !1074)
!4521 = !DILocation(line: 1112, column: 78, scope: !4513)
!4522 = !DILocalVariable(name: "do_make_extern", arg: 4, scope: !4513, file: !3, line: 1112, type: !1074)
!4523 = !DILocation(line: 1112, column: 95, scope: !4513)
!4524 = !DILocalVariable(name: "copy_previews", arg: 5, scope: !4513, file: !3, line: 1112, type: !1074)
!4525 = !DILocation(line: 1112, column: 116, scope: !4513)
!4526 = !DILocalVariable(name: "newtree", scope: !4513, file: !3, line: 1114, type: !2101)
!4527 = !DILocation(line: 1114, column: 13, scope: !4513)
!4528 = !DILocalVariable(name: "node", scope: !4513, file: !3, line: 1115, type: !755)
!4529 = !DILocation(line: 1115, column: 9, scope: !4513)
!4530 = !DILocalVariable(name: "last", scope: !4513, file: !3, line: 1115, type: !755)
!4531 = !DILocation(line: 1115, column: 43, scope: !4513)
!4532 = !DILocalVariable(name: "sock", scope: !4513, file: !3, line: 1116, type: !759)
!4533 = !DILocation(line: 1116, column: 15, scope: !4513)
!4534 = !DILocalVariable(name: "oldsock", scope: !4513, file: !3, line: 1116, type: !759)
!4535 = !DILocation(line: 1116, column: 22, scope: !4513)
!4536 = !DILocalVariable(name: "link", scope: !4513, file: !3, line: 1117, type: !3293)
!4537 = !DILocation(line: 1117, column: 13, scope: !4513)
!4538 = !DILocation(line: 1119, column: 6, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 1119, column: 6)
!4540 = !DILocation(line: 1119, column: 12, scope: !4539)
!4541 = !DILocation(line: 1119, column: 6, scope: !4513)
!4542 = !DILocation(line: 1119, column: 21, scope: !4539)
!4543 = !DILocation(line: 1122, column: 6, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 1122, column: 6)
!4545 = !DILocation(line: 1122, column: 12, scope: !4544)
!4546 = !DILocation(line: 1122, column: 30, scope: !4544)
!4547 = !DILocation(line: 1122, column: 37, scope: !4544)
!4548 = !DILocation(line: 1122, column: 47, scope: !4544)
!4549 = !DILocation(line: 1122, column: 15, scope: !4544)
!4550 = !DILocation(line: 1122, column: 54, scope: !4544)
!4551 = !DILocation(line: 1122, column: 6, scope: !4513)
!4552 = !DILocation(line: 1123, column: 32, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 1122, column: 60)
!4554 = !DILocation(line: 1123, column: 39, scope: !4553)
!4555 = !DILocation(line: 1123, column: 13, scope: !4553)
!4556 = !DILocation(line: 1123, column: 11, scope: !4553)
!4557 = !DILocation(line: 1124, column: 2, scope: !4553)
!4558 = !DILocation(line: 1126, column: 38, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 1125, column: 7)
!4560 = !DILocation(line: 1126, column: 45, scope: !4559)
!4561 = !DILocation(line: 1126, column: 13, scope: !4559)
!4562 = !DILocation(line: 1126, column: 11, scope: !4559)
!4563 = !DILocation(line: 1127, column: 3, scope: !4559)
!4564 = !DILocation(line: 1127, column: 12, scope: !4559)
!4565 = !DILocation(line: 1127, column: 15, scope: !4559)
!4566 = !DILocation(line: 1127, column: 19, scope: !4559)
!4567 = !DILocation(line: 1130, column: 19, scope: !4513)
!4568 = !DILocation(line: 1130, column: 28, scope: !4513)
!4569 = !DILocation(line: 1130, column: 13, scope: !4513)
!4570 = !DILocation(line: 1130, column: 2, scope: !4513)
!4571 = !DILocation(line: 1133, column: 2, scope: !4513)
!4572 = !DILocation(line: 1133, column: 11, scope: !4513)
!4573 = !DILocation(line: 1133, column: 20, scope: !4513)
!4574 = !DILocation(line: 1135, column: 22, scope: !4513)
!4575 = !DILocation(line: 1135, column: 31, scope: !4513)
!4576 = !DILocation(line: 1135, column: 2, scope: !4513)
!4577 = !DILocation(line: 1136, column: 22, scope: !4513)
!4578 = !DILocation(line: 1136, column: 31, scope: !4513)
!4579 = !DILocation(line: 1136, column: 2, scope: !4513)
!4580 = !DILocation(line: 1138, column: 9, scope: !4513)
!4581 = !DILocation(line: 1138, column: 16, scope: !4513)
!4582 = !DILocation(line: 1138, column: 22, scope: !4513)
!4583 = !DILocation(line: 1138, column: 7, scope: !4513)
!4584 = !DILocation(line: 1139, column: 14, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 1139, column: 2)
!4586 = !DILocation(line: 1139, column: 21, scope: !4585)
!4587 = !DILocation(line: 1139, column: 27, scope: !4585)
!4588 = !DILocation(line: 1139, column: 12, scope: !4585)
!4589 = !DILocation(line: 1139, column: 7, scope: !4585)
!4590 = !DILocation(line: 1139, column: 34, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 1139, column: 2)
!4592 = !DILocation(line: 1139, column: 2, scope: !4585)
!4593 = !DILocation(line: 1142, column: 7, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 1142, column: 7)
!4595 = distinct !DILexicalBlock(scope: !4591, file: !3, line: 1139, column: 59)
!4596 = !DILocation(line: 1142, column: 7, scope: !4595)
!4597 = !DILocation(line: 1143, column: 15, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 1142, column: 19)
!4599 = !DILocation(line: 1143, column: 21, scope: !4598)
!4600 = !DILocation(line: 1143, column: 4, scope: !4598)
!4601 = !DILocation(line: 1144, column: 3, scope: !4598)
!4602 = !DILocation(line: 1146, column: 7, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 1146, column: 7)
!4604 = !DILocation(line: 1146, column: 7, scope: !4595)
!4605 = !DILocation(line: 1147, column: 18, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 1146, column: 23)
!4607 = !DILocation(line: 1147, column: 24, scope: !4606)
!4608 = !DILocation(line: 1147, column: 4, scope: !4606)
!4609 = !DILocation(line: 1148, column: 3, scope: !4606)
!4610 = !DILocation(line: 1150, column: 3, scope: !4595)
!4611 = !DILocation(line: 1150, column: 9, scope: !4595)
!4612 = !DILocation(line: 1150, column: 18, scope: !4595)
!4613 = !DILocation(line: 1151, column: 30, scope: !4595)
!4614 = !DILocation(line: 1151, column: 39, scope: !4595)
!4615 = !DILocation(line: 1151, column: 17, scope: !4595)
!4616 = !DILocation(line: 1154, column: 7, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 1154, column: 7)
!4618 = !DILocation(line: 1154, column: 15, scope: !4617)
!4619 = !DILocation(line: 1154, column: 12, scope: !4617)
!4620 = !DILocation(line: 1154, column: 7, scope: !4595)
!4621 = !DILocation(line: 1155, column: 4, scope: !4617)
!4622 = !DILocation(line: 1156, column: 2, scope: !4595)
!4623 = !DILocation(line: 1139, column: 47, scope: !4591)
!4624 = !DILocation(line: 1139, column: 53, scope: !4591)
!4625 = !DILocation(line: 1139, column: 45, scope: !4591)
!4626 = !DILocation(line: 1139, column: 2, scope: !4591)
!4627 = distinct !{!4627, !4592, !4628}
!4628 = !DILocation(line: 1156, column: 2, scope: !4585)
!4629 = !DILocation(line: 1159, column: 21, scope: !4513)
!4630 = !DILocation(line: 1159, column: 30, scope: !4513)
!4631 = !DILocation(line: 1159, column: 38, scope: !4513)
!4632 = !DILocation(line: 1159, column: 45, scope: !4513)
!4633 = !DILocation(line: 1159, column: 2, scope: !4513)
!4634 = !DILocation(line: 1160, column: 14, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 1160, column: 2)
!4636 = !DILocation(line: 1160, column: 23, scope: !4635)
!4637 = !DILocation(line: 1160, column: 29, scope: !4635)
!4638 = !DILocation(line: 1160, column: 12, scope: !4635)
!4639 = !DILocation(line: 1160, column: 7, scope: !4635)
!4640 = !DILocation(line: 1160, column: 36, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 1160, column: 2)
!4642 = !DILocation(line: 1160, column: 2, scope: !4635)
!4643 = !DILocation(line: 1161, column: 21, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 1160, column: 61)
!4645 = !DILocation(line: 1161, column: 27, scope: !4644)
!4646 = !DILocation(line: 1161, column: 38, scope: !4644)
!4647 = !DILocation(line: 1161, column: 44, scope: !4644)
!4648 = !DILocation(line: 1161, column: 54, scope: !4644)
!4649 = !DILocation(line: 1161, column: 3, scope: !4644)
!4650 = !DILocation(line: 1161, column: 9, scope: !4644)
!4651 = !DILocation(line: 1161, column: 18, scope: !4644)
!4652 = !DILocation(line: 1162, column: 21, scope: !4644)
!4653 = !DILocation(line: 1162, column: 27, scope: !4644)
!4654 = !DILocation(line: 1162, column: 38, scope: !4644)
!4655 = !DILocation(line: 1162, column: 44, scope: !4644)
!4656 = !DILocation(line: 1162, column: 54, scope: !4644)
!4657 = !DILocation(line: 1162, column: 3, scope: !4644)
!4658 = !DILocation(line: 1162, column: 9, scope: !4644)
!4659 = !DILocation(line: 1162, column: 18, scope: !4644)
!4660 = !DILocation(line: 1163, column: 19, scope: !4644)
!4661 = !DILocation(line: 1163, column: 25, scope: !4644)
!4662 = !DILocation(line: 1163, column: 34, scope: !4644)
!4663 = !DILocation(line: 1163, column: 40, scope: !4644)
!4664 = !DILocation(line: 1163, column: 48, scope: !4644)
!4665 = !DILocation(line: 1163, column: 3, scope: !4644)
!4666 = !DILocation(line: 1163, column: 9, scope: !4644)
!4667 = !DILocation(line: 1163, column: 16, scope: !4644)
!4668 = !DILocation(line: 1164, column: 19, scope: !4644)
!4669 = !DILocation(line: 1164, column: 25, scope: !4644)
!4670 = !DILocation(line: 1164, column: 34, scope: !4644)
!4671 = !DILocation(line: 1164, column: 40, scope: !4644)
!4672 = !DILocation(line: 1164, column: 48, scope: !4644)
!4673 = !DILocation(line: 1164, column: 3, scope: !4644)
!4674 = !DILocation(line: 1164, column: 9, scope: !4644)
!4675 = !DILocation(line: 1164, column: 16, scope: !4644)
!4676 = !DILocation(line: 1166, column: 7, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 1166, column: 7)
!4678 = !DILocation(line: 1166, column: 13, scope: !4677)
!4679 = !DILocation(line: 1166, column: 7, scope: !4644)
!4680 = !DILocation(line: 1167, column: 25, scope: !4677)
!4681 = !DILocation(line: 1167, column: 4, scope: !4677)
!4682 = !DILocation(line: 1167, column: 10, scope: !4677)
!4683 = !DILocation(line: 1167, column: 18, scope: !4677)
!4684 = !DILocation(line: 1167, column: 23, scope: !4677)
!4685 = !DILocation(line: 1168, column: 2, scope: !4644)
!4686 = !DILocation(line: 1160, column: 49, scope: !4641)
!4687 = !DILocation(line: 1160, column: 55, scope: !4641)
!4688 = !DILocation(line: 1160, column: 47, scope: !4641)
!4689 = !DILocation(line: 1160, column: 2, scope: !4641)
!4690 = distinct !{!4690, !4642, !4691}
!4691 = !DILocation(line: 1168, column: 2, scope: !4635)
!4692 = !DILocation(line: 1171, column: 21, scope: !4513)
!4693 = !DILocation(line: 1171, column: 30, scope: !4513)
!4694 = !DILocation(line: 1171, column: 39, scope: !4513)
!4695 = !DILocation(line: 1171, column: 46, scope: !4513)
!4696 = !DILocation(line: 1171, column: 2, scope: !4513)
!4697 = !DILocation(line: 1172, column: 12, scope: !4513)
!4698 = !DILocation(line: 1172, column: 19, scope: !4513)
!4699 = !DILocation(line: 1172, column: 26, scope: !4513)
!4700 = !DILocation(line: 1172, column: 10, scope: !4513)
!4701 = !DILocation(line: 1173, column: 14, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 1173, column: 2)
!4703 = !DILocation(line: 1173, column: 23, scope: !4702)
!4704 = !DILocation(line: 1173, column: 30, scope: !4702)
!4705 = !DILocation(line: 1173, column: 12, scope: !4702)
!4706 = !DILocation(line: 1173, column: 7, scope: !4702)
!4707 = !DILocation(line: 1173, column: 37, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 1173, column: 2)
!4709 = !DILocation(line: 1173, column: 2, scope: !4702)
!4710 = !DILocation(line: 1174, column: 20, scope: !4708)
!4711 = !DILocation(line: 1174, column: 26, scope: !4708)
!4712 = !DILocation(line: 1174, column: 3, scope: !4708)
!4713 = !DILocation(line: 1173, column: 50, scope: !4708)
!4714 = !DILocation(line: 1173, column: 56, scope: !4708)
!4715 = !DILocation(line: 1173, column: 48, scope: !4708)
!4716 = !DILocation(line: 1173, column: 72, scope: !4708)
!4717 = !DILocation(line: 1173, column: 81, scope: !4708)
!4718 = !DILocation(line: 1173, column: 70, scope: !4708)
!4719 = !DILocation(line: 1173, column: 2, scope: !4708)
!4720 = distinct !{!4720, !4709, !4721}
!4721 = !DILocation(line: 1174, column: 33, scope: !4702)
!4722 = !DILocation(line: 1176, column: 21, scope: !4513)
!4723 = !DILocation(line: 1176, column: 30, scope: !4513)
!4724 = !DILocation(line: 1176, column: 40, scope: !4513)
!4725 = !DILocation(line: 1176, column: 47, scope: !4513)
!4726 = !DILocation(line: 1176, column: 2, scope: !4513)
!4727 = !DILocation(line: 1177, column: 12, scope: !4513)
!4728 = !DILocation(line: 1177, column: 19, scope: !4513)
!4729 = !DILocation(line: 1177, column: 27, scope: !4513)
!4730 = !DILocation(line: 1177, column: 10, scope: !4513)
!4731 = !DILocation(line: 1178, column: 14, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 1178, column: 2)
!4733 = !DILocation(line: 1178, column: 23, scope: !4732)
!4734 = !DILocation(line: 1178, column: 31, scope: !4732)
!4735 = !DILocation(line: 1178, column: 12, scope: !4732)
!4736 = !DILocation(line: 1178, column: 7, scope: !4732)
!4737 = !DILocation(line: 1178, column: 38, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 1178, column: 2)
!4739 = !DILocation(line: 1178, column: 2, scope: !4732)
!4740 = !DILocation(line: 1179, column: 20, scope: !4738)
!4741 = !DILocation(line: 1179, column: 26, scope: !4738)
!4742 = !DILocation(line: 1179, column: 3, scope: !4738)
!4743 = !DILocation(line: 1178, column: 51, scope: !4738)
!4744 = !DILocation(line: 1178, column: 57, scope: !4738)
!4745 = !DILocation(line: 1178, column: 49, scope: !4738)
!4746 = !DILocation(line: 1178, column: 73, scope: !4738)
!4747 = !DILocation(line: 1178, column: 82, scope: !4738)
!4748 = !DILocation(line: 1178, column: 71, scope: !4738)
!4749 = !DILocation(line: 1178, column: 2, scope: !4738)
!4750 = distinct !{!4750, !4739, !4751}
!4751 = !DILocation(line: 1179, column: 33, scope: !4732)
!4752 = !DILocation(line: 1182, column: 6, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 1182, column: 6)
!4754 = !DILocation(line: 1182, column: 13, scope: !4753)
!4755 = !DILocation(line: 1182, column: 22, scope: !4753)
!4756 = !DILocation(line: 1182, column: 25, scope: !4753)
!4757 = !DILocation(line: 1182, column: 6, scope: !4513)
!4758 = !DILocalVariable(name: "iter", scope: !4759, file: !3, line: 1183, type: !4760)
!4759 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 1182, column: 40)
!4760 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceHashIterator", file: !29, line: 527, baseType: !3677)
!4761 = !DILocation(line: 1183, column: 29, scope: !4759)
!4762 = !DILocation(line: 1185, column: 23, scope: !4759)
!4763 = !DILocation(line: 1185, column: 3, scope: !4759)
!4764 = !DILocation(line: 1185, column: 12, scope: !4759)
!4765 = !DILocation(line: 1185, column: 21, scope: !4759)
!4766 = !DILocation(line: 1187, column: 3, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 1187, column: 3)
!4768 = !DILocation(line: 1187, column: 3, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 1187, column: 3)
!4770 = !DILocalVariable(name: "key", scope: !4771, file: !3, line: 1188, type: !792)
!4771 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 1187, column: 50)
!4772 = !DILocation(line: 1188, column: 21, scope: !4771)
!4773 = !DILocation(line: 1188, column: 27, scope: !4771)
!4774 = !DILocalVariable(name: "preview", scope: !4771, file: !3, line: 1189, type: !4775)
!4775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4776, size: 64)
!4776 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodePreview", file: !6, line: 295, baseType: !4777)
!4777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodePreview", file: !6, line: 289, size: 192, elements: !4778)
!4778 = !{!4779, !4786, !4788, !4789, !4790}
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "hash_entry", scope: !4777, file: !6, line: 290, baseType: !4780, size: 64)
!4780 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceHashEntry", file: !6, line: 286, baseType: !4781)
!4781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHashEntry", file: !6, line: 280, size: 64, elements: !4782)
!4782 = !{!4783, !4784, !4785}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4781, file: !6, line: 281, baseType: !792, size: 32)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !4781, file: !6, line: 284, baseType: !114, size: 16, offset: 32)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4781, file: !6, line: 285, baseType: !114, size: 16, offset: 48)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !4777, file: !6, line: 292, baseType: !4787, size: 64, offset: 64)
!4787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "xsize", scope: !4777, file: !6, line: 293, baseType: !114, size: 16, offset: 128)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "ysize", scope: !4777, file: !6, line: 293, baseType: !114, size: 16, offset: 144)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4777, file: !6, line: 294, baseType: !36, size: 32, offset: 160)
!4791 = !DILocation(line: 1189, column: 18, scope: !4771)
!4792 = !DILocation(line: 1189, column: 28, scope: !4771)
!4793 = !DILocation(line: 1190, column: 34, scope: !4771)
!4794 = !DILocation(line: 1190, column: 43, scope: !4771)
!4795 = !DILocation(line: 1190, column: 80, scope: !4771)
!4796 = !DILocation(line: 1190, column: 58, scope: !4771)
!4797 = !DILocation(line: 1190, column: 4, scope: !4771)
!4798 = !DILocation(line: 1191, column: 3, scope: !4771)
!4799 = distinct !{!4799, !4766, !4800}
!4800 = !DILocation(line: 1191, column: 3, scope: !4767)
!4801 = !DILocation(line: 1192, column: 2, scope: !4759)
!4802 = !DILocation(line: 1194, column: 3, scope: !4753)
!4803 = !DILocation(line: 1194, column: 12, scope: !4753)
!4804 = !DILocation(line: 1194, column: 21, scope: !4753)
!4805 = !DILocation(line: 1197, column: 14, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 1197, column: 2)
!4807 = !DILocation(line: 1197, column: 23, scope: !4806)
!4808 = !DILocation(line: 1197, column: 29, scope: !4806)
!4809 = !DILocation(line: 1197, column: 12, scope: !4806)
!4810 = !DILocation(line: 1197, column: 7, scope: !4806)
!4811 = !DILocation(line: 1197, column: 36, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 1197, column: 2)
!4813 = !DILocation(line: 1197, column: 2, scope: !4806)
!4814 = !DILocation(line: 1198, column: 7, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 1198, column: 7)
!4816 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 1197, column: 61)
!4817 = !DILocation(line: 1198, column: 13, scope: !4815)
!4818 = !DILocation(line: 1198, column: 7, scope: !4816)
!4819 = !DILocation(line: 1199, column: 19, scope: !4815)
!4820 = !DILocation(line: 1199, column: 25, scope: !4815)
!4821 = !DILocation(line: 1199, column: 33, scope: !4815)
!4822 = !DILocation(line: 1199, column: 4, scope: !4815)
!4823 = !DILocation(line: 1199, column: 10, scope: !4815)
!4824 = !DILocation(line: 1199, column: 17, scope: !4815)
!4825 = !DILocation(line: 1200, column: 2, scope: !4816)
!4826 = !DILocation(line: 1197, column: 49, scope: !4812)
!4827 = !DILocation(line: 1197, column: 55, scope: !4812)
!4828 = !DILocation(line: 1197, column: 47, scope: !4812)
!4829 = !DILocation(line: 1197, column: 2, scope: !4812)
!4830 = distinct !{!4830, !4813, !4831}
!4831 = !DILocation(line: 1200, column: 2, scope: !4806)
!4832 = !DILocation(line: 1203, column: 2, scope: !4513)
!4833 = !DILocation(line: 1203, column: 11, scope: !4513)
!4834 = !DILocation(line: 1203, column: 26, scope: !4513)
!4835 = !DILocation(line: 1205, column: 9, scope: !4513)
!4836 = !DILocation(line: 1205, column: 2, scope: !4513)
!4837 = !DILocation(line: 1206, column: 1, scope: !4513)
!4838 = distinct !DISubprogram(name: "ntreeCopyTree", scope: !3, file: !3, line: 1212, type: !4839, scopeLine: 1213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4839 = !DISubroutineType(types: !4840)
!4840 = !{!572, !2101}
!4841 = !DILocalVariable(name: "ntree", arg: 1, scope: !4838, file: !3, line: 1212, type: !2101)
!4842 = !DILocation(line: 1212, column: 37, scope: !4838)
!4843 = !DILocation(line: 1214, column: 26, scope: !4838)
!4844 = !DILocation(line: 1214, column: 35, scope: !4838)
!4845 = !DILocation(line: 1214, column: 9, scope: !4838)
!4846 = !DILocation(line: 1214, column: 2, scope: !4838)
!4847 = distinct !DISubprogram(name: "ntreeSwitchID_ex", scope: !3, file: !3, line: 1218, type: !4848, scopeLine: 1219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4848 = !DISubroutineType(types: !4849)
!4849 = !{null, !2101, !81, !81, !4501}
!4850 = !DILocalVariable(name: "ntree", arg: 1, scope: !4847, file: !3, line: 1218, type: !2101)
!4851 = !DILocation(line: 1218, column: 34, scope: !4847)
!4852 = !DILocalVariable(name: "id_from", arg: 2, scope: !4847, file: !3, line: 1218, type: !81)
!4853 = !DILocation(line: 1218, column: 45, scope: !4847)
!4854 = !DILocalVariable(name: "id_to", arg: 3, scope: !4847, file: !3, line: 1218, type: !81)
!4855 = !DILocation(line: 1218, column: 58, scope: !4847)
!4856 = !DILocalVariable(name: "do_id_user", arg: 4, scope: !4847, file: !3, line: 1218, type: !4501)
!4857 = !DILocation(line: 1218, column: 76, scope: !4847)
!4858 = !DILocalVariable(name: "node", scope: !4847, file: !3, line: 1220, type: !755)
!4859 = !DILocation(line: 1220, column: 9, scope: !4847)
!4860 = !DILocation(line: 1222, column: 6, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 1222, column: 6)
!4862 = !DILocation(line: 1222, column: 17, scope: !4861)
!4863 = !DILocation(line: 1222, column: 14, scope: !4861)
!4864 = !DILocation(line: 1222, column: 6, scope: !4847)
!4865 = !DILocation(line: 1224, column: 3, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 1222, column: 24)
!4867 = !DILocation(line: 1228, column: 14, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 1228, column: 2)
!4869 = !DILocation(line: 1228, column: 21, scope: !4868)
!4870 = !DILocation(line: 1228, column: 27, scope: !4868)
!4871 = !DILocation(line: 1228, column: 12, scope: !4868)
!4872 = !DILocation(line: 1228, column: 7, scope: !4868)
!4873 = !DILocation(line: 1228, column: 34, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 1228, column: 2)
!4875 = !DILocation(line: 1228, column: 2, scope: !4868)
!4876 = !DILocation(line: 1229, column: 7, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 1229, column: 7)
!4878 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1228, column: 59)
!4879 = !DILocation(line: 1229, column: 13, scope: !4877)
!4880 = !DILocation(line: 1229, column: 19, scope: !4877)
!4881 = !DILocation(line: 1229, column: 16, scope: !4877)
!4882 = !DILocation(line: 1229, column: 7, scope: !4878)
!4883 = !DILocation(line: 1230, column: 8, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 1230, column: 8)
!4885 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 1229, column: 28)
!4886 = !DILocation(line: 1230, column: 8, scope: !4885)
!4887 = !DILocation(line: 1231, column: 15, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 1230, column: 20)
!4889 = !DILocation(line: 1231, column: 5, scope: !4888)
!4890 = !DILocation(line: 1232, column: 16, scope: !4888)
!4891 = !DILocation(line: 1232, column: 5, scope: !4888)
!4892 = !DILocation(line: 1233, column: 4, scope: !4888)
!4893 = !DILocation(line: 1235, column: 15, scope: !4885)
!4894 = !DILocation(line: 1235, column: 4, scope: !4885)
!4895 = !DILocation(line: 1235, column: 10, scope: !4885)
!4896 = !DILocation(line: 1235, column: 13, scope: !4885)
!4897 = !DILocation(line: 1236, column: 3, scope: !4885)
!4898 = !DILocation(line: 1237, column: 2, scope: !4878)
!4899 = !DILocation(line: 1228, column: 47, scope: !4874)
!4900 = !DILocation(line: 1228, column: 53, scope: !4874)
!4901 = !DILocation(line: 1228, column: 45, scope: !4874)
!4902 = !DILocation(line: 1228, column: 2, scope: !4874)
!4903 = distinct !{!4903, !4875, !4904}
!4904 = !DILocation(line: 1237, column: 2, scope: !4868)
!4905 = !DILocation(line: 1238, column: 1, scope: !4847)
!4906 = distinct !DISubprogram(name: "ntreeSwitchID", scope: !3, file: !3, line: 1239, type: !4907, scopeLine: 1240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{null, !2101, !81, !81}
!4909 = !DILocalVariable(name: "ntree", arg: 1, scope: !4906, file: !3, line: 1239, type: !2101)
!4910 = !DILocation(line: 1239, column: 31, scope: !4906)
!4911 = !DILocalVariable(name: "id_from", arg: 2, scope: !4906, file: !3, line: 1239, type: !81)
!4912 = !DILocation(line: 1239, column: 42, scope: !4906)
!4913 = !DILocalVariable(name: "id_to", arg: 3, scope: !4906, file: !3, line: 1239, type: !81)
!4914 = !DILocation(line: 1239, column: 55, scope: !4906)
!4915 = !DILocation(line: 1241, column: 19, scope: !4906)
!4916 = !DILocation(line: 1241, column: 26, scope: !4906)
!4917 = !DILocation(line: 1241, column: 35, scope: !4906)
!4918 = !DILocation(line: 1241, column: 2, scope: !4906)
!4919 = !DILocation(line: 1242, column: 1, scope: !4906)
!4920 = distinct !DISubprogram(name: "ntreeUserIncrefID", scope: !3, file: !3, line: 1244, type: !4921, scopeLine: 1245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4921 = !DISubroutineType(types: !4922)
!4922 = !{null, !2101}
!4923 = !DILocalVariable(name: "ntree", arg: 1, scope: !4920, file: !3, line: 1244, type: !2101)
!4924 = !DILocation(line: 1244, column: 35, scope: !4920)
!4925 = !DILocalVariable(name: "node", scope: !4920, file: !3, line: 1246, type: !755)
!4926 = !DILocation(line: 1246, column: 9, scope: !4920)
!4927 = !DILocation(line: 1247, column: 14, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 1247, column: 2)
!4929 = !DILocation(line: 1247, column: 21, scope: !4928)
!4930 = !DILocation(line: 1247, column: 27, scope: !4928)
!4931 = !DILocation(line: 1247, column: 12, scope: !4928)
!4932 = !DILocation(line: 1247, column: 7, scope: !4928)
!4933 = !DILocation(line: 1247, column: 34, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 1247, column: 2)
!4935 = !DILocation(line: 1247, column: 2, scope: !4928)
!4936 = !DILocation(line: 1248, column: 14, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 1247, column: 59)
!4938 = !DILocation(line: 1248, column: 20, scope: !4937)
!4939 = !DILocation(line: 1248, column: 3, scope: !4937)
!4940 = !DILocation(line: 1249, column: 2, scope: !4937)
!4941 = !DILocation(line: 1247, column: 47, scope: !4934)
!4942 = !DILocation(line: 1247, column: 53, scope: !4934)
!4943 = !DILocation(line: 1247, column: 45, scope: !4934)
!4944 = !DILocation(line: 1247, column: 2, scope: !4934)
!4945 = distinct !{!4945, !4935, !4946}
!4946 = !DILocation(line: 1249, column: 2, scope: !4928)
!4947 = !DILocation(line: 1250, column: 1, scope: !4920)
!4948 = distinct !DISubprogram(name: "ntreeUserDecrefID", scope: !3, file: !3, line: 1251, type: !4921, scopeLine: 1252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4949 = !DILocalVariable(name: "ntree", arg: 1, scope: !4948, file: !3, line: 1251, type: !2101)
!4950 = !DILocation(line: 1251, column: 35, scope: !4948)
!4951 = !DILocalVariable(name: "node", scope: !4948, file: !3, line: 1253, type: !755)
!4952 = !DILocation(line: 1253, column: 9, scope: !4948)
!4953 = !DILocation(line: 1254, column: 14, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 1254, column: 2)
!4955 = !DILocation(line: 1254, column: 21, scope: !4954)
!4956 = !DILocation(line: 1254, column: 27, scope: !4954)
!4957 = !DILocation(line: 1254, column: 12, scope: !4954)
!4958 = !DILocation(line: 1254, column: 7, scope: !4954)
!4959 = !DILocation(line: 1254, column: 34, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 1254, column: 2)
!4961 = !DILocation(line: 1254, column: 2, scope: !4954)
!4962 = !DILocation(line: 1255, column: 13, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4960, file: !3, line: 1254, column: 59)
!4964 = !DILocation(line: 1255, column: 19, scope: !4963)
!4965 = !DILocation(line: 1255, column: 3, scope: !4963)
!4966 = !DILocation(line: 1256, column: 2, scope: !4963)
!4967 = !DILocation(line: 1254, column: 47, scope: !4960)
!4968 = !DILocation(line: 1254, column: 53, scope: !4960)
!4969 = !DILocation(line: 1254, column: 45, scope: !4960)
!4970 = !DILocation(line: 1254, column: 2, scope: !4960)
!4971 = distinct !{!4971, !4961, !4972}
!4972 = !DILocation(line: 1256, column: 2, scope: !4954)
!4973 = !DILocation(line: 1257, column: 1, scope: !4948)
!4974 = distinct !DISubprogram(name: "BKE_node_preview_used", scope: !3, file: !3, line: 1266, type: !4975, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!36, !755}
!4977 = !DILocalVariable(name: "node", arg: 1, scope: !4974, file: !3, line: 1266, type: !755)
!4978 = !DILocation(line: 1266, column: 34, scope: !4974)
!4979 = !DILocation(line: 1269, column: 10, scope: !4974)
!4980 = !DILocation(line: 1269, column: 16, scope: !4974)
!4981 = !DILocation(line: 1269, column: 26, scope: !4974)
!4982 = !DILocation(line: 1269, column: 31, scope: !4974)
!4983 = !DILocation(line: 1269, column: 47, scope: !4974)
!4984 = !DILocation(line: 1269, column: 2, scope: !4974)
!4985 = distinct !DISubprogram(name: "BKE_node_preview_verify", scope: !3, file: !3, line: 1272, type: !4986, scopeLine: 1273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{!4775, !4988, !792, !36, !36, !1074}
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4989, size: 64)
!4989 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceHash", file: !29, line: 503, baseType: !994)
!4990 = !DILocalVariable(name: "previews", arg: 1, scope: !4985, file: !3, line: 1272, type: !4988)
!4991 = !DILocation(line: 1272, column: 58, scope: !4985)
!4992 = !DILocalVariable(name: "key", arg: 2, scope: !4985, file: !3, line: 1272, type: !792)
!4993 = !DILocation(line: 1272, column: 85, scope: !4985)
!4994 = !DILocalVariable(name: "xsize", arg: 3, scope: !4985, file: !3, line: 1272, type: !36)
!4995 = !DILocation(line: 1272, column: 94, scope: !4985)
!4996 = !DILocalVariable(name: "ysize", arg: 4, scope: !4985, file: !3, line: 1272, type: !36)
!4997 = !DILocation(line: 1272, column: 105, scope: !4985)
!4998 = !DILocalVariable(name: "create", arg: 5, scope: !4985, file: !3, line: 1272, type: !1074)
!4999 = !DILocation(line: 1272, column: 117, scope: !4985)
!5000 = !DILocalVariable(name: "preview", scope: !4985, file: !3, line: 1274, type: !4775)
!5001 = !DILocation(line: 1274, column: 16, scope: !4985)
!5002 = !DILocation(line: 1276, column: 42, scope: !4985)
!5003 = !DILocation(line: 1276, column: 12, scope: !4985)
!5004 = !DILocation(line: 1276, column: 10, scope: !4985)
!5005 = !DILocation(line: 1277, column: 7, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 1277, column: 6)
!5007 = !DILocation(line: 1277, column: 6, scope: !4985)
!5008 = !DILocation(line: 1278, column: 7, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 1278, column: 7)
!5010 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 1277, column: 16)
!5011 = !DILocation(line: 1278, column: 7, scope: !5010)
!5012 = !DILocation(line: 1279, column: 14, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 1278, column: 15)
!5014 = !DILocation(line: 1279, column: 12, scope: !5013)
!5015 = !DILocation(line: 1280, column: 34, scope: !5013)
!5016 = !DILocation(line: 1280, column: 49, scope: !5013)
!5017 = !DILocation(line: 1280, column: 4, scope: !5013)
!5018 = !DILocation(line: 1281, column: 3, scope: !5013)
!5019 = !DILocation(line: 1283, column: 4, scope: !5009)
!5020 = !DILocation(line: 1284, column: 2, scope: !5010)
!5021 = !DILocation(line: 1287, column: 6, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 1287, column: 6)
!5023 = !DILocation(line: 1287, column: 12, scope: !5022)
!5024 = !DILocation(line: 1287, column: 17, scope: !5022)
!5025 = !DILocation(line: 1287, column: 20, scope: !5022)
!5026 = !DILocation(line: 1287, column: 26, scope: !5022)
!5027 = !DILocation(line: 1287, column: 6, scope: !4985)
!5028 = !DILocation(line: 1288, column: 10, scope: !5022)
!5029 = !DILocation(line: 1288, column: 3, scope: !5022)
!5030 = !DILocation(line: 1291, column: 6, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 1291, column: 6)
!5032 = !DILocation(line: 1291, column: 15, scope: !5031)
!5033 = !DILocation(line: 1291, column: 6, scope: !4985)
!5034 = !DILocation(line: 1292, column: 7, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 1292, column: 7)
!5036 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 1291, column: 21)
!5037 = !DILocation(line: 1292, column: 16, scope: !5035)
!5038 = !DILocation(line: 1292, column: 25, scope: !5035)
!5039 = !DILocation(line: 1292, column: 22, scope: !5035)
!5040 = !DILocation(line: 1292, column: 31, scope: !5035)
!5041 = !DILocation(line: 1292, column: 34, scope: !5035)
!5042 = !DILocation(line: 1292, column: 43, scope: !5035)
!5043 = !DILocation(line: 1292, column: 52, scope: !5035)
!5044 = !DILocation(line: 1292, column: 49, scope: !5035)
!5045 = !DILocation(line: 1292, column: 7, scope: !5036)
!5046 = !DILocation(line: 1293, column: 4, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 1292, column: 59)
!5048 = !DILocation(line: 1293, column: 14, scope: !5047)
!5049 = !DILocation(line: 1293, column: 23, scope: !5047)
!5050 = !DILocation(line: 1294, column: 4, scope: !5047)
!5051 = !DILocation(line: 1294, column: 13, scope: !5047)
!5052 = !DILocation(line: 1294, column: 18, scope: !5047)
!5053 = !DILocation(line: 1295, column: 3, scope: !5047)
!5054 = !DILocation(line: 1296, column: 2, scope: !5036)
!5055 = !DILocation(line: 1298, column: 6, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 1298, column: 6)
!5057 = !DILocation(line: 1298, column: 15, scope: !5056)
!5058 = !DILocation(line: 1298, column: 20, scope: !5056)
!5059 = !DILocation(line: 1298, column: 6, scope: !4985)
!5060 = !DILocation(line: 1299, column: 19, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 1298, column: 29)
!5062 = !DILocation(line: 1299, column: 35, scope: !5061)
!5063 = !DILocation(line: 1299, column: 33, scope: !5061)
!5064 = !DILocation(line: 1299, column: 31, scope: !5061)
!5065 = !DILocation(line: 1299, column: 43, scope: !5061)
!5066 = !DILocation(line: 1299, column: 51, scope: !5061)
!5067 = !DILocation(line: 1299, column: 49, scope: !5061)
!5068 = !DILocation(line: 1299, column: 57, scope: !5061)
!5069 = !DILocation(line: 1299, column: 72, scope: !5061)
!5070 = !DILocation(line: 1299, column: 41, scope: !5061)
!5071 = !DILocation(line: 1299, column: 3, scope: !5061)
!5072 = !DILocation(line: 1299, column: 12, scope: !5061)
!5073 = !DILocation(line: 1299, column: 17, scope: !5061)
!5074 = !DILocation(line: 1300, column: 20, scope: !5061)
!5075 = !DILocation(line: 1300, column: 3, scope: !5061)
!5076 = !DILocation(line: 1300, column: 12, scope: !5061)
!5077 = !DILocation(line: 1300, column: 18, scope: !5061)
!5078 = !DILocation(line: 1301, column: 20, scope: !5061)
!5079 = !DILocation(line: 1301, column: 3, scope: !5061)
!5080 = !DILocation(line: 1301, column: 12, scope: !5061)
!5081 = !DILocation(line: 1301, column: 18, scope: !5061)
!5082 = !DILocation(line: 1302, column: 2, scope: !5061)
!5083 = !DILocation(line: 1305, column: 9, scope: !4985)
!5084 = !DILocation(line: 1305, column: 2, scope: !4985)
!5085 = !DILocation(line: 1306, column: 1, scope: !4985)
!5086 = distinct !DISubprogram(name: "BKE_node_instance_hash_lookup", scope: !3, file: !3, line: 2714, type: !5087, scopeLine: 2715, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!80, !4988, !792}
!5089 = !DILocalVariable(name: "hash", arg: 1, scope: !5086, file: !3, line: 2714, type: !4988)
!5090 = !DILocation(line: 2714, column: 56, scope: !5086)
!5091 = !DILocalVariable(name: "key", arg: 2, scope: !5086, file: !3, line: 2714, type: !792)
!5092 = !DILocation(line: 2714, column: 79, scope: !5086)
!5093 = !DILocation(line: 2716, column: 26, scope: !5086)
!5094 = !DILocation(line: 2716, column: 32, scope: !5086)
!5095 = !DILocation(line: 2716, column: 39, scope: !5086)
!5096 = !DILocation(line: 2716, column: 9, scope: !5086)
!5097 = !DILocation(line: 2716, column: 2, scope: !5086)
!5098 = distinct !DISubprogram(name: "BKE_node_instance_hash_insert", scope: !3, file: !3, line: 2706, type: !5099, scopeLine: 2707, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5099 = !DISubroutineType(types: !5100)
!5100 = !{null, !4988, !792, !80}
!5101 = !DILocalVariable(name: "hash", arg: 1, scope: !5098, file: !3, line: 2706, type: !4988)
!5102 = !DILocation(line: 2706, column: 55, scope: !5098)
!5103 = !DILocalVariable(name: "key", arg: 2, scope: !5098, file: !3, line: 2706, type: !792)
!5104 = !DILocation(line: 2706, column: 78, scope: !5098)
!5105 = !DILocalVariable(name: "value", arg: 3, scope: !5098, file: !3, line: 2706, type: !80)
!5106 = !DILocation(line: 2706, column: 89, scope: !5098)
!5107 = !DILocalVariable(name: "entry", scope: !5098, file: !3, line: 2708, type: !5108)
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4780, size: 64)
!5109 = !DILocation(line: 2708, column: 26, scope: !5098)
!5110 = !DILocation(line: 2708, column: 34, scope: !5098)
!5111 = !DILocation(line: 2709, column: 2, scope: !5098)
!5112 = !DILocation(line: 2709, column: 9, scope: !5098)
!5113 = !DILocation(line: 2709, column: 15, scope: !5098)
!5114 = !DILocation(line: 2710, column: 2, scope: !5098)
!5115 = !DILocation(line: 2710, column: 9, scope: !5098)
!5116 = !DILocation(line: 2710, column: 13, scope: !5098)
!5117 = !DILocation(line: 2711, column: 19, scope: !5098)
!5118 = !DILocation(line: 2711, column: 25, scope: !5098)
!5119 = !DILocation(line: 2711, column: 33, scope: !5098)
!5120 = !DILocation(line: 2711, column: 40, scope: !5098)
!5121 = !DILocation(line: 2711, column: 32, scope: !5098)
!5122 = !DILocation(line: 2711, column: 45, scope: !5098)
!5123 = !DILocation(line: 2711, column: 2, scope: !5098)
!5124 = !DILocation(line: 2712, column: 1, scope: !5098)
!5125 = distinct !DISubprogram(name: "BKE_node_preview_copy", scope: !3, file: !3, line: 1308, type: !5126, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{!4775, !4775}
!5128 = !DILocalVariable(name: "preview", arg: 1, scope: !5125, file: !3, line: 1308, type: !4775)
!5129 = !DILocation(line: 1308, column: 51, scope: !5125)
!5130 = !DILocalVariable(name: "new_preview", scope: !5125, file: !3, line: 1310, type: !4775)
!5131 = !DILocation(line: 1310, column: 16, scope: !5125)
!5132 = !DILocation(line: 1310, column: 30, scope: !5125)
!5133 = !DILocation(line: 1310, column: 44, scope: !5125)
!5134 = !DILocation(line: 1311, column: 6, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 1311, column: 6)
!5136 = !DILocation(line: 1311, column: 15, scope: !5135)
!5137 = !DILocation(line: 1311, column: 6, scope: !5125)
!5138 = !DILocation(line: 1312, column: 23, scope: !5135)
!5139 = !DILocation(line: 1312, column: 37, scope: !5135)
!5140 = !DILocation(line: 1312, column: 46, scope: !5135)
!5141 = !DILocation(line: 1312, column: 3, scope: !5135)
!5142 = !DILocation(line: 1312, column: 16, scope: !5135)
!5143 = !DILocation(line: 1312, column: 21, scope: !5135)
!5144 = !DILocation(line: 1313, column: 9, scope: !5125)
!5145 = !DILocation(line: 1313, column: 2, scope: !5125)
!5146 = distinct !DISubprogram(name: "BKE_node_preview_free", scope: !3, file: !3, line: 1316, type: !5147, scopeLine: 1317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5147 = !DISubroutineType(types: !5148)
!5148 = !{null, !4775}
!5149 = !DILocalVariable(name: "preview", arg: 1, scope: !5146, file: !3, line: 1316, type: !4775)
!5150 = !DILocation(line: 1316, column: 42, scope: !5146)
!5151 = !DILocation(line: 1318, column: 6, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 1318, column: 6)
!5153 = !DILocation(line: 1318, column: 15, scope: !5152)
!5154 = !DILocation(line: 1318, column: 6, scope: !5146)
!5155 = !DILocation(line: 1319, column: 3, scope: !5152)
!5156 = !DILocation(line: 1319, column: 13, scope: !5152)
!5157 = !DILocation(line: 1319, column: 22, scope: !5152)
!5158 = !DILocation(line: 1320, column: 2, scope: !5146)
!5159 = !DILocation(line: 1320, column: 12, scope: !5146)
!5160 = !DILocation(line: 1321, column: 1, scope: !5146)
!5161 = distinct !DISubprogram(name: "BKE_node_preview_init_tree", scope: !3, file: !3, line: 1341, type: !5162, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5162 = !DISubroutineType(types: !5163)
!5163 = !{null, !2101, !36, !36, !36}
!5164 = !DILocalVariable(name: "ntree", arg: 1, scope: !5161, file: !3, line: 1341, type: !2101)
!5165 = !DILocation(line: 1341, column: 44, scope: !5161)
!5166 = !DILocalVariable(name: "xsize", arg: 2, scope: !5161, file: !3, line: 1341, type: !36)
!5167 = !DILocation(line: 1341, column: 55, scope: !5161)
!5168 = !DILocalVariable(name: "ysize", arg: 3, scope: !5161, file: !3, line: 1341, type: !36)
!5169 = !DILocation(line: 1341, column: 66, scope: !5161)
!5170 = !DILocalVariable(name: "create_previews", arg: 4, scope: !5161, file: !3, line: 1341, type: !36)
!5171 = !DILocation(line: 1341, column: 77, scope: !5161)
!5172 = !DILocation(line: 1343, column: 7, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 1343, column: 6)
!5174 = !DILocation(line: 1343, column: 6, scope: !5161)
!5175 = !DILocation(line: 1344, column: 3, scope: !5173)
!5176 = !DILocation(line: 1346, column: 7, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 1346, column: 6)
!5178 = !DILocation(line: 1346, column: 14, scope: !5177)
!5179 = !DILocation(line: 1346, column: 6, scope: !5161)
!5180 = !DILocation(line: 1347, column: 21, scope: !5177)
!5181 = !DILocation(line: 1347, column: 3, scope: !5177)
!5182 = !DILocation(line: 1347, column: 10, scope: !5177)
!5183 = !DILocation(line: 1347, column: 19, scope: !5177)
!5184 = !DILocation(line: 1349, column: 35, scope: !5161)
!5185 = !DILocation(line: 1349, column: 42, scope: !5161)
!5186 = !DILocation(line: 1349, column: 52, scope: !5161)
!5187 = !DILocation(line: 1349, column: 83, scope: !5161)
!5188 = !DILocation(line: 1349, column: 90, scope: !5161)
!5189 = !DILocation(line: 1349, column: 97, scope: !5161)
!5190 = !DILocation(line: 1349, column: 2, scope: !5161)
!5191 = !DILocation(line: 1350, column: 1, scope: !5161)
!5192 = distinct !DISubprogram(name: "BKE_node_instance_hash_new", scope: !3, file: !3, line: 2693, type: !5193, scopeLine: 2694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5193 = !DISubroutineType(types: !5194)
!5194 = !{!4988, !681}
!5195 = !DILocalVariable(name: "info", arg: 1, scope: !5192, file: !3, line: 2693, type: !681)
!5196 = !DILocation(line: 2693, column: 59, scope: !5192)
!5197 = !DILocalVariable(name: "hash", scope: !5192, file: !3, line: 2695, type: !4988)
!5198 = !DILocation(line: 2695, column: 21, scope: !5192)
!5199 = !DILocation(line: 2695, column: 28, scope: !5192)
!5200 = !DILocation(line: 2695, column: 67, scope: !5192)
!5201 = !DILocation(line: 2696, column: 16, scope: !5192)
!5202 = !DILocation(line: 2696, column: 2, scope: !5192)
!5203 = !DILocation(line: 2696, column: 8, scope: !5192)
!5204 = !DILocation(line: 2696, column: 14, scope: !5192)
!5205 = !DILocation(line: 2697, column: 9, scope: !5192)
!5206 = !DILocation(line: 2697, column: 2, scope: !5192)
!5207 = distinct !DISubprogram(name: "node_preview_init_tree_recursive", scope: !3, file: !3, line: 1323, type: !5208, scopeLine: 1324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{null, !4988, !2101, !792, !36, !36, !36}
!5210 = !DILocalVariable(name: "previews", arg: 1, scope: !5207, file: !3, line: 1323, type: !4988)
!5211 = !DILocation(line: 1323, column: 65, scope: !5207)
!5212 = !DILocalVariable(name: "ntree", arg: 2, scope: !5207, file: !3, line: 1323, type: !2101)
!5213 = !DILocation(line: 1323, column: 86, scope: !5207)
!5214 = !DILocalVariable(name: "parent_key", arg: 3, scope: !5207, file: !3, line: 1323, type: !792)
!5215 = !DILocation(line: 1323, column: 110, scope: !5207)
!5216 = !DILocalVariable(name: "xsize", arg: 4, scope: !5207, file: !3, line: 1323, type: !36)
!5217 = !DILocation(line: 1323, column: 126, scope: !5207)
!5218 = !DILocalVariable(name: "ysize", arg: 5, scope: !5207, file: !3, line: 1323, type: !36)
!5219 = !DILocation(line: 1323, column: 137, scope: !5207)
!5220 = !DILocalVariable(name: "create", arg: 6, scope: !5207, file: !3, line: 1323, type: !36)
!5221 = !DILocation(line: 1323, column: 148, scope: !5207)
!5222 = !DILocalVariable(name: "node", scope: !5207, file: !3, line: 1325, type: !755)
!5223 = !DILocation(line: 1325, column: 9, scope: !5207)
!5224 = !DILocation(line: 1326, column: 14, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5207, file: !3, line: 1326, column: 2)
!5226 = !DILocation(line: 1326, column: 21, scope: !5225)
!5227 = !DILocation(line: 1326, column: 27, scope: !5225)
!5228 = !DILocation(line: 1326, column: 12, scope: !5225)
!5229 = !DILocation(line: 1326, column: 7, scope: !5225)
!5230 = !DILocation(line: 1326, column: 34, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 1326, column: 2)
!5232 = !DILocation(line: 1326, column: 2, scope: !5225)
!5233 = !DILocalVariable(name: "key", scope: !5234, file: !3, line: 1327, type: !792)
!5234 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 1326, column: 59)
!5235 = !DILocation(line: 1327, column: 20, scope: !5234)
!5236 = !DILocation(line: 1327, column: 60, scope: !5234)
!5237 = !DILocation(line: 1327, column: 67, scope: !5234)
!5238 = !DILocation(line: 1327, column: 26, scope: !5234)
!5239 = !DILocation(line: 1329, column: 29, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 1329, column: 7)
!5241 = !DILocation(line: 1329, column: 7, scope: !5240)
!5242 = !DILocation(line: 1329, column: 7, scope: !5234)
!5243 = !DILocation(line: 1330, column: 26, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 1329, column: 36)
!5245 = !DILocation(line: 1330, column: 4, scope: !5244)
!5246 = !DILocation(line: 1330, column: 10, scope: !5244)
!5247 = !DILocation(line: 1330, column: 24, scope: !5244)
!5248 = !DILocation(line: 1331, column: 26, scope: !5244)
!5249 = !DILocation(line: 1331, column: 4, scope: !5244)
!5250 = !DILocation(line: 1331, column: 10, scope: !5244)
!5251 = !DILocation(line: 1331, column: 24, scope: !5244)
!5252 = !DILocation(line: 1333, column: 28, scope: !5244)
!5253 = !DILocation(line: 1333, column: 43, scope: !5244)
!5254 = !DILocation(line: 1333, column: 50, scope: !5244)
!5255 = !DILocation(line: 1333, column: 57, scope: !5244)
!5256 = !DILocation(line: 1333, column: 4, scope: !5244)
!5257 = !DILocation(line: 1334, column: 3, scope: !5244)
!5258 = !DILocation(line: 1336, column: 7, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 1336, column: 7)
!5260 = !DILocation(line: 1336, column: 13, scope: !5259)
!5261 = !DILocation(line: 1336, column: 18, scope: !5259)
!5262 = !DILocation(line: 1336, column: 32, scope: !5259)
!5263 = !DILocation(line: 1336, column: 35, scope: !5259)
!5264 = !DILocation(line: 1336, column: 41, scope: !5259)
!5265 = !DILocation(line: 1336, column: 7, scope: !5234)
!5266 = !DILocation(line: 1337, column: 37, scope: !5259)
!5267 = !DILocation(line: 1337, column: 60, scope: !5259)
!5268 = !DILocation(line: 1337, column: 66, scope: !5259)
!5269 = !DILocation(line: 1337, column: 47, scope: !5259)
!5270 = !DILocation(line: 1337, column: 75, scope: !5259)
!5271 = !DILocation(line: 1337, column: 82, scope: !5259)
!5272 = !DILocation(line: 1337, column: 89, scope: !5259)
!5273 = !DILocation(line: 1337, column: 4, scope: !5259)
!5274 = !DILocation(line: 1338, column: 2, scope: !5234)
!5275 = !DILocation(line: 1326, column: 47, scope: !5231)
!5276 = !DILocation(line: 1326, column: 53, scope: !5231)
!5277 = !DILocation(line: 1326, column: 45, scope: !5231)
!5278 = !DILocation(line: 1326, column: 2, scope: !5231)
!5279 = distinct !{!5279, !5232, !5280}
!5280 = !DILocation(line: 1338, column: 2, scope: !5225)
!5281 = !DILocation(line: 1339, column: 1, scope: !5207)
!5282 = distinct !DISubprogram(name: "BKE_node_preview_remove_unused", scope: !3, file: !3, line: 1366, type: !4921, scopeLine: 1367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5283 = !DILocalVariable(name: "ntree", arg: 1, scope: !5282, file: !3, line: 1366, type: !2101)
!5284 = !DILocation(line: 1366, column: 48, scope: !5282)
!5285 = !DILocation(line: 1368, column: 7, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 1368, column: 6)
!5287 = !DILocation(line: 1368, column: 13, scope: !5286)
!5288 = !DILocation(line: 1368, column: 17, scope: !5286)
!5289 = !DILocation(line: 1368, column: 24, scope: !5286)
!5290 = !DILocation(line: 1368, column: 6, scope: !5282)
!5291 = !DILocation(line: 1369, column: 3, scope: !5286)
!5292 = !DILocation(line: 1372, column: 36, scope: !5282)
!5293 = !DILocation(line: 1372, column: 43, scope: !5282)
!5294 = !DILocation(line: 1372, column: 2, scope: !5282)
!5295 = !DILocation(line: 1373, column: 34, scope: !5282)
!5296 = !DILocation(line: 1373, column: 41, scope: !5282)
!5297 = !DILocation(line: 1373, column: 51, scope: !5282)
!5298 = !DILocation(line: 1373, column: 2, scope: !5282)
!5299 = !DILocation(line: 1375, column: 41, scope: !5282)
!5300 = !DILocation(line: 1375, column: 48, scope: !5282)
!5301 = !DILocation(line: 1375, column: 2, scope: !5282)
!5302 = !DILocation(line: 1376, column: 1, scope: !5282)
!5303 = distinct !DISubprogram(name: "BKE_node_instance_hash_clear_tags", scope: !3, file: !3, line: 2744, type: !5304, scopeLine: 2745, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5304 = !DISubroutineType(types: !5305)
!5305 = !{null, !4988}
!5306 = !DILocalVariable(name: "hash", arg: 1, scope: !5303, file: !3, line: 2744, type: !4988)
!5307 = !DILocation(line: 2744, column: 59, scope: !5303)
!5308 = !DILocalVariable(name: "iter", scope: !5303, file: !3, line: 2746, type: !4760)
!5309 = !DILocation(line: 2746, column: 28, scope: !5303)
!5310 = !DILocation(line: 2748, column: 2, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 2748, column: 2)
!5312 = !DILocation(line: 2748, column: 2, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 2748, column: 2)
!5314 = !DILocalVariable(name: "value", scope: !5315, file: !3, line: 2749, type: !5108)
!5315 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 2748, column: 38)
!5316 = !DILocation(line: 2749, column: 27, scope: !5315)
!5317 = !DILocation(line: 2749, column: 35, scope: !5315)
!5318 = !DILocation(line: 2751, column: 3, scope: !5315)
!5319 = !DILocation(line: 2751, column: 10, scope: !5315)
!5320 = !DILocation(line: 2751, column: 14, scope: !5315)
!5321 = !DILocation(line: 2752, column: 2, scope: !5315)
!5322 = distinct !{!5322, !5310, !5323}
!5323 = !DILocation(line: 2752, column: 2, scope: !5311)
!5324 = !DILocation(line: 2753, column: 1, scope: !5303)
!5325 = distinct !DISubprogram(name: "node_preview_tag_used_recursive", scope: !3, file: !3, line: 1352, type: !5326, scopeLine: 1353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5326 = !DISubroutineType(types: !5327)
!5327 = !{null, !4988, !2101, !792}
!5328 = !DILocalVariable(name: "previews", arg: 1, scope: !5325, file: !3, line: 1352, type: !4988)
!5329 = !DILocation(line: 1352, column: 64, scope: !5325)
!5330 = !DILocalVariable(name: "ntree", arg: 2, scope: !5325, file: !3, line: 1352, type: !2101)
!5331 = !DILocation(line: 1352, column: 85, scope: !5325)
!5332 = !DILocalVariable(name: "parent_key", arg: 3, scope: !5325, file: !3, line: 1352, type: !792)
!5333 = !DILocation(line: 1352, column: 109, scope: !5325)
!5334 = !DILocalVariable(name: "node", scope: !5325, file: !3, line: 1354, type: !755)
!5335 = !DILocation(line: 1354, column: 9, scope: !5325)
!5336 = !DILocation(line: 1355, column: 14, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 1355, column: 2)
!5338 = !DILocation(line: 1355, column: 21, scope: !5337)
!5339 = !DILocation(line: 1355, column: 27, scope: !5337)
!5340 = !DILocation(line: 1355, column: 12, scope: !5337)
!5341 = !DILocation(line: 1355, column: 7, scope: !5337)
!5342 = !DILocation(line: 1355, column: 34, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 1355, column: 2)
!5344 = !DILocation(line: 1355, column: 2, scope: !5337)
!5345 = !DILocalVariable(name: "key", scope: !5346, file: !3, line: 1356, type: !792)
!5346 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 1355, column: 59)
!5347 = !DILocation(line: 1356, column: 20, scope: !5346)
!5348 = !DILocation(line: 1356, column: 60, scope: !5346)
!5349 = !DILocation(line: 1356, column: 67, scope: !5346)
!5350 = !DILocation(line: 1356, column: 26, scope: !5346)
!5351 = !DILocation(line: 1358, column: 29, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 1358, column: 7)
!5353 = !DILocation(line: 1358, column: 7, scope: !5352)
!5354 = !DILocation(line: 1358, column: 7, scope: !5346)
!5355 = !DILocation(line: 1359, column: 35, scope: !5352)
!5356 = !DILocation(line: 1359, column: 4, scope: !5352)
!5357 = !DILocation(line: 1361, column: 7, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 1361, column: 7)
!5359 = !DILocation(line: 1361, column: 13, scope: !5358)
!5360 = !DILocation(line: 1361, column: 18, scope: !5358)
!5361 = !DILocation(line: 1361, column: 32, scope: !5358)
!5362 = !DILocation(line: 1361, column: 35, scope: !5358)
!5363 = !DILocation(line: 1361, column: 41, scope: !5358)
!5364 = !DILocation(line: 1361, column: 7, scope: !5346)
!5365 = !DILocation(line: 1362, column: 36, scope: !5358)
!5366 = !DILocation(line: 1362, column: 59, scope: !5358)
!5367 = !DILocation(line: 1362, column: 65, scope: !5358)
!5368 = !DILocation(line: 1362, column: 46, scope: !5358)
!5369 = !DILocation(line: 1362, column: 4, scope: !5358)
!5370 = !DILocation(line: 1363, column: 2, scope: !5346)
!5371 = !DILocation(line: 1355, column: 47, scope: !5343)
!5372 = !DILocation(line: 1355, column: 53, scope: !5343)
!5373 = !DILocation(line: 1355, column: 45, scope: !5343)
!5374 = !DILocation(line: 1355, column: 2, scope: !5343)
!5375 = distinct !{!5375, !5344, !5376}
!5376 = !DILocation(line: 1363, column: 2, scope: !5337)
!5377 = !DILocation(line: 1364, column: 1, scope: !5325)
!5378 = distinct !DISubprogram(name: "BKE_node_instance_hash_remove_untagged", scope: !3, file: !3, line: 2773, type: !5379, scopeLine: 2774, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5379 = !DISubroutineType(types: !5380)
!5380 = !{null, !4988, !151}
!5381 = !DILocalVariable(name: "hash", arg: 1, scope: !5378, file: !3, line: 2773, type: !4988)
!5382 = !DILocation(line: 2773, column: 64, scope: !5378)
!5383 = !DILocalVariable(name: "valfreefp", arg: 2, scope: !5378, file: !3, line: 2773, type: !151)
!5384 = !DILocation(line: 2773, column: 91, scope: !5378)
!5385 = !DILocalVariable(name: "untagged", scope: !5378, file: !3, line: 2778, type: !2123)
!5386 = !DILocation(line: 2778, column: 20, scope: !5378)
!5387 = !DILocation(line: 2778, column: 31, scope: !5378)
!5388 = !DILocation(line: 2778, column: 98, scope: !5378)
!5389 = !DILocation(line: 2778, column: 70, scope: !5378)
!5390 = !DILocation(line: 2778, column: 68, scope: !5378)
!5391 = !DILocalVariable(name: "iter", scope: !5378, file: !3, line: 2779, type: !4760)
!5392 = !DILocation(line: 2779, column: 28, scope: !5378)
!5393 = !DILocalVariable(name: "num_untagged", scope: !5378, file: !3, line: 2780, type: !36)
!5394 = !DILocation(line: 2780, column: 6, scope: !5378)
!5395 = !DILocalVariable(name: "i", scope: !5378, file: !3, line: 2780, type: !36)
!5396 = !DILocation(line: 2780, column: 20, scope: !5378)
!5397 = !DILocation(line: 2782, column: 15, scope: !5378)
!5398 = !DILocation(line: 2783, column: 2, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 2783, column: 2)
!5400 = !DILocation(line: 2783, column: 2, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5399, file: !3, line: 2783, column: 2)
!5402 = !DILocalVariable(name: "value", scope: !5403, file: !3, line: 2784, type: !5108)
!5403 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 2783, column: 38)
!5404 = !DILocation(line: 2784, column: 27, scope: !5403)
!5405 = !DILocation(line: 2784, column: 35, scope: !5403)
!5406 = !DILocation(line: 2786, column: 8, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 2786, column: 7)
!5408 = !DILocation(line: 2786, column: 15, scope: !5407)
!5409 = !DILocation(line: 2786, column: 7, scope: !5403)
!5410 = !DILocation(line: 2787, column: 4, scope: !5407)
!5411 = !DILocation(line: 2787, column: 25, scope: !5407)
!5412 = !DILocation(line: 2787, column: 31, scope: !5407)
!5413 = !DILocation(line: 2788, column: 2, scope: !5403)
!5414 = distinct !{!5414, !5398, !5415}
!5415 = !DILocation(line: 2788, column: 2, scope: !5399)
!5416 = !DILocation(line: 2790, column: 9, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 2790, column: 2)
!5418 = !DILocation(line: 2790, column: 7, scope: !5417)
!5419 = !DILocation(line: 2790, column: 14, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 2790, column: 2)
!5421 = !DILocation(line: 2790, column: 18, scope: !5420)
!5422 = !DILocation(line: 2790, column: 16, scope: !5420)
!5423 = !DILocation(line: 2790, column: 2, scope: !5417)
!5424 = !DILocation(line: 2791, column: 33, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 2790, column: 37)
!5426 = !DILocation(line: 2791, column: 39, scope: !5425)
!5427 = !DILocation(line: 2791, column: 48, scope: !5425)
!5428 = !DILocation(line: 2791, column: 52, scope: !5425)
!5429 = !DILocation(line: 2791, column: 3, scope: !5425)
!5430 = !DILocation(line: 2792, column: 2, scope: !5425)
!5431 = !DILocation(line: 2790, column: 32, scope: !5420)
!5432 = !DILocation(line: 2790, column: 2, scope: !5420)
!5433 = distinct !{!5433, !5423, !5434}
!5434 = !DILocation(line: 2792, column: 2, scope: !5417)
!5435 = !DILocation(line: 2794, column: 2, scope: !5378)
!5436 = !DILocation(line: 2794, column: 12, scope: !5378)
!5437 = !DILocation(line: 2795, column: 1, scope: !5378)
!5438 = distinct !DISubprogram(name: "BKE_node_preview_free_tree", scope: !3, file: !3, line: 1378, type: !4921, scopeLine: 1379, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5439 = !DILocalVariable(name: "ntree", arg: 1, scope: !5438, file: !3, line: 1378, type: !2101)
!5440 = !DILocation(line: 1378, column: 44, scope: !5438)
!5441 = !DILocation(line: 1380, column: 7, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 1380, column: 6)
!5443 = !DILocation(line: 1380, column: 6, scope: !5438)
!5444 = !DILocation(line: 1381, column: 3, scope: !5442)
!5445 = !DILocation(line: 1383, column: 6, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 1383, column: 6)
!5447 = !DILocation(line: 1383, column: 13, scope: !5446)
!5448 = !DILocation(line: 1383, column: 6, scope: !5438)
!5449 = !DILocation(line: 1384, column: 31, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 1383, column: 23)
!5451 = !DILocation(line: 1384, column: 38, scope: !5450)
!5452 = !DILocation(line: 1384, column: 3, scope: !5450)
!5453 = !DILocation(line: 1385, column: 3, scope: !5450)
!5454 = !DILocation(line: 1385, column: 10, scope: !5450)
!5455 = !DILocation(line: 1385, column: 19, scope: !5450)
!5456 = !DILocation(line: 1386, column: 2, scope: !5450)
!5457 = !DILocation(line: 1387, column: 1, scope: !5438)
!5458 = distinct !DISubprogram(name: "BKE_node_instance_hash_free", scope: !3, file: !3, line: 2700, type: !5379, scopeLine: 2701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5459 = !DILocalVariable(name: "hash", arg: 1, scope: !5458, file: !3, line: 2700, type: !4988)
!5460 = !DILocation(line: 2700, column: 53, scope: !5458)
!5461 = !DILocalVariable(name: "valfreefp", arg: 2, scope: !5458, file: !3, line: 2700, type: !151)
!5462 = !DILocation(line: 2700, column: 80, scope: !5458)
!5463 = !DILocation(line: 2702, column: 17, scope: !5458)
!5464 = !DILocation(line: 2702, column: 23, scope: !5458)
!5465 = !DILocation(line: 2702, column: 52, scope: !5458)
!5466 = !DILocation(line: 2702, column: 2, scope: !5458)
!5467 = !DILocation(line: 2703, column: 2, scope: !5458)
!5468 = !DILocation(line: 2703, column: 12, scope: !5458)
!5469 = !DILocation(line: 2704, column: 1, scope: !5458)
!5470 = distinct !DISubprogram(name: "BKE_node_preview_clear", scope: !3, file: !3, line: 1389, type: !5147, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5471 = !DILocalVariable(name: "preview", arg: 1, scope: !5470, file: !3, line: 1389, type: !4775)
!5472 = !DILocation(line: 1389, column: 43, scope: !5470)
!5473 = !DILocation(line: 1391, column: 6, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 1391, column: 6)
!5475 = !DILocation(line: 1391, column: 14, scope: !5474)
!5476 = !DILocation(line: 1391, column: 17, scope: !5474)
!5477 = !DILocation(line: 1391, column: 26, scope: !5474)
!5478 = !DILocation(line: 1391, column: 6, scope: !5470)
!5479 = !DILocation(line: 1392, column: 10, scope: !5474)
!5480 = !DILocation(line: 1392, column: 19, scope: !5474)
!5481 = !DILocation(line: 1392, column: 28, scope: !5474)
!5482 = !DILocation(line: 1392, column: 43, scope: !5474)
!5483 = !DILocation(line: 1392, column: 52, scope: !5474)
!5484 = !DILocation(line: 1392, column: 3, scope: !5474)
!5485 = !DILocation(line: 1393, column: 1, scope: !5470)
!5486 = distinct !DISubprogram(name: "BKE_node_preview_clear_tree", scope: !3, file: !3, line: 1395, type: !4921, scopeLine: 1396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5487 = !DILocalVariable(name: "ntree", arg: 1, scope: !5486, file: !3, line: 1395, type: !2101)
!5488 = !DILocation(line: 1395, column: 45, scope: !5486)
!5489 = !DILocalVariable(name: "iter", scope: !5486, file: !3, line: 1397, type: !4760)
!5490 = !DILocation(line: 1397, column: 28, scope: !5486)
!5491 = !DILocation(line: 1399, column: 7, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1399, column: 6)
!5493 = !DILocation(line: 1399, column: 13, scope: !5492)
!5494 = !DILocation(line: 1399, column: 17, scope: !5492)
!5495 = !DILocation(line: 1399, column: 24, scope: !5492)
!5496 = !DILocation(line: 1399, column: 6, scope: !5486)
!5497 = !DILocation(line: 1400, column: 3, scope: !5492)
!5498 = !DILocation(line: 1402, column: 2, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1402, column: 2)
!5500 = !DILocation(line: 1402, column: 2, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 1402, column: 2)
!5502 = !DILocalVariable(name: "preview", scope: !5503, file: !3, line: 1403, type: !4775)
!5503 = distinct !DILexicalBlock(scope: !5501, file: !3, line: 1402, column: 49)
!5504 = !DILocation(line: 1403, column: 17, scope: !5503)
!5505 = !DILocation(line: 1403, column: 27, scope: !5503)
!5506 = !DILocation(line: 1404, column: 26, scope: !5503)
!5507 = !DILocation(line: 1404, column: 3, scope: !5503)
!5508 = !DILocation(line: 1405, column: 2, scope: !5503)
!5509 = distinct !{!5509, !5498, !5510}
!5510 = !DILocation(line: 1405, column: 2, scope: !5499)
!5511 = !DILocation(line: 1406, column: 1, scope: !5486)
!5512 = distinct !DISubprogram(name: "BKE_node_instance_hash_iterator_init", scope: !29, file: !29, line: 530, type: !5513, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5513 = !DISubroutineType(types: !5514)
!5514 = !{null, !5515, !4988}
!5515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4760, size: 64)
!5516 = !DILocalVariable(name: "iter", arg: 1, scope: !5512, file: !29, line: 530, type: !5515)
!5517 = !DILocation(line: 530, column: 103, scope: !5512)
!5518 = !DILocalVariable(name: "hash", arg: 2, scope: !5512, file: !29, line: 530, type: !4988)
!5519 = !DILocation(line: 530, column: 128, scope: !5512)
!5520 = !DILocation(line: 530, column: 159, scope: !5512)
!5521 = !DILocation(line: 530, column: 165, scope: !5512)
!5522 = !DILocation(line: 530, column: 171, scope: !5512)
!5523 = !DILocation(line: 530, column: 136, scope: !5512)
!5524 = !DILocation(line: 530, column: 179, scope: !5512)
!5525 = distinct !DISubprogram(name: "BKE_node_instance_hash_iterator_done", scope: !29, file: !29, line: 535, type: !5526, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{!1074, !5515}
!5528 = !DILocalVariable(name: "iter", arg: 1, scope: !5525, file: !29, line: 535, type: !5515)
!5529 = !DILocation(line: 535, column: 103, scope: !5525)
!5530 = !DILocation(line: 535, column: 141, scope: !5525)
!5531 = !DILocation(line: 535, column: 118, scope: !5525)
!5532 = !DILocation(line: 535, column: 111, scope: !5525)
!5533 = distinct !DISubprogram(name: "BKE_node_instance_hash_iterator_get_value", scope: !29, file: !29, line: 533, type: !5534, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5534 = !DISubroutineType(types: !5535)
!5535 = !{!80, !5515}
!5536 = !DILocalVariable(name: "iter", arg: 1, scope: !5533, file: !29, line: 533, type: !5515)
!5537 = !DILocation(line: 533, column: 108, scope: !5533)
!5538 = !DILocation(line: 533, column: 150, scope: !5533)
!5539 = !DILocation(line: 533, column: 123, scope: !5533)
!5540 = !DILocation(line: 533, column: 116, scope: !5533)
!5541 = distinct !DISubprogram(name: "BKE_node_instance_hash_iterator_step", scope: !29, file: !29, line: 534, type: !5542, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5542 = !DISubroutineType(types: !5543)
!5543 = !{null, !5515}
!5544 = !DILocalVariable(name: "iter", arg: 1, scope: !5541, file: !29, line: 534, type: !5515)
!5545 = !DILocation(line: 534, column: 103, scope: !5541)
!5546 = !DILocation(line: 534, column: 134, scope: !5541)
!5547 = !DILocation(line: 534, column: 111, scope: !5541)
!5548 = !DILocation(line: 534, column: 141, scope: !5541)
!5549 = distinct !DISubprogram(name: "BKE_node_preview_sync_tree", scope: !3, file: !3, line: 1421, type: !5550, scopeLine: 1422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5550 = !DISubroutineType(types: !5551)
!5551 = !{null, !2101, !2101}
!5552 = !DILocalVariable(name: "to_ntree", arg: 1, scope: !5549, file: !3, line: 1421, type: !2101)
!5553 = !DILocation(line: 1421, column: 44, scope: !5549)
!5554 = !DILocalVariable(name: "from_ntree", arg: 2, scope: !5549, file: !3, line: 1421, type: !2101)
!5555 = !DILocation(line: 1421, column: 65, scope: !5549)
!5556 = !DILocalVariable(name: "from_previews", scope: !5549, file: !3, line: 1423, type: !4988)
!5557 = !DILocation(line: 1423, column: 21, scope: !5549)
!5558 = !DILocation(line: 1423, column: 37, scope: !5549)
!5559 = !DILocation(line: 1423, column: 49, scope: !5549)
!5560 = !DILocalVariable(name: "to_previews", scope: !5549, file: !3, line: 1424, type: !4988)
!5561 = !DILocation(line: 1424, column: 21, scope: !5549)
!5562 = !DILocation(line: 1424, column: 35, scope: !5549)
!5563 = !DILocation(line: 1424, column: 45, scope: !5549)
!5564 = !DILocalVariable(name: "iter", scope: !5549, file: !3, line: 1425, type: !4760)
!5565 = !DILocation(line: 1425, column: 28, scope: !5549)
!5566 = !DILocation(line: 1427, column: 7, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 1427, column: 6)
!5568 = !DILocation(line: 1427, column: 21, scope: !5567)
!5569 = !DILocation(line: 1427, column: 25, scope: !5567)
!5570 = !DILocation(line: 1427, column: 6, scope: !5549)
!5571 = !DILocation(line: 1428, column: 3, scope: !5567)
!5572 = !DILocation(line: 1430, column: 2, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 1430, column: 2)
!5574 = !DILocation(line: 1430, column: 2, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5573, file: !3, line: 1430, column: 2)
!5576 = !DILocalVariable(name: "key", scope: !5577, file: !3, line: 1431, type: !792)
!5577 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 1430, column: 47)
!5578 = !DILocation(line: 1431, column: 20, scope: !5577)
!5579 = !DILocation(line: 1431, column: 26, scope: !5577)
!5580 = !DILocalVariable(name: "from", scope: !5577, file: !3, line: 1432, type: !4775)
!5581 = !DILocation(line: 1432, column: 17, scope: !5577)
!5582 = !DILocation(line: 1432, column: 24, scope: !5577)
!5583 = !DILocalVariable(name: "to", scope: !5577, file: !3, line: 1433, type: !4775)
!5584 = !DILocation(line: 1433, column: 17, scope: !5577)
!5585 = !DILocation(line: 1433, column: 52, scope: !5577)
!5586 = !DILocation(line: 1433, column: 22, scope: !5577)
!5587 = !DILocation(line: 1435, column: 7, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 1435, column: 7)
!5589 = !DILocation(line: 1435, column: 12, scope: !5588)
!5590 = !DILocation(line: 1435, column: 15, scope: !5588)
!5591 = !DILocation(line: 1435, column: 7, scope: !5577)
!5592 = !DILocation(line: 1436, column: 22, scope: !5588)
!5593 = !DILocation(line: 1436, column: 26, scope: !5588)
!5594 = !DILocation(line: 1436, column: 4, scope: !5588)
!5595 = !DILocation(line: 1437, column: 2, scope: !5577)
!5596 = distinct !{!5596, !5572, !5597}
!5597 = !DILocation(line: 1437, column: 2, scope: !5573)
!5598 = !DILocation(line: 1438, column: 1, scope: !5549)
!5599 = distinct !DISubprogram(name: "BKE_node_instance_hash_iterator_get_key", scope: !29, file: !29, line: 532, type: !5600, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5600 = !DISubroutineType(types: !5601)
!5601 = !{!792, !5515}
!5602 = !DILocalVariable(name: "iter", arg: 1, scope: !5599, file: !29, line: 532, type: !5515)
!5603 = !DILocation(line: 532, column: 106, scope: !5599)
!5604 = !DILocation(line: 532, column: 167, scope: !5599)
!5605 = !DILocation(line: 532, column: 142, scope: !5599)
!5606 = !DILocation(line: 532, column: 122, scope: !5599)
!5607 = !DILocation(line: 532, column: 121, scope: !5599)
!5608 = !DILocation(line: 532, column: 114, scope: !5599)
!5609 = distinct !DISubprogram(name: "node_preview_sync", scope: !3, file: !3, line: 1408, type: !5610, scopeLine: 1409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{null, !4775, !4775}
!5612 = !DILocalVariable(name: "to", arg: 1, scope: !5609, file: !3, line: 1408, type: !4775)
!5613 = !DILocation(line: 1408, column: 45, scope: !5609)
!5614 = !DILocalVariable(name: "from", arg: 2, scope: !5609, file: !3, line: 1408, type: !4775)
!5615 = !DILocation(line: 1408, column: 63, scope: !5609)
!5616 = !DILocation(line: 1414, column: 6, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 1414, column: 6)
!5618 = !DILocation(line: 1414, column: 10, scope: !5617)
!5619 = !DILocation(line: 1414, column: 15, scope: !5617)
!5620 = !DILocation(line: 1414, column: 18, scope: !5617)
!5621 = !DILocation(line: 1414, column: 24, scope: !5617)
!5622 = !DILocation(line: 1414, column: 6, scope: !5609)
!5623 = !DILocalVariable(name: "xsize", scope: !5624, file: !3, line: 1415, type: !36)
!5624 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 1414, column: 30)
!5625 = !DILocation(line: 1415, column: 7, scope: !5624)
!5626 = !DILocation(line: 1415, column: 15, scope: !5624)
!5627 = !DILocation(line: 1415, column: 19, scope: !5624)
!5628 = !DILocalVariable(name: "ysize", scope: !5624, file: !3, line: 1416, type: !36)
!5629 = !DILocation(line: 1416, column: 7, scope: !5624)
!5630 = !DILocation(line: 1416, column: 15, scope: !5624)
!5631 = !DILocation(line: 1416, column: 19, scope: !5624)
!5632 = !DILocation(line: 1417, column: 10, scope: !5624)
!5633 = !DILocation(line: 1417, column: 14, scope: !5624)
!5634 = !DILocation(line: 1417, column: 20, scope: !5624)
!5635 = !DILocation(line: 1417, column: 26, scope: !5624)
!5636 = !DILocation(line: 1417, column: 36, scope: !5624)
!5637 = !DILocation(line: 1417, column: 34, scope: !5624)
!5638 = !DILocation(line: 1417, column: 32, scope: !5624)
!5639 = !DILocation(line: 1417, column: 44, scope: !5624)
!5640 = !DILocation(line: 1417, column: 52, scope: !5624)
!5641 = !DILocation(line: 1417, column: 50, scope: !5624)
!5642 = !DILocation(line: 1417, column: 58, scope: !5624)
!5643 = !DILocation(line: 1417, column: 73, scope: !5624)
!5644 = !DILocation(line: 1417, column: 42, scope: !5624)
!5645 = !DILocation(line: 1417, column: 3, scope: !5624)
!5646 = !DILocation(line: 1418, column: 2, scope: !5624)
!5647 = !DILocation(line: 1419, column: 1, scope: !5609)
!5648 = distinct !DISubprogram(name: "BKE_node_preview_merge_tree", scope: !3, file: !3, line: 1440, type: !5649, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5649 = !DISubroutineType(types: !5650)
!5650 = !{null, !2101, !2101, !1074}
!5651 = !DILocalVariable(name: "to_ntree", arg: 1, scope: !5648, file: !3, line: 1440, type: !2101)
!5652 = !DILocation(line: 1440, column: 45, scope: !5648)
!5653 = !DILocalVariable(name: "from_ntree", arg: 2, scope: !5648, file: !3, line: 1440, type: !2101)
!5654 = !DILocation(line: 1440, column: 66, scope: !5648)
!5655 = !DILocalVariable(name: "remove_old", arg: 3, scope: !5648, file: !3, line: 1440, type: !1074)
!5656 = !DILocation(line: 1440, column: 83, scope: !5648)
!5657 = !DILocation(line: 1442, column: 6, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 1442, column: 6)
!5659 = !DILocation(line: 1442, column: 17, scope: !5658)
!5660 = !DILocation(line: 1442, column: 21, scope: !5658)
!5661 = !DILocation(line: 1442, column: 31, scope: !5658)
!5662 = !DILocation(line: 1442, column: 6, scope: !5648)
!5663 = !DILocation(line: 1444, column: 7, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 1444, column: 7)
!5665 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 1442, column: 41)
!5666 = !DILocation(line: 1444, column: 17, scope: !5664)
!5667 = !DILocation(line: 1444, column: 7, scope: !5665)
!5668 = !DILocation(line: 1445, column: 32, scope: !5664)
!5669 = !DILocation(line: 1445, column: 42, scope: !5664)
!5670 = !DILocation(line: 1445, column: 4, scope: !5664)
!5671 = !DILocation(line: 1448, column: 24, scope: !5665)
!5672 = !DILocation(line: 1448, column: 36, scope: !5665)
!5673 = !DILocation(line: 1448, column: 3, scope: !5665)
!5674 = !DILocation(line: 1448, column: 13, scope: !5665)
!5675 = !DILocation(line: 1448, column: 22, scope: !5665)
!5676 = !DILocation(line: 1449, column: 3, scope: !5665)
!5677 = !DILocation(line: 1449, column: 15, scope: !5665)
!5678 = !DILocation(line: 1449, column: 24, scope: !5665)
!5679 = !DILocation(line: 1452, column: 34, scope: !5665)
!5680 = !DILocation(line: 1452, column: 3, scope: !5665)
!5681 = !DILocation(line: 1453, column: 2, scope: !5665)
!5682 = !DILocalVariable(name: "iter", scope: !5683, file: !3, line: 1455, type: !4760)
!5683 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 1454, column: 7)
!5684 = !DILocation(line: 1455, column: 29, scope: !5683)
!5685 = !DILocation(line: 1457, column: 7, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 1457, column: 7)
!5687 = !DILocation(line: 1457, column: 19, scope: !5686)
!5688 = !DILocation(line: 1457, column: 7, scope: !5683)
!5689 = !DILocation(line: 1458, column: 4, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 1458, column: 4)
!5691 = distinct !DILexicalBlock(scope: !5686, file: !3, line: 1457, column: 29)
!5692 = !DILocation(line: 1458, column: 4, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 1458, column: 4)
!5694 = !DILocalVariable(name: "key", scope: !5695, file: !3, line: 1459, type: !792)
!5695 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 1458, column: 56)
!5696 = !DILocation(line: 1459, column: 22, scope: !5695)
!5697 = !DILocation(line: 1459, column: 28, scope: !5695)
!5698 = !DILocalVariable(name: "preview", scope: !5695, file: !3, line: 1460, type: !4775)
!5699 = !DILocation(line: 1460, column: 19, scope: !5695)
!5700 = !DILocation(line: 1460, column: 29, scope: !5695)
!5701 = !DILocation(line: 1463, column: 35, scope: !5695)
!5702 = !DILocation(line: 1463, column: 45, scope: !5695)
!5703 = !DILocation(line: 1463, column: 5, scope: !5695)
!5704 = !DILocation(line: 1464, column: 35, scope: !5695)
!5705 = !DILocation(line: 1464, column: 45, scope: !5695)
!5706 = !DILocation(line: 1464, column: 60, scope: !5695)
!5707 = !DILocation(line: 1464, column: 5, scope: !5695)
!5708 = !DILocation(line: 1465, column: 4, scope: !5695)
!5709 = distinct !{!5709, !5689, !5710}
!5710 = !DILocation(line: 1465, column: 4, scope: !5690)
!5711 = !DILocation(line: 1468, column: 32, scope: !5691)
!5712 = !DILocation(line: 1468, column: 44, scope: !5691)
!5713 = !DILocation(line: 1468, column: 4, scope: !5691)
!5714 = !DILocation(line: 1469, column: 4, scope: !5691)
!5715 = !DILocation(line: 1469, column: 16, scope: !5691)
!5716 = !DILocation(line: 1469, column: 25, scope: !5691)
!5717 = !DILocation(line: 1470, column: 3, scope: !5691)
!5718 = !DILocation(line: 1472, column: 1, scope: !5648)
!5719 = distinct !DISubprogram(name: "BKE_node_instance_hash_remove", scope: !3, file: !3, line: 2719, type: !5720, scopeLine: 2720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5720 = !DISubroutineType(types: !5721)
!5721 = !{!36, !4988, !792, !151}
!5722 = !DILocalVariable(name: "hash", arg: 1, scope: !5719, file: !3, line: 2719, type: !4988)
!5723 = !DILocation(line: 2719, column: 54, scope: !5719)
!5724 = !DILocalVariable(name: "key", arg: 2, scope: !5719, file: !3, line: 2719, type: !792)
!5725 = !DILocation(line: 2719, column: 77, scope: !5719)
!5726 = !DILocalVariable(name: "valfreefp", arg: 3, scope: !5719, file: !3, line: 2719, type: !151)
!5727 = !DILocation(line: 2719, column: 103, scope: !5719)
!5728 = !DILocation(line: 2721, column: 26, scope: !5719)
!5729 = !DILocation(line: 2721, column: 32, scope: !5719)
!5730 = !DILocation(line: 2721, column: 39, scope: !5719)
!5731 = !DILocation(line: 2721, column: 67, scope: !5719)
!5732 = !DILocation(line: 2721, column: 9, scope: !5719)
!5733 = !DILocation(line: 2721, column: 2, scope: !5719)
!5734 = distinct !DISubprogram(name: "BKE_node_preview_set_pixel", scope: !3, file: !3, line: 1477, type: !5735, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5735 = !DISubroutineType(types: !5736)
!5736 = !{null, !4775, !5737, !36, !36, !1074}
!5737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5738, size: 64)
!5738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!5739 = !DILocalVariable(name: "preview", arg: 1, scope: !5734, file: !3, line: 1477, type: !4775)
!5740 = !DILocation(line: 1477, column: 47, scope: !5734)
!5741 = !DILocalVariable(name: "col", arg: 2, scope: !5734, file: !3, line: 1477, type: !5737)
!5742 = !DILocation(line: 1477, column: 68, scope: !5734)
!5743 = !DILocalVariable(name: "x", arg: 3, scope: !5734, file: !3, line: 1477, type: !36)
!5744 = !DILocation(line: 1477, column: 80, scope: !5734)
!5745 = !DILocalVariable(name: "y", arg: 4, scope: !5734, file: !3, line: 1477, type: !36)
!5746 = !DILocation(line: 1477, column: 87, scope: !5734)
!5747 = !DILocalVariable(name: "do_manage", arg: 5, scope: !5734, file: !3, line: 1477, type: !1074)
!5748 = !DILocation(line: 1477, column: 95, scope: !5734)
!5749 = !DILocation(line: 1479, column: 6, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5734, file: !3, line: 1479, column: 6)
!5751 = !DILocation(line: 1479, column: 6, scope: !5734)
!5752 = !DILocation(line: 1480, column: 7, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 1480, column: 7)
!5754 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 1479, column: 15)
!5755 = !DILocation(line: 1480, column: 9, scope: !5753)
!5756 = !DILocation(line: 1480, column: 14, scope: !5753)
!5757 = !DILocation(line: 1480, column: 17, scope: !5753)
!5758 = !DILocation(line: 1480, column: 19, scope: !5753)
!5759 = !DILocation(line: 1480, column: 7, scope: !5754)
!5760 = !DILocation(line: 1481, column: 8, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1481, column: 8)
!5762 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1480, column: 25)
!5763 = !DILocation(line: 1481, column: 12, scope: !5761)
!5764 = !DILocation(line: 1481, column: 21, scope: !5761)
!5765 = !DILocation(line: 1481, column: 10, scope: !5761)
!5766 = !DILocation(line: 1481, column: 27, scope: !5761)
!5767 = !DILocation(line: 1481, column: 30, scope: !5761)
!5768 = !DILocation(line: 1481, column: 34, scope: !5761)
!5769 = !DILocation(line: 1481, column: 43, scope: !5761)
!5770 = !DILocation(line: 1481, column: 32, scope: !5761)
!5771 = !DILocation(line: 1481, column: 8, scope: !5762)
!5772 = !DILocalVariable(name: "tar", scope: !5773, file: !3, line: 1482, type: !4787)
!5773 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 1481, column: 50)
!5774 = !DILocation(line: 1482, column: 20, scope: !5773)
!5775 = !DILocation(line: 1482, column: 26, scope: !5773)
!5776 = !DILocation(line: 1482, column: 35, scope: !5773)
!5777 = !DILocation(line: 1482, column: 48, scope: !5773)
!5778 = !DILocation(line: 1482, column: 57, scope: !5773)
!5779 = !DILocation(line: 1482, column: 65, scope: !5773)
!5780 = !DILocation(line: 1482, column: 63, scope: !5773)
!5781 = !DILocation(line: 1482, column: 70, scope: !5773)
!5782 = !DILocation(line: 1482, column: 68, scope: !5773)
!5783 = !DILocation(line: 1482, column: 44, scope: !5773)
!5784 = !DILocation(line: 1482, column: 40, scope: !5773)
!5785 = !DILocation(line: 1484, column: 9, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 1484, column: 9)
!5787 = !DILocation(line: 1484, column: 9, scope: !5773)
!5788 = !DILocation(line: 1485, column: 31, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 1484, column: 20)
!5790 = !DILocation(line: 1485, column: 36, scope: !5789)
!5791 = !DILocation(line: 1485, column: 6, scope: !5789)
!5792 = !DILocation(line: 1486, column: 5, scope: !5789)
!5793 = !DILocation(line: 1488, column: 26, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 1487, column: 10)
!5795 = !DILocation(line: 1488, column: 31, scope: !5794)
!5796 = !DILocation(line: 1488, column: 6, scope: !5794)
!5797 = !DILocation(line: 1490, column: 4, scope: !5773)
!5798 = !DILocation(line: 1492, column: 3, scope: !5762)
!5799 = !DILocation(line: 1494, column: 2, scope: !5754)
!5800 = !DILocation(line: 1495, column: 1, scope: !5734)
!5801 = distinct !DISubprogram(name: "linearrgb_to_srgb_uchar4", scope: !5802, file: !5802, line: 73, type: !5803, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5802 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_color_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5803 = !DISubroutineType(types: !5804)
!5804 = !{null, !4787, !5737}
!5805 = !DILocalVariable(name: "srgb", arg: 1, scope: !5801, file: !5802, line: 73, type: !4787)
!5806 = !DILocation(line: 73, column: 53, scope: !5801)
!5807 = !DILocalVariable(name: "linear", arg: 2, scope: !5801, file: !5802, line: 73, type: !5737)
!5808 = !DILocation(line: 73, column: 74, scope: !5801)
!5809 = !DILocalVariable(name: "srgb_f", scope: !5801, file: !5802, line: 75, type: !348)
!5810 = !DILocation(line: 75, column: 8, scope: !5801)
!5811 = !DILocation(line: 77, column: 23, scope: !5801)
!5812 = !DILocation(line: 77, column: 31, scope: !5801)
!5813 = !DILocation(line: 77, column: 2, scope: !5801)
!5814 = !DILocation(line: 78, column: 2, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5801, file: !5802, line: 78, column: 2)
!5816 = !DILocation(line: 79, column: 1, scope: !5801)
!5817 = distinct !DISubprogram(name: "nodeUnlinkNode", scope: !3, file: !3, line: 1548, type: !3412, scopeLine: 1549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5818 = !DILocalVariable(name: "ntree", arg: 1, scope: !5817, file: !3, line: 1548, type: !2101)
!5819 = !DILocation(line: 1548, column: 32, scope: !5817)
!5820 = !DILocalVariable(name: "node", arg: 2, scope: !5817, file: !3, line: 1548, type: !755)
!5821 = !DILocation(line: 1548, column: 46, scope: !5817)
!5822 = !DILocalVariable(name: "link", scope: !5817, file: !3, line: 1550, type: !3293)
!5823 = !DILocation(line: 1550, column: 13, scope: !5817)
!5824 = !DILocalVariable(name: "next", scope: !5817, file: !3, line: 1550, type: !3293)
!5825 = !DILocation(line: 1550, column: 20, scope: !5817)
!5826 = !DILocalVariable(name: "sock", scope: !5817, file: !3, line: 1551, type: !759)
!5827 = !DILocation(line: 1551, column: 15, scope: !5817)
!5828 = !DILocalVariable(name: "lb", scope: !5817, file: !3, line: 1552, type: !2951)
!5829 = !DILocation(line: 1552, column: 12, scope: !5817)
!5830 = !DILocation(line: 1554, column: 14, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 1554, column: 2)
!5832 = !DILocation(line: 1554, column: 21, scope: !5831)
!5833 = !DILocation(line: 1554, column: 27, scope: !5831)
!5834 = !DILocation(line: 1554, column: 12, scope: !5831)
!5835 = !DILocation(line: 1554, column: 7, scope: !5831)
!5836 = !DILocation(line: 1554, column: 34, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 1554, column: 2)
!5838 = !DILocation(line: 1554, column: 2, scope: !5831)
!5839 = !DILocation(line: 1555, column: 10, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5837, file: !3, line: 1554, column: 53)
!5841 = !DILocation(line: 1555, column: 16, scope: !5840)
!5842 = !DILocation(line: 1555, column: 8, scope: !5840)
!5843 = !DILocation(line: 1557, column: 7, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1557, column: 7)
!5845 = !DILocation(line: 1557, column: 13, scope: !5844)
!5846 = !DILocation(line: 1557, column: 25, scope: !5844)
!5847 = !DILocation(line: 1557, column: 22, scope: !5844)
!5848 = !DILocation(line: 1557, column: 7, scope: !5840)
!5849 = !DILocation(line: 1558, column: 10, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1557, column: 31)
!5851 = !DILocation(line: 1558, column: 16, scope: !5850)
!5852 = !DILocation(line: 1558, column: 7, scope: !5850)
!5853 = !DILocation(line: 1559, column: 8, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 1559, column: 8)
!5855 = !DILocation(line: 1559, column: 14, scope: !5854)
!5856 = !DILocation(line: 1559, column: 8, scope: !5850)
!5857 = !DILocation(line: 1560, column: 5, scope: !5854)
!5858 = !DILocation(line: 1560, column: 11, scope: !5854)
!5859 = !DILocation(line: 1560, column: 19, scope: !5854)
!5860 = !DILocation(line: 1560, column: 26, scope: !5854)
!5861 = !DILocation(line: 1561, column: 3, scope: !5850)
!5862 = !DILocation(line: 1562, column: 12, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1562, column: 12)
!5864 = !DILocation(line: 1562, column: 18, scope: !5863)
!5865 = !DILocation(line: 1562, column: 28, scope: !5863)
!5866 = !DILocation(line: 1562, column: 25, scope: !5863)
!5867 = !DILocation(line: 1562, column: 12, scope: !5844)
!5868 = !DILocation(line: 1563, column: 10, scope: !5863)
!5869 = !DILocation(line: 1563, column: 16, scope: !5863)
!5870 = !DILocation(line: 1563, column: 7, scope: !5863)
!5871 = !DILocation(line: 1563, column: 4, scope: !5863)
!5872 = !DILocation(line: 1565, column: 7, scope: !5863)
!5873 = !DILocation(line: 1567, column: 7, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1567, column: 7)
!5875 = !DILocation(line: 1567, column: 7, scope: !5840)
!5876 = !DILocation(line: 1568, column: 16, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 1568, column: 4)
!5878 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 1567, column: 11)
!5879 = !DILocation(line: 1568, column: 20, scope: !5877)
!5880 = !DILocation(line: 1568, column: 14, scope: !5877)
!5881 = !DILocation(line: 1568, column: 9, scope: !5877)
!5882 = !DILocation(line: 1568, column: 27, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 1568, column: 4)
!5884 = !DILocation(line: 1568, column: 4, scope: !5877)
!5885 = !DILocation(line: 1569, column: 9, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 1569, column: 9)
!5887 = distinct !DILexicalBlock(scope: !5883, file: !3, line: 1568, column: 52)
!5888 = !DILocation(line: 1569, column: 15, scope: !5886)
!5889 = !DILocation(line: 1569, column: 27, scope: !5886)
!5890 = !DILocation(line: 1569, column: 24, scope: !5886)
!5891 = !DILocation(line: 1569, column: 32, scope: !5886)
!5892 = !DILocation(line: 1569, column: 35, scope: !5886)
!5893 = !DILocation(line: 1569, column: 41, scope: !5886)
!5894 = !DILocation(line: 1569, column: 51, scope: !5886)
!5895 = !DILocation(line: 1569, column: 48, scope: !5886)
!5896 = !DILocation(line: 1569, column: 9, scope: !5887)
!5897 = !DILocation(line: 1570, column: 6, scope: !5886)
!5898 = !DILocation(line: 1571, column: 4, scope: !5887)
!5899 = !DILocation(line: 1568, column: 40, scope: !5883)
!5900 = !DILocation(line: 1568, column: 46, scope: !5883)
!5901 = !DILocation(line: 1568, column: 38, scope: !5883)
!5902 = !DILocation(line: 1568, column: 4, scope: !5883)
!5903 = distinct !{!5903, !5884, !5904}
!5904 = !DILocation(line: 1571, column: 4, scope: !5877)
!5905 = !DILocation(line: 1572, column: 8, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 1572, column: 8)
!5907 = !DILocation(line: 1572, column: 8, scope: !5878)
!5908 = !DILocation(line: 1573, column: 17, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 1572, column: 14)
!5910 = !DILocation(line: 1573, column: 24, scope: !5909)
!5911 = !DILocation(line: 1573, column: 5, scope: !5909)
!5912 = !DILocation(line: 1574, column: 4, scope: !5909)
!5913 = !DILocation(line: 1575, column: 3, scope: !5878)
!5914 = !DILocation(line: 1576, column: 2, scope: !5840)
!5915 = !DILocation(line: 1554, column: 47, scope: !5837)
!5916 = !DILocation(line: 1554, column: 45, scope: !5837)
!5917 = !DILocation(line: 1554, column: 2, scope: !5837)
!5918 = distinct !{!5918, !5838, !5919}
!5919 = !DILocation(line: 1576, column: 2, scope: !5831)
!5920 = !DILocation(line: 1577, column: 1, scope: !5817)
!5921 = distinct !DISubprogram(name: "nodeFreeNode", scope: !3, file: !3, line: 1663, type: !3412, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5922 = !DILocalVariable(name: "ntree", arg: 1, scope: !5921, file: !3, line: 1663, type: !2101)
!5923 = !DILocation(line: 1663, column: 30, scope: !5921)
!5924 = !DILocalVariable(name: "node", arg: 2, scope: !5921, file: !3, line: 1663, type: !755)
!5925 = !DILocation(line: 1663, column: 44, scope: !5921)
!5926 = !DILocation(line: 1665, column: 20, scope: !5921)
!5927 = !DILocation(line: 1665, column: 27, scope: !5921)
!5928 = !DILocation(line: 1665, column: 2, scope: !5921)
!5929 = !DILocation(line: 1666, column: 1, scope: !5921)
!5930 = distinct !DISubprogram(name: "node_free_node_ex", scope: !3, file: !3, line: 1589, type: !5931, scopeLine: 1590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!5931 = !DISubroutineType(types: !5932)
!5932 = !{null, !2101, !755, !1074, !1074}
!5933 = !DILocalVariable(name: "ntree", arg: 1, scope: !5930, file: !3, line: 1589, type: !2101)
!5934 = !DILocation(line: 1589, column: 42, scope: !5930)
!5935 = !DILocalVariable(name: "node", arg: 2, scope: !5930, file: !3, line: 1589, type: !755)
!5936 = !DILocation(line: 1589, column: 56, scope: !5930)
!5937 = !DILocalVariable(name: "remove_animdata", arg: 3, scope: !5930, file: !3, line: 1589, type: !1074)
!5938 = !DILocation(line: 1589, column: 67, scope: !5930)
!5939 = !DILocalVariable(name: "use_api_free_cb", arg: 4, scope: !5930, file: !3, line: 1589, type: !1074)
!5940 = !DILocation(line: 1589, column: 89, scope: !5930)
!5941 = !DILocalVariable(name: "sock", scope: !5930, file: !3, line: 1591, type: !759)
!5942 = !DILocation(line: 1591, column: 15, scope: !5930)
!5943 = !DILocalVariable(name: "nextsock", scope: !5930, file: !3, line: 1591, type: !759)
!5944 = !DILocation(line: 1591, column: 22, scope: !5930)
!5945 = !DILocation(line: 1596, column: 21, scope: !5930)
!5946 = !DILocation(line: 1596, column: 27, scope: !5930)
!5947 = !DILocation(line: 1596, column: 32, scope: !5930)
!5948 = !DILocation(line: 1596, column: 39, scope: !5930)
!5949 = !DILocation(line: 1596, column: 44, scope: !5930)
!5950 = !DILocation(line: 1596, column: 30, scope: !5930)
!5951 = !DILocation(line: 0, scope: !5930)
!5952 = !DILocation(line: 1596, column: 18, scope: !5930)
!5953 = !DILocation(line: 1599, column: 6, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 1599, column: 6)
!5955 = !DILocation(line: 1599, column: 22, scope: !5954)
!5956 = !DILocation(line: 1599, column: 25, scope: !5954)
!5957 = !DILocation(line: 1599, column: 31, scope: !5954)
!5958 = !DILocation(line: 1599, column: 41, scope: !5954)
!5959 = !DILocation(line: 1599, column: 6, scope: !5930)
!5960 = !DILocalVariable(name: "ptr", scope: !5961, file: !3, line: 1600, type: !3917)
!5961 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 1599, column: 55)
!5962 = !DILocation(line: 1600, column: 14, scope: !5961)
!5963 = !DILocation(line: 1601, column: 28, scope: !5961)
!5964 = !DILocation(line: 1601, column: 22, scope: !5961)
!5965 = !DILocation(line: 1601, column: 46, scope: !5961)
!5966 = !DILocation(line: 1601, column: 3, scope: !5961)
!5967 = !DILocation(line: 1603, column: 3, scope: !5961)
!5968 = !DILocation(line: 1603, column: 9, scope: !5961)
!5969 = !DILocation(line: 1603, column: 19, scope: !5961)
!5970 = !DILocation(line: 1604, column: 2, scope: !5961)
!5971 = !DILocation(line: 1609, column: 6, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 1609, column: 6)
!5973 = !DILocation(line: 1609, column: 6, scope: !5930)
!5974 = !DILocation(line: 1611, column: 18, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1609, column: 13)
!5976 = !DILocation(line: 1611, column: 25, scope: !5975)
!5977 = !DILocation(line: 1611, column: 3, scope: !5975)
!5978 = !DILocation(line: 1612, column: 24, scope: !5975)
!5979 = !DILocation(line: 1612, column: 31, scope: !5975)
!5980 = !DILocation(line: 1612, column: 3, scope: !5975)
!5981 = !DILocation(line: 1614, column: 16, scope: !5975)
!5982 = !DILocation(line: 1614, column: 23, scope: !5975)
!5983 = !DILocation(line: 1614, column: 30, scope: !5975)
!5984 = !DILocation(line: 1614, column: 3, scope: !5975)
!5985 = !DILocation(line: 1616, column: 7, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 1616, column: 7)
!5987 = !DILocation(line: 1616, column: 7, scope: !5975)
!5988 = !DILocalVariable(name: "propname_esc", scope: !5989, file: !3, line: 1617, type: !1430)
!5989 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 1616, column: 24)
!5990 = !DILocation(line: 1617, column: 9, scope: !5989)
!5991 = !DILocalVariable(name: "prefix", scope: !5989, file: !3, line: 1618, type: !1430)
!5992 = !DILocation(line: 1618, column: 9, scope: !5989)
!5993 = !DILocation(line: 1620, column: 18, scope: !5989)
!5994 = !DILocation(line: 1620, column: 32, scope: !5989)
!5995 = !DILocation(line: 1620, column: 38, scope: !5989)
!5996 = !DILocation(line: 1620, column: 4, scope: !5989)
!5997 = !DILocation(line: 1621, column: 17, scope: !5989)
!5998 = !DILocation(line: 1621, column: 58, scope: !5989)
!5999 = !DILocation(line: 1621, column: 4, scope: !5989)
!6000 = !DILocation(line: 1623, column: 40, scope: !5989)
!6001 = !DILocation(line: 1623, column: 34, scope: !5989)
!6002 = !DILocation(line: 1623, column: 47, scope: !5989)
!6003 = !DILocation(line: 1623, column: 4, scope: !5989)
!6004 = !DILocation(line: 1624, column: 3, scope: !5989)
!6005 = !DILocation(line: 1626, column: 7, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 1626, column: 7)
!6007 = !DILocation(line: 1626, column: 14, scope: !6006)
!6008 = !DILocation(line: 1626, column: 24, scope: !6006)
!6009 = !DILocation(line: 1626, column: 7, scope: !5975)
!6010 = !DILocation(line: 1627, column: 4, scope: !6006)
!6011 = !DILocation(line: 1627, column: 11, scope: !6006)
!6012 = !DILocation(line: 1627, column: 21, scope: !6006)
!6013 = !DILocation(line: 1627, column: 37, scope: !6006)
!6014 = !DILocation(line: 1627, column: 44, scope: !6006)
!6015 = !DILocation(line: 1630, column: 7, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 1630, column: 7)
!6017 = !DILocation(line: 1630, column: 14, scope: !6016)
!6018 = !DILocation(line: 1630, column: 19, scope: !6016)
!6019 = !DILocation(line: 1630, column: 36, scope: !6016)
!6020 = !DILocation(line: 1630, column: 39, scope: !6016)
!6021 = !DILocation(line: 1630, column: 46, scope: !6016)
!6022 = !DILocation(line: 1630, column: 7, scope: !5975)
!6023 = !DILocation(line: 1631, column: 24, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 1630, column: 56)
!6025 = !DILocation(line: 1631, column: 31, scope: !6024)
!6026 = !DILocation(line: 1631, column: 4, scope: !6024)
!6027 = !DILocation(line: 1632, column: 4, scope: !6024)
!6028 = !DILocation(line: 1632, column: 11, scope: !6024)
!6029 = !DILocation(line: 1632, column: 20, scope: !6024)
!6030 = !DILocation(line: 1633, column: 3, scope: !6024)
!6031 = !DILocation(line: 1635, column: 7, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 1635, column: 7)
!6033 = !DILocation(line: 1635, column: 13, scope: !6032)
!6034 = !DILocation(line: 1635, column: 23, scope: !6032)
!6035 = !DILocation(line: 1635, column: 7, scope: !5975)
!6036 = !DILocation(line: 1636, column: 4, scope: !6032)
!6037 = !DILocation(line: 1636, column: 10, scope: !6032)
!6038 = !DILocation(line: 1636, column: 20, scope: !6032)
!6039 = !DILocation(line: 1636, column: 29, scope: !6032)
!6040 = !DILocation(line: 1637, column: 2, scope: !5975)
!6041 = !DILocation(line: 1639, column: 14, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 1639, column: 2)
!6043 = !DILocation(line: 1639, column: 20, scope: !6042)
!6044 = !DILocation(line: 1639, column: 27, scope: !6042)
!6045 = !DILocation(line: 1639, column: 12, scope: !6042)
!6046 = !DILocation(line: 1639, column: 7, scope: !6042)
!6047 = !DILocation(line: 1639, column: 34, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 1639, column: 2)
!6049 = !DILocation(line: 1639, column: 2, scope: !6042)
!6050 = !DILocation(line: 1640, column: 14, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 1639, column: 57)
!6052 = !DILocation(line: 1640, column: 20, scope: !6051)
!6053 = !DILocation(line: 1640, column: 12, scope: !6051)
!6054 = !DILocation(line: 1641, column: 20, scope: !6051)
!6055 = !DILocation(line: 1641, column: 27, scope: !6051)
!6056 = !DILocation(line: 1641, column: 33, scope: !6051)
!6057 = !DILocation(line: 1641, column: 3, scope: !6051)
!6058 = !DILocation(line: 1642, column: 3, scope: !6051)
!6059 = !DILocation(line: 1642, column: 13, scope: !6051)
!6060 = !DILocation(line: 1643, column: 2, scope: !6051)
!6061 = !DILocation(line: 1639, column: 47, scope: !6048)
!6062 = !DILocation(line: 1639, column: 45, scope: !6048)
!6063 = !DILocation(line: 1639, column: 2, scope: !6048)
!6064 = distinct !{!6064, !6049, !6065}
!6065 = !DILocation(line: 1643, column: 2, scope: !6042)
!6066 = !DILocation(line: 1644, column: 14, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 1644, column: 2)
!6068 = !DILocation(line: 1644, column: 20, scope: !6067)
!6069 = !DILocation(line: 1644, column: 28, scope: !6067)
!6070 = !DILocation(line: 1644, column: 12, scope: !6067)
!6071 = !DILocation(line: 1644, column: 7, scope: !6067)
!6072 = !DILocation(line: 1644, column: 35, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 1644, column: 2)
!6074 = !DILocation(line: 1644, column: 2, scope: !6067)
!6075 = !DILocation(line: 1645, column: 14, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 1644, column: 58)
!6077 = !DILocation(line: 1645, column: 20, scope: !6076)
!6078 = !DILocation(line: 1645, column: 12, scope: !6076)
!6079 = !DILocation(line: 1646, column: 20, scope: !6076)
!6080 = !DILocation(line: 1646, column: 27, scope: !6076)
!6081 = !DILocation(line: 1646, column: 33, scope: !6076)
!6082 = !DILocation(line: 1646, column: 3, scope: !6076)
!6083 = !DILocation(line: 1647, column: 3, scope: !6076)
!6084 = !DILocation(line: 1647, column: 13, scope: !6076)
!6085 = !DILocation(line: 1648, column: 2, scope: !6076)
!6086 = !DILocation(line: 1644, column: 48, scope: !6073)
!6087 = !DILocation(line: 1644, column: 46, scope: !6073)
!6088 = !DILocation(line: 1644, column: 2, scope: !6073)
!6089 = distinct !{!6089, !6074, !6090}
!6090 = !DILocation(line: 1648, column: 2, scope: !6067)
!6091 = !DILocation(line: 1650, column: 17, scope: !5930)
!6092 = !DILocation(line: 1650, column: 23, scope: !5930)
!6093 = !DILocation(line: 1650, column: 2, scope: !5930)
!6094 = !DILocation(line: 1652, column: 6, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 1652, column: 6)
!6096 = !DILocation(line: 1652, column: 12, scope: !6095)
!6097 = !DILocation(line: 1652, column: 6, scope: !5930)
!6098 = !DILocation(line: 1653, column: 20, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 1652, column: 18)
!6100 = !DILocation(line: 1653, column: 26, scope: !6099)
!6101 = !DILocation(line: 1653, column: 3, scope: !6099)
!6102 = !DILocation(line: 1654, column: 3, scope: !6099)
!6103 = !DILocation(line: 1654, column: 13, scope: !6099)
!6104 = !DILocation(line: 1654, column: 19, scope: !6099)
!6105 = !DILocation(line: 1655, column: 2, scope: !6099)
!6106 = !DILocation(line: 1657, column: 2, scope: !5930)
!6107 = !DILocation(line: 1657, column: 12, scope: !5930)
!6108 = !DILocation(line: 1659, column: 6, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 1659, column: 6)
!6110 = !DILocation(line: 1659, column: 6, scope: !5930)
!6111 = !DILocation(line: 1660, column: 3, scope: !6109)
!6112 = !DILocation(line: 1660, column: 10, scope: !6109)
!6113 = !DILocation(line: 1660, column: 17, scope: !6109)
!6114 = !DILocation(line: 1661, column: 1, scope: !5930)
!6115 = distinct !DISubprogram(name: "ntreeFreeTree_ex", scope: !3, file: !3, line: 1701, type: !6116, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!6116 = !DISubroutineType(types: !6117)
!6117 = !{null, !2101, !4501}
!6118 = !DILocalVariable(name: "ntree", arg: 1, scope: !6115, file: !3, line: 1701, type: !2101)
!6119 = !DILocation(line: 1701, column: 34, scope: !6115)
!6120 = !DILocalVariable(name: "do_id_user", arg: 2, scope: !6115, file: !3, line: 1701, type: !4501)
!6121 = !DILocation(line: 1701, column: 52, scope: !6115)
!6122 = !DILocalVariable(name: "tntree", scope: !6115, file: !3, line: 1703, type: !2101)
!6123 = !DILocation(line: 1703, column: 13, scope: !6115)
!6124 = !DILocalVariable(name: "node", scope: !6115, file: !3, line: 1704, type: !755)
!6125 = !DILocation(line: 1704, column: 9, scope: !6115)
!6126 = !DILocalVariable(name: "next", scope: !6115, file: !3, line: 1704, type: !755)
!6127 = !DILocation(line: 1704, column: 16, scope: !6115)
!6128 = !DILocalVariable(name: "sock", scope: !6115, file: !3, line: 1705, type: !759)
!6129 = !DILocation(line: 1705, column: 15, scope: !6115)
!6130 = !DILocalVariable(name: "nextsock", scope: !6115, file: !3, line: 1705, type: !759)
!6131 = !DILocation(line: 1705, column: 22, scope: !6115)
!6132 = !DILocation(line: 1707, column: 6, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1707, column: 6)
!6134 = !DILocation(line: 1707, column: 12, scope: !6133)
!6135 = !DILocation(line: 1707, column: 6, scope: !6115)
!6136 = !DILocation(line: 1707, column: 21, scope: !6133)
!6137 = !DILocation(line: 1714, column: 6, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1714, column: 6)
!6139 = !DILocation(line: 1714, column: 13, scope: !6138)
!6140 = !DILocation(line: 1714, column: 6, scope: !6115)
!6141 = !DILocation(line: 1715, column: 11, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 1714, column: 23)
!6143 = !DILocation(line: 1715, column: 18, scope: !6142)
!6144 = !DILocation(line: 1715, column: 3, scope: !6142)
!6145 = !DILocation(line: 1717, column: 28, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 1715, column: 24)
!6147 = !DILocation(line: 1717, column: 35, scope: !6146)
!6148 = !DILocation(line: 1717, column: 5, scope: !6146)
!6149 = !DILocation(line: 1718, column: 5, scope: !6146)
!6150 = !DILocation(line: 1720, column: 25, scope: !6146)
!6151 = !DILocation(line: 1720, column: 32, scope: !6146)
!6152 = !DILocation(line: 1720, column: 5, scope: !6146)
!6153 = !DILocation(line: 1721, column: 5, scope: !6146)
!6154 = !DILocation(line: 1721, column: 12, scope: !6146)
!6155 = !DILocation(line: 1721, column: 21, scope: !6146)
!6156 = !DILocation(line: 1722, column: 5, scope: !6146)
!6157 = !DILocation(line: 1724, column: 2, scope: !6142)
!6158 = !DILocation(line: 1727, column: 29, scope: !6115)
!6159 = !DILocation(line: 1727, column: 2, scope: !6115)
!6160 = !DILocation(line: 1730, column: 25, scope: !6115)
!6161 = !DILocation(line: 1730, column: 2, scope: !6115)
!6162 = !DILocation(line: 1732, column: 26, scope: !6115)
!6163 = !DILocation(line: 1732, column: 20, scope: !6115)
!6164 = !DILocation(line: 1732, column: 2, scope: !6115)
!6165 = !DILocation(line: 1734, column: 18, scope: !6115)
!6166 = !DILocation(line: 1734, column: 25, scope: !6115)
!6167 = !DILocation(line: 1734, column: 12, scope: !6115)
!6168 = !DILocation(line: 1734, column: 2, scope: !6115)
!6169 = !DILocation(line: 1736, column: 17, scope: !6115)
!6170 = !DILocation(line: 1736, column: 24, scope: !6115)
!6171 = !DILocation(line: 1736, column: 2, scope: !6115)
!6172 = !DILocation(line: 1738, column: 14, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1738, column: 2)
!6174 = !DILocation(line: 1738, column: 21, scope: !6173)
!6175 = !DILocation(line: 1738, column: 27, scope: !6173)
!6176 = !DILocation(line: 1738, column: 12, scope: !6173)
!6177 = !DILocation(line: 1738, column: 7, scope: !6173)
!6178 = !DILocation(line: 1738, column: 34, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 1738, column: 2)
!6180 = !DILocation(line: 1738, column: 2, scope: !6173)
!6181 = !DILocation(line: 1739, column: 10, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 1738, column: 53)
!6183 = !DILocation(line: 1739, column: 16, scope: !6182)
!6184 = !DILocation(line: 1739, column: 8, scope: !6182)
!6185 = !DILocation(line: 1752, column: 9, scope: !6182)
!6186 = !DILocation(line: 1755, column: 21, scope: !6182)
!6187 = !DILocation(line: 1755, column: 28, scope: !6182)
!6188 = !DILocation(line: 1755, column: 3, scope: !6182)
!6189 = !DILocation(line: 1756, column: 2, scope: !6182)
!6190 = !DILocation(line: 1738, column: 47, scope: !6179)
!6191 = !DILocation(line: 1738, column: 45, scope: !6179)
!6192 = !DILocation(line: 1738, column: 2, scope: !6179)
!6193 = distinct !{!6193, !6180, !6194}
!6194 = !DILocation(line: 1756, column: 2, scope: !6173)
!6195 = !DILocation(line: 1759, column: 14, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1759, column: 2)
!6197 = !DILocation(line: 1759, column: 21, scope: !6196)
!6198 = !DILocation(line: 1759, column: 28, scope: !6196)
!6199 = !DILocation(line: 1759, column: 12, scope: !6196)
!6200 = !DILocation(line: 1759, column: 7, scope: !6196)
!6201 = !DILocation(line: 1759, column: 35, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 1759, column: 2)
!6203 = !DILocation(line: 1759, column: 2, scope: !6196)
!6204 = !DILocation(line: 1760, column: 14, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 1759, column: 58)
!6206 = !DILocation(line: 1760, column: 20, scope: !6205)
!6207 = !DILocation(line: 1760, column: 12, scope: !6205)
!6208 = !DILocation(line: 1761, column: 30, scope: !6205)
!6209 = !DILocation(line: 1761, column: 37, scope: !6205)
!6210 = !DILocation(line: 1761, column: 3, scope: !6205)
!6211 = !DILocation(line: 1762, column: 3, scope: !6205)
!6212 = !DILocation(line: 1762, column: 13, scope: !6205)
!6213 = !DILocation(line: 1763, column: 2, scope: !6205)
!6214 = !DILocation(line: 1759, column: 48, scope: !6202)
!6215 = !DILocation(line: 1759, column: 46, scope: !6202)
!6216 = !DILocation(line: 1759, column: 2, scope: !6202)
!6217 = distinct !{!6217, !6203, !6218}
!6218 = !DILocation(line: 1763, column: 2, scope: !6196)
!6219 = !DILocation(line: 1764, column: 14, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1764, column: 2)
!6221 = !DILocation(line: 1764, column: 21, scope: !6220)
!6222 = !DILocation(line: 1764, column: 29, scope: !6220)
!6223 = !DILocation(line: 1764, column: 12, scope: !6220)
!6224 = !DILocation(line: 1764, column: 7, scope: !6220)
!6225 = !DILocation(line: 1764, column: 36, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 1764, column: 2)
!6227 = !DILocation(line: 1764, column: 2, scope: !6220)
!6228 = !DILocation(line: 1765, column: 14, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 1764, column: 59)
!6230 = !DILocation(line: 1765, column: 20, scope: !6229)
!6231 = !DILocation(line: 1765, column: 12, scope: !6229)
!6232 = !DILocation(line: 1766, column: 30, scope: !6229)
!6233 = !DILocation(line: 1766, column: 37, scope: !6229)
!6234 = !DILocation(line: 1766, column: 3, scope: !6229)
!6235 = !DILocation(line: 1767, column: 3, scope: !6229)
!6236 = !DILocation(line: 1767, column: 13, scope: !6229)
!6237 = !DILocation(line: 1768, column: 2, scope: !6229)
!6238 = !DILocation(line: 1764, column: 49, scope: !6226)
!6239 = !DILocation(line: 1764, column: 47, scope: !6226)
!6240 = !DILocation(line: 1764, column: 2, scope: !6226)
!6241 = distinct !{!6241, !6227, !6242}
!6242 = !DILocation(line: 1768, column: 2, scope: !6220)
!6243 = !DILocation(line: 1771, column: 6, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1771, column: 6)
!6245 = !DILocation(line: 1771, column: 13, scope: !6244)
!6246 = !DILocation(line: 1771, column: 6, scope: !6115)
!6247 = !DILocation(line: 1772, column: 31, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 1771, column: 23)
!6249 = !DILocation(line: 1772, column: 38, scope: !6248)
!6250 = !DILocation(line: 1772, column: 3, scope: !6248)
!6251 = !DILocation(line: 1773, column: 2, scope: !6248)
!6252 = !DILocation(line: 1776, column: 18, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1776, column: 2)
!6254 = !DILocation(line: 1776, column: 24, scope: !6253)
!6255 = !DILocation(line: 1776, column: 33, scope: !6253)
!6256 = !DILocation(line: 1776, column: 16, scope: !6253)
!6257 = !DILocation(line: 1776, column: 14, scope: !6253)
!6258 = !DILocation(line: 1776, column: 7, scope: !6253)
!6259 = !DILocation(line: 1776, column: 40, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 1776, column: 2)
!6261 = !DILocation(line: 1776, column: 2, scope: !6253)
!6262 = !DILocation(line: 1777, column: 7, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 1777, column: 7)
!6264 = !DILocation(line: 1777, column: 17, scope: !6263)
!6265 = !DILocation(line: 1777, column: 14, scope: !6263)
!6266 = !DILocation(line: 1777, column: 7, scope: !6260)
!6267 = !DILocation(line: 1778, column: 4, scope: !6263)
!6268 = !DILocation(line: 1776, column: 57, scope: !6260)
!6269 = !DILocation(line: 1776, column: 65, scope: !6260)
!6270 = !DILocation(line: 1776, column: 68, scope: !6260)
!6271 = !DILocation(line: 1776, column: 55, scope: !6260)
!6272 = !DILocation(line: 1776, column: 2, scope: !6260)
!6273 = distinct !{!6273, !6261, !6274}
!6274 = !DILocation(line: 1778, column: 4, scope: !6253)
!6275 = !DILocation(line: 1779, column: 6, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1779, column: 6)
!6277 = !DILocation(line: 1779, column: 13, scope: !6276)
!6278 = !DILocation(line: 1779, column: 6, scope: !6115)
!6279 = !DILocation(line: 1780, column: 28, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 1779, column: 22)
!6281 = !DILocation(line: 1780, column: 35, scope: !6280)
!6282 = !DILocation(line: 1780, column: 42, scope: !6280)
!6283 = !DILocation(line: 1780, column: 3, scope: !6280)
!6284 = !DILocation(line: 1781, column: 2, scope: !6280)
!6285 = !DILocation(line: 1782, column: 1, scope: !6115)
!6286 = distinct !DISubprogram(name: "free_localized_node_groups", scope: !3, file: !3, line: 1679, type: !4921, scopeLine: 1680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!6287 = !DILocalVariable(name: "ntree", arg: 1, scope: !6286, file: !3, line: 1679, type: !2101)
!6288 = !DILocation(line: 1679, column: 51, scope: !6286)
!6289 = !DILocalVariable(name: "node", scope: !6286, file: !3, line: 1681, type: !755)
!6290 = !DILocation(line: 1681, column: 9, scope: !6286)
!6291 = !DILocation(line: 1688, column: 8, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 1688, column: 6)
!6293 = !DILocation(line: 1688, column: 15, scope: !6292)
!6294 = !DILocation(line: 1688, column: 20, scope: !6292)
!6295 = !DILocation(line: 1688, column: 6, scope: !6286)
!6296 = !DILocation(line: 1689, column: 3, scope: !6292)
!6297 = !DILocation(line: 1691, column: 14, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 1691, column: 2)
!6299 = !DILocation(line: 1691, column: 21, scope: !6298)
!6300 = !DILocation(line: 1691, column: 27, scope: !6298)
!6301 = !DILocation(line: 1691, column: 12, scope: !6298)
!6302 = !DILocation(line: 1691, column: 7, scope: !6298)
!6303 = !DILocation(line: 1691, column: 34, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1691, column: 2)
!6305 = !DILocation(line: 1691, column: 2, scope: !6298)
!6306 = !DILocation(line: 1692, column: 7, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6308, file: !3, line: 1692, column: 7)
!6308 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 1691, column: 59)
!6309 = !DILocation(line: 1692, column: 13, scope: !6307)
!6310 = !DILocation(line: 1692, column: 18, scope: !6307)
!6311 = !DILocation(line: 1692, column: 32, scope: !6307)
!6312 = !DILocation(line: 1692, column: 35, scope: !6307)
!6313 = !DILocation(line: 1692, column: 41, scope: !6307)
!6314 = !DILocation(line: 1692, column: 7, scope: !6308)
!6315 = !DILocalVariable(name: "ngroup", scope: !6316, file: !3, line: 1693, type: !2101)
!6316 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 1692, column: 45)
!6317 = !DILocation(line: 1693, column: 15, scope: !6316)
!6318 = !DILocation(line: 1693, column: 37, scope: !6316)
!6319 = !DILocation(line: 1693, column: 43, scope: !6316)
!6320 = !DILocation(line: 1693, column: 24, scope: !6316)
!6321 = !DILocation(line: 1694, column: 21, scope: !6316)
!6322 = !DILocation(line: 1694, column: 4, scope: !6316)
!6323 = !DILocation(line: 1695, column: 4, scope: !6316)
!6324 = !DILocation(line: 1695, column: 14, scope: !6316)
!6325 = !DILocation(line: 1696, column: 3, scope: !6316)
!6326 = !DILocation(line: 1697, column: 2, scope: !6308)
!6327 = !DILocation(line: 1691, column: 47, scope: !6304)
!6328 = !DILocation(line: 1691, column: 53, scope: !6304)
!6329 = !DILocation(line: 1691, column: 45, scope: !6304)
!6330 = !DILocation(line: 1691, column: 2, scope: !6304)
!6331 = distinct !{!6331, !6305, !6332}
!6332 = !DILocation(line: 1697, column: 2, scope: !6298)
!6333 = !DILocation(line: 1698, column: 1, scope: !6286)
!6334 = distinct !DISubprogram(name: "ntreeInterfaceTypeFree", scope: !3, file: !3, line: 2267, type: !4921, scopeLine: 2268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!6335 = !DILocalVariable(name: "ntree", arg: 1, scope: !6334, file: !3, line: 2267, type: !2101)
!6336 = !DILocation(line: 2267, column: 40, scope: !6334)
!6337 = !DILocation(line: 2269, column: 6, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 2269, column: 6)
!6339 = !DILocation(line: 2269, column: 13, scope: !6338)
!6340 = !DILocation(line: 2269, column: 6, scope: !6334)
!6341 = !DILocation(line: 2270, column: 33, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 2269, column: 29)
!6343 = !DILocation(line: 2270, column: 40, scope: !6342)
!6344 = !DILocation(line: 2270, column: 3, scope: !6342)
!6345 = !DILocation(line: 2271, column: 3, scope: !6342)
!6346 = !DILocation(line: 2271, column: 10, scope: !6342)
!6347 = !DILocation(line: 2271, column: 25, scope: !6342)
!6348 = !DILocation(line: 2272, column: 2, scope: !6342)
!6349 = !DILocation(line: 2273, column: 1, scope: !6334)
!6350 = distinct !DISubprogram(name: "node_socket_interface_free", scope: !3, file: !3, line: 1668, type: !4070, scopeLine: 1669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!6351 = !DILocalVariable(name: "UNUSED_ntree", arg: 1, scope: !6350, file: !3, line: 1668, type: !2101)
!6352 = !DILocation(line: 1668, column: 51, scope: !6350)
!6353 = !DILocalVariable(name: "sock", arg: 2, scope: !6350, file: !3, line: 1668, type: !759)
!6354 = !DILocation(line: 1668, column: 79, scope: !6350)
!6355 = !DILocation(line: 1670, column: 6, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 1670, column: 6)
!6357 = !DILocation(line: 1670, column: 12, scope: !6356)
!6358 = !DILocation(line: 1670, column: 6, scope: !6350)
!6359 = !DILocation(line: 1671, column: 20, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1670, column: 18)
!6361 = !DILocation(line: 1671, column: 26, scope: !6360)
!6362 = !DILocation(line: 1671, column: 3, scope: !6360)
!6363 = !DILocation(line: 1672, column: 3, scope: !6360)
!6364 = !DILocation(line: 1672, column: 13, scope: !6360)
!6365 = !DILocation(line: 1672, column: 19, scope: !6360)
!6366 = !DILocation(line: 1673, column: 2, scope: !6360)
!6367 = !DILocation(line: 1675, column: 6, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 1675, column: 6)
!6369 = !DILocation(line: 1675, column: 12, scope: !6368)
!6370 = !DILocation(line: 1675, column: 6, scope: !6350)
!6371 = !DILocation(line: 1676, column: 3, scope: !6368)
!6372 = !DILocation(line: 1676, column: 13, scope: !6368)
!6373 = !DILocation(line: 1676, column: 19, scope: !6368)
!6374 = !DILocation(line: 1677, column: 1, scope: !6350)
!6375 = distinct !DISubprogram(name: "ntreeFreeTree", scope: !3, file: !3, line: 1784, type: !4921, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!6376 = !DILocalVariable(name: "ntree", arg: 1, scope: !6375, file: !3, line: 1784, type: !2101)
!6377 = !DILocation(line: 1784, column: 31, scope: !6375)
!6378 = !DILocation(line: 1786, column: 19, scope: !6375)
!6379 = !DILocation(line: 1786, column: 2, scope: !6375)
!6380 = !DILocation(line: 1787, column: 1, scope: !6375)
!6381 = distinct !DISubprogram(name: "ntreeFreeCache", scope: !3, file: !3, line: 1789, type: !4921, scopeLine: 1790, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!6382 = !DILocalVariable(name: "ntree", arg: 1, scope: !6381, file: !3, line: 1789, type: !2101)
!6383 = !DILocation(line: 1789, column: 32, scope: !6381)
!6384 = !DILocation(line: 1791, column: 6, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 1791, column: 6)
!6386 = !DILocation(line: 1791, column: 12, scope: !6385)
!6387 = !DILocation(line: 1791, column: 6, scope: !6381)
!6388 = !DILocation(line: 1791, column: 21, scope: !6385)
!6389 = !DILocation(line: 1793, column: 6, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 1793, column: 6)
!6391 = !DILocation(line: 1793, column: 13, scope: !6390)
!6392 = !DILocation(line: 1793, column: 23, scope: !6390)
!6393 = !DILocation(line: 1793, column: 6, scope: !6381)
!6394 = !DILocation(line: 1794, column: 3, scope: !6390)
!6395 = !DILocation(line: 1794, column: 10, scope: !6390)
!6396 = !DILocation(line: 1794, column: 20, scope: !6390)
!6397 = !DILocation(line: 1794, column: 31, scope: !6390)
!6398 = !DILocation(line: 1795, column: 1, scope: !6381)
!6399 = distinct !DISubprogram(name: "ntreeSetOutput", scope: !3, file: !3, line: 1797, type: !4921, scopeLine: 1798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!6400 = !DILocalVariable(name: "ntree", arg: 1, scope: !6399, file: !3, line: 1797, type: !2101)
!6401 = !DILocation(line: 1797, column: 32, scope: !6399)
!6402 = !DILocalVariable(name: "node", scope: !6399, file: !3, line: 1799, type: !755)
!6403 = !DILocation(line: 1799, column: 9, scope: !6399)
!6404 = !DILocation(line: 1802, column: 14, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 1802, column: 2)
!6406 = !DILocation(line: 1802, column: 21, scope: !6405)
!6407 = !DILocation(line: 1802, column: 27, scope: !6405)
!6408 = !DILocation(line: 1802, column: 12, scope: !6405)
!6409 = !DILocation(line: 1802, column: 7, scope: !6405)
!6410 = !DILocation(line: 1802, column: 34, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 1802, column: 2)
!6412 = !DILocation(line: 1802, column: 2, scope: !6405)
!6413 = !DILocation(line: 1803, column: 7, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 1803, column: 7)
!6415 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 1802, column: 59)
!6416 = !DILocation(line: 1803, column: 13, scope: !6414)
!6417 = !DILocation(line: 1803, column: 23, scope: !6414)
!6418 = !DILocation(line: 1803, column: 30, scope: !6414)
!6419 = !DILocation(line: 1803, column: 7, scope: !6415)
!6420 = !DILocalVariable(name: "tnode", scope: !6421, file: !3, line: 1804, type: !755)
!6421 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 1803, column: 52)
!6422 = !DILocation(line: 1804, column: 11, scope: !6421)
!6423 = !DILocalVariable(name: "output", scope: !6421, file: !3, line: 1805, type: !36)
!6424 = !DILocation(line: 1805, column: 8, scope: !6421)
!6425 = !DILocation(line: 1808, column: 8, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 1808, column: 8)
!6427 = !DILocation(line: 1808, column: 14, scope: !6426)
!6428 = !DILocation(line: 1808, column: 19, scope: !6426)
!6429 = !DILocation(line: 1808, column: 8, scope: !6421)
!6430 = !DILocation(line: 1809, column: 5, scope: !6426)
!6431 = !DILocation(line: 1812, column: 17, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 1812, column: 4)
!6433 = !DILocation(line: 1812, column: 24, scope: !6432)
!6434 = !DILocation(line: 1812, column: 30, scope: !6432)
!6435 = !DILocation(line: 1812, column: 15, scope: !6432)
!6436 = !DILocation(line: 1812, column: 9, scope: !6432)
!6437 = !DILocation(line: 1812, column: 37, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 1812, column: 4)
!6439 = !DILocation(line: 1812, column: 4, scope: !6432)
!6440 = !DILocation(line: 1813, column: 9, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 1813, column: 9)
!6442 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 1812, column: 65)
!6443 = !DILocation(line: 1813, column: 16, scope: !6441)
!6444 = !DILocation(line: 1813, column: 26, scope: !6441)
!6445 = !DILocation(line: 1813, column: 33, scope: !6441)
!6446 = !DILocation(line: 1813, column: 9, scope: !6442)
!6447 = !DILocation(line: 1815, column: 10, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 1815, column: 10)
!6449 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 1813, column: 55)
!6450 = !DILocation(line: 1815, column: 17, scope: !6448)
!6451 = !DILocation(line: 1815, column: 22, scope: !6448)
!6452 = !DILocation(line: 1815, column: 10, scope: !6449)
!6453 = !DILocation(line: 1818, column: 11, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 1818, column: 11)
!6455 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 1815, column: 41)
!6456 = !DILocation(line: 1818, column: 18, scope: !6454)
!6457 = !DILocation(line: 1818, column: 26, scope: !6454)
!6458 = !DILocation(line: 1818, column: 32, scope: !6454)
!6459 = !DILocation(line: 1818, column: 23, scope: !6454)
!6460 = !DILocation(line: 1818, column: 37, scope: !6454)
!6461 = !DILocation(line: 1819, column: 12, scope: !6454)
!6462 = !DILocation(line: 1819, column: 69, scope: !6454)
!6463 = !DILocation(line: 1820, column: 12, scope: !6454)
!6464 = !DILocation(line: 1818, column: 11, scope: !6455)
!6465 = !DILocation(line: 1822, column: 12, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 1822, column: 12)
!6467 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 1821, column: 7)
!6468 = !DILocation(line: 1822, column: 19, scope: !6466)
!6469 = !DILocation(line: 1822, column: 24, scope: !6466)
!6470 = !DILocation(line: 1822, column: 12, scope: !6467)
!6471 = !DILocation(line: 1823, column: 15, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 1822, column: 42)
!6473 = !DILocation(line: 1824, column: 13, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 1824, column: 13)
!6475 = !DILocation(line: 1824, column: 20, scope: !6474)
!6476 = !DILocation(line: 1824, column: 13, scope: !6472)
!6477 = !DILocation(line: 1825, column: 10, scope: !6474)
!6478 = !DILocation(line: 1825, column: 17, scope: !6474)
!6479 = !DILocation(line: 1825, column: 22, scope: !6474)
!6480 = !DILocation(line: 1826, column: 8, scope: !6472)
!6481 = !DILocation(line: 1827, column: 7, scope: !6467)
!6482 = !DILocation(line: 1828, column: 6, scope: !6455)
!6483 = !DILocation(line: 1831, column: 11, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1831, column: 11)
!6485 = distinct !DILexicalBlock(scope: !6448, file: !3, line: 1829, column: 11)
!6486 = !DILocation(line: 1831, column: 18, scope: !6484)
!6487 = !DILocation(line: 1831, column: 26, scope: !6484)
!6488 = !DILocation(line: 1831, column: 32, scope: !6484)
!6489 = !DILocation(line: 1831, column: 23, scope: !6484)
!6490 = !DILocation(line: 1831, column: 11, scope: !6485)
!6491 = !DILocation(line: 1832, column: 12, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 1832, column: 12)
!6493 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 1831, column: 38)
!6494 = !DILocation(line: 1832, column: 19, scope: !6492)
!6495 = !DILocation(line: 1832, column: 24, scope: !6492)
!6496 = !DILocation(line: 1832, column: 12, scope: !6493)
!6497 = !DILocation(line: 1833, column: 15, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 1832, column: 42)
!6499 = !DILocation(line: 1834, column: 13, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 1834, column: 13)
!6501 = !DILocation(line: 1834, column: 20, scope: !6500)
!6502 = !DILocation(line: 1834, column: 13, scope: !6498)
!6503 = !DILocation(line: 1835, column: 10, scope: !6500)
!6504 = !DILocation(line: 1835, column: 17, scope: !6500)
!6505 = !DILocation(line: 1835, column: 22, scope: !6500)
!6506 = !DILocation(line: 1836, column: 8, scope: !6498)
!6507 = !DILocation(line: 1837, column: 7, scope: !6493)
!6508 = !DILocation(line: 1839, column: 5, scope: !6449)
!6509 = !DILocation(line: 1840, column: 4, scope: !6442)
!6510 = !DILocation(line: 1812, column: 52, scope: !6438)
!6511 = !DILocation(line: 1812, column: 59, scope: !6438)
!6512 = !DILocation(line: 1812, column: 50, scope: !6438)
!6513 = !DILocation(line: 1812, column: 4, scope: !6438)
!6514 = distinct !{!6514, !6439, !6515}
!6515 = !DILocation(line: 1840, column: 4, scope: !6432)
!6516 = !DILocation(line: 1841, column: 8, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 1841, column: 8)
!6518 = !DILocation(line: 1841, column: 15, scope: !6517)
!6519 = !DILocation(line: 1841, column: 8, scope: !6421)
!6520 = !DILocation(line: 1842, column: 5, scope: !6517)
!6521 = !DILocation(line: 1842, column: 11, scope: !6517)
!6522 = !DILocation(line: 1842, column: 16, scope: !6517)
!6523 = !DILocation(line: 1843, column: 3, scope: !6421)
!6524 = !DILocation(line: 1846, column: 7, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 1846, column: 7)
!6526 = !DILocation(line: 1846, column: 13, scope: !6525)
!6527 = !DILocation(line: 1846, column: 18, scope: !6525)
!6528 = !DILocation(line: 1846, column: 7, scope: !6415)
!6529 = !DILocalVariable(name: "tnode", scope: !6530, file: !3, line: 1847, type: !755)
!6530 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 1846, column: 40)
!6531 = !DILocation(line: 1847, column: 11, scope: !6530)
!6532 = !DILocalVariable(name: "output", scope: !6530, file: !3, line: 1848, type: !36)
!6533 = !DILocation(line: 1848, column: 8, scope: !6530)
!6534 = !DILocation(line: 1850, column: 17, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1850, column: 4)
!6536 = !DILocation(line: 1850, column: 24, scope: !6535)
!6537 = !DILocation(line: 1850, column: 30, scope: !6535)
!6538 = !DILocation(line: 1850, column: 15, scope: !6535)
!6539 = !DILocation(line: 1850, column: 9, scope: !6535)
!6540 = !DILocation(line: 1850, column: 37, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 1850, column: 4)
!6542 = !DILocation(line: 1850, column: 4, scope: !6535)
!6543 = !DILocation(line: 1851, column: 9, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1851, column: 9)
!6545 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1850, column: 65)
!6546 = !DILocation(line: 1851, column: 16, scope: !6544)
!6547 = !DILocation(line: 1851, column: 21, scope: !6544)
!6548 = !DILocation(line: 1851, column: 9, scope: !6545)
!6549 = !DILocation(line: 1852, column: 10, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 1852, column: 10)
!6551 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 1851, column: 43)
!6552 = !DILocation(line: 1852, column: 17, scope: !6550)
!6553 = !DILocation(line: 1852, column: 22, scope: !6550)
!6554 = !DILocation(line: 1852, column: 10, scope: !6551)
!6555 = !DILocation(line: 1853, column: 13, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 1852, column: 40)
!6557 = !DILocation(line: 1854, column: 11, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 1854, column: 11)
!6559 = !DILocation(line: 1854, column: 18, scope: !6558)
!6560 = !DILocation(line: 1854, column: 11, scope: !6556)
!6561 = !DILocation(line: 1855, column: 8, scope: !6558)
!6562 = !DILocation(line: 1855, column: 15, scope: !6558)
!6563 = !DILocation(line: 1855, column: 20, scope: !6558)
!6564 = !DILocation(line: 1856, column: 6, scope: !6556)
!6565 = !DILocation(line: 1857, column: 5, scope: !6551)
!6566 = !DILocation(line: 1858, column: 4, scope: !6545)
!6567 = !DILocation(line: 1850, column: 52, scope: !6541)
!6568 = !DILocation(line: 1850, column: 59, scope: !6541)
!6569 = !DILocation(line: 1850, column: 50, scope: !6541)
!6570 = !DILocation(line: 1850, column: 4, scope: !6541)
!6571 = distinct !{!6571, !6542, !6572}
!6572 = !DILocation(line: 1858, column: 4, scope: !6535)
!6573 = !DILocation(line: 1859, column: 8, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1859, column: 8)
!6575 = !DILocation(line: 1859, column: 15, scope: !6574)
!6576 = !DILocation(line: 1859, column: 8, scope: !6530)
!6577 = !DILocation(line: 1860, column: 5, scope: !6574)
!6578 = !DILocation(line: 1860, column: 11, scope: !6574)
!6579 = !DILocation(line: 1860, column: 16, scope: !6574)
!6580 = !DILocation(line: 1861, column: 3, scope: !6530)
!6581 = !DILocation(line: 1862, column: 2, scope: !6415)
!6582 = !DILocation(line: 1802, column: 47, scope: !6411)
!6583 = !DILocation(line: 1802, column: 53, scope: !6411)
!6584 = !DILocation(line: 1802, column: 45, scope: !6411)
!6585 = !DILocation(line: 1802, column: 2, scope: !6411)
!6586 = distinct !{!6586, !6412, !6587}
!6587 = !DILocation(line: 1862, column: 2, scope: !6405)
!6588 = !DILocation(line: 1866, column: 1, scope: !6399)
!6589 = distinct !DISubprogram(name: "ntreeFromID", scope: !3, file: !3, line: 1868, type: !6590, scopeLine: 1869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!6590 = !DISubroutineType(types: !6591)
!6591 = !{!572, !81}
!6592 = !DILocalVariable(name: "id", arg: 1, scope: !6589, file: !3, line: 1868, type: !81)
!6593 = !DILocation(line: 1868, column: 28, scope: !6589)
!6594 = !DILocation(line: 1870, column: 10, scope: !6589)
!6595 = !DILocation(line: 1870, column: 2, scope: !6589)
!6596 = !DILocation(line: 1871, column: 36, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 1870, column: 24)
!6598 = !DILocation(line: 1871, column: 41, scope: !6597)
!6599 = !DILocation(line: 1871, column: 16, scope: !6597)
!6600 = !DILocation(line: 1872, column: 32, scope: !6597)
!6601 = !DILocation(line: 1872, column: 37, scope: !6597)
!6602 = !DILocation(line: 1872, column: 16, scope: !6597)
!6603 = !DILocation(line: 1873, column: 33, scope: !6597)
!6604 = !DILocation(line: 1873, column: 38, scope: !6597)
!6605 = !DILocation(line: 1873, column: 16, scope: !6597)
!6606 = !DILocation(line: 1874, column: 31, scope: !6597)
!6607 = !DILocation(line: 1874, column: 36, scope: !6597)
!6608 = !DILocation(line: 1874, column: 16, scope: !6597)
!6609 = !DILocation(line: 1875, column: 33, scope: !6597)
!6610 = !DILocation(line: 1875, column: 38, scope: !6597)
!6611 = !DILocation(line: 1875, column: 16, scope: !6597)
!6612 = !DILocation(line: 1876, column: 46, scope: !6597)
!6613 = !DILocation(line: 1876, column: 51, scope: !6597)
!6614 = !DILocation(line: 1876, column: 16, scope: !6597)
!6615 = !DILocation(line: 1877, column: 12, scope: !6597)
!6616 = !DILocation(line: 1879, column: 1, scope: !6589)
!6617 = distinct !DISubprogram(name: "ntreeMakeLocal", scope: !3, file: !3, line: 1881, type: !4921, scopeLine: 1882, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!6618 = !DILocalVariable(name: "ntree", arg: 1, scope: !6617, file: !3, line: 1881, type: !2101)
!6619 = !DILocation(line: 1881, column: 32, scope: !6617)
!6620 = !DILocalVariable(name: "bmain", scope: !6617, file: !3, line: 1883, type: !2499)
!6621 = !DILocation(line: 1883, column: 8, scope: !6617)
!6622 = !DILocation(line: 1883, column: 18, scope: !6617)
!6623 = !DILocalVariable(name: "lib", scope: !6617, file: !3, line: 1884, type: !1074)
!6624 = !DILocation(line: 1884, column: 7, scope: !6617)
!6625 = !DILocalVariable(name: "local", scope: !6617, file: !3, line: 1884, type: !1074)
!6626 = !DILocation(line: 1884, column: 20, scope: !6617)
!6627 = !DILocation(line: 1891, column: 6, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1891, column: 6)
!6629 = !DILocation(line: 1891, column: 13, scope: !6628)
!6630 = !DILocation(line: 1891, column: 16, scope: !6628)
!6631 = !DILocation(line: 1891, column: 20, scope: !6628)
!6632 = !DILocation(line: 1891, column: 6, scope: !6617)
!6633 = !DILocation(line: 1891, column: 29, scope: !6628)
!6634 = !DILocation(line: 1892, column: 6, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1892, column: 6)
!6636 = !DILocation(line: 1892, column: 13, scope: !6635)
!6637 = !DILocation(line: 1892, column: 16, scope: !6635)
!6638 = !DILocation(line: 1892, column: 19, scope: !6635)
!6639 = !DILocation(line: 1892, column: 6, scope: !6617)
!6640 = !DILocation(line: 1893, column: 21, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 1892, column: 25)
!6642 = !DILocation(line: 1893, column: 34, scope: !6641)
!6643 = !DILocation(line: 1893, column: 28, scope: !6641)
!6644 = !DILocation(line: 1893, column: 3, scope: !6641)
!6645 = !DILocation(line: 1894, column: 3, scope: !6641)
!6646 = !DILocalVariable(name: "_nstore", scope: !6647, file: !3, line: 1898, type: !2578)
!6647 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1898, column: 2)
!6648 = !DILocation(line: 1898, column: 2, scope: !6647)
!6649 = !DILocalVariable(name: "tntree", scope: !6647, file: !3, line: 1898, type: !2101)
!6650 = !DILocalVariable(name: "owner_id", scope: !6647, file: !3, line: 1898, type: !81)
!6651 = !DILocation(line: 1898, column: 2, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6653, file: !3, line: 1898, column: 2)
!6653 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 1898, column: 2)
!6654 = !DILocation(line: 1898, column: 2, scope: !6653)
!6655 = !DILocalVariable(name: "node", scope: !6656, file: !3, line: 1899, type: !755)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 1898, column: 45)
!6657 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 1898, column: 2)
!6658 = !DILocation(line: 1899, column: 10, scope: !6656)
!6659 = !DILocation(line: 1901, column: 15, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6656, file: !3, line: 1901, column: 3)
!6661 = !DILocation(line: 1901, column: 23, scope: !6660)
!6662 = !DILocation(line: 1901, column: 29, scope: !6660)
!6663 = !DILocation(line: 1901, column: 13, scope: !6660)
!6664 = !DILocation(line: 1901, column: 8, scope: !6660)
!6665 = !DILocation(line: 1901, column: 36, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 1901, column: 3)
!6667 = !DILocation(line: 1901, column: 3, scope: !6660)
!6668 = !DILocation(line: 1902, column: 8, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1902, column: 8)
!6670 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 1901, column: 61)
!6671 = !DILocation(line: 1902, column: 14, scope: !6669)
!6672 = !DILocation(line: 1902, column: 26, scope: !6669)
!6673 = !DILocation(line: 1902, column: 20, scope: !6669)
!6674 = !DILocation(line: 1902, column: 17, scope: !6669)
!6675 = !DILocation(line: 1902, column: 8, scope: !6670)
!6676 = !DILocation(line: 1903, column: 9, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1903, column: 9)
!6678 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 1902, column: 33)
!6679 = !DILocation(line: 1903, column: 19, scope: !6677)
!6680 = !DILocation(line: 1903, column: 9, scope: !6678)
!6681 = !DILocation(line: 1904, column: 10, scope: !6677)
!6682 = !DILocation(line: 1904, column: 6, scope: !6677)
!6683 = !DILocation(line: 1906, column: 12, scope: !6677)
!6684 = !DILocation(line: 1907, column: 4, scope: !6678)
!6685 = !DILocation(line: 1908, column: 3, scope: !6670)
!6686 = !DILocation(line: 1901, column: 49, scope: !6666)
!6687 = !DILocation(line: 1901, column: 55, scope: !6666)
!6688 = !DILocation(line: 1901, column: 47, scope: !6666)
!6689 = !DILocation(line: 1901, column: 3, scope: !6666)
!6690 = distinct !{!6690, !6667, !6691}
!6691 = !DILocation(line: 1908, column: 3, scope: !6660)
!6692 = !DILocation(line: 1909, column: 4, scope: !6657)
!6693 = distinct !{!6693, !6648, !6694}
!6694 = !DILocation(line: 1909, column: 4, scope: !6647)
!6695 = !DILocation(line: 1912, column: 6, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1912, column: 6)
!6697 = !DILocation(line: 1912, column: 12, scope: !6696)
!6698 = !DILocation(line: 1912, column: 16, scope: !6696)
!6699 = !DILocation(line: 1912, column: 6, scope: !6617)
!6700 = !DILocation(line: 1913, column: 21, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 1912, column: 21)
!6702 = !DILocation(line: 1913, column: 34, scope: !6701)
!6703 = !DILocation(line: 1913, column: 28, scope: !6701)
!6704 = !DILocation(line: 1913, column: 3, scope: !6701)
!6705 = !DILocation(line: 1914, column: 2, scope: !6701)
!6706 = !DILocation(line: 1915, column: 11, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 1915, column: 11)
!6708 = !DILocation(line: 1915, column: 17, scope: !6707)
!6709 = !DILocation(line: 1915, column: 20, scope: !6707)
!6710 = !DILocation(line: 1915, column: 11, scope: !6696)
!6711 = !DILocalVariable(name: "newtree", scope: !6712, file: !3, line: 1917, type: !2101)
!6712 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 1915, column: 25)
!6713 = !DILocation(line: 1917, column: 14, scope: !6712)
!6714 = !DILocation(line: 1917, column: 38, scope: !6712)
!6715 = !DILocation(line: 1917, column: 24, scope: !6712)
!6716 = !DILocation(line: 1919, column: 3, scope: !6712)
!6717 = !DILocation(line: 1919, column: 12, scope: !6712)
!6718 = !DILocation(line: 1919, column: 15, scope: !6712)
!6719 = !DILocation(line: 1919, column: 18, scope: !6712)
!6720 = !DILocalVariable(name: "_nstore", scope: !6721, file: !3, line: 1921, type: !2578)
!6721 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 1921, column: 3)
!6722 = !DILocation(line: 1921, column: 3, scope: !6721)
!6723 = !DILocalVariable(name: "tntree", scope: !6721, file: !3, line: 1921, type: !2101)
!6724 = !DILocalVariable(name: "owner_id", scope: !6721, file: !3, line: 1921, type: !81)
!6725 = !DILocation(line: 1921, column: 3, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 1921, column: 3)
!6727 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 1921, column: 3)
!6728 = !DILocation(line: 1921, column: 3, scope: !6727)
!6729 = !DILocalVariable(name: "node", scope: !6730, file: !3, line: 1922, type: !755)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 1921, column: 46)
!6731 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 1921, column: 3)
!6732 = !DILocation(line: 1922, column: 11, scope: !6730)
!6733 = !DILocation(line: 1924, column: 16, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 1924, column: 4)
!6735 = !DILocation(line: 1924, column: 24, scope: !6734)
!6736 = !DILocation(line: 1924, column: 30, scope: !6734)
!6737 = !DILocation(line: 1924, column: 14, scope: !6734)
!6738 = !DILocation(line: 1924, column: 9, scope: !6734)
!6739 = !DILocation(line: 1924, column: 37, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 1924, column: 4)
!6741 = !DILocation(line: 1924, column: 4, scope: !6734)
!6742 = !DILocation(line: 1925, column: 9, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 1925, column: 9)
!6744 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 1924, column: 62)
!6745 = !DILocation(line: 1925, column: 15, scope: !6743)
!6746 = !DILocation(line: 1925, column: 27, scope: !6743)
!6747 = !DILocation(line: 1925, column: 21, scope: !6743)
!6748 = !DILocation(line: 1925, column: 18, scope: !6743)
!6749 = !DILocation(line: 1925, column: 9, scope: !6744)
!6750 = !DILocation(line: 1926, column: 10, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 1926, column: 10)
!6752 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 1925, column: 34)
!6753 = !DILocation(line: 1926, column: 20, scope: !6751)
!6754 = !DILocation(line: 1926, column: 24, scope: !6751)
!6755 = !DILocation(line: 1926, column: 10, scope: !6752)
!6756 = !DILocation(line: 1927, column: 24, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 1926, column: 33)
!6758 = !DILocation(line: 1927, column: 18, scope: !6757)
!6759 = !DILocation(line: 1927, column: 7, scope: !6757)
!6760 = !DILocation(line: 1927, column: 13, scope: !6757)
!6761 = !DILocation(line: 1927, column: 16, scope: !6757)
!6762 = !DILocation(line: 1928, column: 7, scope: !6757)
!6763 = !DILocation(line: 1928, column: 16, scope: !6757)
!6764 = !DILocation(line: 1928, column: 19, scope: !6757)
!6765 = !DILocation(line: 1928, column: 21, scope: !6757)
!6766 = !DILocation(line: 1929, column: 7, scope: !6757)
!6767 = !DILocation(line: 1929, column: 14, scope: !6757)
!6768 = !DILocation(line: 1929, column: 17, scope: !6757)
!6769 = !DILocation(line: 1929, column: 19, scope: !6757)
!6770 = !DILocation(line: 1930, column: 6, scope: !6757)
!6771 = !DILocation(line: 1931, column: 5, scope: !6752)
!6772 = !DILocation(line: 1932, column: 4, scope: !6744)
!6773 = !DILocation(line: 1924, column: 50, scope: !6740)
!6774 = !DILocation(line: 1924, column: 56, scope: !6740)
!6775 = !DILocation(line: 1924, column: 48, scope: !6740)
!6776 = !DILocation(line: 1924, column: 4, scope: !6740)
!6777 = distinct !{!6777, !6741, !6778}
!6778 = !DILocation(line: 1932, column: 4, scope: !6734)
!6779 = !DILocation(line: 1933, column: 5, scope: !6731)
!6780 = distinct !{!6780, !6722, !6781}
!6781 = !DILocation(line: 1933, column: 5, scope: !6721)
!6782 = !DILocation(line: 1934, column: 2, scope: !6712)
!6783 = !DILocation(line: 1935, column: 1, scope: !6617)
!6784 = distinct !DISubprogram(name: "BKE_node_tree_iter_init", scope: !3, file: !3, line: 3665, type: !6785, scopeLine: 3666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!6785 = !DISubroutineType(types: !6786)
!6786 = !{null, !6787, !2505}
!6787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!6788 = !DILocalVariable(name: "ntreeiter", arg: 1, scope: !6784, file: !3, line: 3665, type: !6787)
!6789 = !DILocation(line: 3665, column: 56, scope: !6784)
!6790 = !DILocalVariable(name: "bmain", arg: 2, scope: !6784, file: !3, line: 3665, type: !2505)
!6791 = !DILocation(line: 3665, column: 80, scope: !6784)
!6792 = !DILocation(line: 3667, column: 22, scope: !6784)
!6793 = !DILocation(line: 3667, column: 29, scope: !6784)
!6794 = !DILocation(line: 3667, column: 38, scope: !6784)
!6795 = !DILocation(line: 3667, column: 2, scope: !6784)
!6796 = !DILocation(line: 3667, column: 13, scope: !6784)
!6797 = !DILocation(line: 3667, column: 20, scope: !6784)
!6798 = !DILocation(line: 3668, column: 21, scope: !6784)
!6799 = !DILocation(line: 3668, column: 28, scope: !6784)
!6800 = !DILocation(line: 3668, column: 34, scope: !6784)
!6801 = !DILocation(line: 3668, column: 2, scope: !6784)
!6802 = !DILocation(line: 3668, column: 13, scope: !6784)
!6803 = !DILocation(line: 3668, column: 19, scope: !6784)
!6804 = !DILocation(line: 3669, column: 19, scope: !6784)
!6805 = !DILocation(line: 3669, column: 26, scope: !6784)
!6806 = !DILocation(line: 3669, column: 30, scope: !6784)
!6807 = !DILocation(line: 3669, column: 2, scope: !6784)
!6808 = !DILocation(line: 3669, column: 13, scope: !6784)
!6809 = !DILocation(line: 3669, column: 17, scope: !6784)
!6810 = !DILocation(line: 3670, column: 19, scope: !6784)
!6811 = !DILocation(line: 3670, column: 26, scope: !6784)
!6812 = !DILocation(line: 3670, column: 30, scope: !6784)
!6813 = !DILocation(line: 3670, column: 2, scope: !6784)
!6814 = !DILocation(line: 3670, column: 13, scope: !6784)
!6815 = !DILocation(line: 3670, column: 17, scope: !6784)
!6816 = !DILocation(line: 3671, column: 20, scope: !6784)
!6817 = !DILocation(line: 3671, column: 27, scope: !6784)
!6818 = !DILocation(line: 3671, column: 32, scope: !6784)
!6819 = !DILocation(line: 3671, column: 2, scope: !6784)
!6820 = !DILocation(line: 3671, column: 13, scope: !6784)
!6821 = !DILocation(line: 3671, column: 18, scope: !6784)
!6822 = !DILocation(line: 3672, column: 21, scope: !6784)
!6823 = !DILocation(line: 3672, column: 28, scope: !6784)
!6824 = !DILocation(line: 3672, column: 34, scope: !6784)
!6825 = !DILocation(line: 3672, column: 2, scope: !6784)
!6826 = !DILocation(line: 3672, column: 13, scope: !6784)
!6827 = !DILocation(line: 3672, column: 19, scope: !6784)
!6828 = !DILocation(line: 3673, column: 25, scope: !6784)
!6829 = !DILocation(line: 3673, column: 32, scope: !6784)
!6830 = !DILocation(line: 3673, column: 42, scope: !6784)
!6831 = !DILocation(line: 3673, column: 2, scope: !6784)
!6832 = !DILocation(line: 3673, column: 13, scope: !6784)
!6833 = !DILocation(line: 3673, column: 23, scope: !6784)
!6834 = !DILocation(line: 3674, column: 1, scope: !6784)
!6835 = distinct !DISubprogram(name: "BKE_node_tree_iter_step", scope: !3, file: !3, line: 3675, type: !6836, scopeLine: 3677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!6836 = !DISubroutineType(types: !6837)
!6837 = !{!1074, !6787, !6838, !954}
!6838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!6839 = !DILocalVariable(name: "ntreeiter", arg: 1, scope: !6835, file: !3, line: 3675, type: !6787)
!6840 = !DILocation(line: 3675, column: 56, scope: !6835)
!6841 = !DILocalVariable(name: "r_nodetree", arg: 2, scope: !6835, file: !3, line: 3676, type: !6838)
!6842 = !DILocation(line: 3676, column: 42, scope: !6835)
!6843 = !DILocalVariable(name: "r_id", arg: 3, scope: !6835, file: !3, line: 3676, type: !954)
!6844 = !DILocation(line: 3676, column: 66, scope: !6835)
!6845 = !DILocation(line: 3678, column: 6, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 3678, column: 6)
!6847 = !DILocation(line: 3678, column: 17, scope: !6846)
!6848 = !DILocation(line: 3678, column: 6, scope: !6835)
!6849 = !DILocation(line: 3679, column: 23, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 3678, column: 25)
!6851 = !DILocation(line: 3679, column: 34, scope: !6850)
!6852 = !DILocation(line: 3679, column: 4, scope: !6850)
!6853 = !DILocation(line: 3679, column: 15, scope: !6850)
!6854 = !DILocation(line: 3680, column: 23, scope: !6850)
!6855 = !DILocation(line: 3680, column: 34, scope: !6850)
!6856 = !DILocation(line: 3680, column: 17, scope: !6850)
!6857 = !DILocation(line: 3680, column: 4, scope: !6850)
!6858 = !DILocation(line: 3680, column: 15, scope: !6850)
!6859 = !DILocation(line: 3681, column: 23, scope: !6850)
!6860 = !DILocation(line: 3681, column: 34, scope: !6850)
!6861 = !DILocation(line: 3681, column: 42, scope: !6850)
!6862 = !DILocation(line: 3681, column: 45, scope: !6850)
!6863 = !DILocation(line: 3681, column: 3, scope: !6850)
!6864 = !DILocation(line: 3681, column: 14, scope: !6850)
!6865 = !DILocation(line: 3681, column: 21, scope: !6850)
!6866 = !DILocation(line: 3682, column: 2, scope: !6850)
!6867 = !DILocation(line: 3683, column: 11, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 3683, column: 11)
!6869 = !DILocation(line: 3683, column: 22, scope: !6868)
!6870 = !DILocation(line: 3683, column: 11, scope: !6846)
!6871 = !DILocation(line: 3684, column: 23, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6868, file: !3, line: 3683, column: 29)
!6873 = !DILocation(line: 3684, column: 34, scope: !6872)
!6874 = !DILocation(line: 3684, column: 41, scope: !6872)
!6875 = !DILocation(line: 3684, column: 4, scope: !6872)
!6876 = !DILocation(line: 3684, column: 15, scope: !6872)
!6877 = !DILocation(line: 3685, column: 23, scope: !6872)
!6878 = !DILocation(line: 3685, column: 34, scope: !6872)
!6879 = !DILocation(line: 3685, column: 17, scope: !6872)
!6880 = !DILocation(line: 3685, column: 4, scope: !6872)
!6881 = !DILocation(line: 3685, column: 15, scope: !6872)
!6882 = !DILocation(line: 3686, column: 23, scope: !6872)
!6883 = !DILocation(line: 3686, column: 34, scope: !6872)
!6884 = !DILocation(line: 3686, column: 41, scope: !6872)
!6885 = !DILocation(line: 3686, column: 44, scope: !6872)
!6886 = !DILocation(line: 3686, column: 3, scope: !6872)
!6887 = !DILocation(line: 3686, column: 14, scope: !6872)
!6888 = !DILocation(line: 3686, column: 20, scope: !6872)
!6889 = !DILocation(line: 3687, column: 2, scope: !6872)
!6890 = !DILocation(line: 3688, column: 11, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6868, file: !3, line: 3688, column: 11)
!6892 = !DILocation(line: 3688, column: 22, scope: !6891)
!6893 = !DILocation(line: 3688, column: 11, scope: !6868)
!6894 = !DILocation(line: 3689, column: 23, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6891, file: !3, line: 3688, column: 27)
!6896 = !DILocation(line: 3689, column: 34, scope: !6895)
!6897 = !DILocation(line: 3689, column: 39, scope: !6895)
!6898 = !DILocation(line: 3689, column: 4, scope: !6895)
!6899 = !DILocation(line: 3689, column: 15, scope: !6895)
!6900 = !DILocation(line: 3690, column: 23, scope: !6895)
!6901 = !DILocation(line: 3690, column: 34, scope: !6895)
!6902 = !DILocation(line: 3690, column: 17, scope: !6895)
!6903 = !DILocation(line: 3690, column: 4, scope: !6895)
!6904 = !DILocation(line: 3690, column: 15, scope: !6895)
!6905 = !DILocation(line: 3691, column: 23, scope: !6895)
!6906 = !DILocation(line: 3691, column: 34, scope: !6895)
!6907 = !DILocation(line: 3691, column: 39, scope: !6895)
!6908 = !DILocation(line: 3691, column: 42, scope: !6895)
!6909 = !DILocation(line: 3691, column: 3, scope: !6895)
!6910 = !DILocation(line: 3691, column: 14, scope: !6895)
!6911 = !DILocation(line: 3691, column: 18, scope: !6895)
!6912 = !DILocation(line: 3692, column: 2, scope: !6895)
!6913 = !DILocation(line: 3693, column: 11, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6891, file: !3, line: 3693, column: 11)
!6915 = !DILocation(line: 3693, column: 22, scope: !6914)
!6916 = !DILocation(line: 3693, column: 11, scope: !6891)
!6917 = !DILocation(line: 3694, column: 23, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6914, file: !3, line: 3693, column: 27)
!6919 = !DILocation(line: 3694, column: 34, scope: !6918)
!6920 = !DILocation(line: 3694, column: 39, scope: !6918)
!6921 = !DILocation(line: 3694, column: 4, scope: !6918)
!6922 = !DILocation(line: 3694, column: 15, scope: !6918)
!6923 = !DILocation(line: 3695, column: 23, scope: !6918)
!6924 = !DILocation(line: 3695, column: 34, scope: !6918)
!6925 = !DILocation(line: 3695, column: 17, scope: !6918)
!6926 = !DILocation(line: 3695, column: 4, scope: !6918)
!6927 = !DILocation(line: 3695, column: 15, scope: !6918)
!6928 = !DILocation(line: 3696, column: 23, scope: !6918)
!6929 = !DILocation(line: 3696, column: 34, scope: !6918)
!6930 = !DILocation(line: 3696, column: 39, scope: !6918)
!6931 = !DILocation(line: 3696, column: 42, scope: !6918)
!6932 = !DILocation(line: 3696, column: 3, scope: !6918)
!6933 = !DILocation(line: 3696, column: 14, scope: !6918)
!6934 = !DILocation(line: 3696, column: 18, scope: !6918)
!6935 = !DILocation(line: 3697, column: 2, scope: !6918)
!6936 = !DILocation(line: 3698, column: 11, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6914, file: !3, line: 3698, column: 11)
!6938 = !DILocation(line: 3698, column: 22, scope: !6937)
!6939 = !DILocation(line: 3698, column: 11, scope: !6914)
!6940 = !DILocation(line: 3699, column: 23, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 3698, column: 28)
!6942 = !DILocation(line: 3699, column: 34, scope: !6941)
!6943 = !DILocation(line: 3699, column: 40, scope: !6941)
!6944 = !DILocation(line: 3699, column: 4, scope: !6941)
!6945 = !DILocation(line: 3699, column: 15, scope: !6941)
!6946 = !DILocation(line: 3700, column: 23, scope: !6941)
!6947 = !DILocation(line: 3700, column: 34, scope: !6941)
!6948 = !DILocation(line: 3700, column: 17, scope: !6941)
!6949 = !DILocation(line: 3700, column: 4, scope: !6941)
!6950 = !DILocation(line: 3700, column: 15, scope: !6941)
!6951 = !DILocation(line: 3701, column: 23, scope: !6941)
!6952 = !DILocation(line: 3701, column: 34, scope: !6941)
!6953 = !DILocation(line: 3701, column: 40, scope: !6941)
!6954 = !DILocation(line: 3701, column: 43, scope: !6941)
!6955 = !DILocation(line: 3701, column: 3, scope: !6941)
!6956 = !DILocation(line: 3701, column: 14, scope: !6941)
!6957 = !DILocation(line: 3701, column: 19, scope: !6941)
!6958 = !DILocation(line: 3702, column: 2, scope: !6941)
!6959 = !DILocation(line: 3703, column: 11, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 3703, column: 11)
!6961 = !DILocation(line: 3703, column: 22, scope: !6960)
!6962 = !DILocation(line: 3703, column: 11, scope: !6937)
!6963 = !DILocation(line: 3704, column: 23, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 3703, column: 29)
!6965 = !DILocation(line: 3704, column: 34, scope: !6964)
!6966 = !DILocation(line: 3704, column: 41, scope: !6964)
!6967 = !DILocation(line: 3704, column: 4, scope: !6964)
!6968 = !DILocation(line: 3704, column: 15, scope: !6964)
!6969 = !DILocation(line: 3705, column: 23, scope: !6964)
!6970 = !DILocation(line: 3705, column: 34, scope: !6964)
!6971 = !DILocation(line: 3705, column: 17, scope: !6964)
!6972 = !DILocation(line: 3705, column: 4, scope: !6964)
!6973 = !DILocation(line: 3705, column: 15, scope: !6964)
!6974 = !DILocation(line: 3706, column: 23, scope: !6964)
!6975 = !DILocation(line: 3706, column: 34, scope: !6964)
!6976 = !DILocation(line: 3706, column: 41, scope: !6964)
!6977 = !DILocation(line: 3706, column: 44, scope: !6964)
!6978 = !DILocation(line: 3706, column: 3, scope: !6964)
!6979 = !DILocation(line: 3706, column: 14, scope: !6964)
!6980 = !DILocation(line: 3706, column: 21, scope: !6964)
!6981 = !DILocation(line: 3707, column: 2, scope: !6964)
!6982 = !DILocation(line: 3708, column: 11, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 3708, column: 11)
!6984 = !DILocation(line: 3708, column: 22, scope: !6983)
!6985 = !DILocation(line: 3708, column: 11, scope: !6960)
!6986 = !DILocation(line: 3709, column: 23, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 3708, column: 33)
!6988 = !DILocation(line: 3709, column: 34, scope: !6987)
!6989 = !DILocation(line: 3709, column: 45, scope: !6987)
!6990 = !DILocation(line: 3709, column: 4, scope: !6987)
!6991 = !DILocation(line: 3709, column: 15, scope: !6987)
!6992 = !DILocation(line: 3710, column: 23, scope: !6987)
!6993 = !DILocation(line: 3710, column: 34, scope: !6987)
!6994 = !DILocation(line: 3710, column: 17, scope: !6987)
!6995 = !DILocation(line: 3710, column: 4, scope: !6987)
!6996 = !DILocation(line: 3710, column: 15, scope: !6987)
!6997 = !DILocation(line: 3711, column: 26, scope: !6987)
!6998 = !DILocation(line: 3711, column: 37, scope: !6987)
!6999 = !DILocation(line: 3711, column: 48, scope: !6987)
!7000 = !DILocation(line: 3711, column: 51, scope: !6987)
!7001 = !DILocation(line: 3711, column: 3, scope: !6987)
!7002 = !DILocation(line: 3711, column: 14, scope: !6987)
!7003 = !DILocation(line: 3711, column: 24, scope: !6987)
!7004 = !DILocation(line: 3712, column: 2, scope: !6987)
!7005 = !DILocation(line: 3714, column: 3, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 3713, column: 7)
!7007 = !DILocation(line: 3717, column: 2, scope: !6835)
!7008 = !DILocation(line: 3718, column: 1, scope: !6835)
!7009 = distinct !DISubprogram(name: "ntreeNodeExists", scope: !3, file: !3, line: 1937, type: !7010, scopeLine: 1938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7010 = !DISubroutineType(types: !7011)
!7011 = !{!36, !2101, !755}
!7012 = !DILocalVariable(name: "ntree", arg: 1, scope: !7009, file: !3, line: 1937, type: !2101)
!7013 = !DILocation(line: 1937, column: 32, scope: !7009)
!7014 = !DILocalVariable(name: "testnode", arg: 2, scope: !7009, file: !3, line: 1937, type: !755)
!7015 = !DILocation(line: 1937, column: 46, scope: !7009)
!7016 = !DILocalVariable(name: "node", scope: !7009, file: !3, line: 1939, type: !755)
!7017 = !DILocation(line: 1939, column: 9, scope: !7009)
!7018 = !DILocation(line: 1939, column: 16, scope: !7009)
!7019 = !DILocation(line: 1939, column: 23, scope: !7009)
!7020 = !DILocation(line: 1939, column: 29, scope: !7009)
!7021 = !DILocation(line: 1940, column: 2, scope: !7009)
!7022 = !DILocation(line: 1940, column: 9, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 1940, column: 2)
!7024 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 1940, column: 2)
!7025 = !DILocation(line: 1940, column: 2, scope: !7024)
!7026 = !DILocation(line: 1941, column: 7, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 1941, column: 7)
!7028 = !DILocation(line: 1941, column: 15, scope: !7027)
!7029 = !DILocation(line: 1941, column: 12, scope: !7027)
!7030 = !DILocation(line: 1941, column: 7, scope: !7023)
!7031 = !DILocation(line: 1942, column: 4, scope: !7027)
!7032 = !DILocation(line: 1940, column: 22, scope: !7023)
!7033 = !DILocation(line: 1940, column: 28, scope: !7023)
!7034 = !DILocation(line: 1940, column: 20, scope: !7023)
!7035 = !DILocation(line: 1940, column: 2, scope: !7023)
!7036 = distinct !{!7036, !7025, !7037}
!7037 = !DILocation(line: 1942, column: 11, scope: !7024)
!7038 = !DILocation(line: 1943, column: 2, scope: !7009)
!7039 = !DILocation(line: 1944, column: 1, scope: !7009)
!7040 = distinct !DISubprogram(name: "ntreeOutputExists", scope: !3, file: !3, line: 1946, type: !7041, scopeLine: 1947, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7041 = !DISubroutineType(types: !7042)
!7042 = !{!36, !755, !759}
!7043 = !DILocalVariable(name: "node", arg: 1, scope: !7040, file: !3, line: 1946, type: !755)
!7044 = !DILocation(line: 1946, column: 30, scope: !7040)
!7045 = !DILocalVariable(name: "testsock", arg: 2, scope: !7040, file: !3, line: 1946, type: !759)
!7046 = !DILocation(line: 1946, column: 49, scope: !7040)
!7047 = !DILocalVariable(name: "sock", scope: !7040, file: !3, line: 1948, type: !759)
!7048 = !DILocation(line: 1948, column: 15, scope: !7040)
!7049 = !DILocation(line: 1948, column: 22, scope: !7040)
!7050 = !DILocation(line: 1948, column: 28, scope: !7040)
!7051 = !DILocation(line: 1948, column: 36, scope: !7040)
!7052 = !DILocation(line: 1949, column: 2, scope: !7040)
!7053 = !DILocation(line: 1949, column: 9, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 1949, column: 2)
!7055 = distinct !DILexicalBlock(scope: !7040, file: !3, line: 1949, column: 2)
!7056 = !DILocation(line: 1949, column: 2, scope: !7055)
!7057 = !DILocation(line: 1950, column: 7, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 1950, column: 7)
!7059 = !DILocation(line: 1950, column: 15, scope: !7058)
!7060 = !DILocation(line: 1950, column: 12, scope: !7058)
!7061 = !DILocation(line: 1950, column: 7, scope: !7054)
!7062 = !DILocation(line: 1951, column: 4, scope: !7058)
!7063 = !DILocation(line: 1949, column: 22, scope: !7054)
!7064 = !DILocation(line: 1949, column: 28, scope: !7054)
!7065 = !DILocation(line: 1949, column: 20, scope: !7054)
!7066 = !DILocation(line: 1949, column: 2, scope: !7054)
!7067 = distinct !{!7067, !7056, !7068}
!7068 = !DILocation(line: 1951, column: 11, scope: !7055)
!7069 = !DILocation(line: 1952, column: 2, scope: !7040)
!7070 = !DILocation(line: 1953, column: 1, scope: !7040)
!7071 = distinct !DISubprogram(name: "ntreeLocalize", scope: !3, file: !3, line: 1956, type: !4839, scopeLine: 1957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7072 = !DILocalVariable(name: "ntree", arg: 1, scope: !7071, file: !3, line: 1956, type: !2101)
!7073 = !DILocation(line: 1956, column: 37, scope: !7071)
!7074 = !DILocation(line: 1958, column: 6, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 1958, column: 6)
!7076 = !DILocation(line: 1958, column: 6, scope: !7071)
!7077 = !DILocalVariable(name: "ltree", scope: !7078, file: !3, line: 1959, type: !2101)
!7078 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 1958, column: 13)
!7079 = !DILocation(line: 1959, column: 14, scope: !7078)
!7080 = !DILocalVariable(name: "node", scope: !7078, file: !3, line: 1960, type: !755)
!7081 = !DILocation(line: 1960, column: 10, scope: !7078)
!7082 = !DILocalVariable(name: "action_backup", scope: !7078, file: !3, line: 1962, type: !168)
!7083 = !DILocation(line: 1962, column: 12, scope: !7078)
!7084 = !DILocalVariable(name: "tmpact_backup", scope: !7078, file: !3, line: 1962, type: !168)
!7085 = !DILocation(line: 1962, column: 35, scope: !7078)
!7086 = !DILocalVariable(name: "adt", scope: !7078, file: !3, line: 1966, type: !7087)
!7087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7088, size: 64)
!7088 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimData", file: !165, line: 869, baseType: !164)
!7089 = !DILocation(line: 1966, column: 13, scope: !7078)
!7090 = !DILocation(line: 1966, column: 41, scope: !7078)
!7091 = !DILocation(line: 1966, column: 48, scope: !7078)
!7092 = !DILocation(line: 1966, column: 19, scope: !7078)
!7093 = !DILocation(line: 1968, column: 7, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 1968, column: 7)
!7095 = !DILocation(line: 1968, column: 7, scope: !7078)
!7096 = !DILocation(line: 1969, column: 20, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 1968, column: 12)
!7098 = !DILocation(line: 1969, column: 25, scope: !7097)
!7099 = !DILocation(line: 1969, column: 18, scope: !7097)
!7100 = !DILocation(line: 1970, column: 20, scope: !7097)
!7101 = !DILocation(line: 1970, column: 25, scope: !7097)
!7102 = !DILocation(line: 1970, column: 18, scope: !7097)
!7103 = !DILocation(line: 1972, column: 4, scope: !7097)
!7104 = !DILocation(line: 1972, column: 9, scope: !7097)
!7105 = !DILocation(line: 1972, column: 16, scope: !7097)
!7106 = !DILocation(line: 1973, column: 4, scope: !7097)
!7107 = !DILocation(line: 1973, column: 9, scope: !7097)
!7108 = !DILocation(line: 1973, column: 16, scope: !7097)
!7109 = !DILocation(line: 1974, column: 3, scope: !7097)
!7110 = !DILocation(line: 1979, column: 34, scope: !7078)
!7111 = !DILocation(line: 1979, column: 11, scope: !7078)
!7112 = !DILocation(line: 1979, column: 9, scope: !7078)
!7113 = !DILocation(line: 1980, column: 3, scope: !7078)
!7114 = !DILocation(line: 1980, column: 10, scope: !7078)
!7115 = !DILocation(line: 1980, column: 15, scope: !7078)
!7116 = !DILocation(line: 1982, column: 15, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 1982, column: 3)
!7118 = !DILocation(line: 1982, column: 22, scope: !7117)
!7119 = !DILocation(line: 1982, column: 28, scope: !7117)
!7120 = !DILocation(line: 1982, column: 13, scope: !7117)
!7121 = !DILocation(line: 1982, column: 8, scope: !7117)
!7122 = !DILocation(line: 1982, column: 35, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 1982, column: 3)
!7124 = !DILocation(line: 1982, column: 3, scope: !7117)
!7125 = !DILocation(line: 1983, column: 8, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 1983, column: 8)
!7127 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 1982, column: 60)
!7128 = !DILocation(line: 1983, column: 14, scope: !7126)
!7129 = !DILocation(line: 1983, column: 19, scope: !7126)
!7130 = !DILocation(line: 1983, column: 33, scope: !7126)
!7131 = !DILocation(line: 1983, column: 36, scope: !7126)
!7132 = !DILocation(line: 1983, column: 42, scope: !7126)
!7133 = !DILocation(line: 1983, column: 8, scope: !7127)
!7134 = !DILocation(line: 1984, column: 49, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1983, column: 46)
!7136 = !DILocation(line: 1984, column: 55, scope: !7135)
!7137 = !DILocation(line: 1984, column: 36, scope: !7135)
!7138 = !DILocation(line: 1984, column: 22, scope: !7135)
!7139 = !DILocation(line: 1984, column: 16, scope: !7135)
!7140 = !DILocation(line: 1984, column: 5, scope: !7135)
!7141 = !DILocation(line: 1984, column: 11, scope: !7135)
!7142 = !DILocation(line: 1984, column: 14, scope: !7135)
!7143 = !DILocation(line: 1985, column: 4, scope: !7135)
!7144 = !DILocation(line: 1986, column: 3, scope: !7127)
!7145 = !DILocation(line: 1982, column: 48, scope: !7123)
!7146 = !DILocation(line: 1982, column: 54, scope: !7123)
!7147 = !DILocation(line: 1982, column: 46, scope: !7123)
!7148 = !DILocation(line: 1982, column: 3, scope: !7123)
!7149 = distinct !{!7149, !7124, !7150}
!7150 = !DILocation(line: 1986, column: 3, scope: !7117)
!7151 = !DILocation(line: 1988, column: 7, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 1988, column: 7)
!7153 = !DILocation(line: 1988, column: 7, scope: !7078)
!7154 = !DILocalVariable(name: "ladt", scope: !7155, file: !3, line: 1989, type: !7087)
!7155 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 1988, column: 12)
!7156 = !DILocation(line: 1989, column: 14, scope: !7155)
!7157 = !DILocation(line: 1989, column: 43, scope: !7155)
!7158 = !DILocation(line: 1989, column: 50, scope: !7155)
!7159 = !DILocation(line: 1989, column: 21, scope: !7155)
!7160 = !DILocation(line: 1991, column: 33, scope: !7155)
!7161 = !DILocation(line: 1991, column: 18, scope: !7155)
!7162 = !DILocation(line: 1991, column: 24, scope: !7155)
!7163 = !DILocation(line: 1991, column: 31, scope: !7155)
!7164 = !DILocation(line: 1991, column: 4, scope: !7155)
!7165 = !DILocation(line: 1991, column: 9, scope: !7155)
!7166 = !DILocation(line: 1991, column: 16, scope: !7155)
!7167 = !DILocation(line: 1992, column: 33, scope: !7155)
!7168 = !DILocation(line: 1992, column: 18, scope: !7155)
!7169 = !DILocation(line: 1992, column: 24, scope: !7155)
!7170 = !DILocation(line: 1992, column: 31, scope: !7155)
!7171 = !DILocation(line: 1992, column: 4, scope: !7155)
!7172 = !DILocation(line: 1992, column: 9, scope: !7155)
!7173 = !DILocation(line: 1992, column: 16, scope: !7155)
!7174 = !DILocation(line: 1994, column: 8, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 1994, column: 8)
!7176 = !DILocation(line: 1994, column: 8, scope: !7155)
!7177 = !DILocation(line: 1994, column: 23, scope: !7175)
!7178 = !DILocation(line: 1994, column: 38, scope: !7175)
!7179 = !DILocation(line: 1994, column: 41, scope: !7175)
!7180 = !DILocation(line: 1994, column: 43, scope: !7175)
!7181 = !DILocation(line: 1995, column: 8, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 1995, column: 8)
!7183 = !DILocation(line: 1995, column: 8, scope: !7155)
!7184 = !DILocation(line: 1995, column: 23, scope: !7182)
!7185 = !DILocation(line: 1995, column: 38, scope: !7182)
!7186 = !DILocation(line: 1995, column: 41, scope: !7182)
!7187 = !DILocation(line: 1995, column: 43, scope: !7182)
!7188 = !DILocation(line: 1997, column: 3, scope: !7155)
!7189 = !DILocation(line: 2001, column: 18, scope: !7078)
!7190 = !DILocation(line: 2001, column: 3, scope: !7078)
!7191 = !DILocation(line: 2003, column: 15, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 2003, column: 3)
!7193 = !DILocation(line: 2003, column: 22, scope: !7192)
!7194 = !DILocation(line: 2003, column: 28, scope: !7192)
!7195 = !DILocation(line: 2003, column: 13, scope: !7192)
!7196 = !DILocation(line: 2003, column: 8, scope: !7192)
!7197 = !DILocation(line: 2003, column: 35, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 2003, column: 3)
!7199 = !DILocation(line: 2003, column: 3, scope: !7192)
!7200 = !DILocation(line: 2005, column: 31, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 2003, column: 60)
!7202 = !DILocation(line: 2005, column: 4, scope: !7201)
!7203 = !DILocation(line: 2005, column: 10, scope: !7201)
!7204 = !DILocation(line: 2005, column: 20, scope: !7201)
!7205 = !DILocation(line: 2005, column: 29, scope: !7201)
!7206 = !DILocation(line: 2006, column: 3, scope: !7201)
!7207 = !DILocation(line: 2003, column: 48, scope: !7198)
!7208 = !DILocation(line: 2003, column: 54, scope: !7198)
!7209 = !DILocation(line: 2003, column: 46, scope: !7198)
!7210 = !DILocation(line: 2003, column: 3, scope: !7198)
!7211 = distinct !{!7211, !7199, !7212}
!7212 = !DILocation(line: 2006, column: 3, scope: !7192)
!7213 = !DILocation(line: 2008, column: 7, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 2008, column: 7)
!7215 = !DILocation(line: 2008, column: 14, scope: !7214)
!7216 = !DILocation(line: 2008, column: 24, scope: !7214)
!7217 = !DILocation(line: 2008, column: 7, scope: !7078)
!7218 = !DILocation(line: 2009, column: 4, scope: !7214)
!7219 = !DILocation(line: 2009, column: 11, scope: !7214)
!7220 = !DILocation(line: 2009, column: 21, scope: !7214)
!7221 = !DILocation(line: 2009, column: 30, scope: !7214)
!7222 = !DILocation(line: 2009, column: 37, scope: !7214)
!7223 = !DILocation(line: 2011, column: 10, scope: !7078)
!7224 = !DILocation(line: 2011, column: 3, scope: !7078)
!7225 = !DILocation(line: 2014, column: 3, scope: !7075)
!7226 = !DILocation(line: 2015, column: 1, scope: !7071)
!7227 = distinct !DISubprogram(name: "ntreeLocalSync", scope: !3, file: !3, line: 2020, type: !5550, scopeLine: 2021, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7228 = !DILocalVariable(name: "localtree", arg: 1, scope: !7227, file: !3, line: 2020, type: !2101)
!7229 = !DILocation(line: 2020, column: 32, scope: !7227)
!7230 = !DILocalVariable(name: "ntree", arg: 2, scope: !7227, file: !3, line: 2020, type: !2101)
!7231 = !DILocation(line: 2020, column: 54, scope: !7227)
!7232 = !DILocation(line: 2022, column: 6, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 2022, column: 6)
!7234 = !DILocation(line: 2022, column: 16, scope: !7233)
!7235 = !DILocation(line: 2022, column: 19, scope: !7233)
!7236 = !DILocation(line: 2022, column: 6, scope: !7227)
!7237 = !DILocation(line: 2023, column: 7, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 2023, column: 7)
!7239 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 2022, column: 26)
!7240 = !DILocation(line: 2023, column: 14, scope: !7238)
!7241 = !DILocation(line: 2023, column: 24, scope: !7238)
!7242 = !DILocation(line: 2023, column: 7, scope: !7239)
!7243 = !DILocation(line: 2024, column: 4, scope: !7238)
!7244 = !DILocation(line: 2024, column: 11, scope: !7238)
!7245 = !DILocation(line: 2024, column: 21, scope: !7238)
!7246 = !DILocation(line: 2024, column: 32, scope: !7238)
!7247 = !DILocation(line: 2024, column: 43, scope: !7238)
!7248 = !DILocation(line: 2025, column: 2, scope: !7239)
!7249 = !DILocation(line: 2026, column: 1, scope: !7227)
!7250 = distinct !DISubprogram(name: "ntreeLocalMerge", scope: !3, file: !3, line: 2030, type: !5550, scopeLine: 2031, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7251 = !DILocalVariable(name: "localtree", arg: 1, scope: !7250, file: !3, line: 2030, type: !2101)
!7252 = !DILocation(line: 2030, column: 33, scope: !7250)
!7253 = !DILocalVariable(name: "ntree", arg: 2, scope: !7250, file: !3, line: 2030, type: !2101)
!7254 = !DILocation(line: 2030, column: 55, scope: !7250)
!7255 = !DILocation(line: 2032, column: 6, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 2032, column: 6)
!7257 = !DILocation(line: 2032, column: 12, scope: !7256)
!7258 = !DILocation(line: 2032, column: 15, scope: !7256)
!7259 = !DILocation(line: 2032, column: 6, scope: !7250)
!7260 = !DILocation(line: 2033, column: 7, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 2033, column: 7)
!7262 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 2032, column: 26)
!7263 = !DILocation(line: 2033, column: 14, scope: !7261)
!7264 = !DILocation(line: 2033, column: 24, scope: !7261)
!7265 = !DILocation(line: 2033, column: 7, scope: !7262)
!7266 = !DILocation(line: 2034, column: 4, scope: !7261)
!7267 = !DILocation(line: 2034, column: 11, scope: !7261)
!7268 = !DILocation(line: 2034, column: 21, scope: !7261)
!7269 = !DILocation(line: 2034, column: 33, scope: !7261)
!7270 = !DILocation(line: 2034, column: 44, scope: !7261)
!7271 = !DILocation(line: 2036, column: 20, scope: !7262)
!7272 = !DILocation(line: 2036, column: 3, scope: !7262)
!7273 = !DILocation(line: 2037, column: 3, scope: !7262)
!7274 = !DILocation(line: 2037, column: 13, scope: !7262)
!7275 = !DILocation(line: 2038, column: 2, scope: !7262)
!7276 = !DILocation(line: 2039, column: 1, scope: !7250)
!7277 = distinct !DISubprogram(name: "ntreeFindSocketInterface", scope: !3, file: !3, line: 2097, type: !7278, scopeLine: 2098, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7278 = !DISubroutineType(types: !7279)
!7279 = !{!642, !2101, !36, !681}
!7280 = !DILocalVariable(name: "ntree", arg: 1, scope: !7277, file: !3, line: 2097, type: !2101)
!7281 = !DILocation(line: 2097, column: 50, scope: !7277)
!7282 = !DILocalVariable(name: "in_out", arg: 2, scope: !7277, file: !3, line: 2097, type: !36)
!7283 = !DILocation(line: 2097, column: 61, scope: !7277)
!7284 = !DILocalVariable(name: "identifier", arg: 3, scope: !7277, file: !3, line: 2097, type: !681)
!7285 = !DILocation(line: 2097, column: 81, scope: !7277)
!7286 = !DILocalVariable(name: "iosock", scope: !7277, file: !3, line: 2099, type: !759)
!7287 = !DILocation(line: 2099, column: 15, scope: !7277)
!7288 = !DILocation(line: 2099, column: 25, scope: !7277)
!7289 = !DILocation(line: 2099, column: 32, scope: !7277)
!7290 = !DILocation(line: 2099, column: 45, scope: !7277)
!7291 = !DILocation(line: 2099, column: 52, scope: !7277)
!7292 = !DILocation(line: 2099, column: 59, scope: !7277)
!7293 = !DILocation(line: 2099, column: 67, scope: !7277)
!7294 = !DILocation(line: 2099, column: 74, scope: !7277)
!7295 = !DILocation(line: 2099, column: 82, scope: !7277)
!7296 = !DILocation(line: 2099, column: 24, scope: !7277)
!7297 = !DILocation(line: 2100, column: 2, scope: !7277)
!7298 = !DILocation(line: 2100, column: 9, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 2100, column: 2)
!7300 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 2100, column: 2)
!7301 = !DILocation(line: 2100, column: 2, scope: !7300)
!7302 = !DILocation(line: 2101, column: 7, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 2101, column: 7)
!7304 = !DILocation(line: 2101, column: 7, scope: !7299)
!7305 = !DILocation(line: 2102, column: 11, scope: !7303)
!7306 = !DILocation(line: 2102, column: 4, scope: !7303)
!7307 = !DILocation(line: 2100, column: 26, scope: !7299)
!7308 = !DILocation(line: 2100, column: 34, scope: !7299)
!7309 = !DILocation(line: 2100, column: 24, scope: !7299)
!7310 = !DILocation(line: 2100, column: 2, scope: !7299)
!7311 = distinct !{!7311, !7301, !7312}
!7312 = !DILocation(line: 2102, column: 11, scope: !7300)
!7313 = !DILocation(line: 2103, column: 2, scope: !7277)
!7314 = !DILocation(line: 2104, column: 1, scope: !7277)
!7315 = distinct !DISubprogram(name: "ntreeAddSocketInterface", scope: !3, file: !3, line: 2106, type: !7316, scopeLine: 2107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7316 = !DISubroutineType(types: !7317)
!7317 = !{!642, !2101, !36, !681, !681}
!7318 = !DILocalVariable(name: "ntree", arg: 1, scope: !7315, file: !3, line: 2106, type: !2101)
!7319 = !DILocation(line: 2106, column: 49, scope: !7315)
!7320 = !DILocalVariable(name: "in_out", arg: 2, scope: !7315, file: !3, line: 2106, type: !36)
!7321 = !DILocation(line: 2106, column: 60, scope: !7315)
!7322 = !DILocalVariable(name: "idname", arg: 3, scope: !7315, file: !3, line: 2106, type: !681)
!7323 = !DILocation(line: 2106, column: 80, scope: !7315)
!7324 = !DILocalVariable(name: "name", arg: 4, scope: !7315, file: !3, line: 2106, type: !681)
!7325 = !DILocation(line: 2106, column: 100, scope: !7315)
!7326 = !DILocalVariable(name: "iosock", scope: !7315, file: !3, line: 2108, type: !759)
!7327 = !DILocation(line: 2108, column: 15, scope: !7315)
!7328 = !DILocation(line: 2110, column: 33, scope: !7315)
!7329 = !DILocation(line: 2110, column: 40, scope: !7315)
!7330 = !DILocation(line: 2110, column: 48, scope: !7315)
!7331 = !DILocation(line: 2110, column: 56, scope: !7315)
!7332 = !DILocation(line: 2110, column: 11, scope: !7315)
!7333 = !DILocation(line: 2110, column: 9, scope: !7315)
!7334 = !DILocation(line: 2111, column: 6, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 2111, column: 6)
!7336 = !DILocation(line: 2111, column: 13, scope: !7335)
!7337 = !DILocation(line: 2111, column: 6, scope: !7315)
!7338 = !DILocation(line: 2112, column: 16, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 2111, column: 25)
!7340 = !DILocation(line: 2112, column: 23, scope: !7339)
!7341 = !DILocation(line: 2112, column: 31, scope: !7339)
!7342 = !DILocation(line: 2112, column: 3, scope: !7339)
!7343 = !DILocation(line: 2113, column: 3, scope: !7339)
!7344 = !DILocation(line: 2113, column: 10, scope: !7339)
!7345 = !DILocation(line: 2113, column: 17, scope: !7339)
!7346 = !DILocation(line: 2114, column: 2, scope: !7339)
!7347 = !DILocation(line: 2115, column: 11, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 2115, column: 11)
!7349 = !DILocation(line: 2115, column: 18, scope: !7348)
!7350 = !DILocation(line: 2115, column: 11, scope: !7335)
!7351 = !DILocation(line: 2116, column: 16, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 2115, column: 31)
!7353 = !DILocation(line: 2116, column: 23, scope: !7352)
!7354 = !DILocation(line: 2116, column: 32, scope: !7352)
!7355 = !DILocation(line: 2116, column: 3, scope: !7352)
!7356 = !DILocation(line: 2117, column: 3, scope: !7352)
!7357 = !DILocation(line: 2117, column: 10, scope: !7352)
!7358 = !DILocation(line: 2117, column: 17, scope: !7352)
!7359 = !DILocation(line: 2118, column: 2, scope: !7352)
!7360 = !DILocation(line: 2120, column: 9, scope: !7315)
!7361 = !DILocation(line: 2120, column: 2, scope: !7315)
!7362 = distinct !DISubprogram(name: "make_socket_interface", scope: !3, file: !3, line: 2044, type: !7363, scopeLine: 2046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7363 = !DISubroutineType(types: !7364)
!7364 = !{!759, !2101, !36, !681, !681}
!7365 = !DILocalVariable(name: "ntree", arg: 1, scope: !7362, file: !3, line: 2044, type: !2101)
!7366 = !DILocation(line: 2044, column: 54, scope: !7362)
!7367 = !DILocalVariable(name: "in_out", arg: 2, scope: !7362, file: !3, line: 2044, type: !36)
!7368 = !DILocation(line: 2044, column: 65, scope: !7362)
!7369 = !DILocalVariable(name: "idname", arg: 3, scope: !7362, file: !3, line: 2045, type: !681)
!7370 = !DILocation(line: 2045, column: 54, scope: !7362)
!7371 = !DILocalVariable(name: "name", arg: 4, scope: !7362, file: !3, line: 2045, type: !681)
!7372 = !DILocation(line: 2045, column: 74, scope: !7362)
!7373 = !DILocalVariable(name: "stype", scope: !7362, file: !3, line: 2047, type: !2421)
!7374 = !DILocation(line: 2047, column: 19, scope: !7362)
!7375 = !DILocation(line: 2047, column: 46, scope: !7362)
!7376 = !DILocation(line: 2047, column: 27, scope: !7362)
!7377 = !DILocalVariable(name: "sock", scope: !7362, file: !3, line: 2048, type: !759)
!7378 = !DILocation(line: 2048, column: 15, scope: !7362)
!7379 = !DILocalVariable(name: "own_index", scope: !7362, file: !3, line: 2049, type: !36)
!7380 = !DILocation(line: 2049, column: 6, scope: !7362)
!7381 = !DILocation(line: 2049, column: 18, scope: !7362)
!7382 = !DILocation(line: 2049, column: 25, scope: !7362)
!7383 = !DILocation(line: 2049, column: 34, scope: !7362)
!7384 = !DILocation(line: 2051, column: 6, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 2051, column: 6)
!7386 = !DILocation(line: 2051, column: 12, scope: !7385)
!7387 = !DILocation(line: 2051, column: 6, scope: !7362)
!7388 = !DILocation(line: 2052, column: 3, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 2051, column: 21)
!7390 = !DILocation(line: 2055, column: 9, scope: !7362)
!7391 = !DILocation(line: 2055, column: 7, scope: !7362)
!7392 = !DILocation(line: 2056, column: 14, scope: !7362)
!7393 = !DILocation(line: 2056, column: 20, scope: !7362)
!7394 = !DILocation(line: 2056, column: 28, scope: !7362)
!7395 = !DILocation(line: 2056, column: 35, scope: !7362)
!7396 = !DILocation(line: 2056, column: 2, scope: !7362)
!7397 = !DILocation(line: 2057, column: 27, scope: !7362)
!7398 = !DILocation(line: 2057, column: 34, scope: !7362)
!7399 = !DILocation(line: 2057, column: 40, scope: !7362)
!7400 = !DILocation(line: 2057, column: 2, scope: !7362)
!7401 = !DILocation(line: 2058, column: 17, scope: !7362)
!7402 = !DILocation(line: 2058, column: 2, scope: !7362)
!7403 = !DILocation(line: 2058, column: 8, scope: !7362)
!7404 = !DILocation(line: 2058, column: 15, scope: !7362)
!7405 = !DILocation(line: 2059, column: 2, scope: !7362)
!7406 = !DILocation(line: 2059, column: 8, scope: !7362)
!7407 = !DILocation(line: 2059, column: 13, scope: !7362)
!7408 = !DILocation(line: 2062, column: 14, scope: !7362)
!7409 = !DILocation(line: 2062, column: 21, scope: !7362)
!7410 = !DILocation(line: 2062, column: 30, scope: !7362)
!7411 = !DILocation(line: 2062, column: 12, scope: !7362)
!7412 = !DILocation(line: 2064, column: 6, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 2064, column: 6)
!7414 = !DILocation(line: 2064, column: 13, scope: !7413)
!7415 = !DILocation(line: 2064, column: 6, scope: !7362)
!7416 = !DILocation(line: 2065, column: 16, scope: !7413)
!7417 = !DILocation(line: 2065, column: 22, scope: !7413)
!7418 = !DILocation(line: 2065, column: 56, scope: !7413)
!7419 = !DILocation(line: 2065, column: 3, scope: !7413)
!7420 = !DILocation(line: 2067, column: 16, scope: !7413)
!7421 = !DILocation(line: 2067, column: 22, scope: !7413)
!7422 = !DILocation(line: 2067, column: 57, scope: !7413)
!7423 = !DILocation(line: 2067, column: 3, scope: !7413)
!7424 = !DILocation(line: 2080, column: 20, scope: !7362)
!7425 = !DILocation(line: 2080, column: 2, scope: !7362)
!7426 = !DILocation(line: 2080, column: 8, scope: !7362)
!7427 = !DILocation(line: 2080, column: 18, scope: !7362)
!7428 = !DILocation(line: 2088, column: 17, scope: !7362)
!7429 = !DILocation(line: 2088, column: 24, scope: !7362)
!7430 = !DILocation(line: 2088, column: 16, scope: !7362)
!7431 = !DILocation(line: 2088, column: 2, scope: !7362)
!7432 = !DILocation(line: 2088, column: 8, scope: !7362)
!7433 = !DILocation(line: 2088, column: 14, scope: !7362)
!7434 = !DILocation(line: 2090, column: 14, scope: !7362)
!7435 = !DILocation(line: 2090, column: 20, scope: !7362)
!7436 = !DILocation(line: 2090, column: 26, scope: !7362)
!7437 = !DILocation(line: 2090, column: 2, scope: !7362)
!7438 = !DILocation(line: 2091, column: 2, scope: !7362)
!7439 = !DILocation(line: 2091, column: 8, scope: !7362)
!7440 = !DILocation(line: 2091, column: 16, scope: !7362)
!7441 = !DILocation(line: 2092, column: 2, scope: !7362)
!7442 = !DILocation(line: 2092, column: 8, scope: !7362)
!7443 = !DILocation(line: 2092, column: 13, scope: !7362)
!7444 = !DILocation(line: 2094, column: 9, scope: !7362)
!7445 = !DILocation(line: 2094, column: 2, scope: !7362)
!7446 = !DILocation(line: 2095, column: 1, scope: !7362)
!7447 = distinct !DISubprogram(name: "ntreeInsertSocketInterface", scope: !3, file: !3, line: 2123, type: !7448, scopeLine: 2125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7448 = !DISubroutineType(types: !7449)
!7449 = !{!642, !2101, !36, !681, !759, !681}
!7450 = !DILocalVariable(name: "ntree", arg: 1, scope: !7447, file: !3, line: 2123, type: !2101)
!7451 = !DILocation(line: 2123, column: 52, scope: !7447)
!7452 = !DILocalVariable(name: "in_out", arg: 2, scope: !7447, file: !3, line: 2123, type: !36)
!7453 = !DILocation(line: 2123, column: 63, scope: !7447)
!7454 = !DILocalVariable(name: "idname", arg: 3, scope: !7447, file: !3, line: 2123, type: !681)
!7455 = !DILocation(line: 2123, column: 83, scope: !7447)
!7456 = !DILocalVariable(name: "next_sock", arg: 4, scope: !7447, file: !3, line: 2124, type: !759)
!7457 = !DILocation(line: 2124, column: 45, scope: !7447)
!7458 = !DILocalVariable(name: "name", arg: 5, scope: !7447, file: !3, line: 2124, type: !681)
!7459 = !DILocation(line: 2124, column: 68, scope: !7447)
!7460 = !DILocalVariable(name: "iosock", scope: !7447, file: !3, line: 2126, type: !759)
!7461 = !DILocation(line: 2126, column: 15, scope: !7447)
!7462 = !DILocation(line: 2128, column: 33, scope: !7447)
!7463 = !DILocation(line: 2128, column: 40, scope: !7447)
!7464 = !DILocation(line: 2128, column: 48, scope: !7447)
!7465 = !DILocation(line: 2128, column: 56, scope: !7447)
!7466 = !DILocation(line: 2128, column: 11, scope: !7447)
!7467 = !DILocation(line: 2128, column: 9, scope: !7447)
!7468 = !DILocation(line: 2129, column: 6, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 2129, column: 6)
!7470 = !DILocation(line: 2129, column: 13, scope: !7469)
!7471 = !DILocation(line: 2129, column: 6, scope: !7447)
!7472 = !DILocation(line: 2130, column: 25, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7469, file: !3, line: 2129, column: 25)
!7474 = !DILocation(line: 2130, column: 32, scope: !7473)
!7475 = !DILocation(line: 2130, column: 40, scope: !7473)
!7476 = !DILocation(line: 2130, column: 51, scope: !7473)
!7477 = !DILocation(line: 2130, column: 3, scope: !7473)
!7478 = !DILocation(line: 2131, column: 3, scope: !7473)
!7479 = !DILocation(line: 2131, column: 10, scope: !7473)
!7480 = !DILocation(line: 2131, column: 17, scope: !7473)
!7481 = !DILocation(line: 2132, column: 2, scope: !7473)
!7482 = !DILocation(line: 2133, column: 11, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7469, file: !3, line: 2133, column: 11)
!7484 = !DILocation(line: 2133, column: 18, scope: !7483)
!7485 = !DILocation(line: 2133, column: 11, scope: !7469)
!7486 = !DILocation(line: 2134, column: 25, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 2133, column: 31)
!7488 = !DILocation(line: 2134, column: 32, scope: !7487)
!7489 = !DILocation(line: 2134, column: 41, scope: !7487)
!7490 = !DILocation(line: 2134, column: 52, scope: !7487)
!7491 = !DILocation(line: 2134, column: 3, scope: !7487)
!7492 = !DILocation(line: 2135, column: 3, scope: !7487)
!7493 = !DILocation(line: 2135, column: 10, scope: !7487)
!7494 = !DILocation(line: 2135, column: 17, scope: !7487)
!7495 = !DILocation(line: 2136, column: 2, scope: !7487)
!7496 = !DILocation(line: 2138, column: 9, scope: !7447)
!7497 = !DILocation(line: 2138, column: 2, scope: !7447)
!7498 = distinct !DISubprogram(name: "ntreeAddSocketInterfaceFromSocket", scope: !3, file: !3, line: 2141, type: !7499, scopeLine: 2142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7499 = !DISubroutineType(types: !7500)
!7500 = !{!642, !2101, !755, !759}
!7501 = !DILocalVariable(name: "ntree", arg: 1, scope: !7498, file: !3, line: 2141, type: !2101)
!7502 = !DILocation(line: 2141, column: 66, scope: !7498)
!7503 = !DILocalVariable(name: "from_node", arg: 2, scope: !7498, file: !3, line: 2141, type: !755)
!7504 = !DILocation(line: 2141, column: 80, scope: !7498)
!7505 = !DILocalVariable(name: "from_sock", arg: 3, scope: !7498, file: !3, line: 2141, type: !759)
!7506 = !DILocation(line: 2141, column: 104, scope: !7498)
!7507 = !DILocalVariable(name: "iosock", scope: !7498, file: !3, line: 2143, type: !759)
!7508 = !DILocation(line: 2143, column: 15, scope: !7498)
!7509 = !DILocation(line: 2143, column: 48, scope: !7498)
!7510 = !DILocation(line: 2143, column: 55, scope: !7498)
!7511 = !DILocation(line: 2143, column: 66, scope: !7498)
!7512 = !DILocation(line: 2143, column: 74, scope: !7498)
!7513 = !DILocation(line: 2143, column: 85, scope: !7498)
!7514 = !DILocation(line: 2143, column: 93, scope: !7498)
!7515 = !DILocation(line: 2143, column: 104, scope: !7498)
!7516 = !DILocation(line: 2143, column: 24, scope: !7498)
!7517 = !DILocation(line: 2144, column: 6, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 2144, column: 6)
!7519 = !DILocation(line: 2144, column: 6, scope: !7498)
!7520 = !DILocation(line: 2145, column: 7, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7522, file: !3, line: 2145, column: 7)
!7522 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 2144, column: 14)
!7523 = !DILocation(line: 2145, column: 15, scope: !7521)
!7524 = !DILocation(line: 2145, column: 25, scope: !7521)
!7525 = !DILocation(line: 2145, column: 7, scope: !7522)
!7526 = !DILocation(line: 2146, column: 4, scope: !7521)
!7527 = !DILocation(line: 2146, column: 12, scope: !7521)
!7528 = !DILocation(line: 2146, column: 22, scope: !7521)
!7529 = !DILocation(line: 2146, column: 44, scope: !7521)
!7530 = !DILocation(line: 2146, column: 51, scope: !7521)
!7531 = !DILocation(line: 2146, column: 59, scope: !7521)
!7532 = !DILocation(line: 2146, column: 70, scope: !7521)
!7533 = !DILocation(line: 2147, column: 2, scope: !7522)
!7534 = !DILocation(line: 2148, column: 9, scope: !7498)
!7535 = !DILocation(line: 2148, column: 2, scope: !7498)
!7536 = distinct !DISubprogram(name: "ntreeInsertSocketInterfaceFromSocket", scope: !3, file: !3, line: 2151, type: !7537, scopeLine: 2152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7537 = !DISubroutineType(types: !7538)
!7538 = !{!642, !2101, !759, !755, !759}
!7539 = !DILocalVariable(name: "ntree", arg: 1, scope: !7536, file: !3, line: 2151, type: !2101)
!7540 = !DILocation(line: 2151, column: 69, scope: !7536)
!7541 = !DILocalVariable(name: "next_sock", arg: 2, scope: !7536, file: !3, line: 2151, type: !759)
!7542 = !DILocation(line: 2151, column: 89, scope: !7536)
!7543 = !DILocalVariable(name: "from_node", arg: 3, scope: !7536, file: !3, line: 2151, type: !755)
!7544 = !DILocation(line: 2151, column: 107, scope: !7536)
!7545 = !DILocalVariable(name: "from_sock", arg: 4, scope: !7536, file: !3, line: 2151, type: !759)
!7546 = !DILocation(line: 2151, column: 131, scope: !7536)
!7547 = !DILocalVariable(name: "iosock", scope: !7536, file: !3, line: 2153, type: !759)
!7548 = !DILocation(line: 2153, column: 15, scope: !7536)
!7549 = !DILocation(line: 2153, column: 51, scope: !7536)
!7550 = !DILocation(line: 2153, column: 58, scope: !7536)
!7551 = !DILocation(line: 2153, column: 69, scope: !7536)
!7552 = !DILocation(line: 2153, column: 77, scope: !7536)
!7553 = !DILocation(line: 2153, column: 88, scope: !7536)
!7554 = !DILocation(line: 2153, column: 96, scope: !7536)
!7555 = !DILocation(line: 2153, column: 107, scope: !7536)
!7556 = !DILocation(line: 2153, column: 118, scope: !7536)
!7557 = !DILocation(line: 2153, column: 24, scope: !7536)
!7558 = !DILocation(line: 2154, column: 6, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 2154, column: 6)
!7560 = !DILocation(line: 2154, column: 6, scope: !7536)
!7561 = !DILocation(line: 2155, column: 7, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 2155, column: 7)
!7563 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 2154, column: 14)
!7564 = !DILocation(line: 2155, column: 15, scope: !7562)
!7565 = !DILocation(line: 2155, column: 25, scope: !7562)
!7566 = !DILocation(line: 2155, column: 7, scope: !7563)
!7567 = !DILocation(line: 2156, column: 4, scope: !7562)
!7568 = !DILocation(line: 2156, column: 12, scope: !7562)
!7569 = !DILocation(line: 2156, column: 22, scope: !7562)
!7570 = !DILocation(line: 2156, column: 44, scope: !7562)
!7571 = !DILocation(line: 2156, column: 51, scope: !7562)
!7572 = !DILocation(line: 2156, column: 59, scope: !7562)
!7573 = !DILocation(line: 2156, column: 70, scope: !7562)
!7574 = !DILocation(line: 2157, column: 2, scope: !7563)
!7575 = !DILocation(line: 2158, column: 9, scope: !7536)
!7576 = !DILocation(line: 2158, column: 2, scope: !7536)
!7577 = distinct !DISubprogram(name: "ntreeRemoveSocketInterface", scope: !3, file: !3, line: 2161, type: !4070, scopeLine: 2162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7578 = !DILocalVariable(name: "ntree", arg: 1, scope: !7577, file: !3, line: 2161, type: !2101)
!7579 = !DILocation(line: 2161, column: 44, scope: !7577)
!7580 = !DILocalVariable(name: "sock", arg: 2, scope: !7577, file: !3, line: 2161, type: !759)
!7581 = !DILocation(line: 2161, column: 64, scope: !7577)
!7582 = !DILocation(line: 2164, column: 15, scope: !7577)
!7583 = !DILocation(line: 2164, column: 22, scope: !7577)
!7584 = !DILocation(line: 2164, column: 30, scope: !7577)
!7585 = !DILocation(line: 2164, column: 2, scope: !7577)
!7586 = !DILocation(line: 2165, column: 15, scope: !7577)
!7587 = !DILocation(line: 2165, column: 22, scope: !7577)
!7588 = !DILocation(line: 2165, column: 31, scope: !7577)
!7589 = !DILocation(line: 2165, column: 2, scope: !7577)
!7590 = !DILocation(line: 2167, column: 29, scope: !7577)
!7591 = !DILocation(line: 2167, column: 36, scope: !7577)
!7592 = !DILocation(line: 2167, column: 2, scope: !7577)
!7593 = !DILocation(line: 2168, column: 2, scope: !7577)
!7594 = !DILocation(line: 2168, column: 12, scope: !7577)
!7595 = !DILocation(line: 2170, column: 2, scope: !7577)
!7596 = !DILocation(line: 2170, column: 9, scope: !7577)
!7597 = !DILocation(line: 2170, column: 16, scope: !7577)
!7598 = !DILocation(line: 2171, column: 1, scope: !7577)
!7599 = distinct !DISubprogram(name: "ntreeInterfaceTypeGet", scope: !3, file: !3, line: 2234, type: !7600, scopeLine: 2235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{!678, !2101, !36}
!7602 = !DILocalVariable(name: "ntree", arg: 1, scope: !7599, file: !3, line: 2234, type: !2101)
!7603 = !DILocation(line: 2234, column: 45, scope: !7599)
!7604 = !DILocalVariable(name: "create", arg: 2, scope: !7599, file: !3, line: 2234, type: !36)
!7605 = !DILocation(line: 2234, column: 56, scope: !7599)
!7606 = !DILocation(line: 2236, column: 6, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 2236, column: 6)
!7608 = !DILocation(line: 2236, column: 13, scope: !7607)
!7609 = !DILocation(line: 2236, column: 6, scope: !7599)
!7610 = !DILocalVariable(name: "base", scope: !7611, file: !3, line: 2238, type: !7612)
!7611 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 2236, column: 29)
!7612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !101, size: 1040, elements: !7613)
!7613 = !{!7614}
!7614 = !DISubrange(count: 130)
!7615 = !DILocation(line: 2238, column: 8, scope: !7611)
!7616 = !DILocalVariable(name: "identifier", scope: !7611, file: !3, line: 2238, type: !7612)
!7617 = !DILocation(line: 2238, column: 32, scope: !7611)
!7618 = !DILocalVariable(name: "name", scope: !7611, file: !3, line: 2238, type: !7612)
!7619 = !DILocation(line: 2238, column: 62, scope: !7611)
!7620 = !DILocalVariable(name: "description", scope: !7611, file: !3, line: 2238, type: !7612)
!7621 = !DILocation(line: 2238, column: 86, scope: !7611)
!7622 = !DILocalVariable(name: "srna", scope: !7611, file: !3, line: 2244, type: !714)
!7623 = !DILocation(line: 2244, column: 14, scope: !7611)
!7624 = !DILocation(line: 2244, column: 21, scope: !7611)
!7625 = !DILocation(line: 2244, column: 28, scope: !7611)
!7626 = !DILocation(line: 2246, column: 35, scope: !7611)
!7627 = !DILocation(line: 2246, column: 42, scope: !7611)
!7628 = !DILocation(line: 2246, column: 3, scope: !7611)
!7629 = !DILocation(line: 2249, column: 37, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 2249, column: 7)
!7631 = !DILocation(line: 2249, column: 15, scope: !7630)
!7632 = !DILocation(line: 2249, column: 44, scope: !7630)
!7633 = !DILocation(line: 2249, column: 7, scope: !7630)
!7634 = !DILocation(line: 2249, column: 64, scope: !7630)
!7635 = !DILocation(line: 2249, column: 7, scope: !7611)
!7636 = !DILocation(line: 2251, column: 31, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 2249, column: 70)
!7638 = !DILocation(line: 2251, column: 38, scope: !7637)
!7639 = !DILocation(line: 2251, column: 44, scope: !7637)
!7640 = !DILocation(line: 2251, column: 76, scope: !7637)
!7641 = !DILocation(line: 2251, column: 82, scope: !7637)
!7642 = !DILocation(line: 2251, column: 4, scope: !7637)
!7643 = !DILocation(line: 2254, column: 33, scope: !7637)
!7644 = !DILocation(line: 2254, column: 4, scope: !7637)
!7645 = !DILocation(line: 2255, column: 30, scope: !7637)
!7646 = !DILocation(line: 2255, column: 36, scope: !7637)
!7647 = !DILocation(line: 2255, column: 4, scope: !7637)
!7648 = !DILocation(line: 2256, column: 27, scope: !7637)
!7649 = !DILocation(line: 2256, column: 33, scope: !7637)
!7650 = !DILocation(line: 2256, column: 39, scope: !7637)
!7651 = !DILocation(line: 2256, column: 4, scope: !7637)
!7652 = !DILocation(line: 2257, column: 38, scope: !7637)
!7653 = !DILocation(line: 2257, column: 4, scope: !7637)
!7654 = !DILocation(line: 2258, column: 3, scope: !7637)
!7655 = !DILocation(line: 2259, column: 2, scope: !7611)
!7656 = !DILocation(line: 2260, column: 11, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 2260, column: 11)
!7658 = !DILocation(line: 2260, column: 11, scope: !7607)
!7659 = !DILocation(line: 2261, column: 31, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 2260, column: 19)
!7661 = !DILocation(line: 2261, column: 3, scope: !7660)
!7662 = !DILocation(line: 2262, column: 2, scope: !7660)
!7663 = !DILocation(line: 2264, column: 9, scope: !7599)
!7664 = !DILocation(line: 2264, column: 16, scope: !7599)
!7665 = !DILocation(line: 2264, column: 2, scope: !7599)
!7666 = distinct !DISubprogram(name: "ntree_interface_identifier_base", scope: !3, file: !3, line: 2174, type: !7667, scopeLine: 2175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7667 = !DISubroutineType(types: !7668)
!7668 = !{null, !2101, !155}
!7669 = !DILocalVariable(name: "ntree", arg: 1, scope: !7666, file: !3, line: 2174, type: !2101)
!7670 = !DILocation(line: 2174, column: 56, scope: !7666)
!7671 = !DILocalVariable(name: "base", arg: 2, scope: !7666, file: !3, line: 2174, type: !155)
!7672 = !DILocation(line: 2174, column: 69, scope: !7666)
!7673 = !DILocation(line: 2177, column: 10, scope: !7666)
!7674 = !DILocation(line: 2177, column: 40, scope: !7666)
!7675 = !DILocation(line: 2177, column: 47, scope: !7666)
!7676 = !DILocation(line: 2177, column: 50, scope: !7666)
!7677 = !DILocation(line: 2177, column: 55, scope: !7666)
!7678 = !DILocation(line: 2177, column: 2, scope: !7666)
!7679 = !DILocation(line: 2178, column: 26, scope: !7666)
!7680 = !DILocation(line: 2178, column: 2, scope: !7666)
!7681 = !DILocation(line: 2179, column: 1, scope: !7666)
!7682 = distinct !DISubprogram(name: "ntree_interface_identifier", scope: !3, file: !3, line: 2188, type: !7683, scopeLine: 2189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7683 = !DISubroutineType(types: !7684)
!7684 = !{null, !2101, !681, !155, !36, !155, !155}
!7685 = !DILocalVariable(name: "ntree", arg: 1, scope: !7682, file: !3, line: 2188, type: !2101)
!7686 = !DILocation(line: 2188, column: 51, scope: !7682)
!7687 = !DILocalVariable(name: "base", arg: 2, scope: !7682, file: !3, line: 2188, type: !681)
!7688 = !DILocation(line: 2188, column: 70, scope: !7682)
!7689 = !DILocalVariable(name: "identifier", arg: 3, scope: !7682, file: !3, line: 2188, type: !155)
!7690 = !DILocation(line: 2188, column: 82, scope: !7682)
!7691 = !DILocalVariable(name: "maxlen", arg: 4, scope: !7682, file: !3, line: 2188, type: !36)
!7692 = !DILocation(line: 2188, column: 98, scope: !7682)
!7693 = !DILocalVariable(name: "name", arg: 5, scope: !7682, file: !3, line: 2188, type: !155)
!7694 = !DILocation(line: 2188, column: 112, scope: !7682)
!7695 = !DILocalVariable(name: "description", arg: 6, scope: !7682, file: !3, line: 2188, type: !155)
!7696 = !DILocation(line: 2188, column: 124, scope: !7682)
!7697 = !DILocation(line: 2194, column: 2, scope: !7682)
!7698 = !DILocation(line: 2194, column: 16, scope: !7682)
!7699 = !DILocation(line: 2195, column: 67, scope: !7682)
!7700 = !DILocation(line: 2195, column: 78, scope: !7682)
!7701 = !DILocation(line: 2195, column: 90, scope: !7682)
!7702 = !DILocation(line: 2195, column: 2, scope: !7682)
!7703 = !DILocation(line: 2197, column: 10, scope: !7682)
!7704 = !DILocation(line: 2197, column: 42, scope: !7682)
!7705 = !DILocation(line: 2197, column: 49, scope: !7682)
!7706 = !DILocation(line: 2197, column: 52, scope: !7682)
!7707 = !DILocation(line: 2197, column: 57, scope: !7682)
!7708 = !DILocation(line: 2197, column: 2, scope: !7682)
!7709 = !DILocation(line: 2198, column: 10, scope: !7682)
!7710 = !DILocation(line: 2198, column: 64, scope: !7682)
!7711 = !DILocation(line: 2198, column: 71, scope: !7682)
!7712 = !DILocation(line: 2198, column: 74, scope: !7682)
!7713 = !DILocation(line: 2198, column: 79, scope: !7682)
!7714 = !DILocation(line: 2198, column: 2, scope: !7682)
!7715 = !DILocation(line: 2199, column: 1, scope: !7682)
!7716 = distinct !DISubprogram(name: "ntree_interface_type_create", scope: !3, file: !3, line: 2201, type: !4921, scopeLine: 2202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7717 = !DILocalVariable(name: "ntree", arg: 1, scope: !7716, file: !3, line: 2201, type: !2101)
!7718 = !DILocation(line: 2201, column: 52, scope: !7716)
!7719 = !DILocalVariable(name: "srna", scope: !7716, file: !3, line: 2203, type: !714)
!7720 = !DILocation(line: 2203, column: 13, scope: !7716)
!7721 = !DILocalVariable(name: "sock", scope: !7716, file: !3, line: 2204, type: !759)
!7722 = !DILocation(line: 2204, column: 15, scope: !7716)
!7723 = !DILocalVariable(name: "base", scope: !7716, file: !3, line: 2206, type: !7612)
!7724 = !DILocation(line: 2206, column: 7, scope: !7716)
!7725 = !DILocalVariable(name: "identifier", scope: !7716, file: !3, line: 2206, type: !7612)
!7726 = !DILocation(line: 2206, column: 31, scope: !7716)
!7727 = !DILocalVariable(name: "name", scope: !7716, file: !3, line: 2206, type: !7612)
!7728 = !DILocation(line: 2206, column: 61, scope: !7716)
!7729 = !DILocalVariable(name: "description", scope: !7716, file: !3, line: 2206, type: !7612)
!7730 = !DILocation(line: 2206, column: 85, scope: !7716)
!7731 = !DILocation(line: 2209, column: 34, scope: !7716)
!7732 = !DILocation(line: 2209, column: 41, scope: !7716)
!7733 = !DILocation(line: 2209, column: 2, scope: !7716)
!7734 = !DILocation(line: 2210, column: 29, scope: !7716)
!7735 = !DILocation(line: 2210, column: 36, scope: !7716)
!7736 = !DILocation(line: 2210, column: 42, scope: !7716)
!7737 = !DILocation(line: 2210, column: 74, scope: !7716)
!7738 = !DILocation(line: 2210, column: 80, scope: !7716)
!7739 = !DILocation(line: 2210, column: 2, scope: !7716)
!7740 = !DILocation(line: 2213, column: 42, scope: !7716)
!7741 = !DILocation(line: 2213, column: 9, scope: !7716)
!7742 = !DILocation(line: 2213, column: 7, scope: !7716)
!7743 = !DILocation(line: 2214, column: 25, scope: !7716)
!7744 = !DILocation(line: 2214, column: 31, scope: !7716)
!7745 = !DILocation(line: 2214, column: 37, scope: !7716)
!7746 = !DILocation(line: 2214, column: 2, scope: !7716)
!7747 = !DILocation(line: 2215, column: 36, scope: !7716)
!7748 = !DILocation(line: 2215, column: 2, scope: !7716)
!7749 = !DILocation(line: 2218, column: 26, scope: !7716)
!7750 = !DILocation(line: 2218, column: 2, scope: !7716)
!7751 = !DILocation(line: 2218, column: 9, scope: !7716)
!7752 = !DILocation(line: 2218, column: 24, scope: !7716)
!7753 = !DILocation(line: 2219, column: 30, scope: !7716)
!7754 = !DILocation(line: 2219, column: 36, scope: !7716)
!7755 = !DILocation(line: 2219, column: 2, scope: !7716)
!7756 = !DILocation(line: 2222, column: 14, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 2222, column: 2)
!7758 = !DILocation(line: 2222, column: 21, scope: !7757)
!7759 = !DILocation(line: 2222, column: 28, scope: !7757)
!7760 = !DILocation(line: 2222, column: 12, scope: !7757)
!7761 = !DILocation(line: 2222, column: 7, scope: !7757)
!7762 = !DILocation(line: 2222, column: 35, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7757, file: !3, line: 2222, column: 2)
!7764 = !DILocation(line: 2222, column: 2, scope: !7757)
!7765 = !DILocalVariable(name: "stype", scope: !7766, file: !3, line: 2223, type: !2421)
!7766 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 2222, column: 60)
!7767 = !DILocation(line: 2223, column: 20, scope: !7766)
!7768 = !DILocation(line: 2223, column: 28, scope: !7766)
!7769 = !DILocation(line: 2223, column: 34, scope: !7766)
!7770 = !DILocation(line: 2224, column: 7, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 2224, column: 7)
!7772 = !DILocation(line: 2224, column: 13, scope: !7771)
!7773 = !DILocation(line: 2224, column: 16, scope: !7771)
!7774 = !DILocation(line: 2224, column: 23, scope: !7771)
!7775 = !DILocation(line: 2224, column: 7, scope: !7766)
!7776 = !DILocation(line: 2225, column: 4, scope: !7771)
!7777 = !DILocation(line: 2225, column: 11, scope: !7771)
!7778 = !DILocation(line: 2225, column: 41, scope: !7771)
!7779 = !DILocation(line: 2225, column: 48, scope: !7771)
!7780 = !DILocation(line: 2225, column: 54, scope: !7771)
!7781 = !DILocation(line: 2226, column: 2, scope: !7766)
!7782 = !DILocation(line: 2222, column: 48, scope: !7763)
!7783 = !DILocation(line: 2222, column: 54, scope: !7763)
!7784 = !DILocation(line: 2222, column: 46, scope: !7763)
!7785 = !DILocation(line: 2222, column: 2, scope: !7763)
!7786 = distinct !{!7786, !7764, !7787}
!7787 = !DILocation(line: 2226, column: 2, scope: !7757)
!7788 = !DILocation(line: 2227, column: 14, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 2227, column: 2)
!7790 = !DILocation(line: 2227, column: 21, scope: !7789)
!7791 = !DILocation(line: 2227, column: 29, scope: !7789)
!7792 = !DILocation(line: 2227, column: 12, scope: !7789)
!7793 = !DILocation(line: 2227, column: 7, scope: !7789)
!7794 = !DILocation(line: 2227, column: 36, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 2227, column: 2)
!7796 = !DILocation(line: 2227, column: 2, scope: !7789)
!7797 = !DILocalVariable(name: "stype", scope: !7798, file: !3, line: 2228, type: !2421)
!7798 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2227, column: 61)
!7799 = !DILocation(line: 2228, column: 20, scope: !7798)
!7800 = !DILocation(line: 2228, column: 28, scope: !7798)
!7801 = !DILocation(line: 2228, column: 34, scope: !7798)
!7802 = !DILocation(line: 2229, column: 7, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 2229, column: 7)
!7804 = !DILocation(line: 2229, column: 13, scope: !7803)
!7805 = !DILocation(line: 2229, column: 16, scope: !7803)
!7806 = !DILocation(line: 2229, column: 23, scope: !7803)
!7807 = !DILocation(line: 2229, column: 7, scope: !7798)
!7808 = !DILocation(line: 2230, column: 4, scope: !7803)
!7809 = !DILocation(line: 2230, column: 11, scope: !7803)
!7810 = !DILocation(line: 2230, column: 41, scope: !7803)
!7811 = !DILocation(line: 2230, column: 48, scope: !7803)
!7812 = !DILocation(line: 2230, column: 54, scope: !7803)
!7813 = !DILocation(line: 2231, column: 2, scope: !7798)
!7814 = !DILocation(line: 2227, column: 49, scope: !7795)
!7815 = !DILocation(line: 2227, column: 55, scope: !7795)
!7816 = !DILocation(line: 2227, column: 47, scope: !7795)
!7817 = !DILocation(line: 2227, column: 2, scope: !7795)
!7818 = distinct !{!7818, !7796, !7819}
!7819 = !DILocation(line: 2231, column: 2, scope: !7789)
!7820 = !DILocation(line: 2232, column: 1, scope: !7716)
!7821 = distinct !DISubprogram(name: "ntreeInterfaceTypeUpdate", scope: !3, file: !3, line: 2275, type: !4921, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7822 = !DILocalVariable(name: "ntree", arg: 1, scope: !7821, file: !3, line: 2275, type: !2101)
!7823 = !DILocation(line: 2275, column: 42, scope: !7821)
!7824 = !DILocation(line: 2282, column: 25, scope: !7821)
!7825 = !DILocation(line: 2282, column: 2, scope: !7821)
!7826 = !DILocation(line: 2283, column: 30, scope: !7821)
!7827 = !DILocation(line: 2283, column: 2, scope: !7821)
!7828 = !DILocation(line: 2284, column: 1, scope: !7821)
!7829 = distinct !DISubprogram(name: "ntreeHasType", scope: !3, file: !3, line: 2289, type: !7830, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7830 = !DISubroutineType(types: !7831)
!7831 = !{!1074, !7832, !36}
!7832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7833, size: 64)
!7833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2102)
!7834 = !DILocalVariable(name: "ntree", arg: 1, scope: !7829, file: !3, line: 2289, type: !7832)
!7835 = !DILocation(line: 2289, column: 36, scope: !7829)
!7836 = !DILocalVariable(name: "type", arg: 2, scope: !7829, file: !3, line: 2289, type: !36)
!7837 = !DILocation(line: 2289, column: 47, scope: !7829)
!7838 = !DILocalVariable(name: "node", scope: !7829, file: !3, line: 2291, type: !755)
!7839 = !DILocation(line: 2291, column: 9, scope: !7829)
!7840 = !DILocation(line: 2293, column: 6, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 2293, column: 6)
!7842 = !DILocation(line: 2293, column: 6, scope: !7829)
!7843 = !DILocation(line: 2294, column: 15, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 2294, column: 3)
!7845 = !DILocation(line: 2294, column: 22, scope: !7844)
!7846 = !DILocation(line: 2294, column: 28, scope: !7844)
!7847 = !DILocation(line: 2294, column: 13, scope: !7844)
!7848 = !DILocation(line: 2294, column: 8, scope: !7844)
!7849 = !DILocation(line: 2294, column: 35, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 2294, column: 3)
!7851 = !DILocation(line: 2294, column: 3, scope: !7844)
!7852 = !DILocation(line: 2295, column: 8, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 2295, column: 8)
!7854 = !DILocation(line: 2295, column: 14, scope: !7853)
!7855 = !DILocation(line: 2295, column: 22, scope: !7853)
!7856 = !DILocation(line: 2295, column: 19, scope: !7853)
!7857 = !DILocation(line: 2295, column: 8, scope: !7850)
!7858 = !DILocation(line: 2296, column: 5, scope: !7853)
!7859 = !DILocation(line: 2294, column: 48, scope: !7850)
!7860 = !DILocation(line: 2294, column: 54, scope: !7850)
!7861 = !DILocation(line: 2294, column: 46, scope: !7850)
!7862 = !DILocation(line: 2294, column: 3, scope: !7850)
!7863 = distinct !{!7863, !7851, !7864}
!7864 = !DILocation(line: 2296, column: 12, scope: !7844)
!7865 = !DILocation(line: 2297, column: 2, scope: !7829)
!7866 = !DILocation(line: 2298, column: 1, scope: !7829)
!7867 = distinct !DISubprogram(name: "ntreeHasTree", scope: !3, file: !3, line: 2300, type: !7868, scopeLine: 2301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7868 = !DISubroutineType(types: !7869)
!7869 = !{!1074, !7832, !7832}
!7870 = !DILocalVariable(name: "ntree", arg: 1, scope: !7867, file: !3, line: 2300, type: !7832)
!7871 = !DILocation(line: 2300, column: 36, scope: !7867)
!7872 = !DILocalVariable(name: "lookup", arg: 2, scope: !7867, file: !3, line: 2300, type: !7832)
!7873 = !DILocation(line: 2300, column: 60, scope: !7867)
!7874 = !DILocalVariable(name: "node", scope: !7867, file: !3, line: 2302, type: !755)
!7875 = !DILocation(line: 2302, column: 9, scope: !7867)
!7876 = !DILocation(line: 2304, column: 6, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 2304, column: 6)
!7878 = !DILocation(line: 2304, column: 15, scope: !7877)
!7879 = !DILocation(line: 2304, column: 12, scope: !7877)
!7880 = !DILocation(line: 2304, column: 6, scope: !7867)
!7881 = !DILocation(line: 2305, column: 3, scope: !7877)
!7882 = !DILocation(line: 2307, column: 14, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 2307, column: 2)
!7884 = !DILocation(line: 2307, column: 21, scope: !7883)
!7885 = !DILocation(line: 2307, column: 27, scope: !7883)
!7886 = !DILocation(line: 2307, column: 12, scope: !7883)
!7887 = !DILocation(line: 2307, column: 7, scope: !7883)
!7888 = !DILocation(line: 2307, column: 34, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 2307, column: 2)
!7890 = !DILocation(line: 2307, column: 2, scope: !7883)
!7891 = !DILocation(line: 2308, column: 7, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7889, file: !3, line: 2308, column: 7)
!7893 = !DILocation(line: 2308, column: 13, scope: !7892)
!7894 = !DILocation(line: 2308, column: 18, scope: !7892)
!7895 = !DILocation(line: 2308, column: 32, scope: !7892)
!7896 = !DILocation(line: 2308, column: 35, scope: !7892)
!7897 = !DILocation(line: 2308, column: 41, scope: !7892)
!7898 = !DILocation(line: 2308, column: 7, scope: !7889)
!7899 = !DILocation(line: 2309, column: 34, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 2309, column: 8)
!7901 = !DILocation(line: 2309, column: 40, scope: !7900)
!7902 = !DILocation(line: 2309, column: 21, scope: !7900)
!7903 = !DILocation(line: 2309, column: 44, scope: !7900)
!7904 = !DILocation(line: 2309, column: 8, scope: !7900)
!7905 = !DILocation(line: 2309, column: 8, scope: !7892)
!7906 = !DILocation(line: 2310, column: 5, scope: !7900)
!7907 = !DILocation(line: 2309, column: 50, scope: !7900)
!7908 = !DILocation(line: 2307, column: 47, scope: !7889)
!7909 = !DILocation(line: 2307, column: 53, scope: !7889)
!7910 = !DILocation(line: 2307, column: 45, scope: !7889)
!7911 = !DILocation(line: 2307, column: 2, scope: !7889)
!7912 = distinct !{!7912, !7890, !7913}
!7913 = !DILocation(line: 2310, column: 12, scope: !7883)
!7914 = !DILocation(line: 2312, column: 2, scope: !7867)
!7915 = !DILocation(line: 2313, column: 1, scope: !7867)
!7916 = distinct !DISubprogram(name: "nodeFindLink", scope: !3, file: !3, line: 2315, type: !7917, scopeLine: 2316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7917 = !DISubroutineType(types: !7918)
!7918 = !{!749, !2101, !759, !759}
!7919 = !DILocalVariable(name: "ntree", arg: 1, scope: !7916, file: !3, line: 2315, type: !2101)
!7920 = !DILocation(line: 2315, column: 36, scope: !7916)
!7921 = !DILocalVariable(name: "from", arg: 2, scope: !7916, file: !3, line: 2315, type: !759)
!7922 = !DILocation(line: 2315, column: 56, scope: !7916)
!7923 = !DILocalVariable(name: "to", arg: 3, scope: !7916, file: !3, line: 2315, type: !759)
!7924 = !DILocation(line: 2315, column: 75, scope: !7916)
!7925 = !DILocalVariable(name: "link", scope: !7916, file: !3, line: 2317, type: !3293)
!7926 = !DILocation(line: 2317, column: 13, scope: !7916)
!7927 = !DILocation(line: 2319, column: 14, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 2319, column: 2)
!7929 = !DILocation(line: 2319, column: 21, scope: !7928)
!7930 = !DILocation(line: 2319, column: 27, scope: !7928)
!7931 = !DILocation(line: 2319, column: 12, scope: !7928)
!7932 = !DILocation(line: 2319, column: 7, scope: !7928)
!7933 = !DILocation(line: 2319, column: 34, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 2319, column: 2)
!7935 = !DILocation(line: 2319, column: 2, scope: !7928)
!7936 = !DILocation(line: 2320, column: 7, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 2320, column: 7)
!7938 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 2319, column: 59)
!7939 = !DILocation(line: 2320, column: 13, scope: !7937)
!7940 = !DILocation(line: 2320, column: 25, scope: !7937)
!7941 = !DILocation(line: 2320, column: 22, scope: !7937)
!7942 = !DILocation(line: 2320, column: 30, scope: !7937)
!7943 = !DILocation(line: 2320, column: 33, scope: !7937)
!7944 = !DILocation(line: 2320, column: 39, scope: !7937)
!7945 = !DILocation(line: 2320, column: 49, scope: !7937)
!7946 = !DILocation(line: 2320, column: 46, scope: !7937)
!7947 = !DILocation(line: 2320, column: 7, scope: !7938)
!7948 = !DILocation(line: 2321, column: 11, scope: !7937)
!7949 = !DILocation(line: 2321, column: 4, scope: !7937)
!7950 = !DILocation(line: 2322, column: 7, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 2322, column: 7)
!7952 = !DILocation(line: 2322, column: 13, scope: !7951)
!7953 = !DILocation(line: 2322, column: 25, scope: !7951)
!7954 = !DILocation(line: 2322, column: 22, scope: !7951)
!7955 = !DILocation(line: 2322, column: 28, scope: !7951)
!7956 = !DILocation(line: 2322, column: 31, scope: !7951)
!7957 = !DILocation(line: 2322, column: 37, scope: !7951)
!7958 = !DILocation(line: 2322, column: 47, scope: !7951)
!7959 = !DILocation(line: 2322, column: 44, scope: !7951)
!7960 = !DILocation(line: 2322, column: 7, scope: !7938)
!7961 = !DILocation(line: 2323, column: 11, scope: !7951)
!7962 = !DILocation(line: 2323, column: 4, scope: !7951)
!7963 = !DILocation(line: 2324, column: 2, scope: !7938)
!7964 = !DILocation(line: 2319, column: 47, scope: !7934)
!7965 = !DILocation(line: 2319, column: 53, scope: !7934)
!7966 = !DILocation(line: 2319, column: 45, scope: !7934)
!7967 = !DILocation(line: 2319, column: 2, scope: !7934)
!7968 = distinct !{!7968, !7935, !7969}
!7969 = !DILocation(line: 2324, column: 2, scope: !7928)
!7970 = !DILocation(line: 2325, column: 2, scope: !7916)
!7971 = !DILocation(line: 2326, column: 1, scope: !7916)
!7972 = distinct !DISubprogram(name: "nodeCountSocketLinks", scope: !3, file: !3, line: 2328, type: !7973, scopeLine: 2329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!7973 = !DISubroutineType(types: !7974)
!7974 = !{!36, !2101, !759}
!7975 = !DILocalVariable(name: "ntree", arg: 1, scope: !7972, file: !3, line: 2328, type: !2101)
!7976 = !DILocation(line: 2328, column: 37, scope: !7972)
!7977 = !DILocalVariable(name: "sock", arg: 2, scope: !7972, file: !3, line: 2328, type: !759)
!7978 = !DILocation(line: 2328, column: 57, scope: !7972)
!7979 = !DILocalVariable(name: "link", scope: !7972, file: !3, line: 2330, type: !3293)
!7980 = !DILocation(line: 2330, column: 13, scope: !7972)
!7981 = !DILocalVariable(name: "tot", scope: !7972, file: !3, line: 2331, type: !36)
!7982 = !DILocation(line: 2331, column: 6, scope: !7972)
!7983 = !DILocation(line: 2333, column: 14, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7972, file: !3, line: 2333, column: 2)
!7985 = !DILocation(line: 2333, column: 21, scope: !7984)
!7986 = !DILocation(line: 2333, column: 27, scope: !7984)
!7987 = !DILocation(line: 2333, column: 12, scope: !7984)
!7988 = !DILocation(line: 2333, column: 7, scope: !7984)
!7989 = !DILocation(line: 2333, column: 34, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 2333, column: 2)
!7991 = !DILocation(line: 2333, column: 2, scope: !7984)
!7992 = !DILocation(line: 2334, column: 7, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 2334, column: 7)
!7994 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 2333, column: 59)
!7995 = !DILocation(line: 2334, column: 13, scope: !7993)
!7996 = !DILocation(line: 2334, column: 25, scope: !7993)
!7997 = !DILocation(line: 2334, column: 22, scope: !7993)
!7998 = !DILocation(line: 2334, column: 30, scope: !7993)
!7999 = !DILocation(line: 2334, column: 33, scope: !7993)
!8000 = !DILocation(line: 2334, column: 39, scope: !7993)
!8001 = !DILocation(line: 2334, column: 49, scope: !7993)
!8002 = !DILocation(line: 2334, column: 46, scope: !7993)
!8003 = !DILocation(line: 2334, column: 7, scope: !7994)
!8004 = !DILocation(line: 2335, column: 7, scope: !7993)
!8005 = !DILocation(line: 2335, column: 4, scope: !7993)
!8006 = !DILocation(line: 2336, column: 2, scope: !7994)
!8007 = !DILocation(line: 2333, column: 47, scope: !7990)
!8008 = !DILocation(line: 2333, column: 53, scope: !7990)
!8009 = !DILocation(line: 2333, column: 45, scope: !7990)
!8010 = !DILocation(line: 2333, column: 2, scope: !7990)
!8011 = distinct !{!8011, !7991, !8012}
!8012 = !DILocation(line: 2336, column: 2, scope: !7984)
!8013 = !DILocation(line: 2337, column: 9, scope: !7972)
!8014 = !DILocation(line: 2337, column: 2, scope: !7972)
!8015 = distinct !DISubprogram(name: "nodeGetActive", scope: !3, file: !3, line: 2340, type: !8016, scopeLine: 2341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8016 = !DISubroutineType(types: !8017)
!8017 = !{!597, !2101}
!8018 = !DILocalVariable(name: "ntree", arg: 1, scope: !8015, file: !3, line: 2340, type: !2101)
!8019 = !DILocation(line: 2340, column: 33, scope: !8015)
!8020 = !DILocalVariable(name: "node", scope: !8015, file: !3, line: 2342, type: !755)
!8021 = !DILocation(line: 2342, column: 9, scope: !8015)
!8022 = !DILocation(line: 2344, column: 6, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8015, file: !3, line: 2344, column: 6)
!8024 = !DILocation(line: 2344, column: 12, scope: !8023)
!8025 = !DILocation(line: 2344, column: 6, scope: !8015)
!8026 = !DILocation(line: 2344, column: 21, scope: !8023)
!8027 = !DILocation(line: 2346, column: 14, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8015, file: !3, line: 2346, column: 2)
!8029 = !DILocation(line: 2346, column: 21, scope: !8028)
!8030 = !DILocation(line: 2346, column: 27, scope: !8028)
!8031 = !DILocation(line: 2346, column: 12, scope: !8028)
!8032 = !DILocation(line: 2346, column: 7, scope: !8028)
!8033 = !DILocation(line: 2346, column: 34, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 2346, column: 2)
!8035 = !DILocation(line: 2346, column: 2, scope: !8028)
!8036 = !DILocation(line: 2347, column: 7, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 2347, column: 7)
!8038 = !DILocation(line: 2347, column: 13, scope: !8037)
!8039 = !DILocation(line: 2347, column: 18, scope: !8037)
!8040 = !DILocation(line: 2347, column: 7, scope: !8034)
!8041 = !DILocation(line: 2348, column: 4, scope: !8037)
!8042 = !DILocation(line: 2347, column: 20, scope: !8037)
!8043 = !DILocation(line: 2346, column: 47, scope: !8034)
!8044 = !DILocation(line: 2346, column: 53, scope: !8034)
!8045 = !DILocation(line: 2346, column: 45, scope: !8034)
!8046 = !DILocation(line: 2346, column: 2, scope: !8034)
!8047 = distinct !{!8047, !8035, !8048}
!8048 = !DILocation(line: 2348, column: 4, scope: !8028)
!8049 = !DILocation(line: 2349, column: 9, scope: !8015)
!8050 = !DILocation(line: 2349, column: 2, scope: !8015)
!8051 = !DILocation(line: 2350, column: 1, scope: !8015)
!8052 = distinct !DISubprogram(name: "nodeGetActiveID", scope: !3, file: !3, line: 2381, type: !8053, scopeLine: 2382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8053 = !DISubroutineType(types: !8054)
!8054 = !{!597, !2101, !114}
!8055 = !DILocalVariable(name: "ntree", arg: 1, scope: !8052, file: !3, line: 2381, type: !2101)
!8056 = !DILocation(line: 2381, column: 35, scope: !8052)
!8057 = !DILocalVariable(name: "idtype", arg: 2, scope: !8052, file: !3, line: 2381, type: !114)
!8058 = !DILocation(line: 2381, column: 48, scope: !8052)
!8059 = !DILocation(line: 2383, column: 6, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 2383, column: 6)
!8061 = !DILocation(line: 2383, column: 6, scope: !8052)
!8062 = !DILocation(line: 2384, column: 39, scope: !8060)
!8063 = !DILocation(line: 2384, column: 46, scope: !8060)
!8064 = !DILocation(line: 2384, column: 89, scope: !8060)
!8065 = !DILocation(line: 2384, column: 96, scope: !8060)
!8066 = !DILocation(line: 2384, column: 10, scope: !8060)
!8067 = !DILocation(line: 2384, column: 3, scope: !8060)
!8068 = !DILocation(line: 2386, column: 3, scope: !8060)
!8069 = !DILocation(line: 2387, column: 1, scope: !8052)
!8070 = distinct !DISubprogram(name: "node_get_active_id_recursive", scope: !3, file: !3, line: 2352, type: !8071, scopeLine: 2353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8071 = !DISubroutineType(types: !8072)
!8072 = !{!755, !792, !792, !2101, !114}
!8073 = !DILocalVariable(name: "active_key", arg: 1, scope: !8070, file: !3, line: 2352, type: !792)
!8074 = !DILocation(line: 2352, column: 61, scope: !8070)
!8075 = !DILocalVariable(name: "parent_key", arg: 2, scope: !8070, file: !3, line: 2352, type: !792)
!8076 = !DILocation(line: 2352, column: 90, scope: !8070)
!8077 = !DILocalVariable(name: "ntree", arg: 3, scope: !8070, file: !3, line: 2352, type: !2101)
!8078 = !DILocation(line: 2352, column: 113, scope: !8070)
!8079 = !DILocalVariable(name: "idtype", arg: 4, scope: !8070, file: !3, line: 2352, type: !114)
!8080 = !DILocation(line: 2352, column: 126, scope: !8070)
!8081 = !DILocation(line: 2354, column: 17, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8070, file: !3, line: 2354, column: 6)
!8083 = !DILocation(line: 2354, column: 37, scope: !8082)
!8084 = !DILocation(line: 2354, column: 23, scope: !8082)
!8085 = !DILocation(line: 2354, column: 43, scope: !8082)
!8086 = !DILocation(line: 2354, column: 57, scope: !8082)
!8087 = !DILocation(line: 2354, column: 63, scope: !8082)
!8088 = !DILocation(line: 2354, column: 6, scope: !8070)
!8089 = !DILocalVariable(name: "node", scope: !8090, file: !3, line: 2355, type: !755)
!8090 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 2354, column: 69)
!8091 = !DILocation(line: 2355, column: 10, scope: !8090)
!8092 = !DILocation(line: 2356, column: 15, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8090, file: !3, line: 2356, column: 3)
!8094 = !DILocation(line: 2356, column: 22, scope: !8093)
!8095 = !DILocation(line: 2356, column: 28, scope: !8093)
!8096 = !DILocation(line: 2356, column: 13, scope: !8093)
!8097 = !DILocation(line: 2356, column: 8, scope: !8093)
!8098 = !DILocation(line: 2356, column: 35, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 2356, column: 3)
!8100 = !DILocation(line: 2356, column: 3, scope: !8093)
!8101 = !DILocation(line: 2357, column: 8, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 2357, column: 8)
!8103 = !DILocation(line: 2357, column: 14, scope: !8102)
!8104 = !DILocation(line: 2357, column: 17, scope: !8102)
!8105 = !DILocation(line: 2357, column: 20, scope: !8102)
!8106 = !DILocation(line: 2357, column: 42, scope: !8102)
!8107 = !DILocation(line: 2357, column: 39, scope: !8102)
!8108 = !DILocation(line: 2357, column: 8, scope: !8099)
!8109 = !DILocation(line: 2358, column: 9, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 2358, column: 9)
!8111 = !DILocation(line: 2358, column: 15, scope: !8110)
!8112 = !DILocation(line: 2358, column: 20, scope: !8110)
!8113 = !DILocation(line: 2358, column: 9, scope: !8102)
!8114 = !DILocation(line: 2359, column: 13, scope: !8110)
!8115 = !DILocation(line: 2359, column: 6, scope: !8110)
!8116 = !DILocation(line: 2358, column: 22, scope: !8110)
!8117 = !DILocation(line: 2356, column: 48, scope: !8099)
!8118 = !DILocation(line: 2356, column: 54, scope: !8099)
!8119 = !DILocation(line: 2356, column: 46, scope: !8099)
!8120 = !DILocation(line: 2356, column: 3, scope: !8099)
!8121 = distinct !{!8121, !8100, !8122}
!8122 = !DILocation(line: 2359, column: 13, scope: !8093)
!8123 = !DILocation(line: 2360, column: 2, scope: !8090)
!8124 = !DILocalVariable(name: "node", scope: !8125, file: !3, line: 2362, type: !755)
!8125 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 2361, column: 7)
!8126 = !DILocation(line: 2362, column: 10, scope: !8125)
!8127 = !DILocalVariable(name: "tnode", scope: !8125, file: !3, line: 2362, type: !755)
!8128 = !DILocation(line: 2362, column: 17, scope: !8125)
!8129 = !DILocation(line: 2364, column: 15, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 2364, column: 3)
!8131 = !DILocation(line: 2364, column: 22, scope: !8130)
!8132 = !DILocation(line: 2364, column: 28, scope: !8130)
!8133 = !DILocation(line: 2364, column: 13, scope: !8130)
!8134 = !DILocation(line: 2364, column: 8, scope: !8130)
!8135 = !DILocation(line: 2364, column: 35, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 2364, column: 3)
!8137 = !DILocation(line: 2364, column: 3, scope: !8130)
!8138 = !DILocation(line: 2365, column: 8, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 2365, column: 8)
!8140 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 2364, column: 60)
!8141 = !DILocation(line: 2365, column: 14, scope: !8139)
!8142 = !DILocation(line: 2365, column: 19, scope: !8139)
!8143 = !DILocation(line: 2365, column: 8, scope: !8140)
!8144 = !DILocalVariable(name: "group", scope: !8145, file: !3, line: 2366, type: !2101)
!8145 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 2365, column: 34)
!8146 = !DILocation(line: 2366, column: 16, scope: !8145)
!8147 = !DILocation(line: 2366, column: 37, scope: !8145)
!8148 = !DILocation(line: 2366, column: 43, scope: !8145)
!8149 = !DILocation(line: 2366, column: 24, scope: !8145)
!8150 = !DILocation(line: 2367, column: 9, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8145, file: !3, line: 2367, column: 9)
!8152 = !DILocation(line: 2367, column: 9, scope: !8145)
!8153 = !DILocalVariable(name: "group_key", scope: !8154, file: !3, line: 2368, type: !792)
!8154 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 2367, column: 16)
!8155 = !DILocation(line: 2368, column: 23, scope: !8154)
!8156 = !DILocation(line: 2368, column: 69, scope: !8154)
!8157 = !DILocation(line: 2368, column: 76, scope: !8154)
!8158 = !DILocation(line: 2368, column: 35, scope: !8154)
!8159 = !DILocation(line: 2369, column: 66, scope: !8154)
!8160 = !DILocation(line: 2369, column: 73, scope: !8154)
!8161 = !DILocation(line: 2369, column: 14, scope: !8154)
!8162 = !DILocation(line: 2369, column: 12, scope: !8154)
!8163 = !DILocation(line: 2370, column: 10, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8154, file: !3, line: 2370, column: 10)
!8165 = !DILocation(line: 2370, column: 10, scope: !8154)
!8166 = !DILocation(line: 2371, column: 14, scope: !8164)
!8167 = !DILocation(line: 2371, column: 7, scope: !8164)
!8168 = !DILocation(line: 2372, column: 5, scope: !8154)
!8169 = !DILocation(line: 2373, column: 4, scope: !8145)
!8170 = !DILocation(line: 2374, column: 3, scope: !8140)
!8171 = !DILocation(line: 2364, column: 48, scope: !8136)
!8172 = !DILocation(line: 2364, column: 54, scope: !8136)
!8173 = !DILocation(line: 2364, column: 46, scope: !8136)
!8174 = !DILocation(line: 2364, column: 3, scope: !8136)
!8175 = distinct !{!8175, !8137, !8176}
!8176 = !DILocation(line: 2374, column: 3, scope: !8130)
!8177 = !DILocation(line: 2377, column: 2, scope: !8070)
!8178 = !DILocation(line: 2378, column: 1, scope: !8070)
!8179 = distinct !DISubprogram(name: "nodeSetActiveID", scope: !3, file: !3, line: 2389, type: !8180, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8180 = !DISubroutineType(types: !8181)
!8181 = !{!1074, !2101, !114, !81}
!8182 = !DILocalVariable(name: "ntree", arg: 1, scope: !8179, file: !3, line: 2389, type: !2101)
!8183 = !DILocation(line: 2389, column: 33, scope: !8179)
!8184 = !DILocalVariable(name: "idtype", arg: 2, scope: !8179, file: !3, line: 2389, type: !114)
!8185 = !DILocation(line: 2389, column: 46, scope: !8179)
!8186 = !DILocalVariable(name: "id", arg: 3, scope: !8179, file: !3, line: 2389, type: !81)
!8187 = !DILocation(line: 2389, column: 58, scope: !8179)
!8188 = !DILocalVariable(name: "node", scope: !8179, file: !3, line: 2391, type: !755)
!8189 = !DILocation(line: 2391, column: 9, scope: !8179)
!8190 = !DILocalVariable(name: "ok", scope: !8179, file: !3, line: 2392, type: !1074)
!8191 = !DILocation(line: 2392, column: 7, scope: !8179)
!8192 = !DILocation(line: 2394, column: 6, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 2394, column: 6)
!8194 = !DILocation(line: 2394, column: 12, scope: !8193)
!8195 = !DILocation(line: 2394, column: 6, scope: !8179)
!8196 = !DILocation(line: 2394, column: 28, scope: !8193)
!8197 = !DILocation(line: 2394, column: 21, scope: !8193)
!8198 = !DILocation(line: 2396, column: 14, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 2396, column: 2)
!8200 = !DILocation(line: 2396, column: 21, scope: !8199)
!8201 = !DILocation(line: 2396, column: 27, scope: !8199)
!8202 = !DILocation(line: 2396, column: 12, scope: !8199)
!8203 = !DILocation(line: 2396, column: 7, scope: !8199)
!8204 = !DILocation(line: 2396, column: 34, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 2396, column: 2)
!8206 = !DILocation(line: 2396, column: 2, scope: !8199)
!8207 = !DILocation(line: 2397, column: 7, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 2397, column: 7)
!8209 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 2396, column: 59)
!8210 = !DILocation(line: 2397, column: 13, scope: !8208)
!8211 = !DILocation(line: 2397, column: 16, scope: !8208)
!8212 = !DILocation(line: 2397, column: 19, scope: !8208)
!8213 = !DILocation(line: 2397, column: 41, scope: !8208)
!8214 = !DILocation(line: 2397, column: 38, scope: !8208)
!8215 = !DILocation(line: 2397, column: 7, scope: !8209)
!8216 = !DILocation(line: 2398, column: 8, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8218, file: !3, line: 2398, column: 8)
!8218 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 2397, column: 49)
!8219 = !DILocation(line: 2398, column: 11, scope: !8217)
!8220 = !DILocation(line: 2398, column: 14, scope: !8217)
!8221 = !DILocation(line: 2398, column: 17, scope: !8217)
!8222 = !DILocation(line: 2398, column: 26, scope: !8217)
!8223 = !DILocation(line: 2398, column: 29, scope: !8217)
!8224 = !DILocation(line: 2398, column: 35, scope: !8217)
!8225 = !DILocation(line: 2398, column: 41, scope: !8217)
!8226 = !DILocation(line: 2398, column: 38, scope: !8217)
!8227 = !DILocation(line: 2398, column: 8, scope: !8218)
!8228 = !DILocation(line: 2399, column: 5, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 2398, column: 45)
!8230 = !DILocation(line: 2399, column: 11, scope: !8229)
!8231 = !DILocation(line: 2399, column: 16, scope: !8229)
!8232 = !DILocation(line: 2400, column: 8, scope: !8229)
!8233 = !DILocation(line: 2401, column: 4, scope: !8229)
!8234 = !DILocation(line: 2403, column: 5, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 2402, column: 9)
!8236 = !DILocation(line: 2403, column: 11, scope: !8235)
!8237 = !DILocation(line: 2403, column: 16, scope: !8235)
!8238 = !DILocation(line: 2405, column: 3, scope: !8218)
!8239 = !DILocation(line: 2406, column: 2, scope: !8209)
!8240 = !DILocation(line: 2396, column: 47, scope: !8205)
!8241 = !DILocation(line: 2396, column: 53, scope: !8205)
!8242 = !DILocation(line: 2396, column: 45, scope: !8205)
!8243 = !DILocation(line: 2396, column: 2, scope: !8205)
!8244 = distinct !{!8244, !8206, !8245}
!8245 = !DILocation(line: 2406, column: 2, scope: !8199)
!8246 = !DILocation(line: 2412, column: 14, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 2412, column: 2)
!8248 = !DILocation(line: 2412, column: 21, scope: !8247)
!8249 = !DILocation(line: 2412, column: 27, scope: !8247)
!8250 = !DILocation(line: 2412, column: 12, scope: !8247)
!8251 = !DILocation(line: 2412, column: 7, scope: !8247)
!8252 = !DILocation(line: 2412, column: 34, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 2412, column: 2)
!8254 = !DILocation(line: 2412, column: 2, scope: !8247)
!8255 = !DILocation(line: 2413, column: 7, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 2413, column: 7)
!8257 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 2412, column: 59)
!8258 = !DILocation(line: 2413, column: 13, scope: !8256)
!8259 = !DILocation(line: 2413, column: 18, scope: !8256)
!8260 = !DILocation(line: 2413, column: 7, scope: !8257)
!8261 = !DILocation(line: 2414, column: 39, scope: !8256)
!8262 = !DILocation(line: 2414, column: 45, scope: !8256)
!8263 = !DILocation(line: 2414, column: 26, scope: !8256)
!8264 = !DILocation(line: 2414, column: 49, scope: !8256)
!8265 = !DILocation(line: 2414, column: 58, scope: !8256)
!8266 = !DILocation(line: 2414, column: 61, scope: !8256)
!8267 = !DILocation(line: 2414, column: 72, scope: !8256)
!8268 = !DILocation(line: 2414, column: 10, scope: !8256)
!8269 = !DILocation(line: 2414, column: 7, scope: !8256)
!8270 = !DILocation(line: 2414, column: 4, scope: !8256)
!8271 = !DILocation(line: 2415, column: 2, scope: !8257)
!8272 = !DILocation(line: 2412, column: 47, scope: !8253)
!8273 = !DILocation(line: 2412, column: 53, scope: !8253)
!8274 = !DILocation(line: 2412, column: 45, scope: !8253)
!8275 = !DILocation(line: 2412, column: 2, scope: !8253)
!8276 = distinct !{!8276, !8254, !8277}
!8277 = !DILocation(line: 2415, column: 2, scope: !8247)
!8278 = !DILocation(line: 2417, column: 9, scope: !8179)
!8279 = !DILocation(line: 2417, column: 2, scope: !8179)
!8280 = !DILocation(line: 2418, column: 1, scope: !8179)
!8281 = distinct !DISubprogram(name: "nodeClearActiveID", scope: !3, file: !3, line: 2422, type: !8282, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8282 = !DISubroutineType(types: !8283)
!8283 = !{null, !2101, !114}
!8284 = !DILocalVariable(name: "ntree", arg: 1, scope: !8281, file: !3, line: 2422, type: !2101)
!8285 = !DILocation(line: 2422, column: 35, scope: !8281)
!8286 = !DILocalVariable(name: "idtype", arg: 2, scope: !8281, file: !3, line: 2422, type: !114)
!8287 = !DILocation(line: 2422, column: 48, scope: !8281)
!8288 = !DILocalVariable(name: "node", scope: !8281, file: !3, line: 2424, type: !755)
!8289 = !DILocation(line: 2424, column: 9, scope: !8281)
!8290 = !DILocation(line: 2426, column: 6, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 2426, column: 6)
!8292 = !DILocation(line: 2426, column: 12, scope: !8291)
!8293 = !DILocation(line: 2426, column: 6, scope: !8281)
!8294 = !DILocation(line: 2426, column: 21, scope: !8291)
!8295 = !DILocation(line: 2428, column: 14, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 2428, column: 2)
!8297 = !DILocation(line: 2428, column: 21, scope: !8296)
!8298 = !DILocation(line: 2428, column: 27, scope: !8296)
!8299 = !DILocation(line: 2428, column: 12, scope: !8296)
!8300 = !DILocation(line: 2428, column: 7, scope: !8296)
!8301 = !DILocation(line: 2428, column: 34, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 2428, column: 2)
!8303 = !DILocation(line: 2428, column: 2, scope: !8296)
!8304 = !DILocation(line: 2429, column: 7, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 2429, column: 7)
!8306 = !DILocation(line: 2429, column: 13, scope: !8305)
!8307 = !DILocation(line: 2429, column: 16, scope: !8305)
!8308 = !DILocation(line: 2429, column: 19, scope: !8305)
!8309 = !DILocation(line: 2429, column: 41, scope: !8305)
!8310 = !DILocation(line: 2429, column: 38, scope: !8305)
!8311 = !DILocation(line: 2429, column: 7, scope: !8302)
!8312 = !DILocation(line: 2430, column: 4, scope: !8305)
!8313 = !DILocation(line: 2430, column: 10, scope: !8305)
!8314 = !DILocation(line: 2430, column: 15, scope: !8305)
!8315 = !DILocation(line: 2428, column: 47, scope: !8302)
!8316 = !DILocation(line: 2428, column: 53, scope: !8302)
!8317 = !DILocation(line: 2428, column: 45, scope: !8302)
!8318 = !DILocation(line: 2428, column: 2, scope: !8302)
!8319 = distinct !{!8319, !8303, !8320}
!8320 = !DILocation(line: 2430, column: 19, scope: !8296)
!8321 = !DILocation(line: 2431, column: 1, scope: !8281)
!8322 = distinct !DISubprogram(name: "nodeSetSelected", scope: !3, file: !3, line: 2433, type: !8323, scopeLine: 2434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8323 = !DISubroutineType(types: !8324)
!8324 = !{null, !755, !1074}
!8325 = !DILocalVariable(name: "node", arg: 1, scope: !8322, file: !3, line: 2433, type: !755)
!8326 = !DILocation(line: 2433, column: 29, scope: !8322)
!8327 = !DILocalVariable(name: "select", arg: 2, scope: !8322, file: !3, line: 2433, type: !1074)
!8328 = !DILocation(line: 2433, column: 40, scope: !8322)
!8329 = !DILocation(line: 2435, column: 6, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8322, file: !3, line: 2435, column: 6)
!8331 = !DILocation(line: 2435, column: 6, scope: !8322)
!8332 = !DILocation(line: 2436, column: 3, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8330, file: !3, line: 2435, column: 14)
!8334 = !DILocation(line: 2436, column: 9, scope: !8333)
!8335 = !DILocation(line: 2436, column: 14, scope: !8333)
!8336 = !DILocation(line: 2437, column: 2, scope: !8333)
!8337 = !DILocalVariable(name: "sock", scope: !8338, file: !3, line: 2439, type: !759)
!8338 = distinct !DILexicalBlock(scope: !8330, file: !3, line: 2438, column: 7)
!8339 = !DILocation(line: 2439, column: 16, scope: !8338)
!8340 = !DILocation(line: 2441, column: 3, scope: !8338)
!8341 = !DILocation(line: 2441, column: 9, scope: !8338)
!8342 = !DILocation(line: 2441, column: 14, scope: !8338)
!8343 = !DILocation(line: 2444, column: 15, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 2444, column: 3)
!8345 = !DILocation(line: 2444, column: 21, scope: !8344)
!8346 = !DILocation(line: 2444, column: 28, scope: !8344)
!8347 = !DILocation(line: 2444, column: 13, scope: !8344)
!8348 = !DILocation(line: 2444, column: 8, scope: !8344)
!8349 = !DILocation(line: 2444, column: 35, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 2444, column: 3)
!8351 = !DILocation(line: 2444, column: 3, scope: !8344)
!8352 = !DILocation(line: 2445, column: 4, scope: !8350)
!8353 = !DILocation(line: 2445, column: 10, scope: !8350)
!8354 = !DILocation(line: 2445, column: 15, scope: !8350)
!8355 = !DILocation(line: 2444, column: 48, scope: !8350)
!8356 = !DILocation(line: 2444, column: 54, scope: !8350)
!8357 = !DILocation(line: 2444, column: 46, scope: !8350)
!8358 = !DILocation(line: 2444, column: 3, scope: !8350)
!8359 = distinct !{!8359, !8351, !8360}
!8360 = !DILocation(line: 2445, column: 19, scope: !8344)
!8361 = !DILocation(line: 2446, column: 15, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 2446, column: 3)
!8363 = !DILocation(line: 2446, column: 21, scope: !8362)
!8364 = !DILocation(line: 2446, column: 29, scope: !8362)
!8365 = !DILocation(line: 2446, column: 13, scope: !8362)
!8366 = !DILocation(line: 2446, column: 8, scope: !8362)
!8367 = !DILocation(line: 2446, column: 36, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 2446, column: 3)
!8369 = !DILocation(line: 2446, column: 3, scope: !8362)
!8370 = !DILocation(line: 2447, column: 4, scope: !8368)
!8371 = !DILocation(line: 2447, column: 10, scope: !8368)
!8372 = !DILocation(line: 2447, column: 15, scope: !8368)
!8373 = !DILocation(line: 2446, column: 49, scope: !8368)
!8374 = !DILocation(line: 2446, column: 55, scope: !8368)
!8375 = !DILocation(line: 2446, column: 47, scope: !8368)
!8376 = !DILocation(line: 2446, column: 3, scope: !8368)
!8377 = distinct !{!8377, !8369, !8378}
!8378 = !DILocation(line: 2447, column: 19, scope: !8362)
!8379 = !DILocation(line: 2449, column: 1, scope: !8322)
!8380 = distinct !DISubprogram(name: "nodeClearActive", scope: !3, file: !3, line: 2451, type: !4921, scopeLine: 2452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8381 = !DILocalVariable(name: "ntree", arg: 1, scope: !8380, file: !3, line: 2451, type: !2101)
!8382 = !DILocation(line: 2451, column: 33, scope: !8380)
!8383 = !DILocalVariable(name: "node", scope: !8380, file: !3, line: 2453, type: !755)
!8384 = !DILocation(line: 2453, column: 9, scope: !8380)
!8385 = !DILocation(line: 2455, column: 6, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 2455, column: 6)
!8387 = !DILocation(line: 2455, column: 12, scope: !8386)
!8388 = !DILocation(line: 2455, column: 6, scope: !8380)
!8389 = !DILocation(line: 2455, column: 21, scope: !8386)
!8390 = !DILocation(line: 2457, column: 14, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 2457, column: 2)
!8392 = !DILocation(line: 2457, column: 21, scope: !8391)
!8393 = !DILocation(line: 2457, column: 27, scope: !8391)
!8394 = !DILocation(line: 2457, column: 12, scope: !8391)
!8395 = !DILocation(line: 2457, column: 7, scope: !8391)
!8396 = !DILocation(line: 2457, column: 34, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 2457, column: 2)
!8398 = !DILocation(line: 2457, column: 2, scope: !8391)
!8399 = !DILocation(line: 2458, column: 3, scope: !8397)
!8400 = !DILocation(line: 2458, column: 9, scope: !8397)
!8401 = !DILocation(line: 2458, column: 14, scope: !8397)
!8402 = !DILocation(line: 2457, column: 47, scope: !8397)
!8403 = !DILocation(line: 2457, column: 53, scope: !8397)
!8404 = !DILocation(line: 2457, column: 45, scope: !8397)
!8405 = !DILocation(line: 2457, column: 2, scope: !8397)
!8406 = distinct !{!8406, !8398, !8407}
!8407 = !DILocation(line: 2458, column: 47, scope: !8391)
!8408 = !DILocation(line: 2459, column: 1, scope: !8380)
!8409 = distinct !DISubprogram(name: "nodeSetActive", scope: !3, file: !3, line: 2462, type: !3412, scopeLine: 2463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8410 = !DILocalVariable(name: "ntree", arg: 1, scope: !8409, file: !3, line: 2462, type: !2101)
!8411 = !DILocation(line: 2462, column: 31, scope: !8409)
!8412 = !DILocalVariable(name: "node", arg: 2, scope: !8409, file: !3, line: 2462, type: !755)
!8413 = !DILocation(line: 2462, column: 45, scope: !8409)
!8414 = !DILocalVariable(name: "tnode", scope: !8409, file: !3, line: 2464, type: !755)
!8415 = !DILocation(line: 2464, column: 9, scope: !8409)
!8416 = !DILocation(line: 2467, column: 15, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 2467, column: 2)
!8418 = !DILocation(line: 2467, column: 22, scope: !8417)
!8419 = !DILocation(line: 2467, column: 28, scope: !8417)
!8420 = !DILocation(line: 2467, column: 13, scope: !8417)
!8421 = !DILocation(line: 2467, column: 7, scope: !8417)
!8422 = !DILocation(line: 2467, column: 35, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 2467, column: 2)
!8424 = !DILocation(line: 2467, column: 2, scope: !8417)
!8425 = !DILocation(line: 2468, column: 3, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 2467, column: 63)
!8427 = !DILocation(line: 2468, column: 10, scope: !8426)
!8428 = !DILocation(line: 2468, column: 15, scope: !8426)
!8429 = !DILocation(line: 2470, column: 7, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2470, column: 7)
!8431 = !DILocation(line: 2470, column: 13, scope: !8430)
!8432 = !DILocation(line: 2470, column: 16, scope: !8430)
!8433 = !DILocation(line: 2470, column: 19, scope: !8430)
!8434 = !DILocation(line: 2470, column: 26, scope: !8430)
!8435 = !DILocation(line: 2470, column: 7, scope: !8426)
!8436 = !DILocation(line: 2471, column: 8, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8438, file: !3, line: 2471, column: 8)
!8438 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 2470, column: 30)
!8439 = !DILocation(line: 2471, column: 30, scope: !8437)
!8440 = !DILocation(line: 2471, column: 27, scope: !8437)
!8441 = !DILocation(line: 2471, column: 8, scope: !8438)
!8442 = !DILocation(line: 2472, column: 5, scope: !8437)
!8443 = !DILocation(line: 2472, column: 12, scope: !8437)
!8444 = !DILocation(line: 2472, column: 17, scope: !8437)
!8445 = !DILocation(line: 2473, column: 3, scope: !8438)
!8446 = !DILocation(line: 2474, column: 7, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2474, column: 7)
!8448 = !DILocation(line: 2474, column: 13, scope: !8447)
!8449 = !DILocation(line: 2474, column: 23, scope: !8447)
!8450 = !DILocation(line: 2474, column: 30, scope: !8447)
!8451 = !DILocation(line: 2474, column: 7, scope: !8426)
!8452 = !DILocation(line: 2475, column: 4, scope: !8447)
!8453 = !DILocation(line: 2475, column: 11, scope: !8447)
!8454 = !DILocation(line: 2475, column: 16, scope: !8447)
!8455 = !DILocation(line: 2476, column: 2, scope: !8426)
!8456 = !DILocation(line: 2467, column: 50, scope: !8423)
!8457 = !DILocation(line: 2467, column: 57, scope: !8423)
!8458 = !DILocation(line: 2467, column: 48, scope: !8423)
!8459 = !DILocation(line: 2467, column: 2, scope: !8423)
!8460 = distinct !{!8460, !8424, !8461}
!8461 = !DILocation(line: 2476, column: 2, scope: !8417)
!8462 = !DILocation(line: 2478, column: 2, scope: !8409)
!8463 = !DILocation(line: 2478, column: 8, scope: !8409)
!8464 = !DILocation(line: 2478, column: 13, scope: !8409)
!8465 = !DILocation(line: 2479, column: 6, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 2479, column: 6)
!8467 = !DILocation(line: 2479, column: 12, scope: !8466)
!8468 = !DILocation(line: 2479, column: 6, scope: !8409)
!8469 = !DILocation(line: 2480, column: 3, scope: !8466)
!8470 = !DILocation(line: 2480, column: 9, scope: !8466)
!8471 = !DILocation(line: 2480, column: 14, scope: !8466)
!8472 = !DILocation(line: 2481, column: 6, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 2481, column: 6)
!8474 = !DILocation(line: 2481, column: 12, scope: !8473)
!8475 = !DILocation(line: 2481, column: 22, scope: !8473)
!8476 = !DILocation(line: 2481, column: 29, scope: !8473)
!8477 = !DILocation(line: 2481, column: 6, scope: !8409)
!8478 = !DILocation(line: 2482, column: 3, scope: !8473)
!8479 = !DILocation(line: 2482, column: 9, scope: !8473)
!8480 = !DILocation(line: 2482, column: 14, scope: !8473)
!8481 = !DILocation(line: 2483, column: 1, scope: !8409)
!8482 = distinct !DISubprogram(name: "BKE_node_clipboard_init", scope: !3, file: !3, line: 2524, type: !591, scopeLine: 2525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8483 = !DILocalVariable(name: "ntree", arg: 1, scope: !8482, file: !3, line: 2524, type: !572)
!8484 = !DILocation(line: 2524, column: 48, scope: !8482)
!8485 = !DILocation(line: 2526, column: 24, scope: !8482)
!8486 = !DILocation(line: 2526, column: 31, scope: !8482)
!8487 = !DILocation(line: 2526, column: 22, scope: !8482)
!8488 = !DILocation(line: 2527, column: 1, scope: !8482)
!8489 = distinct !DISubprogram(name: "BKE_node_clipboard_clear", scope: !3, file: !3, line: 2529, type: !8490, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8490 = !DISubroutineType(types: !8491)
!8491 = !{null}
!8492 = !DILocalVariable(name: "node", scope: !8489, file: !3, line: 2531, type: !755)
!8493 = !DILocation(line: 2531, column: 9, scope: !8489)
!8494 = !DILocalVariable(name: "node_next", scope: !8489, file: !3, line: 2531, type: !755)
!8495 = !DILocation(line: 2531, column: 16, scope: !8489)
!8496 = !DILocalVariable(name: "link", scope: !8489, file: !3, line: 2532, type: !3293)
!8497 = !DILocation(line: 2532, column: 13, scope: !8489)
!8498 = !DILocalVariable(name: "link_next", scope: !8489, file: !3, line: 2532, type: !3293)
!8499 = !DILocation(line: 2532, column: 20, scope: !8489)
!8500 = !DILocation(line: 2534, column: 35, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 2534, column: 2)
!8502 = !DILocation(line: 2534, column: 14, scope: !8501)
!8503 = !DILocation(line: 2534, column: 12, scope: !8501)
!8504 = !DILocation(line: 2534, column: 7, scope: !8501)
!8505 = !DILocation(line: 2534, column: 42, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2534, column: 2)
!8507 = !DILocation(line: 2534, column: 2, scope: !8501)
!8508 = !DILocation(line: 2535, column: 15, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 2534, column: 66)
!8510 = !DILocation(line: 2535, column: 21, scope: !8509)
!8511 = !DILocation(line: 2535, column: 13, scope: !8509)
!8512 = !DILocation(line: 2536, column: 21, scope: !8509)
!8513 = !DILocation(line: 2536, column: 3, scope: !8509)
!8514 = !DILocation(line: 2537, column: 2, scope: !8509)
!8515 = !DILocation(line: 2534, column: 55, scope: !8506)
!8516 = !DILocation(line: 2534, column: 53, scope: !8506)
!8517 = !DILocation(line: 2534, column: 2, scope: !8506)
!8518 = distinct !{!8518, !8507, !8519}
!8519 = !DILocation(line: 2537, column: 2, scope: !8501)
!8520 = !DILocation(line: 2538, column: 2, scope: !8489)
!8521 = !DILocation(line: 2540, column: 35, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 2540, column: 2)
!8523 = !DILocation(line: 2540, column: 14, scope: !8522)
!8524 = !DILocation(line: 2540, column: 12, scope: !8522)
!8525 = !DILocation(line: 2540, column: 7, scope: !8522)
!8526 = !DILocation(line: 2540, column: 42, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 2540, column: 2)
!8528 = !DILocation(line: 2540, column: 2, scope: !8522)
!8529 = !DILocation(line: 2541, column: 15, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 2540, column: 66)
!8531 = !DILocation(line: 2541, column: 21, scope: !8530)
!8532 = !DILocation(line: 2541, column: 13, scope: !8530)
!8533 = !DILocation(line: 2542, column: 27, scope: !8530)
!8534 = !DILocation(line: 2542, column: 3, scope: !8530)
!8535 = !DILocation(line: 2543, column: 2, scope: !8530)
!8536 = !DILocation(line: 2540, column: 55, scope: !8527)
!8537 = !DILocation(line: 2540, column: 53, scope: !8527)
!8538 = !DILocation(line: 2540, column: 2, scope: !8527)
!8539 = distinct !{!8539, !8528, !8540}
!8540 = !DILocation(line: 2543, column: 2, scope: !8522)
!8541 = !DILocation(line: 2544, column: 2, scope: !8489)
!8542 = !DILocation(line: 2547, column: 2, scope: !8489)
!8543 = !DILocation(line: 2549, column: 1, scope: !8489)
!8544 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !8545, file: !8545, line: 89, type: !8546, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8545 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8546 = !DISubroutineType(types: !8547)
!8547 = !{null, !8548}
!8548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64)
!8549 = !DILocalVariable(name: "lb", arg: 1, scope: !8544, file: !8545, line: 89, type: !8548)
!8550 = !DILocation(line: 89, column: 53, scope: !8544)
!8551 = !DILocation(line: 89, column: 71, scope: !8544)
!8552 = !DILocation(line: 89, column: 75, scope: !8544)
!8553 = !DILocation(line: 89, column: 80, scope: !8544)
!8554 = !DILocation(line: 89, column: 59, scope: !8544)
!8555 = !DILocation(line: 89, column: 63, scope: !8544)
!8556 = !DILocation(line: 89, column: 69, scope: !8544)
!8557 = !DILocation(line: 89, column: 93, scope: !8544)
!8558 = distinct !DISubprogram(name: "BKE_node_clipboard_validate", scope: !3, file: !3, line: 2552, type: !8559, scopeLine: 2553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8559 = !DISubroutineType(types: !8560)
!8560 = !{!1074}
!8561 = !DILocalVariable(name: "ok", scope: !8558, file: !3, line: 2554, type: !1074)
!8562 = !DILocation(line: 2554, column: 7, scope: !8558)
!8563 = !DILocalVariable(name: "node_info", scope: !8558, file: !3, line: 2557, type: !8564)
!8564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8565, size: 64)
!8565 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClipboardExtraInfo", file: !3, line: 2507, baseType: !8566)
!8566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeClipboardExtraInfo", file: !3, line: 2502, size: 8960, elements: !8567)
!8567 = !{!8568, !8570, !8571, !8572, !8573}
!8568 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8566, file: !3, line: 2503, baseType: !8569, size: 64)
!8569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8566, size: 64)
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8566, file: !3, line: 2503, baseType: !8569, size: 64, offset: 64)
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8566, file: !3, line: 2504, baseType: !81, size: 64, offset: 128)
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "id_name", scope: !8566, file: !3, line: 2505, baseType: !110, size: 528, offset: 192)
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "library_name", scope: !8566, file: !3, line: 2506, baseType: !100, size: 8192, offset: 720)
!8574 = !DILocation(line: 2557, column: 27, scope: !8558)
!8575 = !DILocalVariable(name: "node", scope: !8558, file: !3, line: 2558, type: !755)
!8576 = !DILocation(line: 2558, column: 9, scope: !8558)
!8577 = !DILocation(line: 2565, column: 35, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 2565, column: 2)
!8579 = !DILocation(line: 2565, column: 14, scope: !8578)
!8580 = !DILocation(line: 2565, column: 12, scope: !8578)
!8581 = !DILocation(line: 2565, column: 86, scope: !8578)
!8582 = !DILocation(line: 2565, column: 54, scope: !8578)
!8583 = !DILocation(line: 2565, column: 52, scope: !8578)
!8584 = !DILocation(line: 2565, column: 7, scope: !8578)
!8585 = !DILocation(line: 2566, column: 7, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 2565, column: 2)
!8587 = !DILocation(line: 2565, column: 2, scope: !8578)
!8588 = !DILocation(line: 2573, column: 14, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 2568, column: 2)
!8590 = !DILocation(line: 2573, column: 25, scope: !8589)
!8591 = !DILocation(line: 2573, column: 3, scope: !8589)
!8592 = !DILocation(line: 2573, column: 9, scope: !8589)
!8593 = !DILocation(line: 2573, column: 12, scope: !8589)
!8594 = !DILocation(line: 2576, column: 7, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8589, file: !3, line: 2576, column: 7)
!8596 = !DILocation(line: 2576, column: 13, scope: !8595)
!8597 = !DILocation(line: 2576, column: 7, scope: !8589)
!8598 = !DILocalVariable(name: "lb", scope: !8599, file: !3, line: 2577, type: !2951)
!8599 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 2576, column: 17)
!8600 = !DILocation(line: 2577, column: 14, scope: !8599)
!8601 = !DILocation(line: 2577, column: 35, scope: !8599)
!8602 = !DILocation(line: 2577, column: 41, scope: !8599)
!8603 = !DILocation(line: 2577, column: 19, scope: !8599)
!8604 = !DILocation(line: 2580, column: 22, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8599, file: !3, line: 2580, column: 8)
!8606 = !DILocation(line: 2580, column: 26, scope: !8605)
!8607 = !DILocation(line: 2580, column: 37, scope: !8605)
!8608 = !DILocation(line: 2580, column: 8, scope: !8605)
!8609 = !DILocation(line: 2580, column: 41, scope: !8605)
!8610 = !DILocation(line: 2580, column: 8, scope: !8599)
!8611 = !DILocation(line: 2582, column: 31, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 2580, column: 48)
!8613 = !DILocation(line: 2582, column: 35, scope: !8612)
!8614 = !DILocation(line: 2582, column: 46, scope: !8612)
!8615 = !DILocation(line: 2582, column: 54, scope: !8612)
!8616 = !DILocation(line: 2582, column: 16, scope: !8612)
!8617 = !DILocation(line: 2582, column: 5, scope: !8612)
!8618 = !DILocation(line: 2582, column: 11, scope: !8612)
!8619 = !DILocation(line: 2582, column: 14, scope: !8612)
!8620 = !DILocation(line: 2584, column: 9, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8612, file: !3, line: 2584, column: 9)
!8622 = !DILocation(line: 2584, column: 15, scope: !8621)
!8623 = !DILocation(line: 2584, column: 18, scope: !8621)
!8624 = !DILocation(line: 2584, column: 9, scope: !8612)
!8625 = !DILocation(line: 2585, column: 9, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 2584, column: 27)
!8627 = !DILocation(line: 2586, column: 5, scope: !8626)
!8628 = !DILocation(line: 2587, column: 4, scope: !8612)
!8629 = !DILocation(line: 2588, column: 3, scope: !8599)
!8630 = !DILocation(line: 2589, column: 2, scope: !8589)
!8631 = !DILocation(line: 2567, column: 14, scope: !8586)
!8632 = !DILocation(line: 2567, column: 20, scope: !8586)
!8633 = !DILocation(line: 2567, column: 12, scope: !8586)
!8634 = !DILocation(line: 2567, column: 38, scope: !8586)
!8635 = !DILocation(line: 2567, column: 49, scope: !8586)
!8636 = !DILocation(line: 2567, column: 36, scope: !8586)
!8637 = !DILocation(line: 2565, column: 2, scope: !8586)
!8638 = distinct !{!8638, !8587, !8639}
!8639 = !DILocation(line: 2589, column: 2, scope: !8578)
!8640 = !DILocation(line: 2592, column: 9, scope: !8558)
!8641 = !DILocation(line: 2592, column: 2, scope: !8558)
!8642 = distinct !DISubprogram(name: "BKE_node_clipboard_add_node", scope: !3, file: !3, line: 2595, type: !8643, scopeLine: 2596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8643 = !DISubroutineType(types: !8644)
!8644 = !{null, !755}
!8645 = !DILocalVariable(name: "node", arg: 1, scope: !8642, file: !3, line: 2595, type: !755)
!8646 = !DILocation(line: 2595, column: 41, scope: !8642)
!8647 = !DILocalVariable(name: "node_info", scope: !8642, file: !3, line: 2599, type: !8564)
!8648 = !DILocation(line: 2599, column: 27, scope: !8642)
!8649 = !DILocation(line: 2599, column: 39, scope: !8642)
!8650 = !DILocation(line: 2601, column: 18, scope: !8642)
!8651 = !DILocation(line: 2601, column: 24, scope: !8642)
!8652 = !DILocation(line: 2601, column: 2, scope: !8642)
!8653 = !DILocation(line: 2601, column: 13, scope: !8642)
!8654 = !DILocation(line: 2601, column: 16, scope: !8642)
!8655 = !DILocation(line: 2602, column: 6, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 2602, column: 6)
!8657 = !DILocation(line: 2602, column: 12, scope: !8656)
!8658 = !DILocation(line: 2602, column: 6, scope: !8642)
!8659 = !DILocation(line: 2603, column: 15, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 2602, column: 16)
!8661 = !DILocation(line: 2603, column: 26, scope: !8660)
!8662 = !DILocation(line: 2603, column: 35, scope: !8660)
!8663 = !DILocation(line: 2603, column: 41, scope: !8660)
!8664 = !DILocation(line: 2603, column: 45, scope: !8660)
!8665 = !DILocation(line: 2603, column: 3, scope: !8660)
!8666 = !DILocation(line: 2604, column: 7, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 2604, column: 7)
!8668 = !DILocation(line: 2604, column: 13, scope: !8667)
!8669 = !DILocation(line: 2604, column: 17, scope: !8667)
!8670 = !DILocation(line: 2604, column: 7, scope: !8660)
!8671 = !DILocation(line: 2605, column: 16, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 2604, column: 22)
!8673 = !DILocation(line: 2605, column: 27, scope: !8672)
!8674 = !DILocation(line: 2605, column: 41, scope: !8672)
!8675 = !DILocation(line: 2605, column: 47, scope: !8672)
!8676 = !DILocation(line: 2605, column: 51, scope: !8672)
!8677 = !DILocation(line: 2605, column: 56, scope: !8672)
!8678 = !DILocation(line: 2605, column: 4, scope: !8672)
!8679 = !DILocation(line: 2606, column: 3, scope: !8672)
!8680 = !DILocation(line: 2608, column: 4, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8667, file: !3, line: 2607, column: 8)
!8682 = !DILocation(line: 2608, column: 15, scope: !8681)
!8683 = !DILocation(line: 2608, column: 31, scope: !8681)
!8684 = !DILocation(line: 2610, column: 2, scope: !8660)
!8685 = !DILocation(line: 2612, column: 3, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 2611, column: 7)
!8687 = !DILocation(line: 2612, column: 14, scope: !8686)
!8688 = !DILocation(line: 2612, column: 25, scope: !8686)
!8689 = !DILocation(line: 2613, column: 3, scope: !8686)
!8690 = !DILocation(line: 2613, column: 14, scope: !8686)
!8691 = !DILocation(line: 2613, column: 30, scope: !8686)
!8692 = !DILocation(line: 2615, column: 48, scope: !8642)
!8693 = !DILocation(line: 2615, column: 2, scope: !8642)
!8694 = !DILocation(line: 2620, column: 37, scope: !8642)
!8695 = !DILocation(line: 2620, column: 2, scope: !8642)
!8696 = !DILocation(line: 2622, column: 1, scope: !8642)
!8697 = distinct !DISubprogram(name: "BKE_node_clipboard_add_link", scope: !3, file: !3, line: 2624, type: !8698, scopeLine: 2625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{null, !3293}
!8700 = !DILocalVariable(name: "link", arg: 1, scope: !8697, file: !3, line: 2624, type: !3293)
!8701 = !DILocation(line: 2624, column: 45, scope: !8697)
!8702 = !DILocation(line: 2626, column: 37, scope: !8697)
!8703 = !DILocation(line: 2626, column: 2, scope: !8697)
!8704 = !DILocation(line: 2627, column: 1, scope: !8697)
!8705 = distinct !DISubprogram(name: "BKE_node_clipboard_get_nodes", scope: !3, file: !3, line: 2629, type: !8706, scopeLine: 2630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8706 = !DISubroutineType(types: !8707)
!8707 = !{!8708}
!8708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8709, size: 64)
!8709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!8710 = !DILocation(line: 2631, column: 2, scope: !8705)
!8711 = distinct !DISubprogram(name: "BKE_node_clipboard_get_links", scope: !3, file: !3, line: 2634, type: !8706, scopeLine: 2635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8712 = !DILocation(line: 2636, column: 2, scope: !8711)
!8713 = distinct !DISubprogram(name: "BKE_node_clipboard_get_type", scope: !3, file: !3, line: 2639, type: !8714, scopeLine: 2640, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8714 = !DISubroutineType(types: !8715)
!8715 = !{!36}
!8716 = !DILocation(line: 2641, column: 24, scope: !8713)
!8717 = !DILocation(line: 2641, column: 2, scope: !8713)
!8718 = distinct !DISubprogram(name: "BKE_node_instance_key", scope: !3, file: !3, line: 2668, type: !8719, scopeLine: 2669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8719 = !DISubroutineType(types: !8720)
!8720 = !{!792, !792, !2101, !755}
!8721 = !DILocalVariable(name: "parent_key", arg: 1, scope: !8718, file: !3, line: 2668, type: !792)
!8722 = !DILocation(line: 2668, column: 57, scope: !8718)
!8723 = !DILocalVariable(name: "ntree", arg: 2, scope: !8718, file: !3, line: 2668, type: !2101)
!8724 = !DILocation(line: 2668, column: 80, scope: !8718)
!8725 = !DILocalVariable(name: "node", arg: 3, scope: !8718, file: !3, line: 2668, type: !755)
!8726 = !DILocation(line: 2668, column: 94, scope: !8718)
!8727 = !DILocalVariable(name: "key", scope: !8718, file: !3, line: 2670, type: !792)
!8728 = !DILocation(line: 2670, column: 19, scope: !8718)
!8729 = !DILocation(line: 2672, column: 38, scope: !8718)
!8730 = !DILocation(line: 2672, column: 45, scope: !8718)
!8731 = !DILocation(line: 2672, column: 48, scope: !8718)
!8732 = !DILocation(line: 2672, column: 53, scope: !8718)
!8733 = !DILocation(line: 2672, column: 8, scope: !8718)
!8734 = !DILocation(line: 2674, column: 6, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 2674, column: 6)
!8736 = !DILocation(line: 2674, column: 6, scope: !8718)
!8737 = !DILocation(line: 2675, column: 32, scope: !8735)
!8738 = !DILocation(line: 2675, column: 38, scope: !8735)
!8739 = !DILocation(line: 2675, column: 9, scope: !8735)
!8740 = !DILocation(line: 2675, column: 3, scope: !8735)
!8741 = !DILocation(line: 2677, column: 2, scope: !8718)
!8742 = distinct !DISubprogram(name: "node_hash_int_str", scope: !3, file: !3, line: 2655, type: !8743, scopeLine: 2656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8743 = !DISubroutineType(types: !8744)
!8744 = !{!792, !792, !681}
!8745 = !DILocalVariable(name: "hash", arg: 1, scope: !8742, file: !3, line: 2655, type: !792)
!8746 = !DILocation(line: 2655, column: 60, scope: !8742)
!8747 = !DILocalVariable(name: "str", arg: 2, scope: !8742, file: !3, line: 2655, type: !681)
!8748 = !DILocation(line: 2655, column: 78, scope: !8742)
!8749 = !DILocalVariable(name: "c", scope: !8742, file: !3, line: 2657, type: !101)
!8750 = !DILocation(line: 2657, column: 7, scope: !8742)
!8751 = !DILocation(line: 2659, column: 2, scope: !8742)
!8752 = !DILocation(line: 2659, column: 18, scope: !8742)
!8753 = !DILocation(line: 2659, column: 14, scope: !8742)
!8754 = !DILocation(line: 2659, column: 12, scope: !8742)
!8755 = !DILocation(line: 2660, column: 23, scope: !8742)
!8756 = !DILocation(line: 2660, column: 29, scope: !8742)
!8757 = !DILocation(line: 2660, column: 42, scope: !8742)
!8758 = !DILocation(line: 2660, column: 35, scope: !8742)
!8759 = !DILocation(line: 2660, column: 51, scope: !8742)
!8760 = !DILocation(line: 2660, column: 49, scope: !8742)
!8761 = !DILocation(line: 2660, column: 8, scope: !8742)
!8762 = !DILocation(line: 2660, column: 14, scope: !8742)
!8763 = distinct !{!8763, !8751, !8759}
!8764 = !DILocation(line: 2663, column: 21, scope: !8742)
!8765 = !DILocation(line: 2663, column: 27, scope: !8742)
!8766 = !DILocation(line: 2663, column: 40, scope: !8742)
!8767 = !DILocation(line: 2663, column: 33, scope: !8742)
!8768 = !DILocation(line: 2663, column: 7, scope: !8742)
!8769 = !DILocation(line: 2663, column: 13, scope: !8742)
!8770 = !DILocation(line: 2665, column: 9, scope: !8742)
!8771 = !DILocation(line: 2665, column: 2, scope: !8742)
!8772 = distinct !DISubprogram(name: "node_instance_hash_key", scope: !3, file: !3, line: 2680, type: !8773, scopeLine: 2681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8773 = !DISubroutineType(types: !8774)
!8774 = !{!7, !8775}
!8775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8776, size: 64)
!8776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!8777 = !DILocalVariable(name: "key", arg: 1, scope: !8772, file: !3, line: 2680, type: !8775)
!8778 = !DILocation(line: 2680, column: 56, scope: !8772)
!8779 = !DILocation(line: 2682, column: 36, scope: !8772)
!8780 = !DILocation(line: 2682, column: 10, scope: !8772)
!8781 = !DILocation(line: 2682, column: 42, scope: !8772)
!8782 = !DILocation(line: 2682, column: 2, scope: !8772)
!8783 = distinct !DISubprogram(name: "node_instance_hash_key_cmp", scope: !3, file: !3, line: 2685, type: !8784, scopeLine: 2686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8784 = !DISubroutineType(types: !8785)
!8785 = !{!1074, !8775, !8775}
!8786 = !DILocalVariable(name: "a", arg: 1, scope: !8783, file: !3, line: 2685, type: !8775)
!8787 = !DILocation(line: 2685, column: 52, scope: !8783)
!8788 = !DILocalVariable(name: "b", arg: 2, scope: !8783, file: !3, line: 2685, type: !8775)
!8789 = !DILocation(line: 2685, column: 67, scope: !8783)
!8790 = !DILocalVariable(name: "value_a", scope: !8783, file: !3, line: 2687, type: !7)
!8791 = !DILocation(line: 2687, column: 15, scope: !8783)
!8792 = !DILocation(line: 2687, column: 52, scope: !8783)
!8793 = !DILocation(line: 2687, column: 26, scope: !8783)
!8794 = !DILocation(line: 2687, column: 56, scope: !8783)
!8795 = !DILocalVariable(name: "value_b", scope: !8783, file: !3, line: 2688, type: !7)
!8796 = !DILocation(line: 2688, column: 15, scope: !8783)
!8797 = !DILocation(line: 2688, column: 52, scope: !8783)
!8798 = !DILocation(line: 2688, column: 26, scope: !8783)
!8799 = !DILocation(line: 2688, column: 56, scope: !8783)
!8800 = !DILocation(line: 2690, column: 10, scope: !8783)
!8801 = !DILocation(line: 2690, column: 21, scope: !8783)
!8802 = !DILocation(line: 2690, column: 18, scope: !8783)
!8803 = !DILocation(line: 2690, column: 9, scope: !8783)
!8804 = !DILocation(line: 2690, column: 2, scope: !8783)
!8805 = distinct !DISubprogram(name: "BKE_node_instance_hash_clear", scope: !3, file: !3, line: 2724, type: !5379, scopeLine: 2725, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8806 = !DILocalVariable(name: "hash", arg: 1, scope: !8805, file: !3, line: 2724, type: !4988)
!8807 = !DILocation(line: 2724, column: 54, scope: !8805)
!8808 = !DILocalVariable(name: "valfreefp", arg: 2, scope: !8805, file: !3, line: 2724, type: !151)
!8809 = !DILocation(line: 2724, column: 81, scope: !8805)
!8810 = !DILocation(line: 2726, column: 18, scope: !8805)
!8811 = !DILocation(line: 2726, column: 24, scope: !8805)
!8812 = !DILocation(line: 2726, column: 53, scope: !8805)
!8813 = !DILocation(line: 2726, column: 2, scope: !8805)
!8814 = !DILocation(line: 2727, column: 1, scope: !8805)
!8815 = distinct !DISubprogram(name: "BKE_node_instance_hash_pop", scope: !3, file: !3, line: 2729, type: !5087, scopeLine: 2730, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8816 = !DILocalVariable(name: "hash", arg: 1, scope: !8815, file: !3, line: 2729, type: !4988)
!8817 = !DILocation(line: 2729, column: 53, scope: !8815)
!8818 = !DILocalVariable(name: "key", arg: 2, scope: !8815, file: !3, line: 2729, type: !792)
!8819 = !DILocation(line: 2729, column: 76, scope: !8815)
!8820 = !DILocation(line: 2731, column: 26, scope: !8815)
!8821 = !DILocation(line: 2731, column: 32, scope: !8815)
!8822 = !DILocation(line: 2731, column: 39, scope: !8815)
!8823 = !DILocation(line: 2731, column: 9, scope: !8815)
!8824 = !DILocation(line: 2731, column: 2, scope: !8815)
!8825 = distinct !DISubprogram(name: "BKE_node_instance_hash_haskey", scope: !3, file: !3, line: 2734, type: !8826, scopeLine: 2735, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8826 = !DISubroutineType(types: !8827)
!8827 = !{!36, !4988, !792}
!8828 = !DILocalVariable(name: "hash", arg: 1, scope: !8825, file: !3, line: 2734, type: !4988)
!8829 = !DILocation(line: 2734, column: 54, scope: !8825)
!8830 = !DILocalVariable(name: "key", arg: 2, scope: !8825, file: !3, line: 2734, type: !792)
!8831 = !DILocation(line: 2734, column: 77, scope: !8825)
!8832 = !DILocation(line: 2736, column: 26, scope: !8825)
!8833 = !DILocation(line: 2736, column: 32, scope: !8825)
!8834 = !DILocation(line: 2736, column: 39, scope: !8825)
!8835 = !DILocation(line: 2736, column: 9, scope: !8825)
!8836 = !DILocation(line: 2736, column: 2, scope: !8825)
!8837 = distinct !DISubprogram(name: "BKE_node_instance_hash_size", scope: !3, file: !3, line: 2739, type: !8838, scopeLine: 2740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8838 = !DISubroutineType(types: !8839)
!8839 = !{!36, !4988}
!8840 = !DILocalVariable(name: "hash", arg: 1, scope: !8837, file: !3, line: 2739, type: !4988)
!8841 = !DILocation(line: 2739, column: 52, scope: !8837)
!8842 = !DILocation(line: 2741, column: 24, scope: !8837)
!8843 = !DILocation(line: 2741, column: 30, scope: !8837)
!8844 = !DILocation(line: 2741, column: 9, scope: !8837)
!8845 = !DILocation(line: 2741, column: 2, scope: !8837)
!8846 = distinct !DISubprogram(name: "BKE_node_instance_hash_tag", scope: !3, file: !3, line: 2755, type: !8847, scopeLine: 2756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8847 = !DISubroutineType(types: !8848)
!8848 = !{null, !4988, !80}
!8849 = !DILocalVariable(name: "UNUSED_hash", arg: 1, scope: !8846, file: !3, line: 2755, type: !4988)
!8850 = !DILocation(line: 2755, column: 52, scope: !8846)
!8851 = !DILocalVariable(name: "value", arg: 2, scope: !8846, file: !3, line: 2755, type: !80)
!8852 = !DILocation(line: 2755, column: 72, scope: !8846)
!8853 = !DILocalVariable(name: "entry", scope: !8846, file: !3, line: 2757, type: !5108)
!8854 = !DILocation(line: 2757, column: 26, scope: !8846)
!8855 = !DILocation(line: 2757, column: 34, scope: !8846)
!8856 = !DILocation(line: 2758, column: 2, scope: !8846)
!8857 = !DILocation(line: 2758, column: 9, scope: !8846)
!8858 = !DILocation(line: 2758, column: 13, scope: !8846)
!8859 = !DILocation(line: 2759, column: 1, scope: !8846)
!8860 = distinct !DISubprogram(name: "BKE_node_instance_hash_tag_key", scope: !3, file: !3, line: 2761, type: !8861, scopeLine: 2762, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8861 = !DISubroutineType(types: !8862)
!8862 = !{!1074, !4988, !792}
!8863 = !DILocalVariable(name: "hash", arg: 1, scope: !8860, file: !3, line: 2761, type: !4988)
!8864 = !DILocation(line: 2761, column: 56, scope: !8860)
!8865 = !DILocalVariable(name: "key", arg: 2, scope: !8860, file: !3, line: 2761, type: !792)
!8866 = !DILocation(line: 2761, column: 79, scope: !8860)
!8867 = !DILocalVariable(name: "entry", scope: !8860, file: !3, line: 2763, type: !5108)
!8868 = !DILocation(line: 2763, column: 26, scope: !8860)
!8869 = !DILocation(line: 2763, column: 64, scope: !8860)
!8870 = !DILocation(line: 2763, column: 34, scope: !8860)
!8871 = !DILocation(line: 2765, column: 6, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8860, file: !3, line: 2765, column: 6)
!8873 = !DILocation(line: 2765, column: 6, scope: !8860)
!8874 = !DILocation(line: 2766, column: 3, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 2765, column: 13)
!8876 = !DILocation(line: 2766, column: 10, scope: !8875)
!8877 = !DILocation(line: 2766, column: 14, scope: !8875)
!8878 = !DILocation(line: 2767, column: 3, scope: !8875)
!8879 = !DILocation(line: 2770, column: 3, scope: !8872)
!8880 = !DILocation(line: 2771, column: 1, scope: !8860)
!8881 = distinct !DISubprogram(name: "ntreeGetDependencyList", scope: !3, file: !3, line: 2836, type: !8882, scopeLine: 2837, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8882 = !DISubroutineType(types: !8883)
!8883 = !{null, !572, !8884, !3531}
!8884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8885, size: 64)
!8885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!8886 = !DILocalVariable(name: "ntree", arg: 1, scope: !8881, file: !3, line: 2836, type: !572)
!8887 = !DILocation(line: 2836, column: 47, scope: !8881)
!8888 = !DILocalVariable(name: "deplist", arg: 2, scope: !8881, file: !3, line: 2836, type: !8884)
!8889 = !DILocation(line: 2836, column: 70, scope: !8881)
!8890 = !DILocalVariable(name: "totnodes", arg: 3, scope: !8881, file: !3, line: 2836, type: !3531)
!8891 = !DILocation(line: 2836, column: 84, scope: !8881)
!8892 = !DILocalVariable(name: "node", scope: !8881, file: !3, line: 2838, type: !755)
!8893 = !DILocation(line: 2838, column: 9, scope: !8881)
!8894 = !DILocalVariable(name: "nsort", scope: !8881, file: !3, line: 2838, type: !3530)
!8895 = !DILocation(line: 2838, column: 17, scope: !8881)
!8896 = !DILocation(line: 2840, column: 3, scope: !8881)
!8897 = !DILocation(line: 2840, column: 12, scope: !8881)
!8898 = !DILocation(line: 2843, column: 14, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 2843, column: 2)
!8900 = !DILocation(line: 2843, column: 21, scope: !8899)
!8901 = !DILocation(line: 2843, column: 27, scope: !8899)
!8902 = !DILocation(line: 2843, column: 12, scope: !8899)
!8903 = !DILocation(line: 2843, column: 7, scope: !8899)
!8904 = !DILocation(line: 2843, column: 34, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 2843, column: 2)
!8906 = !DILocation(line: 2843, column: 2, scope: !8899)
!8907 = !DILocation(line: 2844, column: 3, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8905, file: !3, line: 2843, column: 59)
!8909 = !DILocation(line: 2844, column: 9, scope: !8908)
!8910 = !DILocation(line: 2844, column: 14, scope: !8908)
!8911 = !DILocation(line: 2845, column: 5, scope: !8908)
!8912 = !DILocation(line: 2845, column: 14, scope: !8908)
!8913 = !DILocation(line: 2846, column: 2, scope: !8908)
!8914 = !DILocation(line: 2843, column: 47, scope: !8905)
!8915 = !DILocation(line: 2843, column: 53, scope: !8905)
!8916 = !DILocation(line: 2843, column: 45, scope: !8905)
!8917 = !DILocation(line: 2843, column: 2, scope: !8905)
!8918 = distinct !{!8918, !8906, !8919}
!8919 = !DILocation(line: 2846, column: 2, scope: !8899)
!8920 = !DILocation(line: 2847, column: 7, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 2847, column: 6)
!8922 = !DILocation(line: 2847, column: 6, scope: !8921)
!8923 = !DILocation(line: 2847, column: 16, scope: !8921)
!8924 = !DILocation(line: 2847, column: 6, scope: !8881)
!8925 = !DILocation(line: 2848, column: 4, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 2847, column: 22)
!8927 = !DILocation(line: 2848, column: 12, scope: !8926)
!8928 = !DILocation(line: 2849, column: 3, scope: !8926)
!8929 = !DILocation(line: 2852, column: 21, scope: !8881)
!8930 = !DILocation(line: 2852, column: 35, scope: !8881)
!8931 = !DILocation(line: 2852, column: 34, scope: !8881)
!8932 = !DILocation(line: 2852, column: 33, scope: !8881)
!8933 = !DILocation(line: 2852, column: 45, scope: !8881)
!8934 = !DILocation(line: 2852, column: 11, scope: !8881)
!8935 = !DILocation(line: 2852, column: 19, scope: !8881)
!8936 = !DILocation(line: 2852, column: 8, scope: !8881)
!8937 = !DILocation(line: 2855, column: 14, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 2855, column: 2)
!8939 = !DILocation(line: 2855, column: 21, scope: !8938)
!8940 = !DILocation(line: 2855, column: 27, scope: !8938)
!8941 = !DILocation(line: 2855, column: 12, scope: !8938)
!8942 = !DILocation(line: 2855, column: 7, scope: !8938)
!8943 = !DILocation(line: 2855, column: 34, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 2855, column: 2)
!8945 = !DILocation(line: 2855, column: 2, scope: !8938)
!8946 = !DILocation(line: 2856, column: 7, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 2856, column: 7)
!8948 = distinct !DILexicalBlock(scope: !8944, file: !3, line: 2855, column: 59)
!8949 = !DILocation(line: 2856, column: 13, scope: !8947)
!8950 = !DILocation(line: 2856, column: 18, scope: !8947)
!8951 = !DILocation(line: 2856, column: 7, scope: !8948)
!8952 = !DILocation(line: 2857, column: 42, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8947, file: !3, line: 2856, column: 24)
!8954 = !DILocation(line: 2857, column: 49, scope: !8953)
!8955 = !DILocation(line: 2857, column: 18, scope: !8953)
!8956 = !DILocation(line: 2857, column: 4, scope: !8953)
!8957 = !DILocation(line: 2857, column: 10, scope: !8953)
!8958 = !DILocation(line: 2857, column: 16, scope: !8953)
!8959 = !DILocation(line: 2858, column: 3, scope: !8953)
!8960 = !DILocation(line: 2859, column: 2, scope: !8948)
!8961 = !DILocation(line: 2855, column: 47, scope: !8944)
!8962 = !DILocation(line: 2855, column: 53, scope: !8944)
!8963 = !DILocation(line: 2855, column: 45, scope: !8944)
!8964 = !DILocation(line: 2855, column: 2, scope: !8944)
!8965 = distinct !{!8965, !8945, !8966}
!8966 = !DILocation(line: 2859, column: 2, scope: !8938)
!8967 = !DILocation(line: 2860, column: 1, scope: !8881)
!8968 = distinct !DISubprogram(name: "node_get_deplist_recurs", scope: !3, file: !3, line: 2801, type: !8969, scopeLine: 2802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!8969 = !DISubroutineType(types: !8970)
!8970 = !{!36, !2101, !755, !8971}
!8971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 64)
!8972 = !DILocalVariable(name: "ntree", arg: 1, scope: !8968, file: !3, line: 2801, type: !2101)
!8973 = !DILocation(line: 2801, column: 47, scope: !8968)
!8974 = !DILocalVariable(name: "node", arg: 2, scope: !8968, file: !3, line: 2801, type: !755)
!8975 = !DILocation(line: 2801, column: 61, scope: !8968)
!8976 = !DILocalVariable(name: "nsort", arg: 3, scope: !8968, file: !3, line: 2801, type: !8971)
!8977 = !DILocation(line: 2801, column: 76, scope: !8968)
!8978 = !DILocalVariable(name: "fromnode", scope: !8968, file: !3, line: 2803, type: !755)
!8979 = !DILocation(line: 2803, column: 9, scope: !8968)
!8980 = !DILocalVariable(name: "link", scope: !8968, file: !3, line: 2804, type: !3293)
!8981 = !DILocation(line: 2804, column: 13, scope: !8968)
!8982 = !DILocalVariable(name: "level", scope: !8968, file: !3, line: 2805, type: !36)
!8983 = !DILocation(line: 2805, column: 6, scope: !8968)
!8984 = !DILocation(line: 2807, column: 2, scope: !8968)
!8985 = !DILocation(line: 2807, column: 8, scope: !8968)
!8986 = !DILocation(line: 2807, column: 13, scope: !8968)
!8987 = !DILocation(line: 2810, column: 14, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 2810, column: 2)
!8989 = !DILocation(line: 2810, column: 21, scope: !8988)
!8990 = !DILocation(line: 2810, column: 27, scope: !8988)
!8991 = !DILocation(line: 2810, column: 12, scope: !8988)
!8992 = !DILocation(line: 2810, column: 7, scope: !8988)
!8993 = !DILocation(line: 2810, column: 34, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 2810, column: 2)
!8995 = !DILocation(line: 2810, column: 2, scope: !8988)
!8996 = !DILocation(line: 2811, column: 7, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !3, line: 2811, column: 7)
!8998 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 2810, column: 59)
!8999 = !DILocation(line: 2811, column: 13, scope: !8997)
!9000 = !DILocation(line: 2811, column: 23, scope: !8997)
!9001 = !DILocation(line: 2811, column: 20, scope: !8997)
!9002 = !DILocation(line: 2811, column: 7, scope: !8998)
!9003 = !DILocation(line: 2812, column: 15, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 2811, column: 29)
!9005 = !DILocation(line: 2812, column: 21, scope: !9004)
!9006 = !DILocation(line: 2812, column: 13, scope: !9004)
!9007 = !DILocation(line: 2813, column: 8, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 2813, column: 8)
!9009 = !DILocation(line: 2813, column: 18, scope: !9008)
!9010 = !DILocation(line: 2813, column: 23, scope: !9008)
!9011 = !DILocation(line: 2813, column: 8, scope: !9004)
!9012 = !DILocation(line: 2814, column: 47, scope: !9008)
!9013 = !DILocation(line: 2814, column: 54, scope: !9008)
!9014 = !DILocation(line: 2814, column: 64, scope: !9008)
!9015 = !DILocation(line: 2814, column: 23, scope: !9008)
!9016 = !DILocation(line: 2814, column: 5, scope: !9008)
!9017 = !DILocation(line: 2814, column: 15, scope: !9008)
!9018 = !DILocation(line: 2814, column: 21, scope: !9008)
!9019 = !DILocation(line: 2815, column: 8, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 2815, column: 8)
!9021 = !DILocation(line: 2815, column: 18, scope: !9020)
!9022 = !DILocation(line: 2815, column: 27, scope: !9020)
!9023 = !DILocation(line: 2815, column: 24, scope: !9020)
!9024 = !DILocation(line: 2815, column: 8, scope: !9004)
!9025 = !DILocation(line: 2816, column: 13, scope: !9020)
!9026 = !DILocation(line: 2816, column: 23, scope: !9020)
!9027 = !DILocation(line: 2816, column: 29, scope: !9020)
!9028 = !DILocation(line: 2816, column: 11, scope: !9020)
!9029 = !DILocation(line: 2816, column: 5, scope: !9020)
!9030 = !DILocation(line: 2817, column: 3, scope: !9004)
!9031 = !DILocation(line: 2818, column: 2, scope: !8998)
!9032 = !DILocation(line: 2810, column: 47, scope: !8994)
!9033 = !DILocation(line: 2810, column: 53, scope: !8994)
!9034 = !DILocation(line: 2810, column: 45, scope: !8994)
!9035 = !DILocation(line: 2810, column: 2, scope: !8994)
!9036 = distinct !{!9036, !8995, !9037}
!9037 = !DILocation(line: 2818, column: 2, scope: !8988)
!9038 = !DILocation(line: 2821, column: 6, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 2821, column: 6)
!9040 = !DILocation(line: 2821, column: 12, scope: !9039)
!9041 = !DILocation(line: 2821, column: 6, scope: !8968)
!9042 = !DILocation(line: 2822, column: 7, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 2822, column: 7)
!9044 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 2821, column: 20)
!9045 = !DILocation(line: 2822, column: 13, scope: !9043)
!9046 = !DILocation(line: 2822, column: 21, scope: !9043)
!9047 = !DILocation(line: 2822, column: 26, scope: !9043)
!9048 = !DILocation(line: 2822, column: 7, scope: !9044)
!9049 = !DILocation(line: 2823, column: 50, scope: !9043)
!9050 = !DILocation(line: 2823, column: 57, scope: !9043)
!9051 = !DILocation(line: 2823, column: 63, scope: !9043)
!9052 = !DILocation(line: 2823, column: 71, scope: !9043)
!9053 = !DILocation(line: 2823, column: 26, scope: !9043)
!9054 = !DILocation(line: 2823, column: 4, scope: !9043)
!9055 = !DILocation(line: 2823, column: 10, scope: !9043)
!9056 = !DILocation(line: 2823, column: 18, scope: !9043)
!9057 = !DILocation(line: 2823, column: 24, scope: !9043)
!9058 = !DILocation(line: 2824, column: 7, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 2824, column: 7)
!9060 = !DILocation(line: 2824, column: 13, scope: !9059)
!9061 = !DILocation(line: 2824, column: 21, scope: !9059)
!9062 = !DILocation(line: 2824, column: 30, scope: !9059)
!9063 = !DILocation(line: 2824, column: 27, scope: !9059)
!9064 = !DILocation(line: 2824, column: 7, scope: !9044)
!9065 = !DILocation(line: 2825, column: 12, scope: !9059)
!9066 = !DILocation(line: 2825, column: 18, scope: !9059)
!9067 = !DILocation(line: 2825, column: 26, scope: !9059)
!9068 = !DILocation(line: 2825, column: 32, scope: !9059)
!9069 = !DILocation(line: 2825, column: 10, scope: !9059)
!9070 = !DILocation(line: 2825, column: 4, scope: !9059)
!9071 = !DILocation(line: 2826, column: 2, scope: !9044)
!9072 = !DILocation(line: 2828, column: 6, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 2828, column: 6)
!9074 = !DILocation(line: 2828, column: 6, scope: !8968)
!9075 = !DILocation(line: 2829, column: 13, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 2828, column: 13)
!9077 = !DILocation(line: 2829, column: 5, scope: !9076)
!9078 = !DILocation(line: 2829, column: 4, scope: !9076)
!9079 = !DILocation(line: 2829, column: 11, scope: !9076)
!9080 = !DILocation(line: 2830, column: 5, scope: !9076)
!9081 = !DILocation(line: 2830, column: 11, scope: !9076)
!9082 = !DILocation(line: 2831, column: 2, scope: !9076)
!9083 = !DILocation(line: 2833, column: 9, scope: !8968)
!9084 = !DILocation(line: 2833, column: 2, scope: !8968)
!9085 = distinct !DISubprogram(name: "ntreeVerifyNodes", scope: !3, file: !3, line: 2920, type: !9086, scopeLine: 2921, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!9086 = !DISubroutineType(types: !9087)
!9087 = !{null, !2505, !89}
!9088 = !DILocalVariable(name: "main", arg: 1, scope: !9085, file: !3, line: 2920, type: !2505)
!9089 = !DILocation(line: 2920, column: 36, scope: !9085)
!9090 = !DILocalVariable(name: "id", arg: 2, scope: !9085, file: !3, line: 2920, type: !89)
!9091 = !DILocation(line: 2920, column: 53, scope: !9085)
!9092 = !DILocalVariable(name: "_nstore", scope: !9093, file: !3, line: 2922, type: !2578)
!9093 = distinct !DILexicalBlock(scope: !9085, file: !3, line: 2922, column: 2)
!9094 = !DILocation(line: 2922, column: 2, scope: !9093)
!9095 = !DILocalVariable(name: "ntree", scope: !9093, file: !3, line: 2922, type: !2101)
!9096 = !DILocalVariable(name: "owner_id", scope: !9093, file: !3, line: 2922, type: !81)
!9097 = !DILocation(line: 2922, column: 2, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 2922, column: 2)
!9099 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 2922, column: 2)
!9100 = !DILocation(line: 2922, column: 2, scope: !9099)
!9101 = !DILocalVariable(name: "node", scope: !9102, file: !3, line: 2923, type: !755)
!9102 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 2922, column: 42)
!9103 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 2922, column: 2)
!9104 = !DILocation(line: 2923, column: 10, scope: !9102)
!9105 = !DILocation(line: 2925, column: 15, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9102, file: !3, line: 2925, column: 3)
!9107 = !DILocation(line: 2925, column: 22, scope: !9106)
!9108 = !DILocation(line: 2925, column: 28, scope: !9106)
!9109 = !DILocation(line: 2925, column: 13, scope: !9106)
!9110 = !DILocation(line: 2925, column: 8, scope: !9106)
!9111 = !DILocation(line: 2925, column: 35, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9106, file: !3, line: 2925, column: 3)
!9113 = !DILocation(line: 2925, column: 3, scope: !9106)
!9114 = !DILocation(line: 2926, column: 8, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9112, file: !3, line: 2926, column: 8)
!9116 = !DILocation(line: 2926, column: 14, scope: !9115)
!9117 = !DILocation(line: 2926, column: 24, scope: !9115)
!9118 = !DILocation(line: 2926, column: 8, scope: !9112)
!9119 = !DILocation(line: 2927, column: 5, scope: !9115)
!9120 = !DILocation(line: 2927, column: 11, scope: !9115)
!9121 = !DILocation(line: 2927, column: 21, scope: !9115)
!9122 = !DILocation(line: 2927, column: 32, scope: !9115)
!9123 = !DILocation(line: 2927, column: 39, scope: !9115)
!9124 = !DILocation(line: 2927, column: 45, scope: !9115)
!9125 = !DILocation(line: 2925, column: 48, scope: !9112)
!9126 = !DILocation(line: 2925, column: 54, scope: !9112)
!9127 = !DILocation(line: 2925, column: 46, scope: !9112)
!9128 = !DILocation(line: 2925, column: 3, scope: !9112)
!9129 = distinct !{!9129, !9113, !9130}
!9130 = !DILocation(line: 2927, column: 47, scope: !9106)
!9131 = !DILocation(line: 2928, column: 4, scope: !9103)
!9132 = distinct !{!9132, !9094, !9133}
!9133 = !DILocation(line: 2928, column: 4, scope: !9093)
!9134 = !DILocation(line: 2929, column: 1, scope: !9085)
!9135 = distinct !DISubprogram(name: "ntreeUpdateTree", scope: !3, file: !3, line: 2931, type: !9136, scopeLine: 2932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!9136 = !DISubroutineType(types: !9137)
!9137 = !{null, !2499, !2101}
!9138 = !DILocalVariable(name: "bmain", arg: 1, scope: !9135, file: !3, line: 2931, type: !2499)
!9139 = !DILocation(line: 2931, column: 28, scope: !9135)
!9140 = !DILocalVariable(name: "ntree", arg: 2, scope: !9135, file: !3, line: 2931, type: !2101)
!9141 = !DILocation(line: 2931, column: 46, scope: !9135)
!9142 = !DILocalVariable(name: "node", scope: !9135, file: !3, line: 2933, type: !755)
!9143 = !DILocation(line: 2933, column: 9, scope: !9135)
!9144 = !DILocation(line: 2935, column: 7, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 2935, column: 6)
!9146 = !DILocation(line: 2935, column: 6, scope: !9135)
!9147 = !DILocation(line: 2936, column: 3, scope: !9145)
!9148 = !DILocation(line: 2939, column: 6, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 2939, column: 6)
!9150 = !DILocation(line: 2939, column: 13, scope: !9149)
!9151 = !DILocation(line: 2939, column: 6, scope: !9135)
!9152 = !DILocation(line: 2940, column: 3, scope: !9149)
!9153 = !DILocation(line: 2941, column: 2, scope: !9135)
!9154 = !DILocation(line: 2941, column: 9, scope: !9135)
!9155 = !DILocation(line: 2941, column: 21, scope: !9135)
!9156 = !DILocation(line: 2943, column: 6, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 2943, column: 6)
!9158 = !DILocation(line: 2943, column: 13, scope: !9157)
!9159 = !DILocation(line: 2943, column: 20, scope: !9157)
!9160 = !DILocation(line: 2943, column: 6, scope: !9135)
!9161 = !DILocation(line: 2945, column: 30, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 2943, column: 65)
!9163 = !DILocation(line: 2945, column: 3, scope: !9162)
!9164 = !DILocation(line: 2946, column: 2, scope: !9162)
!9165 = !DILocation(line: 2949, column: 14, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 2949, column: 2)
!9167 = !DILocation(line: 2949, column: 21, scope: !9166)
!9168 = !DILocation(line: 2949, column: 27, scope: !9166)
!9169 = !DILocation(line: 2949, column: 12, scope: !9166)
!9170 = !DILocation(line: 2949, column: 7, scope: !9166)
!9171 = !DILocation(line: 2949, column: 34, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 2949, column: 2)
!9173 = !DILocation(line: 2949, column: 2, scope: !9166)
!9174 = !DILocation(line: 2951, column: 8, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 2951, column: 7)
!9176 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 2949, column: 59)
!9177 = !DILocation(line: 2951, column: 14, scope: !9175)
!9178 = !DILocation(line: 2951, column: 21, scope: !9175)
!9179 = !DILocation(line: 2951, column: 36, scope: !9175)
!9180 = !DILocation(line: 2951, column: 40, scope: !9175)
!9181 = !DILocation(line: 2951, column: 47, scope: !9175)
!9182 = !DILocation(line: 2951, column: 54, scope: !9175)
!9183 = !DILocation(line: 2951, column: 7, scope: !9176)
!9184 = !DILocation(line: 2952, column: 8, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9186, file: !3, line: 2952, column: 8)
!9186 = distinct !DILexicalBlock(scope: !9175, file: !3, line: 2951, column: 71)
!9187 = !DILocation(line: 2952, column: 14, scope: !9185)
!9188 = !DILocation(line: 2952, column: 24, scope: !9185)
!9189 = !DILocation(line: 2952, column: 8, scope: !9186)
!9190 = !DILocation(line: 2953, column: 5, scope: !9185)
!9191 = !DILocation(line: 2953, column: 11, scope: !9185)
!9192 = !DILocation(line: 2953, column: 21, scope: !9185)
!9193 = !DILocation(line: 2953, column: 32, scope: !9185)
!9194 = !DILocation(line: 2953, column: 39, scope: !9185)
!9195 = !DILocation(line: 2955, column: 28, scope: !9186)
!9196 = !DILocation(line: 2955, column: 35, scope: !9186)
!9197 = !DILocation(line: 2955, column: 4, scope: !9186)
!9198 = !DILocation(line: 2956, column: 3, scope: !9186)
!9199 = !DILocation(line: 2957, column: 2, scope: !9176)
!9200 = !DILocation(line: 2949, column: 47, scope: !9172)
!9201 = !DILocation(line: 2949, column: 53, scope: !9172)
!9202 = !DILocation(line: 2949, column: 45, scope: !9172)
!9203 = !DILocation(line: 2949, column: 2, scope: !9172)
!9204 = distinct !{!9204, !9173, !9205}
!9205 = !DILocation(line: 2957, column: 2, scope: !9166)
!9206 = !DILocation(line: 2960, column: 6, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 2960, column: 6)
!9208 = !DILocation(line: 2960, column: 13, scope: !9207)
!9209 = !DILocation(line: 2960, column: 23, scope: !9207)
!9210 = !DILocation(line: 2960, column: 6, scope: !9135)
!9211 = !DILocation(line: 2961, column: 3, scope: !9207)
!9212 = !DILocation(line: 2961, column: 10, scope: !9207)
!9213 = !DILocation(line: 2961, column: 20, scope: !9207)
!9214 = !DILocation(line: 2961, column: 27, scope: !9207)
!9215 = !DILocation(line: 2965, column: 6, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 2965, column: 6)
!9217 = !DILocation(line: 2965, column: 13, scope: !9216)
!9218 = !DILocation(line: 2965, column: 20, scope: !9216)
!9219 = !DILocation(line: 2965, column: 6, scope: !9135)
!9220 = !DILocation(line: 2966, column: 28, scope: !9216)
!9221 = !DILocation(line: 2966, column: 3, scope: !9216)
!9222 = !DILocation(line: 2969, column: 6, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 2969, column: 6)
!9224 = !DILocation(line: 2969, column: 6, scope: !9135)
!9225 = !DILocation(line: 2970, column: 20, scope: !9223)
!9226 = !DILocation(line: 2970, column: 28, scope: !9223)
!9227 = !DILocation(line: 2970, column: 35, scope: !9223)
!9228 = !DILocation(line: 2970, column: 3, scope: !9223)
!9229 = !DILocation(line: 2972, column: 6, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 2972, column: 6)
!9231 = !DILocation(line: 2972, column: 13, scope: !9230)
!9232 = !DILocation(line: 2972, column: 20, scope: !9230)
!9233 = !DILocation(line: 2972, column: 6, scope: !9135)
!9234 = !DILocation(line: 2974, column: 30, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 2972, column: 65)
!9236 = !DILocation(line: 2974, column: 3, scope: !9235)
!9237 = !DILocation(line: 2977, column: 27, scope: !9235)
!9238 = !DILocation(line: 2977, column: 3, scope: !9235)
!9239 = !DILocation(line: 2980, column: 24, scope: !9235)
!9240 = !DILocation(line: 2980, column: 3, scope: !9235)
!9241 = !DILocation(line: 2981, column: 2, scope: !9235)
!9242 = !DILocation(line: 2984, column: 14, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 2984, column: 2)
!9244 = !DILocation(line: 2984, column: 21, scope: !9243)
!9245 = !DILocation(line: 2984, column: 27, scope: !9243)
!9246 = !DILocation(line: 2984, column: 12, scope: !9243)
!9247 = !DILocation(line: 2984, column: 7, scope: !9243)
!9248 = !DILocation(line: 2984, column: 34, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 2984, column: 2)
!9250 = !DILocation(line: 2984, column: 2, scope: !9243)
!9251 = !DILocation(line: 2985, column: 3, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 2984, column: 59)
!9253 = !DILocation(line: 2985, column: 9, scope: !9252)
!9254 = !DILocation(line: 2985, column: 16, scope: !9252)
!9255 = !DILocation(line: 2986, column: 2, scope: !9252)
!9256 = !DILocation(line: 2984, column: 47, scope: !9249)
!9257 = !DILocation(line: 2984, column: 53, scope: !9249)
!9258 = !DILocation(line: 2984, column: 45, scope: !9249)
!9259 = !DILocation(line: 2984, column: 2, scope: !9249)
!9260 = distinct !{!9260, !9250, !9261}
!9261 = !DILocation(line: 2986, column: 2, scope: !9243)
!9262 = !DILocation(line: 2987, column: 2, scope: !9135)
!9263 = !DILocation(line: 2987, column: 9, scope: !9135)
!9264 = !DILocation(line: 2987, column: 16, scope: !9135)
!9265 = !DILocation(line: 2989, column: 2, scope: !9135)
!9266 = !DILocation(line: 2989, column: 9, scope: !9135)
!9267 = !DILocation(line: 2989, column: 21, scope: !9135)
!9268 = !DILocation(line: 2990, column: 1, scope: !9135)
!9269 = distinct !DISubprogram(name: "ntree_update_link_pointers", scope: !3, file: !3, line: 2880, type: !4921, scopeLine: 2881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!9270 = !DILocalVariable(name: "ntree", arg: 1, scope: !9269, file: !3, line: 2880, type: !2101)
!9271 = !DILocation(line: 2880, column: 51, scope: !9269)
!9272 = !DILocalVariable(name: "node", scope: !9269, file: !3, line: 2882, type: !755)
!9273 = !DILocation(line: 2882, column: 9, scope: !9269)
!9274 = !DILocalVariable(name: "sock", scope: !9269, file: !3, line: 2883, type: !759)
!9275 = !DILocation(line: 2883, column: 15, scope: !9269)
!9276 = !DILocalVariable(name: "link", scope: !9269, file: !3, line: 2884, type: !3293)
!9277 = !DILocation(line: 2884, column: 13, scope: !9269)
!9278 = !DILocation(line: 2887, column: 14, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 2887, column: 2)
!9280 = !DILocation(line: 2887, column: 21, scope: !9279)
!9281 = !DILocation(line: 2887, column: 27, scope: !9279)
!9282 = !DILocation(line: 2887, column: 12, scope: !9279)
!9283 = !DILocation(line: 2887, column: 7, scope: !9279)
!9284 = !DILocation(line: 2887, column: 34, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 2887, column: 2)
!9286 = !DILocation(line: 2887, column: 2, scope: !9279)
!9287 = !DILocation(line: 2888, column: 15, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 2888, column: 3)
!9289 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 2887, column: 59)
!9290 = !DILocation(line: 2888, column: 21, scope: !9288)
!9291 = !DILocation(line: 2888, column: 28, scope: !9288)
!9292 = !DILocation(line: 2888, column: 13, scope: !9288)
!9293 = !DILocation(line: 2888, column: 8, scope: !9288)
!9294 = !DILocation(line: 2888, column: 35, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9288, file: !3, line: 2888, column: 3)
!9296 = !DILocation(line: 2888, column: 3, scope: !9288)
!9297 = !DILocation(line: 2889, column: 4, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 2888, column: 60)
!9299 = !DILocation(line: 2889, column: 10, scope: !9298)
!9300 = !DILocation(line: 2889, column: 15, scope: !9298)
!9301 = !DILocation(line: 2890, column: 4, scope: !9298)
!9302 = !DILocation(line: 2890, column: 10, scope: !9298)
!9303 = !DILocation(line: 2890, column: 15, scope: !9298)
!9304 = !DILocation(line: 2891, column: 3, scope: !9298)
!9305 = !DILocation(line: 2888, column: 48, scope: !9295)
!9306 = !DILocation(line: 2888, column: 54, scope: !9295)
!9307 = !DILocation(line: 2888, column: 46, scope: !9295)
!9308 = !DILocation(line: 2888, column: 3, scope: !9295)
!9309 = distinct !{!9309, !9296, !9310}
!9310 = !DILocation(line: 2891, column: 3, scope: !9288)
!9311 = !DILocation(line: 2892, column: 15, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 2892, column: 3)
!9313 = !DILocation(line: 2892, column: 21, scope: !9312)
!9314 = !DILocation(line: 2892, column: 29, scope: !9312)
!9315 = !DILocation(line: 2892, column: 13, scope: !9312)
!9316 = !DILocation(line: 2892, column: 8, scope: !9312)
!9317 = !DILocation(line: 2892, column: 36, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9312, file: !3, line: 2892, column: 3)
!9319 = !DILocation(line: 2892, column: 3, scope: !9312)
!9320 = !DILocation(line: 2893, column: 4, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 2892, column: 61)
!9322 = !DILocation(line: 2893, column: 10, scope: !9321)
!9323 = !DILocation(line: 2893, column: 15, scope: !9321)
!9324 = !DILocation(line: 2894, column: 3, scope: !9321)
!9325 = !DILocation(line: 2892, column: 49, scope: !9318)
!9326 = !DILocation(line: 2892, column: 55, scope: !9318)
!9327 = !DILocation(line: 2892, column: 47, scope: !9318)
!9328 = !DILocation(line: 2892, column: 3, scope: !9318)
!9329 = distinct !{!9329, !9319, !9330}
!9330 = !DILocation(line: 2894, column: 3, scope: !9312)
!9331 = !DILocation(line: 2895, column: 2, scope: !9289)
!9332 = !DILocation(line: 2887, column: 47, scope: !9285)
!9333 = !DILocation(line: 2887, column: 53, scope: !9285)
!9334 = !DILocation(line: 2887, column: 45, scope: !9285)
!9335 = !DILocation(line: 2887, column: 2, scope: !9285)
!9336 = distinct !{!9336, !9286, !9337}
!9337 = !DILocation(line: 2895, column: 2, scope: !9279)
!9338 = !DILocation(line: 2897, column: 14, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 2897, column: 2)
!9340 = !DILocation(line: 2897, column: 21, scope: !9339)
!9341 = !DILocation(line: 2897, column: 27, scope: !9339)
!9342 = !DILocation(line: 2897, column: 12, scope: !9339)
!9343 = !DILocation(line: 2897, column: 7, scope: !9339)
!9344 = !DILocation(line: 2897, column: 34, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9339, file: !3, line: 2897, column: 2)
!9346 = !DILocation(line: 2897, column: 2, scope: !9339)
!9347 = !DILocation(line: 2898, column: 24, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9345, file: !3, line: 2897, column: 59)
!9349 = !DILocation(line: 2898, column: 3, scope: !9348)
!9350 = !DILocation(line: 2898, column: 9, scope: !9348)
!9351 = !DILocation(line: 2898, column: 17, scope: !9348)
!9352 = !DILocation(line: 2898, column: 22, scope: !9348)
!9353 = !DILocation(line: 2900, column: 3, scope: !9348)
!9354 = !DILocation(line: 2900, column: 9, scope: !9348)
!9355 = !DILocation(line: 2900, column: 19, scope: !9348)
!9356 = !DILocation(line: 2900, column: 24, scope: !9348)
!9357 = !DILocation(line: 2901, column: 3, scope: !9348)
!9358 = !DILocation(line: 2901, column: 9, scope: !9348)
!9359 = !DILocation(line: 2901, column: 17, scope: !9348)
!9360 = !DILocation(line: 2901, column: 22, scope: !9348)
!9361 = !DILocation(line: 2902, column: 2, scope: !9348)
!9362 = !DILocation(line: 2897, column: 47, scope: !9345)
!9363 = !DILocation(line: 2897, column: 53, scope: !9345)
!9364 = !DILocation(line: 2897, column: 45, scope: !9345)
!9365 = !DILocation(line: 2897, column: 2, scope: !9345)
!9366 = distinct !{!9366, !9346, !9367}
!9367 = !DILocation(line: 2902, column: 2, scope: !9339)
!9368 = !DILocation(line: 2903, column: 1, scope: !9269)
!9369 = distinct !DISubprogram(name: "nodeUpdateInternalLinks", scope: !3, file: !3, line: 3042, type: !3412, scopeLine: 3043, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!9370 = !DILocalVariable(name: "ntree", arg: 1, scope: !9369, file: !3, line: 3042, type: !2101)
!9371 = !DILocation(line: 3042, column: 41, scope: !9369)
!9372 = !DILocalVariable(name: "node", arg: 2, scope: !9369, file: !3, line: 3042, type: !755)
!9373 = !DILocation(line: 3042, column: 55, scope: !9369)
!9374 = !DILocation(line: 3044, column: 17, scope: !9369)
!9375 = !DILocation(line: 3044, column: 23, scope: !9369)
!9376 = !DILocation(line: 3044, column: 2, scope: !9369)
!9377 = !DILocation(line: 3046, column: 6, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 3046, column: 6)
!9379 = !DILocation(line: 3046, column: 12, scope: !9378)
!9380 = !DILocation(line: 3046, column: 21, scope: !9378)
!9381 = !DILocation(line: 3046, column: 24, scope: !9378)
!9382 = !DILocation(line: 3046, column: 30, scope: !9378)
!9383 = !DILocation(line: 3046, column: 40, scope: !9378)
!9384 = !DILocation(line: 3046, column: 6, scope: !9369)
!9385 = !DILocation(line: 3047, column: 3, scope: !9378)
!9386 = !DILocation(line: 3047, column: 9, scope: !9378)
!9387 = !DILocation(line: 3047, column: 19, scope: !9378)
!9388 = !DILocation(line: 3047, column: 41, scope: !9378)
!9389 = !DILocation(line: 3047, column: 48, scope: !9378)
!9390 = !DILocation(line: 3048, column: 1, scope: !9369)
!9391 = distinct !DISubprogram(name: "ntree_update_node_level", scope: !3, file: !3, line: 2863, type: !4921, scopeLine: 2864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!9392 = !DILocalVariable(name: "ntree", arg: 1, scope: !9391, file: !3, line: 2863, type: !2101)
!9393 = !DILocation(line: 2863, column: 48, scope: !9391)
!9394 = !DILocalVariable(name: "node", scope: !9391, file: !3, line: 2865, type: !755)
!9395 = !DILocation(line: 2865, column: 9, scope: !9391)
!9396 = !DILocation(line: 2868, column: 14, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 2868, column: 2)
!9398 = !DILocation(line: 2868, column: 21, scope: !9397)
!9399 = !DILocation(line: 2868, column: 27, scope: !9397)
!9400 = !DILocation(line: 2868, column: 12, scope: !9397)
!9401 = !DILocation(line: 2868, column: 7, scope: !9397)
!9402 = !DILocation(line: 2868, column: 34, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9397, file: !3, line: 2868, column: 2)
!9404 = !DILocation(line: 2868, column: 2, scope: !9397)
!9405 = !DILocation(line: 2869, column: 3, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 2868, column: 59)
!9407 = !DILocation(line: 2869, column: 9, scope: !9406)
!9408 = !DILocation(line: 2869, column: 14, scope: !9406)
!9409 = !DILocation(line: 2870, column: 2, scope: !9406)
!9410 = !DILocation(line: 2868, column: 47, scope: !9403)
!9411 = !DILocation(line: 2868, column: 53, scope: !9403)
!9412 = !DILocation(line: 2868, column: 45, scope: !9403)
!9413 = !DILocation(line: 2868, column: 2, scope: !9403)
!9414 = distinct !{!9414, !9404, !9415}
!9415 = !DILocation(line: 2870, column: 2, scope: !9397)
!9416 = !DILocation(line: 2873, column: 14, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 2873, column: 2)
!9418 = !DILocation(line: 2873, column: 21, scope: !9417)
!9419 = !DILocation(line: 2873, column: 27, scope: !9417)
!9420 = !DILocation(line: 2873, column: 12, scope: !9417)
!9421 = !DILocation(line: 2873, column: 7, scope: !9417)
!9422 = !DILocation(line: 2873, column: 34, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9417, file: !3, line: 2873, column: 2)
!9424 = !DILocation(line: 2873, column: 2, scope: !9417)
!9425 = !DILocation(line: 2874, column: 7, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9427, file: !3, line: 2874, column: 7)
!9427 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 2873, column: 59)
!9428 = !DILocation(line: 2874, column: 13, scope: !9426)
!9429 = !DILocation(line: 2874, column: 18, scope: !9426)
!9430 = !DILocation(line: 2874, column: 7, scope: !9427)
!9431 = !DILocation(line: 2875, column: 42, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9426, file: !3, line: 2874, column: 24)
!9433 = !DILocation(line: 2875, column: 49, scope: !9432)
!9434 = !DILocation(line: 2875, column: 18, scope: !9432)
!9435 = !DILocation(line: 2875, column: 4, scope: !9432)
!9436 = !DILocation(line: 2875, column: 10, scope: !9432)
!9437 = !DILocation(line: 2875, column: 16, scope: !9432)
!9438 = !DILocation(line: 2876, column: 3, scope: !9432)
!9439 = !DILocation(line: 2877, column: 2, scope: !9427)
!9440 = !DILocation(line: 2873, column: 47, scope: !9423)
!9441 = !DILocation(line: 2873, column: 53, scope: !9423)
!9442 = !DILocation(line: 2873, column: 45, scope: !9423)
!9443 = !DILocation(line: 2873, column: 2, scope: !9423)
!9444 = distinct !{!9444, !9424, !9445}
!9445 = !DILocation(line: 2877, column: 2, scope: !9417)
!9446 = !DILocation(line: 2878, column: 1, scope: !9391)
!9447 = distinct !DISubprogram(name: "ntree_validate_links", scope: !3, file: !3, line: 2905, type: !4921, scopeLine: 2906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!9448 = !DILocalVariable(name: "ntree", arg: 1, scope: !9447, file: !3, line: 2905, type: !2101)
!9449 = !DILocation(line: 2905, column: 45, scope: !9447)
!9450 = !DILocalVariable(name: "link", scope: !9447, file: !3, line: 2907, type: !3293)
!9451 = !DILocation(line: 2907, column: 13, scope: !9447)
!9452 = !DILocation(line: 2909, column: 14, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 2909, column: 2)
!9454 = !DILocation(line: 2909, column: 21, scope: !9453)
!9455 = !DILocation(line: 2909, column: 27, scope: !9453)
!9456 = !DILocation(line: 2909, column: 12, scope: !9453)
!9457 = !DILocation(line: 2909, column: 7, scope: !9453)
!9458 = !DILocation(line: 2909, column: 34, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 2909, column: 2)
!9460 = !DILocation(line: 2909, column: 2, scope: !9453)
!9461 = !DILocation(line: 2910, column: 3, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 2909, column: 59)
!9463 = !DILocation(line: 2910, column: 9, scope: !9462)
!9464 = !DILocation(line: 2910, column: 14, scope: !9462)
!9465 = !DILocation(line: 2911, column: 7, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2911, column: 7)
!9467 = !DILocation(line: 2911, column: 13, scope: !9466)
!9468 = !DILocation(line: 2911, column: 22, scope: !9466)
!9469 = !DILocation(line: 2911, column: 25, scope: !9466)
!9470 = !DILocation(line: 2911, column: 31, scope: !9466)
!9471 = !DILocation(line: 2911, column: 38, scope: !9466)
!9472 = !DILocation(line: 2911, column: 41, scope: !9466)
!9473 = !DILocation(line: 2911, column: 47, scope: !9466)
!9474 = !DILocation(line: 2911, column: 57, scope: !9466)
!9475 = !DILocation(line: 2911, column: 66, scope: !9466)
!9476 = !DILocation(line: 2911, column: 72, scope: !9466)
!9477 = !DILocation(line: 2911, column: 80, scope: !9466)
!9478 = !DILocation(line: 2911, column: 63, scope: !9466)
!9479 = !DILocation(line: 2911, column: 7, scope: !9462)
!9480 = !DILocation(line: 2912, column: 4, scope: !9466)
!9481 = !DILocation(line: 2912, column: 10, scope: !9466)
!9482 = !DILocation(line: 2912, column: 15, scope: !9466)
!9483 = !DILocation(line: 2913, column: 12, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 2913, column: 12)
!9485 = !DILocation(line: 2913, column: 19, scope: !9484)
!9486 = !DILocation(line: 2913, column: 29, scope: !9484)
!9487 = !DILocation(line: 2913, column: 12, scope: !9466)
!9488 = !DILocation(line: 2914, column: 9, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9490, file: !3, line: 2914, column: 8)
!9490 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 2913, column: 44)
!9491 = !DILocation(line: 2914, column: 16, scope: !9489)
!9492 = !DILocation(line: 2914, column: 26, scope: !9489)
!9493 = !DILocation(line: 2914, column: 40, scope: !9489)
!9494 = !DILocation(line: 2914, column: 47, scope: !9489)
!9495 = !DILocation(line: 2914, column: 8, scope: !9490)
!9496 = !DILocation(line: 2915, column: 5, scope: !9489)
!9497 = !DILocation(line: 2915, column: 11, scope: !9489)
!9498 = !DILocation(line: 2915, column: 16, scope: !9489)
!9499 = !DILocation(line: 2916, column: 3, scope: !9490)
!9500 = !DILocation(line: 2917, column: 2, scope: !9462)
!9501 = !DILocation(line: 2909, column: 47, scope: !9459)
!9502 = !DILocation(line: 2909, column: 53, scope: !9459)
!9503 = !DILocation(line: 2909, column: 45, scope: !9459)
!9504 = !DILocation(line: 2909, column: 2, scope: !9459)
!9505 = distinct !{!9505, !9460, !9506}
!9506 = !DILocation(line: 2917, column: 2, scope: !9453)
!9507 = !DILocation(line: 2918, column: 1, scope: !9447)
!9508 = distinct !DISubprogram(name: "nodeUpdate", scope: !3, file: !3, line: 2992, type: !3412, scopeLine: 2993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!9509 = !DILocalVariable(name: "ntree", arg: 1, scope: !9508, file: !3, line: 2992, type: !2101)
!9510 = !DILocation(line: 2992, column: 28, scope: !9508)
!9511 = !DILocalVariable(name: "node", arg: 2, scope: !9508, file: !3, line: 2992, type: !755)
!9512 = !DILocation(line: 2992, column: 42, scope: !9508)
!9513 = !DILocation(line: 2995, column: 6, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 2995, column: 6)
!9515 = !DILocation(line: 2995, column: 13, scope: !9514)
!9516 = !DILocation(line: 2995, column: 6, scope: !9508)
!9517 = !DILocation(line: 2996, column: 3, scope: !9514)
!9518 = !DILocation(line: 2997, column: 2, scope: !9508)
!9519 = !DILocation(line: 2997, column: 9, scope: !9508)
!9520 = !DILocation(line: 2997, column: 21, scope: !9508)
!9521 = !DILocation(line: 2999, column: 6, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 2999, column: 6)
!9523 = !DILocation(line: 2999, column: 12, scope: !9522)
!9524 = !DILocation(line: 2999, column: 22, scope: !9522)
!9525 = !DILocation(line: 2999, column: 6, scope: !9508)
!9526 = !DILocation(line: 3000, column: 3, scope: !9522)
!9527 = !DILocation(line: 3000, column: 9, scope: !9522)
!9528 = !DILocation(line: 3000, column: 19, scope: !9522)
!9529 = !DILocation(line: 3000, column: 30, scope: !9522)
!9530 = !DILocation(line: 3000, column: 37, scope: !9522)
!9531 = !DILocation(line: 3002, column: 26, scope: !9508)
!9532 = !DILocation(line: 3002, column: 33, scope: !9508)
!9533 = !DILocation(line: 3002, column: 2, scope: !9508)
!9534 = !DILocation(line: 3005, column: 2, scope: !9508)
!9535 = !DILocation(line: 3005, column: 8, scope: !9508)
!9536 = !DILocation(line: 3005, column: 15, scope: !9508)
!9537 = !DILocation(line: 3007, column: 2, scope: !9508)
!9538 = !DILocation(line: 3007, column: 9, scope: !9508)
!9539 = !DILocation(line: 3007, column: 21, scope: !9508)
!9540 = !DILocation(line: 3008, column: 1, scope: !9508)
!9541 = distinct !DISubprogram(name: "nodeUpdateID", scope: !3, file: !3, line: 3010, type: !9542, scopeLine: 3011, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!9542 = !DISubroutineType(types: !9543)
!9543 = !{!1074, !2101, !81}
!9544 = !DILocalVariable(name: "ntree", arg: 1, scope: !9541, file: !3, line: 3010, type: !2101)
!9545 = !DILocation(line: 3010, column: 30, scope: !9541)
!9546 = !DILocalVariable(name: "id", arg: 2, scope: !9541, file: !3, line: 3010, type: !81)
!9547 = !DILocation(line: 3010, column: 41, scope: !9541)
!9548 = !DILocalVariable(name: "node", scope: !9541, file: !3, line: 3012, type: !755)
!9549 = !DILocation(line: 3012, column: 9, scope: !9541)
!9550 = !DILocalVariable(name: "changed", scope: !9541, file: !3, line: 3013, type: !1074)
!9551 = !DILocation(line: 3013, column: 7, scope: !9541)
!9552 = !DILocation(line: 3015, column: 6, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 3015, column: 6)
!9554 = !DILocation(line: 3015, column: 6, scope: !9541)
!9555 = !DILocation(line: 3016, column: 10, scope: !9553)
!9556 = !DILocation(line: 3016, column: 3, scope: !9553)
!9557 = !DILocation(line: 3019, column: 6, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 3019, column: 6)
!9559 = !DILocation(line: 3019, column: 13, scope: !9558)
!9560 = !DILocation(line: 3019, column: 6, scope: !9541)
!9561 = !DILocation(line: 3020, column: 10, scope: !9558)
!9562 = !DILocation(line: 3020, column: 3, scope: !9558)
!9563 = !DILocation(line: 3021, column: 2, scope: !9541)
!9564 = !DILocation(line: 3021, column: 9, scope: !9541)
!9565 = !DILocation(line: 3021, column: 21, scope: !9541)
!9566 = !DILocation(line: 3023, column: 14, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 3023, column: 2)
!9568 = !DILocation(line: 3023, column: 21, scope: !9567)
!9569 = !DILocation(line: 3023, column: 27, scope: !9567)
!9570 = !DILocation(line: 3023, column: 12, scope: !9567)
!9571 = !DILocation(line: 3023, column: 7, scope: !9567)
!9572 = !DILocation(line: 3023, column: 34, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 3023, column: 2)
!9574 = !DILocation(line: 3023, column: 2, scope: !9567)
!9575 = !DILocation(line: 3024, column: 7, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9577, file: !3, line: 3024, column: 7)
!9577 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 3023, column: 59)
!9578 = !DILocation(line: 3024, column: 13, scope: !9576)
!9579 = !DILocation(line: 3024, column: 19, scope: !9576)
!9580 = !DILocation(line: 3024, column: 16, scope: !9576)
!9581 = !DILocation(line: 3024, column: 7, scope: !9577)
!9582 = !DILocation(line: 3025, column: 12, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9576, file: !3, line: 3024, column: 23)
!9584 = !DILocation(line: 3026, column: 4, scope: !9583)
!9585 = !DILocation(line: 3026, column: 10, scope: !9583)
!9586 = !DILocation(line: 3026, column: 17, scope: !9583)
!9587 = !DILocation(line: 3027, column: 8, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 3027, column: 8)
!9589 = !DILocation(line: 3027, column: 14, scope: !9588)
!9590 = !DILocation(line: 3027, column: 24, scope: !9588)
!9591 = !DILocation(line: 3027, column: 8, scope: !9583)
!9592 = !DILocation(line: 3028, column: 5, scope: !9588)
!9593 = !DILocation(line: 3028, column: 11, scope: !9588)
!9594 = !DILocation(line: 3028, column: 21, scope: !9588)
!9595 = !DILocation(line: 3028, column: 32, scope: !9588)
!9596 = !DILocation(line: 3028, column: 39, scope: !9588)
!9597 = !DILocation(line: 3030, column: 4, scope: !9583)
!9598 = !DILocation(line: 3030, column: 10, scope: !9583)
!9599 = !DILocation(line: 3030, column: 17, scope: !9583)
!9600 = !DILocation(line: 3031, column: 3, scope: !9583)
!9601 = !DILocation(line: 3032, column: 2, scope: !9577)
!9602 = !DILocation(line: 3023, column: 47, scope: !9573)
!9603 = !DILocation(line: 3023, column: 53, scope: !9573)
!9604 = !DILocation(line: 3023, column: 45, scope: !9573)
!9605 = !DILocation(line: 3023, column: 2, scope: !9573)
!9606 = distinct !{!9606, !9574, !9607}
!9607 = !DILocation(line: 3032, column: 2, scope: !9567)
!9608 = !DILocation(line: 3034, column: 14, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 3034, column: 2)
!9610 = !DILocation(line: 3034, column: 21, scope: !9609)
!9611 = !DILocation(line: 3034, column: 27, scope: !9609)
!9612 = !DILocation(line: 3034, column: 12, scope: !9609)
!9613 = !DILocation(line: 3034, column: 7, scope: !9609)
!9614 = !DILocation(line: 3034, column: 34, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 3034, column: 2)
!9616 = !DILocation(line: 3034, column: 2, scope: !9609)
!9617 = !DILocation(line: 3035, column: 27, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 3034, column: 59)
!9619 = !DILocation(line: 3035, column: 34, scope: !9618)
!9620 = !DILocation(line: 3035, column: 3, scope: !9618)
!9621 = !DILocation(line: 3036, column: 2, scope: !9618)
!9622 = !DILocation(line: 3034, column: 47, scope: !9615)
!9623 = !DILocation(line: 3034, column: 53, scope: !9615)
!9624 = !DILocation(line: 3034, column: 45, scope: !9615)
!9625 = !DILocation(line: 3034, column: 2, scope: !9615)
!9626 = distinct !{!9626, !9616, !9627}
!9627 = !DILocation(line: 3036, column: 2, scope: !9609)
!9628 = !DILocation(line: 3038, column: 2, scope: !9541)
!9629 = !DILocation(line: 3038, column: 9, scope: !9541)
!9630 = !DILocation(line: 3038, column: 21, scope: !9541)
!9631 = !DILocation(line: 3039, column: 9, scope: !9541)
!9632 = !DILocation(line: 3039, column: 2, scope: !9541)
!9633 = !DILocation(line: 3040, column: 1, scope: !9541)
!9634 = distinct !DISubprogram(name: "nodeSynchronizeID", scope: !3, file: !3, line: 3052, type: !8323, scopeLine: 3053, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!9635 = !DILocalVariable(name: "node", arg: 1, scope: !9634, file: !3, line: 3052, type: !755)
!9636 = !DILocation(line: 3052, column: 31, scope: !9634)
!9637 = !DILocalVariable(name: "copy_to_id", arg: 2, scope: !9634, file: !3, line: 3052, type: !1074)
!9638 = !DILocation(line: 3052, column: 42, scope: !9634)
!9639 = !DILocation(line: 3054, column: 6, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 3054, column: 6)
!9641 = !DILocation(line: 3054, column: 12, scope: !9640)
!9642 = !DILocation(line: 3054, column: 15, scope: !9640)
!9643 = !DILocation(line: 3054, column: 6, scope: !9634)
!9644 = !DILocation(line: 3054, column: 24, scope: !9640)
!9645 = !DILocation(line: 3056, column: 6, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 3056, column: 6)
!9647 = !DILocation(line: 3056, column: 6, scope: !9634)
!9648 = !DILocalVariable(name: "sock", scope: !9649, file: !3, line: 3057, type: !759)
!9649 = distinct !DILexicalBlock(scope: !9646, file: !3, line: 3056, column: 64)
!9650 = !DILocation(line: 3057, column: 16, scope: !9649)
!9651 = !DILocalVariable(name: "ma", scope: !9649, file: !3, line: 3058, type: !156)
!9652 = !DILocation(line: 3058, column: 13, scope: !9649)
!9653 = !DILocation(line: 3058, column: 30, scope: !9649)
!9654 = !DILocation(line: 3058, column: 36, scope: !9649)
!9655 = !DILocation(line: 3058, column: 18, scope: !9649)
!9656 = !DILocalVariable(name: "a", scope: !9649, file: !3, line: 3059, type: !36)
!9657 = !DILocation(line: 3059, column: 7, scope: !9649)
!9658 = !DILocation(line: 3062, column: 10, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9649, file: !3, line: 3062, column: 3)
!9660 = !DILocation(line: 3062, column: 22, scope: !9659)
!9661 = !DILocation(line: 3062, column: 28, scope: !9659)
!9662 = !DILocation(line: 3062, column: 35, scope: !9659)
!9663 = !DILocation(line: 3062, column: 20, scope: !9659)
!9664 = !DILocation(line: 3062, column: 8, scope: !9659)
!9665 = !DILocation(line: 3062, column: 42, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 3062, column: 3)
!9667 = !DILocation(line: 3062, column: 3, scope: !9659)
!9668 = !DILocation(line: 3063, column: 28, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9670, file: !3, line: 3063, column: 8)
!9670 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 3062, column: 72)
!9671 = !DILocation(line: 3063, column: 9, scope: !9669)
!9672 = !DILocation(line: 3063, column: 8, scope: !9670)
!9673 = !DILocation(line: 3064, column: 9, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 3064, column: 9)
!9675 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 3063, column: 35)
!9676 = !DILocation(line: 3064, column: 9, scope: !9675)
!9677 = !DILocation(line: 3065, column: 14, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 3064, column: 21)
!9679 = !DILocation(line: 3065, column: 6, scope: !9678)
!9680 = !DILocation(line: 3067, column: 20, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9678, file: !3, line: 3065, column: 17)
!9682 = !DILocation(line: 3067, column: 24, scope: !9681)
!9683 = !DILocation(line: 3067, column: 52, scope: !9681)
!9684 = !DILocation(line: 3067, column: 58, scope: !9681)
!9685 = !DILocation(line: 3067, column: 28, scope: !9681)
!9686 = !DILocation(line: 3067, column: 74, scope: !9681)
!9687 = !DILocation(line: 3067, column: 27, scope: !9681)
!9688 = !DILocation(line: 3067, column: 8, scope: !9681)
!9689 = !DILocation(line: 3067, column: 82, scope: !9681)
!9690 = !DILocation(line: 3069, column: 20, scope: !9681)
!9691 = !DILocation(line: 3069, column: 24, scope: !9681)
!9692 = !DILocation(line: 3069, column: 56, scope: !9681)
!9693 = !DILocation(line: 3069, column: 62, scope: !9681)
!9694 = !DILocation(line: 3069, column: 32, scope: !9681)
!9695 = !DILocation(line: 3069, column: 78, scope: !9681)
!9696 = !DILocation(line: 3069, column: 31, scope: !9681)
!9697 = !DILocation(line: 3069, column: 8, scope: !9681)
!9698 = !DILocation(line: 3069, column: 86, scope: !9681)
!9699 = !DILocation(line: 3071, column: 44, scope: !9681)
!9700 = !DILocation(line: 3071, column: 50, scope: !9681)
!9701 = !DILocation(line: 3071, column: 19, scope: !9681)
!9702 = !DILocation(line: 3071, column: 66, scope: !9681)
!9703 = !DILocation(line: 3071, column: 8, scope: !9681)
!9704 = !DILocation(line: 3071, column: 12, scope: !9681)
!9705 = !DILocation(line: 3071, column: 16, scope: !9681)
!9706 = !DILocation(line: 3071, column: 73, scope: !9681)
!9707 = !DILocation(line: 3073, column: 20, scope: !9681)
!9708 = !DILocation(line: 3073, column: 24, scope: !9681)
!9709 = !DILocation(line: 3073, column: 55, scope: !9681)
!9710 = !DILocation(line: 3073, column: 61, scope: !9681)
!9711 = !DILocation(line: 3073, column: 31, scope: !9681)
!9712 = !DILocation(line: 3073, column: 77, scope: !9681)
!9713 = !DILocation(line: 3073, column: 30, scope: !9681)
!9714 = !DILocation(line: 3073, column: 8, scope: !9681)
!9715 = !DILocation(line: 3073, column: 85, scope: !9681)
!9716 = !DILocation(line: 3075, column: 44, scope: !9681)
!9717 = !DILocation(line: 3075, column: 50, scope: !9681)
!9718 = !DILocation(line: 3075, column: 19, scope: !9681)
!9719 = !DILocation(line: 3075, column: 66, scope: !9681)
!9720 = !DILocation(line: 3075, column: 8, scope: !9681)
!9721 = !DILocation(line: 3075, column: 12, scope: !9681)
!9722 = !DILocation(line: 3075, column: 16, scope: !9681)
!9723 = !DILocation(line: 3075, column: 73, scope: !9681)
!9724 = !DILocation(line: 3077, column: 45, scope: !9681)
!9725 = !DILocation(line: 3077, column: 51, scope: !9681)
!9726 = !DILocation(line: 3077, column: 20, scope: !9681)
!9727 = !DILocation(line: 3077, column: 67, scope: !9681)
!9728 = !DILocation(line: 3077, column: 8, scope: !9681)
!9729 = !DILocation(line: 3077, column: 12, scope: !9681)
!9730 = !DILocation(line: 3077, column: 17, scope: !9681)
!9731 = !DILocation(line: 3077, column: 74, scope: !9681)
!9732 = !DILocation(line: 3079, column: 48, scope: !9681)
!9733 = !DILocation(line: 3079, column: 54, scope: !9681)
!9734 = !DILocation(line: 3079, column: 23, scope: !9681)
!9735 = !DILocation(line: 3079, column: 70, scope: !9681)
!9736 = !DILocation(line: 3079, column: 8, scope: !9681)
!9737 = !DILocation(line: 3079, column: 12, scope: !9681)
!9738 = !DILocation(line: 3079, column: 20, scope: !9681)
!9739 = !DILocation(line: 3079, column: 77, scope: !9681)
!9740 = !DILocation(line: 3081, column: 51, scope: !9681)
!9741 = !DILocation(line: 3081, column: 57, scope: !9681)
!9742 = !DILocation(line: 3081, column: 26, scope: !9681)
!9743 = !DILocation(line: 3081, column: 73, scope: !9681)
!9744 = !DILocation(line: 3081, column: 8, scope: !9681)
!9745 = !DILocation(line: 3081, column: 12, scope: !9681)
!9746 = !DILocation(line: 3081, column: 23, scope: !9681)
!9747 = !DILocation(line: 3081, column: 80, scope: !9681)
!9748 = !DILocation(line: 3083, column: 46, scope: !9681)
!9749 = !DILocation(line: 3083, column: 52, scope: !9681)
!9750 = !DILocation(line: 3083, column: 21, scope: !9681)
!9751 = !DILocation(line: 3083, column: 68, scope: !9681)
!9752 = !DILocation(line: 3083, column: 8, scope: !9681)
!9753 = !DILocation(line: 3083, column: 12, scope: !9681)
!9754 = !DILocation(line: 3083, column: 18, scope: !9681)
!9755 = !DILocation(line: 3083, column: 75, scope: !9681)
!9756 = !DILocation(line: 3085, column: 53, scope: !9681)
!9757 = !DILocation(line: 3085, column: 59, scope: !9681)
!9758 = !DILocation(line: 3085, column: 28, scope: !9681)
!9759 = !DILocation(line: 3085, column: 75, scope: !9681)
!9760 = !DILocation(line: 3085, column: 8, scope: !9681)
!9761 = !DILocation(line: 3085, column: 12, scope: !9681)
!9762 = !DILocation(line: 3085, column: 25, scope: !9681)
!9763 = !DILocation(line: 3085, column: 82, scope: !9681)
!9764 = !DILocation(line: 3087, column: 5, scope: !9678)
!9765 = !DILocation(line: 3089, column: 14, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 3088, column: 10)
!9767 = !DILocation(line: 3089, column: 6, scope: !9766)
!9768 = !DILocation(line: 3091, column: 44, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 3089, column: 17)
!9770 = !DILocation(line: 3091, column: 50, scope: !9769)
!9771 = !DILocation(line: 3091, column: 20, scope: !9769)
!9772 = !DILocation(line: 3091, column: 66, scope: !9769)
!9773 = !DILocation(line: 3091, column: 19, scope: !9769)
!9774 = !DILocation(line: 3091, column: 74, scope: !9769)
!9775 = !DILocation(line: 3091, column: 78, scope: !9769)
!9776 = !DILocation(line: 3091, column: 8, scope: !9769)
!9777 = !DILocation(line: 3091, column: 82, scope: !9769)
!9778 = !DILocation(line: 3093, column: 44, scope: !9769)
!9779 = !DILocation(line: 3093, column: 50, scope: !9769)
!9780 = !DILocation(line: 3093, column: 20, scope: !9769)
!9781 = !DILocation(line: 3093, column: 66, scope: !9769)
!9782 = !DILocation(line: 3093, column: 19, scope: !9769)
!9783 = !DILocation(line: 3093, column: 74, scope: !9769)
!9784 = !DILocation(line: 3093, column: 78, scope: !9769)
!9785 = !DILocation(line: 3093, column: 8, scope: !9769)
!9786 = !DILocation(line: 3093, column: 86, scope: !9769)
!9787 = !DILocation(line: 3095, column: 64, scope: !9769)
!9788 = !DILocation(line: 3095, column: 68, scope: !9769)
!9789 = !DILocation(line: 3095, column: 34, scope: !9769)
!9790 = !DILocation(line: 3095, column: 40, scope: !9769)
!9791 = !DILocation(line: 3095, column: 9, scope: !9769)
!9792 = !DILocation(line: 3095, column: 56, scope: !9769)
!9793 = !DILocation(line: 3095, column: 62, scope: !9769)
!9794 = !DILocation(line: 3095, column: 73, scope: !9769)
!9795 = !DILocation(line: 3097, column: 44, scope: !9769)
!9796 = !DILocation(line: 3097, column: 50, scope: !9769)
!9797 = !DILocation(line: 3097, column: 20, scope: !9769)
!9798 = !DILocation(line: 3097, column: 66, scope: !9769)
!9799 = !DILocation(line: 3097, column: 19, scope: !9769)
!9800 = !DILocation(line: 3097, column: 74, scope: !9769)
!9801 = !DILocation(line: 3097, column: 78, scope: !9769)
!9802 = !DILocation(line: 3097, column: 8, scope: !9769)
!9803 = !DILocation(line: 3097, column: 85, scope: !9769)
!9804 = !DILocation(line: 3099, column: 64, scope: !9769)
!9805 = !DILocation(line: 3099, column: 68, scope: !9769)
!9806 = !DILocation(line: 3099, column: 34, scope: !9769)
!9807 = !DILocation(line: 3099, column: 40, scope: !9769)
!9808 = !DILocation(line: 3099, column: 9, scope: !9769)
!9809 = !DILocation(line: 3099, column: 56, scope: !9769)
!9810 = !DILocation(line: 3099, column: 62, scope: !9769)
!9811 = !DILocation(line: 3099, column: 73, scope: !9769)
!9812 = !DILocation(line: 3101, column: 64, scope: !9769)
!9813 = !DILocation(line: 3101, column: 68, scope: !9769)
!9814 = !DILocation(line: 3101, column: 34, scope: !9769)
!9815 = !DILocation(line: 3101, column: 40, scope: !9769)
!9816 = !DILocation(line: 3101, column: 9, scope: !9769)
!9817 = !DILocation(line: 3101, column: 56, scope: !9769)
!9818 = !DILocation(line: 3101, column: 62, scope: !9769)
!9819 = !DILocation(line: 3101, column: 74, scope: !9769)
!9820 = !DILocation(line: 3103, column: 64, scope: !9769)
!9821 = !DILocation(line: 3103, column: 68, scope: !9769)
!9822 = !DILocation(line: 3103, column: 34, scope: !9769)
!9823 = !DILocation(line: 3103, column: 40, scope: !9769)
!9824 = !DILocation(line: 3103, column: 9, scope: !9769)
!9825 = !DILocation(line: 3103, column: 56, scope: !9769)
!9826 = !DILocation(line: 3103, column: 62, scope: !9769)
!9827 = !DILocation(line: 3103, column: 77, scope: !9769)
!9828 = !DILocation(line: 3105, column: 64, scope: !9769)
!9829 = !DILocation(line: 3105, column: 68, scope: !9769)
!9830 = !DILocation(line: 3105, column: 34, scope: !9769)
!9831 = !DILocation(line: 3105, column: 40, scope: !9769)
!9832 = !DILocation(line: 3105, column: 9, scope: !9769)
!9833 = !DILocation(line: 3105, column: 56, scope: !9769)
!9834 = !DILocation(line: 3105, column: 62, scope: !9769)
!9835 = !DILocation(line: 3105, column: 80, scope: !9769)
!9836 = !DILocation(line: 3107, column: 64, scope: !9769)
!9837 = !DILocation(line: 3107, column: 68, scope: !9769)
!9838 = !DILocation(line: 3107, column: 34, scope: !9769)
!9839 = !DILocation(line: 3107, column: 40, scope: !9769)
!9840 = !DILocation(line: 3107, column: 9, scope: !9769)
!9841 = !DILocation(line: 3107, column: 56, scope: !9769)
!9842 = !DILocation(line: 3107, column: 62, scope: !9769)
!9843 = !DILocation(line: 3107, column: 75, scope: !9769)
!9844 = !DILocation(line: 3109, column: 64, scope: !9769)
!9845 = !DILocation(line: 3109, column: 68, scope: !9769)
!9846 = !DILocation(line: 3109, column: 34, scope: !9769)
!9847 = !DILocation(line: 3109, column: 40, scope: !9769)
!9848 = !DILocation(line: 3109, column: 9, scope: !9769)
!9849 = !DILocation(line: 3109, column: 56, scope: !9769)
!9850 = !DILocation(line: 3109, column: 62, scope: !9769)
!9851 = !DILocation(line: 3109, column: 82, scope: !9769)
!9852 = !DILocation(line: 3112, column: 4, scope: !9675)
!9853 = !DILocation(line: 3113, column: 3, scope: !9670)
!9854 = !DILocation(line: 3062, column: 55, scope: !9666)
!9855 = !DILocation(line: 3062, column: 61, scope: !9666)
!9856 = !DILocation(line: 3062, column: 53, scope: !9666)
!9857 = !DILocation(line: 3062, column: 68, scope: !9666)
!9858 = !DILocation(line: 3062, column: 3, scope: !9666)
!9859 = distinct !{!9859, !9667, !9860}
!9860 = !DILocation(line: 3113, column: 3, scope: !9659)
!9861 = !DILocation(line: 3114, column: 2, scope: !9649)
!9862 = !DILocation(line: 3115, column: 1, scope: !9634)
!9863 = distinct !DISubprogram(name: "copy_v3_v3", scope: !9864, file: !9864, line: 64, type: !9865, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!9864 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9865 = !DISubroutineType(types: !9866)
!9866 = !{null, !543, !5737}
!9867 = !DILocalVariable(name: "r", arg: 1, scope: !9863, file: !9864, line: 64, type: !543)
!9868 = !DILocation(line: 64, column: 31, scope: !9863)
!9869 = !DILocalVariable(name: "a", arg: 2, scope: !9863, file: !9864, line: 64, type: !5737)
!9870 = !DILocation(line: 64, column: 49, scope: !9863)
!9871 = !DILocation(line: 66, column: 9, scope: !9863)
!9872 = !DILocation(line: 66, column: 2, scope: !9863)
!9873 = !DILocation(line: 66, column: 7, scope: !9863)
!9874 = !DILocation(line: 67, column: 9, scope: !9863)
!9875 = !DILocation(line: 67, column: 2, scope: !9863)
!9876 = !DILocation(line: 67, column: 7, scope: !9863)
!9877 = !DILocation(line: 68, column: 9, scope: !9863)
!9878 = !DILocation(line: 68, column: 2, scope: !9863)
!9879 = !DILocation(line: 68, column: 7, scope: !9863)
!9880 = !DILocation(line: 69, column: 1, scope: !9863)
!9881 = distinct !DISubprogram(name: "nodeLabel", scope: !3, file: !3, line: 3120, type: !9882, scopeLine: 3121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!9882 = !DISubroutineType(types: !9883)
!9883 = !{null, !2101, !755, !155, !36}
!9884 = !DILocalVariable(name: "ntree", arg: 1, scope: !9881, file: !3, line: 3120, type: !2101)
!9885 = !DILocation(line: 3120, column: 27, scope: !9881)
!9886 = !DILocalVariable(name: "node", arg: 2, scope: !9881, file: !3, line: 3120, type: !755)
!9887 = !DILocation(line: 3120, column: 41, scope: !9881)
!9888 = !DILocalVariable(name: "label", arg: 3, scope: !9881, file: !3, line: 3120, type: !155)
!9889 = !DILocation(line: 3120, column: 53, scope: !9881)
!9890 = !DILocalVariable(name: "maxlen", arg: 4, scope: !9881, file: !3, line: 3120, type: !36)
!9891 = !DILocation(line: 3120, column: 64, scope: !9881)
!9892 = !DILocation(line: 3122, column: 6, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 3122, column: 6)
!9894 = !DILocation(line: 3122, column: 12, scope: !9893)
!9895 = !DILocation(line: 3122, column: 21, scope: !9893)
!9896 = !DILocation(line: 3122, column: 6, scope: !9881)
!9897 = !DILocation(line: 3123, column: 15, scope: !9893)
!9898 = !DILocation(line: 3123, column: 22, scope: !9893)
!9899 = !DILocation(line: 3123, column: 28, scope: !9893)
!9900 = !DILocation(line: 3123, column: 35, scope: !9893)
!9901 = !DILocation(line: 3123, column: 3, scope: !9893)
!9902 = !DILocation(line: 3124, column: 11, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9893, file: !3, line: 3124, column: 11)
!9904 = !DILocation(line: 3124, column: 17, scope: !9903)
!9905 = !DILocation(line: 3124, column: 27, scope: !9903)
!9906 = !DILocation(line: 3124, column: 11, scope: !9893)
!9907 = !DILocation(line: 3125, column: 3, scope: !9903)
!9908 = !DILocation(line: 3125, column: 9, scope: !9903)
!9909 = !DILocation(line: 3125, column: 19, scope: !9903)
!9910 = !DILocation(line: 3125, column: 29, scope: !9903)
!9911 = !DILocation(line: 3125, column: 36, scope: !9903)
!9912 = !DILocation(line: 3125, column: 42, scope: !9903)
!9913 = !DILocation(line: 3125, column: 49, scope: !9903)
!9914 = !DILocation(line: 3127, column: 15, scope: !9903)
!9915 = !DILocation(line: 3127, column: 22, scope: !9903)
!9916 = !DILocation(line: 3127, column: 55, scope: !9903)
!9917 = !DILocation(line: 3127, column: 3, scope: !9903)
!9918 = !DILocation(line: 3128, column: 1, scope: !9881)
!9919 = distinct !DISubprogram(name: "node_type_base", scope: !3, file: !3, line: 3151, type: !9920, scopeLine: 3152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!9920 = !DISubroutineType(types: !9921)
!9921 = !{null, !2342, !36, !681, !114, !114}
!9922 = !DILocalVariable(name: "ntype", arg: 1, scope: !9919, file: !3, line: 3151, type: !2342)
!9923 = !DILocation(line: 3151, column: 32, scope: !9919)
!9924 = !DILocalVariable(name: "type", arg: 2, scope: !9919, file: !3, line: 3151, type: !36)
!9925 = !DILocation(line: 3151, column: 43, scope: !9919)
!9926 = !DILocalVariable(name: "name", arg: 3, scope: !9919, file: !3, line: 3151, type: !681)
!9927 = !DILocation(line: 3151, column: 61, scope: !9919)
!9928 = !DILocalVariable(name: "nclass", arg: 4, scope: !9919, file: !3, line: 3151, type: !114)
!9929 = !DILocation(line: 3151, column: 73, scope: !9919)
!9930 = !DILocalVariable(name: "flag", arg: 5, scope: !9919, file: !3, line: 3151, type: !114)
!9931 = !DILocation(line: 3151, column: 87, scope: !9919)
!9932 = !DILocation(line: 3168, column: 10, scope: !9919)
!9933 = !DILocation(line: 3168, column: 2, scope: !9919)
!9934 = !DILocation(line: 37, column: 1, scope: !9935)
!9935 = !DILexicalBlockFile(scope: !9937, file: !9936, discriminator: 0)
!9936 = !DIFile(filename: "blender/source/blender/nodes/NOD_static_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9937 = distinct !DILexicalBlock(scope: !9919, file: !3, line: 3168, column: 16)
!9938 = !DILocation(line: 38, column: 1, scope: !9935)
!9939 = !DILocation(line: 39, column: 1, scope: !9935)
!9940 = !DILocation(line: 40, column: 1, scope: !9935)
!9941 = !DILocation(line: 41, column: 1, scope: !9935)
!9942 = !DILocation(line: 43, column: 1, scope: !9935)
!9943 = !DILocation(line: 44, column: 1, scope: !9935)
!9944 = !DILocation(line: 45, column: 1, scope: !9935)
!9945 = !DILocation(line: 46, column: 1, scope: !9935)
!9946 = !DILocation(line: 47, column: 1, scope: !9935)
!9947 = !DILocation(line: 48, column: 1, scope: !9935)
!9948 = !DILocation(line: 49, column: 1, scope: !9935)
!9949 = !DILocation(line: 50, column: 1, scope: !9935)
!9950 = !DILocation(line: 51, column: 1, scope: !9935)
!9951 = !DILocation(line: 52, column: 1, scope: !9935)
!9952 = !DILocation(line: 53, column: 1, scope: !9935)
!9953 = !DILocation(line: 54, column: 1, scope: !9935)
!9954 = !DILocation(line: 55, column: 1, scope: !9935)
!9955 = !DILocation(line: 56, column: 1, scope: !9935)
!9956 = !DILocation(line: 57, column: 1, scope: !9935)
!9957 = !DILocation(line: 58, column: 1, scope: !9935)
!9958 = !DILocation(line: 59, column: 1, scope: !9935)
!9959 = !DILocation(line: 60, column: 1, scope: !9935)
!9960 = !DILocation(line: 61, column: 1, scope: !9935)
!9961 = !DILocation(line: 62, column: 1, scope: !9935)
!9962 = !DILocation(line: 63, column: 1, scope: !9935)
!9963 = !DILocation(line: 64, column: 1, scope: !9935)
!9964 = !DILocation(line: 65, column: 1, scope: !9935)
!9965 = !DILocation(line: 66, column: 1, scope: !9935)
!9966 = !DILocation(line: 67, column: 1, scope: !9935)
!9967 = !DILocation(line: 69, column: 1, scope: !9935)
!9968 = !DILocation(line: 70, column: 1, scope: !9935)
!9969 = !DILocation(line: 71, column: 1, scope: !9935)
!9970 = !DILocation(line: 72, column: 1, scope: !9935)
!9971 = !DILocation(line: 73, column: 1, scope: !9935)
!9972 = !DILocation(line: 74, column: 1, scope: !9935)
!9973 = !DILocation(line: 75, column: 1, scope: !9935)
!9974 = !DILocation(line: 76, column: 1, scope: !9935)
!9975 = !DILocation(line: 77, column: 1, scope: !9935)
!9976 = !DILocation(line: 78, column: 1, scope: !9935)
!9977 = !DILocation(line: 79, column: 1, scope: !9935)
!9978 = !DILocation(line: 80, column: 1, scope: !9935)
!9979 = !DILocation(line: 81, column: 1, scope: !9935)
!9980 = !DILocation(line: 82, column: 1, scope: !9935)
!9981 = !DILocation(line: 83, column: 1, scope: !9935)
!9982 = !DILocation(line: 84, column: 1, scope: !9935)
!9983 = !DILocation(line: 85, column: 1, scope: !9935)
!9984 = !DILocation(line: 86, column: 1, scope: !9935)
!9985 = !DILocation(line: 87, column: 1, scope: !9935)
!9986 = !DILocation(line: 88, column: 1, scope: !9935)
!9987 = !DILocation(line: 89, column: 1, scope: !9935)
!9988 = !DILocation(line: 90, column: 1, scope: !9935)
!9989 = !DILocation(line: 91, column: 1, scope: !9935)
!9990 = !DILocation(line: 92, column: 1, scope: !9935)
!9991 = !DILocation(line: 93, column: 1, scope: !9935)
!9992 = !DILocation(line: 94, column: 1, scope: !9935)
!9993 = !DILocation(line: 95, column: 1, scope: !9935)
!9994 = !DILocation(line: 96, column: 1, scope: !9935)
!9995 = !DILocation(line: 97, column: 1, scope: !9935)
!9996 = !DILocation(line: 98, column: 1, scope: !9935)
!9997 = !DILocation(line: 99, column: 1, scope: !9935)
!9998 = !DILocation(line: 100, column: 1, scope: !9935)
!9999 = !DILocation(line: 101, column: 1, scope: !9935)
!10000 = !DILocation(line: 102, column: 1, scope: !9935)
!10001 = !DILocation(line: 103, column: 1, scope: !9935)
!10002 = !DILocation(line: 104, column: 1, scope: !9935)
!10003 = !DILocation(line: 105, column: 1, scope: !9935)
!10004 = !DILocation(line: 106, column: 1, scope: !9935)
!10005 = !DILocation(line: 107, column: 1, scope: !9935)
!10006 = !DILocation(line: 108, column: 1, scope: !9935)
!10007 = !DILocation(line: 109, column: 1, scope: !9935)
!10008 = !DILocation(line: 110, column: 1, scope: !9935)
!10009 = !DILocation(line: 111, column: 1, scope: !9935)
!10010 = !DILocation(line: 112, column: 1, scope: !9935)
!10011 = !DILocation(line: 113, column: 1, scope: !9935)
!10012 = !DILocation(line: 114, column: 1, scope: !9935)
!10013 = !DILocation(line: 115, column: 1, scope: !9935)
!10014 = !DILocation(line: 116, column: 1, scope: !9935)
!10015 = !DILocation(line: 117, column: 1, scope: !9935)
!10016 = !DILocation(line: 118, column: 1, scope: !9935)
!10017 = !DILocation(line: 119, column: 1, scope: !9935)
!10018 = !DILocation(line: 120, column: 1, scope: !9935)
!10019 = !DILocation(line: 121, column: 1, scope: !9935)
!10020 = !DILocation(line: 122, column: 1, scope: !9935)
!10021 = !DILocation(line: 123, column: 1, scope: !9935)
!10022 = !DILocation(line: 124, column: 1, scope: !9935)
!10023 = !DILocation(line: 125, column: 1, scope: !9935)
!10024 = !DILocation(line: 126, column: 1, scope: !9935)
!10025 = !DILocation(line: 128, column: 1, scope: !9935)
!10026 = !DILocation(line: 129, column: 1, scope: !9935)
!10027 = !DILocation(line: 130, column: 1, scope: !9935)
!10028 = !DILocation(line: 131, column: 1, scope: !9935)
!10029 = !DILocation(line: 132, column: 1, scope: !9935)
!10030 = !DILocation(line: 133, column: 1, scope: !9935)
!10031 = !DILocation(line: 134, column: 1, scope: !9935)
!10032 = !DILocation(line: 135, column: 1, scope: !9935)
!10033 = !DILocation(line: 136, column: 1, scope: !9935)
!10034 = !DILocation(line: 137, column: 1, scope: !9935)
!10035 = !DILocation(line: 138, column: 1, scope: !9935)
!10036 = !DILocation(line: 139, column: 1, scope: !9935)
!10037 = !DILocation(line: 140, column: 1, scope: !9935)
!10038 = !DILocation(line: 141, column: 1, scope: !9935)
!10039 = !DILocation(line: 142, column: 1, scope: !9935)
!10040 = !DILocation(line: 143, column: 1, scope: !9935)
!10041 = !DILocation(line: 144, column: 1, scope: !9935)
!10042 = !DILocation(line: 145, column: 1, scope: !9935)
!10043 = !DILocation(line: 146, column: 1, scope: !9935)
!10044 = !DILocation(line: 147, column: 1, scope: !9935)
!10045 = !DILocation(line: 148, column: 1, scope: !9935)
!10046 = !DILocation(line: 149, column: 1, scope: !9935)
!10047 = !DILocation(line: 150, column: 1, scope: !9935)
!10048 = !DILocation(line: 152, column: 1, scope: !9935)
!10049 = !DILocation(line: 153, column: 1, scope: !9935)
!10050 = !DILocation(line: 154, column: 1, scope: !9935)
!10051 = !DILocation(line: 155, column: 1, scope: !9935)
!10052 = !DILocation(line: 156, column: 1, scope: !9935)
!10053 = !DILocation(line: 157, column: 1, scope: !9935)
!10054 = !DILocation(line: 158, column: 1, scope: !9935)
!10055 = !DILocation(line: 159, column: 1, scope: !9935)
!10056 = !DILocation(line: 160, column: 1, scope: !9935)
!10057 = !DILocation(line: 161, column: 1, scope: !9935)
!10058 = !DILocation(line: 162, column: 1, scope: !9935)
!10059 = !DILocation(line: 163, column: 1, scope: !9935)
!10060 = !DILocation(line: 164, column: 1, scope: !9935)
!10061 = !DILocation(line: 165, column: 1, scope: !9935)
!10062 = !DILocation(line: 166, column: 1, scope: !9935)
!10063 = !DILocation(line: 167, column: 1, scope: !9935)
!10064 = !DILocation(line: 168, column: 1, scope: !9935)
!10065 = !DILocation(line: 169, column: 1, scope: !9935)
!10066 = !DILocation(line: 170, column: 1, scope: !9935)
!10067 = !DILocation(line: 171, column: 1, scope: !9935)
!10068 = !DILocation(line: 172, column: 1, scope: !9935)
!10069 = !DILocation(line: 173, column: 1, scope: !9935)
!10070 = !DILocation(line: 174, column: 1, scope: !9935)
!10071 = !DILocation(line: 175, column: 1, scope: !9935)
!10072 = !DILocation(line: 176, column: 1, scope: !9935)
!10073 = !DILocation(line: 177, column: 1, scope: !9935)
!10074 = !DILocation(line: 178, column: 1, scope: !9935)
!10075 = !DILocation(line: 179, column: 1, scope: !9935)
!10076 = !DILocation(line: 180, column: 1, scope: !9935)
!10077 = !DILocation(line: 181, column: 1, scope: !9935)
!10078 = !DILocation(line: 182, column: 1, scope: !9935)
!10079 = !DILocation(line: 183, column: 1, scope: !9935)
!10080 = !DILocation(line: 184, column: 1, scope: !9935)
!10081 = !DILocation(line: 185, column: 1, scope: !9935)
!10082 = !DILocation(line: 186, column: 1, scope: !9935)
!10083 = !DILocation(line: 187, column: 1, scope: !9935)
!10084 = !DILocation(line: 188, column: 1, scope: !9935)
!10085 = !DILocation(line: 189, column: 1, scope: !9935)
!10086 = !DILocation(line: 190, column: 1, scope: !9935)
!10087 = !DILocation(line: 191, column: 1, scope: !9935)
!10088 = !DILocation(line: 192, column: 1, scope: !9935)
!10089 = !DILocation(line: 193, column: 1, scope: !9935)
!10090 = !DILocation(line: 194, column: 1, scope: !9935)
!10091 = !DILocation(line: 195, column: 1, scope: !9935)
!10092 = !DILocation(line: 196, column: 1, scope: !9935)
!10093 = !DILocation(line: 197, column: 1, scope: !9935)
!10094 = !DILocation(line: 198, column: 1, scope: !9935)
!10095 = !DILocation(line: 199, column: 1, scope: !9935)
!10096 = !DILocation(line: 200, column: 1, scope: !9935)
!10097 = !DILocation(line: 201, column: 1, scope: !9935)
!10098 = !DILocation(line: 202, column: 1, scope: !9935)
!10099 = !DILocation(line: 203, column: 1, scope: !9935)
!10100 = !DILocation(line: 204, column: 1, scope: !9935)
!10101 = !DILocation(line: 205, column: 1, scope: !9935)
!10102 = !DILocation(line: 206, column: 1, scope: !9935)
!10103 = !DILocation(line: 207, column: 1, scope: !9935)
!10104 = !DILocation(line: 208, column: 1, scope: !9935)
!10105 = !DILocation(line: 209, column: 1, scope: !9935)
!10106 = !DILocation(line: 210, column: 1, scope: !9935)
!10107 = !DILocation(line: 211, column: 1, scope: !9935)
!10108 = !DILocation(line: 212, column: 1, scope: !9935)
!10109 = !DILocation(line: 213, column: 1, scope: !9935)
!10110 = !DILocation(line: 215, column: 1, scope: !9935)
!10111 = !DILocation(line: 216, column: 1, scope: !9935)
!10112 = !DILocation(line: 217, column: 1, scope: !9935)
!10113 = !DILocation(line: 218, column: 1, scope: !9935)
!10114 = !DILocation(line: 219, column: 1, scope: !9935)
!10115 = !DILocation(line: 220, column: 1, scope: !9935)
!10116 = !DILocation(line: 221, column: 1, scope: !9935)
!10117 = !DILocation(line: 222, column: 1, scope: !9935)
!10118 = !DILocation(line: 223, column: 1, scope: !9935)
!10119 = !DILocation(line: 224, column: 1, scope: !9935)
!10120 = !DILocation(line: 225, column: 1, scope: !9935)
!10121 = !DILocation(line: 226, column: 1, scope: !9935)
!10122 = !DILocation(line: 227, column: 1, scope: !9935)
!10123 = !DILocation(line: 228, column: 1, scope: !9935)
!10124 = !DILocation(line: 229, column: 1, scope: !9935)
!10125 = !DILocation(line: 230, column: 1, scope: !9935)
!10126 = !DILocation(line: 231, column: 1, scope: !9935)
!10127 = !DILocation(line: 232, column: 1, scope: !9935)
!10128 = !DILocation(line: 233, column: 1, scope: !9935)
!10129 = !DILocation(line: 234, column: 1, scope: !9935)
!10130 = !DILocation(line: 235, column: 1, scope: !9935)
!10131 = !DILocation(line: 236, column: 1, scope: !9935)
!10132 = !DILocation(line: 237, column: 1, scope: !9935)
!10133 = !DILocation(line: 239, column: 1, scope: !9935)
!10134 = !DILocation(line: 240, column: 1, scope: !9935)
!10135 = !DILocation(line: 241, column: 1, scope: !9935)
!10136 = !DILocation(line: 242, column: 1, scope: !9935)
!10137 = !DILocation(line: 243, column: 1, scope: !9935)
!10138 = !DILocation(line: 244, column: 1, scope: !9935)
!10139 = !DILocation(line: 245, column: 1, scope: !9935)
!10140 = !DILocation(line: 246, column: 1, scope: !9935)
!10141 = !DILocation(line: 247, column: 1, scope: !9935)
!10142 = !DILocation(line: 248, column: 1, scope: !9935)
!10143 = !DILocation(line: 3175, column: 16, scope: !9919)
!10144 = !DILocation(line: 3175, column: 2, scope: !9919)
!10145 = !DILocation(line: 3175, column: 9, scope: !9919)
!10146 = !DILocation(line: 3175, column: 14, scope: !9919)
!10147 = !DILocation(line: 3176, column: 14, scope: !9919)
!10148 = !DILocation(line: 3176, column: 21, scope: !9919)
!10149 = !DILocation(line: 3176, column: 30, scope: !9919)
!10150 = !DILocation(line: 3176, column: 2, scope: !9919)
!10151 = !DILocation(line: 3177, column: 18, scope: !9919)
!10152 = !DILocation(line: 3177, column: 2, scope: !9919)
!10153 = !DILocation(line: 3177, column: 9, scope: !9919)
!10154 = !DILocation(line: 3177, column: 16, scope: !9919)
!10155 = !DILocation(line: 3178, column: 16, scope: !9919)
!10156 = !DILocation(line: 3178, column: 2, scope: !9919)
!10157 = !DILocation(line: 3178, column: 9, scope: !9919)
!10158 = !DILocation(line: 3178, column: 14, scope: !9919)
!10159 = !DILocation(line: 3180, column: 26, scope: !9919)
!10160 = !DILocation(line: 3180, column: 2, scope: !9919)
!10161 = !DILocation(line: 3182, column: 2, scope: !9919)
!10162 = !DILocation(line: 3182, column: 9, scope: !9919)
!10163 = !DILocation(line: 3182, column: 14, scope: !9919)
!10164 = !DILocation(line: 3183, column: 2, scope: !9919)
!10165 = !DILocation(line: 3183, column: 9, scope: !9919)
!10166 = !DILocation(line: 3183, column: 23, scope: !9919)
!10167 = !DILocation(line: 3184, column: 1, scope: !9919)
!10168 = distinct !DISubprogram(name: "node_type_base_defaults", scope: !3, file: !3, line: 3130, type: !2789, scopeLine: 3131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10169 = !DILocalVariable(name: "ntype", arg: 1, scope: !10168, file: !3, line: 3130, type: !2342)
!10170 = !DILocation(line: 3130, column: 48, scope: !10168)
!10171 = !DILocation(line: 3133, column: 24, scope: !10168)
!10172 = !DILocation(line: 3133, column: 2, scope: !10168)
!10173 = !DILocation(line: 3134, column: 2, scope: !10168)
!10174 = !DILocation(line: 3134, column: 9, scope: !10168)
!10175 = !DILocation(line: 3134, column: 16, scope: !10168)
!10176 = !DILocation(line: 3135, column: 2, scope: !10168)
!10177 = !DILocation(line: 3135, column: 9, scope: !10168)
!10178 = !DILocation(line: 3135, column: 19, scope: !10168)
!10179 = !DILocation(line: 3136, column: 2, scope: !10168)
!10180 = !DILocation(line: 3136, column: 9, scope: !10168)
!10181 = !DILocation(line: 3136, column: 19, scope: !10168)
!10182 = !DILocation(line: 3137, column: 1, scope: !10168)
!10183 = distinct !DISubprogram(name: "node_poll_default", scope: !3, file: !3, line: 3140, type: !10184, scopeLine: 3141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10184 = !DISubroutineType(types: !10185)
!10185 = !{!36, !2342, !2101}
!10186 = !DILocalVariable(name: "UNUSED_ntype", arg: 1, scope: !10183, file: !3, line: 3140, type: !2342)
!10187 = !DILocation(line: 3140, column: 41, scope: !10183)
!10188 = !DILocalVariable(name: "UNUSED_ntree", arg: 2, scope: !10183, file: !3, line: 3140, type: !2101)
!10189 = !DILocation(line: 3140, column: 67, scope: !10183)
!10190 = !DILocation(line: 3142, column: 2, scope: !10183)
!10191 = distinct !DISubprogram(name: "node_poll_instance_default", scope: !3, file: !3, line: 3146, type: !10192, scopeLine: 3147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10192 = !DISubroutineType(types: !10193)
!10193 = !{!36, !755, !2101}
!10194 = !DILocalVariable(name: "node", arg: 1, scope: !10191, file: !3, line: 3146, type: !755)
!10195 = !DILocation(line: 3146, column: 46, scope: !10191)
!10196 = !DILocalVariable(name: "ntree", arg: 2, scope: !10191, file: !3, line: 3146, type: !2101)
!10197 = !DILocation(line: 3146, column: 63, scope: !10191)
!10198 = !DILocation(line: 3148, column: 9, scope: !10191)
!10199 = !DILocation(line: 3148, column: 15, scope: !10191)
!10200 = !DILocation(line: 3148, column: 25, scope: !10191)
!10201 = !DILocation(line: 3148, column: 30, scope: !10191)
!10202 = !DILocation(line: 3148, column: 36, scope: !10191)
!10203 = !DILocation(line: 3148, column: 46, scope: !10191)
!10204 = !DILocation(line: 3148, column: 2, scope: !10191)
!10205 = distinct !DISubprogram(name: "node_type_base_custom", scope: !3, file: !3, line: 3186, type: !10206, scopeLine: 3187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10206 = !DISubroutineType(types: !10207)
!10207 = !{null, !2342, !681, !681, !114, !114}
!10208 = !DILocalVariable(name: "ntype", arg: 1, scope: !10205, file: !3, line: 3186, type: !2342)
!10209 = !DILocation(line: 3186, column: 39, scope: !10205)
!10210 = !DILocalVariable(name: "idname", arg: 2, scope: !10205, file: !3, line: 3186, type: !681)
!10211 = !DILocation(line: 3186, column: 58, scope: !10205)
!10212 = !DILocalVariable(name: "name", arg: 3, scope: !10205, file: !3, line: 3186, type: !681)
!10213 = !DILocation(line: 3186, column: 78, scope: !10205)
!10214 = !DILocalVariable(name: "nclass", arg: 4, scope: !10205, file: !3, line: 3186, type: !114)
!10215 = !DILocation(line: 3186, column: 90, scope: !10205)
!10216 = !DILocalVariable(name: "flag", arg: 5, scope: !10205, file: !3, line: 3186, type: !114)
!10217 = !DILocation(line: 3186, column: 104, scope: !10205)
!10218 = !DILocation(line: 3188, column: 14, scope: !10205)
!10219 = !DILocation(line: 3188, column: 21, scope: !10205)
!10220 = !DILocation(line: 3188, column: 29, scope: !10205)
!10221 = !DILocation(line: 3188, column: 2, scope: !10205)
!10222 = !DILocation(line: 3189, column: 2, scope: !10205)
!10223 = !DILocation(line: 3189, column: 9, scope: !10205)
!10224 = !DILocation(line: 3189, column: 14, scope: !10205)
!10225 = !DILocation(line: 3190, column: 14, scope: !10205)
!10226 = !DILocation(line: 3190, column: 21, scope: !10205)
!10227 = !DILocation(line: 3190, column: 30, scope: !10205)
!10228 = !DILocation(line: 3190, column: 2, scope: !10205)
!10229 = !DILocation(line: 3191, column: 18, scope: !10205)
!10230 = !DILocation(line: 3191, column: 2, scope: !10205)
!10231 = !DILocation(line: 3191, column: 9, scope: !10205)
!10232 = !DILocation(line: 3191, column: 16, scope: !10205)
!10233 = !DILocation(line: 3192, column: 16, scope: !10205)
!10234 = !DILocation(line: 3192, column: 2, scope: !10205)
!10235 = !DILocation(line: 3192, column: 9, scope: !10205)
!10236 = !DILocation(line: 3192, column: 14, scope: !10205)
!10237 = !DILocation(line: 3194, column: 26, scope: !10205)
!10238 = !DILocation(line: 3194, column: 2, scope: !10205)
!10239 = !DILocation(line: 3195, column: 1, scope: !10205)
!10240 = distinct !DISubprogram(name: "node_type_socket_templates", scope: !3, file: !3, line: 3222, type: !10241, scopeLine: 3223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10241 = !DISubroutineType(types: !10242)
!10242 = !{null, !605, !10243, !10243}
!10243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!10244 = !DILocalVariable(name: "ntype", arg: 1, scope: !10240, file: !3, line: 3222, type: !605)
!10245 = !DILocation(line: 3222, column: 51, scope: !10240)
!10246 = !DILocalVariable(name: "inputs", arg: 2, scope: !10240, file: !3, line: 3222, type: !10243)
!10247 = !DILocation(line: 3222, column: 86, scope: !10240)
!10248 = !DILocalVariable(name: "outputs", arg: 3, scope: !10240, file: !3, line: 3222, type: !10243)
!10249 = !DILocation(line: 3222, column: 122, scope: !10240)
!10250 = !DILocalVariable(name: "ntemp", scope: !10240, file: !3, line: 3224, type: !626)
!10251 = !DILocation(line: 3224, column: 23, scope: !10240)
!10252 = !DILocation(line: 3226, column: 18, scope: !10240)
!10253 = !DILocation(line: 3226, column: 2, scope: !10240)
!10254 = !DILocation(line: 3226, column: 9, scope: !10240)
!10255 = !DILocation(line: 3226, column: 16, scope: !10240)
!10256 = !DILocation(line: 3227, column: 19, scope: !10240)
!10257 = !DILocation(line: 3227, column: 2, scope: !10240)
!10258 = !DILocation(line: 3227, column: 9, scope: !10240)
!10259 = !DILocation(line: 3227, column: 17, scope: !10240)
!10260 = !DILocation(line: 3230, column: 6, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 3230, column: 6)
!10262 = !DILocation(line: 3230, column: 6, scope: !10240)
!10263 = !DILocation(line: 3232, column: 16, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 3232, column: 3)
!10265 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 3230, column: 14)
!10266 = !DILocation(line: 3232, column: 14, scope: !10264)
!10267 = !DILocation(line: 3232, column: 8, scope: !10264)
!10268 = !DILocation(line: 3232, column: 24, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10264, file: !3, line: 3232, column: 3)
!10270 = !DILocation(line: 3232, column: 31, scope: !10269)
!10271 = !DILocation(line: 3232, column: 36, scope: !10269)
!10272 = !DILocation(line: 3232, column: 3, scope: !10264)
!10273 = !DILocation(line: 3233, column: 4, scope: !10269)
!10274 = !DILocation(line: 3233, column: 11, scope: !10269)
!10275 = !DILocation(line: 3233, column: 25, scope: !10269)
!10276 = !DILocation(line: 3232, column: 42, scope: !10269)
!10277 = !DILocation(line: 3232, column: 3, scope: !10269)
!10278 = distinct !{!10278, !10272, !10279}
!10279 = !DILocation(line: 3233, column: 27, scope: !10264)
!10280 = !DILocation(line: 3235, column: 16, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 3235, column: 3)
!10282 = !DILocation(line: 3235, column: 14, scope: !10281)
!10283 = !DILocation(line: 3235, column: 8, scope: !10281)
!10284 = !DILocation(line: 3235, column: 24, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 3235, column: 3)
!10286 = !DILocation(line: 3235, column: 31, scope: !10285)
!10287 = !DILocation(line: 3235, column: 36, scope: !10285)
!10288 = !DILocation(line: 3235, column: 3, scope: !10281)
!10289 = !DILocation(line: 3236, column: 16, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10285, file: !3, line: 3235, column: 51)
!10291 = !DILocation(line: 3236, column: 23, scope: !10290)
!10292 = !DILocation(line: 3236, column: 35, scope: !10290)
!10293 = !DILocation(line: 3236, column: 42, scope: !10290)
!10294 = !DILocation(line: 3236, column: 4, scope: !10290)
!10295 = !DILocation(line: 3237, column: 38, scope: !10290)
!10296 = !DILocation(line: 3237, column: 46, scope: !10290)
!10297 = !DILocation(line: 3237, column: 53, scope: !10290)
!10298 = !DILocation(line: 3237, column: 60, scope: !10290)
!10299 = !DILocation(line: 3237, column: 4, scope: !10290)
!10300 = !DILocation(line: 3238, column: 3, scope: !10290)
!10301 = !DILocation(line: 3235, column: 42, scope: !10285)
!10302 = !DILocation(line: 3235, column: 3, scope: !10285)
!10303 = distinct !{!10303, !10288, !10304}
!10304 = !DILocation(line: 3238, column: 3, scope: !10281)
!10305 = !DILocation(line: 3239, column: 2, scope: !10265)
!10306 = !DILocation(line: 3240, column: 6, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 3240, column: 6)
!10308 = !DILocation(line: 3240, column: 6, scope: !10240)
!10309 = !DILocation(line: 3242, column: 16, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10311, file: !3, line: 3242, column: 3)
!10311 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 3240, column: 15)
!10312 = !DILocation(line: 3242, column: 14, scope: !10310)
!10313 = !DILocation(line: 3242, column: 8, scope: !10310)
!10314 = !DILocation(line: 3242, column: 25, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10310, file: !3, line: 3242, column: 3)
!10316 = !DILocation(line: 3242, column: 32, scope: !10315)
!10317 = !DILocation(line: 3242, column: 37, scope: !10315)
!10318 = !DILocation(line: 3242, column: 3, scope: !10310)
!10319 = !DILocation(line: 3243, column: 4, scope: !10315)
!10320 = !DILocation(line: 3243, column: 11, scope: !10315)
!10321 = !DILocation(line: 3243, column: 25, scope: !10315)
!10322 = !DILocation(line: 3242, column: 43, scope: !10315)
!10323 = !DILocation(line: 3242, column: 3, scope: !10315)
!10324 = distinct !{!10324, !10318, !10325}
!10325 = !DILocation(line: 3243, column: 27, scope: !10310)
!10326 = !DILocation(line: 3245, column: 16, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10311, file: !3, line: 3245, column: 3)
!10328 = !DILocation(line: 3245, column: 14, scope: !10327)
!10329 = !DILocation(line: 3245, column: 8, scope: !10327)
!10330 = !DILocation(line: 3245, column: 25, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 3245, column: 3)
!10332 = !DILocation(line: 3245, column: 32, scope: !10331)
!10333 = !DILocation(line: 3245, column: 37, scope: !10331)
!10334 = !DILocation(line: 3245, column: 3, scope: !10327)
!10335 = !DILocation(line: 3246, column: 16, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10331, file: !3, line: 3245, column: 52)
!10337 = !DILocation(line: 3246, column: 23, scope: !10336)
!10338 = !DILocation(line: 3246, column: 35, scope: !10336)
!10339 = !DILocation(line: 3246, column: 42, scope: !10336)
!10340 = !DILocation(line: 3246, column: 4, scope: !10336)
!10341 = !DILocation(line: 3247, column: 38, scope: !10336)
!10342 = !DILocation(line: 3247, column: 47, scope: !10336)
!10343 = !DILocation(line: 3247, column: 54, scope: !10336)
!10344 = !DILocation(line: 3247, column: 61, scope: !10336)
!10345 = !DILocation(line: 3247, column: 4, scope: !10336)
!10346 = !DILocation(line: 3248, column: 3, scope: !10336)
!10347 = !DILocation(line: 3245, column: 43, scope: !10331)
!10348 = !DILocation(line: 3245, column: 3, scope: !10331)
!10349 = distinct !{!10349, !10334, !10350}
!10350 = !DILocation(line: 3248, column: 3, scope: !10327)
!10351 = !DILocation(line: 3249, column: 2, scope: !10311)
!10352 = !DILocation(line: 3250, column: 1, scope: !10240)
!10353 = distinct !DISubprogram(name: "unique_socket_template_identifier", scope: !3, file: !3, line: 3213, type: !10354, scopeLine: 3214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10354 = !DISubroutineType(types: !10355)
!10355 = !{null, !626, !626, !681, !101}
!10356 = !DILocalVariable(name: "list", arg: 1, scope: !10353, file: !3, line: 3213, type: !626)
!10357 = !DILocation(line: 3213, column: 68, scope: !10353)
!10358 = !DILocalVariable(name: "ntemp", arg: 2, scope: !10353, file: !3, line: 3213, type: !626)
!10359 = !DILocation(line: 3213, column: 95, scope: !10353)
!10360 = !DILocalVariable(name: "defname", arg: 3, scope: !10353, file: !3, line: 3213, type: !681)
!10361 = !DILocation(line: 3213, column: 113, scope: !10353)
!10362 = !DILocalVariable(name: "delim", arg: 4, scope: !10353, file: !3, line: 3213, type: !101)
!10363 = !DILocation(line: 3213, column: 129, scope: !10353)
!10364 = !DILocalVariable(name: "data", scope: !10353, file: !3, line: 3215, type: !10365)
!10365 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10353, file: !3, line: 3215, size: 128, elements: !10366)
!10366 = !{!10367, !10368}
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10365, file: !3, line: 3215, baseType: !626, size: 64)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "ntemp", scope: !10365, file: !3, line: 3215, baseType: !626, size: 64, offset: 64)
!10369 = !DILocation(line: 3215, column: 66, scope: !10353)
!10370 = !DILocation(line: 3216, column: 14, scope: !10353)
!10371 = !DILocation(line: 3216, column: 7, scope: !10353)
!10372 = !DILocation(line: 3216, column: 12, scope: !10353)
!10373 = !DILocation(line: 3217, column: 15, scope: !10353)
!10374 = !DILocation(line: 3217, column: 7, scope: !10353)
!10375 = !DILocation(line: 3217, column: 13, scope: !10353)
!10376 = !DILocation(line: 3219, column: 61, scope: !10353)
!10377 = !DILocation(line: 3219, column: 68, scope: !10353)
!10378 = !DILocation(line: 3219, column: 77, scope: !10353)
!10379 = !DILocation(line: 3219, column: 84, scope: !10353)
!10380 = !DILocation(line: 3219, column: 91, scope: !10353)
!10381 = !DILocation(line: 3219, column: 2, scope: !10353)
!10382 = !DILocation(line: 3220, column: 1, scope: !10353)
!10383 = distinct !DISubprogram(name: "node_type_init", scope: !3, file: !3, line: 3252, type: !10384, scopeLine: 3253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10384 = !DISubroutineType(types: !10385)
!10385 = !{null, !605, !594}
!10386 = !DILocalVariable(name: "ntype", arg: 1, scope: !10383, file: !3, line: 3252, type: !605)
!10387 = !DILocation(line: 3252, column: 39, scope: !10383)
!10388 = !DILocalVariable(name: "initfunc", arg: 2, scope: !10383, file: !3, line: 3252, type: !594)
!10389 = !DILocation(line: 3252, column: 53, scope: !10383)
!10390 = !DILocation(line: 3254, column: 20, scope: !10383)
!10391 = !DILocation(line: 3254, column: 2, scope: !10383)
!10392 = !DILocation(line: 3254, column: 9, scope: !10383)
!10393 = !DILocation(line: 3254, column: 18, scope: !10383)
!10394 = !DILocation(line: 3255, column: 1, scope: !10383)
!10395 = distinct !DISubprogram(name: "node_type_size", scope: !3, file: !3, line: 3257, type: !10396, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10396 = !DISubroutineType(types: !10397)
!10397 = !{null, !605, !36, !36, !36}
!10398 = !DILocalVariable(name: "ntype", arg: 1, scope: !10395, file: !3, line: 3257, type: !605)
!10399 = !DILocation(line: 3257, column: 39, scope: !10395)
!10400 = !DILocalVariable(name: "width", arg: 2, scope: !10395, file: !3, line: 3257, type: !36)
!10401 = !DILocation(line: 3257, column: 50, scope: !10395)
!10402 = !DILocalVariable(name: "minwidth", arg: 3, scope: !10395, file: !3, line: 3257, type: !36)
!10403 = !DILocation(line: 3257, column: 61, scope: !10395)
!10404 = !DILocalVariable(name: "maxwidth", arg: 4, scope: !10395, file: !3, line: 3257, type: !36)
!10405 = !DILocation(line: 3257, column: 75, scope: !10395)
!10406 = !DILocation(line: 3259, column: 17, scope: !10395)
!10407 = !DILocation(line: 3259, column: 2, scope: !10395)
!10408 = !DILocation(line: 3259, column: 9, scope: !10395)
!10409 = !DILocation(line: 3259, column: 15, scope: !10395)
!10410 = !DILocation(line: 3260, column: 20, scope: !10395)
!10411 = !DILocation(line: 3260, column: 2, scope: !10395)
!10412 = !DILocation(line: 3260, column: 9, scope: !10395)
!10413 = !DILocation(line: 3260, column: 18, scope: !10395)
!10414 = !DILocation(line: 3261, column: 6, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 3261, column: 6)
!10416 = !DILocation(line: 3261, column: 18, scope: !10415)
!10417 = !DILocation(line: 3261, column: 15, scope: !10415)
!10418 = !DILocation(line: 3261, column: 6, scope: !10395)
!10419 = !DILocation(line: 3262, column: 3, scope: !10415)
!10420 = !DILocation(line: 3262, column: 10, scope: !10415)
!10421 = !DILocation(line: 3262, column: 19, scope: !10415)
!10422 = !DILocation(line: 3264, column: 21, scope: !10415)
!10423 = !DILocation(line: 3264, column: 3, scope: !10415)
!10424 = !DILocation(line: 3264, column: 10, scope: !10415)
!10425 = !DILocation(line: 3264, column: 19, scope: !10415)
!10426 = !DILocation(line: 3265, column: 1, scope: !10395)
!10427 = distinct !DISubprogram(name: "node_type_size_preset", scope: !3, file: !3, line: 3267, type: !10428, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10428 = !DISubroutineType(types: !10429)
!10429 = !{null, !605, !10430}
!10430 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNodeSizePreset", file: !29, line: 278, baseType: !28)
!10431 = !DILocalVariable(name: "ntype", arg: 1, scope: !10427, file: !3, line: 3267, type: !605)
!10432 = !DILocation(line: 3267, column: 46, scope: !10427)
!10433 = !DILocalVariable(name: "size", arg: 2, scope: !10427, file: !3, line: 3267, type: !10430)
!10434 = !DILocation(line: 3267, column: 69, scope: !10427)
!10435 = !DILocation(line: 3269, column: 10, scope: !10427)
!10436 = !DILocation(line: 3269, column: 2, scope: !10427)
!10437 = !DILocation(line: 3271, column: 19, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10427, file: !3, line: 3269, column: 16)
!10439 = !DILocation(line: 3271, column: 4, scope: !10438)
!10440 = !DILocation(line: 3272, column: 4, scope: !10438)
!10441 = !DILocation(line: 3274, column: 19, scope: !10438)
!10442 = !DILocation(line: 3274, column: 4, scope: !10438)
!10443 = !DILocation(line: 3275, column: 4, scope: !10438)
!10444 = !DILocation(line: 3277, column: 19, scope: !10438)
!10445 = !DILocation(line: 3277, column: 4, scope: !10438)
!10446 = !DILocation(line: 3278, column: 4, scope: !10438)
!10447 = !DILocation(line: 3280, column: 19, scope: !10438)
!10448 = !DILocation(line: 3280, column: 4, scope: !10438)
!10449 = !DILocation(line: 3281, column: 4, scope: !10438)
!10450 = !DILocation(line: 3283, column: 1, scope: !10427)
!10451 = distinct !DISubprogram(name: "node_type_storage", scope: !3, file: !3, line: 3285, type: !10452, scopeLine: 3289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10452 = !DISubroutineType(types: !10453)
!10453 = !{null, !2342, !681, !829, !833}
!10454 = !DILocalVariable(name: "ntype", arg: 1, scope: !10451, file: !3, line: 3285, type: !2342)
!10455 = !DILocation(line: 3285, column: 35, scope: !10451)
!10456 = !DILocalVariable(name: "storagename", arg: 2, scope: !10451, file: !3, line: 3286, type: !681)
!10457 = !DILocation(line: 3286, column: 14, scope: !10451)
!10458 = !DILocalVariable(name: "freefunc", arg: 3, scope: !10451, file: !3, line: 3287, type: !829)
!10459 = !DILocation(line: 3287, column: 9, scope: !10451)
!10460 = !DILocalVariable(name: "copyfunc", arg: 4, scope: !10451, file: !3, line: 3288, type: !833)
!10461 = !DILocation(line: 3288, column: 9, scope: !10451)
!10462 = !DILocation(line: 3290, column: 6, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10451, file: !3, line: 3290, column: 6)
!10464 = !DILocation(line: 3290, column: 6, scope: !10451)
!10465 = !DILocation(line: 3291, column: 15, scope: !10463)
!10466 = !DILocation(line: 3291, column: 22, scope: !10463)
!10467 = !DILocation(line: 3291, column: 35, scope: !10463)
!10468 = !DILocation(line: 3291, column: 3, scope: !10463)
!10469 = !DILocation(line: 3293, column: 3, scope: !10463)
!10470 = !DILocation(line: 3293, column: 10, scope: !10463)
!10471 = !DILocation(line: 3293, column: 25, scope: !10463)
!10472 = !DILocation(line: 3294, column: 20, scope: !10451)
!10473 = !DILocation(line: 3294, column: 2, scope: !10451)
!10474 = !DILocation(line: 3294, column: 9, scope: !10451)
!10475 = !DILocation(line: 3294, column: 18, scope: !10451)
!10476 = !DILocation(line: 3295, column: 20, scope: !10451)
!10477 = !DILocation(line: 3295, column: 2, scope: !10451)
!10478 = !DILocation(line: 3295, column: 9, scope: !10451)
!10479 = !DILocation(line: 3295, column: 18, scope: !10451)
!10480 = !DILocation(line: 3296, column: 1, scope: !10451)
!10481 = distinct !DISubprogram(name: "node_type_label", scope: !3, file: !3, line: 3298, type: !10482, scopeLine: 3299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10482 = !DISubroutineType(types: !10483)
!10483 = !{null, !605, !813}
!10484 = !DILocalVariable(name: "ntype", arg: 1, scope: !10481, file: !3, line: 3298, type: !605)
!10485 = !DILocation(line: 3298, column: 40, scope: !10481)
!10486 = !DILocalVariable(name: "labelfunc", arg: 2, scope: !10481, file: !3, line: 3298, type: !813)
!10487 = !DILocation(line: 3298, column: 54, scope: !10481)
!10488 = !DILocation(line: 3300, column: 21, scope: !10481)
!10489 = !DILocation(line: 3300, column: 2, scope: !10481)
!10490 = !DILocation(line: 3300, column: 9, scope: !10481)
!10491 = !DILocation(line: 3300, column: 19, scope: !10481)
!10492 = !DILocation(line: 3301, column: 1, scope: !10481)
!10493 = distinct !DISubprogram(name: "node_type_update", scope: !3, file: !3, line: 3303, type: !10494, scopeLine: 3306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10494 = !DISubroutineType(types: !10495)
!10495 = !{null, !605, !594, !824}
!10496 = !DILocalVariable(name: "ntype", arg: 1, scope: !10493, file: !3, line: 3303, type: !605)
!10497 = !DILocation(line: 3303, column: 41, scope: !10493)
!10498 = !DILocalVariable(name: "updatefunc", arg: 2, scope: !10493, file: !3, line: 3304, type: !594)
!10499 = !DILocation(line: 3304, column: 30, scope: !10493)
!10500 = !DILocalVariable(name: "verifyfunc", arg: 3, scope: !10493, file: !3, line: 3305, type: !824)
!10501 = !DILocation(line: 3305, column: 30, scope: !10493)
!10502 = !DILocation(line: 3307, column: 22, scope: !10493)
!10503 = !DILocation(line: 3307, column: 2, scope: !10493)
!10504 = !DILocation(line: 3307, column: 9, scope: !10493)
!10505 = !DILocation(line: 3307, column: 20, scope: !10493)
!10506 = !DILocation(line: 3308, column: 22, scope: !10493)
!10507 = !DILocation(line: 3308, column: 2, scope: !10493)
!10508 = !DILocation(line: 3308, column: 9, scope: !10493)
!10509 = !DILocation(line: 3308, column: 20, scope: !10493)
!10510 = !DILocation(line: 3309, column: 1, scope: !10493)
!10511 = distinct !DISubprogram(name: "node_type_exec", scope: !3, file: !3, line: 3311, type: !10512, scopeLine: 3312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10512 = !DISubroutineType(types: !10513)
!10513 = !{null, !605, !858, !865, !867}
!10514 = !DILocalVariable(name: "ntype", arg: 1, scope: !10511, file: !3, line: 3311, type: !605)
!10515 = !DILocation(line: 3311, column: 39, scope: !10511)
!10516 = !DILocalVariable(name: "initexecfunc", arg: 2, scope: !10511, file: !3, line: 3311, type: !858)
!10517 = !DILocation(line: 3311, column: 67, scope: !10511)
!10518 = !DILocalVariable(name: "freeexecfunc", arg: 3, scope: !10511, file: !3, line: 3311, type: !865)
!10519 = !DILocation(line: 3311, column: 102, scope: !10511)
!10520 = !DILocalVariable(name: "execfunc", arg: 4, scope: !10511, file: !3, line: 3311, type: !867)
!10521 = !DILocation(line: 3311, column: 133, scope: !10511)
!10522 = !DILocation(line: 3313, column: 24, scope: !10511)
!10523 = !DILocation(line: 3313, column: 2, scope: !10511)
!10524 = !DILocation(line: 3313, column: 9, scope: !10511)
!10525 = !DILocation(line: 3313, column: 22, scope: !10511)
!10526 = !DILocation(line: 3314, column: 24, scope: !10511)
!10527 = !DILocation(line: 3314, column: 2, scope: !10511)
!10528 = !DILocation(line: 3314, column: 9, scope: !10511)
!10529 = !DILocation(line: 3314, column: 22, scope: !10511)
!10530 = !DILocation(line: 3315, column: 20, scope: !10511)
!10531 = !DILocation(line: 3315, column: 2, scope: !10511)
!10532 = !DILocation(line: 3315, column: 9, scope: !10511)
!10533 = !DILocation(line: 3315, column: 18, scope: !10511)
!10534 = !DILocation(line: 3316, column: 1, scope: !10511)
!10535 = distinct !DISubprogram(name: "node_type_gpu", scope: !3, file: !3, line: 3318, type: !10536, scopeLine: 3319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10536 = !DISubroutineType(types: !10537)
!10537 = !{null, !605, !876}
!10538 = !DILocalVariable(name: "ntype", arg: 1, scope: !10535, file: !3, line: 3318, type: !605)
!10539 = !DILocation(line: 3318, column: 38, scope: !10535)
!10540 = !DILocalVariable(name: "gpufunc", arg: 2, scope: !10535, file: !3, line: 3318, type: !876)
!10541 = !DILocation(line: 3318, column: 65, scope: !10535)
!10542 = !DILocation(line: 3320, column: 19, scope: !10535)
!10543 = !DILocation(line: 3320, column: 2, scope: !10535)
!10544 = !DILocation(line: 3320, column: 9, scope: !10535)
!10545 = !DILocation(line: 3320, column: 17, scope: !10535)
!10546 = !DILocation(line: 3321, column: 1, scope: !10535)
!10547 = distinct !DISubprogram(name: "node_type_internal_links", scope: !3, file: !3, line: 3323, type: !10548, scopeLine: 3324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10548 = !DISubroutineType(types: !10549)
!10549 = !{null, !2342, !10550}
!10550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!10551 = !DILocalVariable(name: "ntype", arg: 1, scope: !10547, file: !3, line: 3323, type: !2342)
!10552 = !DILocation(line: 3323, column: 42, scope: !10547)
!10553 = !DILocalVariable(name: "update_internal_links", arg: 2, scope: !10547, file: !3, line: 3323, type: !10550)
!10554 = !DILocation(line: 3323, column: 56, scope: !10547)
!10555 = !DILocation(line: 3325, column: 33, scope: !10547)
!10556 = !DILocation(line: 3325, column: 2, scope: !10547)
!10557 = !DILocation(line: 3325, column: 9, scope: !10547)
!10558 = !DILocation(line: 3325, column: 31, scope: !10547)
!10559 = !DILocation(line: 3326, column: 1, scope: !10547)
!10560 = distinct !DISubprogram(name: "node_type_compatibility", scope: !3, file: !3, line: 3328, type: !10561, scopeLine: 3329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10561 = !DISubroutineType(types: !10562)
!10562 = !{null, !605, !114}
!10563 = !DILocalVariable(name: "ntype", arg: 1, scope: !10560, file: !3, line: 3328, type: !605)
!10564 = !DILocation(line: 3328, column: 48, scope: !10560)
!10565 = !DILocalVariable(name: "compatibility", arg: 2, scope: !10560, file: !3, line: 3328, type: !114)
!10566 = !DILocation(line: 3328, column: 61, scope: !10560)
!10567 = !DILocation(line: 3330, column: 25, scope: !10560)
!10568 = !DILocation(line: 3330, column: 2, scope: !10560)
!10569 = !DILocation(line: 3330, column: 9, scope: !10560)
!10570 = !DILocation(line: 3330, column: 23, scope: !10560)
!10571 = !DILocation(line: 3331, column: 1, scope: !10560)
!10572 = distinct !DISubprogram(name: "init_nodesystem", scope: !3, file: !3, line: 3598, type: !8490, scopeLine: 3599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10573 = !DILocation(line: 3600, column: 23, scope: !10572)
!10574 = !DILocation(line: 3600, column: 21, scope: !10572)
!10575 = !DILocation(line: 3601, column: 19, scope: !10572)
!10576 = !DILocation(line: 3601, column: 17, scope: !10572)
!10577 = !DILocation(line: 3602, column: 25, scope: !10572)
!10578 = !DILocation(line: 3602, column: 23, scope: !10572)
!10579 = !DILocation(line: 3604, column: 2, scope: !10572)
!10580 = !DILocation(line: 3606, column: 2, scope: !10572)
!10581 = !DILocation(line: 3608, column: 2, scope: !10572)
!10582 = !DILocation(line: 3609, column: 2, scope: !10572)
!10583 = !DILocation(line: 3610, column: 2, scope: !10572)
!10584 = !DILocation(line: 3612, column: 2, scope: !10572)
!10585 = !DILocation(line: 3613, column: 2, scope: !10572)
!10586 = !DILocation(line: 3614, column: 2, scope: !10572)
!10587 = !DILocation(line: 3615, column: 2, scope: !10572)
!10588 = !DILocation(line: 3617, column: 2, scope: !10572)
!10589 = !DILocation(line: 3618, column: 2, scope: !10572)
!10590 = !DILocation(line: 3619, column: 2, scope: !10572)
!10591 = !DILocation(line: 3620, column: 1, scope: !10572)
!10592 = distinct !DISubprogram(name: "register_undefined_types", scope: !3, file: !3, line: 3342, type: !8490, scopeLine: 3343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10593 = !DILocation(line: 3348, column: 2, scope: !10592)
!10594 = !DILocation(line: 3349, column: 2, scope: !10592)
!10595 = !DILocation(line: 3350, column: 2, scope: !10592)
!10596 = !DILocation(line: 3352, column: 2, scope: !10592)
!10597 = !DILocation(line: 3353, column: 25, scope: !10592)
!10598 = !DILocation(line: 3355, column: 2, scope: !10592)
!10599 = !DILocation(line: 3357, column: 31, scope: !10592)
!10600 = !DILocation(line: 3358, column: 34, scope: !10592)
!10601 = !DILocation(line: 3359, column: 1, scope: !10592)
!10602 = distinct !DISubprogram(name: "registerCompositNodes", scope: !3, file: !3, line: 3361, type: !8490, scopeLine: 3362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10603 = !DILocation(line: 3363, column: 2, scope: !10602)
!10604 = !DILocation(line: 3365, column: 2, scope: !10602)
!10605 = !DILocation(line: 3366, column: 2, scope: !10602)
!10606 = !DILocation(line: 3367, column: 2, scope: !10602)
!10607 = !DILocation(line: 3368, column: 2, scope: !10602)
!10608 = !DILocation(line: 3369, column: 2, scope: !10602)
!10609 = !DILocation(line: 3370, column: 2, scope: !10602)
!10610 = !DILocation(line: 3371, column: 2, scope: !10602)
!10611 = !DILocation(line: 3373, column: 2, scope: !10602)
!10612 = !DILocation(line: 3374, column: 2, scope: !10602)
!10613 = !DILocation(line: 3375, column: 2, scope: !10602)
!10614 = !DILocation(line: 3376, column: 2, scope: !10602)
!10615 = !DILocation(line: 3377, column: 2, scope: !10602)
!10616 = !DILocation(line: 3379, column: 2, scope: !10602)
!10617 = !DILocation(line: 3380, column: 2, scope: !10602)
!10618 = !DILocation(line: 3381, column: 2, scope: !10602)
!10619 = !DILocation(line: 3382, column: 2, scope: !10602)
!10620 = !DILocation(line: 3383, column: 2, scope: !10602)
!10621 = !DILocation(line: 3384, column: 2, scope: !10602)
!10622 = !DILocation(line: 3385, column: 2, scope: !10602)
!10623 = !DILocation(line: 3386, column: 2, scope: !10602)
!10624 = !DILocation(line: 3387, column: 2, scope: !10602)
!10625 = !DILocation(line: 3388, column: 2, scope: !10602)
!10626 = !DILocation(line: 3390, column: 2, scope: !10602)
!10627 = !DILocation(line: 3391, column: 2, scope: !10602)
!10628 = !DILocation(line: 3392, column: 2, scope: !10602)
!10629 = !DILocation(line: 3393, column: 2, scope: !10602)
!10630 = !DILocation(line: 3394, column: 2, scope: !10602)
!10631 = !DILocation(line: 3396, column: 2, scope: !10602)
!10632 = !DILocation(line: 3397, column: 2, scope: !10602)
!10633 = !DILocation(line: 3398, column: 2, scope: !10602)
!10634 = !DILocation(line: 3399, column: 2, scope: !10602)
!10635 = !DILocation(line: 3400, column: 2, scope: !10602)
!10636 = !DILocation(line: 3401, column: 2, scope: !10602)
!10637 = !DILocation(line: 3402, column: 2, scope: !10602)
!10638 = !DILocation(line: 3403, column: 2, scope: !10602)
!10639 = !DILocation(line: 3404, column: 2, scope: !10602)
!10640 = !DILocation(line: 3405, column: 2, scope: !10602)
!10641 = !DILocation(line: 3407, column: 2, scope: !10602)
!10642 = !DILocation(line: 3408, column: 2, scope: !10602)
!10643 = !DILocation(line: 3409, column: 2, scope: !10602)
!10644 = !DILocation(line: 3410, column: 2, scope: !10602)
!10645 = !DILocation(line: 3411, column: 2, scope: !10602)
!10646 = !DILocation(line: 3412, column: 2, scope: !10602)
!10647 = !DILocation(line: 3413, column: 2, scope: !10602)
!10648 = !DILocation(line: 3414, column: 2, scope: !10602)
!10649 = !DILocation(line: 3415, column: 2, scope: !10602)
!10650 = !DILocation(line: 3416, column: 2, scope: !10602)
!10651 = !DILocation(line: 3417, column: 2, scope: !10602)
!10652 = !DILocation(line: 3418, column: 2, scope: !10602)
!10653 = !DILocation(line: 3419, column: 2, scope: !10602)
!10654 = !DILocation(line: 3420, column: 2, scope: !10602)
!10655 = !DILocation(line: 3422, column: 2, scope: !10602)
!10656 = !DILocation(line: 3423, column: 2, scope: !10602)
!10657 = !DILocation(line: 3424, column: 2, scope: !10602)
!10658 = !DILocation(line: 3425, column: 2, scope: !10602)
!10659 = !DILocation(line: 3426, column: 2, scope: !10602)
!10660 = !DILocation(line: 3427, column: 2, scope: !10602)
!10661 = !DILocation(line: 3428, column: 2, scope: !10602)
!10662 = !DILocation(line: 3429, column: 2, scope: !10602)
!10663 = !DILocation(line: 3430, column: 2, scope: !10602)
!10664 = !DILocation(line: 3431, column: 2, scope: !10602)
!10665 = !DILocation(line: 3433, column: 2, scope: !10602)
!10666 = !DILocation(line: 3434, column: 2, scope: !10602)
!10667 = !DILocation(line: 3435, column: 2, scope: !10602)
!10668 = !DILocation(line: 3436, column: 2, scope: !10602)
!10669 = !DILocation(line: 3437, column: 2, scope: !10602)
!10670 = !DILocation(line: 3438, column: 2, scope: !10602)
!10671 = !DILocation(line: 3439, column: 2, scope: !10602)
!10672 = !DILocation(line: 3440, column: 2, scope: !10602)
!10673 = !DILocation(line: 3441, column: 2, scope: !10602)
!10674 = !DILocation(line: 3442, column: 2, scope: !10602)
!10675 = !DILocation(line: 3443, column: 2, scope: !10602)
!10676 = !DILocation(line: 3444, column: 2, scope: !10602)
!10677 = !DILocation(line: 3445, column: 2, scope: !10602)
!10678 = !DILocation(line: 3447, column: 2, scope: !10602)
!10679 = !DILocation(line: 3448, column: 2, scope: !10602)
!10680 = !DILocation(line: 3449, column: 2, scope: !10602)
!10681 = !DILocation(line: 3450, column: 2, scope: !10602)
!10682 = !DILocation(line: 3451, column: 2, scope: !10602)
!10683 = !DILocation(line: 3452, column: 2, scope: !10602)
!10684 = !DILocation(line: 3453, column: 2, scope: !10602)
!10685 = !DILocation(line: 3455, column: 2, scope: !10602)
!10686 = !DILocation(line: 3456, column: 2, scope: !10602)
!10687 = !DILocation(line: 3457, column: 2, scope: !10602)
!10688 = !DILocation(line: 3458, column: 2, scope: !10602)
!10689 = !DILocation(line: 3459, column: 1, scope: !10602)
!10690 = distinct !DISubprogram(name: "registerShaderNodes", scope: !3, file: !3, line: 3461, type: !8490, scopeLine: 3462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10691 = !DILocation(line: 3463, column: 2, scope: !10690)
!10692 = !DILocation(line: 3465, column: 2, scope: !10690)
!10693 = !DILocation(line: 3466, column: 2, scope: !10690)
!10694 = !DILocation(line: 3467, column: 2, scope: !10690)
!10695 = !DILocation(line: 3468, column: 2, scope: !10690)
!10696 = !DILocation(line: 3469, column: 2, scope: !10690)
!10697 = !DILocation(line: 3470, column: 2, scope: !10690)
!10698 = !DILocation(line: 3471, column: 2, scope: !10690)
!10699 = !DILocation(line: 3472, column: 2, scope: !10690)
!10700 = !DILocation(line: 3473, column: 2, scope: !10690)
!10701 = !DILocation(line: 3474, column: 2, scope: !10690)
!10702 = !DILocation(line: 3475, column: 2, scope: !10690)
!10703 = !DILocation(line: 3476, column: 2, scope: !10690)
!10704 = !DILocation(line: 3477, column: 2, scope: !10690)
!10705 = !DILocation(line: 3478, column: 2, scope: !10690)
!10706 = !DILocation(line: 3479, column: 2, scope: !10690)
!10707 = !DILocation(line: 3480, column: 2, scope: !10690)
!10708 = !DILocation(line: 3481, column: 2, scope: !10690)
!10709 = !DILocation(line: 3482, column: 2, scope: !10690)
!10710 = !DILocation(line: 3483, column: 2, scope: !10690)
!10711 = !DILocation(line: 3484, column: 2, scope: !10690)
!10712 = !DILocation(line: 3485, column: 2, scope: !10690)
!10713 = !DILocation(line: 3486, column: 2, scope: !10690)
!10714 = !DILocation(line: 3487, column: 2, scope: !10690)
!10715 = !DILocation(line: 3488, column: 2, scope: !10690)
!10716 = !DILocation(line: 3489, column: 2, scope: !10690)
!10717 = !DILocation(line: 3490, column: 2, scope: !10690)
!10718 = !DILocation(line: 3491, column: 2, scope: !10690)
!10719 = !DILocation(line: 3492, column: 2, scope: !10690)
!10720 = !DILocation(line: 3493, column: 2, scope: !10690)
!10721 = !DILocation(line: 3494, column: 2, scope: !10690)
!10722 = !DILocation(line: 3495, column: 2, scope: !10690)
!10723 = !DILocation(line: 3496, column: 2, scope: !10690)
!10724 = !DILocation(line: 3497, column: 2, scope: !10690)
!10725 = !DILocation(line: 3499, column: 2, scope: !10690)
!10726 = !DILocation(line: 3500, column: 2, scope: !10690)
!10727 = !DILocation(line: 3501, column: 2, scope: !10690)
!10728 = !DILocation(line: 3502, column: 2, scope: !10690)
!10729 = !DILocation(line: 3503, column: 2, scope: !10690)
!10730 = !DILocation(line: 3504, column: 2, scope: !10690)
!10731 = !DILocation(line: 3505, column: 2, scope: !10690)
!10732 = !DILocation(line: 3506, column: 2, scope: !10690)
!10733 = !DILocation(line: 3507, column: 2, scope: !10690)
!10734 = !DILocation(line: 3508, column: 2, scope: !10690)
!10735 = !DILocation(line: 3510, column: 2, scope: !10690)
!10736 = !DILocation(line: 3511, column: 2, scope: !10690)
!10737 = !DILocation(line: 3512, column: 2, scope: !10690)
!10738 = !DILocation(line: 3513, column: 2, scope: !10690)
!10739 = !DILocation(line: 3514, column: 2, scope: !10690)
!10740 = !DILocation(line: 3515, column: 2, scope: !10690)
!10741 = !DILocation(line: 3516, column: 2, scope: !10690)
!10742 = !DILocation(line: 3517, column: 2, scope: !10690)
!10743 = !DILocation(line: 3518, column: 2, scope: !10690)
!10744 = !DILocation(line: 3519, column: 2, scope: !10690)
!10745 = !DILocation(line: 3520, column: 2, scope: !10690)
!10746 = !DILocation(line: 3521, column: 2, scope: !10690)
!10747 = !DILocation(line: 3522, column: 2, scope: !10690)
!10748 = !DILocation(line: 3523, column: 2, scope: !10690)
!10749 = !DILocation(line: 3524, column: 2, scope: !10690)
!10750 = !DILocation(line: 3525, column: 2, scope: !10690)
!10751 = !DILocation(line: 3526, column: 2, scope: !10690)
!10752 = !DILocation(line: 3527, column: 2, scope: !10690)
!10753 = !DILocation(line: 3528, column: 2, scope: !10690)
!10754 = !DILocation(line: 3530, column: 2, scope: !10690)
!10755 = !DILocation(line: 3531, column: 2, scope: !10690)
!10756 = !DILocation(line: 3532, column: 2, scope: !10690)
!10757 = !DILocation(line: 3533, column: 2, scope: !10690)
!10758 = !DILocation(line: 3535, column: 2, scope: !10690)
!10759 = !DILocation(line: 3536, column: 2, scope: !10690)
!10760 = !DILocation(line: 3537, column: 2, scope: !10690)
!10761 = !DILocation(line: 3538, column: 2, scope: !10690)
!10762 = !DILocation(line: 3539, column: 2, scope: !10690)
!10763 = !DILocation(line: 3540, column: 2, scope: !10690)
!10764 = !DILocation(line: 3541, column: 2, scope: !10690)
!10765 = !DILocation(line: 3542, column: 2, scope: !10690)
!10766 = !DILocation(line: 3543, column: 2, scope: !10690)
!10767 = !DILocation(line: 3544, column: 2, scope: !10690)
!10768 = !DILocation(line: 3545, column: 2, scope: !10690)
!10769 = !DILocation(line: 3546, column: 1, scope: !10690)
!10770 = distinct !DISubprogram(name: "registerTextureNodes", scope: !3, file: !3, line: 3548, type: !8490, scopeLine: 3549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10771 = !DILocation(line: 3550, column: 2, scope: !10770)
!10772 = !DILocation(line: 3553, column: 2, scope: !10770)
!10773 = !DILocation(line: 3554, column: 2, scope: !10770)
!10774 = !DILocation(line: 3555, column: 2, scope: !10770)
!10775 = !DILocation(line: 3556, column: 2, scope: !10770)
!10776 = !DILocation(line: 3557, column: 2, scope: !10770)
!10777 = !DILocation(line: 3558, column: 2, scope: !10770)
!10778 = !DILocation(line: 3559, column: 2, scope: !10770)
!10779 = !DILocation(line: 3560, column: 2, scope: !10770)
!10780 = !DILocation(line: 3561, column: 2, scope: !10770)
!10781 = !DILocation(line: 3562, column: 2, scope: !10770)
!10782 = !DILocation(line: 3563, column: 2, scope: !10770)
!10783 = !DILocation(line: 3564, column: 2, scope: !10770)
!10784 = !DILocation(line: 3565, column: 2, scope: !10770)
!10785 = !DILocation(line: 3567, column: 2, scope: !10770)
!10786 = !DILocation(line: 3568, column: 2, scope: !10770)
!10787 = !DILocation(line: 3569, column: 2, scope: !10770)
!10788 = !DILocation(line: 3570, column: 2, scope: !10770)
!10789 = !DILocation(line: 3571, column: 2, scope: !10770)
!10790 = !DILocation(line: 3572, column: 2, scope: !10770)
!10791 = !DILocation(line: 3574, column: 2, scope: !10770)
!10792 = !DILocation(line: 3575, column: 2, scope: !10770)
!10793 = !DILocation(line: 3576, column: 2, scope: !10770)
!10794 = !DILocation(line: 3577, column: 2, scope: !10770)
!10795 = !DILocation(line: 3578, column: 2, scope: !10770)
!10796 = !DILocation(line: 3579, column: 2, scope: !10770)
!10797 = !DILocation(line: 3581, column: 2, scope: !10770)
!10798 = !DILocation(line: 3582, column: 2, scope: !10770)
!10799 = !DILocation(line: 3583, column: 2, scope: !10770)
!10800 = !DILocation(line: 3584, column: 2, scope: !10770)
!10801 = !DILocation(line: 3586, column: 2, scope: !10770)
!10802 = !DILocation(line: 3587, column: 2, scope: !10770)
!10803 = !DILocation(line: 3588, column: 2, scope: !10770)
!10804 = !DILocation(line: 3589, column: 2, scope: !10770)
!10805 = !DILocation(line: 3590, column: 2, scope: !10770)
!10806 = !DILocation(line: 3591, column: 2, scope: !10770)
!10807 = !DILocation(line: 3592, column: 2, scope: !10770)
!10808 = !DILocation(line: 3593, column: 2, scope: !10770)
!10809 = !DILocation(line: 3594, column: 2, scope: !10770)
!10810 = !DILocation(line: 3595, column: 2, scope: !10770)
!10811 = !DILocation(line: 3596, column: 1, scope: !10770)
!10812 = distinct !DISubprogram(name: "free_nodesystem", scope: !3, file: !3, line: 3622, type: !8490, scopeLine: 3623, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10813 = !DILocation(line: 3624, column: 6, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 3624, column: 6)
!10815 = !DILocation(line: 3624, column: 6, scope: !10812)
!10816 = !DILocalVariable(name: "__node_type_iter__", scope: !10817, file: !3, line: 3625, type: !3676)
!10817 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 3625, column: 3)
!10818 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 3624, column: 22)
!10819 = !DILocation(line: 3625, column: 3, scope: !10817)
!10820 = !DILocation(line: 3625, column: 3, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10822, file: !3, line: 3625, column: 3)
!10822 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 3625, column: 3)
!10823 = !DILocation(line: 3625, column: 3, scope: !10822)
!10824 = !DILocalVariable(name: "nt", scope: !10825, file: !3, line: 3625, type: !2342)
!10825 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 3625, column: 3)
!10826 = !DILocation(line: 3625, column: 3, scope: !10825)
!10827 = !DILocation(line: 3626, column: 8, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 3626, column: 8)
!10829 = !DILocation(line: 3626, column: 12, scope: !10828)
!10830 = !DILocation(line: 3626, column: 16, scope: !10828)
!10831 = !DILocation(line: 3626, column: 8, scope: !10825)
!10832 = !DILocation(line: 3627, column: 5, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 3626, column: 22)
!10834 = !DILocation(line: 3627, column: 9, scope: !10833)
!10835 = !DILocation(line: 3627, column: 13, scope: !10833)
!10836 = !DILocation(line: 3627, column: 18, scope: !10833)
!10837 = !DILocation(line: 3627, column: 22, scope: !10833)
!10838 = !DILocation(line: 3627, column: 26, scope: !10833)
!10839 = !DILocation(line: 3628, column: 4, scope: !10833)
!10840 = !DILocation(line: 3629, column: 3, scope: !10825)
!10841 = distinct !{!10841, !10823, !10842}
!10842 = !DILocation(line: 3629, column: 3, scope: !10822)
!10843 = !DILocation(line: 3629, column: 3, scope: !10817)
!10844 = !DILocation(line: 3631, column: 18, scope: !10818)
!10845 = !DILocation(line: 3631, column: 3, scope: !10818)
!10846 = !DILocation(line: 3632, column: 18, scope: !10818)
!10847 = !DILocation(line: 3633, column: 2, scope: !10818)
!10848 = !DILocation(line: 3635, column: 6, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 3635, column: 6)
!10850 = !DILocation(line: 3635, column: 6, scope: !10812)
!10851 = !DILocalVariable(name: "__node_socket_type_iter__", scope: !10852, file: !3, line: 3636, type: !3676)
!10852 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 3636, column: 3)
!10853 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 3635, column: 28)
!10854 = !DILocation(line: 3636, column: 3, scope: !10852)
!10855 = !DILocation(line: 3636, column: 3, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !3, line: 3636, column: 3)
!10857 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 3636, column: 3)
!10858 = !DILocation(line: 3636, column: 3, scope: !10857)
!10859 = !DILocalVariable(name: "st", scope: !10860, file: !3, line: 3636, type: !2421)
!10860 = distinct !DILexicalBlock(scope: !10856, file: !3, line: 3636, column: 3)
!10861 = !DILocation(line: 3636, column: 3, scope: !10860)
!10862 = !DILocation(line: 3637, column: 8, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10860, file: !3, line: 3637, column: 8)
!10864 = !DILocation(line: 3637, column: 12, scope: !10863)
!10865 = !DILocation(line: 3637, column: 23, scope: !10863)
!10866 = !DILocation(line: 3637, column: 8, scope: !10860)
!10867 = !DILocation(line: 3638, column: 5, scope: !10863)
!10868 = !DILocation(line: 3638, column: 9, scope: !10863)
!10869 = !DILocation(line: 3638, column: 20, scope: !10863)
!10870 = !DILocation(line: 3638, column: 25, scope: !10863)
!10871 = !DILocation(line: 3638, column: 29, scope: !10863)
!10872 = !DILocation(line: 3638, column: 40, scope: !10863)
!10873 = !DILocation(line: 3639, column: 8, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10860, file: !3, line: 3639, column: 8)
!10875 = !DILocation(line: 3639, column: 12, scope: !10874)
!10876 = !DILocation(line: 3639, column: 26, scope: !10874)
!10877 = !DILocation(line: 3639, column: 8, scope: !10860)
!10878 = !DILocation(line: 3640, column: 5, scope: !10874)
!10879 = !DILocation(line: 3640, column: 9, scope: !10874)
!10880 = !DILocation(line: 3640, column: 23, scope: !10874)
!10881 = !DILocation(line: 3640, column: 28, scope: !10874)
!10882 = !DILocation(line: 3640, column: 32, scope: !10874)
!10883 = !DILocation(line: 3640, column: 46, scope: !10874)
!10884 = !DILocation(line: 3641, column: 3, scope: !10860)
!10885 = distinct !{!10885, !10858, !10886}
!10886 = !DILocation(line: 3641, column: 3, scope: !10857)
!10887 = !DILocation(line: 3641, column: 3, scope: !10852)
!10888 = !DILocation(line: 3643, column: 18, scope: !10853)
!10889 = !DILocation(line: 3643, column: 3, scope: !10853)
!10890 = !DILocation(line: 3644, column: 24, scope: !10853)
!10891 = !DILocation(line: 3645, column: 2, scope: !10853)
!10892 = !DILocation(line: 3647, column: 6, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 3647, column: 6)
!10894 = !DILocation(line: 3647, column: 6, scope: !10812)
!10895 = !DILocalVariable(name: "__node_tree_type_iter__", scope: !10896, file: !3, line: 3648, type: !3676)
!10896 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 3648, column: 3)
!10897 = distinct !DILexicalBlock(scope: !10893, file: !3, line: 3647, column: 26)
!10898 = !DILocation(line: 3648, column: 3, scope: !10896)
!10899 = !DILocation(line: 3648, column: 3, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 3648, column: 3)
!10901 = distinct !DILexicalBlock(scope: !10896, file: !3, line: 3648, column: 3)
!10902 = !DILocation(line: 3648, column: 3, scope: !10901)
!10903 = !DILocalVariable(name: "nt", scope: !10904, file: !3, line: 3648, type: !2289)
!10904 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 3648, column: 3)
!10905 = !DILocation(line: 3648, column: 3, scope: !10904)
!10906 = !DILocation(line: 3650, column: 8, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 3650, column: 8)
!10908 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 3649, column: 3)
!10909 = !DILocation(line: 3650, column: 12, scope: !10907)
!10910 = !DILocation(line: 3650, column: 16, scope: !10907)
!10911 = !DILocation(line: 3650, column: 8, scope: !10908)
!10912 = !DILocation(line: 3651, column: 5, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 3650, column: 22)
!10914 = !DILocation(line: 3651, column: 9, scope: !10913)
!10915 = !DILocation(line: 3651, column: 13, scope: !10913)
!10916 = !DILocation(line: 3651, column: 18, scope: !10913)
!10917 = !DILocation(line: 3651, column: 22, scope: !10913)
!10918 = !DILocation(line: 3651, column: 26, scope: !10913)
!10919 = !DILocation(line: 3652, column: 4, scope: !10913)
!10920 = !DILocation(line: 3654, column: 3, scope: !10904)
!10921 = distinct !{!10921, !10902, !10922}
!10922 = !DILocation(line: 3654, column: 3, scope: !10901)
!10923 = !DILocation(line: 3654, column: 3, scope: !10896)
!10924 = !DILocation(line: 3656, column: 18, scope: !10897)
!10925 = !DILocation(line: 3656, column: 3, scope: !10897)
!10926 = !DILocation(line: 3657, column: 22, scope: !10897)
!10927 = !DILocation(line: 3658, column: 2, scope: !10897)
!10928 = !DILocation(line: 3659, column: 1, scope: !10812)
!10929 = distinct !DISubprogram(name: "node_init", scope: !3, file: !3, line: 107, type: !10930, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!10930 = !DISubroutineType(types: !10931)
!10931 = !{null, !786, !2101, !755}
!10932 = !DILocalVariable(name: "C", arg: 1, scope: !10929, file: !3, line: 107, type: !786)
!10933 = !DILocation(line: 107, column: 46, scope: !10929)
!10934 = !DILocalVariable(name: "ntree", arg: 2, scope: !10929, file: !3, line: 107, type: !2101)
!10935 = !DILocation(line: 107, column: 60, scope: !10929)
!10936 = !DILocalVariable(name: "node", arg: 3, scope: !10929, file: !3, line: 107, type: !755)
!10937 = !DILocation(line: 107, column: 74, scope: !10929)
!10938 = !DILocalVariable(name: "ntype", scope: !10929, file: !3, line: 109, type: !2342)
!10939 = !DILocation(line: 109, column: 13, scope: !10929)
!10940 = !DILocation(line: 109, column: 21, scope: !10929)
!10941 = !DILocation(line: 109, column: 27, scope: !10929)
!10942 = !DILocation(line: 110, column: 6, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 110, column: 6)
!10944 = !DILocation(line: 110, column: 12, scope: !10943)
!10945 = !DILocation(line: 110, column: 6, scope: !10929)
!10946 = !DILocation(line: 111, column: 3, scope: !10943)
!10947 = !DILocation(line: 114, column: 6, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 114, column: 6)
!10949 = !DILocation(line: 114, column: 12, scope: !10948)
!10950 = !DILocation(line: 114, column: 17, scope: !10948)
!10951 = !DILocation(line: 114, column: 6, scope: !10929)
!10952 = !DILocation(line: 115, column: 3, scope: !10948)
!10953 = !DILocation(line: 117, column: 44, scope: !10929)
!10954 = !DILocation(line: 117, column: 51, scope: !10929)
!10955 = !DILocation(line: 117, column: 42, scope: !10929)
!10956 = !DILocation(line: 117, column: 2, scope: !10929)
!10957 = !DILocation(line: 117, column: 8, scope: !10929)
!10958 = !DILocation(line: 117, column: 13, scope: !10929)
!10959 = !DILocation(line: 118, column: 16, scope: !10929)
!10960 = !DILocation(line: 118, column: 23, scope: !10929)
!10961 = !DILocation(line: 118, column: 2, scope: !10929)
!10962 = !DILocation(line: 118, column: 8, scope: !10929)
!10963 = !DILocation(line: 118, column: 14, scope: !10929)
!10964 = !DILocation(line: 119, column: 2, scope: !10929)
!10965 = !DILocation(line: 119, column: 8, scope: !10929)
!10966 = !DILocation(line: 119, column: 18, scope: !10929)
!10967 = !DILocation(line: 120, column: 17, scope: !10929)
!10968 = !DILocation(line: 120, column: 24, scope: !10929)
!10969 = !DILocation(line: 120, column: 2, scope: !10929)
!10970 = !DILocation(line: 120, column: 8, scope: !10929)
!10971 = !DILocation(line: 120, column: 15, scope: !10929)
!10972 = !DILocation(line: 121, column: 36, scope: !10929)
!10973 = !DILocation(line: 121, column: 42, scope: !10929)
!10974 = !DILocation(line: 121, column: 51, scope: !10929)
!10975 = !DILocation(line: 121, column: 19, scope: !10929)
!10976 = !DILocation(line: 121, column: 25, scope: !10929)
!10977 = !DILocation(line: 121, column: 34, scope: !10929)
!10978 = !DILocation(line: 121, column: 2, scope: !10929)
!10979 = !DILocation(line: 121, column: 8, scope: !10929)
!10980 = !DILocation(line: 121, column: 17, scope: !10929)
!10981 = !DILocation(line: 129, column: 14, scope: !10929)
!10982 = !DILocation(line: 129, column: 20, scope: !10929)
!10983 = !DILocation(line: 129, column: 26, scope: !10929)
!10984 = !DILocation(line: 129, column: 2, scope: !10929)
!10985 = !DILocation(line: 130, column: 17, scope: !10929)
!10986 = !DILocation(line: 130, column: 24, scope: !10929)
!10987 = !DILocation(line: 130, column: 2, scope: !10929)
!10988 = !DILocation(line: 132, column: 29, scope: !10929)
!10989 = !DILocation(line: 132, column: 36, scope: !10929)
!10990 = !DILocation(line: 132, column: 42, scope: !10929)
!10991 = !DILocation(line: 132, column: 2, scope: !10929)
!10992 = !DILocation(line: 134, column: 6, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 134, column: 6)
!10994 = !DILocation(line: 134, column: 13, scope: !10993)
!10995 = !DILocation(line: 134, column: 22, scope: !10993)
!10996 = !DILocation(line: 134, column: 6, scope: !10929)
!10997 = !DILocation(line: 135, column: 3, scope: !10993)
!10998 = !DILocation(line: 135, column: 10, scope: !10993)
!10999 = !DILocation(line: 135, column: 19, scope: !10993)
!11000 = !DILocation(line: 135, column: 26, scope: !10993)
!11001 = !DILocation(line: 137, column: 6, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 137, column: 6)
!11003 = !DILocation(line: 137, column: 13, scope: !11002)
!11004 = !DILocation(line: 137, column: 23, scope: !11002)
!11005 = !DILocation(line: 137, column: 37, scope: !11002)
!11006 = !DILocation(line: 137, column: 6, scope: !10929)
!11007 = !DILocation(line: 138, column: 3, scope: !11002)
!11008 = !DILocation(line: 138, column: 10, scope: !11002)
!11009 = !DILocation(line: 138, column: 20, scope: !11002)
!11010 = !DILocation(line: 138, column: 34, scope: !11002)
!11011 = !DILocation(line: 138, column: 41, scope: !11002)
!11012 = !DILocation(line: 141, column: 6, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 141, column: 6)
!11014 = !DILocation(line: 141, column: 13, scope: !11013)
!11015 = !DILocation(line: 141, column: 6, scope: !10929)
!11016 = !DILocalVariable(name: "ptr", scope: !11017, file: !3, line: 142, type: !3917)
!11017 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 141, column: 27)
!11018 = !DILocation(line: 142, column: 14, scope: !11017)
!11019 = !DILocation(line: 143, column: 28, scope: !11017)
!11020 = !DILocation(line: 143, column: 22, scope: !11017)
!11021 = !DILocation(line: 143, column: 46, scope: !11017)
!11022 = !DILocation(line: 143, column: 3, scope: !11017)
!11023 = !DILocation(line: 149, column: 3, scope: !11017)
!11024 = !DILocation(line: 149, column: 10, scope: !11017)
!11025 = !DILocation(line: 149, column: 23, scope: !11017)
!11026 = !DILocation(line: 150, column: 2, scope: !11017)
!11027 = !DILocation(line: 152, column: 6, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 152, column: 6)
!11029 = !DILocation(line: 152, column: 12, scope: !11028)
!11030 = !DILocation(line: 152, column: 6, scope: !10929)
!11031 = !DILocation(line: 153, column: 14, scope: !11028)
!11032 = !DILocation(line: 153, column: 20, scope: !11028)
!11033 = !DILocation(line: 153, column: 3, scope: !11028)
!11034 = !DILocation(line: 155, column: 2, scope: !10929)
!11035 = !DILocation(line: 155, column: 8, scope: !10929)
!11036 = !DILocation(line: 155, column: 13, scope: !10929)
!11037 = !DILocation(line: 156, column: 1, scope: !10929)
!11038 = distinct !DISubprogram(name: "node_add_sockets_from_type", scope: !3, file: !3, line: 80, type: !11039, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!11039 = !DISubroutineType(types: !11040)
!11040 = !{null, !2101, !755, !2342}
!11041 = !DILocalVariable(name: "ntree", arg: 1, scope: !11038, file: !3, line: 80, type: !2101)
!11042 = !DILocation(line: 80, column: 51, scope: !11038)
!11043 = !DILocalVariable(name: "node", arg: 2, scope: !11038, file: !3, line: 80, type: !755)
!11044 = !DILocation(line: 80, column: 65, scope: !11038)
!11045 = !DILocalVariable(name: "ntype", arg: 3, scope: !11038, file: !3, line: 80, type: !2342)
!11046 = !DILocation(line: 80, column: 82, scope: !11038)
!11047 = !DILocalVariable(name: "sockdef", scope: !11038, file: !3, line: 82, type: !626)
!11048 = !DILocation(line: 82, column: 23, scope: !11038)
!11049 = !DILocation(line: 85, column: 6, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 85, column: 6)
!11051 = !DILocation(line: 85, column: 13, scope: !11050)
!11052 = !DILocation(line: 85, column: 6, scope: !11038)
!11053 = !DILocation(line: 86, column: 13, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 85, column: 21)
!11055 = !DILocation(line: 86, column: 20, scope: !11054)
!11056 = !DILocation(line: 86, column: 11, scope: !11054)
!11057 = !DILocation(line: 87, column: 3, scope: !11054)
!11058 = !DILocation(line: 87, column: 10, scope: !11054)
!11059 = !DILocation(line: 87, column: 19, scope: !11054)
!11060 = !DILocation(line: 87, column: 24, scope: !11054)
!11061 = !DILocation(line: 88, column: 47, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11054, file: !3, line: 87, column: 31)
!11063 = !DILocation(line: 88, column: 54, scope: !11062)
!11064 = !DILocation(line: 88, column: 60, scope: !11062)
!11065 = !DILocation(line: 88, column: 17, scope: !11062)
!11066 = !DILocation(line: 90, column: 11, scope: !11062)
!11067 = distinct !{!11067, !11057, !11068}
!11068 = !DILocation(line: 91, column: 3, scope: !11054)
!11069 = !DILocation(line: 92, column: 2, scope: !11054)
!11070 = !DILocation(line: 93, column: 6, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11038, file: !3, line: 93, column: 6)
!11072 = !DILocation(line: 93, column: 13, scope: !11071)
!11073 = !DILocation(line: 93, column: 6, scope: !11038)
!11074 = !DILocation(line: 94, column: 13, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11071, file: !3, line: 93, column: 22)
!11076 = !DILocation(line: 94, column: 20, scope: !11075)
!11077 = !DILocation(line: 94, column: 11, scope: !11075)
!11078 = !DILocation(line: 95, column: 3, scope: !11075)
!11079 = !DILocation(line: 95, column: 10, scope: !11075)
!11080 = !DILocation(line: 95, column: 19, scope: !11075)
!11081 = !DILocation(line: 95, column: 24, scope: !11075)
!11082 = !DILocation(line: 96, column: 47, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 95, column: 31)
!11084 = !DILocation(line: 96, column: 54, scope: !11083)
!11085 = !DILocation(line: 96, column: 60, scope: !11083)
!11086 = !DILocation(line: 96, column: 17, scope: !11083)
!11087 = !DILocation(line: 98, column: 11, scope: !11083)
!11088 = distinct !{!11088, !11078, !11089}
!11089 = !DILocation(line: 99, column: 3, scope: !11075)
!11090 = !DILocation(line: 100, column: 2, scope: !11075)
!11091 = !DILocation(line: 101, column: 1, scope: !11038)
!11092 = distinct !DISubprogram(name: "free_dynamic_typeinfo", scope: !3, file: !3, line: 348, type: !2789, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!11093 = !DILocalVariable(name: "ntype", arg: 1, scope: !11092, file: !3, line: 348, type: !2342)
!11094 = !DILocation(line: 348, column: 46, scope: !11092)
!11095 = !DILocation(line: 350, column: 6, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11092, file: !3, line: 350, column: 6)
!11097 = !DILocation(line: 350, column: 13, scope: !11096)
!11098 = !DILocation(line: 350, column: 18, scope: !11096)
!11099 = !DILocation(line: 350, column: 6, scope: !11092)
!11100 = !DILocation(line: 351, column: 7, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 351, column: 7)
!11102 = distinct !DILexicalBlock(scope: !11096, file: !3, line: 350, column: 35)
!11103 = !DILocation(line: 351, column: 14, scope: !11101)
!11104 = !DILocation(line: 351, column: 7, scope: !11102)
!11105 = !DILocation(line: 352, column: 4, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11101, file: !3, line: 351, column: 22)
!11107 = !DILocation(line: 352, column: 14, scope: !11106)
!11108 = !DILocation(line: 352, column: 21, scope: !11106)
!11109 = !DILocation(line: 353, column: 3, scope: !11106)
!11110 = !DILocation(line: 354, column: 7, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 354, column: 7)
!11112 = !DILocation(line: 354, column: 14, scope: !11111)
!11113 = !DILocation(line: 354, column: 7, scope: !11102)
!11114 = !DILocation(line: 355, column: 4, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11111, file: !3, line: 354, column: 23)
!11116 = !DILocation(line: 355, column: 14, scope: !11115)
!11117 = !DILocation(line: 355, column: 21, scope: !11115)
!11118 = !DILocation(line: 356, column: 3, scope: !11115)
!11119 = !DILocation(line: 357, column: 2, scope: !11102)
!11120 = !DILocation(line: 358, column: 1, scope: !11092)
!11121 = distinct !DISubprogram(name: "unique_identifier_check", scope: !3, file: !3, line: 457, type: !11122, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!11122 = !DISubroutineType(types: !11123)
!11123 = !{!1074, !80, !681}
!11124 = !DILocalVariable(name: "arg", arg: 1, scope: !11121, file: !3, line: 457, type: !80)
!11125 = !DILocation(line: 457, column: 43, scope: !11121)
!11126 = !DILocalVariable(name: "identifier", arg: 2, scope: !11121, file: !3, line: 457, type: !681)
!11127 = !DILocation(line: 457, column: 60, scope: !11121)
!11128 = !DILocalVariable(name: "lb", scope: !11121, file: !3, line: 459, type: !8548)
!11129 = !DILocation(line: 459, column: 19, scope: !11121)
!11130 = !DILocation(line: 459, column: 24, scope: !11121)
!11131 = !DILocalVariable(name: "sock", scope: !11121, file: !3, line: 460, type: !759)
!11132 = !DILocation(line: 460, column: 15, scope: !11121)
!11133 = !DILocation(line: 461, column: 14, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 461, column: 2)
!11135 = !DILocation(line: 461, column: 18, scope: !11134)
!11136 = !DILocation(line: 461, column: 12, scope: !11134)
!11137 = !DILocation(line: 461, column: 7, scope: !11134)
!11138 = !DILocation(line: 461, column: 25, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11134, file: !3, line: 461, column: 2)
!11140 = !DILocation(line: 461, column: 2, scope: !11134)
!11141 = !DILocation(line: 462, column: 7, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !3, line: 462, column: 7)
!11143 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 461, column: 50)
!11144 = !DILocation(line: 462, column: 7, scope: !11143)
!11145 = !DILocation(line: 463, column: 4, scope: !11142)
!11146 = !DILocation(line: 464, column: 2, scope: !11143)
!11147 = !DILocation(line: 461, column: 38, scope: !11139)
!11148 = !DILocation(line: 461, column: 44, scope: !11139)
!11149 = !DILocation(line: 461, column: 36, scope: !11139)
!11150 = !DILocation(line: 461, column: 2, scope: !11139)
!11151 = distinct !{!11151, !11140, !11152}
!11152 = !DILocation(line: 464, column: 2, scope: !11134)
!11153 = !DILocation(line: 465, column: 2, scope: !11121)
!11154 = !DILocation(line: 466, column: 1, scope: !11121)
!11155 = distinct !DISubprogram(name: "BLI_ghashIterator_getKey", scope: !999, file: !999, line: 95, type: !3732, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!11156 = !DILocalVariable(name: "ghi", arg: 1, scope: !11155, file: !999, line: 95, type: !3676)
!11157 = !DILocation(line: 95, column: 59, scope: !11155)
!11158 = !DILocation(line: 95, column: 99, scope: !11155)
!11159 = !DILocation(line: 95, column: 104, scope: !11155)
!11160 = !DILocation(line: 95, column: 115, scope: !11155)
!11161 = !DILocation(line: 95, column: 70, scope: !11155)
!11162 = distinct !DISubprogram(name: "linearrgb_to_srgb_v4", scope: !5802, file: !5802, line: 59, type: !9865, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!11163 = !DILocalVariable(name: "srgb", arg: 1, scope: !11162, file: !5802, line: 59, type: !543)
!11164 = !DILocation(line: 59, column: 41, scope: !11162)
!11165 = !DILocalVariable(name: "linear", arg: 2, scope: !11162, file: !5802, line: 59, type: !5737)
!11166 = !DILocation(line: 59, column: 62, scope: !11162)
!11167 = !DILocation(line: 61, column: 26, scope: !11162)
!11168 = !DILocation(line: 61, column: 32, scope: !11162)
!11169 = !DILocation(line: 61, column: 2, scope: !11162)
!11170 = !DILocation(line: 62, column: 12, scope: !11162)
!11171 = !DILocation(line: 62, column: 2, scope: !11162)
!11172 = !DILocation(line: 62, column: 10, scope: !11162)
!11173 = !DILocation(line: 63, column: 1, scope: !11162)
!11174 = distinct !DISubprogram(name: "linearrgb_to_srgb_v3_v3", scope: !5802, file: !5802, line: 46, type: !9865, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!11175 = !DILocalVariable(name: "srgb", arg: 1, scope: !11174, file: !5802, line: 46, type: !543)
!11176 = !DILocation(line: 46, column: 44, scope: !11174)
!11177 = !DILocalVariable(name: "linear", arg: 2, scope: !11174, file: !5802, line: 46, type: !5737)
!11178 = !DILocation(line: 46, column: 65, scope: !11174)
!11179 = !DILocation(line: 48, column: 30, scope: !11174)
!11180 = !DILocation(line: 48, column: 12, scope: !11174)
!11181 = !DILocation(line: 48, column: 2, scope: !11174)
!11182 = !DILocation(line: 48, column: 10, scope: !11174)
!11183 = !DILocation(line: 49, column: 30, scope: !11174)
!11184 = !DILocation(line: 49, column: 12, scope: !11174)
!11185 = !DILocation(line: 49, column: 2, scope: !11174)
!11186 = !DILocation(line: 49, column: 10, scope: !11174)
!11187 = !DILocation(line: 50, column: 30, scope: !11174)
!11188 = !DILocation(line: 50, column: 12, scope: !11174)
!11189 = !DILocation(line: 50, column: 2, scope: !11174)
!11190 = !DILocation(line: 50, column: 10, scope: !11174)
!11191 = !DILocation(line: 51, column: 1, scope: !11174)
!11192 = distinct !DISubprogram(name: "node_unlink_attached", scope: !3, file: !3, line: 1579, type: !3412, scopeLine: 1580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!11193 = !DILocalVariable(name: "ntree", arg: 1, scope: !11192, file: !3, line: 1579, type: !2101)
!11194 = !DILocation(line: 1579, column: 45, scope: !11192)
!11195 = !DILocalVariable(name: "parent", arg: 2, scope: !11192, file: !3, line: 1579, type: !755)
!11196 = !DILocation(line: 1579, column: 59, scope: !11192)
!11197 = !DILocalVariable(name: "node", scope: !11192, file: !3, line: 1581, type: !755)
!11198 = !DILocation(line: 1581, column: 9, scope: !11192)
!11199 = !DILocation(line: 1582, column: 14, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 1582, column: 2)
!11201 = !DILocation(line: 1582, column: 21, scope: !11200)
!11202 = !DILocation(line: 1582, column: 27, scope: !11200)
!11203 = !DILocation(line: 1582, column: 12, scope: !11200)
!11204 = !DILocation(line: 1582, column: 7, scope: !11200)
!11205 = !DILocation(line: 1582, column: 34, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11200, file: !3, line: 1582, column: 2)
!11207 = !DILocation(line: 1582, column: 2, scope: !11200)
!11208 = !DILocation(line: 1583, column: 7, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 1583, column: 7)
!11210 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 1582, column: 59)
!11211 = !DILocation(line: 1583, column: 13, scope: !11209)
!11212 = !DILocation(line: 1583, column: 23, scope: !11209)
!11213 = !DILocation(line: 1583, column: 20, scope: !11209)
!11214 = !DILocation(line: 1583, column: 7, scope: !11210)
!11215 = !DILocation(line: 1584, column: 19, scope: !11209)
!11216 = !DILocation(line: 1584, column: 4, scope: !11209)
!11217 = !DILocation(line: 1585, column: 2, scope: !11210)
!11218 = !DILocation(line: 1582, column: 47, scope: !11206)
!11219 = !DILocation(line: 1582, column: 53, scope: !11206)
!11220 = !DILocation(line: 1582, column: 45, scope: !11206)
!11221 = !DILocation(line: 1582, column: 2, scope: !11206)
!11222 = distinct !{!11222, !11207, !11223}
!11223 = !DILocation(line: 1585, column: 2, scope: !11200)
!11224 = !DILocation(line: 1586, column: 1, scope: !11192)
!11225 = distinct !DISubprogram(name: "ntree_interface_unique_identifier_check", scope: !3, file: !3, line: 2182, type: !11122, scopeLine: 2183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!11226 = !DILocalVariable(name: "UNUSED_data", arg: 1, scope: !11225, file: !3, line: 2182, type: !80)
!11227 = !DILocation(line: 2182, column: 59, scope: !11225)
!11228 = !DILocalVariable(name: "identifier", arg: 2, scope: !11225, file: !3, line: 2182, type: !681)
!11229 = !DILocation(line: 2182, column: 85, scope: !11225)
!11230 = !DILocation(line: 2184, column: 26, scope: !11225)
!11231 = !DILocation(line: 2184, column: 10, scope: !11225)
!11232 = !DILocation(line: 2184, column: 38, scope: !11225)
!11233 = !DILocation(line: 2184, column: 9, scope: !11225)
!11234 = !DILocation(line: 2184, column: 2, scope: !11225)
!11235 = distinct !DISubprogram(name: "unique_socket_template_identifier_check", scope: !3, file: !3, line: 3197, type: !11122, scopeLine: 3198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!11236 = !DILocalVariable(name: "arg", arg: 1, scope: !11235, file: !3, line: 3197, type: !80)
!11237 = !DILocation(line: 3197, column: 59, scope: !11235)
!11238 = !DILocalVariable(name: "name", arg: 2, scope: !11235, file: !3, line: 3197, type: !681)
!11239 = !DILocation(line: 3197, column: 76, scope: !11235)
!11240 = !DILocalVariable(name: "ntemp", scope: !11235, file: !3, line: 3199, type: !626)
!11241 = !DILocation(line: 3199, column: 23, scope: !11235)
!11242 = !DILocalVariable(name: "data", scope: !11235, file: !3, line: 3200, type: !11243)
!11243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11244, size: 64)
!11244 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11235, file: !3, line: 3200, size: 128, elements: !11245)
!11245 = !{!11246, !11247}
!11246 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !11244, file: !3, line: 3200, baseType: !626, size: 64)
!11247 = !DIDerivedType(tag: DW_TAG_member, name: "ntemp", scope: !11244, file: !3, line: 3200, baseType: !626, size: 64, offset: 64)
!11248 = !DILocation(line: 3200, column: 67, scope: !11235)
!11249 = !DILocation(line: 3200, column: 74, scope: !11235)
!11250 = !DILocation(line: 3202, column: 15, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11235, file: !3, line: 3202, column: 2)
!11252 = !DILocation(line: 3202, column: 21, scope: !11251)
!11253 = !DILocation(line: 3202, column: 13, scope: !11251)
!11254 = !DILocation(line: 3202, column: 7, scope: !11251)
!11255 = !DILocation(line: 3202, column: 27, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3202, column: 2)
!11257 = !DILocation(line: 3202, column: 34, scope: !11256)
!11258 = !DILocation(line: 3202, column: 39, scope: !11256)
!11259 = !DILocation(line: 3202, column: 2, scope: !11251)
!11260 = !DILocation(line: 3203, column: 7, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 3203, column: 7)
!11262 = distinct !DILexicalBlock(scope: !11256, file: !3, line: 3202, column: 54)
!11263 = !DILocation(line: 3203, column: 16, scope: !11261)
!11264 = !DILocation(line: 3203, column: 22, scope: !11261)
!11265 = !DILocation(line: 3203, column: 13, scope: !11261)
!11266 = !DILocation(line: 3203, column: 7, scope: !11262)
!11267 = !DILocation(line: 3204, column: 8, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 3204, column: 8)
!11269 = distinct !DILexicalBlock(scope: !11261, file: !3, line: 3203, column: 29)
!11270 = !DILocation(line: 3204, column: 8, scope: !11269)
!11271 = !DILocation(line: 3205, column: 5, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11268, file: !3, line: 3204, column: 40)
!11273 = !DILocation(line: 3207, column: 3, scope: !11269)
!11274 = !DILocation(line: 3208, column: 2, scope: !11262)
!11275 = !DILocation(line: 3202, column: 45, scope: !11256)
!11276 = !DILocation(line: 3202, column: 2, scope: !11256)
!11277 = distinct !{!11277, !11259, !11278}
!11278 = !DILocation(line: 3208, column: 2, scope: !11251)
!11279 = !DILocation(line: 3210, column: 2, scope: !11235)
!11280 = !DILocation(line: 3211, column: 1, scope: !11235)
!11281 = distinct !DISubprogram(name: "node_undefined_poll", scope: !3, file: !3, line: 3335, type: !10184, scopeLine: 3336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2160)
!11282 = !DILocalVariable(name: "UNUSED_ntype", arg: 1, scope: !11281, file: !3, line: 3335, type: !2342)
!11283 = !DILocation(line: 3335, column: 43, scope: !11281)
!11284 = !DILocalVariable(name: "UNUSED_nodetree", arg: 2, scope: !11281, file: !3, line: 3335, type: !2101)
!11285 = !DILocation(line: 3335, column: 69, scope: !11281)
!11286 = !DILocation(line: 3338, column: 2, scope: !11281)
