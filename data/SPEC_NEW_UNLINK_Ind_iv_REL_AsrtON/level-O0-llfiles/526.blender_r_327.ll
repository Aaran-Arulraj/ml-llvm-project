; ModuleID = 'blender/source/blender/render/intern/source/multires_bake.c'
source_filename = "blender/source/blender/render/intern/source/multires_bake.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.MultiresBakeRender = type { %struct.DerivedMesh*, %struct.DerivedMesh*, i8, i32, i32, i32, i16, i8, i32, float, i32, i32, %struct.ListBase, i32, i32, i32, i32, i32, float, i16*, i16*, float* }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.Material = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.AnimData = type opaque
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.RenderSlot = type { [64 x i8] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColorSpace = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MultiresBakeResult = type { float, float }
%struct.LinkData = type { %struct.LinkData*, %struct.LinkData*, i8* }
%struct.BakeImBufuserData = type { float*, i8* }
%struct.MultiresBakeThread = type { %struct.MultiresBakeQueue*, %struct.MultiresBakeRender*, %struct.Image*, i8*, %struct.MBakeRast, %struct.MResolvePixelData, float, float }
%struct.MultiresBakeQueue = type { i32, i32, i32 }
%struct.MBakeRast = type { i32, i32, i8*, %struct.MResolvePixelData*, void (%struct.MResolvePixelData*, i32, i32)*, i16* }
%struct.MResolvePixelData = type { %struct.MVert*, %struct.MFace*, %struct.MTFace*, float*, float*, i32, i32, i32, i32, i32, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i32, i8*, i8*, %struct.ImBuf*, void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)* }
%struct.MNormalBakeData = type { i32*, i32* }
%struct.MHeightBakeData = type { float*, %struct.Image*, %struct.DerivedMesh*, i32*, i32* }
%struct.SubsurfModifierData = type { %struct.ModifierData, i16, i16, i16, i16, i8*, i8* }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.MAOBakeData = type { i32, float, i16*, i16*, %struct.RayObject*, %struct.RayFace*, i32*, i32* }
%struct.RayObject = type { %struct.RayObjectAPI*, %struct.RayObjectControl }
%struct.RayObjectAPI = type { i32 (%struct.RayObject*, %struct.Isect*)*, void (%struct.RayObject*, %struct.RayObject*)*, void (%struct.RayObject*)*, void (%struct.RayObject*)*, void (%struct.RayObject*, float*, float*)*, float (%struct.RayObject*)*, void (%struct.RayObject*, %struct.RayHint*, float*, float*)* }
%struct.Isect = type { [3 x float], [3 x float], float, [3 x float], [3 x float], [6 x i32], [3 x float], i32, i32, i32, i32, i8*, float, float, i32, %struct.anon, %struct.anon, %struct.RayObject*, %struct.RayHint* }
%struct.anon = type { i8*, i8* }
%struct.RayHint = type { %union.anon }
%union.anon = type { %struct.LCTSHint }
%struct.LCTSHint = type { i32, [256 x %struct.RayObject*] }
%struct.RayObjectControl = type { i8*, i32 (i8*)* }
%struct.RayFace = type { [4 x float], [4 x float], [4 x float], [3 x float], i32, i8*, i8* }

@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [22 x i8] c"MultiresBake userdata\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"MultiresBake imbuf mask\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"do_multires_bake handles\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@G = external dso_local global %struct.Global, align 8
@__const.apply_tangmat_callback.tmp = private unnamed_addr constant [3 x float] [float 5.000000e-01, float 5.000000e-01, float 5.000000e-01], align 4
@.str.3 = private unnamed_addr constant [24 x i8] c"MultiresBake normalData\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"MultiresBake heights\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"MultiresBake heightData\00", align 1
@ao_random_table_2 = internal global [1024 x i16] zeroinitializer, align 16, !dbg !0
@ao_random_table_1 = internal global [1024 x i16] zeroinitializer, align 16, !dbg !2324
@.str.6 = private unnamed_addr constant [20 x i8] c"MultiresBake aoData\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"multires AO baker perm1\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"multires AO baker perm2\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"multires AO baker temp perm\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"ObjectRen faces\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_multires_bake_images(%struct.MultiresBakeRender* %bkr) #0 !dbg !2331 {
entry:
  %bkr.addr = alloca %struct.MultiresBakeRender*, align 8
  %result = alloca %struct.MultiresBakeResult, align 4
  store %struct.MultiresBakeRender* %bkr, %struct.MultiresBakeRender** %bkr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeRender** %bkr.addr, metadata !2335, metadata !DIExpression()), !dbg !2336
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeResult* %result, metadata !2337, metadata !DIExpression()), !dbg !2343
  %0 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2344
  call void @count_images(%struct.MultiresBakeRender* %0), !dbg !2345
  %1 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2346
  call void @bake_images(%struct.MultiresBakeRender* %1, %struct.MultiresBakeResult* %result), !dbg !2347
  %2 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2348
  call void @finish_images(%struct.MultiresBakeRender* %2, %struct.MultiresBakeResult* %result), !dbg !2349
  ret void, !dbg !2350
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal void @count_images(%struct.MultiresBakeRender* %bkr) #0 !dbg !2351 {
entry:
  %bkr.addr = alloca %struct.MultiresBakeRender*, align 8
  %a = alloca i32, align 4
  %totface = alloca i32, align 4
  %dm = alloca %struct.DerivedMesh*, align 8
  %mtface = alloca %struct.MTFace*, align 8
  %ima = alloca %struct.Image*, align 8
  %data = alloca %struct.LinkData*, align 8
  store %struct.MultiresBakeRender* %bkr, %struct.MultiresBakeRender** %bkr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeRender** %bkr.addr, metadata !2352, metadata !DIExpression()), !dbg !2353
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2354, metadata !DIExpression()), !dbg !2355
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !2356, metadata !DIExpression()), !dbg !2357
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !2358, metadata !DIExpression()), !dbg !2359
  %0 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2360
  %lores_dm = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %0, i32 0, i32 0, !dbg !2361
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm, align 8, !dbg !2361
  store %struct.DerivedMesh* %1, %struct.DerivedMesh** %dm, align 8, !dbg !2359
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !2362, metadata !DIExpression()), !dbg !2363
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2364
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 2, !dbg !2365
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %faceData, i32 5), !dbg !2366
  %3 = bitcast i8* %call to %struct.MTFace*, !dbg !2366
  store %struct.MTFace* %3, %struct.MTFace** %mtface, align 8, !dbg !2363
  %4 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2367
  %image = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %4, i32 0, i32 12, !dbg !2368
  call void @BLI_listbase_clear(%struct.ListBase* %image), !dbg !2369
  %5 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2370
  %tot_image = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %5, i32 0, i32 11, !dbg !2371
  store i32 0, i32* %tot_image, align 8, !dbg !2372
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2373
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 25, !dbg !2374
  %7 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !2374
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2375
  %call1 = call i32 %7(%struct.DerivedMesh* %8), !dbg !2373
  store i32 %call1, i32* %totface, align 4, !dbg !2376
  store i32 0, i32* %a, align 4, !dbg !2377
  br label %for.cond, !dbg !2379

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %a, align 4, !dbg !2380
  %10 = load i32, i32* %totface, align 4, !dbg !2382
  %cmp = icmp slt i32 %9, %10, !dbg !2383
  br i1 %cmp, label %for.body, label %for.end, !dbg !2384

for.body:                                         ; preds = %for.cond
  %11 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !2385
  %12 = load i32, i32* %a, align 4, !dbg !2386
  %idxprom = sext i32 %12 to i64, !dbg !2385
  %arrayidx = getelementptr inbounds %struct.MTFace, %struct.MTFace* %11, i64 %idxprom, !dbg !2385
  %tpage = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx, i32 0, i32 1, !dbg !2387
  %13 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !2387
  %id = getelementptr inbounds %struct.Image, %struct.Image* %13, i32 0, i32 0, !dbg !2388
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !2389
  %14 = load i16, i16* %flag, align 2, !dbg !2390
  %conv = sext i16 %14 to i32, !dbg !2390
  %and = and i32 %conv, -1025, !dbg !2390
  %conv2 = trunc i32 %and to i16, !dbg !2390
  store i16 %conv2, i16* %flag, align 2, !dbg !2390
  br label %for.inc, !dbg !2385

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %a, align 4, !dbg !2391
  %inc = add nsw i32 %15, 1, !dbg !2391
  store i32 %inc, i32* %a, align 4, !dbg !2391
  br label %for.cond, !dbg !2392, !llvm.loop !2393

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %a, align 4, !dbg !2395
  br label %for.cond3, !dbg !2397

for.cond3:                                        ; preds = %for.inc24, %for.end
  %16 = load i32, i32* %a, align 4, !dbg !2398
  %17 = load i32, i32* %totface, align 4, !dbg !2400
  %cmp4 = icmp slt i32 %16, %17, !dbg !2401
  br i1 %cmp4, label %for.body6, label %for.end26, !dbg !2402

for.body6:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !2403, metadata !DIExpression()), !dbg !2405
  %18 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !2406
  %19 = load i32, i32* %a, align 4, !dbg !2407
  %idxprom7 = sext i32 %19 to i64, !dbg !2406
  %arrayidx8 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %18, i64 %idxprom7, !dbg !2406
  %tpage9 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx8, i32 0, i32 1, !dbg !2408
  %20 = load %struct.Image*, %struct.Image** %tpage9, align 8, !dbg !2408
  store %struct.Image* %20, %struct.Image** %ima, align 8, !dbg !2405
  %21 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !2409
  %id10 = getelementptr inbounds %struct.Image, %struct.Image* %21, i32 0, i32 0, !dbg !2411
  %flag11 = getelementptr inbounds %struct.ID, %struct.ID* %id10, i32 0, i32 5, !dbg !2412
  %22 = load i16, i16* %flag11, align 2, !dbg !2412
  %conv12 = sext i16 %22 to i32, !dbg !2409
  %and13 = and i32 %conv12, 1024, !dbg !2413
  %cmp14 = icmp eq i32 %and13, 0, !dbg !2414
  br i1 %cmp14, label %if.then, label %if.end, !dbg !2415

if.then:                                          ; preds = %for.body6
  call void @llvm.dbg.declare(metadata %struct.LinkData** %data, metadata !2416, metadata !DIExpression()), !dbg !2426
  %23 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !2427
  %24 = bitcast %struct.Image* %23 to i8*, !dbg !2427
  %call16 = call %struct.LinkData* @BLI_genericNodeN(i8* %24), !dbg !2428
  store %struct.LinkData* %call16, %struct.LinkData** %data, align 8, !dbg !2426
  %25 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2429
  %image17 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %25, i32 0, i32 12, !dbg !2430
  %26 = load %struct.LinkData*, %struct.LinkData** %data, align 8, !dbg !2431
  %27 = bitcast %struct.LinkData* %26 to i8*, !dbg !2431
  call void @BLI_addtail(%struct.ListBase* %image17, i8* %27), !dbg !2432
  %28 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2433
  %tot_image18 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %28, i32 0, i32 11, !dbg !2434
  %29 = load i32, i32* %tot_image18, align 8, !dbg !2435
  %inc19 = add nsw i32 %29, 1, !dbg !2435
  store i32 %inc19, i32* %tot_image18, align 8, !dbg !2435
  %30 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !2436
  %id20 = getelementptr inbounds %struct.Image, %struct.Image* %30, i32 0, i32 0, !dbg !2437
  %flag21 = getelementptr inbounds %struct.ID, %struct.ID* %id20, i32 0, i32 5, !dbg !2438
  %31 = load i16, i16* %flag21, align 2, !dbg !2439
  %conv22 = sext i16 %31 to i32, !dbg !2439
  %or = or i32 %conv22, 1024, !dbg !2439
  %conv23 = trunc i32 %or to i16, !dbg !2439
  store i16 %conv23, i16* %flag21, align 2, !dbg !2439
  br label %if.end, !dbg !2440

if.end:                                           ; preds = %if.then, %for.body6
  br label %for.inc24, !dbg !2441

for.inc24:                                        ; preds = %if.end
  %32 = load i32, i32* %a, align 4, !dbg !2442
  %inc25 = add nsw i32 %32, 1, !dbg !2442
  store i32 %inc25, i32* %a, align 4, !dbg !2442
  br label %for.cond3, !dbg !2443, !llvm.loop !2444

for.end26:                                        ; preds = %for.cond3
  store i32 0, i32* %a, align 4, !dbg !2446
  br label %for.cond27, !dbg !2448

for.cond27:                                       ; preds = %for.inc39, %for.end26
  %33 = load i32, i32* %a, align 4, !dbg !2449
  %34 = load i32, i32* %totface, align 4, !dbg !2451
  %cmp28 = icmp slt i32 %33, %34, !dbg !2452
  br i1 %cmp28, label %for.body30, label %for.end41, !dbg !2453

for.body30:                                       ; preds = %for.cond27
  %35 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !2454
  %36 = load i32, i32* %a, align 4, !dbg !2455
  %idxprom31 = sext i32 %36 to i64, !dbg !2454
  %arrayidx32 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %35, i64 %idxprom31, !dbg !2454
  %tpage33 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx32, i32 0, i32 1, !dbg !2456
  %37 = load %struct.Image*, %struct.Image** %tpage33, align 8, !dbg !2456
  %id34 = getelementptr inbounds %struct.Image, %struct.Image* %37, i32 0, i32 0, !dbg !2457
  %flag35 = getelementptr inbounds %struct.ID, %struct.ID* %id34, i32 0, i32 5, !dbg !2458
  %38 = load i16, i16* %flag35, align 2, !dbg !2459
  %conv36 = sext i16 %38 to i32, !dbg !2459
  %and37 = and i32 %conv36, -1025, !dbg !2459
  %conv38 = trunc i32 %and37 to i16, !dbg !2459
  store i16 %conv38, i16* %flag35, align 2, !dbg !2459
  br label %for.inc39, !dbg !2454

for.inc39:                                        ; preds = %for.body30
  %39 = load i32, i32* %a, align 4, !dbg !2460
  %inc40 = add nsw i32 %39, 1, !dbg !2460
  store i32 %inc40, i32* %a, align 4, !dbg !2460
  br label %for.cond27, !dbg !2461, !llvm.loop !2462

for.end41:                                        ; preds = %for.cond27
  ret void, !dbg !2464
}

; Function Attrs: noinline nounwind uwtable
define internal void @bake_images(%struct.MultiresBakeRender* %bkr, %struct.MultiresBakeResult* %result) #0 !dbg !2465 {
entry:
  %bkr.addr = alloca %struct.MultiresBakeRender*, align 8
  %result.addr = alloca %struct.MultiresBakeResult*, align 8
  %link = alloca %struct.LinkData*, align 8
  %ima = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %userdata = alloca %struct.BakeImBufuserData*, align 8
  store %struct.MultiresBakeRender* %bkr, %struct.MultiresBakeRender** %bkr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeRender** %bkr.addr, metadata !2469, metadata !DIExpression()), !dbg !2470
  store %struct.MultiresBakeResult* %result, %struct.MultiresBakeResult** %result.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeResult** %result.addr, metadata !2471, metadata !DIExpression()), !dbg !2472
  call void @llvm.dbg.declare(metadata %struct.LinkData** %link, metadata !2473, metadata !DIExpression()), !dbg !2474
  %0 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2475
  %image = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %0, i32 0, i32 12, !dbg !2477
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image, i32 0, i32 0, !dbg !2478
  %1 = load i8*, i8** %first, align 8, !dbg !2478
  %2 = bitcast i8* %1 to %struct.LinkData*, !dbg !2475
  store %struct.LinkData* %2, %struct.LinkData** %link, align 8, !dbg !2479
  br label %for.cond, !dbg !2480

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !2481
  %tobool = icmp ne %struct.LinkData* %3, null, !dbg !2483
  br i1 %tobool, label %for.body, label %for.end, !dbg !2483

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !2484, metadata !DIExpression()), !dbg !2486
  %4 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !2487
  %data = getelementptr inbounds %struct.LinkData, %struct.LinkData* %4, i32 0, i32 2, !dbg !2488
  %5 = load i8*, i8** %data, align 8, !dbg !2488
  %6 = bitcast i8* %5 to %struct.Image*, !dbg !2489
  store %struct.Image* %6, %struct.Image** %ima, align 8, !dbg !2486
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !2490, metadata !DIExpression()), !dbg !2491
  %7 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !2492
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %7, %struct.ImageUser* null, i8** null), !dbg !2493
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !2491
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2494
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 2, !dbg !2496
  %9 = load i32, i32* %x, align 8, !dbg !2496
  %cmp = icmp sgt i32 %9, 0, !dbg !2497
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2498

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2499
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %10, i32 0, i32 3, !dbg !2500
  %11 = load i32, i32* %y, align 4, !dbg !2500
  %cmp1 = icmp sgt i32 %11, 0, !dbg !2501
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2502

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.BakeImBufuserData** %userdata, metadata !2503, metadata !DIExpression()), !dbg !2505
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2506
  %call2 = call i8* %12(i64 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0)), !dbg !2506
  %13 = bitcast i8* %call2 to %struct.BakeImBufuserData*, !dbg !2506
  store %struct.BakeImBufuserData* %13, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2505
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2507
  %15 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2508
  %y3 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %15, i32 0, i32 3, !dbg !2509
  %16 = load i32, i32* %y3, align 4, !dbg !2509
  %17 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2510
  %x4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %17, i32 0, i32 2, !dbg !2511
  %18 = load i32, i32* %x4, align 8, !dbg !2511
  %mul = mul nsw i32 %16, %18, !dbg !2512
  %conv = sext i32 %mul to i64, !dbg !2508
  %call5 = call i8* %14(i64 %conv, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)), !dbg !2507
  %19 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2513
  %mask_buffer = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %19, i32 0, i32 1, !dbg !2514
  store i8* %call5, i8** %mask_buffer, align 8, !dbg !2515
  %20 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2516
  %21 = bitcast %struct.BakeImBufuserData* %20 to i8*, !dbg !2516
  %22 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2517
  %userdata6 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %22, i32 0, i32 25, !dbg !2518
  store i8* %21, i8** %userdata6, align 8, !dbg !2519
  %23 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2520
  %mode = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %23, i32 0, i32 6, !dbg !2521
  %24 = load i16, i16* %mode, align 8, !dbg !2521
  %conv7 = sext i16 %24 to i32, !dbg !2520
  switch i32 %conv7, label %sw.epilog [
    i32 3, label %sw.bb
    i32 5, label %sw.bb8
    i32 13, label %sw.bb8
    i32 2, label %sw.bb9
  ], !dbg !2522

sw.bb:                                            ; preds = %if.then
  %25 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2523
  %26 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !2525
  %27 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !2526
  call void @do_multires_bake(%struct.MultiresBakeRender* %25, %struct.Image* %26, i8 zeroext 1, void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)* @apply_tangmat_callback, i8* (%struct.MultiresBakeRender*, %struct.Image*)* @init_normal_data, void (i8*)* @free_normal_data, %struct.MultiresBakeResult* %27), !dbg !2527
  br label %sw.epilog, !dbg !2528

sw.bb8:                                           ; preds = %if.then, %if.then
  %28 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2529
  %29 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !2530
  %30 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !2531
  call void @do_multires_bake(%struct.MultiresBakeRender* %28, %struct.Image* %29, i8 zeroext 0, void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)* @apply_heights_callback, i8* (%struct.MultiresBakeRender*, %struct.Image*)* @init_heights_data, void (i8*)* @free_heights_data, %struct.MultiresBakeResult* %30), !dbg !2532
  br label %sw.epilog, !dbg !2533

sw.bb9:                                           ; preds = %if.then
  %31 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2534
  %32 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !2535
  %33 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !2536
  call void @do_multires_bake(%struct.MultiresBakeRender* %31, %struct.Image* %32, i8 zeroext 0, void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)* @apply_ao_callback, i8* (%struct.MultiresBakeRender*, %struct.Image*)* @init_ao_data, void (i8*)* @free_ao_data, %struct.MultiresBakeResult* %33), !dbg !2537
  br label %sw.epilog, !dbg !2538

sw.epilog:                                        ; preds = %if.then, %sw.bb9, %sw.bb8, %sw.bb
  br label %if.end, !dbg !2539

if.end:                                           ; preds = %sw.epilog, %land.lhs.true, %for.body
  %34 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !2540
  %35 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2541
  call void @BKE_image_release_ibuf(%struct.Image* %34, %struct.ImBuf* %35, i8* null), !dbg !2542
  %36 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !2543
  %id = getelementptr inbounds %struct.Image, %struct.Image* %36, i32 0, i32 0, !dbg !2544
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !2545
  %37 = load i16, i16* %flag, align 2, !dbg !2546
  %conv10 = sext i16 %37 to i32, !dbg !2546
  %or = or i32 %conv10, 1024, !dbg !2546
  %conv11 = trunc i32 %or to i16, !dbg !2546
  store i16 %conv11, i16* %flag, align 2, !dbg !2546
  br label %for.inc, !dbg !2547

for.inc:                                          ; preds = %if.end
  %38 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !2548
  %next = getelementptr inbounds %struct.LinkData, %struct.LinkData* %38, i32 0, i32 0, !dbg !2549
  %39 = load %struct.LinkData*, %struct.LinkData** %next, align 8, !dbg !2549
  store %struct.LinkData* %39, %struct.LinkData** %link, align 8, !dbg !2550
  br label %for.cond, !dbg !2551, !llvm.loop !2552

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2554
}

; Function Attrs: noinline nounwind uwtable
define internal void @finish_images(%struct.MultiresBakeRender* %bkr, %struct.MultiresBakeResult* %result) #0 !dbg !2555 {
entry:
  %bkr.addr = alloca %struct.MultiresBakeRender*, align 8
  %result.addr = alloca %struct.MultiresBakeResult*, align 8
  %link = alloca %struct.LinkData*, align 8
  %use_displacement_buffer = alloca i8, align 1
  %ima = alloca %struct.Image*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %userdata = alloca %struct.BakeImBufuserData*, align 8
  store %struct.MultiresBakeRender* %bkr, %struct.MultiresBakeRender** %bkr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeRender** %bkr.addr, metadata !2556, metadata !DIExpression()), !dbg !2557
  store %struct.MultiresBakeResult* %result, %struct.MultiresBakeResult** %result.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeResult** %result.addr, metadata !2558, metadata !DIExpression()), !dbg !2559
  call void @llvm.dbg.declare(metadata %struct.LinkData** %link, metadata !2560, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.declare(metadata i8* %use_displacement_buffer, metadata !2562, metadata !DIExpression()), !dbg !2563
  %0 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2564
  %mode = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %0, i32 0, i32 6, !dbg !2564
  %1 = load i16, i16* %mode, align 8, !dbg !2564
  %conv = sext i16 %1 to i32, !dbg !2564
  %cmp = icmp eq i32 %conv, 5, !dbg !2564
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !2564

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2564
  %mode2 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %2, i32 0, i32 6, !dbg !2564
  %3 = load i16, i16* %mode2, align 8, !dbg !2564
  %conv3 = sext i16 %3 to i32, !dbg !2564
  %cmp4 = icmp eq i32 %conv3, 13, !dbg !2564
  br label %lor.end, !dbg !2564

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp4, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !2564
  %conv6 = trunc i32 %lor.ext to i8, !dbg !2564
  store i8 %conv6, i8* %use_displacement_buffer, align 1, !dbg !2563
  %5 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2565
  %image = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %5, i32 0, i32 12, !dbg !2567
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image, i32 0, i32 0, !dbg !2568
  %6 = load i8*, i8** %first, align 8, !dbg !2568
  %7 = bitcast i8* %6 to %struct.LinkData*, !dbg !2565
  store %struct.LinkData* %7, %struct.LinkData** %link, align 8, !dbg !2569
  br label %for.cond, !dbg !2570

for.cond:                                         ; preds = %for.inc, %lor.end
  %8 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !2571
  %tobool = icmp ne %struct.LinkData* %8, null, !dbg !2573
  br i1 %tobool, label %for.body, label %for.end, !dbg !2573

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !2574, metadata !DIExpression()), !dbg !2576
  %9 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !2577
  %data = getelementptr inbounds %struct.LinkData, %struct.LinkData* %9, i32 0, i32 2, !dbg !2578
  %10 = load i8*, i8** %data, align 8, !dbg !2578
  %11 = bitcast i8* %10 to %struct.Image*, !dbg !2579
  store %struct.Image* %11, %struct.Image** %ima, align 8, !dbg !2576
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !2580, metadata !DIExpression()), !dbg !2581
  %12 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !2582
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %12, %struct.ImageUser* null, i8** null), !dbg !2583
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !2581
  call void @llvm.dbg.declare(metadata %struct.BakeImBufuserData** %userdata, metadata !2584, metadata !DIExpression()), !dbg !2585
  %13 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2586
  %userdata7 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %13, i32 0, i32 25, !dbg !2587
  %14 = load i8*, i8** %userdata7, align 8, !dbg !2587
  %15 = bitcast i8* %14 to %struct.BakeImBufuserData*, !dbg !2588
  store %struct.BakeImBufuserData* %15, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2585
  %16 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2589
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %16, i32 0, i32 2, !dbg !2591
  %17 = load i32, i32* %x, align 8, !dbg !2591
  %cmp8 = icmp sle i32 %17, 0, !dbg !2592
  br i1 %cmp8, label %if.then, label %lor.lhs.false, !dbg !2593

lor.lhs.false:                                    ; preds = %for.body
  %18 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2594
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %18, i32 0, i32 3, !dbg !2595
  %19 = load i32, i32* %y, align 4, !dbg !2595
  %cmp10 = icmp sle i32 %19, 0, !dbg !2596
  br i1 %cmp10, label %if.then, label %if.end, !dbg !2597

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !2598

if.end:                                           ; preds = %lor.lhs.false
  %20 = load i8, i8* %use_displacement_buffer, align 1, !dbg !2599
  %tobool12 = icmp ne i8 %20, 0, !dbg !2599
  br i1 %tobool12, label %if.then13, label %if.end25, !dbg !2601

if.then13:                                        ; preds = %if.end
  %21 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2602
  %mode14 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %21, i32 0, i32 6, !dbg !2605
  %22 = load i16, i16* %mode14, align 8, !dbg !2605
  %conv15 = sext i16 %22 to i32, !dbg !2602
  %cmp16 = icmp eq i32 %conv15, 13, !dbg !2606
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !2607

if.then18:                                        ; preds = %if.then13
  %23 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2608
  %24 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2610
  %displacement_buffer = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %24, i32 0, i32 0, !dbg !2611
  %25 = load float*, float** %displacement_buffer, align 8, !dbg !2611
  %26 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2612
  %mask_buffer = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %26, i32 0, i32 1, !dbg !2613
  %27 = load i8*, i8** %mask_buffer, align 8, !dbg !2613
  %28 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !2614
  %height_min = getelementptr inbounds %struct.MultiresBakeResult, %struct.MultiresBakeResult* %28, i32 0, i32 0, !dbg !2615
  %29 = load float, float* %height_min, align 4, !dbg !2615
  %30 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !2616
  %height_max = getelementptr inbounds %struct.MultiresBakeResult, %struct.MultiresBakeResult* %30, i32 0, i32 1, !dbg !2617
  %31 = load float, float* %height_max, align 4, !dbg !2617
  %32 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2618
  %user_scale = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %32, i32 0, i32 18, !dbg !2619
  %33 = load float, float* %user_scale, align 4, !dbg !2619
  %call19 = call float @RE_bake_make_derivative(%struct.ImBuf* %23, float* %25, i8* %27, float %29, float %31, float %33), !dbg !2620
  br label %if.end24, !dbg !2621

if.else:                                          ; preds = %if.then13
  %34 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2622
  %35 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2624
  %displacement_buffer20 = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %35, i32 0, i32 0, !dbg !2625
  %36 = load float*, float** %displacement_buffer20, align 8, !dbg !2625
  %37 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2626
  %mask_buffer21 = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %37, i32 0, i32 1, !dbg !2627
  %38 = load i8*, i8** %mask_buffer21, align 8, !dbg !2627
  %39 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !2628
  %height_min22 = getelementptr inbounds %struct.MultiresBakeResult, %struct.MultiresBakeResult* %39, i32 0, i32 0, !dbg !2629
  %40 = load float, float* %height_min22, align 4, !dbg !2629
  %41 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !2630
  %height_max23 = getelementptr inbounds %struct.MultiresBakeResult, %struct.MultiresBakeResult* %41, i32 0, i32 1, !dbg !2631
  %42 = load float, float* %height_max23, align 4, !dbg !2631
  call void @RE_bake_ibuf_normalize_displacement(%struct.ImBuf* %34, float* %36, i8* %38, float %40, float %42), !dbg !2632
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then18
  br label %if.end25, !dbg !2633

if.end25:                                         ; preds = %if.end24, %if.end
  %43 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2634
  %44 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2635
  %mask_buffer26 = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %44, i32 0, i32 1, !dbg !2636
  %45 = load i8*, i8** %mask_buffer26, align 8, !dbg !2636
  %46 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2637
  %bake_filter = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %46, i32 0, i32 3, !dbg !2638
  %47 = load i32, i32* %bake_filter, align 4, !dbg !2638
  call void @RE_bake_ibuf_filter(%struct.ImBuf* %43, i8* %45, i32 %47), !dbg !2639
  %48 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2640
  %userflags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %48, i32 0, i32 23, !dbg !2641
  %49 = load i32, i32* %userflags, align 4, !dbg !2642
  %or = or i32 %49, 18, !dbg !2642
  store i32 %or, i32* %userflags, align 4, !dbg !2642
  %50 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2643
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %50, i32 0, i32 9, !dbg !2645
  %51 = load float*, float** %rect_float, align 8, !dbg !2645
  %tobool27 = icmp ne float* %51, null, !dbg !2643
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !2646

if.then28:                                        ; preds = %if.end25
  %52 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2647
  %userflags29 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %52, i32 0, i32 23, !dbg !2648
  %53 = load i32, i32* %userflags29, align 4, !dbg !2649
  %or30 = or i32 %53, 8, !dbg !2649
  store i32 %or30, i32* %userflags29, align 4, !dbg !2649
  br label %if.end31, !dbg !2647

if.end31:                                         ; preds = %if.then28, %if.end25
  %54 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2650
  %mipmap = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %54, i32 0, i32 19, !dbg !2652
  %arrayidx = getelementptr inbounds [20 x %struct.ImBuf*], [20 x %struct.ImBuf*]* %mipmap, i64 0, i64 0, !dbg !2650
  %55 = load %struct.ImBuf*, %struct.ImBuf** %arrayidx, align 8, !dbg !2650
  %tobool32 = icmp ne %struct.ImBuf* %55, null, !dbg !2650
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !2653

if.then33:                                        ; preds = %if.end31
  %56 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2654
  %userflags34 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %56, i32 0, i32 23, !dbg !2656
  %57 = load i32, i32* %userflags34, align 4, !dbg !2657
  %or35 = or i32 %57, 4, !dbg !2657
  store i32 %or35, i32* %userflags34, align 4, !dbg !2657
  %58 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2658
  call void @imb_freemipmapImBuf(%struct.ImBuf* %58), !dbg !2659
  br label %if.end36, !dbg !2660

if.end36:                                         ; preds = %if.then33, %if.end31
  %59 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2661
  %userdata37 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %59, i32 0, i32 25, !dbg !2663
  %60 = load i8*, i8** %userdata37, align 8, !dbg !2663
  %tobool38 = icmp ne i8* %60, null, !dbg !2661
  br i1 %tobool38, label %if.then39, label %if.end47, !dbg !2664

if.then39:                                        ; preds = %if.end36
  %61 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2665
  %displacement_buffer40 = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %61, i32 0, i32 0, !dbg !2668
  %62 = load float*, float** %displacement_buffer40, align 8, !dbg !2668
  %tobool41 = icmp ne float* %62, null, !dbg !2665
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !2669

if.then42:                                        ; preds = %if.then39
  %63 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2670
  %64 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2671
  %displacement_buffer43 = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %64, i32 0, i32 0, !dbg !2672
  %65 = load float*, float** %displacement_buffer43, align 8, !dbg !2672
  %66 = bitcast float* %65 to i8*, !dbg !2671
  call void %63(i8* %66), !dbg !2670
  br label %if.end44, !dbg !2670

if.end44:                                         ; preds = %if.then42, %if.then39
  %67 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2673
  %68 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2674
  %mask_buffer45 = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %68, i32 0, i32 1, !dbg !2675
  %69 = load i8*, i8** %mask_buffer45, align 8, !dbg !2675
  call void %67(i8* %69), !dbg !2673
  %70 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2676
  %71 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !2677
  %72 = bitcast %struct.BakeImBufuserData* %71 to i8*, !dbg !2677
  call void %70(i8* %72), !dbg !2676
  %73 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2678
  %userdata46 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %73, i32 0, i32 25, !dbg !2679
  store i8* null, i8** %userdata46, align 8, !dbg !2680
  br label %if.end47, !dbg !2681

if.end47:                                         ; preds = %if.end44, %if.end36
  %74 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !2682
  %75 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2683
  call void @BKE_image_release_ibuf(%struct.Image* %74, %struct.ImBuf* %75, i8* null), !dbg !2684
  %76 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !2685
  %id = getelementptr inbounds %struct.Image, %struct.Image* %76, i32 0, i32 0, !dbg !2686
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 0), !dbg !2687
  br label %for.inc, !dbg !2688

for.inc:                                          ; preds = %if.end47, %if.then
  %77 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !2689
  %next = getelementptr inbounds %struct.LinkData, %struct.LinkData* %77, i32 0, i32 0, !dbg !2690
  %78 = load %struct.LinkData*, %struct.LinkData** %next, align 8, !dbg !2690
  store %struct.LinkData* %78, %struct.LinkData** %link, align 8, !dbg !2691
  br label %for.cond, !dbg !2692, !llvm.loop !2693

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2695
}

declare dso_local i8* @CustomData_get_layer(%struct.CustomData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !2696 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !2701, metadata !DIExpression()), !dbg !2702
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2703
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !2704
  store i8* null, i8** %last, align 8, !dbg !2705
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2706
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !2707
  store i8* null, i8** %first, align 8, !dbg !2708
  ret void, !dbg !2709
}

declare dso_local %struct.LinkData* @BLI_genericNodeN(i8*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

declare dso_local %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image*, %struct.ImageUser*, i8**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_multires_bake(%struct.MultiresBakeRender* %bkr, %struct.Image* %ima, i8 zeroext %require_tangent, void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)* %passKnownData, i8* (%struct.MultiresBakeRender*, %struct.Image*)* %initBakeData, void (i8*)* %freeBakeData, %struct.MultiresBakeResult* %result) #0 !dbg !2710 {
entry:
  %bkr.addr = alloca %struct.MultiresBakeRender*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %require_tangent.addr = alloca i8, align 1
  %passKnownData.addr = alloca void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)*, align 8
  %initBakeData.addr = alloca i8* (%struct.MultiresBakeRender*, %struct.Image*)*, align 8
  %freeBakeData.addr = alloca void (i8*)*, align 8
  %result.addr = alloca %struct.MultiresBakeResult*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %lvl = alloca i32, align 4
  %tot_face = alloca i32, align 4
  %handles = alloca %struct.MultiresBakeThread*, align 8
  %queue = alloca %struct.MultiresBakeQueue, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mface = alloca %struct.MFace*, align 8
  %mtface = alloca %struct.MTFace*, align 8
  %precomputed_normals = alloca float*, align 8
  %pvtangent = alloca float*, align 8
  %threads = alloca %struct.ListBase, align 8
  %i = alloca i32, align 4
  %tot_thread = alloca i32, align 4
  %bake_data = alloca i8*, align 8
  %handle = alloca %struct.MultiresBakeThread*, align 8
  store %struct.MultiresBakeRender* %bkr, %struct.MultiresBakeRender** %bkr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeRender** %bkr.addr, metadata !2721, metadata !DIExpression()), !dbg !2722
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !2723, metadata !DIExpression()), !dbg !2724
  store i8 %require_tangent, i8* %require_tangent.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %require_tangent.addr, metadata !2725, metadata !DIExpression()), !dbg !2726
  store void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)* %passKnownData, void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)** %passKnownData.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)** %passKnownData.addr, metadata !2727, metadata !DIExpression()), !dbg !2728
  store i8* (%struct.MultiresBakeRender*, %struct.Image*)* %initBakeData, i8* (%struct.MultiresBakeRender*, %struct.Image*)** %initBakeData.addr, align 8
  call void @llvm.dbg.declare(metadata i8* (%struct.MultiresBakeRender*, %struct.Image*)** %initBakeData.addr, metadata !2729, metadata !DIExpression()), !dbg !2730
  store void (i8*)* %freeBakeData, void (i8*)** %freeBakeData.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %freeBakeData.addr, metadata !2731, metadata !DIExpression()), !dbg !2732
  store %struct.MultiresBakeResult* %result, %struct.MultiresBakeResult** %result.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeResult** %result.addr, metadata !2733, metadata !DIExpression()), !dbg !2734
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !2735, metadata !DIExpression()), !dbg !2736
  %0 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2737
  %lores_dm = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %0, i32 0, i32 0, !dbg !2738
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm, align 8, !dbg !2738
  store %struct.DerivedMesh* %1, %struct.DerivedMesh** %dm, align 8, !dbg !2736
  call void @llvm.dbg.declare(metadata i32* %lvl, metadata !2739, metadata !DIExpression()), !dbg !2740
  %2 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2741
  %lvl1 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %2, i32 0, i32 4, !dbg !2742
  %3 = load i32, i32* %lvl1, align 8, !dbg !2742
  store i32 %3, i32* %lvl, align 4, !dbg !2740
  call void @llvm.dbg.declare(metadata i32* %tot_face, metadata !2743, metadata !DIExpression()), !dbg !2744
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2745
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 25, !dbg !2746
  %5 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !2746
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2747
  %call = call i32 %5(%struct.DerivedMesh* %6), !dbg !2745
  store i32 %call, i32* %tot_face, align 4, !dbg !2744
  %7 = load i32, i32* %tot_face, align 4, !dbg !2748
  %cmp = icmp sgt i32 %7, 0, !dbg !2750
  br i1 %cmp, label %if.then, label %if.end95, !dbg !2751

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeThread** %handles, metadata !2752, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeQueue* %queue, metadata !2755, metadata !DIExpression()), !dbg !2756
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !2757, metadata !DIExpression()), !dbg !2758
  %8 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2759
  %call2 = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %8, %struct.ImageUser* null, i8** null), !dbg !2760
  store %struct.ImBuf* %call2, %struct.ImBuf** %ibuf, align 8, !dbg !2758
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !2761, metadata !DIExpression()), !dbg !2762
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2763
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 31, !dbg !2764
  %10 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !2764
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2765
  %call3 = call %struct.MVert* %10(%struct.DerivedMesh* %11), !dbg !2763
  store %struct.MVert* %call3, %struct.MVert** %mvert, align 8, !dbg !2762
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !2766, metadata !DIExpression()), !dbg !2767
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2768
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 33, !dbg !2769
  %13 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !2769
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2770
  %call4 = call %struct.MFace* %13(%struct.DerivedMesh* %14), !dbg !2768
  store %struct.MFace* %call4, %struct.MFace** %mface, align 8, !dbg !2767
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !2771, metadata !DIExpression()), !dbg !2772
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2773
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 52, !dbg !2774
  %16 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !2774
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2775
  %call5 = call i8* %16(%struct.DerivedMesh* %17, i32 5), !dbg !2773
  %18 = bitcast i8* %call5 to %struct.MTFace*, !dbg !2773
  store %struct.MTFace* %18, %struct.MTFace** %mtface, align 8, !dbg !2772
  call void @llvm.dbg.declare(metadata float** %precomputed_normals, metadata !2776, metadata !DIExpression()), !dbg !2777
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2778
  %getTessFaceDataArray6 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 52, !dbg !2779
  %20 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray6, align 8, !dbg !2779
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2780
  %call7 = call i8* %20(%struct.DerivedMesh* %21, i32 8), !dbg !2778
  %22 = bitcast i8* %call7 to float*, !dbg !2778
  store float* %22, float** %precomputed_normals, align 8, !dbg !2777
  call void @llvm.dbg.declare(metadata float** %pvtangent, metadata !2781, metadata !DIExpression()), !dbg !2782
  store float* null, float** %pvtangent, align 8, !dbg !2782
  call void @llvm.dbg.declare(metadata %struct.ListBase* %threads, metadata !2783, metadata !DIExpression()), !dbg !2784
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2785, metadata !DIExpression()), !dbg !2786
  call void @llvm.dbg.declare(metadata i32* %tot_thread, metadata !2787, metadata !DIExpression()), !dbg !2788
  %23 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2789
  %threads8 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %23, i32 0, i32 17, !dbg !2790
  %24 = load i32, i32* %threads8, align 8, !dbg !2790
  %cmp9 = icmp sgt i32 %24, 0, !dbg !2791
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !2789

cond.true:                                        ; preds = %if.then
  %25 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2792
  %threads10 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %25, i32 0, i32 17, !dbg !2793
  %26 = load i32, i32* %threads10, align 8, !dbg !2793
  br label %cond.end, !dbg !2789

cond.false:                                       ; preds = %if.then
  %call11 = call i32 @BLI_system_thread_count(), !dbg !2794
  br label %cond.end, !dbg !2789

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %26, %cond.true ], [ %call11, %cond.false ], !dbg !2789
  store i32 %cond, i32* %tot_thread, align 4, !dbg !2788
  call void @llvm.dbg.declare(metadata i8** %bake_data, metadata !2795, metadata !DIExpression()), !dbg !2796
  store i8* null, i8** %bake_data, align 8, !dbg !2796
  %27 = load i8, i8* %require_tangent.addr, align 1, !dbg !2797
  %tobool = icmp ne i8 %27, 0, !dbg !2797
  br i1 %tobool, label %if.then12, label %if.end17, !dbg !2799

if.then12:                                        ; preds = %cond.end
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2800
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %28, i32 0, i32 2, !dbg !2803
  %call13 = call i32 @CustomData_get_layer_index(%struct.CustomData* %faceData, i32 18), !dbg !2804
  %cmp14 = icmp eq i32 %call13, -1, !dbg !2805
  br i1 %cmp14, label %if.then15, label %if.end, !dbg !2806

if.then15:                                        ; preds = %if.then12
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2807
  call void @DM_add_tangent_layer(%struct.DerivedMesh* %29), !dbg !2808
  br label %if.end, !dbg !2808

if.end:                                           ; preds = %if.then15, %if.then12
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2809
  %call16 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %30, i32 18), !dbg !2810
  %31 = bitcast i8* %call16 to float*, !dbg !2810
  store float* %31, float** %pvtangent, align 8, !dbg !2811
  br label %if.end17, !dbg !2812

if.end17:                                         ; preds = %if.end, %cond.end
  %32 = load i8* (%struct.MultiresBakeRender*, %struct.Image*)*, i8* (%struct.MultiresBakeRender*, %struct.Image*)** %initBakeData.addr, align 8, !dbg !2813
  %tobool18 = icmp ne i8* (%struct.MultiresBakeRender*, %struct.Image*)* %32, null, !dbg !2813
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !2815

if.then19:                                        ; preds = %if.end17
  %33 = load i8* (%struct.MultiresBakeRender*, %struct.Image*)*, i8* (%struct.MultiresBakeRender*, %struct.Image*)** %initBakeData.addr, align 8, !dbg !2816
  %34 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2817
  %35 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2818
  %call20 = call i8* %33(%struct.MultiresBakeRender* %34, %struct.Image* %35), !dbg !2816
  store i8* %call20, i8** %bake_data, align 8, !dbg !2819
  br label %if.end21, !dbg !2820

if.end21:                                         ; preds = %if.then19, %if.end17
  %36 = load i32, i32* %tot_thread, align 4, !dbg !2821
  %cmp22 = icmp sgt i32 %36, 1, !dbg !2823
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !2824

if.then23:                                        ; preds = %if.end21
  %37 = load i32, i32* %tot_thread, align 4, !dbg !2825
  call void @BLI_init_threads(%struct.ListBase* %threads, i8* (i8*)* @do_multires_bake_thread, i32 %37), !dbg !2826
  br label %if.end24, !dbg !2826

if.end24:                                         ; preds = %if.then23, %if.end21
  %38 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2827
  %39 = load i32, i32* %tot_thread, align 4, !dbg !2828
  %conv = sext i32 %39 to i64, !dbg !2828
  %mul = mul i64 %conv, 200, !dbg !2829
  %call25 = call i8* %38(i64 %mul, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0)), !dbg !2827
  %40 = bitcast i8* %call25 to %struct.MultiresBakeThread*, !dbg !2827
  store %struct.MultiresBakeThread* %40, %struct.MultiresBakeThread** %handles, align 8, !dbg !2830
  %41 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2831
  %hires_dm = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %41, i32 0, i32 1, !dbg !2832
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hires_dm, align 8, !dbg !2832
  call void @init_ccgdm_arrays(%struct.DerivedMesh* %42), !dbg !2833
  %cur_face = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %queue, i32 0, i32 0, !dbg !2834
  store i32 0, i32* %cur_face, align 4, !dbg !2835
  %43 = load i32, i32* %tot_face, align 4, !dbg !2836
  %tot_face26 = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %queue, i32 0, i32 1, !dbg !2837
  store i32 %43, i32* %tot_face26, align 4, !dbg !2838
  %spin = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %queue, i32 0, i32 2, !dbg !2839
  call void @BLI_spin_init(i32* %spin), !dbg !2840
  store i32 0, i32* %i, align 4, !dbg !2841
  br label %for.cond, !dbg !2843

for.cond:                                         ; preds = %for.inc, %if.end24
  %44 = load i32, i32* %i, align 4, !dbg !2844
  %45 = load i32, i32* %tot_thread, align 4, !dbg !2846
  %cmp27 = icmp slt i32 %44, %45, !dbg !2847
  br i1 %cmp27, label %for.body, label %for.end, !dbg !2848

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeThread** %handle, metadata !2849, metadata !DIExpression()), !dbg !2851
  %46 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handles, align 8, !dbg !2852
  %47 = load i32, i32* %i, align 4, !dbg !2853
  %idxprom = sext i32 %47 to i64, !dbg !2852
  %arrayidx = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %46, i64 %idxprom, !dbg !2852
  store %struct.MultiresBakeThread* %arrayidx, %struct.MultiresBakeThread** %handle, align 8, !dbg !2851
  %48 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2854
  %49 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2855
  %bkr29 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %49, i32 0, i32 1, !dbg !2856
  store %struct.MultiresBakeRender* %48, %struct.MultiresBakeRender** %bkr29, align 8, !dbg !2857
  %50 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !2858
  %51 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2859
  %image = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %51, i32 0, i32 2, !dbg !2860
  store %struct.Image* %50, %struct.Image** %image, align 8, !dbg !2861
  %52 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2862
  %queue30 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %52, i32 0, i32 0, !dbg !2863
  store %struct.MultiresBakeQueue* %queue, %struct.MultiresBakeQueue** %queue30, align 8, !dbg !2864
  %53 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !2865
  %54 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2866
  %data = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %54, i32 0, i32 5, !dbg !2867
  %mface31 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data, i32 0, i32 1, !dbg !2868
  store %struct.MFace* %53, %struct.MFace** %mface31, align 8, !dbg !2869
  %55 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !2870
  %56 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2871
  %data32 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %56, i32 0, i32 5, !dbg !2872
  %mvert33 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data32, i32 0, i32 0, !dbg !2873
  store %struct.MVert* %55, %struct.MVert** %mvert33, align 8, !dbg !2874
  %57 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !2875
  %58 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2876
  %data34 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %58, i32 0, i32 5, !dbg !2877
  %mtface35 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data34, i32 0, i32 2, !dbg !2878
  store %struct.MTFace* %57, %struct.MTFace** %mtface35, align 8, !dbg !2879
  %59 = load float*, float** %pvtangent, align 8, !dbg !2880
  %60 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2881
  %data36 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %60, i32 0, i32 5, !dbg !2882
  %pvtangent37 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data36, i32 0, i32 3, !dbg !2883
  store float* %59, float** %pvtangent37, align 8, !dbg !2884
  %61 = load float*, float** %precomputed_normals, align 8, !dbg !2885
  %62 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2886
  %data38 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %62, i32 0, i32 5, !dbg !2887
  %precomputed_normals39 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data38, i32 0, i32 4, !dbg !2888
  store float* %61, float** %precomputed_normals39, align 8, !dbg !2889
  %63 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2890
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %63, i32 0, i32 2, !dbg !2891
  %64 = load i32, i32* %x, align 8, !dbg !2891
  %65 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2892
  %data40 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %65, i32 0, i32 5, !dbg !2893
  %w = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data40, i32 0, i32 5, !dbg !2894
  store i32 %64, i32* %w, align 8, !dbg !2895
  %66 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2896
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %66, i32 0, i32 3, !dbg !2897
  %67 = load i32, i32* %y, align 4, !dbg !2897
  %68 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2898
  %data41 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %68, i32 0, i32 5, !dbg !2899
  %h = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data41, i32 0, i32 6, !dbg !2900
  store i32 %67, i32* %h, align 4, !dbg !2901
  %69 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !2902
  %70 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2903
  %data42 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %70, i32 0, i32 5, !dbg !2904
  %lores_dm43 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data42, i32 0, i32 11, !dbg !2905
  store %struct.DerivedMesh* %69, %struct.DerivedMesh** %lores_dm43, align 8, !dbg !2906
  %71 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2907
  %hires_dm44 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %71, i32 0, i32 1, !dbg !2908
  %72 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hires_dm44, align 8, !dbg !2908
  %73 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2909
  %data45 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %73, i32 0, i32 5, !dbg !2910
  %hires_dm46 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data45, i32 0, i32 12, !dbg !2911
  store %struct.DerivedMesh* %72, %struct.DerivedMesh** %hires_dm46, align 8, !dbg !2912
  %74 = load i32, i32* %lvl, align 4, !dbg !2913
  %75 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2914
  %data47 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %75, i32 0, i32 5, !dbg !2915
  %lvl48 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data47, i32 0, i32 13, !dbg !2916
  store i32 %74, i32* %lvl48, align 8, !dbg !2917
  %76 = load void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)*, void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)** %passKnownData.addr, align 8, !dbg !2918
  %77 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2919
  %data49 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %77, i32 0, i32 5, !dbg !2920
  %pass_data = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data49, i32 0, i32 17, !dbg !2921
  store void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)* %76, void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)** %pass_data, align 8, !dbg !2922
  %78 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2923
  %79 = bitcast %struct.MultiresBakeThread* %78 to i8*, !dbg !2923
  %80 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2924
  %data50 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %80, i32 0, i32 5, !dbg !2925
  %thread_data = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data50, i32 0, i32 14, !dbg !2926
  store i8* %79, i8** %thread_data, align 8, !dbg !2927
  %81 = load i8*, i8** %bake_data, align 8, !dbg !2928
  %82 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2929
  %data51 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %82, i32 0, i32 5, !dbg !2930
  %bake_data52 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data51, i32 0, i32 15, !dbg !2931
  store i8* %81, i8** %bake_data52, align 8, !dbg !2932
  %83 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2933
  %84 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2934
  %data53 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %84, i32 0, i32 5, !dbg !2935
  %ibuf54 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %data53, i32 0, i32 16, !dbg !2936
  store %struct.ImBuf* %83, %struct.ImBuf** %ibuf54, align 8, !dbg !2937
  %85 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2938
  %height_min = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %85, i32 0, i32 6, !dbg !2939
  store float 0x47EFFFFFE0000000, float* %height_min, align 8, !dbg !2940
  %86 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2941
  %height_max = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %86, i32 0, i32 7, !dbg !2942
  store float 0xC7EFFFFFE0000000, float* %height_max, align 4, !dbg !2943
  %87 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2944
  %bake_rast = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %87, i32 0, i32 4, !dbg !2945
  %88 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !2946
  %89 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2947
  %data55 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %89, i32 0, i32 5, !dbg !2948
  %90 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !2949
  %do_update = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %90, i32 0, i32 20, !dbg !2950
  %91 = load i16*, i16** %do_update, align 8, !dbg !2950
  call void @init_bake_rast(%struct.MBakeRast* %bake_rast, %struct.ImBuf* %88, %struct.MResolvePixelData* %data55, void (%struct.MResolvePixelData*, i32, i32)* @flush_pixel, i16* %91), !dbg !2951
  %92 = load i32, i32* %tot_thread, align 4, !dbg !2952
  %cmp56 = icmp sgt i32 %92, 1, !dbg !2954
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !2955

if.then58:                                        ; preds = %for.body
  %93 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !2956
  %94 = bitcast %struct.MultiresBakeThread* %93 to i8*, !dbg !2956
  call void @BLI_insert_thread(%struct.ListBase* %threads, i8* %94), !dbg !2957
  br label %if.end59, !dbg !2957

if.end59:                                         ; preds = %if.then58, %for.body
  br label %for.inc, !dbg !2958

for.inc:                                          ; preds = %if.end59
  %95 = load i32, i32* %i, align 4, !dbg !2959
  %inc = add nsw i32 %95, 1, !dbg !2959
  store i32 %inc, i32* %i, align 4, !dbg !2959
  br label %for.cond, !dbg !2960, !llvm.loop !2961

for.end:                                          ; preds = %for.cond
  %96 = load i32, i32* %tot_thread, align 4, !dbg !2963
  %cmp60 = icmp sgt i32 %96, 1, !dbg !2965
  br i1 %cmp60, label %if.then62, label %if.else, !dbg !2966

if.then62:                                        ; preds = %for.end
  call void @BLI_end_threads(%struct.ListBase* %threads), !dbg !2967
  br label %if.end65, !dbg !2967

if.else:                                          ; preds = %for.end
  %97 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handles, align 8, !dbg !2968
  %arrayidx63 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %97, i64 0, !dbg !2968
  %98 = bitcast %struct.MultiresBakeThread* %arrayidx63 to i8*, !dbg !2969
  %call64 = call i8* @do_multires_bake_thread(i8* %98), !dbg !2970
  br label %if.end65

if.end65:                                         ; preds = %if.else, %if.then62
  %99 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handles, align 8, !dbg !2971
  %arrayidx66 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %99, i64 0, !dbg !2971
  %height_min67 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %arrayidx66, i32 0, i32 6, !dbg !2972
  %100 = load float, float* %height_min67, align 8, !dbg !2972
  %101 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !2973
  %height_min68 = getelementptr inbounds %struct.MultiresBakeResult, %struct.MultiresBakeResult* %101, i32 0, i32 0, !dbg !2974
  store float %100, float* %height_min68, align 4, !dbg !2975
  %102 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handles, align 8, !dbg !2976
  %arrayidx69 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %102, i64 0, !dbg !2976
  %height_max70 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %arrayidx69, i32 0, i32 7, !dbg !2977
  %103 = load float, float* %height_max70, align 4, !dbg !2977
  %104 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !2978
  %height_max71 = getelementptr inbounds %struct.MultiresBakeResult, %struct.MultiresBakeResult* %104, i32 0, i32 1, !dbg !2979
  store float %103, float* %height_max71, align 4, !dbg !2980
  store i32 1, i32* %i, align 4, !dbg !2981
  br label %for.cond72, !dbg !2983

for.cond72:                                       ; preds = %for.inc88, %if.end65
  %105 = load i32, i32* %i, align 4, !dbg !2984
  %106 = load i32, i32* %tot_thread, align 4, !dbg !2986
  %cmp73 = icmp slt i32 %105, %106, !dbg !2987
  br i1 %cmp73, label %for.body75, label %for.end90, !dbg !2988

for.body75:                                       ; preds = %for.cond72
  %107 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !2989
  %height_min76 = getelementptr inbounds %struct.MultiresBakeResult, %struct.MultiresBakeResult* %107, i32 0, i32 0, !dbg !2991
  %108 = load float, float* %height_min76, align 4, !dbg !2991
  %109 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handles, align 8, !dbg !2992
  %110 = load i32, i32* %i, align 4, !dbg !2993
  %idxprom77 = sext i32 %110 to i64, !dbg !2992
  %arrayidx78 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %109, i64 %idxprom77, !dbg !2992
  %height_min79 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %arrayidx78, i32 0, i32 6, !dbg !2994
  %111 = load float, float* %height_min79, align 8, !dbg !2994
  %call80 = call float @min_ff(float %108, float %111), !dbg !2995
  %112 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !2996
  %height_min81 = getelementptr inbounds %struct.MultiresBakeResult, %struct.MultiresBakeResult* %112, i32 0, i32 0, !dbg !2997
  store float %call80, float* %height_min81, align 4, !dbg !2998
  %113 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !2999
  %height_max82 = getelementptr inbounds %struct.MultiresBakeResult, %struct.MultiresBakeResult* %113, i32 0, i32 1, !dbg !3000
  %114 = load float, float* %height_max82, align 4, !dbg !3000
  %115 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handles, align 8, !dbg !3001
  %116 = load i32, i32* %i, align 4, !dbg !3002
  %idxprom83 = sext i32 %116 to i64, !dbg !3001
  %arrayidx84 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %115, i64 %idxprom83, !dbg !3001
  %height_max85 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %arrayidx84, i32 0, i32 7, !dbg !3003
  %117 = load float, float* %height_max85, align 4, !dbg !3003
  %call86 = call float @max_ff(float %114, float %117), !dbg !3004
  %118 = load %struct.MultiresBakeResult*, %struct.MultiresBakeResult** %result.addr, align 8, !dbg !3005
  %height_max87 = getelementptr inbounds %struct.MultiresBakeResult, %struct.MultiresBakeResult* %118, i32 0, i32 1, !dbg !3006
  store float %call86, float* %height_max87, align 4, !dbg !3007
  br label %for.inc88, !dbg !3008

for.inc88:                                        ; preds = %for.body75
  %119 = load i32, i32* %i, align 4, !dbg !3009
  %inc89 = add nsw i32 %119, 1, !dbg !3009
  store i32 %inc89, i32* %i, align 4, !dbg !3009
  br label %for.cond72, !dbg !3010, !llvm.loop !3011

for.end90:                                        ; preds = %for.cond72
  %spin91 = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %queue, i32 0, i32 2, !dbg !3013
  call void @BLI_spin_end(i32* %spin91), !dbg !3014
  %120 = load void (i8*)*, void (i8*)** %freeBakeData.addr, align 8, !dbg !3015
  %tobool92 = icmp ne void (i8*)* %120, null, !dbg !3015
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !3017

if.then93:                                        ; preds = %for.end90
  %121 = load void (i8*)*, void (i8*)** %freeBakeData.addr, align 8, !dbg !3018
  %122 = load i8*, i8** %bake_data, align 8, !dbg !3019
  call void %121(i8* %122), !dbg !3018
  br label %if.end94, !dbg !3018

if.end94:                                         ; preds = %if.then93, %for.end90
  %123 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3020
  %124 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handles, align 8, !dbg !3021
  %125 = bitcast %struct.MultiresBakeThread* %124 to i8*, !dbg !3021
  call void %123(i8* %125), !dbg !3020
  %126 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3022
  %127 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3023
  call void @BKE_image_release_ibuf(%struct.Image* %126, %struct.ImBuf* %127, i8* null), !dbg !3024
  br label %if.end95, !dbg !3025

if.end95:                                         ; preds = %if.end94, %entry
  ret void, !dbg !3026
}

; Function Attrs: noinline nounwind uwtable
define internal void @apply_tangmat_callback(%struct.DerivedMesh* %lores_dm, %struct.DerivedMesh* %hires_dm, i8* %UNUSED_thread_data, i8* %bake_data, %struct.ImBuf* %ibuf, i32 %face_index, i32 %lvl, float* %st, [3 x float]* %tangmat, i32 %x, i32 %y) #0 !dbg !3027 {
entry:
  %lores_dm.addr = alloca %struct.DerivedMesh*, align 8
  %hires_dm.addr = alloca %struct.DerivedMesh*, align 8
  %UNUSED_thread_data.addr = alloca i8*, align 8
  %bake_data.addr = alloca i8*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %face_index.addr = alloca i32, align 4
  %lvl.addr = alloca i32, align 4
  %st.addr = alloca float*, align 8
  %tangmat.addr = alloca [3 x float]*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %mtface = alloca %struct.MTFace*, align 8
  %mface = alloca %struct.MFace, align 4
  %normal_data = alloca %struct.MNormalBakeData*, align 8
  %uv = alloca [2 x float], align 4
  %st0 = alloca float*, align 8
  %st1 = alloca float*, align 8
  %st2 = alloca float*, align 8
  %st3 = alloca float*, align 8
  %pixel = alloca i32, align 4
  %n = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  %tmp = alloca [3 x float], align 4
  %rrgbf = alloca float*, align 8
  %rrgb = alloca i8*, align 8
  store %struct.DerivedMesh* %lores_dm, %struct.DerivedMesh** %lores_dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %lores_dm.addr, metadata !3028, metadata !DIExpression()), !dbg !3029
  store %struct.DerivedMesh* %hires_dm, %struct.DerivedMesh** %hires_dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %hires_dm.addr, metadata !3030, metadata !DIExpression()), !dbg !3031
  store i8* %UNUSED_thread_data, i8** %UNUSED_thread_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_thread_data.addr, metadata !3032, metadata !DIExpression()), !dbg !3033
  store i8* %bake_data, i8** %bake_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bake_data.addr, metadata !3034, metadata !DIExpression()), !dbg !3035
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !3036, metadata !DIExpression()), !dbg !3037
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !3038, metadata !DIExpression()), !dbg !3039
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !3040, metadata !DIExpression()), !dbg !3041
  store float* %st, float** %st.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st.addr, metadata !3042, metadata !DIExpression()), !dbg !3043
  store [3 x float]* %tangmat, [3 x float]** %tangmat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %tangmat.addr, metadata !3044, metadata !DIExpression()), !dbg !3045
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !3046, metadata !DIExpression()), !dbg !3047
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !3048, metadata !DIExpression()), !dbg !3049
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !3050, metadata !DIExpression()), !dbg !3051
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3052
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 2, !dbg !3053
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %faceData, i32 5), !dbg !3054
  %1 = bitcast i8* %call to %struct.MTFace*, !dbg !3054
  store %struct.MTFace* %1, %struct.MTFace** %mtface, align 8, !dbg !3051
  call void @llvm.dbg.declare(metadata %struct.MFace* %mface, metadata !3055, metadata !DIExpression()), !dbg !3056
  call void @llvm.dbg.declare(metadata %struct.MNormalBakeData** %normal_data, metadata !3057, metadata !DIExpression()), !dbg !3058
  %2 = load i8*, i8** %bake_data.addr, align 8, !dbg !3059
  %3 = bitcast i8* %2 to %struct.MNormalBakeData*, !dbg !3060
  store %struct.MNormalBakeData* %3, %struct.MNormalBakeData** %normal_data, align 8, !dbg !3058
  call void @llvm.dbg.declare(metadata [2 x float]* %uv, metadata !3061, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.declare(metadata float** %st0, metadata !3063, metadata !DIExpression()), !dbg !3064
  call void @llvm.dbg.declare(metadata float** %st1, metadata !3065, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.declare(metadata float** %st2, metadata !3067, metadata !DIExpression()), !dbg !3068
  call void @llvm.dbg.declare(metadata float** %st3, metadata !3069, metadata !DIExpression()), !dbg !3070
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !3071, metadata !DIExpression()), !dbg !3072
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3073
  %x1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 2, !dbg !3074
  %5 = load i32, i32* %x1, align 8, !dbg !3074
  %6 = load i32, i32* %y.addr, align 4, !dbg !3075
  %mul = mul nsw i32 %5, %6, !dbg !3076
  %7 = load i32, i32* %x.addr, align 4, !dbg !3077
  %add = add nsw i32 %mul, %7, !dbg !3078
  store i32 %add, i32* %pixel, align 4, !dbg !3072
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !3079, metadata !DIExpression()), !dbg !3080
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !3081, metadata !DIExpression()), !dbg !3082
  call void @llvm.dbg.declare(metadata [3 x float]* %tmp, metadata !3083, metadata !DIExpression()), !dbg !3084
  %8 = bitcast [3 x float]* %tmp to i8*, !dbg !3084
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 bitcast ([3 x float]* @__const.apply_tangmat_callback.tmp to i8*), i64 12, i1 false), !dbg !3084
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3085
  %getTessFace = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 30, !dbg !3086
  %10 = load void (%struct.DerivedMesh*, i32, %struct.MFace*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)** %getTessFace, align 8, !dbg !3086
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3087
  %12 = load i32, i32* %face_index.addr, align 4, !dbg !3088
  call void %10(%struct.DerivedMesh* %11, i32 %12, %struct.MFace* %mface), !dbg !3085
  %13 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3089
  %14 = load i32, i32* %face_index.addr, align 4, !dbg !3090
  %idxprom = sext i32 %14 to i64, !dbg !3089
  %arrayidx = getelementptr inbounds %struct.MTFace, %struct.MTFace* %13, i64 %idxprom, !dbg !3089
  %uv2 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx, i32 0, i32 0, !dbg !3091
  %arrayidx3 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv2, i64 0, i64 0, !dbg !3089
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 0, !dbg !3089
  store float* %arraydecay, float** %st0, align 8, !dbg !3092
  %15 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3093
  %16 = load i32, i32* %face_index.addr, align 4, !dbg !3094
  %idxprom4 = sext i32 %16 to i64, !dbg !3093
  %arrayidx5 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %15, i64 %idxprom4, !dbg !3093
  %uv6 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx5, i32 0, i32 0, !dbg !3095
  %arrayidx7 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv6, i64 0, i64 1, !dbg !3093
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx7, i64 0, i64 0, !dbg !3093
  store float* %arraydecay8, float** %st1, align 8, !dbg !3096
  %17 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3097
  %18 = load i32, i32* %face_index.addr, align 4, !dbg !3098
  %idxprom9 = sext i32 %18 to i64, !dbg !3097
  %arrayidx10 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %17, i64 %idxprom9, !dbg !3097
  %uv11 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx10, i32 0, i32 0, !dbg !3099
  %arrayidx12 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv11, i64 0, i64 2, !dbg !3097
  %arraydecay13 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx12, i64 0, i64 0, !dbg !3097
  store float* %arraydecay13, float** %st2, align 8, !dbg !3100
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %mface, i32 0, i32 3, !dbg !3101
  %19 = load i32, i32* %v4, align 4, !dbg !3101
  %tobool = icmp ne i32 %19, 0, !dbg !3103
  br i1 %tobool, label %if.then, label %if.else, !dbg !3104

if.then:                                          ; preds = %entry
  %20 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3105
  %21 = load i32, i32* %face_index.addr, align 4, !dbg !3107
  %idxprom14 = sext i32 %21 to i64, !dbg !3105
  %arrayidx15 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %20, i64 %idxprom14, !dbg !3105
  %uv16 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx15, i32 0, i32 0, !dbg !3108
  %arrayidx17 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv16, i64 0, i64 3, !dbg !3105
  %arraydecay18 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx17, i64 0, i64 0, !dbg !3105
  store float* %arraydecay18, float** %st3, align 8, !dbg !3109
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3110
  %22 = load float*, float** %st.addr, align 8, !dbg !3111
  %23 = load float*, float** %st0, align 8, !dbg !3112
  %24 = load float*, float** %st1, align 8, !dbg !3113
  %25 = load float*, float** %st2, align 8, !dbg !3114
  %26 = load float*, float** %st3, align 8, !dbg !3115
  call void @resolve_quad_uv_v2(float* %arraydecay19, float* %22, float* %23, float* %24, float* %25, float* %26), !dbg !3116
  br label %if.end, !dbg !3117

if.else:                                          ; preds = %entry
  %arraydecay20 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3118
  %27 = load float*, float** %st.addr, align 8, !dbg !3119
  %28 = load float*, float** %st0, align 8, !dbg !3120
  %29 = load float*, float** %st1, align 8, !dbg !3121
  %30 = load float*, float** %st2, align 8, !dbg !3122
  call void @resolve_tri_uv_v2(float* %arraydecay20, float* %27, float* %28, float* %29, float* %30), !dbg !3123
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3124
  %31 = load float, float* %arrayidx21, align 4, !dbg !3124
  %cmp = fcmp olt float %31, 0.000000e+00, !dbg !3124
  br i1 %cmp, label %if.then22, label %if.else24, !dbg !3127

if.then22:                                        ; preds = %if.end
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3124
  store float 0.000000e+00, float* %arrayidx23, align 4, !dbg !3124
  br label %if.end30, !dbg !3124

if.else24:                                        ; preds = %if.end
  %arrayidx25 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3128
  %32 = load float, float* %arrayidx25, align 4, !dbg !3128
  %cmp26 = fcmp ogt float %32, 1.000000e+00, !dbg !3128
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !3124

if.then27:                                        ; preds = %if.else24
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3128
  store float 1.000000e+00, float* %arrayidx28, align 4, !dbg !3128
  br label %if.end29, !dbg !3128

if.end29:                                         ; preds = %if.then27, %if.else24
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then22
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3130
  %33 = load float, float* %arrayidx31, align 4, !dbg !3130
  %cmp32 = fcmp olt float %33, 0.000000e+00, !dbg !3130
  br i1 %cmp32, label %if.then33, label %if.else35, !dbg !3133

if.then33:                                        ; preds = %if.end30
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3130
  store float 0.000000e+00, float* %arrayidx34, align 4, !dbg !3130
  br label %if.end41, !dbg !3130

if.else35:                                        ; preds = %if.end30
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3134
  %34 = load float, float* %arrayidx36, align 4, !dbg !3134
  %cmp37 = fcmp ogt float %34, 1.000000e+00, !dbg !3134
  br i1 %cmp37, label %if.then38, label %if.end40, !dbg !3130

if.then38:                                        ; preds = %if.else35
  %arrayidx39 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3134
  store float 1.000000e+00, float* %arrayidx39, align 4, !dbg !3134
  br label %if.end40, !dbg !3134

if.end40:                                         ; preds = %if.then38, %if.else35
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then33
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3136
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hires_dm.addr, align 8, !dbg !3137
  %37 = load %struct.MNormalBakeData*, %struct.MNormalBakeData** %normal_data, align 8, !dbg !3138
  %orig_index_mf_to_mpoly = getelementptr inbounds %struct.MNormalBakeData, %struct.MNormalBakeData* %37, i32 0, i32 0, !dbg !3139
  %38 = load i32*, i32** %orig_index_mf_to_mpoly, align 8, !dbg !3139
  %39 = load %struct.MNormalBakeData*, %struct.MNormalBakeData** %normal_data, align 8, !dbg !3140
  %orig_index_mp_to_orig = getelementptr inbounds %struct.MNormalBakeData, %struct.MNormalBakeData* %39, i32 0, i32 1, !dbg !3141
  %40 = load i32*, i32** %orig_index_mp_to_orig, align 8, !dbg !3141
  %41 = load i32, i32* %lvl.addr, align 4, !dbg !3142
  %42 = load i32, i32* %face_index.addr, align 4, !dbg !3143
  %arrayidx42 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3144
  %43 = load float, float* %arrayidx42, align 4, !dbg !3144
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3145
  %44 = load float, float* %arrayidx43, align 4, !dbg !3145
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3146
  call void @get_ccgdm_data(%struct.DerivedMesh* %35, %struct.DerivedMesh* %36, i32* %38, i32* %40, i32 %41, i32 %42, float %43, float %44, float* null, float* %arraydecay44), !dbg !3147
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !3148
  %45 = load [3 x float]*, [3 x float]** %tangmat.addr, align 8, !dbg !3149
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3150
  call void @mul_v3_m3v3(float* %arraydecay45, [3 x float]* %45, float* %arraydecay46), !dbg !3151
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !3152
  %call48 = call float @normalize_v3(float* %arraydecay47), !dbg !3153
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !3154
  call void @mul_v3_fl(float* %arraydecay49, float 5.000000e-01), !dbg !3155
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !3156
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !3157
  call void @add_v3_v3(float* %arraydecay50, float* %arraydecay51), !dbg !3158
  %46 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3159
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %46, i32 0, i32 9, !dbg !3161
  %47 = load float*, float** %rect_float, align 8, !dbg !3161
  %tobool52 = icmp ne float* %47, null, !dbg !3159
  br i1 %tobool52, label %if.then53, label %if.else63, !dbg !3162

if.then53:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata float** %rrgbf, metadata !3163, metadata !DIExpression()), !dbg !3165
  %48 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3166
  %rect_float54 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %48, i32 0, i32 9, !dbg !3167
  %49 = load float*, float** %rect_float54, align 8, !dbg !3167
  %50 = load i32, i32* %pixel, align 4, !dbg !3168
  %mul55 = mul nsw i32 %50, 4, !dbg !3169
  %idx.ext = sext i32 %mul55 to i64, !dbg !3170
  %add.ptr = getelementptr inbounds float, float* %49, i64 %idx.ext, !dbg !3170
  store float* %add.ptr, float** %rrgbf, align 8, !dbg !3165
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !3171
  %51 = load float, float* %arrayidx56, align 4, !dbg !3171
  %52 = load float*, float** %rrgbf, align 8, !dbg !3172
  %arrayidx57 = getelementptr inbounds float, float* %52, i64 0, !dbg !3172
  store float %51, float* %arrayidx57, align 4, !dbg !3173
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !3174
  %53 = load float, float* %arrayidx58, align 4, !dbg !3174
  %54 = load float*, float** %rrgbf, align 8, !dbg !3175
  %arrayidx59 = getelementptr inbounds float, float* %54, i64 1, !dbg !3175
  store float %53, float* %arrayidx59, align 4, !dbg !3176
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !3177
  %55 = load float, float* %arrayidx60, align 4, !dbg !3177
  %56 = load float*, float** %rrgbf, align 8, !dbg !3178
  %arrayidx61 = getelementptr inbounds float, float* %56, i64 2, !dbg !3178
  store float %55, float* %arrayidx61, align 4, !dbg !3179
  %57 = load float*, float** %rrgbf, align 8, !dbg !3180
  %arrayidx62 = getelementptr inbounds float, float* %57, i64 3, !dbg !3180
  store float 1.000000e+00, float* %arrayidx62, align 4, !dbg !3181
  br label %if.end69, !dbg !3182

if.else63:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata i8** %rrgb, metadata !3183, metadata !DIExpression()), !dbg !3185
  %58 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3186
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %58, i32 0, i32 8, !dbg !3187
  %59 = load i32*, i32** %rect, align 8, !dbg !3187
  %60 = bitcast i32* %59 to i8*, !dbg !3188
  %61 = load i32, i32* %pixel, align 4, !dbg !3189
  %mul64 = mul nsw i32 %61, 4, !dbg !3190
  %idx.ext65 = sext i32 %mul64 to i64, !dbg !3191
  %add.ptr66 = getelementptr inbounds i8, i8* %60, i64 %idx.ext65, !dbg !3191
  store i8* %add.ptr66, i8** %rrgb, align 8, !dbg !3185
  %62 = load i8*, i8** %rrgb, align 8, !dbg !3192
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !3193
  call void @rgb_float_to_uchar(i8* %62, float* %arraydecay67), !dbg !3194
  %63 = load i8*, i8** %rrgb, align 8, !dbg !3195
  %arrayidx68 = getelementptr inbounds i8, i8* %63, i64 3, !dbg !3195
  store i8 -1, i8* %arrayidx68, align 1, !dbg !3196
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then53
  ret void, !dbg !3197
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @init_normal_data(%struct.MultiresBakeRender* %bkr, %struct.Image* %UNUSED_ima) #0 !dbg !3198 {
entry:
  %bkr.addr = alloca %struct.MultiresBakeRender*, align 8
  %UNUSED_ima.addr = alloca %struct.Image*, align 8
  %normal_data = alloca %struct.MNormalBakeData*, align 8
  %lodm = alloca %struct.DerivedMesh*, align 8
  store %struct.MultiresBakeRender* %bkr, %struct.MultiresBakeRender** %bkr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeRender** %bkr.addr, metadata !3199, metadata !DIExpression()), !dbg !3200
  store %struct.Image* %UNUSED_ima, %struct.Image** %UNUSED_ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %UNUSED_ima.addr, metadata !3201, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.declare(metadata %struct.MNormalBakeData** %normal_data, metadata !3203, metadata !DIExpression()), !dbg !3204
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %lodm, metadata !3205, metadata !DIExpression()), !dbg !3206
  %0 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !3207
  %lores_dm = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %0, i32 0, i32 0, !dbg !3208
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm, align 8, !dbg !3208
  store %struct.DerivedMesh* %1, %struct.DerivedMesh** %lodm, align 8, !dbg !3206
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3209
  %call = call i8* %2(i64 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)), !dbg !3209
  %3 = bitcast i8* %call to %struct.MNormalBakeData*, !dbg !3209
  store %struct.MNormalBakeData* %3, %struct.MNormalBakeData** %normal_data, align 8, !dbg !3210
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm, align 8, !dbg !3211
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 52, !dbg !3212
  %5 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !3212
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm, align 8, !dbg !3213
  %call1 = call i8* %5(%struct.DerivedMesh* %6, i32 7), !dbg !3211
  %7 = bitcast i8* %call1 to i32*, !dbg !3211
  %8 = load %struct.MNormalBakeData*, %struct.MNormalBakeData** %normal_data, align 8, !dbg !3214
  %orig_index_mf_to_mpoly = getelementptr inbounds %struct.MNormalBakeData, %struct.MNormalBakeData* %8, i32 0, i32 0, !dbg !3215
  store i32* %7, i32** %orig_index_mf_to_mpoly, align 8, !dbg !3216
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm, align 8, !dbg !3217
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 54, !dbg !3218
  %10 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !3218
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm, align 8, !dbg !3219
  %call2 = call i8* %10(%struct.DerivedMesh* %11, i32 7), !dbg !3217
  %12 = bitcast i8* %call2 to i32*, !dbg !3217
  %13 = load %struct.MNormalBakeData*, %struct.MNormalBakeData** %normal_data, align 8, !dbg !3220
  %orig_index_mp_to_orig = getelementptr inbounds %struct.MNormalBakeData, %struct.MNormalBakeData* %13, i32 0, i32 1, !dbg !3221
  store i32* %12, i32** %orig_index_mp_to_orig, align 8, !dbg !3222
  %14 = load %struct.MNormalBakeData*, %struct.MNormalBakeData** %normal_data, align 8, !dbg !3223
  %15 = bitcast %struct.MNormalBakeData* %14 to i8*, !dbg !3224
  ret i8* %15, !dbg !3225
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_normal_data(i8* %bake_data) #0 !dbg !3226 {
entry:
  %bake_data.addr = alloca i8*, align 8
  %normal_data = alloca %struct.MNormalBakeData*, align 8
  store i8* %bake_data, i8** %bake_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bake_data.addr, metadata !3227, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.declare(metadata %struct.MNormalBakeData** %normal_data, metadata !3229, metadata !DIExpression()), !dbg !3230
  %0 = load i8*, i8** %bake_data.addr, align 8, !dbg !3231
  %1 = bitcast i8* %0 to %struct.MNormalBakeData*, !dbg !3232
  store %struct.MNormalBakeData* %1, %struct.MNormalBakeData** %normal_data, align 8, !dbg !3230
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3233
  %3 = load %struct.MNormalBakeData*, %struct.MNormalBakeData** %normal_data, align 8, !dbg !3234
  %4 = bitcast %struct.MNormalBakeData* %3 to i8*, !dbg !3234
  call void %2(i8* %4), !dbg !3233
  ret void, !dbg !3235
}

; Function Attrs: noinline nounwind uwtable
define internal void @apply_heights_callback(%struct.DerivedMesh* %lores_dm, %struct.DerivedMesh* %hires_dm, i8* %thread_data_v, i8* %bake_data, %struct.ImBuf* %ibuf, i32 %face_index, i32 %lvl, float* %st, [3 x float]* %UNUSED_tangmat, i32 %x, i32 %y) #0 !dbg !3236 {
entry:
  %lores_dm.addr = alloca %struct.DerivedMesh*, align 8
  %hires_dm.addr = alloca %struct.DerivedMesh*, align 8
  %thread_data_v.addr = alloca i8*, align 8
  %bake_data.addr = alloca i8*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %face_index.addr = alloca i32, align 4
  %lvl.addr = alloca i32, align 4
  %st.addr = alloca float*, align 8
  %UNUSED_tangmat.addr = alloca [3 x float]*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %mtface = alloca %struct.MTFace*, align 8
  %mface = alloca %struct.MFace, align 4
  %height_data = alloca %struct.MHeightBakeData*, align 8
  %thread_data = alloca %struct.MultiresBakeThread*, align 8
  %uv = alloca [2 x float], align 4
  %st0 = alloca float*, align 8
  %st1 = alloca float*, align 8
  %st2 = alloca float*, align 8
  %st3 = alloca float*, align 8
  %pixel = alloca i32, align 4
  %vec = alloca [3 x float], align 4
  %p0 = alloca [3 x float], align 4
  %p1 = alloca [3 x float], align 4
  %n = alloca [3 x float], align 4
  %len = alloca float, align 4
  %rrgbf = alloca float*, align 8
  %rrgb = alloca i8*, align 8
  store %struct.DerivedMesh* %lores_dm, %struct.DerivedMesh** %lores_dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %lores_dm.addr, metadata !3237, metadata !DIExpression()), !dbg !3238
  store %struct.DerivedMesh* %hires_dm, %struct.DerivedMesh** %hires_dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %hires_dm.addr, metadata !3239, metadata !DIExpression()), !dbg !3240
  store i8* %thread_data_v, i8** %thread_data_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %thread_data_v.addr, metadata !3241, metadata !DIExpression()), !dbg !3242
  store i8* %bake_data, i8** %bake_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bake_data.addr, metadata !3243, metadata !DIExpression()), !dbg !3244
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !3245, metadata !DIExpression()), !dbg !3246
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !3247, metadata !DIExpression()), !dbg !3248
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !3249, metadata !DIExpression()), !dbg !3250
  store float* %st, float** %st.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st.addr, metadata !3251, metadata !DIExpression()), !dbg !3252
  store [3 x float]* %UNUSED_tangmat, [3 x float]** %UNUSED_tangmat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %UNUSED_tangmat.addr, metadata !3253, metadata !DIExpression()), !dbg !3254
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !3255, metadata !DIExpression()), !dbg !3256
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !3257, metadata !DIExpression()), !dbg !3258
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !3259, metadata !DIExpression()), !dbg !3260
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3261
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 2, !dbg !3262
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %faceData, i32 5), !dbg !3263
  %1 = bitcast i8* %call to %struct.MTFace*, !dbg !3263
  store %struct.MTFace* %1, %struct.MTFace** %mtface, align 8, !dbg !3260
  call void @llvm.dbg.declare(metadata %struct.MFace* %mface, metadata !3264, metadata !DIExpression()), !dbg !3265
  call void @llvm.dbg.declare(metadata %struct.MHeightBakeData** %height_data, metadata !3266, metadata !DIExpression()), !dbg !3267
  %2 = load i8*, i8** %bake_data.addr, align 8, !dbg !3268
  %3 = bitcast i8* %2 to %struct.MHeightBakeData*, !dbg !3269
  store %struct.MHeightBakeData* %3, %struct.MHeightBakeData** %height_data, align 8, !dbg !3267
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeThread** %thread_data, metadata !3270, metadata !DIExpression()), !dbg !3271
  %4 = load i8*, i8** %thread_data_v.addr, align 8, !dbg !3272
  %5 = bitcast i8* %4 to %struct.MultiresBakeThread*, !dbg !3273
  store %struct.MultiresBakeThread* %5, %struct.MultiresBakeThread** %thread_data, align 8, !dbg !3271
  call void @llvm.dbg.declare(metadata [2 x float]* %uv, metadata !3274, metadata !DIExpression()), !dbg !3275
  call void @llvm.dbg.declare(metadata float** %st0, metadata !3276, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.declare(metadata float** %st1, metadata !3278, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.declare(metadata float** %st2, metadata !3280, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.declare(metadata float** %st3, metadata !3282, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !3284, metadata !DIExpression()), !dbg !3285
  %6 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3286
  %x1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %6, i32 0, i32 2, !dbg !3287
  %7 = load i32, i32* %x1, align 8, !dbg !3287
  %8 = load i32, i32* %y.addr, align 4, !dbg !3288
  %mul = mul nsw i32 %7, %8, !dbg !3289
  %9 = load i32, i32* %x.addr, align 4, !dbg !3290
  %add = add nsw i32 %mul, %9, !dbg !3291
  store i32 %add, i32* %pixel, align 4, !dbg !3285
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !3292, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.declare(metadata [3 x float]* %p0, metadata !3294, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.declare(metadata [3 x float]* %p1, metadata !3296, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !3298, metadata !DIExpression()), !dbg !3299
  call void @llvm.dbg.declare(metadata float* %len, metadata !3300, metadata !DIExpression()), !dbg !3301
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3302
  %getTessFace = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 30, !dbg !3303
  %11 = load void (%struct.DerivedMesh*, i32, %struct.MFace*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)** %getTessFace, align 8, !dbg !3303
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3304
  %13 = load i32, i32* %face_index.addr, align 4, !dbg !3305
  call void %11(%struct.DerivedMesh* %12, i32 %13, %struct.MFace* %mface), !dbg !3302
  %14 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3306
  %15 = load i32, i32* %face_index.addr, align 4, !dbg !3307
  %idxprom = sext i32 %15 to i64, !dbg !3306
  %arrayidx = getelementptr inbounds %struct.MTFace, %struct.MTFace* %14, i64 %idxprom, !dbg !3306
  %uv2 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx, i32 0, i32 0, !dbg !3308
  %arrayidx3 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv2, i64 0, i64 0, !dbg !3306
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 0, !dbg !3306
  store float* %arraydecay, float** %st0, align 8, !dbg !3309
  %16 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3310
  %17 = load i32, i32* %face_index.addr, align 4, !dbg !3311
  %idxprom4 = sext i32 %17 to i64, !dbg !3310
  %arrayidx5 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %16, i64 %idxprom4, !dbg !3310
  %uv6 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx5, i32 0, i32 0, !dbg !3312
  %arrayidx7 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv6, i64 0, i64 1, !dbg !3310
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx7, i64 0, i64 0, !dbg !3310
  store float* %arraydecay8, float** %st1, align 8, !dbg !3313
  %18 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3314
  %19 = load i32, i32* %face_index.addr, align 4, !dbg !3315
  %idxprom9 = sext i32 %19 to i64, !dbg !3314
  %arrayidx10 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %18, i64 %idxprom9, !dbg !3314
  %uv11 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx10, i32 0, i32 0, !dbg !3316
  %arrayidx12 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv11, i64 0, i64 2, !dbg !3314
  %arraydecay13 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx12, i64 0, i64 0, !dbg !3314
  store float* %arraydecay13, float** %st2, align 8, !dbg !3317
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %mface, i32 0, i32 3, !dbg !3318
  %20 = load i32, i32* %v4, align 4, !dbg !3318
  %tobool = icmp ne i32 %20, 0, !dbg !3320
  br i1 %tobool, label %if.then, label %if.else, !dbg !3321

if.then:                                          ; preds = %entry
  %21 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3322
  %22 = load i32, i32* %face_index.addr, align 4, !dbg !3324
  %idxprom14 = sext i32 %22 to i64, !dbg !3322
  %arrayidx15 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %21, i64 %idxprom14, !dbg !3322
  %uv16 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx15, i32 0, i32 0, !dbg !3325
  %arrayidx17 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv16, i64 0, i64 3, !dbg !3322
  %arraydecay18 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx17, i64 0, i64 0, !dbg !3322
  store float* %arraydecay18, float** %st3, align 8, !dbg !3326
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3327
  %23 = load float*, float** %st.addr, align 8, !dbg !3328
  %24 = load float*, float** %st0, align 8, !dbg !3329
  %25 = load float*, float** %st1, align 8, !dbg !3330
  %26 = load float*, float** %st2, align 8, !dbg !3331
  %27 = load float*, float** %st3, align 8, !dbg !3332
  call void @resolve_quad_uv_v2(float* %arraydecay19, float* %23, float* %24, float* %25, float* %26, float* %27), !dbg !3333
  br label %if.end, !dbg !3334

if.else:                                          ; preds = %entry
  %arraydecay20 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3335
  %28 = load float*, float** %st.addr, align 8, !dbg !3336
  %29 = load float*, float** %st0, align 8, !dbg !3337
  %30 = load float*, float** %st1, align 8, !dbg !3338
  %31 = load float*, float** %st2, align 8, !dbg !3339
  call void @resolve_tri_uv_v2(float* %arraydecay20, float* %28, float* %29, float* %30, float* %31), !dbg !3340
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3341
  %32 = load float, float* %arrayidx21, align 4, !dbg !3341
  %cmp = fcmp olt float %32, 0.000000e+00, !dbg !3341
  br i1 %cmp, label %if.then22, label %if.else24, !dbg !3344

if.then22:                                        ; preds = %if.end
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3341
  store float 0.000000e+00, float* %arrayidx23, align 4, !dbg !3341
  br label %if.end30, !dbg !3341

if.else24:                                        ; preds = %if.end
  %arrayidx25 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3345
  %33 = load float, float* %arrayidx25, align 4, !dbg !3345
  %cmp26 = fcmp ogt float %33, 1.000000e+00, !dbg !3345
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !3341

if.then27:                                        ; preds = %if.else24
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3345
  store float 1.000000e+00, float* %arrayidx28, align 4, !dbg !3345
  br label %if.end29, !dbg !3345

if.end29:                                         ; preds = %if.then27, %if.else24
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then22
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3347
  %34 = load float, float* %arrayidx31, align 4, !dbg !3347
  %cmp32 = fcmp olt float %34, 0.000000e+00, !dbg !3347
  br i1 %cmp32, label %if.then33, label %if.else35, !dbg !3350

if.then33:                                        ; preds = %if.end30
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3347
  store float 0.000000e+00, float* %arrayidx34, align 4, !dbg !3347
  br label %if.end41, !dbg !3347

if.else35:                                        ; preds = %if.end30
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3351
  %35 = load float, float* %arrayidx36, align 4, !dbg !3351
  %cmp37 = fcmp ogt float %35, 1.000000e+00, !dbg !3351
  br i1 %cmp37, label %if.then38, label %if.end40, !dbg !3347

if.then38:                                        ; preds = %if.else35
  %arrayidx39 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3351
  store float 1.000000e+00, float* %arrayidx39, align 4, !dbg !3351
  br label %if.end40, !dbg !3351

if.end40:                                         ; preds = %if.then38, %if.else35
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then33
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3353
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hires_dm.addr, align 8, !dbg !3354
  %38 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3355
  %orig_index_mf_to_mpoly = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %38, i32 0, i32 3, !dbg !3356
  %39 = load i32*, i32** %orig_index_mf_to_mpoly, align 8, !dbg !3356
  %40 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3357
  %orig_index_mp_to_orig = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %40, i32 0, i32 4, !dbg !3358
  %41 = load i32*, i32** %orig_index_mp_to_orig, align 8, !dbg !3358
  %42 = load i32, i32* %lvl.addr, align 4, !dbg !3359
  %43 = load i32, i32* %face_index.addr, align 4, !dbg !3360
  %arrayidx42 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3361
  %44 = load float, float* %arrayidx42, align 4, !dbg !3361
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3362
  %45 = load float, float* %arrayidx43, align 4, !dbg !3362
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !3363
  call void @get_ccgdm_data(%struct.DerivedMesh* %36, %struct.DerivedMesh* %37, i32* %39, i32* %41, i32 %42, i32 %43, float %44, float %45, float* %arraydecay44, float* null), !dbg !3364
  %46 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3365
  %ssdm = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %46, i32 0, i32 2, !dbg !3367
  %47 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ssdm, align 8, !dbg !3367
  %tobool45 = icmp ne %struct.DerivedMesh* %47, null, !dbg !3365
  br i1 %tobool45, label %if.then46, label %if.else54, !dbg !3368

if.then46:                                        ; preds = %if.end41
  %48 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3369
  %49 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3371
  %ssdm47 = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %49, i32 0, i32 2, !dbg !3372
  %50 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ssdm47, align 8, !dbg !3372
  %51 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3373
  %orig_index_mf_to_mpoly48 = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %51, i32 0, i32 3, !dbg !3374
  %52 = load i32*, i32** %orig_index_mf_to_mpoly48, align 8, !dbg !3374
  %53 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3375
  %orig_index_mp_to_orig49 = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %53, i32 0, i32 4, !dbg !3376
  %54 = load i32*, i32** %orig_index_mp_to_orig49, align 8, !dbg !3376
  %55 = load i32, i32* %face_index.addr, align 4, !dbg !3377
  %arrayidx50 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3378
  %56 = load float, float* %arrayidx50, align 4, !dbg !3378
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3379
  %57 = load float, float* %arrayidx51, align 4, !dbg !3379
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %p0, i64 0, i64 0, !dbg !3380
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3381
  call void @get_ccgdm_data(%struct.DerivedMesh* %48, %struct.DerivedMesh* %50, i32* %52, i32* %54, i32 0, i32 %55, float %56, float %57, float* %arraydecay52, float* %arraydecay53), !dbg !3382
  br label %if.end73, !dbg !3383

if.else54:                                        ; preds = %if.end41
  %58 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3384
  %getTessFace55 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %58, i32 0, i32 30, !dbg !3386
  %59 = load void (%struct.DerivedMesh*, i32, %struct.MFace*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)** %getTessFace55, align 8, !dbg !3386
  %60 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3387
  %61 = load i32, i32* %face_index.addr, align 4, !dbg !3388
  call void %59(%struct.DerivedMesh* %60, i32 %61, %struct.MFace* %mface), !dbg !3384
  %v456 = getelementptr inbounds %struct.MFace, %struct.MFace* %mface, i32 0, i32 3, !dbg !3389
  %62 = load i32, i32* %v456, align 4, !dbg !3389
  %tobool57 = icmp ne i32 %62, 0, !dbg !3391
  br i1 %tobool57, label %if.then58, label %if.else65, !dbg !3392

if.then58:                                        ; preds = %if.else54
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3393
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3395
  %64 = load float, float* %arrayidx59, align 4, !dbg !3395
  %arrayidx60 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3396
  %65 = load float, float* %arrayidx60, align 4, !dbg !3396
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %p0, i64 0, i64 0, !dbg !3397
  call void @interp_bilinear_mface(%struct.DerivedMesh* %63, %struct.MFace* %mface, float %64, float %65, i32 1, float* %arraydecay61), !dbg !3398
  %66 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3399
  %arrayidx62 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3400
  %67 = load float, float* %arrayidx62, align 4, !dbg !3400
  %arrayidx63 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3401
  %68 = load float, float* %arrayidx63, align 4, !dbg !3401
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3402
  call void @interp_bilinear_mface(%struct.DerivedMesh* %66, %struct.MFace* %mface, float %67, float %68, i32 0, float* %arraydecay64), !dbg !3403
  br label %if.end72, !dbg !3404

if.else65:                                        ; preds = %if.else54
  %69 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3405
  %arrayidx66 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3407
  %70 = load float, float* %arrayidx66, align 4, !dbg !3407
  %arrayidx67 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3408
  %71 = load float, float* %arrayidx67, align 4, !dbg !3408
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %p0, i64 0, i64 0, !dbg !3409
  call void @interp_barycentric_mface(%struct.DerivedMesh* %69, %struct.MFace* %mface, float %70, float %71, i32 1, float* %arraydecay68), !dbg !3410
  %72 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3411
  %arrayidx69 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3412
  %73 = load float, float* %arrayidx69, align 4, !dbg !3412
  %arrayidx70 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3413
  %74 = load float, float* %arrayidx70, align 4, !dbg !3413
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3414
  call void @interp_barycentric_mface(%struct.DerivedMesh* %72, %struct.MFace* %mface, float %73, float %74, i32 0, float* %arraydecay71), !dbg !3415
  br label %if.end72

if.end72:                                         ; preds = %if.else65, %if.then58
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then46
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !3416
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !3417
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %p0, i64 0, i64 0, !dbg !3418
  call void @sub_v3_v3v3(float* %arraydecay74, float* %arraydecay75, float* %arraydecay76), !dbg !3419
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3420
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !3421
  %call79 = call float @dot_v3v3(float* %arraydecay77, float* %arraydecay78), !dbg !3422
  store float %call79, float* %len, align 4, !dbg !3423
  %75 = load float, float* %len, align 4, !dbg !3424
  %76 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3425
  %heights = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %76, i32 0, i32 0, !dbg !3426
  %77 = load float*, float** %heights, align 8, !dbg !3426
  %78 = load i32, i32* %pixel, align 4, !dbg !3427
  %idxprom80 = sext i32 %78 to i64, !dbg !3425
  %arrayidx81 = getelementptr inbounds float, float* %77, i64 %idxprom80, !dbg !3425
  store float %75, float* %arrayidx81, align 4, !dbg !3428
  %79 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %thread_data, align 8, !dbg !3429
  %height_min = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %79, i32 0, i32 6, !dbg !3430
  %80 = load float, float* %height_min, align 8, !dbg !3430
  %81 = load float, float* %len, align 4, !dbg !3431
  %call82 = call float @min_ff(float %80, float %81), !dbg !3432
  %82 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %thread_data, align 8, !dbg !3433
  %height_min83 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %82, i32 0, i32 6, !dbg !3434
  store float %call82, float* %height_min83, align 8, !dbg !3435
  %83 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %thread_data, align 8, !dbg !3436
  %height_max = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %83, i32 0, i32 7, !dbg !3437
  %84 = load float, float* %height_max, align 4, !dbg !3437
  %85 = load float, float* %len, align 4, !dbg !3438
  %call84 = call float @max_ff(float %84, float %85), !dbg !3439
  %86 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %thread_data, align 8, !dbg !3440
  %height_max85 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %86, i32 0, i32 7, !dbg !3441
  store float %call84, float* %height_max85, align 4, !dbg !3442
  %87 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3443
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %87, i32 0, i32 9, !dbg !3445
  %88 = load float*, float** %rect_float, align 8, !dbg !3445
  %tobool86 = icmp ne float* %88, null, !dbg !3443
  br i1 %tobool86, label %if.then87, label %if.else94, !dbg !3446

if.then87:                                        ; preds = %if.end73
  call void @llvm.dbg.declare(metadata float** %rrgbf, metadata !3447, metadata !DIExpression()), !dbg !3449
  %89 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3450
  %rect_float88 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %89, i32 0, i32 9, !dbg !3451
  %90 = load float*, float** %rect_float88, align 8, !dbg !3451
  %91 = load i32, i32* %pixel, align 4, !dbg !3452
  %mul89 = mul nsw i32 %91, 4, !dbg !3453
  %idx.ext = sext i32 %mul89 to i64, !dbg !3454
  %add.ptr = getelementptr inbounds float, float* %90, i64 %idx.ext, !dbg !3454
  store float* %add.ptr, float** %rrgbf, align 8, !dbg !3449
  %92 = load float, float* %len, align 4, !dbg !3455
  %93 = load float*, float** %rrgbf, align 8, !dbg !3456
  %arrayidx90 = getelementptr inbounds float, float* %93, i64 2, !dbg !3456
  store float %92, float* %arrayidx90, align 4, !dbg !3457
  %94 = load float*, float** %rrgbf, align 8, !dbg !3458
  %arrayidx91 = getelementptr inbounds float, float* %94, i64 1, !dbg !3458
  store float %92, float* %arrayidx91, align 4, !dbg !3459
  %95 = load float*, float** %rrgbf, align 8, !dbg !3460
  %arrayidx92 = getelementptr inbounds float, float* %95, i64 0, !dbg !3460
  store float %92, float* %arrayidx92, align 4, !dbg !3461
  %96 = load float*, float** %rrgbf, align 8, !dbg !3462
  %arrayidx93 = getelementptr inbounds float, float* %96, i64 3, !dbg !3462
  store float 1.000000e+00, float* %arrayidx93, align 4, !dbg !3463
  br label %if.end110, !dbg !3464

if.else94:                                        ; preds = %if.end73
  call void @llvm.dbg.declare(metadata i8** %rrgb, metadata !3465, metadata !DIExpression()), !dbg !3467
  %97 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3468
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %97, i32 0, i32 8, !dbg !3469
  %98 = load i32*, i32** %rect, align 8, !dbg !3469
  %99 = bitcast i32* %98 to i8*, !dbg !3470
  %100 = load i32, i32* %pixel, align 4, !dbg !3471
  %mul95 = mul nsw i32 %100, 4, !dbg !3472
  %idx.ext96 = sext i32 %mul95 to i64, !dbg !3473
  %add.ptr97 = getelementptr inbounds i8, i8* %99, i64 %idx.ext96, !dbg !3473
  store i8* %add.ptr97, i8** %rrgb, align 8, !dbg !3467
  %101 = load float, float* %len, align 4, !dbg !3474
  %cmp98 = fcmp ole float %101, 0.000000e+00, !dbg !3474
  br i1 %cmp98, label %cond.true, label %cond.false, !dbg !3474

cond.true:                                        ; preds = %if.else94
  br label %cond.end104, !dbg !3474

cond.false:                                       ; preds = %if.else94
  %102 = load float, float* %len, align 4, !dbg !3474
  %cmp99 = fcmp ogt float %102, 0x3FEFEFEFE0000000, !dbg !3474
  br i1 %cmp99, label %cond.true100, label %cond.false101, !dbg !3474

cond.true100:                                     ; preds = %cond.false
  br label %cond.end, !dbg !3474

cond.false101:                                    ; preds = %cond.false
  %103 = load float, float* %len, align 4, !dbg !3474
  %mul102 = fmul float 2.550000e+02, %103, !dbg !3474
  %add103 = fadd float %mul102, 5.000000e-01, !dbg !3474
  br label %cond.end, !dbg !3474

cond.end:                                         ; preds = %cond.false101, %cond.true100
  %cond = phi float [ 2.550000e+02, %cond.true100 ], [ %add103, %cond.false101 ], !dbg !3474
  br label %cond.end104, !dbg !3474

cond.end104:                                      ; preds = %cond.end, %cond.true
  %cond105 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !3474
  %conv = fptoui float %cond105 to i8, !dbg !3474
  %104 = load i8*, i8** %rrgb, align 8, !dbg !3475
  %arrayidx106 = getelementptr inbounds i8, i8* %104, i64 2, !dbg !3475
  store i8 %conv, i8* %arrayidx106, align 1, !dbg !3476
  %105 = load i8*, i8** %rrgb, align 8, !dbg !3477
  %arrayidx107 = getelementptr inbounds i8, i8* %105, i64 1, !dbg !3477
  store i8 %conv, i8* %arrayidx107, align 1, !dbg !3478
  %106 = load i8*, i8** %rrgb, align 8, !dbg !3479
  %arrayidx108 = getelementptr inbounds i8, i8* %106, i64 0, !dbg !3479
  store i8 %conv, i8* %arrayidx108, align 1, !dbg !3480
  %107 = load i8*, i8** %rrgb, align 8, !dbg !3481
  %arrayidx109 = getelementptr inbounds i8, i8* %107, i64 3, !dbg !3481
  store i8 -1, i8* %arrayidx109, align 1, !dbg !3482
  br label %if.end110

if.end110:                                        ; preds = %cond.end104, %if.then87
  ret void, !dbg !3483
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @init_heights_data(%struct.MultiresBakeRender* %bkr, %struct.Image* %ima) #0 !dbg !3484 {
entry:
  %bkr.addr = alloca %struct.MultiresBakeRender*, align 8
  %ima.addr = alloca %struct.Image*, align 8
  %height_data = alloca %struct.MHeightBakeData*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %lodm = alloca %struct.DerivedMesh*, align 8
  %userdata = alloca %struct.BakeImBufuserData*, align 8
  %smd = alloca %struct.SubsurfModifierData, align 8
  %ss_lvl = alloca i32, align 4
  store %struct.MultiresBakeRender* %bkr, %struct.MultiresBakeRender** %bkr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeRender** %bkr.addr, metadata !3485, metadata !DIExpression()), !dbg !3486
  store %struct.Image* %ima, %struct.Image** %ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %ima.addr, metadata !3487, metadata !DIExpression()), !dbg !3488
  call void @llvm.dbg.declare(metadata %struct.MHeightBakeData** %height_data, metadata !3489, metadata !DIExpression()), !dbg !3490
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !3491, metadata !DIExpression()), !dbg !3492
  %0 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3493
  %call = call %struct.ImBuf* @BKE_image_acquire_ibuf(%struct.Image* %0, %struct.ImageUser* null, i8** null), !dbg !3494
  store %struct.ImBuf* %call, %struct.ImBuf** %ibuf, align 8, !dbg !3492
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %lodm, metadata !3495, metadata !DIExpression()), !dbg !3496
  %1 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !3497
  %lores_dm = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %1, i32 0, i32 0, !dbg !3498
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm, align 8, !dbg !3498
  store %struct.DerivedMesh* %2, %struct.DerivedMesh** %lodm, align 8, !dbg !3496
  call void @llvm.dbg.declare(metadata %struct.BakeImBufuserData** %userdata, metadata !3499, metadata !DIExpression()), !dbg !3500
  %3 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3501
  %userdata1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %3, i32 0, i32 25, !dbg !3502
  %4 = load i8*, i8** %userdata1, align 8, !dbg !3502
  %5 = bitcast i8* %4 to %struct.BakeImBufuserData*, !dbg !3501
  store %struct.BakeImBufuserData* %5, %struct.BakeImBufuserData** %userdata, align 8, !dbg !3500
  %6 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !3503
  %displacement_buffer = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %6, i32 0, i32 0, !dbg !3505
  %7 = load float*, float** %displacement_buffer, align 8, !dbg !3505
  %cmp = icmp eq float* %7, null, !dbg !3506
  br i1 %cmp, label %if.then, label %if.end, !dbg !3507

if.then:                                          ; preds = %entry
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3508
  %9 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3509
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %9, i32 0, i32 2, !dbg !3510
  %10 = load i32, i32* %x, align 8, !dbg !3510
  %conv = sext i32 %10 to i64, !dbg !3509
  %mul = mul i64 4, %conv, !dbg !3511
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3512
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %11, i32 0, i32 3, !dbg !3513
  %12 = load i32, i32* %y, align 4, !dbg !3513
  %conv2 = sext i32 %12 to i64, !dbg !3512
  %mul3 = mul i64 %mul, %conv2, !dbg !3514
  %call4 = call i8* %8(i64 %mul3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !3508
  %13 = bitcast i8* %call4 to float*, !dbg !3508
  %14 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !3515
  %displacement_buffer5 = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %14, i32 0, i32 0, !dbg !3516
  store float* %13, float** %displacement_buffer5, align 8, !dbg !3517
  br label %if.end, !dbg !3515

if.end:                                           ; preds = %if.then, %entry
  %15 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3518
  %call6 = call i8* %15(i64 40, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0)), !dbg !3518
  %16 = bitcast i8* %call6 to %struct.MHeightBakeData*, !dbg !3518
  store %struct.MHeightBakeData* %16, %struct.MHeightBakeData** %height_data, align 8, !dbg !3519
  %17 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3520
  %18 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3521
  %ima7 = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %18, i32 0, i32 1, !dbg !3522
  store %struct.Image* %17, %struct.Image** %ima7, align 8, !dbg !3523
  %19 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !3524
  %displacement_buffer8 = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %19, i32 0, i32 0, !dbg !3525
  %20 = load float*, float** %displacement_buffer8, align 8, !dbg !3525
  %21 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3526
  %heights = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %21, i32 0, i32 0, !dbg !3527
  store float* %20, float** %heights, align 8, !dbg !3528
  %22 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !3529
  %use_lores_mesh = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %22, i32 0, i32 7, !dbg !3531
  %23 = load i8, i8* %use_lores_mesh, align 2, !dbg !3531
  %tobool = icmp ne i8 %23, 0, !dbg !3529
  br i1 %tobool, label %if.end31, label %if.then9, !dbg !3532

if.then9:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.SubsurfModifierData* %smd, metadata !3533, metadata !DIExpression()), !dbg !3558
  %24 = bitcast %struct.SubsurfModifierData* %smd to i8*, !dbg !3558
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 136, i1 false), !dbg !3558
  call void @llvm.dbg.declare(metadata i32* %ss_lvl, metadata !3559, metadata !DIExpression()), !dbg !3560
  %25 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !3561
  %tot_lvl = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %25, i32 0, i32 5, !dbg !3562
  %26 = load i32, i32* %tot_lvl, align 4, !dbg !3562
  %27 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !3563
  %lvl = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %27, i32 0, i32 4, !dbg !3564
  %28 = load i32, i32* %lvl, align 8, !dbg !3564
  %sub = sub nsw i32 %26, %28, !dbg !3565
  store i32 %sub, i32* %ss_lvl, align 4, !dbg !3560
  %29 = load i32, i32* %ss_lvl, align 4, !dbg !3566
  %cmp10 = icmp slt i32 %29, 0, !dbg !3566
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !3569

if.then12:                                        ; preds = %if.then9
  store i32 0, i32* %ss_lvl, align 4, !dbg !3566
  br label %if.end17, !dbg !3566

if.else:                                          ; preds = %if.then9
  %30 = load i32, i32* %ss_lvl, align 4, !dbg !3570
  %cmp13 = icmp sgt i32 %30, 6, !dbg !3570
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !3566

if.then15:                                        ; preds = %if.else
  store i32 6, i32* %ss_lvl, align 4, !dbg !3570
  br label %if.end16, !dbg !3570

if.end16:                                         ; preds = %if.then15, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then12
  %31 = load i32, i32* %ss_lvl, align 4, !dbg !3572
  %cmp18 = icmp sgt i32 %31, 0, !dbg !3574
  br i1 %cmp18, label %if.then20, label %if.end30, !dbg !3575

if.then20:                                        ; preds = %if.end17
  %32 = load i32, i32* %ss_lvl, align 4, !dbg !3576
  %conv21 = trunc i32 %32 to i16, !dbg !3576
  %renderLevels = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %smd, i32 0, i32 3, !dbg !3578
  store i16 %conv21, i16* %renderLevels, align 4, !dbg !3579
  %levels = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %smd, i32 0, i32 2, !dbg !3580
  store i16 %conv21, i16* %levels, align 2, !dbg !3581
  %flags = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %smd, i32 0, i32 4, !dbg !3582
  %33 = load i16, i16* %flags, align 2, !dbg !3583
  %conv22 = sext i16 %33 to i32, !dbg !3583
  %or = or i32 %conv22, 8, !dbg !3583
  %conv23 = trunc i32 %or to i16, !dbg !3583
  store i16 %conv23, i16* %flags, align 2, !dbg !3583
  %34 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !3584
  %simple = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %34, i32 0, i32 2, !dbg !3586
  %35 = load i8, i8* %simple, align 8, !dbg !3586
  %tobool24 = icmp ne i8 %35, 0, !dbg !3584
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !3587

if.then25:                                        ; preds = %if.then20
  %subdivType = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %smd, i32 0, i32 1, !dbg !3588
  store i16 1, i16* %subdivType, align 8, !dbg !3589
  br label %if.end26, !dbg !3590

if.end26:                                         ; preds = %if.then25, %if.then20
  %36 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !3591
  %lores_dm27 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %36, i32 0, i32 0, !dbg !3592
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm27, align 8, !dbg !3592
  %call28 = call %struct.DerivedMesh* @subsurf_make_derived_from_derived(%struct.DerivedMesh* %37, %struct.SubsurfModifierData* %smd, [3 x float]* null, i32 0), !dbg !3593
  %38 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3594
  %ssdm = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %38, i32 0, i32 2, !dbg !3595
  store %struct.DerivedMesh* %call28, %struct.DerivedMesh** %ssdm, align 8, !dbg !3596
  %39 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3597
  %ssdm29 = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %39, i32 0, i32 2, !dbg !3598
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ssdm29, align 8, !dbg !3598
  call void @init_ccgdm_arrays(%struct.DerivedMesh* %40), !dbg !3599
  br label %if.end30, !dbg !3600

if.end30:                                         ; preds = %if.end26, %if.end17
  br label %if.end31, !dbg !3601

if.end31:                                         ; preds = %if.end30, %if.end
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm, align 8, !dbg !3602
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %41, i32 0, i32 52, !dbg !3603
  %42 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !3603
  %43 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm, align 8, !dbg !3604
  %call32 = call i8* %42(%struct.DerivedMesh* %43, i32 7), !dbg !3602
  %44 = bitcast i8* %call32 to i32*, !dbg !3602
  %45 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3605
  %orig_index_mf_to_mpoly = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %45, i32 0, i32 3, !dbg !3606
  store i32* %44, i32** %orig_index_mf_to_mpoly, align 8, !dbg !3607
  %46 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm, align 8, !dbg !3608
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %46, i32 0, i32 54, !dbg !3609
  %47 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !3609
  %48 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm, align 8, !dbg !3610
  %call33 = call i8* %47(%struct.DerivedMesh* %48, i32 7), !dbg !3608
  %49 = bitcast i8* %call33 to i32*, !dbg !3608
  %50 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3611
  %orig_index_mp_to_orig = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %50, i32 0, i32 4, !dbg !3612
  store i32* %49, i32** %orig_index_mp_to_orig, align 8, !dbg !3613
  %51 = load %struct.Image*, %struct.Image** %ima.addr, align 8, !dbg !3614
  %52 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !3615
  call void @BKE_image_release_ibuf(%struct.Image* %51, %struct.ImBuf* %52, i8* null), !dbg !3616
  %53 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3617
  %54 = bitcast %struct.MHeightBakeData* %53 to i8*, !dbg !3618
  ret i8* %54, !dbg !3619
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_heights_data(i8* %bake_data) #0 !dbg !3620 {
entry:
  %bake_data.addr = alloca i8*, align 8
  %height_data = alloca %struct.MHeightBakeData*, align 8
  store i8* %bake_data, i8** %bake_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bake_data.addr, metadata !3621, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.declare(metadata %struct.MHeightBakeData** %height_data, metadata !3623, metadata !DIExpression()), !dbg !3624
  %0 = load i8*, i8** %bake_data.addr, align 8, !dbg !3625
  %1 = bitcast i8* %0 to %struct.MHeightBakeData*, !dbg !3626
  store %struct.MHeightBakeData* %1, %struct.MHeightBakeData** %height_data, align 8, !dbg !3624
  %2 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3627
  %ssdm = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %2, i32 0, i32 2, !dbg !3629
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ssdm, align 8, !dbg !3629
  %tobool = icmp ne %struct.DerivedMesh* %3, null, !dbg !3627
  br i1 %tobool, label %if.then, label %if.end, !dbg !3630

if.then:                                          ; preds = %entry
  %4 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3631
  %ssdm1 = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %4, i32 0, i32 2, !dbg !3632
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ssdm1, align 8, !dbg !3632
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 95, !dbg !3633
  %6 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !3633
  %7 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3634
  %ssdm2 = getelementptr inbounds %struct.MHeightBakeData, %struct.MHeightBakeData* %7, i32 0, i32 2, !dbg !3635
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %ssdm2, align 8, !dbg !3635
  call void %6(%struct.DerivedMesh* %8), !dbg !3631
  br label %if.end, !dbg !3631

if.end:                                           ; preds = %if.then, %entry
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3636
  %10 = load %struct.MHeightBakeData*, %struct.MHeightBakeData** %height_data, align 8, !dbg !3637
  %11 = bitcast %struct.MHeightBakeData* %10 to i8*, !dbg !3637
  call void %9(i8* %11), !dbg !3636
  ret void, !dbg !3638
}

; Function Attrs: noinline nounwind uwtable
define internal void @apply_ao_callback(%struct.DerivedMesh* %lores_dm, %struct.DerivedMesh* %hires_dm, i8* %UNUSED_thread_data, i8* %bake_data, %struct.ImBuf* %ibuf, i32 %face_index, i32 %lvl, float* %st, [3 x float]* %UNUSED_tangmat, i32 %x, i32 %y) #0 !dbg !3639 {
entry:
  %lores_dm.addr = alloca %struct.DerivedMesh*, align 8
  %hires_dm.addr = alloca %struct.DerivedMesh*, align 8
  %UNUSED_thread_data.addr = alloca i8*, align 8
  %bake_data.addr = alloca i8*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %face_index.addr = alloca i32, align 4
  %lvl.addr = alloca i32, align 4
  %st.addr = alloca float*, align 8
  %UNUSED_tangmat.addr = alloca [3 x float]*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %ao_data = alloca %struct.MAOBakeData*, align 8
  %mtface = alloca %struct.MTFace*, align 8
  %mface = alloca %struct.MFace, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %perm_offs = alloca i32, align 4
  %pos = alloca [3 x float], align 4
  %nrm = alloca [3 x float], align 4
  %cen = alloca [3 x float], align 4
  %axisX = alloca [3 x float], align 4
  %axisY = alloca [3 x float], align 4
  %axisZ = alloca [3 x float], align 4
  %shadow = alloca float, align 4
  %value = alloca float, align 4
  %pixel = alloca i32, align 4
  %uv = alloca [2 x float], align 4
  %st0 = alloca float*, align 8
  %st1 = alloca float*, align 8
  %st2 = alloca float*, align 8
  %st3 = alloca float*, align 8
  %hit_something = alloca i32, align 4
  %I = alloca i16, align 2
  %J = alloca i16, align 2
  %JitPh = alloca float, align 4
  %JitTh = alloca float, align 4
  %SiSqPhi = alloca float, align 4
  %Theta = alloca float, align 4
  %SiPhi = alloca float, align 4
  %CoPhi = alloca float, align 4
  %CoThe = alloca float, align 4
  %SiThe = alloca float, align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %dz = alloca float, align 4
  %dv = alloca [3 x float], align 4
  %rrgbf = alloca float*, align 8
  %rrgb = alloca i8*, align 8
  store %struct.DerivedMesh* %lores_dm, %struct.DerivedMesh** %lores_dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %lores_dm.addr, metadata !3640, metadata !DIExpression()), !dbg !3641
  store %struct.DerivedMesh* %hires_dm, %struct.DerivedMesh** %hires_dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %hires_dm.addr, metadata !3642, metadata !DIExpression()), !dbg !3643
  store i8* %UNUSED_thread_data, i8** %UNUSED_thread_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_thread_data.addr, metadata !3644, metadata !DIExpression()), !dbg !3645
  store i8* %bake_data, i8** %bake_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bake_data.addr, metadata !3646, metadata !DIExpression()), !dbg !3647
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !3648, metadata !DIExpression()), !dbg !3649
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !3650, metadata !DIExpression()), !dbg !3651
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !3652, metadata !DIExpression()), !dbg !3653
  store float* %st, float** %st.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st.addr, metadata !3654, metadata !DIExpression()), !dbg !3655
  store [3 x float]* %UNUSED_tangmat, [3 x float]** %UNUSED_tangmat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %UNUSED_tangmat.addr, metadata !3656, metadata !DIExpression()), !dbg !3657
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !3658, metadata !DIExpression()), !dbg !3659
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !3660, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.declare(metadata %struct.MAOBakeData** %ao_data, metadata !3662, metadata !DIExpression()), !dbg !3663
  %0 = load i8*, i8** %bake_data.addr, align 8, !dbg !3664
  %1 = bitcast i8* %0 to %struct.MAOBakeData*, !dbg !3665
  store %struct.MAOBakeData* %1, %struct.MAOBakeData** %ao_data, align 8, !dbg !3663
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !3666, metadata !DIExpression()), !dbg !3667
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3668
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 2, !dbg !3669
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %faceData, i32 5), !dbg !3670
  %3 = bitcast i8* %call to %struct.MTFace*, !dbg !3670
  store %struct.MTFace* %3, %struct.MTFace** %mtface, align 8, !dbg !3667
  call void @llvm.dbg.declare(metadata %struct.MFace* %mface, metadata !3671, metadata !DIExpression()), !dbg !3672
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3673, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3675, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.declare(metadata i32* %perm_offs, metadata !3677, metadata !DIExpression()), !dbg !3678
  call void @llvm.dbg.declare(metadata [3 x float]* %pos, metadata !3679, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.declare(metadata [3 x float]* %nrm, metadata !3681, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.declare(metadata [3 x float]* %cen, metadata !3683, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.declare(metadata [3 x float]* %axisX, metadata !3685, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.declare(metadata [3 x float]* %axisY, metadata !3687, metadata !DIExpression()), !dbg !3688
  call void @llvm.dbg.declare(metadata [3 x float]* %axisZ, metadata !3689, metadata !DIExpression()), !dbg !3690
  call void @llvm.dbg.declare(metadata float* %shadow, metadata !3691, metadata !DIExpression()), !dbg !3692
  store float 0.000000e+00, float* %shadow, align 4, !dbg !3692
  call void @llvm.dbg.declare(metadata float* %value, metadata !3693, metadata !DIExpression()), !dbg !3694
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !3695, metadata !DIExpression()), !dbg !3696
  %4 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3697
  %x1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %4, i32 0, i32 2, !dbg !3698
  %5 = load i32, i32* %x1, align 8, !dbg !3698
  %6 = load i32, i32* %y.addr, align 4, !dbg !3699
  %mul = mul nsw i32 %5, %6, !dbg !3700
  %7 = load i32, i32* %x.addr, align 4, !dbg !3701
  %add = add nsw i32 %mul, %7, !dbg !3702
  store i32 %add, i32* %pixel, align 4, !dbg !3696
  call void @llvm.dbg.declare(metadata [2 x float]* %uv, metadata !3703, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.declare(metadata float** %st0, metadata !3705, metadata !DIExpression()), !dbg !3706
  call void @llvm.dbg.declare(metadata float** %st1, metadata !3707, metadata !DIExpression()), !dbg !3708
  call void @llvm.dbg.declare(metadata float** %st2, metadata !3709, metadata !DIExpression()), !dbg !3710
  call void @llvm.dbg.declare(metadata float** %st3, metadata !3711, metadata !DIExpression()), !dbg !3712
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3713
  %getTessFace = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 30, !dbg !3714
  %9 = load void (%struct.DerivedMesh*, i32, %struct.MFace*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)** %getTessFace, align 8, !dbg !3714
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3715
  %11 = load i32, i32* %face_index.addr, align 4, !dbg !3716
  call void %9(%struct.DerivedMesh* %10, i32 %11, %struct.MFace* %mface), !dbg !3713
  %12 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3717
  %13 = load i32, i32* %face_index.addr, align 4, !dbg !3718
  %idxprom = sext i32 %13 to i64, !dbg !3717
  %arrayidx = getelementptr inbounds %struct.MTFace, %struct.MTFace* %12, i64 %idxprom, !dbg !3717
  %uv2 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx, i32 0, i32 0, !dbg !3719
  %arrayidx3 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv2, i64 0, i64 0, !dbg !3717
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx3, i64 0, i64 0, !dbg !3717
  store float* %arraydecay, float** %st0, align 8, !dbg !3720
  %14 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3721
  %15 = load i32, i32* %face_index.addr, align 4, !dbg !3722
  %idxprom4 = sext i32 %15 to i64, !dbg !3721
  %arrayidx5 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %14, i64 %idxprom4, !dbg !3721
  %uv6 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx5, i32 0, i32 0, !dbg !3723
  %arrayidx7 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv6, i64 0, i64 1, !dbg !3721
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx7, i64 0, i64 0, !dbg !3721
  store float* %arraydecay8, float** %st1, align 8, !dbg !3724
  %16 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3725
  %17 = load i32, i32* %face_index.addr, align 4, !dbg !3726
  %idxprom9 = sext i32 %17 to i64, !dbg !3725
  %arrayidx10 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %16, i64 %idxprom9, !dbg !3725
  %uv11 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx10, i32 0, i32 0, !dbg !3727
  %arrayidx12 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv11, i64 0, i64 2, !dbg !3725
  %arraydecay13 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx12, i64 0, i64 0, !dbg !3725
  store float* %arraydecay13, float** %st2, align 8, !dbg !3728
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %mface, i32 0, i32 3, !dbg !3729
  %18 = load i32, i32* %v4, align 4, !dbg !3729
  %tobool = icmp ne i32 %18, 0, !dbg !3731
  br i1 %tobool, label %if.then, label %if.else, !dbg !3732

if.then:                                          ; preds = %entry
  %19 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !3733
  %20 = load i32, i32* %face_index.addr, align 4, !dbg !3735
  %idxprom14 = sext i32 %20 to i64, !dbg !3733
  %arrayidx15 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %19, i64 %idxprom14, !dbg !3733
  %uv16 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx15, i32 0, i32 0, !dbg !3736
  %arrayidx17 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv16, i64 0, i64 3, !dbg !3733
  %arraydecay18 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx17, i64 0, i64 0, !dbg !3733
  store float* %arraydecay18, float** %st3, align 8, !dbg !3737
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3738
  %21 = load float*, float** %st.addr, align 8, !dbg !3739
  %22 = load float*, float** %st0, align 8, !dbg !3740
  %23 = load float*, float** %st1, align 8, !dbg !3741
  %24 = load float*, float** %st2, align 8, !dbg !3742
  %25 = load float*, float** %st3, align 8, !dbg !3743
  call void @resolve_quad_uv_v2(float* %arraydecay19, float* %21, float* %22, float* %23, float* %24, float* %25), !dbg !3744
  br label %if.end, !dbg !3745

if.else:                                          ; preds = %entry
  %arraydecay20 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3746
  %26 = load float*, float** %st.addr, align 8, !dbg !3747
  %27 = load float*, float** %st0, align 8, !dbg !3748
  %28 = load float*, float** %st1, align 8, !dbg !3749
  %29 = load float*, float** %st2, align 8, !dbg !3750
  call void @resolve_tri_uv_v2(float* %arraydecay20, float* %26, float* %27, float* %28, float* %29), !dbg !3751
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3752
  %30 = load float, float* %arrayidx21, align 4, !dbg !3752
  %cmp = fcmp olt float %30, 0.000000e+00, !dbg !3752
  br i1 %cmp, label %if.then22, label %if.else24, !dbg !3755

if.then22:                                        ; preds = %if.end
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3752
  store float 0.000000e+00, float* %arrayidx23, align 4, !dbg !3752
  br label %if.end30, !dbg !3752

if.else24:                                        ; preds = %if.end
  %arrayidx25 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3756
  %31 = load float, float* %arrayidx25, align 4, !dbg !3756
  %cmp26 = fcmp ogt float %31, 1.000000e+00, !dbg !3756
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !3752

if.then27:                                        ; preds = %if.else24
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3756
  store float 1.000000e+00, float* %arrayidx28, align 4, !dbg !3756
  br label %if.end29, !dbg !3756

if.end29:                                         ; preds = %if.then27, %if.else24
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then22
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3758
  %32 = load float, float* %arrayidx31, align 4, !dbg !3758
  %cmp32 = fcmp olt float %32, 0.000000e+00, !dbg !3758
  br i1 %cmp32, label %if.then33, label %if.else35, !dbg !3761

if.then33:                                        ; preds = %if.end30
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3758
  store float 0.000000e+00, float* %arrayidx34, align 4, !dbg !3758
  br label %if.end41, !dbg !3758

if.else35:                                        ; preds = %if.end30
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3762
  %33 = load float, float* %arrayidx36, align 4, !dbg !3762
  %cmp37 = fcmp ogt float %33, 1.000000e+00, !dbg !3762
  br i1 %cmp37, label %if.then38, label %if.end40, !dbg !3758

if.then38:                                        ; preds = %if.else35
  %arrayidx39 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3762
  store float 1.000000e+00, float* %arrayidx39, align 4, !dbg !3762
  br label %if.end40, !dbg !3762

if.end40:                                         ; preds = %if.then38, %if.else35
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then33
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm.addr, align 8, !dbg !3764
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hires_dm.addr, align 8, !dbg !3765
  %36 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !3766
  %orig_index_mf_to_mpoly = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %36, i32 0, i32 6, !dbg !3767
  %37 = load i32*, i32** %orig_index_mf_to_mpoly, align 8, !dbg !3767
  %38 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !3768
  %orig_index_mp_to_orig = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %38, i32 0, i32 7, !dbg !3769
  %39 = load i32*, i32** %orig_index_mp_to_orig, align 8, !dbg !3769
  %40 = load i32, i32* %lvl.addr, align 4, !dbg !3770
  %41 = load i32, i32* %face_index.addr, align 4, !dbg !3771
  %arrayidx42 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !3772
  %42 = load float, float* %arrayidx42, align 4, !dbg !3772
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 1, !dbg !3773
  %43 = load float, float* %arrayidx43, align 4, !dbg !3773
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 0, !dbg !3774
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %nrm, i64 0, i64 0, !dbg !3775
  call void @get_ccgdm_data(%struct.DerivedMesh* %34, %struct.DerivedMesh* %35, i32* %37, i32* %39, i32 %40, i32 %41, float %42, float %43, float* %arraydecay44, float* %arraydecay45), !dbg !3776
  store i32 0, i32* %i, align 4, !dbg !3777
  br label %for.cond, !dbg !3779

for.cond:                                         ; preds = %for.inc, %if.end41
  %44 = load i32, i32* %i, align 4, !dbg !3780
  %cmp46 = icmp slt i32 %44, 3, !dbg !3782
  br i1 %cmp46, label %for.body, label %for.end, !dbg !3783

for.body:                                         ; preds = %for.cond
  %45 = load i32, i32* %i, align 4, !dbg !3784
  %idxprom47 = sext i32 %45 to i64, !dbg !3785
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %pos, i64 0, i64 %idxprom47, !dbg !3785
  %46 = load float, float* %arrayidx48, align 4, !dbg !3785
  %47 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !3786
  %bias = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %47, i32 0, i32 1, !dbg !3787
  %48 = load float, float* %bias, align 4, !dbg !3787
  %49 = load i32, i32* %i, align 4, !dbg !3788
  %idxprom49 = sext i32 %49 to i64, !dbg !3789
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %nrm, i64 0, i64 %idxprom49, !dbg !3789
  %50 = load float, float* %arrayidx50, align 4, !dbg !3789
  %mul51 = fmul float %48, %50, !dbg !3790
  %add52 = fadd float %46, %mul51, !dbg !3791
  %51 = load i32, i32* %i, align 4, !dbg !3792
  %idxprom53 = sext i32 %51 to i64, !dbg !3793
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %cen, i64 0, i64 %idxprom53, !dbg !3793
  store float %add52, float* %arrayidx54, align 4, !dbg !3794
  br label %for.inc, !dbg !3793

for.inc:                                          ; preds = %for.body
  %52 = load i32, i32* %i, align 4, !dbg !3795
  %inc = add nsw i32 %52, 1, !dbg !3795
  store i32 %inc, i32* %i, align 4, !dbg !3795
  br label %for.cond, !dbg !3796, !llvm.loop !3797

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3799
  br label %for.cond55, !dbg !3801

for.cond55:                                       ; preds = %for.inc62, %for.end
  %53 = load i32, i32* %i, align 4, !dbg !3802
  %cmp56 = icmp slt i32 %53, 3, !dbg !3804
  br i1 %cmp56, label %for.body57, label %for.end64, !dbg !3805

for.body57:                                       ; preds = %for.cond55
  %54 = load i32, i32* %i, align 4, !dbg !3806
  %idxprom58 = sext i32 %54 to i64, !dbg !3807
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %nrm, i64 0, i64 %idxprom58, !dbg !3807
  %55 = load float, float* %arrayidx59, align 4, !dbg !3807
  %56 = load i32, i32* %i, align 4, !dbg !3808
  %idxprom60 = sext i32 %56 to i64, !dbg !3809
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %axisZ, i64 0, i64 %idxprom60, !dbg !3809
  store float %55, float* %arrayidx61, align 4, !dbg !3810
  br label %for.inc62, !dbg !3809

for.inc62:                                        ; preds = %for.body57
  %57 = load i32, i32* %i, align 4, !dbg !3811
  %inc63 = add nsw i32 %57, 1, !dbg !3811
  store i32 %inc63, i32* %i, align 4, !dbg !3811
  br label %for.cond55, !dbg !3812, !llvm.loop !3813

for.end64:                                        ; preds = %for.cond55
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %axisX, i64 0, i64 0, !dbg !3815
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %axisY, i64 0, i64 0, !dbg !3816
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %axisZ, i64 0, i64 0, !dbg !3817
  call void @build_coordinate_frame(float* %arraydecay65, float* %arraydecay66, float* %arraydecay67), !dbg !3818
  %58 = load i32, i32* %x.addr, align 4, !dbg !3819
  %call68 = call zeroext i16 @get_ao_random1(i32 %58), !dbg !3820
  %conv = zext i16 %call68 to i32, !dbg !3820
  %59 = load i32, i32* %y.addr, align 4, !dbg !3821
  %add69 = add nsw i32 %conv, %59, !dbg !3822
  %call70 = call zeroext i16 @get_ao_random2(i32 %add69), !dbg !3823
  %conv71 = zext i16 %call70 to i32, !dbg !3824
  %and = and i32 %conv71, 1023, !dbg !3825
  store i32 %and, i32* %perm_offs, align 4, !dbg !3826
  store i32 0, i32* %i, align 4, !dbg !3827
  br label %for.cond72, !dbg !3829

for.cond72:                                       ; preds = %for.inc144, %for.end64
  %60 = load i32, i32* %i, align 4, !dbg !3830
  %61 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !3832
  %number_of_rays = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %61, i32 0, i32 0, !dbg !3833
  %62 = load i32, i32* %number_of_rays, align 8, !dbg !3833
  %cmp73 = icmp slt i32 %60, %62, !dbg !3834
  br i1 %cmp73, label %for.body75, label %for.end146, !dbg !3835

for.body75:                                       ; preds = %for.cond72
  call void @llvm.dbg.declare(metadata i32* %hit_something, metadata !3836, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.declare(metadata i16* %I, metadata !3839, metadata !DIExpression()), !dbg !3841
  %63 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !3842
  %permutation_table_1 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %63, i32 0, i32 2, !dbg !3843
  %64 = load i16*, i16** %permutation_table_1, align 8, !dbg !3843
  %65 = load i32, i32* %i, align 4, !dbg !3844
  %66 = load i32, i32* %perm_offs, align 4, !dbg !3845
  %add76 = add nsw i32 %65, %66, !dbg !3846
  %67 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !3847
  %number_of_rays77 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %67, i32 0, i32 0, !dbg !3848
  %68 = load i32, i32* %number_of_rays77, align 8, !dbg !3848
  %rem = srem i32 %add76, %68, !dbg !3849
  %idxprom78 = sext i32 %rem to i64, !dbg !3842
  %arrayidx79 = getelementptr inbounds i16, i16* %64, i64 %idxprom78, !dbg !3842
  %69 = load i16, i16* %arrayidx79, align 2, !dbg !3842
  store i16 %69, i16* %I, align 2, !dbg !3841
  call void @llvm.dbg.declare(metadata i16* %J, metadata !3850, metadata !DIExpression()), !dbg !3851
  %70 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !3852
  %permutation_table_2 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %70, i32 0, i32 3, !dbg !3853
  %71 = load i16*, i16** %permutation_table_2, align 8, !dbg !3853
  %72 = load i32, i32* %i, align 4, !dbg !3854
  %idxprom80 = sext i32 %72 to i64, !dbg !3852
  %arrayidx81 = getelementptr inbounds i16, i16* %71, i64 %idxprom80, !dbg !3852
  %73 = load i16, i16* %arrayidx81, align 2, !dbg !3852
  store i16 %73, i16* %J, align 2, !dbg !3851
  call void @llvm.dbg.declare(metadata float* %JitPh, metadata !3855, metadata !DIExpression()), !dbg !3856
  %74 = load i16, i16* %I, align 2, !dbg !3857
  %conv82 = zext i16 %74 to i32, !dbg !3857
  %75 = load i32, i32* %perm_offs, align 4, !dbg !3858
  %add83 = add nsw i32 %conv82, %75, !dbg !3859
  %call84 = call zeroext i16 @get_ao_random2(i32 %add83), !dbg !3860
  %conv85 = zext i16 %call84 to i32, !dbg !3860
  %and86 = and i32 %conv85, 1023, !dbg !3861
  %conv87 = sitofp i32 %and86 to float, !dbg !3862
  %div = fdiv float %conv87, 1.024000e+03, !dbg !3863
  store float %div, float* %JitPh, align 4, !dbg !3856
  call void @llvm.dbg.declare(metadata float* %JitTh, metadata !3864, metadata !DIExpression()), !dbg !3865
  %76 = load i16, i16* %J, align 2, !dbg !3866
  %conv88 = zext i16 %76 to i32, !dbg !3866
  %77 = load i32, i32* %perm_offs, align 4, !dbg !3867
  %add89 = add nsw i32 %conv88, %77, !dbg !3868
  %call90 = call zeroext i16 @get_ao_random1(i32 %add89), !dbg !3869
  %conv91 = zext i16 %call90 to i32, !dbg !3869
  %and92 = and i32 %conv91, 1023, !dbg !3870
  %conv93 = sitofp i32 %and92 to float, !dbg !3871
  %div94 = fdiv float %conv93, 1.024000e+03, !dbg !3872
  store float %div94, float* %JitTh, align 4, !dbg !3865
  call void @llvm.dbg.declare(metadata float* %SiSqPhi, metadata !3873, metadata !DIExpression()), !dbg !3874
  %78 = load i16, i16* %I, align 2, !dbg !3875
  %conv95 = zext i16 %78 to i32, !dbg !3875
  %conv96 = sitofp i32 %conv95 to float, !dbg !3875
  %79 = load float, float* %JitPh, align 4, !dbg !3876
  %add97 = fadd float %conv96, %79, !dbg !3877
  %80 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !3878
  %number_of_rays98 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %80, i32 0, i32 0, !dbg !3879
  %81 = load i32, i32* %number_of_rays98, align 8, !dbg !3879
  %conv99 = sitofp i32 %81 to float, !dbg !3878
  %div100 = fdiv float %add97, %conv99, !dbg !3880
  store float %div100, float* %SiSqPhi, align 4, !dbg !3874
  call void @llvm.dbg.declare(metadata float* %Theta, metadata !3881, metadata !DIExpression()), !dbg !3882
  %82 = load i16, i16* %J, align 2, !dbg !3883
  %conv101 = zext i16 %82 to i32, !dbg !3883
  %conv102 = sitofp i32 %conv101 to float, !dbg !3883
  %83 = load float, float* %JitTh, align 4, !dbg !3884
  %add103 = fadd float %conv102, %83, !dbg !3885
  %84 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !3886
  %number_of_rays104 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %84, i32 0, i32 0, !dbg !3887
  %85 = load i32, i32* %number_of_rays104, align 8, !dbg !3887
  %conv105 = sitofp i32 %85 to float, !dbg !3886
  %div106 = fdiv float %add103, %conv105, !dbg !3888
  %mul107 = fmul float 0x401921FB60000000, %div106, !dbg !3889
  store float %mul107, float* %Theta, align 4, !dbg !3882
  call void @llvm.dbg.declare(metadata float* %SiPhi, metadata !3890, metadata !DIExpression()), !dbg !3891
  %86 = load float, float* %SiSqPhi, align 4, !dbg !3892
  %call108 = call float @sqrtf(float %86) #5, !dbg !3893
  store float %call108, float* %SiPhi, align 4, !dbg !3891
  call void @llvm.dbg.declare(metadata float* %CoPhi, metadata !3894, metadata !DIExpression()), !dbg !3895
  %87 = load float, float* %SiSqPhi, align 4, !dbg !3896
  %cmp109 = fcmp olt float %87, 1.000000e+00, !dbg !3897
  br i1 %cmp109, label %cond.true, label %cond.false, !dbg !3896

cond.true:                                        ; preds = %for.body75
  %88 = load float, float* %SiSqPhi, align 4, !dbg !3898
  %sub = fsub float 1.000000e+00, %88, !dbg !3899
  %call111 = call float @sqrtf(float %sub) #5, !dbg !3900
  br label %cond.end, !dbg !3896

cond.false:                                       ; preds = %for.body75
  br label %cond.end, !dbg !3896

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %call111, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !3896
  store float %cond, float* %CoPhi, align 4, !dbg !3895
  call void @llvm.dbg.declare(metadata float* %CoThe, metadata !3901, metadata !DIExpression()), !dbg !3902
  %89 = load float, float* %Theta, align 4, !dbg !3903
  %call112 = call float @cosf(float %89) #5, !dbg !3904
  store float %call112, float* %CoThe, align 4, !dbg !3902
  call void @llvm.dbg.declare(metadata float* %SiThe, metadata !3905, metadata !DIExpression()), !dbg !3906
  %90 = load float, float* %Theta, align 4, !dbg !3907
  %call113 = call float @sinf(float %90) #5, !dbg !3908
  store float %call113, float* %SiThe, align 4, !dbg !3906
  call void @llvm.dbg.declare(metadata float* %dx, metadata !3909, metadata !DIExpression()), !dbg !3910
  %91 = load float, float* %CoThe, align 4, !dbg !3911
  %92 = load float, float* %CoPhi, align 4, !dbg !3912
  %mul114 = fmul float %91, %92, !dbg !3913
  store float %mul114, float* %dx, align 4, !dbg !3910
  call void @llvm.dbg.declare(metadata float* %dy, metadata !3914, metadata !DIExpression()), !dbg !3915
  %93 = load float, float* %SiThe, align 4, !dbg !3916
  %94 = load float, float* %CoPhi, align 4, !dbg !3917
  %mul115 = fmul float %93, %94, !dbg !3918
  store float %mul115, float* %dy, align 4, !dbg !3915
  call void @llvm.dbg.declare(metadata float* %dz, metadata !3919, metadata !DIExpression()), !dbg !3920
  %95 = load float, float* %SiPhi, align 4, !dbg !3921
  store float %95, float* %dz, align 4, !dbg !3920
  call void @llvm.dbg.declare(metadata [3 x float]* %dv, metadata !3922, metadata !DIExpression()), !dbg !3923
  store i32 0, i32* %k, align 4, !dbg !3924
  br label %for.cond116, !dbg !3926

for.cond116:                                      ; preds = %for.inc133, %cond.end
  %96 = load i32, i32* %k, align 4, !dbg !3927
  %cmp117 = icmp slt i32 %96, 3, !dbg !3929
  br i1 %cmp117, label %for.body119, label %for.end135, !dbg !3930

for.body119:                                      ; preds = %for.cond116
  %97 = load i32, i32* %k, align 4, !dbg !3931
  %idxprom120 = sext i32 %97 to i64, !dbg !3932
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %axisX, i64 0, i64 %idxprom120, !dbg !3932
  %98 = load float, float* %arrayidx121, align 4, !dbg !3932
  %99 = load float, float* %dx, align 4, !dbg !3933
  %mul122 = fmul float %98, %99, !dbg !3934
  %100 = load i32, i32* %k, align 4, !dbg !3935
  %idxprom123 = sext i32 %100 to i64, !dbg !3936
  %arrayidx124 = getelementptr inbounds [3 x float], [3 x float]* %axisY, i64 0, i64 %idxprom123, !dbg !3936
  %101 = load float, float* %arrayidx124, align 4, !dbg !3936
  %102 = load float, float* %dy, align 4, !dbg !3937
  %mul125 = fmul float %101, %102, !dbg !3938
  %add126 = fadd float %mul122, %mul125, !dbg !3939
  %103 = load i32, i32* %k, align 4, !dbg !3940
  %idxprom127 = sext i32 %103 to i64, !dbg !3941
  %arrayidx128 = getelementptr inbounds [3 x float], [3 x float]* %axisZ, i64 0, i64 %idxprom127, !dbg !3941
  %104 = load float, float* %arrayidx128, align 4, !dbg !3941
  %105 = load float, float* %dz, align 4, !dbg !3942
  %mul129 = fmul float %104, %105, !dbg !3943
  %add130 = fadd float %add126, %mul129, !dbg !3944
  %106 = load i32, i32* %k, align 4, !dbg !3945
  %idxprom131 = sext i32 %106 to i64, !dbg !3946
  %arrayidx132 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 %idxprom131, !dbg !3946
  store float %add130, float* %arrayidx132, align 4, !dbg !3947
  br label %for.inc133, !dbg !3946

for.inc133:                                       ; preds = %for.body119
  %107 = load i32, i32* %k, align 4, !dbg !3948
  %inc134 = add nsw i32 %107, 1, !dbg !3948
  store i32 %inc134, i32* %k, align 4, !dbg !3948
  br label %for.cond116, !dbg !3949, !llvm.loop !3950

for.end135:                                       ; preds = %for.cond116
  %108 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !3952
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %cen, i64 0, i64 0, !dbg !3953
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 0, !dbg !3954
  %call138 = call i32 @trace_ao_ray(%struct.MAOBakeData* %108, float* %arraydecay136, float* %arraydecay137), !dbg !3955
  store i32 %call138, i32* %hit_something, align 4, !dbg !3956
  %109 = load i32, i32* %hit_something, align 4, !dbg !3957
  %cmp139 = icmp ne i32 %109, 0, !dbg !3959
  br i1 %cmp139, label %if.then141, label %if.end143, !dbg !3960

if.then141:                                       ; preds = %for.end135
  %110 = load float, float* %shadow, align 4, !dbg !3961
  %add142 = fadd float %110, 1.000000e+00, !dbg !3961
  store float %add142, float* %shadow, align 4, !dbg !3961
  br label %if.end143, !dbg !3962

if.end143:                                        ; preds = %if.then141, %for.end135
  br label %for.inc144, !dbg !3963

for.inc144:                                       ; preds = %if.end143
  %111 = load i32, i32* %i, align 4, !dbg !3964
  %inc145 = add nsw i32 %111, 1, !dbg !3964
  store i32 %inc145, i32* %i, align 4, !dbg !3964
  br label %for.cond72, !dbg !3965, !llvm.loop !3966

for.end146:                                       ; preds = %for.cond72
  %112 = load float, float* %shadow, align 4, !dbg !3968
  %113 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !3969
  %number_of_rays147 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %113, i32 0, i32 0, !dbg !3970
  %114 = load i32, i32* %number_of_rays147, align 8, !dbg !3970
  %conv148 = sitofp i32 %114 to float, !dbg !3969
  %div149 = fdiv float %112, %conv148, !dbg !3971
  %sub150 = fsub float 1.000000e+00, %div149, !dbg !3972
  store float %sub150, float* %value, align 4, !dbg !3973
  %115 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3974
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %115, i32 0, i32 9, !dbg !3976
  %116 = load float*, float** %rect_float, align 8, !dbg !3976
  %tobool151 = icmp ne float* %116, null, !dbg !3974
  br i1 %tobool151, label %if.then152, label %if.else159, !dbg !3977

if.then152:                                       ; preds = %for.end146
  call void @llvm.dbg.declare(metadata float** %rrgbf, metadata !3978, metadata !DIExpression()), !dbg !3980
  %117 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3981
  %rect_float153 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %117, i32 0, i32 9, !dbg !3982
  %118 = load float*, float** %rect_float153, align 8, !dbg !3982
  %119 = load i32, i32* %pixel, align 4, !dbg !3983
  %mul154 = mul nsw i32 %119, 4, !dbg !3984
  %idx.ext = sext i32 %mul154 to i64, !dbg !3985
  %add.ptr = getelementptr inbounds float, float* %118, i64 %idx.ext, !dbg !3985
  store float* %add.ptr, float** %rrgbf, align 8, !dbg !3980
  %120 = load float, float* %value, align 4, !dbg !3986
  %121 = load float*, float** %rrgbf, align 8, !dbg !3987
  %arrayidx155 = getelementptr inbounds float, float* %121, i64 2, !dbg !3987
  store float %120, float* %arrayidx155, align 4, !dbg !3988
  %122 = load float*, float** %rrgbf, align 8, !dbg !3989
  %arrayidx156 = getelementptr inbounds float, float* %122, i64 1, !dbg !3989
  store float %120, float* %arrayidx156, align 4, !dbg !3990
  %123 = load float*, float** %rrgbf, align 8, !dbg !3991
  %arrayidx157 = getelementptr inbounds float, float* %123, i64 0, !dbg !3991
  store float %120, float* %arrayidx157, align 4, !dbg !3992
  %124 = load float*, float** %rrgbf, align 8, !dbg !3993
  %arrayidx158 = getelementptr inbounds float, float* %124, i64 3, !dbg !3993
  store float 1.000000e+00, float* %arrayidx158, align 4, !dbg !3994
  br label %if.end182, !dbg !3995

if.else159:                                       ; preds = %for.end146
  call void @llvm.dbg.declare(metadata i8** %rrgb, metadata !3996, metadata !DIExpression()), !dbg !3998
  %125 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !3999
  %rect = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %125, i32 0, i32 8, !dbg !4000
  %126 = load i32*, i32** %rect, align 8, !dbg !4000
  %127 = bitcast i32* %126 to i8*, !dbg !4001
  %128 = load i32, i32* %pixel, align 4, !dbg !4002
  %mul160 = mul nsw i32 %128, 4, !dbg !4003
  %idx.ext161 = sext i32 %mul160 to i64, !dbg !4004
  %add.ptr162 = getelementptr inbounds i8, i8* %127, i64 %idx.ext161, !dbg !4004
  store i8* %add.ptr162, i8** %rrgb, align 8, !dbg !3998
  %129 = load float, float* %value, align 4, !dbg !4005
  %cmp163 = fcmp ole float %129, 0.000000e+00, !dbg !4005
  br i1 %cmp163, label %cond.true165, label %cond.false166, !dbg !4005

cond.true165:                                     ; preds = %if.else159
  br label %cond.end175, !dbg !4005

cond.false166:                                    ; preds = %if.else159
  %130 = load float, float* %value, align 4, !dbg !4005
  %cmp167 = fcmp ogt float %130, 0x3FEFEFEFE0000000, !dbg !4005
  br i1 %cmp167, label %cond.true169, label %cond.false170, !dbg !4005

cond.true169:                                     ; preds = %cond.false166
  br label %cond.end173, !dbg !4005

cond.false170:                                    ; preds = %cond.false166
  %131 = load float, float* %value, align 4, !dbg !4005
  %mul171 = fmul float 2.550000e+02, %131, !dbg !4005
  %add172 = fadd float %mul171, 5.000000e-01, !dbg !4005
  br label %cond.end173, !dbg !4005

cond.end173:                                      ; preds = %cond.false170, %cond.true169
  %cond174 = phi float [ 2.550000e+02, %cond.true169 ], [ %add172, %cond.false170 ], !dbg !4005
  br label %cond.end175, !dbg !4005

cond.end175:                                      ; preds = %cond.end173, %cond.true165
  %cond176 = phi float [ 0.000000e+00, %cond.true165 ], [ %cond174, %cond.end173 ], !dbg !4005
  %conv177 = fptoui float %cond176 to i8, !dbg !4005
  %132 = load i8*, i8** %rrgb, align 8, !dbg !4006
  %arrayidx178 = getelementptr inbounds i8, i8* %132, i64 2, !dbg !4006
  store i8 %conv177, i8* %arrayidx178, align 1, !dbg !4007
  %133 = load i8*, i8** %rrgb, align 8, !dbg !4008
  %arrayidx179 = getelementptr inbounds i8, i8* %133, i64 1, !dbg !4008
  store i8 %conv177, i8* %arrayidx179, align 1, !dbg !4009
  %134 = load i8*, i8** %rrgb, align 8, !dbg !4010
  %arrayidx180 = getelementptr inbounds i8, i8* %134, i64 0, !dbg !4010
  store i8 %conv177, i8* %arrayidx180, align 1, !dbg !4011
  %135 = load i8*, i8** %rrgb, align 8, !dbg !4012
  %arrayidx181 = getelementptr inbounds i8, i8* %135, i64 3, !dbg !4012
  store i8 -1, i8* %arrayidx181, align 1, !dbg !4013
  br label %if.end182

if.end182:                                        ; preds = %cond.end175, %if.then152
  ret void, !dbg !4014
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @init_ao_data(%struct.MultiresBakeRender* %bkr, %struct.Image* %UNUSED_ima) #0 !dbg !4015 {
entry:
  %bkr.addr = alloca %struct.MultiresBakeRender*, align 8
  %UNUSED_ima.addr = alloca %struct.Image*, align 8
  %ao_data = alloca %struct.MAOBakeData*, align 8
  %lodm = alloca %struct.DerivedMesh*, align 8
  %temp_permutation_table = alloca i16*, align 8
  %permutation_size = alloca i64, align 8
  store %struct.MultiresBakeRender* %bkr, %struct.MultiresBakeRender** %bkr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeRender** %bkr.addr, metadata !4016, metadata !DIExpression()), !dbg !4017
  store %struct.Image* %UNUSED_ima, %struct.Image** %UNUSED_ima.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Image** %UNUSED_ima.addr, metadata !4018, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.declare(metadata %struct.MAOBakeData** %ao_data, metadata !4020, metadata !DIExpression()), !dbg !4021
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %lodm, metadata !4022, metadata !DIExpression()), !dbg !4023
  %0 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !4024
  %lores_dm = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %0, i32 0, i32 0, !dbg !4025
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm, align 8, !dbg !4025
  store %struct.DerivedMesh* %1, %struct.DerivedMesh** %lodm, align 8, !dbg !4023
  call void @llvm.dbg.declare(metadata i16** %temp_permutation_table, metadata !4026, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.declare(metadata i64* %permutation_size, metadata !4028, metadata !DIExpression()), !dbg !4031
  call void @init_ao_random(), !dbg !4032
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4033
  %call = call i8* %2(i64 56, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0)), !dbg !4033
  %3 = bitcast i8* %call to %struct.MAOBakeData*, !dbg !4033
  store %struct.MAOBakeData* %3, %struct.MAOBakeData** %ao_data, align 8, !dbg !4034
  %4 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !4035
  %number_of_rays = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %4, i32 0, i32 8, !dbg !4036
  %5 = load i32, i32* %number_of_rays, align 4, !dbg !4036
  %6 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4037
  %number_of_rays1 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %6, i32 0, i32 0, !dbg !4038
  store i32 %5, i32* %number_of_rays1, align 8, !dbg !4039
  %7 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !4040
  %bias = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %7, i32 0, i32 9, !dbg !4041
  %8 = load float, float* %bias, align 8, !dbg !4041
  %9 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4042
  %bias2 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %9, i32 0, i32 1, !dbg !4043
  store float %8, float* %bias2, align 4, !dbg !4044
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm, align 8, !dbg !4045
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 52, !dbg !4046
  %11 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !4046
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm, align 8, !dbg !4047
  %call3 = call i8* %11(%struct.DerivedMesh* %12, i32 7), !dbg !4045
  %13 = bitcast i8* %call3 to i32*, !dbg !4045
  %14 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4048
  %orig_index_mf_to_mpoly = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %14, i32 0, i32 6, !dbg !4049
  store i32* %13, i32** %orig_index_mf_to_mpoly, align 8, !dbg !4050
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm, align 8, !dbg !4051
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 54, !dbg !4052
  %16 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !4052
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm, align 8, !dbg !4053
  %call4 = call i8* %16(%struct.DerivedMesh* %17, i32 7), !dbg !4051
  %18 = bitcast i8* %call4 to i32*, !dbg !4051
  %19 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4054
  %orig_index_mp_to_orig = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %19, i32 0, i32 7, !dbg !4055
  store i32* %18, i32** %orig_index_mp_to_orig, align 8, !dbg !4056
  %20 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !4057
  %21 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4058
  call void @create_ao_raytree(%struct.MultiresBakeRender* %20, %struct.MAOBakeData* %21), !dbg !4059
  %22 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !4060
  %number_of_rays5 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %22, i32 0, i32 8, !dbg !4061
  %23 = load i32, i32* %number_of_rays5, align 4, !dbg !4061
  %conv = sext i32 %23 to i64, !dbg !4060
  %mul = mul i64 2, %conv, !dbg !4062
  store i64 %mul, i64* %permutation_size, align 8, !dbg !4063
  %24 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4064
  %25 = load i64, i64* %permutation_size, align 8, !dbg !4065
  %call6 = call i8* %24(i64 %25, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0)), !dbg !4064
  %26 = bitcast i8* %call6 to i16*, !dbg !4064
  %27 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4066
  %permutation_table_1 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %27, i32 0, i32 2, !dbg !4067
  store i16* %26, i16** %permutation_table_1, align 8, !dbg !4068
  %28 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4069
  %29 = load i64, i64* %permutation_size, align 8, !dbg !4070
  %call7 = call i8* %28(i64 %29, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0)), !dbg !4069
  %30 = bitcast i8* %call7 to i16*, !dbg !4069
  %31 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4071
  %permutation_table_2 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %31, i32 0, i32 3, !dbg !4072
  store i16* %30, i16** %permutation_table_2, align 8, !dbg !4073
  %32 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4074
  %33 = load i64, i64* %permutation_size, align 8, !dbg !4075
  %call8 = call i8* %32(i64 %33, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0)), !dbg !4074
  %34 = bitcast i8* %call8 to i16*, !dbg !4074
  store i16* %34, i16** %temp_permutation_table, align 8, !dbg !4076
  %35 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4077
  %permutation_table_19 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %35, i32 0, i32 2, !dbg !4078
  %36 = load i16*, i16** %permutation_table_19, align 8, !dbg !4078
  %37 = load i16*, i16** %temp_permutation_table, align 8, !dbg !4079
  %38 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !4080
  %number_of_rays10 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %38, i32 0, i32 8, !dbg !4081
  %39 = load i32, i32* %number_of_rays10, align 4, !dbg !4081
  call void @build_permutation_table(i16* %36, i16* %37, i32 %39, i32 1), !dbg !4082
  %40 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4083
  %permutation_table_211 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %40, i32 0, i32 3, !dbg !4084
  %41 = load i16*, i16** %permutation_table_211, align 8, !dbg !4084
  %42 = load i16*, i16** %temp_permutation_table, align 8, !dbg !4085
  %43 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !4086
  %number_of_rays12 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %43, i32 0, i32 8, !dbg !4087
  %44 = load i32, i32* %number_of_rays12, align 4, !dbg !4087
  call void @build_permutation_table(i16* %41, i16* %42, i32 %44, i32 0), !dbg !4088
  %45 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4089
  %46 = load i16*, i16** %temp_permutation_table, align 8, !dbg !4090
  %47 = bitcast i16* %46 to i8*, !dbg !4090
  call void %45(i8* %47), !dbg !4089
  %48 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4091
  %49 = bitcast %struct.MAOBakeData* %48 to i8*, !dbg !4092
  ret i8* %49, !dbg !4093
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_ao_data(i8* %bake_data) #0 !dbg !4094 {
entry:
  %bake_data.addr = alloca i8*, align 8
  %ao_data = alloca %struct.MAOBakeData*, align 8
  store i8* %bake_data, i8** %bake_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bake_data.addr, metadata !4095, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.declare(metadata %struct.MAOBakeData** %ao_data, metadata !4097, metadata !DIExpression()), !dbg !4098
  %0 = load i8*, i8** %bake_data.addr, align 8, !dbg !4099
  %1 = bitcast i8* %0 to %struct.MAOBakeData*, !dbg !4100
  store %struct.MAOBakeData* %1, %struct.MAOBakeData** %ao_data, align 8, !dbg !4098
  %2 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4101
  %raytree = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %2, i32 0, i32 4, !dbg !4102
  %3 = load %struct.RayObject*, %struct.RayObject** %raytree, align 8, !dbg !4102
  call void @RE_rayobject_free(%struct.RayObject* %3), !dbg !4103
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4104
  %5 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4105
  %rayfaces = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %5, i32 0, i32 5, !dbg !4106
  %6 = load %struct.RayFace*, %struct.RayFace** %rayfaces, align 8, !dbg !4106
  %7 = bitcast %struct.RayFace* %6 to i8*, !dbg !4105
  call void %4(i8* %7), !dbg !4104
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4107
  %9 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4108
  %permutation_table_1 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %9, i32 0, i32 2, !dbg !4109
  %10 = load i16*, i16** %permutation_table_1, align 8, !dbg !4109
  %11 = bitcast i16* %10 to i8*, !dbg !4108
  call void %8(i8* %11), !dbg !4107
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4110
  %13 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4111
  %permutation_table_2 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %13, i32 0, i32 3, !dbg !4112
  %14 = load i16*, i16** %permutation_table_2, align 8, !dbg !4112
  %15 = bitcast i16* %14 to i8*, !dbg !4111
  call void %12(i8* %15), !dbg !4110
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4113
  %17 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data, align 8, !dbg !4114
  %18 = bitcast %struct.MAOBakeData* %17 to i8*, !dbg !4114
  call void %16(i8* %18), !dbg !4113
  ret void, !dbg !4115
}

declare dso_local void @BKE_image_release_ibuf(%struct.Image*, %struct.ImBuf*, i8*) #2

declare dso_local i32 @BLI_system_thread_count() #2

declare dso_local i32 @CustomData_get_layer_index(%struct.CustomData*, i32) #2

declare dso_local void @DM_add_tangent_layer(%struct.DerivedMesh*) #2

declare dso_local i8* @DM_get_tessface_data_layer(%struct.DerivedMesh*, i32) #2

declare dso_local void @BLI_init_threads(%struct.ListBase*, i8* (i8*)*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @do_multires_bake_thread(i8* %data_v) #0 !dbg !4116 {
entry:
  %data_v.addr = alloca i8*, align 8
  %handle = alloca %struct.MultiresBakeThread*, align 8
  %data = alloca %struct.MResolvePixelData*, align 8
  %bake_rast = alloca %struct.MBakeRast*, align 8
  %bkr = alloca %struct.MultiresBakeRender*, align 8
  %f = alloca i32, align 4
  %mtfate = alloca %struct.MTFace*, align 8
  %verts = alloca [3 x [2 x i32]], align 16
  %nr_tris = alloca i32, align 4
  %t = alloca i32, align 4
  store i8* %data_v, i8** %data_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data_v.addr, metadata !4119, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeThread** %handle, metadata !4121, metadata !DIExpression()), !dbg !4122
  %0 = load i8*, i8** %data_v.addr, align 8, !dbg !4123
  %1 = bitcast i8* %0 to %struct.MultiresBakeThread*, !dbg !4124
  store %struct.MultiresBakeThread* %1, %struct.MultiresBakeThread** %handle, align 8, !dbg !4122
  call void @llvm.dbg.declare(metadata %struct.MResolvePixelData** %data, metadata !4125, metadata !DIExpression()), !dbg !4127
  %2 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !4128
  %data1 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %2, i32 0, i32 5, !dbg !4129
  store %struct.MResolvePixelData* %data1, %struct.MResolvePixelData** %data, align 8, !dbg !4127
  call void @llvm.dbg.declare(metadata %struct.MBakeRast** %bake_rast, metadata !4130, metadata !DIExpression()), !dbg !4132
  %3 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !4133
  %bake_rast2 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %3, i32 0, i32 4, !dbg !4134
  store %struct.MBakeRast* %bake_rast2, %struct.MBakeRast** %bake_rast, align 8, !dbg !4132
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeRender** %bkr, metadata !4135, metadata !DIExpression()), !dbg !4136
  %4 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !4137
  %bkr3 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %4, i32 0, i32 1, !dbg !4138
  %5 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr3, align 8, !dbg !4138
  store %struct.MultiresBakeRender* %5, %struct.MultiresBakeRender** %bkr, align 8, !dbg !4136
  call void @llvm.dbg.declare(metadata i32* %f, metadata !4139, metadata !DIExpression()), !dbg !4140
  br label %while.cond, !dbg !4141

while.cond:                                       ; preds = %if.end68, %if.then6, %entry
  %6 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !4142
  %queue = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %6, i32 0, i32 0, !dbg !4143
  %7 = load %struct.MultiresBakeQueue*, %struct.MultiresBakeQueue** %queue, align 8, !dbg !4143
  %call = call i32 @multires_bake_queue_next_face(%struct.MultiresBakeQueue* %7), !dbg !4144
  store i32 %call, i32* %f, align 4, !dbg !4145
  %cmp = icmp sge i32 %call, 0, !dbg !4146
  br i1 %cmp, label %while.body, label %while.end, !dbg !4141

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtfate, metadata !4147, metadata !DIExpression()), !dbg !4149
  %8 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !4150
  %mtface = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %8, i32 0, i32 2, !dbg !4151
  %9 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !4151
  %10 = load i32, i32* %f, align 4, !dbg !4152
  %idxprom = sext i32 %10 to i64, !dbg !4150
  %arrayidx = getelementptr inbounds %struct.MTFace, %struct.MTFace* %9, i64 %idxprom, !dbg !4150
  store %struct.MTFace* %arrayidx, %struct.MTFace** %mtfate, align 8, !dbg !4149
  call void @llvm.dbg.declare(metadata [3 x [2 x i32]]* %verts, metadata !4153, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.declare(metadata i32* %nr_tris, metadata !4157, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.declare(metadata i32* %t, metadata !4159, metadata !DIExpression()), !dbg !4160
  %11 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr, align 8, !dbg !4161
  %call4 = call i32 @multiresbake_test_break(%struct.MultiresBakeRender* %11), !dbg !4163
  %tobool = icmp ne i32 %call4, 0, !dbg !4163
  br i1 %tobool, label %if.then, label %if.end, !dbg !4164

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !4165

if.end:                                           ; preds = %while.body
  %12 = load %struct.MTFace*, %struct.MTFace** %mtfate, align 8, !dbg !4166
  %tpage = getelementptr inbounds %struct.MTFace, %struct.MTFace* %12, i32 0, i32 1, !dbg !4168
  %13 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !4168
  %14 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !4169
  %image = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %14, i32 0, i32 2, !dbg !4170
  %15 = load %struct.Image*, %struct.Image** %image, align 8, !dbg !4170
  %cmp5 = icmp ne %struct.Image* %13, %15, !dbg !4171
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4172

if.then6:                                         ; preds = %if.end
  br label %while.cond, !dbg !4173, !llvm.loop !4174

if.end7:                                          ; preds = %if.end
  %16 = load i32, i32* %f, align 4, !dbg !4176
  %17 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !4177
  %face_index = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %17, i32 0, i32 7, !dbg !4178
  store i32 %16, i32* %face_index, align 8, !dbg !4179
  %arrayidx8 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %verts, i64 0, i64 0, !dbg !4180
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx8, i64 0, i64 0, !dbg !4180
  store i32 0, i32* %arrayidx9, align 16, !dbg !4181
  %arrayidx10 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %verts, i64 0, i64 1, !dbg !4182
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx10, i64 0, i64 0, !dbg !4182
  store i32 1, i32* %arrayidx11, align 8, !dbg !4183
  %arrayidx12 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %verts, i64 0, i64 2, !dbg !4184
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx12, i64 0, i64 0, !dbg !4184
  store i32 2, i32* %arrayidx13, align 16, !dbg !4185
  %arrayidx14 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %verts, i64 0, i64 0, !dbg !4186
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx14, i64 0, i64 1, !dbg !4186
  store i32 0, i32* %arrayidx15, align 4, !dbg !4187
  %arrayidx16 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %verts, i64 0, i64 1, !dbg !4188
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx16, i64 0, i64 1, !dbg !4188
  store i32 2, i32* %arrayidx17, align 4, !dbg !4189
  %arrayidx18 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %verts, i64 0, i64 2, !dbg !4190
  %arrayidx19 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx18, i64 0, i64 1, !dbg !4190
  store i32 3, i32* %arrayidx19, align 4, !dbg !4191
  %18 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !4192
  %mface = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %18, i32 0, i32 1, !dbg !4193
  %19 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !4193
  %20 = load i32, i32* %f, align 4, !dbg !4194
  %idxprom20 = sext i32 %20 to i64, !dbg !4192
  %arrayidx21 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i64 %idxprom20, !dbg !4192
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx21, i32 0, i32 3, !dbg !4195
  %21 = load i32, i32* %v4, align 4, !dbg !4195
  %cmp22 = icmp ne i32 %21, 0, !dbg !4196
  %22 = zext i1 %cmp22 to i64, !dbg !4192
  %cond = select i1 %cmp22, i32 2, i32 1, !dbg !4192
  store i32 %cond, i32* %nr_tris, align 4, !dbg !4197
  store i32 0, i32* %t, align 4, !dbg !4198
  br label %for.cond, !dbg !4200

for.cond:                                         ; preds = %for.inc, %if.end7
  %23 = load i32, i32* %t, align 4, !dbg !4201
  %24 = load i32, i32* %nr_tris, align 4, !dbg !4203
  %cmp23 = icmp slt i32 %23, %24, !dbg !4204
  br i1 %cmp23, label %for.body, label %for.end, !dbg !4205

for.body:                                         ; preds = %for.cond
  %arrayidx24 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %verts, i64 0, i64 0, !dbg !4206
  %25 = load i32, i32* %t, align 4, !dbg !4208
  %idxprom25 = sext i32 %25 to i64, !dbg !4206
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx24, i64 0, i64 %idxprom25, !dbg !4206
  %26 = load i32, i32* %arrayidx26, align 4, !dbg !4206
  %27 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !4209
  %i0 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %27, i32 0, i32 8, !dbg !4210
  store i32 %26, i32* %i0, align 4, !dbg !4211
  %arrayidx27 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %verts, i64 0, i64 1, !dbg !4212
  %28 = load i32, i32* %t, align 4, !dbg !4213
  %idxprom28 = sext i32 %28 to i64, !dbg !4212
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx27, i64 0, i64 %idxprom28, !dbg !4212
  %29 = load i32, i32* %arrayidx29, align 4, !dbg !4212
  %30 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !4214
  %i1 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %30, i32 0, i32 9, !dbg !4215
  store i32 %29, i32* %i1, align 8, !dbg !4216
  %arrayidx30 = getelementptr inbounds [3 x [2 x i32]], [3 x [2 x i32]]* %verts, i64 0, i64 2, !dbg !4217
  %31 = load i32, i32* %t, align 4, !dbg !4218
  %idxprom31 = sext i32 %31 to i64, !dbg !4217
  %arrayidx32 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx30, i64 0, i64 %idxprom31, !dbg !4217
  %32 = load i32, i32* %arrayidx32, align 4, !dbg !4217
  %33 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !4219
  %i2 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %33, i32 0, i32 10, !dbg !4220
  store i32 %32, i32* %i2, align 4, !dbg !4221
  %34 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast, align 8, !dbg !4222
  %35 = load %struct.MTFace*, %struct.MTFace** %mtfate, align 8, !dbg !4223
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %35, i32 0, i32 0, !dbg !4224
  %36 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !4225
  %i033 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %36, i32 0, i32 8, !dbg !4226
  %37 = load i32, i32* %i033, align 4, !dbg !4226
  %idxprom34 = sext i32 %37 to i64, !dbg !4223
  %arrayidx35 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 %idxprom34, !dbg !4223
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx35, i64 0, i64 0, !dbg !4223
  %38 = load %struct.MTFace*, %struct.MTFace** %mtfate, align 8, !dbg !4227
  %uv36 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %38, i32 0, i32 0, !dbg !4228
  %39 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !4229
  %i137 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %39, i32 0, i32 9, !dbg !4230
  %40 = load i32, i32* %i137, align 8, !dbg !4230
  %idxprom38 = sext i32 %40 to i64, !dbg !4227
  %arrayidx39 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv36, i64 0, i64 %idxprom38, !dbg !4227
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx39, i64 0, i64 0, !dbg !4227
  %41 = load %struct.MTFace*, %struct.MTFace** %mtfate, align 8, !dbg !4231
  %uv41 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %41, i32 0, i32 0, !dbg !4232
  %42 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !4233
  %i242 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %42, i32 0, i32 10, !dbg !4234
  %43 = load i32, i32* %i242, align 4, !dbg !4234
  %idxprom43 = sext i32 %43 to i64, !dbg !4231
  %arrayidx44 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv41, i64 0, i64 %idxprom43, !dbg !4231
  %arraydecay45 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx44, i64 0, i64 0, !dbg !4231
  call void @bake_rasterize(%struct.MBakeRast* %34, float* %arraydecay, float* %arraydecay40, float* %arraydecay45), !dbg !4235
  %44 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !4236
  %ibuf = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %44, i32 0, i32 16, !dbg !4238
  %45 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4238
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %45, i32 0, i32 9, !dbg !4239
  %46 = load float*, float** %rect_float, align 8, !dbg !4239
  %tobool46 = icmp ne float* %46, null, !dbg !4236
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !4240

if.then47:                                        ; preds = %for.body
  %47 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !4241
  %ibuf48 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %47, i32 0, i32 16, !dbg !4242
  %48 = load %struct.ImBuf*, %struct.ImBuf** %ibuf48, align 8, !dbg !4242
  %userflags = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %48, i32 0, i32 23, !dbg !4243
  %49 = load i32, i32* %userflags, align 4, !dbg !4244
  %or = or i32 %49, 8, !dbg !4244
  store i32 %or, i32* %userflags, align 4, !dbg !4244
  br label %if.end49, !dbg !4241

if.end49:                                         ; preds = %if.then47, %for.body
  %50 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !4245
  %ibuf50 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %50, i32 0, i32 16, !dbg !4246
  %51 = load %struct.ImBuf*, %struct.ImBuf** %ibuf50, align 8, !dbg !4246
  %userflags51 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %51, i32 0, i32 23, !dbg !4247
  %52 = load i32, i32* %userflags51, align 4, !dbg !4248
  %or52 = or i32 %52, 16, !dbg !4248
  store i32 %or52, i32* %userflags51, align 4, !dbg !4248
  br label %for.inc, !dbg !4249

for.inc:                                          ; preds = %if.end49
  %53 = load i32, i32* %t, align 4, !dbg !4250
  %inc = add nsw i32 %53, 1, !dbg !4250
  store i32 %inc, i32* %t, align 4, !dbg !4250
  br label %for.cond, !dbg !4251, !llvm.loop !4252

for.end:                                          ; preds = %for.cond
  %54 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !4254
  %queue53 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %54, i32 0, i32 0, !dbg !4255
  %55 = load %struct.MultiresBakeQueue*, %struct.MultiresBakeQueue** %queue53, align 8, !dbg !4255
  %spin = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %55, i32 0, i32 2, !dbg !4256
  call void @BLI_spin_lock(i32* %spin), !dbg !4257
  %56 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr, align 8, !dbg !4258
  %baked_faces = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %56, i32 0, i32 14, !dbg !4259
  %57 = load i32, i32* %baked_faces, align 4, !dbg !4260
  %inc54 = add nsw i32 %57, 1, !dbg !4260
  store i32 %inc54, i32* %baked_faces, align 4, !dbg !4260
  %58 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr, align 8, !dbg !4261
  %do_update = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %58, i32 0, i32 20, !dbg !4263
  %59 = load i16*, i16** %do_update, align 8, !dbg !4263
  %tobool55 = icmp ne i16* %59, null, !dbg !4261
  br i1 %tobool55, label %if.then56, label %if.end58, !dbg !4264

if.then56:                                        ; preds = %for.end
  %60 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr, align 8, !dbg !4265
  %do_update57 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %60, i32 0, i32 20, !dbg !4266
  %61 = load i16*, i16** %do_update57, align 8, !dbg !4266
  store i16 1, i16* %61, align 2, !dbg !4267
  br label %if.end58, !dbg !4268

if.end58:                                         ; preds = %if.then56, %for.end
  %62 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr, align 8, !dbg !4269
  %progress = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %62, i32 0, i32 21, !dbg !4271
  %63 = load float*, float** %progress, align 8, !dbg !4271
  %tobool59 = icmp ne float* %63, null, !dbg !4269
  br i1 %tobool59, label %if.then60, label %if.end68, !dbg !4272

if.then60:                                        ; preds = %if.end58
  %64 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr, align 8, !dbg !4273
  %baked_objects = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %64, i32 0, i32 13, !dbg !4274
  %65 = load i32, i32* %baked_objects, align 8, !dbg !4274
  %conv = sitofp i32 %65 to float, !dbg !4275
  %66 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr, align 8, !dbg !4276
  %baked_faces61 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %66, i32 0, i32 14, !dbg !4277
  %67 = load i32, i32* %baked_faces61, align 4, !dbg !4277
  %conv62 = sitofp i32 %67 to float, !dbg !4278
  %68 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !4279
  %queue63 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %68, i32 0, i32 0, !dbg !4280
  %69 = load %struct.MultiresBakeQueue*, %struct.MultiresBakeQueue** %queue63, align 8, !dbg !4280
  %tot_face = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %69, i32 0, i32 1, !dbg !4281
  %70 = load i32, i32* %tot_face, align 4, !dbg !4281
  %conv64 = sitofp i32 %70 to float, !dbg !4279
  %div = fdiv float %conv62, %conv64, !dbg !4282
  %add = fadd float %conv, %div, !dbg !4283
  %71 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr, align 8, !dbg !4284
  %tot_obj = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %71, i32 0, i32 10, !dbg !4285
  %72 = load i32, i32* %tot_obj, align 4, !dbg !4285
  %conv65 = sitofp i32 %72 to float, !dbg !4284
  %div66 = fdiv float %add, %conv65, !dbg !4286
  %73 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr, align 8, !dbg !4287
  %progress67 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %73, i32 0, i32 21, !dbg !4288
  %74 = load float*, float** %progress67, align 8, !dbg !4288
  store float %div66, float* %74, align 4, !dbg !4289
  br label %if.end68, !dbg !4290

if.end68:                                         ; preds = %if.then60, %if.end58
  %75 = load %struct.MultiresBakeThread*, %struct.MultiresBakeThread** %handle, align 8, !dbg !4291
  %queue69 = getelementptr inbounds %struct.MultiresBakeThread, %struct.MultiresBakeThread* %75, i32 0, i32 0, !dbg !4292
  %76 = load %struct.MultiresBakeQueue*, %struct.MultiresBakeQueue** %queue69, align 8, !dbg !4292
  %spin70 = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %76, i32 0, i32 2, !dbg !4293
  call void @BLI_spin_unlock(i32* %spin70), !dbg !4294
  br label %while.cond, !dbg !4141, !llvm.loop !4174

while.end:                                        ; preds = %if.then, %while.cond
  ret i8* null, !dbg !4295
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_ccgdm_arrays(%struct.DerivedMesh* %dm) #0 !dbg !4296 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %grid_data = alloca %struct.CCGElem**, align 8
  %key = alloca %struct.CCGKey, align 4
  %grid_size = alloca i32, align 4
  %grid_offset = alloca i32*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4297, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %grid_data, metadata !4299, metadata !DIExpression()), !dbg !4301
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !4302, metadata !DIExpression()), !dbg !4304
  call void @llvm.dbg.declare(metadata i32* %grid_size, metadata !4305, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.declare(metadata i32** %grid_offset, metadata !4307, metadata !DIExpression()), !dbg !4308
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4309
  %getGridSize = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 64, !dbg !4310
  %1 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getGridSize, align 8, !dbg !4310
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4311
  %call = call i32 %1(%struct.DerivedMesh* %2), !dbg !4309
  store i32 %call, i32* %grid_size, align 4, !dbg !4312
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4313
  %getGridData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 65, !dbg !4314
  %4 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData, align 8, !dbg !4314
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4315
  %call1 = call %struct.CCGElem** %4(%struct.DerivedMesh* %5), !dbg !4313
  store %struct.CCGElem** %call1, %struct.CCGElem*** %grid_data, align 8, !dbg !4316
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4317
  %getGridOffset = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 67, !dbg !4318
  %7 = load i32* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)** %getGridOffset, align 8, !dbg !4318
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4319
  %call2 = call i32* %7(%struct.DerivedMesh* %8), !dbg !4317
  store i32* %call2, i32** %grid_offset, align 8, !dbg !4320
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4321
  %getGridKey = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 68, !dbg !4322
  %10 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey, align 8, !dbg !4322
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4323
  call void %10(%struct.DerivedMesh* %11, %struct.CCGKey* %key), !dbg !4321
  %12 = load i32, i32* %grid_size, align 4, !dbg !4324
  %13 = load %struct.CCGElem**, %struct.CCGElem*** %grid_data, align 8, !dbg !4325
  %14 = load i32*, i32** %grid_offset, align 8, !dbg !4326
  ret void, !dbg !4327
}

declare dso_local void @BLI_spin_init(i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_bake_rast(%struct.MBakeRast* %bake_rast, %struct.ImBuf* %ibuf, %struct.MResolvePixelData* %data, void (%struct.MResolvePixelData*, i32, i32)* %flush_pixel, i16* %do_update) #0 !dbg !4328 {
entry:
  %bake_rast.addr = alloca %struct.MBakeRast*, align 8
  %ibuf.addr = alloca %struct.ImBuf*, align 8
  %data.addr = alloca %struct.MResolvePixelData*, align 8
  %flush_pixel.addr = alloca void (%struct.MResolvePixelData*, i32, i32)*, align 8
  %do_update.addr = alloca i16*, align 8
  %userdata = alloca %struct.BakeImBufuserData*, align 8
  store %struct.MBakeRast* %bake_rast, %struct.MBakeRast** %bake_rast.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MBakeRast** %bake_rast.addr, metadata !4333, metadata !DIExpression()), !dbg !4334
  store %struct.ImBuf* %ibuf, %struct.ImBuf** %ibuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf.addr, metadata !4335, metadata !DIExpression()), !dbg !4336
  store %struct.MResolvePixelData* %data, %struct.MResolvePixelData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MResolvePixelData** %data.addr, metadata !4337, metadata !DIExpression()), !dbg !4338
  store void (%struct.MResolvePixelData*, i32, i32)* %flush_pixel, void (%struct.MResolvePixelData*, i32, i32)** %flush_pixel.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.MResolvePixelData*, i32, i32)** %flush_pixel.addr, metadata !4339, metadata !DIExpression()), !dbg !4340
  store i16* %do_update, i16** %do_update.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %do_update.addr, metadata !4341, metadata !DIExpression()), !dbg !4342
  call void @llvm.dbg.declare(metadata %struct.BakeImBufuserData** %userdata, metadata !4343, metadata !DIExpression()), !dbg !4344
  %0 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4345
  %userdata1 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %0, i32 0, i32 25, !dbg !4346
  %1 = load i8*, i8** %userdata1, align 8, !dbg !4346
  %2 = bitcast i8* %1 to %struct.BakeImBufuserData*, !dbg !4347
  store %struct.BakeImBufuserData* %2, %struct.BakeImBufuserData** %userdata, align 8, !dbg !4344
  %3 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4348
  %4 = bitcast %struct.MBakeRast* %3 to i8*, !dbg !4349
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false), !dbg !4349
  %5 = load %struct.BakeImBufuserData*, %struct.BakeImBufuserData** %userdata, align 8, !dbg !4350
  %mask_buffer = getelementptr inbounds %struct.BakeImBufuserData, %struct.BakeImBufuserData* %5, i32 0, i32 1, !dbg !4351
  %6 = load i8*, i8** %mask_buffer, align 8, !dbg !4351
  %7 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4352
  %texels = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %7, i32 0, i32 2, !dbg !4353
  store i8* %6, i8** %texels, align 8, !dbg !4354
  %8 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4355
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %8, i32 0, i32 2, !dbg !4356
  %9 = load i32, i32* %x, align 8, !dbg !4356
  %10 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4357
  %w = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %10, i32 0, i32 0, !dbg !4358
  store i32 %9, i32* %w, align 8, !dbg !4359
  %11 = load %struct.ImBuf*, %struct.ImBuf** %ibuf.addr, align 8, !dbg !4360
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %11, i32 0, i32 3, !dbg !4361
  %12 = load i32, i32* %y, align 4, !dbg !4361
  %13 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4362
  %h = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %13, i32 0, i32 1, !dbg !4363
  store i32 %12, i32* %h, align 4, !dbg !4364
  %14 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4365
  %15 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4366
  %data2 = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %15, i32 0, i32 3, !dbg !4367
  store %struct.MResolvePixelData* %14, %struct.MResolvePixelData** %data2, align 8, !dbg !4368
  %16 = load void (%struct.MResolvePixelData*, i32, i32)*, void (%struct.MResolvePixelData*, i32, i32)** %flush_pixel.addr, align 8, !dbg !4369
  %17 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4370
  %flush_pixel3 = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %17, i32 0, i32 4, !dbg !4371
  store void (%struct.MResolvePixelData*, i32, i32)* %16, void (%struct.MResolvePixelData*, i32, i32)** %flush_pixel3, align 8, !dbg !4372
  %18 = load i16*, i16** %do_update.addr, align 8, !dbg !4373
  %19 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4374
  %do_update4 = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %19, i32 0, i32 5, !dbg !4375
  store i16* %18, i16** %do_update4, align 8, !dbg !4376
  ret void, !dbg !4377
}

; Function Attrs: noinline nounwind uwtable
define internal void @flush_pixel(%struct.MResolvePixelData* %data, i32 %x, i32 %y) #0 !dbg !4378 {
entry:
  %data.addr = alloca %struct.MResolvePixelData*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %st = alloca [2 x float], align 4
  %st0 = alloca float*, align 8
  %st1 = alloca float*, align 8
  %st2 = alloca float*, align 8
  %tang0 = alloca float*, align 8
  %tang1 = alloca float*, align 8
  %tang2 = alloca float*, align 8
  %no0 = alloca [3 x float], align 4
  %no1 = alloca [3 x float], align 4
  %no2 = alloca [3 x float], align 4
  %fUV = alloca [2 x float], align 4
  %from_tang = alloca [3 x [3 x float]], align 16
  %to_tang = alloca [3 x [3 x float]], align 16
  %u = alloca float, align 4
  %v = alloca float, align 4
  %w6 = alloca float, align 4
  %sign = alloca float, align 4
  %r = alloca i32, align 4
  %i0 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  store %struct.MResolvePixelData* %data, %struct.MResolvePixelData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MResolvePixelData** %data.addr, metadata !4379, metadata !DIExpression()), !dbg !4380
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !4381, metadata !DIExpression()), !dbg !4382
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !4383, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.declare(metadata [2 x float]* %st, metadata !4385, metadata !DIExpression()), !dbg !4386
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %st, i64 0, i64 0, !dbg !4387
  %0 = load i32, i32* %x.addr, align 4, !dbg !4388
  %conv = sitofp i32 %0 to float, !dbg !4388
  %add = fadd float %conv, 5.000000e-01, !dbg !4389
  %1 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4390
  %w = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %1, i32 0, i32 5, !dbg !4391
  %2 = load i32, i32* %w, align 8, !dbg !4391
  %conv1 = sitofp i32 %2 to float, !dbg !4390
  %div = fdiv float %add, %conv1, !dbg !4392
  store float %div, float* %arrayinit.begin, align 4, !dbg !4387
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !4387
  %3 = load i32, i32* %y.addr, align 4, !dbg !4393
  %conv2 = sitofp i32 %3 to float, !dbg !4393
  %add3 = fadd float %conv2, 5.000000e-01, !dbg !4394
  %4 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4395
  %h = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %4, i32 0, i32 6, !dbg !4396
  %5 = load i32, i32* %h, align 4, !dbg !4396
  %conv4 = sitofp i32 %5 to float, !dbg !4395
  %div5 = fdiv float %add3, %conv4, !dbg !4397
  store float %div5, float* %arrayinit.element, align 4, !dbg !4387
  call void @llvm.dbg.declare(metadata float** %st0, metadata !4398, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.declare(metadata float** %st1, metadata !4400, metadata !DIExpression()), !dbg !4401
  call void @llvm.dbg.declare(metadata float** %st2, metadata !4402, metadata !DIExpression()), !dbg !4403
  call void @llvm.dbg.declare(metadata float** %tang0, metadata !4404, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.declare(metadata float** %tang1, metadata !4406, metadata !DIExpression()), !dbg !4407
  call void @llvm.dbg.declare(metadata float** %tang2, metadata !4408, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.declare(metadata [3 x float]* %no0, metadata !4410, metadata !DIExpression()), !dbg !4411
  call void @llvm.dbg.declare(metadata [3 x float]* %no1, metadata !4412, metadata !DIExpression()), !dbg !4413
  call void @llvm.dbg.declare(metadata [3 x float]* %no2, metadata !4414, metadata !DIExpression()), !dbg !4415
  call void @llvm.dbg.declare(metadata [2 x float]* %fUV, metadata !4416, metadata !DIExpression()), !dbg !4417
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %from_tang, metadata !4418, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %to_tang, metadata !4420, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.declare(metadata float* %u, metadata !4422, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.declare(metadata float* %v, metadata !4424, metadata !DIExpression()), !dbg !4425
  call void @llvm.dbg.declare(metadata float* %w6, metadata !4426, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.declare(metadata float* %sign, metadata !4428, metadata !DIExpression()), !dbg !4429
  call void @llvm.dbg.declare(metadata i32* %r, metadata !4430, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.declare(metadata i32* %i0, metadata !4432, metadata !DIExpression()), !dbg !4433
  %6 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4434
  %i07 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %6, i32 0, i32 8, !dbg !4435
  %7 = load i32, i32* %i07, align 4, !dbg !4435
  store i32 %7, i32* %i0, align 4, !dbg !4433
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !4436, metadata !DIExpression()), !dbg !4437
  %8 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4438
  %i18 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %8, i32 0, i32 9, !dbg !4439
  %9 = load i32, i32* %i18, align 8, !dbg !4439
  store i32 %9, i32* %i1, align 4, !dbg !4437
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !4440, metadata !DIExpression()), !dbg !4441
  %10 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4442
  %i29 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %10, i32 0, i32 10, !dbg !4443
  %11 = load i32, i32* %i29, align 4, !dbg !4443
  store i32 %11, i32* %i2, align 4, !dbg !4441
  %12 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4444
  %mtface = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %12, i32 0, i32 2, !dbg !4445
  %13 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !4445
  %14 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4446
  %face_index = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %14, i32 0, i32 7, !dbg !4447
  %15 = load i32, i32* %face_index, align 8, !dbg !4447
  %idxprom = sext i32 %15 to i64, !dbg !4444
  %arrayidx = getelementptr inbounds %struct.MTFace, %struct.MTFace* %13, i64 %idxprom, !dbg !4444
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx, i32 0, i32 0, !dbg !4448
  %16 = load i32, i32* %i0, align 4, !dbg !4449
  %idxprom10 = sext i32 %16 to i64, !dbg !4444
  %arrayidx11 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 %idxprom10, !dbg !4444
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx11, i64 0, i64 0, !dbg !4444
  store float* %arraydecay, float** %st0, align 8, !dbg !4450
  %17 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4451
  %mtface12 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %17, i32 0, i32 2, !dbg !4452
  %18 = load %struct.MTFace*, %struct.MTFace** %mtface12, align 8, !dbg !4452
  %19 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4453
  %face_index13 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %19, i32 0, i32 7, !dbg !4454
  %20 = load i32, i32* %face_index13, align 8, !dbg !4454
  %idxprom14 = sext i32 %20 to i64, !dbg !4451
  %arrayidx15 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %18, i64 %idxprom14, !dbg !4451
  %uv16 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx15, i32 0, i32 0, !dbg !4455
  %21 = load i32, i32* %i1, align 4, !dbg !4456
  %idxprom17 = sext i32 %21 to i64, !dbg !4451
  %arrayidx18 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv16, i64 0, i64 %idxprom17, !dbg !4451
  %arraydecay19 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx18, i64 0, i64 0, !dbg !4451
  store float* %arraydecay19, float** %st1, align 8, !dbg !4457
  %22 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4458
  %mtface20 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %22, i32 0, i32 2, !dbg !4459
  %23 = load %struct.MTFace*, %struct.MTFace** %mtface20, align 8, !dbg !4459
  %24 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4460
  %face_index21 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %24, i32 0, i32 7, !dbg !4461
  %25 = load i32, i32* %face_index21, align 8, !dbg !4461
  %idxprom22 = sext i32 %25 to i64, !dbg !4458
  %arrayidx23 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %23, i64 %idxprom22, !dbg !4458
  %uv24 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx23, i32 0, i32 0, !dbg !4462
  %26 = load i32, i32* %i2, align 4, !dbg !4463
  %idxprom25 = sext i32 %26 to i64, !dbg !4458
  %arrayidx26 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv24, i64 0, i64 %idxprom25, !dbg !4458
  %arraydecay27 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx26, i64 0, i64 0, !dbg !4458
  store float* %arraydecay27, float** %st2, align 8, !dbg !4464
  %27 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4465
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %no0, i64 0, i64 0, !dbg !4466
  %28 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4467
  %face_index29 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %28, i32 0, i32 7, !dbg !4468
  %29 = load i32, i32* %face_index29, align 8, !dbg !4468
  %30 = load i32, i32* %i0, align 4, !dbg !4469
  call void @multiresbake_get_normal(%struct.MResolvePixelData* %27, float* %arraydecay28, i32 %29, i32 %30), !dbg !4470
  %31 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4471
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %no1, i64 0, i64 0, !dbg !4472
  %32 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4473
  %face_index31 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %32, i32 0, i32 7, !dbg !4474
  %33 = load i32, i32* %face_index31, align 8, !dbg !4474
  %34 = load i32, i32* %i1, align 4, !dbg !4475
  call void @multiresbake_get_normal(%struct.MResolvePixelData* %31, float* %arraydecay30, i32 %33, i32 %34), !dbg !4476
  %35 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4477
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %no2, i64 0, i64 0, !dbg !4478
  %36 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4479
  %face_index33 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %36, i32 0, i32 7, !dbg !4480
  %37 = load i32, i32* %face_index33, align 8, !dbg !4480
  %38 = load i32, i32* %i2, align 4, !dbg !4481
  call void @multiresbake_get_normal(%struct.MResolvePixelData* %35, float* %arraydecay32, i32 %37, i32 %38), !dbg !4482
  %arraydecay34 = getelementptr inbounds [2 x float], [2 x float]* %fUV, i64 0, i64 0, !dbg !4483
  %arraydecay35 = getelementptr inbounds [2 x float], [2 x float]* %st, i64 0, i64 0, !dbg !4484
  %39 = load float*, float** %st0, align 8, !dbg !4485
  %40 = load float*, float** %st1, align 8, !dbg !4486
  %41 = load float*, float** %st2, align 8, !dbg !4487
  call void @resolve_tri_uv_v2(float* %arraydecay34, float* %arraydecay35, float* %39, float* %40, float* %41), !dbg !4488
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %fUV, i64 0, i64 0, !dbg !4489
  %42 = load float, float* %arrayidx36, align 4, !dbg !4489
  store float %42, float* %u, align 4, !dbg !4490
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %fUV, i64 0, i64 1, !dbg !4491
  %43 = load float, float* %arrayidx37, align 4, !dbg !4491
  store float %43, float* %v, align 4, !dbg !4492
  %44 = load float, float* %u, align 4, !dbg !4493
  %sub = fsub float 1.000000e+00, %44, !dbg !4494
  %45 = load float, float* %v, align 4, !dbg !4495
  %sub38 = fsub float %sub, %45, !dbg !4496
  store float %sub38, float* %w6, align 4, !dbg !4497
  %46 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4498
  %pvtangent = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %46, i32 0, i32 3, !dbg !4500
  %47 = load float*, float** %pvtangent, align 8, !dbg !4500
  %tobool = icmp ne float* %47, null, !dbg !4498
  br i1 %tobool, label %if.then, label %if.else, !dbg !4501

if.then:                                          ; preds = %entry
  %48 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4502
  %pvtangent39 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %48, i32 0, i32 3, !dbg !4504
  %49 = load float*, float** %pvtangent39, align 8, !dbg !4504
  %50 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4505
  %face_index40 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %50, i32 0, i32 7, !dbg !4506
  %51 = load i32, i32* %face_index40, align 8, !dbg !4506
  %mul = mul nsw i32 %51, 16, !dbg !4507
  %idx.ext = sext i32 %mul to i64, !dbg !4508
  %add.ptr = getelementptr inbounds float, float* %49, i64 %idx.ext, !dbg !4508
  %52 = load i32, i32* %i0, align 4, !dbg !4509
  %mul41 = mul nsw i32 %52, 4, !dbg !4510
  %idx.ext42 = sext i32 %mul41 to i64, !dbg !4511
  %add.ptr43 = getelementptr inbounds float, float* %add.ptr, i64 %idx.ext42, !dbg !4511
  store float* %add.ptr43, float** %tang0, align 8, !dbg !4512
  %53 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4513
  %pvtangent44 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %53, i32 0, i32 3, !dbg !4514
  %54 = load float*, float** %pvtangent44, align 8, !dbg !4514
  %55 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4515
  %face_index45 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %55, i32 0, i32 7, !dbg !4516
  %56 = load i32, i32* %face_index45, align 8, !dbg !4516
  %mul46 = mul nsw i32 %56, 16, !dbg !4517
  %idx.ext47 = sext i32 %mul46 to i64, !dbg !4518
  %add.ptr48 = getelementptr inbounds float, float* %54, i64 %idx.ext47, !dbg !4518
  %57 = load i32, i32* %i1, align 4, !dbg !4519
  %mul49 = mul nsw i32 %57, 4, !dbg !4520
  %idx.ext50 = sext i32 %mul49 to i64, !dbg !4521
  %add.ptr51 = getelementptr inbounds float, float* %add.ptr48, i64 %idx.ext50, !dbg !4521
  store float* %add.ptr51, float** %tang1, align 8, !dbg !4522
  %58 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4523
  %pvtangent52 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %58, i32 0, i32 3, !dbg !4524
  %59 = load float*, float** %pvtangent52, align 8, !dbg !4524
  %60 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4525
  %face_index53 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %60, i32 0, i32 7, !dbg !4526
  %61 = load i32, i32* %face_index53, align 8, !dbg !4526
  %mul54 = mul nsw i32 %61, 16, !dbg !4527
  %idx.ext55 = sext i32 %mul54 to i64, !dbg !4528
  %add.ptr56 = getelementptr inbounds float, float* %59, i64 %idx.ext55, !dbg !4528
  %62 = load i32, i32* %i2, align 4, !dbg !4529
  %mul57 = mul nsw i32 %62, 4, !dbg !4530
  %idx.ext58 = sext i32 %mul57 to i64, !dbg !4531
  %add.ptr59 = getelementptr inbounds float, float* %add.ptr56, i64 %idx.ext58, !dbg !4531
  store float* %add.ptr59, float** %tang2, align 8, !dbg !4532
  %63 = load float*, float** %tang0, align 8, !dbg !4533
  %arrayidx60 = getelementptr inbounds float, float* %63, i64 3, !dbg !4533
  %64 = load float, float* %arrayidx60, align 4, !dbg !4533
  %65 = load float, float* %u, align 4, !dbg !4534
  %mul61 = fmul float %64, %65, !dbg !4535
  %66 = load float*, float** %tang1, align 8, !dbg !4536
  %arrayidx62 = getelementptr inbounds float, float* %66, i64 3, !dbg !4536
  %67 = load float, float* %arrayidx62, align 4, !dbg !4536
  %68 = load float, float* %v, align 4, !dbg !4537
  %mul63 = fmul float %67, %68, !dbg !4538
  %add64 = fadd float %mul61, %mul63, !dbg !4539
  %69 = load float*, float** %tang2, align 8, !dbg !4540
  %arrayidx65 = getelementptr inbounds float, float* %69, i64 3, !dbg !4540
  %70 = load float, float* %arrayidx65, align 4, !dbg !4540
  %71 = load float, float* %w6, align 4, !dbg !4541
  %mul66 = fmul float %70, %71, !dbg !4542
  %add67 = fadd float %add64, %mul66, !dbg !4543
  %cmp = fcmp olt float %add67, 0.000000e+00, !dbg !4544
  %72 = zext i1 %cmp to i64, !dbg !4545
  %cond = select i1 %cmp, float -1.000000e+00, float 1.000000e+00, !dbg !4545
  store float %cond, float* %sign, align 4, !dbg !4546
  store i32 0, i32* %r, align 4, !dbg !4547
  br label %for.cond, !dbg !4549

for.cond:                                         ; preds = %for.inc, %if.then
  %73 = load i32, i32* %r, align 4, !dbg !4550
  %cmp69 = icmp slt i32 %73, 3, !dbg !4552
  br i1 %cmp69, label %for.body, label %for.end, !dbg !4553

for.body:                                         ; preds = %for.cond
  %74 = load float*, float** %tang0, align 8, !dbg !4554
  %75 = load i32, i32* %r, align 4, !dbg !4556
  %idxprom71 = sext i32 %75 to i64, !dbg !4554
  %arrayidx72 = getelementptr inbounds float, float* %74, i64 %idxprom71, !dbg !4554
  %76 = load float, float* %arrayidx72, align 4, !dbg !4554
  %77 = load float, float* %u, align 4, !dbg !4557
  %mul73 = fmul float %76, %77, !dbg !4558
  %78 = load float*, float** %tang1, align 8, !dbg !4559
  %79 = load i32, i32* %r, align 4, !dbg !4560
  %idxprom74 = sext i32 %79 to i64, !dbg !4559
  %arrayidx75 = getelementptr inbounds float, float* %78, i64 %idxprom74, !dbg !4559
  %80 = load float, float* %arrayidx75, align 4, !dbg !4559
  %81 = load float, float* %v, align 4, !dbg !4561
  %mul76 = fmul float %80, %81, !dbg !4562
  %add77 = fadd float %mul73, %mul76, !dbg !4563
  %82 = load float*, float** %tang2, align 8, !dbg !4564
  %83 = load i32, i32* %r, align 4, !dbg !4565
  %idxprom78 = sext i32 %83 to i64, !dbg !4564
  %arrayidx79 = getelementptr inbounds float, float* %82, i64 %idxprom78, !dbg !4564
  %84 = load float, float* %arrayidx79, align 4, !dbg !4564
  %85 = load float, float* %w6, align 4, !dbg !4566
  %mul80 = fmul float %84, %85, !dbg !4567
  %add81 = fadd float %add77, %mul80, !dbg !4568
  %arrayidx82 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %from_tang, i64 0, i64 0, !dbg !4569
  %86 = load i32, i32* %r, align 4, !dbg !4570
  %idxprom83 = sext i32 %86 to i64, !dbg !4569
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx82, i64 0, i64 %idxprom83, !dbg !4569
  store float %add81, float* %arrayidx84, align 4, !dbg !4571
  %87 = load i32, i32* %r, align 4, !dbg !4572
  %idxprom85 = sext i32 %87 to i64, !dbg !4573
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %no0, i64 0, i64 %idxprom85, !dbg !4573
  %88 = load float, float* %arrayidx86, align 4, !dbg !4573
  %89 = load float, float* %u, align 4, !dbg !4574
  %mul87 = fmul float %88, %89, !dbg !4575
  %90 = load i32, i32* %r, align 4, !dbg !4576
  %idxprom88 = sext i32 %90 to i64, !dbg !4577
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %no1, i64 0, i64 %idxprom88, !dbg !4577
  %91 = load float, float* %arrayidx89, align 4, !dbg !4577
  %92 = load float, float* %v, align 4, !dbg !4578
  %mul90 = fmul float %91, %92, !dbg !4579
  %add91 = fadd float %mul87, %mul90, !dbg !4580
  %93 = load i32, i32* %r, align 4, !dbg !4581
  %idxprom92 = sext i32 %93 to i64, !dbg !4582
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %no2, i64 0, i64 %idxprom92, !dbg !4582
  %94 = load float, float* %arrayidx93, align 4, !dbg !4582
  %95 = load float, float* %w6, align 4, !dbg !4583
  %mul94 = fmul float %94, %95, !dbg !4584
  %add95 = fadd float %add91, %mul94, !dbg !4585
  %arrayidx96 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %from_tang, i64 0, i64 2, !dbg !4586
  %96 = load i32, i32* %r, align 4, !dbg !4587
  %idxprom97 = sext i32 %96 to i64, !dbg !4586
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx96, i64 0, i64 %idxprom97, !dbg !4586
  store float %add95, float* %arrayidx98, align 4, !dbg !4588
  br label %for.inc, !dbg !4589

for.inc:                                          ; preds = %for.body
  %97 = load i32, i32* %r, align 4, !dbg !4590
  %inc = add nsw i32 %97, 1, !dbg !4590
  store i32 %inc, i32* %r, align 4, !dbg !4590
  br label %for.cond, !dbg !4591, !llvm.loop !4592

for.end:                                          ; preds = %for.cond
  %arrayidx99 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %from_tang, i64 0, i64 1, !dbg !4594
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx99, i64 0, i64 0, !dbg !4594
  %arrayidx101 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %from_tang, i64 0, i64 2, !dbg !4595
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx101, i64 0, i64 0, !dbg !4595
  %arrayidx103 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %from_tang, i64 0, i64 0, !dbg !4596
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx103, i64 0, i64 0, !dbg !4596
  call void @cross_v3_v3v3(float* %arraydecay100, float* %arraydecay102, float* %arraydecay104), !dbg !4597
  %arrayidx105 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %from_tang, i64 0, i64 1, !dbg !4598
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx105, i64 0, i64 0, !dbg !4598
  %98 = load float, float* %sign, align 4, !dbg !4599
  call void @mul_v3_fl(float* %arraydecay106, float %98), !dbg !4600
  %arraydecay107 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %to_tang, i64 0, i64 0, !dbg !4601
  %arraydecay108 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %from_tang, i64 0, i64 0, !dbg !4602
  %call = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay107, [3 x float]* %arraydecay108), !dbg !4603
  br label %if.end, !dbg !4604

if.else:                                          ; preds = %entry
  %arraydecay109 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %to_tang, i64 0, i64 0, !dbg !4605
  call void @zero_m3([3 x float]* %arraydecay109), !dbg !4607
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  %99 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4608
  %pass_data = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %99, i32 0, i32 17, !dbg !4609
  %100 = load void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)*, void (%struct.DerivedMesh*, %struct.DerivedMesh*, i8*, i8*, %struct.ImBuf*, i32, i32, float*, [3 x float]*, i32, i32)** %pass_data, align 8, !dbg !4609
  %101 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4610
  %lores_dm = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %101, i32 0, i32 11, !dbg !4611
  %102 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lores_dm, align 8, !dbg !4611
  %103 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4612
  %hires_dm = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %103, i32 0, i32 12, !dbg !4613
  %104 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hires_dm, align 8, !dbg !4613
  %105 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4614
  %thread_data = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %105, i32 0, i32 14, !dbg !4615
  %106 = load i8*, i8** %thread_data, align 8, !dbg !4615
  %107 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4616
  %bake_data = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %107, i32 0, i32 15, !dbg !4617
  %108 = load i8*, i8** %bake_data, align 8, !dbg !4617
  %109 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4618
  %ibuf = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %109, i32 0, i32 16, !dbg !4619
  %110 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !4619
  %111 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4620
  %face_index110 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %111, i32 0, i32 7, !dbg !4621
  %112 = load i32, i32* %face_index110, align 8, !dbg !4621
  %113 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !4622
  %lvl = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %113, i32 0, i32 13, !dbg !4623
  %114 = load i32, i32* %lvl, align 8, !dbg !4623
  %arraydecay111 = getelementptr inbounds [2 x float], [2 x float]* %st, i64 0, i64 0, !dbg !4624
  %arraydecay112 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %to_tang, i64 0, i64 0, !dbg !4625
  %115 = load i32, i32* %x.addr, align 4, !dbg !4626
  %116 = load i32, i32* %y.addr, align 4, !dbg !4627
  call void %100(%struct.DerivedMesh* %102, %struct.DerivedMesh* %104, i8* %106, i8* %108, %struct.ImBuf* %110, i32 %112, i32 %114, float* %arraydecay111, [3 x float]* %arraydecay112, i32 %115, i32 %116), !dbg !4608
  ret void, !dbg !4628
}

declare dso_local void @BLI_insert_thread(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_end_threads(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !4629 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !4633, metadata !DIExpression()), !dbg !4634
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !4635, metadata !DIExpression()), !dbg !4636
  %0 = load float, float* %a.addr, align 4, !dbg !4637
  %1 = load float, float* %b.addr, align 4, !dbg !4638
  %cmp = fcmp olt float %0, %1, !dbg !4639
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4640

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !4641
  br label %cond.end, !dbg !4640

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !4642
  br label %cond.end, !dbg !4640

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !4640
  ret float %cond, !dbg !4643
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !4644 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !4645, metadata !DIExpression()), !dbg !4646
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !4647, metadata !DIExpression()), !dbg !4648
  %0 = load float, float* %a.addr, align 4, !dbg !4649
  %1 = load float, float* %b.addr, align 4, !dbg !4650
  %cmp = fcmp ogt float %0, %1, !dbg !4651
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4652

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !4653
  br label %cond.end, !dbg !4652

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !4654
  br label %cond.end, !dbg !4652

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !4652
  ret float %cond, !dbg !4655
}

declare dso_local void @BLI_spin_end(i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @multires_bake_queue_next_face(%struct.MultiresBakeQueue* %queue) #0 !dbg !4656 {
entry:
  %queue.addr = alloca %struct.MultiresBakeQueue*, align 8
  %face = alloca i32, align 4
  store %struct.MultiresBakeQueue* %queue, %struct.MultiresBakeQueue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeQueue** %queue.addr, metadata !4659, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.declare(metadata i32* %face, metadata !4661, metadata !DIExpression()), !dbg !4662
  store i32 -1, i32* %face, align 4, !dbg !4662
  %0 = load %struct.MultiresBakeQueue*, %struct.MultiresBakeQueue** %queue.addr, align 8, !dbg !4663
  %spin = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %0, i32 0, i32 2, !dbg !4664
  call void @BLI_spin_lock(i32* %spin), !dbg !4665
  %1 = load %struct.MultiresBakeQueue*, %struct.MultiresBakeQueue** %queue.addr, align 8, !dbg !4666
  %cur_face = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %1, i32 0, i32 0, !dbg !4668
  %2 = load i32, i32* %cur_face, align 4, !dbg !4668
  %3 = load %struct.MultiresBakeQueue*, %struct.MultiresBakeQueue** %queue.addr, align 8, !dbg !4669
  %tot_face = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %3, i32 0, i32 1, !dbg !4670
  %4 = load i32, i32* %tot_face, align 4, !dbg !4670
  %cmp = icmp slt i32 %2, %4, !dbg !4671
  br i1 %cmp, label %if.then, label %if.end, !dbg !4672

if.then:                                          ; preds = %entry
  %5 = load %struct.MultiresBakeQueue*, %struct.MultiresBakeQueue** %queue.addr, align 8, !dbg !4673
  %cur_face1 = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %5, i32 0, i32 0, !dbg !4675
  %6 = load i32, i32* %cur_face1, align 4, !dbg !4675
  store i32 %6, i32* %face, align 4, !dbg !4676
  %7 = load %struct.MultiresBakeQueue*, %struct.MultiresBakeQueue** %queue.addr, align 8, !dbg !4677
  %cur_face2 = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %7, i32 0, i32 0, !dbg !4678
  %8 = load i32, i32* %cur_face2, align 4, !dbg !4679
  %inc = add nsw i32 %8, 1, !dbg !4679
  store i32 %inc, i32* %cur_face2, align 4, !dbg !4679
  br label %if.end, !dbg !4680

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.MultiresBakeQueue*, %struct.MultiresBakeQueue** %queue.addr, align 8, !dbg !4681
  %spin3 = getelementptr inbounds %struct.MultiresBakeQueue, %struct.MultiresBakeQueue* %9, i32 0, i32 2, !dbg !4682
  call void @BLI_spin_unlock(i32* %spin3), !dbg !4683
  %10 = load i32, i32* %face, align 4, !dbg !4684
  ret i32 %10, !dbg !4685
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @multiresbake_test_break(%struct.MultiresBakeRender* %bkr) #0 !dbg !4686 {
entry:
  %retval = alloca i32, align 4
  %bkr.addr = alloca %struct.MultiresBakeRender*, align 8
  store %struct.MultiresBakeRender* %bkr, %struct.MultiresBakeRender** %bkr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeRender** %bkr.addr, metadata !4689, metadata !DIExpression()), !dbg !4690
  %0 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !4691
  %stop = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %0, i32 0, i32 19, !dbg !4693
  %1 = load i16*, i16** %stop, align 8, !dbg !4693
  %tobool = icmp ne i16* %1, null, !dbg !4691
  br i1 %tobool, label %if.end, label %if.then, !dbg !4694

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4695
  br label %return, !dbg !4695

if.end:                                           ; preds = %entry
  %2 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !4697
  %stop1 = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %2, i32 0, i32 19, !dbg !4698
  %3 = load i16*, i16** %stop1, align 8, !dbg !4698
  %4 = load i16, i16* %3, align 2, !dbg !4699
  %conv = sext i16 %4 to i32, !dbg !4699
  %tobool2 = icmp ne i32 %conv, 0, !dbg !4699
  br i1 %tobool2, label %lor.end, label %lor.rhs, !dbg !4700

lor.rhs:                                          ; preds = %if.end
  %5 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !4701
  %conv3 = zext i8 %5 to i32, !dbg !4702
  %tobool4 = icmp ne i32 %conv3, 0, !dbg !4700
  br label %lor.end, !dbg !4700

lor.end:                                          ; preds = %lor.rhs, %if.end
  %6 = phi i1 [ true, %if.end ], [ %tobool4, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !4700
  store i32 %lor.ext, i32* %retval, align 4, !dbg !4703
  br label %return, !dbg !4703

return:                                           ; preds = %lor.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !4704
  ret i32 %7, !dbg !4704
}

; Function Attrs: noinline nounwind uwtable
define internal void @bake_rasterize(%struct.MBakeRast* %bake_rast, float* %st0_in, float* %st1_in, float* %st2_in) #0 !dbg !4705 {
entry:
  %bake_rast.addr = alloca %struct.MBakeRast*, align 8
  %st0_in.addr = alloca float*, align 8
  %st1_in.addr = alloca float*, align 8
  %st2_in.addr = alloca float*, align 8
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %slo = alloca float, align 4
  %tlo = alloca float, align 4
  %smi = alloca float, align 4
  %tmi = alloca float, align 4
  %shi = alloca float, align 4
  %thi = alloca float, align 4
  %is_mid_right = alloca i32, align 4
  %ylo = alloca i32, align 4
  %yhi = alloca i32, align 4
  %yhi_beg = alloca i32, align 4
  %sw_ap = alloca float, align 4
  %sw_ap43 = alloca float, align 4
  %sw_ap47 = alloca float, align 4
  %sw_ap48 = alloca float, align 4
  %sw_ap54 = alloca float, align 4
  %sw_ap55 = alloca float, align 4
  store %struct.MBakeRast* %bake_rast, %struct.MBakeRast** %bake_rast.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MBakeRast** %bake_rast.addr, metadata !4710, metadata !DIExpression()), !dbg !4711
  store float* %st0_in, float** %st0_in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st0_in.addr, metadata !4712, metadata !DIExpression()), !dbg !4713
  store float* %st1_in, float** %st1_in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st1_in.addr, metadata !4714, metadata !DIExpression()), !dbg !4715
  store float* %st2_in, float** %st2_in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %st2_in.addr, metadata !4716, metadata !DIExpression()), !dbg !4717
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4718, metadata !DIExpression()), !dbg !4719
  %0 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4720
  %w1 = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %0, i32 0, i32 0, !dbg !4721
  %1 = load i32, i32* %w1, align 8, !dbg !4721
  store i32 %1, i32* %w, align 4, !dbg !4719
  call void @llvm.dbg.declare(metadata i32* %h, metadata !4722, metadata !DIExpression()), !dbg !4723
  %2 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4724
  %h2 = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %2, i32 0, i32 1, !dbg !4725
  %3 = load i32, i32* %h2, align 4, !dbg !4725
  store i32 %3, i32* %h, align 4, !dbg !4723
  call void @llvm.dbg.declare(metadata float* %slo, metadata !4726, metadata !DIExpression()), !dbg !4727
  %4 = load float*, float** %st0_in.addr, align 8, !dbg !4728
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !4728
  %5 = load float, float* %arrayidx, align 4, !dbg !4728
  %6 = load i32, i32* %w, align 4, !dbg !4729
  %conv = sitofp i32 %6 to float, !dbg !4729
  %mul = fmul float %5, %conv, !dbg !4730
  %sub = fsub float %mul, 5.000000e-01, !dbg !4731
  store float %sub, float* %slo, align 4, !dbg !4727
  call void @llvm.dbg.declare(metadata float* %tlo, metadata !4732, metadata !DIExpression()), !dbg !4733
  %7 = load float*, float** %st0_in.addr, align 8, !dbg !4734
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 1, !dbg !4734
  %8 = load float, float* %arrayidx3, align 4, !dbg !4734
  %9 = load i32, i32* %h, align 4, !dbg !4735
  %conv4 = sitofp i32 %9 to float, !dbg !4735
  %mul5 = fmul float %8, %conv4, !dbg !4736
  %sub6 = fsub float %mul5, 5.000000e-01, !dbg !4737
  store float %sub6, float* %tlo, align 4, !dbg !4733
  call void @llvm.dbg.declare(metadata float* %smi, metadata !4738, metadata !DIExpression()), !dbg !4739
  %10 = load float*, float** %st1_in.addr, align 8, !dbg !4740
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 0, !dbg !4740
  %11 = load float, float* %arrayidx7, align 4, !dbg !4740
  %12 = load i32, i32* %w, align 4, !dbg !4741
  %conv8 = sitofp i32 %12 to float, !dbg !4741
  %mul9 = fmul float %11, %conv8, !dbg !4742
  %sub10 = fsub float %mul9, 5.000000e-01, !dbg !4743
  store float %sub10, float* %smi, align 4, !dbg !4739
  call void @llvm.dbg.declare(metadata float* %tmi, metadata !4744, metadata !DIExpression()), !dbg !4745
  %13 = load float*, float** %st1_in.addr, align 8, !dbg !4746
  %arrayidx11 = getelementptr inbounds float, float* %13, i64 1, !dbg !4746
  %14 = load float, float* %arrayidx11, align 4, !dbg !4746
  %15 = load i32, i32* %h, align 4, !dbg !4747
  %conv12 = sitofp i32 %15 to float, !dbg !4747
  %mul13 = fmul float %14, %conv12, !dbg !4748
  %sub14 = fsub float %mul13, 5.000000e-01, !dbg !4749
  store float %sub14, float* %tmi, align 4, !dbg !4745
  call void @llvm.dbg.declare(metadata float* %shi, metadata !4750, metadata !DIExpression()), !dbg !4751
  %16 = load float*, float** %st2_in.addr, align 8, !dbg !4752
  %arrayidx15 = getelementptr inbounds float, float* %16, i64 0, !dbg !4752
  %17 = load float, float* %arrayidx15, align 4, !dbg !4752
  %18 = load i32, i32* %w, align 4, !dbg !4753
  %conv16 = sitofp i32 %18 to float, !dbg !4753
  %mul17 = fmul float %17, %conv16, !dbg !4754
  %sub18 = fsub float %mul17, 5.000000e-01, !dbg !4755
  store float %sub18, float* %shi, align 4, !dbg !4751
  call void @llvm.dbg.declare(metadata float* %thi, metadata !4756, metadata !DIExpression()), !dbg !4757
  %19 = load float*, float** %st2_in.addr, align 8, !dbg !4758
  %arrayidx19 = getelementptr inbounds float, float* %19, i64 1, !dbg !4758
  %20 = load float, float* %arrayidx19, align 4, !dbg !4758
  %21 = load i32, i32* %h, align 4, !dbg !4759
  %conv20 = sitofp i32 %21 to float, !dbg !4759
  %mul21 = fmul float %20, %conv20, !dbg !4760
  %sub22 = fsub float %mul21, 5.000000e-01, !dbg !4761
  store float %sub22, float* %thi, align 4, !dbg !4757
  call void @llvm.dbg.declare(metadata i32* %is_mid_right, metadata !4762, metadata !DIExpression()), !dbg !4763
  store i32 0, i32* %is_mid_right, align 4, !dbg !4763
  call void @llvm.dbg.declare(metadata i32* %ylo, metadata !4764, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.declare(metadata i32* %yhi, metadata !4766, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.declare(metadata i32* %yhi_beg, metadata !4768, metadata !DIExpression()), !dbg !4769
  %22 = load float, float* %slo, align 4, !dbg !4770
  %23 = load float, float* %smi, align 4, !dbg !4772
  %cmp = fcmp oeq float %22, %23, !dbg !4773
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !4774

land.lhs.true:                                    ; preds = %entry
  %24 = load float, float* %tlo, align 4, !dbg !4775
  %25 = load float, float* %tmi, align 4, !dbg !4776
  %cmp24 = fcmp oeq float %24, %25, !dbg !4777
  br i1 %cmp24, label %if.then, label %lor.lhs.false, !dbg !4778

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %26 = load float, float* %slo, align 4, !dbg !4779
  %27 = load float, float* %shi, align 4, !dbg !4780
  %cmp26 = fcmp oeq float %26, %27, !dbg !4781
  br i1 %cmp26, label %land.lhs.true28, label %lor.lhs.false31, !dbg !4782

land.lhs.true28:                                  ; preds = %lor.lhs.false
  %28 = load float, float* %tlo, align 4, !dbg !4783
  %29 = load float, float* %thi, align 4, !dbg !4784
  %cmp29 = fcmp oeq float %28, %29, !dbg !4785
  br i1 %cmp29, label %if.then, label %lor.lhs.false31, !dbg !4786

lor.lhs.false31:                                  ; preds = %land.lhs.true28, %lor.lhs.false
  %30 = load float, float* %smi, align 4, !dbg !4787
  %31 = load float, float* %shi, align 4, !dbg !4788
  %cmp32 = fcmp oeq float %30, %31, !dbg !4789
  br i1 %cmp32, label %land.lhs.true34, label %if.end, !dbg !4790

land.lhs.true34:                                  ; preds = %lor.lhs.false31
  %32 = load float, float* %tmi, align 4, !dbg !4791
  %33 = load float, float* %thi, align 4, !dbg !4792
  %cmp35 = fcmp oeq float %32, %33, !dbg !4793
  br i1 %cmp35, label %if.then, label %if.end, !dbg !4794

if.then:                                          ; preds = %land.lhs.true34, %land.lhs.true28, %land.lhs.true
  br label %return, !dbg !4795

if.end:                                           ; preds = %land.lhs.true34, %lor.lhs.false31
  %34 = load float, float* %tlo, align 4, !dbg !4796
  %35 = load float, float* %tmi, align 4, !dbg !4798
  %cmp37 = fcmp ogt float %34, %35, !dbg !4799
  br i1 %cmp37, label %land.lhs.true39, label %if.else, !dbg !4800

land.lhs.true39:                                  ; preds = %if.end
  %36 = load float, float* %tlo, align 4, !dbg !4801
  %37 = load float, float* %thi, align 4, !dbg !4802
  %cmp40 = fcmp ogt float %36, %37, !dbg !4803
  br i1 %cmp40, label %if.then42, label %if.else, !dbg !4804

if.then42:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !4805, metadata !DIExpression()), !dbg !4808
  %38 = load float, float* %shi, align 4, !dbg !4808
  store float %38, float* %sw_ap, align 4, !dbg !4808
  %39 = load float, float* %slo, align 4, !dbg !4808
  store float %39, float* %shi, align 4, !dbg !4808
  %40 = load float, float* %sw_ap, align 4, !dbg !4808
  store float %40, float* %slo, align 4, !dbg !4808
  call void @llvm.dbg.declare(metadata float* %sw_ap43, metadata !4809, metadata !DIExpression()), !dbg !4811
  %41 = load float, float* %thi, align 4, !dbg !4811
  store float %41, float* %sw_ap43, align 4, !dbg !4811
  %42 = load float, float* %tlo, align 4, !dbg !4811
  store float %42, float* %thi, align 4, !dbg !4811
  %43 = load float, float* %sw_ap43, align 4, !dbg !4811
  store float %43, float* %tlo, align 4, !dbg !4811
  br label %if.end50, !dbg !4812

if.else:                                          ; preds = %land.lhs.true39, %if.end
  %44 = load float, float* %tmi, align 4, !dbg !4813
  %45 = load float, float* %thi, align 4, !dbg !4815
  %cmp44 = fcmp ogt float %44, %45, !dbg !4816
  br i1 %cmp44, label %if.then46, label %if.end49, !dbg !4817

if.then46:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %sw_ap47, metadata !4818, metadata !DIExpression()), !dbg !4821
  %46 = load float, float* %shi, align 4, !dbg !4821
  store float %46, float* %sw_ap47, align 4, !dbg !4821
  %47 = load float, float* %smi, align 4, !dbg !4821
  store float %47, float* %shi, align 4, !dbg !4821
  %48 = load float, float* %sw_ap47, align 4, !dbg !4821
  store float %48, float* %smi, align 4, !dbg !4821
  call void @llvm.dbg.declare(metadata float* %sw_ap48, metadata !4822, metadata !DIExpression()), !dbg !4824
  %49 = load float, float* %thi, align 4, !dbg !4824
  store float %49, float* %sw_ap48, align 4, !dbg !4824
  %50 = load float, float* %tmi, align 4, !dbg !4824
  store float %50, float* %thi, align 4, !dbg !4824
  %51 = load float, float* %sw_ap48, align 4, !dbg !4824
  store float %51, float* %tmi, align 4, !dbg !4824
  br label %if.end49, !dbg !4825

if.end49:                                         ; preds = %if.then46, %if.else
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then42
  %52 = load float, float* %tlo, align 4, !dbg !4826
  %53 = load float, float* %tmi, align 4, !dbg !4828
  %cmp51 = fcmp ogt float %52, %53, !dbg !4829
  br i1 %cmp51, label %if.then53, label %if.end56, !dbg !4830

if.then53:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata float* %sw_ap54, metadata !4831, metadata !DIExpression()), !dbg !4834
  %54 = load float, float* %slo, align 4, !dbg !4834
  store float %54, float* %sw_ap54, align 4, !dbg !4834
  %55 = load float, float* %smi, align 4, !dbg !4834
  store float %55, float* %slo, align 4, !dbg !4834
  %56 = load float, float* %sw_ap54, align 4, !dbg !4834
  store float %56, float* %smi, align 4, !dbg !4834
  call void @llvm.dbg.declare(metadata float* %sw_ap55, metadata !4835, metadata !DIExpression()), !dbg !4837
  %57 = load float, float* %tlo, align 4, !dbg !4837
  store float %57, float* %sw_ap55, align 4, !dbg !4837
  %58 = load float, float* %tmi, align 4, !dbg !4837
  store float %58, float* %tlo, align 4, !dbg !4837
  %59 = load float, float* %sw_ap55, align 4, !dbg !4837
  store float %59, float* %tmi, align 4, !dbg !4837
  br label %if.end56, !dbg !4838

if.end56:                                         ; preds = %if.then53, %if.end50
  %60 = load float, float* %shi, align 4, !dbg !4839
  %61 = load float, float* %slo, align 4, !dbg !4840
  %sub57 = fsub float %60, %61, !dbg !4841
  %fneg = fneg float %sub57, !dbg !4842
  %62 = load float, float* %tmi, align 4, !dbg !4843
  %63 = load float, float* %thi, align 4, !dbg !4844
  %sub58 = fsub float %62, %63, !dbg !4845
  %mul59 = fmul float %fneg, %sub58, !dbg !4846
  %64 = load float, float* %thi, align 4, !dbg !4847
  %65 = load float, float* %tlo, align 4, !dbg !4848
  %sub60 = fsub float %64, %65, !dbg !4849
  %66 = load float, float* %smi, align 4, !dbg !4850
  %67 = load float, float* %shi, align 4, !dbg !4851
  %sub61 = fsub float %66, %67, !dbg !4852
  %mul62 = fmul float %sub60, %sub61, !dbg !4853
  %add = fadd float %mul59, %mul62, !dbg !4854
  %cmp63 = fcmp ogt float %add, 0.000000e+00, !dbg !4855
  %68 = zext i1 %cmp63 to i64, !dbg !4856
  %cond = select i1 %cmp63, i32 1, i32 0, !dbg !4856
  store i32 %cond, i32* %is_mid_right, align 4, !dbg !4857
  %69 = load float, float* %tlo, align 4, !dbg !4858
  %70 = call float @llvm.ceil.f32(float %69), !dbg !4859
  %conv65 = fptosi float %70 to i32, !dbg !4860
  store i32 %conv65, i32* %ylo, align 4, !dbg !4861
  %71 = load float, float* %tmi, align 4, !dbg !4862
  %72 = call float @llvm.ceil.f32(float %71), !dbg !4863
  %conv66 = fptosi float %72 to i32, !dbg !4864
  store i32 %conv66, i32* %yhi_beg, align 4, !dbg !4865
  %73 = load float, float* %thi, align 4, !dbg !4866
  %74 = call float @llvm.ceil.f32(float %73), !dbg !4867
  %conv67 = fptosi float %74 to i32, !dbg !4868
  store i32 %conv67, i32* %yhi, align 4, !dbg !4869
  %75 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4870
  %76 = load float, float* %slo, align 4, !dbg !4871
  %77 = load float, float* %tlo, align 4, !dbg !4872
  %78 = load float, float* %smi, align 4, !dbg !4873
  %79 = load float, float* %tmi, align 4, !dbg !4874
  %80 = load float, float* %slo, align 4, !dbg !4875
  %81 = load float, float* %tlo, align 4, !dbg !4876
  %82 = load float, float* %shi, align 4, !dbg !4877
  %83 = load float, float* %thi, align 4, !dbg !4878
  %84 = load i32, i32* %ylo, align 4, !dbg !4879
  %85 = load i32, i32* %yhi_beg, align 4, !dbg !4880
  %86 = load i32, i32* %is_mid_right, align 4, !dbg !4881
  call void @rasterize_half(%struct.MBakeRast* %75, float %76, float %77, float %78, float %79, float %80, float %81, float %82, float %83, i32 %84, i32 %85, i32 %86), !dbg !4882
  %87 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4883
  %88 = load float, float* %smi, align 4, !dbg !4884
  %89 = load float, float* %tmi, align 4, !dbg !4885
  %90 = load float, float* %shi, align 4, !dbg !4886
  %91 = load float, float* %thi, align 4, !dbg !4887
  %92 = load float, float* %slo, align 4, !dbg !4888
  %93 = load float, float* %tlo, align 4, !dbg !4889
  %94 = load float, float* %shi, align 4, !dbg !4890
  %95 = load float, float* %thi, align 4, !dbg !4891
  %96 = load i32, i32* %yhi_beg, align 4, !dbg !4892
  %97 = load i32, i32* %yhi, align 4, !dbg !4893
  %98 = load i32, i32* %is_mid_right, align 4, !dbg !4894
  call void @rasterize_half(%struct.MBakeRast* %87, float %88, float %89, float %90, float %91, float %92, float %93, float %94, float %95, i32 %96, i32 %97, i32 %98), !dbg !4895
  br label %return, !dbg !4896

return:                                           ; preds = %if.end56, %if.then
  ret void, !dbg !4896
}

declare dso_local void @BLI_spin_lock(i32*) #2

declare dso_local void @BLI_spin_unlock(i32*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.ceil.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @rasterize_half(%struct.MBakeRast* %bake_rast, float %s0_s, float %t0_s, float %s1_s, float %t1_s, float %s0_l, float %t0_l, float %s1_l, float %t1_l, i32 %y0_in, i32 %y1_in, i32 %is_mid_right) #0 !dbg !4897 {
entry:
  %bake_rast.addr = alloca %struct.MBakeRast*, align 8
  %s0_s.addr = alloca float, align 4
  %t0_s.addr = alloca float, align 4
  %s1_s.addr = alloca float, align 4
  %t1_s.addr = alloca float, align 4
  %s0_l.addr = alloca float, align 4
  %t0_l.addr = alloca float, align 4
  %s1_l.addr = alloca float, align 4
  %t1_l.addr = alloca float, align 4
  %y0_in.addr = alloca i32, align 4
  %y1_in.addr = alloca i32, align 4
  %is_mid_right.addr = alloca i32, align 4
  %s_stable = alloca i32, align 4
  %l_stable = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %y = alloca i32, align 4
  %y0 = alloca i32, align 4
  %y1 = alloca i32, align 4
  %iXl = alloca i32, align 4
  %iXr = alloca i32, align 4
  %x = alloca i32, align 4
  %x_l = alloca float, align 4
  %x_r = alloca float, align 4
  %sw_ap = alloca float, align 4
  store %struct.MBakeRast* %bake_rast, %struct.MBakeRast** %bake_rast.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MBakeRast** %bake_rast.addr, metadata !4900, metadata !DIExpression()), !dbg !4901
  store float %s0_s, float* %s0_s.addr, align 4
  call void @llvm.dbg.declare(metadata float* %s0_s.addr, metadata !4902, metadata !DIExpression()), !dbg !4903
  store float %t0_s, float* %t0_s.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t0_s.addr, metadata !4904, metadata !DIExpression()), !dbg !4905
  store float %s1_s, float* %s1_s.addr, align 4
  call void @llvm.dbg.declare(metadata float* %s1_s.addr, metadata !4906, metadata !DIExpression()), !dbg !4907
  store float %t1_s, float* %t1_s.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t1_s.addr, metadata !4908, metadata !DIExpression()), !dbg !4909
  store float %s0_l, float* %s0_l.addr, align 4
  call void @llvm.dbg.declare(metadata float* %s0_l.addr, metadata !4910, metadata !DIExpression()), !dbg !4911
  store float %t0_l, float* %t0_l.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t0_l.addr, metadata !4912, metadata !DIExpression()), !dbg !4913
  store float %s1_l, float* %s1_l.addr, align 4
  call void @llvm.dbg.declare(metadata float* %s1_l.addr, metadata !4914, metadata !DIExpression()), !dbg !4915
  store float %t1_l, float* %t1_l.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t1_l.addr, metadata !4916, metadata !DIExpression()), !dbg !4917
  store i32 %y0_in, i32* %y0_in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y0_in.addr, metadata !4918, metadata !DIExpression()), !dbg !4919
  store i32 %y1_in, i32* %y1_in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y1_in.addr, metadata !4920, metadata !DIExpression()), !dbg !4921
  store i32 %is_mid_right, i32* %is_mid_right.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_mid_right.addr, metadata !4922, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.declare(metadata i32* %s_stable, metadata !4924, metadata !DIExpression()), !dbg !4925
  %0 = load float, float* %t1_s.addr, align 4, !dbg !4926
  %1 = load float, float* %t0_s.addr, align 4, !dbg !4927
  %sub = fsub float %0, %1, !dbg !4928
  %2 = call float @llvm.fabs.f32(float %sub), !dbg !4929
  %cmp = fcmp ogt float %2, 0x3E80000000000000, !dbg !4930
  %3 = zext i1 %cmp to i64, !dbg !4929
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !4929
  store i32 %cond, i32* %s_stable, align 4, !dbg !4925
  call void @llvm.dbg.declare(metadata i32* %l_stable, metadata !4931, metadata !DIExpression()), !dbg !4932
  %4 = load float, float* %t1_l.addr, align 4, !dbg !4933
  %5 = load float, float* %t0_l.addr, align 4, !dbg !4934
  %sub1 = fsub float %4, %5, !dbg !4935
  %6 = call float @llvm.fabs.f32(float %sub1), !dbg !4936
  %cmp2 = fcmp ogt float %6, 0x3E80000000000000, !dbg !4937
  %7 = zext i1 %cmp2 to i64, !dbg !4936
  %cond3 = select i1 %cmp2, i32 1, i32 0, !dbg !4936
  store i32 %cond3, i32* %l_stable, align 4, !dbg !4932
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4938, metadata !DIExpression()), !dbg !4939
  %8 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4940
  %w4 = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %8, i32 0, i32 0, !dbg !4941
  %9 = load i32, i32* %w4, align 8, !dbg !4941
  store i32 %9, i32* %w, align 4, !dbg !4939
  call void @llvm.dbg.declare(metadata i32* %h, metadata !4942, metadata !DIExpression()), !dbg !4943
  %10 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !4944
  %h5 = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %10, i32 0, i32 1, !dbg !4945
  %11 = load i32, i32* %h5, align 4, !dbg !4945
  store i32 %11, i32* %h, align 4, !dbg !4943
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4946, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.declare(metadata i32* %y0, metadata !4948, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.declare(metadata i32* %y1, metadata !4950, metadata !DIExpression()), !dbg !4951
  %12 = load i32, i32* %y1_in.addr, align 4, !dbg !4952
  %cmp6 = icmp sle i32 %12, 0, !dbg !4954
  br i1 %cmp6, label %if.then, label %lor.lhs.false, !dbg !4955

lor.lhs.false:                                    ; preds = %entry
  %13 = load i32, i32* %y0_in.addr, align 4, !dbg !4956
  %14 = load i32, i32* %h, align 4, !dbg !4957
  %cmp7 = icmp sge i32 %13, %14, !dbg !4958
  br i1 %cmp7, label %if.then, label %if.end, !dbg !4959

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end67, !dbg !4960

if.end:                                           ; preds = %lor.lhs.false
  %15 = load i32, i32* %y0_in.addr, align 4, !dbg !4961
  %cmp8 = icmp slt i32 %15, 0, !dbg !4962
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !4961

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !4961

cond.false:                                       ; preds = %if.end
  %16 = load i32, i32* %y0_in.addr, align 4, !dbg !4963
  br label %cond.end, !dbg !4961

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond9 = phi i32 [ 0, %cond.true ], [ %16, %cond.false ], !dbg !4961
  store i32 %cond9, i32* %y0, align 4, !dbg !4964
  %17 = load i32, i32* %y1_in.addr, align 4, !dbg !4965
  %18 = load i32, i32* %h, align 4, !dbg !4966
  %cmp10 = icmp sge i32 %17, %18, !dbg !4967
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !4965

cond.true11:                                      ; preds = %cond.end
  %19 = load i32, i32* %h, align 4, !dbg !4968
  br label %cond.end13, !dbg !4965

cond.false12:                                     ; preds = %cond.end
  %20 = load i32, i32* %y1_in.addr, align 4, !dbg !4969
  br label %cond.end13, !dbg !4965

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i32 [ %19, %cond.true11 ], [ %20, %cond.false12 ], !dbg !4965
  store i32 %cond14, i32* %y1, align 4, !dbg !4970
  %21 = load i32, i32* %y0, align 4, !dbg !4971
  store i32 %21, i32* %y, align 4, !dbg !4973
  br label %for.cond, !dbg !4974

for.cond:                                         ; preds = %for.inc65, %cond.end13
  %22 = load i32, i32* %y, align 4, !dbg !4975
  %23 = load i32, i32* %y1, align 4, !dbg !4977
  %cmp15 = icmp slt i32 %22, %23, !dbg !4978
  br i1 %cmp15, label %for.body, label %for.end67, !dbg !4979

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %iXl, metadata !4980, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.declare(metadata i32* %iXr, metadata !4983, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4985, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.declare(metadata float* %x_l, metadata !4987, metadata !DIExpression()), !dbg !4988
  %24 = load i32, i32* %s_stable, align 4, !dbg !4989
  %cmp16 = icmp ne i32 %24, 0, !dbg !4990
  br i1 %cmp16, label %cond.true17, label %cond.false21, !dbg !4989

cond.true17:                                      ; preds = %for.body
  %25 = load float, float* %s0_s.addr, align 4, !dbg !4991
  %26 = load float, float* %s1_s.addr, align 4, !dbg !4992
  %27 = load float, float* %s0_s.addr, align 4, !dbg !4993
  %sub18 = fsub float %26, %27, !dbg !4994
  %28 = load i32, i32* %y, align 4, !dbg !4995
  %conv = sitofp i32 %28 to float, !dbg !4995
  %29 = load float, float* %t0_s.addr, align 4, !dbg !4996
  %sub19 = fsub float %conv, %29, !dbg !4997
  %mul = fmul float %sub18, %sub19, !dbg !4998
  %30 = load float, float* %t1_s.addr, align 4, !dbg !4999
  %31 = load float, float* %t0_s.addr, align 4, !dbg !5000
  %sub20 = fsub float %30, %31, !dbg !5001
  %div = fdiv float %mul, %sub20, !dbg !5002
  %add = fadd float %25, %div, !dbg !5003
  br label %cond.end22, !dbg !4989

cond.false21:                                     ; preds = %for.body
  %32 = load float, float* %s0_s.addr, align 4, !dbg !5004
  br label %cond.end22, !dbg !4989

cond.end22:                                       ; preds = %cond.false21, %cond.true17
  %cond23 = phi float [ %add, %cond.true17 ], [ %32, %cond.false21 ], !dbg !4989
  store float %cond23, float* %x_l, align 4, !dbg !4988
  call void @llvm.dbg.declare(metadata float* %x_r, metadata !5005, metadata !DIExpression()), !dbg !5006
  %33 = load i32, i32* %l_stable, align 4, !dbg !5007
  %cmp24 = icmp ne i32 %33, 0, !dbg !5008
  br i1 %cmp24, label %cond.true26, label %cond.false34, !dbg !5007

cond.true26:                                      ; preds = %cond.end22
  %34 = load float, float* %s0_l.addr, align 4, !dbg !5009
  %35 = load float, float* %s1_l.addr, align 4, !dbg !5010
  %36 = load float, float* %s0_l.addr, align 4, !dbg !5011
  %sub27 = fsub float %35, %36, !dbg !5012
  %37 = load i32, i32* %y, align 4, !dbg !5013
  %conv28 = sitofp i32 %37 to float, !dbg !5013
  %38 = load float, float* %t0_l.addr, align 4, !dbg !5014
  %sub29 = fsub float %conv28, %38, !dbg !5015
  %mul30 = fmul float %sub27, %sub29, !dbg !5016
  %39 = load float, float* %t1_l.addr, align 4, !dbg !5017
  %40 = load float, float* %t0_l.addr, align 4, !dbg !5018
  %sub31 = fsub float %39, %40, !dbg !5019
  %div32 = fdiv float %mul30, %sub31, !dbg !5020
  %add33 = fadd float %34, %div32, !dbg !5021
  br label %cond.end35, !dbg !5007

cond.false34:                                     ; preds = %cond.end22
  %41 = load float, float* %s0_l.addr, align 4, !dbg !5022
  br label %cond.end35, !dbg !5007

cond.end35:                                       ; preds = %cond.false34, %cond.true26
  %cond36 = phi float [ %add33, %cond.true26 ], [ %41, %cond.false34 ], !dbg !5007
  store float %cond36, float* %x_r, align 4, !dbg !5006
  %42 = load i32, i32* %is_mid_right.addr, align 4, !dbg !5023
  %cmp37 = icmp ne i32 %42, 0, !dbg !5025
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !5026

if.then39:                                        ; preds = %cond.end35
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !5027, metadata !DIExpression()), !dbg !5029
  %43 = load float, float* %x_l, align 4, !dbg !5029
  store float %43, float* %sw_ap, align 4, !dbg !5029
  %44 = load float, float* %x_r, align 4, !dbg !5029
  store float %44, float* %x_l, align 4, !dbg !5029
  %45 = load float, float* %sw_ap, align 4, !dbg !5029
  store float %45, float* %x_r, align 4, !dbg !5029
  br label %if.end40, !dbg !5029

if.end40:                                         ; preds = %if.then39, %cond.end35
  %46 = load float, float* %x_l, align 4, !dbg !5030
  %47 = call float @llvm.ceil.f32(float %46), !dbg !5031
  %conv41 = fptosi float %47 to i32, !dbg !5032
  store i32 %conv41, i32* %iXl, align 4, !dbg !5033
  %48 = load float, float* %x_r, align 4, !dbg !5034
  %49 = call float @llvm.ceil.f32(float %48), !dbg !5035
  %conv42 = fptosi float %49 to i32, !dbg !5036
  store i32 %conv42, i32* %iXr, align 4, !dbg !5037
  %50 = load i32, i32* %iXr, align 4, !dbg !5038
  %cmp43 = icmp sgt i32 %50, 0, !dbg !5040
  br i1 %cmp43, label %land.lhs.true, label %if.end64, !dbg !5041

land.lhs.true:                                    ; preds = %if.end40
  %51 = load i32, i32* %iXl, align 4, !dbg !5042
  %52 = load i32, i32* %w, align 4, !dbg !5043
  %cmp45 = icmp slt i32 %51, %52, !dbg !5044
  br i1 %cmp45, label %if.then47, label %if.end64, !dbg !5045

if.then47:                                        ; preds = %land.lhs.true
  %53 = load i32, i32* %iXl, align 4, !dbg !5046
  %cmp48 = icmp slt i32 %53, 0, !dbg !5048
  br i1 %cmp48, label %cond.true50, label %cond.false51, !dbg !5046

cond.true50:                                      ; preds = %if.then47
  br label %cond.end52, !dbg !5046

cond.false51:                                     ; preds = %if.then47
  %54 = load i32, i32* %iXl, align 4, !dbg !5049
  br label %cond.end52, !dbg !5046

cond.end52:                                       ; preds = %cond.false51, %cond.true50
  %cond53 = phi i32 [ 0, %cond.true50 ], [ %54, %cond.false51 ], !dbg !5046
  store i32 %cond53, i32* %iXl, align 4, !dbg !5050
  %55 = load i32, i32* %iXr, align 4, !dbg !5051
  %56 = load i32, i32* %w, align 4, !dbg !5052
  %cmp54 = icmp sge i32 %55, %56, !dbg !5053
  br i1 %cmp54, label %cond.true56, label %cond.false57, !dbg !5051

cond.true56:                                      ; preds = %cond.end52
  %57 = load i32, i32* %w, align 4, !dbg !5054
  br label %cond.end58, !dbg !5051

cond.false57:                                     ; preds = %cond.end52
  %58 = load i32, i32* %iXr, align 4, !dbg !5055
  br label %cond.end58, !dbg !5051

cond.end58:                                       ; preds = %cond.false57, %cond.true56
  %cond59 = phi i32 [ %57, %cond.true56 ], [ %58, %cond.false57 ], !dbg !5051
  store i32 %cond59, i32* %iXr, align 4, !dbg !5056
  %59 = load i32, i32* %iXl, align 4, !dbg !5057
  store i32 %59, i32* %x, align 4, !dbg !5059
  br label %for.cond60, !dbg !5060

for.cond60:                                       ; preds = %for.inc, %cond.end58
  %60 = load i32, i32* %x, align 4, !dbg !5061
  %61 = load i32, i32* %iXr, align 4, !dbg !5063
  %cmp61 = icmp slt i32 %60, %61, !dbg !5064
  br i1 %cmp61, label %for.body63, label %for.end, !dbg !5065

for.body63:                                       ; preds = %for.cond60
  %62 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !5066
  %63 = load i32, i32* %x, align 4, !dbg !5067
  %64 = load i32, i32* %y, align 4, !dbg !5068
  call void @set_rast_triangle(%struct.MBakeRast* %62, i32 %63, i32 %64), !dbg !5069
  br label %for.inc, !dbg !5069

for.inc:                                          ; preds = %for.body63
  %65 = load i32, i32* %x, align 4, !dbg !5070
  %inc = add nsw i32 %65, 1, !dbg !5070
  store i32 %inc, i32* %x, align 4, !dbg !5070
  br label %for.cond60, !dbg !5071, !llvm.loop !5072

for.end:                                          ; preds = %for.cond60
  br label %if.end64, !dbg !5074

if.end64:                                         ; preds = %for.end, %land.lhs.true, %if.end40
  br label %for.inc65, !dbg !5075

for.inc65:                                        ; preds = %if.end64
  %66 = load i32, i32* %y, align 4, !dbg !5076
  %inc66 = add nsw i32 %66, 1, !dbg !5076
  store i32 %inc66, i32* %y, align 4, !dbg !5076
  br label %for.cond, !dbg !5077, !llvm.loop !5078

for.end67:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !5080
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @set_rast_triangle(%struct.MBakeRast* %bake_rast, i32 %x, i32 %y) #0 !dbg !5081 {
entry:
  %bake_rast.addr = alloca %struct.MBakeRast*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  store %struct.MBakeRast* %bake_rast, %struct.MBakeRast** %bake_rast.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MBakeRast** %bake_rast.addr, metadata !5084, metadata !DIExpression()), !dbg !5085
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5086, metadata !DIExpression()), !dbg !5087
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !5088, metadata !DIExpression()), !dbg !5089
  call void @llvm.dbg.declare(metadata i32* %w, metadata !5090, metadata !DIExpression()), !dbg !5091
  %0 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !5092
  %w1 = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %0, i32 0, i32 0, !dbg !5093
  %1 = load i32, i32* %w1, align 8, !dbg !5093
  store i32 %1, i32* %w, align 4, !dbg !5091
  call void @llvm.dbg.declare(metadata i32* %h, metadata !5094, metadata !DIExpression()), !dbg !5095
  %2 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !5096
  %h2 = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %2, i32 0, i32 1, !dbg !5097
  %3 = load i32, i32* %h2, align 4, !dbg !5097
  store i32 %3, i32* %h, align 4, !dbg !5095
  %4 = load i32, i32* %x.addr, align 4, !dbg !5098
  %cmp = icmp sge i32 %4, 0, !dbg !5100
  br i1 %cmp, label %land.lhs.true, label %if.end19, !dbg !5101

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* %x.addr, align 4, !dbg !5102
  %6 = load i32, i32* %w, align 4, !dbg !5103
  %cmp3 = icmp slt i32 %5, %6, !dbg !5104
  br i1 %cmp3, label %land.lhs.true4, label %if.end19, !dbg !5105

land.lhs.true4:                                   ; preds = %land.lhs.true
  %7 = load i32, i32* %y.addr, align 4, !dbg !5106
  %cmp5 = icmp sge i32 %7, 0, !dbg !5107
  br i1 %cmp5, label %land.lhs.true6, label %if.end19, !dbg !5108

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %8 = load i32, i32* %y.addr, align 4, !dbg !5109
  %9 = load i32, i32* %h, align 4, !dbg !5110
  %cmp7 = icmp slt i32 %8, %9, !dbg !5111
  br i1 %cmp7, label %if.then, label %if.end19, !dbg !5112

if.then:                                          ; preds = %land.lhs.true6
  %10 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !5113
  %texels = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %10, i32 0, i32 2, !dbg !5116
  %11 = load i8*, i8** %texels, align 8, !dbg !5116
  %12 = load i32, i32* %y.addr, align 4, !dbg !5117
  %13 = load i32, i32* %w, align 4, !dbg !5118
  %mul = mul nsw i32 %12, %13, !dbg !5119
  %14 = load i32, i32* %x.addr, align 4, !dbg !5120
  %add = add nsw i32 %mul, %14, !dbg !5121
  %idxprom = sext i32 %add to i64, !dbg !5113
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 %idxprom, !dbg !5113
  %15 = load i8, i8* %arrayidx, align 1, !dbg !5113
  %conv = zext i8 %15 to i32, !dbg !5122
  %cmp8 = icmp eq i32 %conv, 0, !dbg !5123
  br i1 %cmp8, label %if.then10, label %if.end18, !dbg !5124

if.then10:                                        ; preds = %if.then
  %16 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !5125
  %texels11 = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %16, i32 0, i32 2, !dbg !5127
  %17 = load i8*, i8** %texels11, align 8, !dbg !5127
  %18 = load i32, i32* %y.addr, align 4, !dbg !5128
  %19 = load i32, i32* %w, align 4, !dbg !5129
  %mul12 = mul nsw i32 %18, %19, !dbg !5130
  %20 = load i32, i32* %x.addr, align 4, !dbg !5131
  %add13 = add nsw i32 %mul12, %20, !dbg !5132
  %idxprom14 = sext i32 %add13 to i64, !dbg !5125
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 %idxprom14, !dbg !5125
  store i8 2, i8* %arrayidx15, align 1, !dbg !5133
  %21 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !5134
  %data = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %21, i32 0, i32 3, !dbg !5135
  %22 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data, align 8, !dbg !5135
  %23 = load i32, i32* %x.addr, align 4, !dbg !5136
  %24 = load i32, i32* %y.addr, align 4, !dbg !5137
  call void @flush_pixel(%struct.MResolvePixelData* %22, i32 %23, i32 %24), !dbg !5138
  %25 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !5139
  %do_update = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %25, i32 0, i32 5, !dbg !5141
  %26 = load i16*, i16** %do_update, align 8, !dbg !5141
  %tobool = icmp ne i16* %26, null, !dbg !5139
  br i1 %tobool, label %if.then16, label %if.end, !dbg !5142

if.then16:                                        ; preds = %if.then10
  %27 = load %struct.MBakeRast*, %struct.MBakeRast** %bake_rast.addr, align 8, !dbg !5143
  %do_update17 = getelementptr inbounds %struct.MBakeRast, %struct.MBakeRast* %27, i32 0, i32 5, !dbg !5145
  %28 = load i16*, i16** %do_update17, align 8, !dbg !5145
  store i16 1, i16* %28, align 2, !dbg !5146
  br label %if.end, !dbg !5147

if.end:                                           ; preds = %if.then16, %if.then10
  br label %if.end18, !dbg !5148

if.end18:                                         ; preds = %if.end, %if.then
  br label %if.end19, !dbg !5149

if.end19:                                         ; preds = %if.end18, %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %entry
  ret void, !dbg !5150
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @multiresbake_get_normal(%struct.MResolvePixelData* %data, float* %norm, i32 %face_num, i32 %vert_index) #0 !dbg !5151 {
entry:
  %data.addr = alloca %struct.MResolvePixelData*, align 8
  %norm.addr = alloca float*, align 8
  %face_num.addr = alloca i32, align 4
  %vert_index.addr = alloca i32, align 4
  %indices = alloca [4 x i32], align 16
  %smoothnormal = alloca i32, align 4
  %nor = alloca [3 x float], align 4
  %p0 = alloca float*, align 8
  %p1 = alloca float*, align 8
  %p2 = alloca float*, align 8
  %iGetNrVerts = alloca i32, align 4
  %p3 = alloca float*, align 8
  %no = alloca i16*, align 8
  store %struct.MResolvePixelData* %data, %struct.MResolvePixelData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MResolvePixelData** %data.addr, metadata !5154, metadata !DIExpression()), !dbg !5155
  store float* %norm, float** %norm.addr, align 8
  call void @llvm.dbg.declare(metadata float** %norm.addr, metadata !5156, metadata !DIExpression()), !dbg !5157
  store i32 %face_num, i32* %face_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_num.addr, metadata !5158, metadata !DIExpression()), !dbg !5159
  store i32 %vert_index, i32* %vert_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert_index.addr, metadata !5160, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.declare(metadata [4 x i32]* %indices, metadata !5162, metadata !DIExpression()), !dbg !5164
  %arrayinit.begin = getelementptr inbounds [4 x i32], [4 x i32]* %indices, i64 0, i64 0, !dbg !5165
  %0 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5166
  %mface = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %0, i32 0, i32 1, !dbg !5167
  %1 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !5167
  %2 = load i32, i32* %face_num.addr, align 4, !dbg !5168
  %idxprom = sext i32 %2 to i64, !dbg !5166
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %1, i64 %idxprom, !dbg !5166
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx, i32 0, i32 0, !dbg !5169
  %3 = load i32, i32* %v1, align 4, !dbg !5169
  store i32 %3, i32* %arrayinit.begin, align 4, !dbg !5165
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !5165
  %4 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5170
  %mface1 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %4, i32 0, i32 1, !dbg !5171
  %5 = load %struct.MFace*, %struct.MFace** %mface1, align 8, !dbg !5171
  %6 = load i32, i32* %face_num.addr, align 4, !dbg !5172
  %idxprom2 = sext i32 %6 to i64, !dbg !5170
  %arrayidx3 = getelementptr inbounds %struct.MFace, %struct.MFace* %5, i64 %idxprom2, !dbg !5170
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx3, i32 0, i32 1, !dbg !5173
  %7 = load i32, i32* %v2, align 4, !dbg !5173
  store i32 %7, i32* %arrayinit.element, align 4, !dbg !5165
  %arrayinit.element4 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1, !dbg !5165
  %8 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5174
  %mface5 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %8, i32 0, i32 1, !dbg !5175
  %9 = load %struct.MFace*, %struct.MFace** %mface5, align 8, !dbg !5175
  %10 = load i32, i32* %face_num.addr, align 4, !dbg !5176
  %idxprom6 = sext i32 %10 to i64, !dbg !5174
  %arrayidx7 = getelementptr inbounds %struct.MFace, %struct.MFace* %9, i64 %idxprom6, !dbg !5174
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx7, i32 0, i32 2, !dbg !5177
  %11 = load i32, i32* %v3, align 4, !dbg !5177
  store i32 %11, i32* %arrayinit.element4, align 4, !dbg !5165
  %arrayinit.element8 = getelementptr inbounds i32, i32* %arrayinit.element4, i64 1, !dbg !5165
  %12 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5178
  %mface9 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %12, i32 0, i32 1, !dbg !5179
  %13 = load %struct.MFace*, %struct.MFace** %mface9, align 8, !dbg !5179
  %14 = load i32, i32* %face_num.addr, align 4, !dbg !5180
  %idxprom10 = sext i32 %14 to i64, !dbg !5178
  %arrayidx11 = getelementptr inbounds %struct.MFace, %struct.MFace* %13, i64 %idxprom10, !dbg !5178
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx11, i32 0, i32 3, !dbg !5181
  %15 = load i32, i32* %v4, align 4, !dbg !5181
  store i32 %15, i32* %arrayinit.element8, align 4, !dbg !5165
  call void @llvm.dbg.declare(metadata i32* %smoothnormal, metadata !5182, metadata !DIExpression()), !dbg !5183
  %16 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5184
  %mface12 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %16, i32 0, i32 1, !dbg !5185
  %17 = load %struct.MFace*, %struct.MFace** %mface12, align 8, !dbg !5185
  %18 = load i32, i32* %face_num.addr, align 4, !dbg !5186
  %idxprom13 = sext i32 %18 to i64, !dbg !5184
  %arrayidx14 = getelementptr inbounds %struct.MFace, %struct.MFace* %17, i64 %idxprom13, !dbg !5184
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx14, i32 0, i32 6, !dbg !5187
  %19 = load i8, i8* %flag, align 1, !dbg !5187
  %conv = zext i8 %19 to i32, !dbg !5184
  %and = and i32 %conv, 1, !dbg !5188
  store i32 %and, i32* %smoothnormal, align 4, !dbg !5183
  %20 = load i32, i32* %smoothnormal, align 4, !dbg !5189
  %tobool = icmp ne i32 %20, 0, !dbg !5189
  br i1 %tobool, label %if.else55, label %if.then, !dbg !5191

if.then:                                          ; preds = %entry
  %21 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5192
  %precomputed_normals = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %21, i32 0, i32 4, !dbg !5195
  %22 = load float*, float** %precomputed_normals, align 8, !dbg !5195
  %tobool15 = icmp ne float* %22, null, !dbg !5192
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !5196

if.then16:                                        ; preds = %if.then
  %23 = load float*, float** %norm.addr, align 8, !dbg !5197
  %24 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5199
  %precomputed_normals17 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %24, i32 0, i32 4, !dbg !5200
  %25 = load float*, float** %precomputed_normals17, align 8, !dbg !5200
  %26 = load i32, i32* %face_num.addr, align 4, !dbg !5201
  %mul = mul nsw i32 3, %26, !dbg !5202
  %idxprom18 = sext i32 %mul to i64, !dbg !5199
  %arrayidx19 = getelementptr inbounds float, float* %25, i64 %idxprom18, !dbg !5199
  call void @copy_v3_v3(float* %23, float* %arrayidx19), !dbg !5203
  br label %if.end54, !dbg !5204

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !5205, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.declare(metadata float** %p0, metadata !5208, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.declare(metadata float** %p1, metadata !5210, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.declare(metadata float** %p2, metadata !5212, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.declare(metadata i32* %iGetNrVerts, metadata !5214, metadata !DIExpression()), !dbg !5215
  %27 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5216
  %mface20 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %27, i32 0, i32 1, !dbg !5217
  %28 = load %struct.MFace*, %struct.MFace** %mface20, align 8, !dbg !5217
  %29 = load i32, i32* %face_num.addr, align 4, !dbg !5218
  %idxprom21 = sext i32 %29 to i64, !dbg !5216
  %arrayidx22 = getelementptr inbounds %struct.MFace, %struct.MFace* %28, i64 %idxprom21, !dbg !5216
  %v423 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx22, i32 0, i32 3, !dbg !5219
  %30 = load i32, i32* %v423, align 4, !dbg !5219
  %cmp = icmp ne i32 %30, 0, !dbg !5220
  %31 = zext i1 %cmp to i64, !dbg !5216
  %cond = select i1 %cmp, i32 4, i32 3, !dbg !5216
  store i32 %cond, i32* %iGetNrVerts, align 4, !dbg !5215
  %32 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5221
  %mvert = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %32, i32 0, i32 0, !dbg !5222
  %33 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !5222
  %arrayidx25 = getelementptr inbounds [4 x i32], [4 x i32]* %indices, i64 0, i64 0, !dbg !5223
  %34 = load i32, i32* %arrayidx25, align 16, !dbg !5223
  %idxprom26 = zext i32 %34 to i64, !dbg !5221
  %arrayidx27 = getelementptr inbounds %struct.MVert, %struct.MVert* %33, i64 %idxprom26, !dbg !5221
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx27, i32 0, i32 0, !dbg !5224
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5221
  store float* %arraydecay, float** %p0, align 8, !dbg !5225
  %35 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5226
  %mvert28 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %35, i32 0, i32 0, !dbg !5227
  %36 = load %struct.MVert*, %struct.MVert** %mvert28, align 8, !dbg !5227
  %arrayidx29 = getelementptr inbounds [4 x i32], [4 x i32]* %indices, i64 0, i64 1, !dbg !5228
  %37 = load i32, i32* %arrayidx29, align 4, !dbg !5228
  %idxprom30 = zext i32 %37 to i64, !dbg !5226
  %arrayidx31 = getelementptr inbounds %struct.MVert, %struct.MVert* %36, i64 %idxprom30, !dbg !5226
  %co32 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx31, i32 0, i32 0, !dbg !5229
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 0, !dbg !5226
  store float* %arraydecay33, float** %p1, align 8, !dbg !5230
  %38 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5231
  %mvert34 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %38, i32 0, i32 0, !dbg !5232
  %39 = load %struct.MVert*, %struct.MVert** %mvert34, align 8, !dbg !5232
  %arrayidx35 = getelementptr inbounds [4 x i32], [4 x i32]* %indices, i64 0, i64 2, !dbg !5233
  %40 = load i32, i32* %arrayidx35, align 8, !dbg !5233
  %idxprom36 = zext i32 %40 to i64, !dbg !5231
  %arrayidx37 = getelementptr inbounds %struct.MVert, %struct.MVert* %39, i64 %idxprom36, !dbg !5231
  %co38 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx37, i32 0, i32 0, !dbg !5234
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %co38, i64 0, i64 0, !dbg !5231
  store float* %arraydecay39, float** %p2, align 8, !dbg !5235
  %41 = load i32, i32* %iGetNrVerts, align 4, !dbg !5236
  %cmp40 = icmp eq i32 %41, 4, !dbg !5238
  br i1 %cmp40, label %if.then42, label %if.else50, !dbg !5239

if.then42:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float** %p3, metadata !5240, metadata !DIExpression()), !dbg !5242
  %42 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5243
  %mvert43 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %42, i32 0, i32 0, !dbg !5244
  %43 = load %struct.MVert*, %struct.MVert** %mvert43, align 8, !dbg !5244
  %arrayidx44 = getelementptr inbounds [4 x i32], [4 x i32]* %indices, i64 0, i64 3, !dbg !5245
  %44 = load i32, i32* %arrayidx44, align 4, !dbg !5245
  %idxprom45 = zext i32 %44 to i64, !dbg !5243
  %arrayidx46 = getelementptr inbounds %struct.MVert, %struct.MVert* %43, i64 %idxprom45, !dbg !5243
  %co47 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx46, i32 0, i32 0, !dbg !5246
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %co47, i64 0, i64 0, !dbg !5243
  store float* %arraydecay48, float** %p3, align 8, !dbg !5242
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !5247
  %45 = load float*, float** %p0, align 8, !dbg !5248
  %46 = load float*, float** %p1, align 8, !dbg !5249
  %47 = load float*, float** %p2, align 8, !dbg !5250
  %48 = load float*, float** %p3, align 8, !dbg !5251
  %call = call float @normal_quad_v3(float* %arraydecay49, float* %45, float* %46, float* %47, float* %48), !dbg !5252
  br label %if.end, !dbg !5253

if.else50:                                        ; preds = %if.else
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !5254
  %49 = load float*, float** %p0, align 8, !dbg !5256
  %50 = load float*, float** %p1, align 8, !dbg !5257
  %51 = load float*, float** %p2, align 8, !dbg !5258
  %call52 = call float @normal_tri_v3(float* %arraydecay51, float* %49, float* %50, float* %51), !dbg !5259
  br label %if.end

if.end:                                           ; preds = %if.else50, %if.then42
  %52 = load float*, float** %norm.addr, align 8, !dbg !5260
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !5261
  call void @copy_v3_v3(float* %52, float* %arraydecay53), !dbg !5262
  br label %if.end54

if.end54:                                         ; preds = %if.end, %if.then16
  br label %if.end64, !dbg !5263

if.else55:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i16** %no, metadata !5264, metadata !DIExpression()), !dbg !5266
  %53 = load %struct.MResolvePixelData*, %struct.MResolvePixelData** %data.addr, align 8, !dbg !5267
  %mvert56 = getelementptr inbounds %struct.MResolvePixelData, %struct.MResolvePixelData* %53, i32 0, i32 0, !dbg !5268
  %54 = load %struct.MVert*, %struct.MVert** %mvert56, align 8, !dbg !5268
  %55 = load i32, i32* %vert_index.addr, align 4, !dbg !5269
  %idxprom57 = sext i32 %55 to i64, !dbg !5270
  %arrayidx58 = getelementptr inbounds [4 x i32], [4 x i32]* %indices, i64 0, i64 %idxprom57, !dbg !5270
  %56 = load i32, i32* %arrayidx58, align 4, !dbg !5270
  %idxprom59 = zext i32 %56 to i64, !dbg !5267
  %arrayidx60 = getelementptr inbounds %struct.MVert, %struct.MVert* %54, i64 %idxprom59, !dbg !5267
  %no61 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx60, i32 0, i32 1, !dbg !5271
  %arraydecay62 = getelementptr inbounds [3 x i16], [3 x i16]* %no61, i64 0, i64 0, !dbg !5267
  store i16* %arraydecay62, i16** %no, align 8, !dbg !5266
  %57 = load float*, float** %norm.addr, align 8, !dbg !5272
  %58 = load i16*, i16** %no, align 8, !dbg !5273
  call void @normal_short_to_float_v3(float* %57, i16* %58), !dbg !5274
  %59 = load float*, float** %norm.addr, align 8, !dbg !5275
  %call63 = call float @normalize_v3(float* %59), !dbg !5276
  br label %if.end64

if.end64:                                         ; preds = %if.else55, %if.end54
  ret void, !dbg !5277
}

declare dso_local void @resolve_tri_uv_v2(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !5278 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5282, metadata !DIExpression()), !dbg !5283
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5284, metadata !DIExpression()), !dbg !5285
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5286, metadata !DIExpression()), !dbg !5287
  %0 = load float*, float** %a.addr, align 8, !dbg !5288
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !5288
  %1 = load float, float* %arrayidx, align 4, !dbg !5288
  %2 = load float*, float** %b.addr, align 8, !dbg !5289
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !5289
  %3 = load float, float* %arrayidx1, align 4, !dbg !5289
  %mul = fmul float %1, %3, !dbg !5290
  %4 = load float*, float** %a.addr, align 8, !dbg !5291
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !5291
  %5 = load float, float* %arrayidx2, align 4, !dbg !5291
  %6 = load float*, float** %b.addr, align 8, !dbg !5292
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5292
  %7 = load float, float* %arrayidx3, align 4, !dbg !5292
  %mul4 = fmul float %5, %7, !dbg !5293
  %sub = fsub float %mul, %mul4, !dbg !5294
  %8 = load float*, float** %r.addr, align 8, !dbg !5295
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !5295
  store float %sub, float* %arrayidx5, align 4, !dbg !5296
  %9 = load float*, float** %a.addr, align 8, !dbg !5297
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !5297
  %10 = load float, float* %arrayidx6, align 4, !dbg !5297
  %11 = load float*, float** %b.addr, align 8, !dbg !5298
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !5298
  %12 = load float, float* %arrayidx7, align 4, !dbg !5298
  %mul8 = fmul float %10, %12, !dbg !5299
  %13 = load float*, float** %a.addr, align 8, !dbg !5300
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !5300
  %14 = load float, float* %arrayidx9, align 4, !dbg !5300
  %15 = load float*, float** %b.addr, align 8, !dbg !5301
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !5301
  %16 = load float, float* %arrayidx10, align 4, !dbg !5301
  %mul11 = fmul float %14, %16, !dbg !5302
  %sub12 = fsub float %mul8, %mul11, !dbg !5303
  %17 = load float*, float** %r.addr, align 8, !dbg !5304
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !5304
  store float %sub12, float* %arrayidx13, align 4, !dbg !5305
  %18 = load float*, float** %a.addr, align 8, !dbg !5306
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !5306
  %19 = load float, float* %arrayidx14, align 4, !dbg !5306
  %20 = load float*, float** %b.addr, align 8, !dbg !5307
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !5307
  %21 = load float, float* %arrayidx15, align 4, !dbg !5307
  %mul16 = fmul float %19, %21, !dbg !5308
  %22 = load float*, float** %a.addr, align 8, !dbg !5309
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !5309
  %23 = load float, float* %arrayidx17, align 4, !dbg !5309
  %24 = load float*, float** %b.addr, align 8, !dbg !5310
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !5310
  %25 = load float, float* %arrayidx18, align 4, !dbg !5310
  %mul19 = fmul float %23, %25, !dbg !5311
  %sub20 = fsub float %mul16, %mul19, !dbg !5312
  %26 = load float*, float** %r.addr, align 8, !dbg !5313
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !5313
  store float %sub20, float* %arrayidx21, align 4, !dbg !5314
  ret void, !dbg !5315
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !5316 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5319, metadata !DIExpression()), !dbg !5320
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5321, metadata !DIExpression()), !dbg !5322
  %0 = load float, float* %f.addr, align 4, !dbg !5323
  %1 = load float*, float** %r.addr, align 8, !dbg !5324
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !5324
  %2 = load float, float* %arrayidx, align 4, !dbg !5325
  %mul = fmul float %2, %0, !dbg !5325
  store float %mul, float* %arrayidx, align 4, !dbg !5325
  %3 = load float, float* %f.addr, align 4, !dbg !5326
  %4 = load float*, float** %r.addr, align 8, !dbg !5327
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !5327
  %5 = load float, float* %arrayidx1, align 4, !dbg !5328
  %mul2 = fmul float %5, %3, !dbg !5328
  store float %mul2, float* %arrayidx1, align 4, !dbg !5328
  %6 = load float, float* %f.addr, align 4, !dbg !5329
  %7 = load float*, float** %r.addr, align 8, !dbg !5330
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !5330
  %8 = load float, float* %arrayidx3, align 4, !dbg !5331
  %mul4 = fmul float %8, %6, !dbg !5331
  store float %mul4, float* %arrayidx3, align 4, !dbg !5331
  ret void, !dbg !5332
}

declare dso_local zeroext i8 @invert_m3_m3([3 x float]*, [3 x float]*) #2

declare dso_local void @zero_m3([3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !5333 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5336, metadata !DIExpression()), !dbg !5337
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5338, metadata !DIExpression()), !dbg !5339
  %0 = load float*, float** %a.addr, align 8, !dbg !5340
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5340
  %1 = load float, float* %arrayidx, align 4, !dbg !5340
  %2 = load float*, float** %r.addr, align 8, !dbg !5341
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5341
  store float %1, float* %arrayidx1, align 4, !dbg !5342
  %3 = load float*, float** %a.addr, align 8, !dbg !5343
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5343
  %4 = load float, float* %arrayidx2, align 4, !dbg !5343
  %5 = load float*, float** %r.addr, align 8, !dbg !5344
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5344
  store float %4, float* %arrayidx3, align 4, !dbg !5345
  %6 = load float*, float** %a.addr, align 8, !dbg !5346
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !5346
  %7 = load float, float* %arrayidx4, align 4, !dbg !5346
  %8 = load float*, float** %r.addr, align 8, !dbg !5347
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5347
  store float %7, float* %arrayidx5, align 4, !dbg !5348
  ret void, !dbg !5349
}

declare dso_local float @normal_quad_v3(float*, float*, float*, float*, float*) #2

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @normal_short_to_float_v3(float* %out, i16* %in) #0 !dbg !5350 {
entry:
  %out.addr = alloca float*, align 8
  %in.addr = alloca i16*, align 8
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !5353, metadata !DIExpression()), !dbg !5354
  store i16* %in, i16** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %in.addr, metadata !5355, metadata !DIExpression()), !dbg !5356
  %0 = load i16*, i16** %in.addr, align 8, !dbg !5357
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !5357
  %1 = load i16, i16* %arrayidx, align 2, !dbg !5357
  %conv = sext i16 %1 to i32, !dbg !5357
  %conv1 = sitofp i32 %conv to float, !dbg !5357
  %mul = fmul float %conv1, 0x3F00002000000000, !dbg !5358
  %2 = load float*, float** %out.addr, align 8, !dbg !5359
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !5359
  store float %mul, float* %arrayidx2, align 4, !dbg !5360
  %3 = load i16*, i16** %in.addr, align 8, !dbg !5361
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !5361
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !5361
  %conv4 = sext i16 %4 to i32, !dbg !5361
  %conv5 = sitofp i32 %conv4 to float, !dbg !5361
  %mul6 = fmul float %conv5, 0x3F00002000000000, !dbg !5362
  %5 = load float*, float** %out.addr, align 8, !dbg !5363
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 1, !dbg !5363
  store float %mul6, float* %arrayidx7, align 4, !dbg !5364
  %6 = load i16*, i16** %in.addr, align 8, !dbg !5365
  %arrayidx8 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !5365
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !5365
  %conv9 = sext i16 %7 to i32, !dbg !5365
  %conv10 = sitofp i32 %conv9 to float, !dbg !5365
  %mul11 = fmul float %conv10, 0x3F00002000000000, !dbg !5366
  %8 = load float*, float** %out.addr, align 8, !dbg !5367
  %arrayidx12 = getelementptr inbounds float, float* %8, i64 2, !dbg !5367
  store float %mul11, float* %arrayidx12, align 4, !dbg !5368
  ret void, !dbg !5369
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !5370 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !5373, metadata !DIExpression()), !dbg !5374
  %0 = load float*, float** %n.addr, align 8, !dbg !5375
  %1 = load float*, float** %n.addr, align 8, !dbg !5376
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !5377
  ret float %call, !dbg !5378
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !5379 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5382, metadata !DIExpression()), !dbg !5383
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5384, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.declare(metadata float* %d, metadata !5386, metadata !DIExpression()), !dbg !5387
  %0 = load float*, float** %a.addr, align 8, !dbg !5388
  %1 = load float*, float** %a.addr, align 8, !dbg !5389
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !5390
  store float %call, float* %d, align 4, !dbg !5387
  %2 = load float, float* %d, align 4, !dbg !5391
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !5393
  br i1 %cmp, label %if.then, label %if.else, !dbg !5394

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !5395
  %call1 = call float @sqrtf(float %3) #5, !dbg !5397
  store float %call1, float* %d, align 4, !dbg !5398
  %4 = load float*, float** %r.addr, align 8, !dbg !5399
  %5 = load float*, float** %a.addr, align 8, !dbg !5400
  %6 = load float, float* %d, align 4, !dbg !5401
  %div = fdiv float 1.000000e+00, %6, !dbg !5402
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !5403
  br label %if.end, !dbg !5404

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !5405
  call void @zero_v3(float* %7), !dbg !5407
  store float 0.000000e+00, float* %d, align 4, !dbg !5408
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !5409
  ret float %8, !dbg !5410
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !5411 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5414, metadata !DIExpression()), !dbg !5415
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5416, metadata !DIExpression()), !dbg !5417
  %0 = load float*, float** %a.addr, align 8, !dbg !5418
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5418
  %1 = load float, float* %arrayidx, align 4, !dbg !5418
  %2 = load float*, float** %b.addr, align 8, !dbg !5419
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5419
  %3 = load float, float* %arrayidx1, align 4, !dbg !5419
  %mul = fmul float %1, %3, !dbg !5420
  %4 = load float*, float** %a.addr, align 8, !dbg !5421
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5421
  %5 = load float, float* %arrayidx2, align 4, !dbg !5421
  %6 = load float*, float** %b.addr, align 8, !dbg !5422
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5422
  %7 = load float, float* %arrayidx3, align 4, !dbg !5422
  %mul4 = fmul float %5, %7, !dbg !5423
  %add = fadd float %mul, %mul4, !dbg !5424
  %8 = load float*, float** %a.addr, align 8, !dbg !5425
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5425
  %9 = load float, float* %arrayidx5, align 4, !dbg !5425
  %10 = load float*, float** %b.addr, align 8, !dbg !5426
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5426
  %11 = load float, float* %arrayidx6, align 4, !dbg !5426
  %mul7 = fmul float %9, %11, !dbg !5427
  %add8 = fadd float %add, %mul7, !dbg !5428
  ret float %add8, !dbg !5429
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !5430 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5433, metadata !DIExpression()), !dbg !5434
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5435, metadata !DIExpression()), !dbg !5436
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5437, metadata !DIExpression()), !dbg !5438
  %0 = load float*, float** %a.addr, align 8, !dbg !5439
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5439
  %1 = load float, float* %arrayidx, align 4, !dbg !5439
  %2 = load float, float* %f.addr, align 4, !dbg !5440
  %mul = fmul float %1, %2, !dbg !5441
  %3 = load float*, float** %r.addr, align 8, !dbg !5442
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !5442
  store float %mul, float* %arrayidx1, align 4, !dbg !5443
  %4 = load float*, float** %a.addr, align 8, !dbg !5444
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5444
  %5 = load float, float* %arrayidx2, align 4, !dbg !5444
  %6 = load float, float* %f.addr, align 4, !dbg !5445
  %mul3 = fmul float %5, %6, !dbg !5446
  %7 = load float*, float** %r.addr, align 8, !dbg !5447
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5447
  store float %mul3, float* %arrayidx4, align 4, !dbg !5448
  %8 = load float*, float** %a.addr, align 8, !dbg !5449
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5449
  %9 = load float, float* %arrayidx5, align 4, !dbg !5449
  %10 = load float, float* %f.addr, align 4, !dbg !5450
  %mul6 = fmul float %9, %10, !dbg !5451
  %11 = load float*, float** %r.addr, align 8, !dbg !5452
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !5452
  store float %mul6, float* %arrayidx7, align 4, !dbg !5453
  ret void, !dbg !5454
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !5455 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5458, metadata !DIExpression()), !dbg !5459
  %0 = load float*, float** %r.addr, align 8, !dbg !5460
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5460
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5461
  %1 = load float*, float** %r.addr, align 8, !dbg !5462
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !5462
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !5463
  %2 = load float*, float** %r.addr, align 8, !dbg !5464
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !5464
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !5465
  ret void, !dbg !5466
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local void @resolve_quad_uv_v2(float*, float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @get_ccgdm_data(%struct.DerivedMesh* %lodm, %struct.DerivedMesh* %hidm, i32* %index_mf_to_mpoly, i32* %index_mp_to_orig, i32 %lvl, i32 %face_index, float %u, float %v, float* %co, float* %n) #0 !dbg !5467 {
entry:
  %lodm.addr = alloca %struct.DerivedMesh*, align 8
  %hidm.addr = alloca %struct.DerivedMesh*, align 8
  %index_mf_to_mpoly.addr = alloca i32*, align 8
  %index_mp_to_orig.addr = alloca i32*, align 8
  %lvl.addr = alloca i32, align 4
  %face_index.addr = alloca i32, align 4
  %u.addr = alloca float, align 4
  %v.addr = alloca float, align 4
  %co.addr = alloca float*, align 8
  %n.addr = alloca float*, align 8
  %mface = alloca %struct.MFace, align 4
  %grid_data = alloca %struct.CCGElem**, align 8
  %key = alloca %struct.CCGKey, align 4
  %crn_x = alloca float, align 4
  %crn_y = alloca float, align 4
  %grid_size = alloca i32, align 4
  %S = alloca i32, align 4
  %face_side = alloca i32, align 4
  %grid_offset = alloca i32*, align 8
  %g_index = alloca i32, align 4
  %side = alloca i32, align 4
  %grid_index = alloca i32, align 4
  %loc_offs = alloca i32, align 4
  %cell_index = alloca i32, align 4
  %cell_side = alloca i32, align 4
  %row = alloca i32, align 4
  %col = alloca i32, align 4
  store %struct.DerivedMesh* %lodm, %struct.DerivedMesh** %lodm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %lodm.addr, metadata !5470, metadata !DIExpression()), !dbg !5471
  store %struct.DerivedMesh* %hidm, %struct.DerivedMesh** %hidm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %hidm.addr, metadata !5472, metadata !DIExpression()), !dbg !5473
  store i32* %index_mf_to_mpoly, i32** %index_mf_to_mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index_mf_to_mpoly.addr, metadata !5474, metadata !DIExpression()), !dbg !5475
  store i32* %index_mp_to_orig, i32** %index_mp_to_orig.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index_mp_to_orig.addr, metadata !5476, metadata !DIExpression()), !dbg !5477
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !5478, metadata !DIExpression()), !dbg !5479
  store i32 %face_index, i32* %face_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_index.addr, metadata !5480, metadata !DIExpression()), !dbg !5481
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !5482, metadata !DIExpression()), !dbg !5483
  store float %v, float* %v.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v.addr, metadata !5484, metadata !DIExpression()), !dbg !5485
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5486, metadata !DIExpression()), !dbg !5487
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !5488, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.declare(metadata %struct.MFace* %mface, metadata !5490, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %grid_data, metadata !5492, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !5494, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.declare(metadata float* %crn_x, metadata !5496, metadata !DIExpression()), !dbg !5497
  call void @llvm.dbg.declare(metadata float* %crn_y, metadata !5498, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.declare(metadata i32* %grid_size, metadata !5500, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.declare(metadata i32* %S, metadata !5502, metadata !DIExpression()), !dbg !5503
  call void @llvm.dbg.declare(metadata i32* %face_side, metadata !5504, metadata !DIExpression()), !dbg !5505
  call void @llvm.dbg.declare(metadata i32** %grid_offset, metadata !5506, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.declare(metadata i32* %g_index, metadata !5508, metadata !DIExpression()), !dbg !5509
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm.addr, align 8, !dbg !5510
  %getTessFace = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 30, !dbg !5511
  %1 = load void (%struct.DerivedMesh*, i32, %struct.MFace*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)** %getTessFace, align 8, !dbg !5511
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %lodm.addr, align 8, !dbg !5512
  %3 = load i32, i32* %face_index.addr, align 4, !dbg !5513
  call void %1(%struct.DerivedMesh* %2, i32 %3, %struct.MFace* %mface), !dbg !5510
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm.addr, align 8, !dbg !5514
  %getGridSize = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 64, !dbg !5515
  %5 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getGridSize, align 8, !dbg !5515
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm.addr, align 8, !dbg !5516
  %call = call i32 %5(%struct.DerivedMesh* %6), !dbg !5514
  store i32 %call, i32* %grid_size, align 4, !dbg !5517
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm.addr, align 8, !dbg !5518
  %getGridData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 65, !dbg !5519
  %8 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData, align 8, !dbg !5519
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm.addr, align 8, !dbg !5520
  %call1 = call %struct.CCGElem** %8(%struct.DerivedMesh* %9), !dbg !5518
  store %struct.CCGElem** %call1, %struct.CCGElem*** %grid_data, align 8, !dbg !5521
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm.addr, align 8, !dbg !5522
  %getGridOffset = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 67, !dbg !5523
  %11 = load i32* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)** %getGridOffset, align 8, !dbg !5523
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm.addr, align 8, !dbg !5524
  %call2 = call i32* %11(%struct.DerivedMesh* %12), !dbg !5522
  store i32* %call2, i32** %grid_offset, align 8, !dbg !5525
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm.addr, align 8, !dbg !5526
  %getGridKey = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 68, !dbg !5527
  %14 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey, align 8, !dbg !5527
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm.addr, align 8, !dbg !5528
  call void %14(%struct.DerivedMesh* %15, %struct.CCGKey* %key), !dbg !5526
  %16 = load i32, i32* %grid_size, align 4, !dbg !5529
  %shl = shl i32 %16, 1, !dbg !5530
  %sub = sub nsw i32 %shl, 1, !dbg !5531
  store i32 %sub, i32* %face_side, align 4, !dbg !5532
  %17 = load i32, i32* %lvl.addr, align 4, !dbg !5533
  %cmp = icmp eq i32 %17, 0, !dbg !5535
  br i1 %cmp, label %if.then, label %if.else, !dbg !5536

if.then:                                          ; preds = %entry
  %18 = load i32*, i32** %grid_offset, align 8, !dbg !5537
  %19 = load i32, i32* %face_index.addr, align 4, !dbg !5539
  %idxprom = sext i32 %19 to i64, !dbg !5537
  %arrayidx = getelementptr inbounds i32, i32* %18, i64 %idxprom, !dbg !5537
  %20 = load i32, i32* %arrayidx, align 4, !dbg !5537
  store i32 %20, i32* %g_index, align 4, !dbg !5540
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %mface, i32 0, i32 3, !dbg !5541
  %21 = load i32, i32* %v4, align 4, !dbg !5541
  %tobool = icmp ne i32 %21, 0, !dbg !5542
  %22 = zext i1 %tobool to i64, !dbg !5542
  %cond = select i1 %tobool, i32 4, i32 3, !dbg !5542
  %23 = load i32, i32* %face_side, align 4, !dbg !5543
  %24 = load float, float* %u.addr, align 4, !dbg !5544
  %25 = load i32, i32* %face_side, align 4, !dbg !5545
  %sub3 = sub nsw i32 %25, 1, !dbg !5546
  %conv = sitofp i32 %sub3 to float, !dbg !5547
  %mul = fmul float %24, %conv, !dbg !5548
  %26 = load float, float* %v.addr, align 4, !dbg !5549
  %27 = load i32, i32* %face_side, align 4, !dbg !5550
  %sub4 = sub nsw i32 %27, 1, !dbg !5551
  %conv5 = sitofp i32 %sub4 to float, !dbg !5552
  %mul6 = fmul float %26, %conv5, !dbg !5553
  %call7 = call i32 @mdisp_rot_face_to_crn(i32 %cond, i32 %23, float %mul, float %mul6, float* %crn_x, float* %crn_y), !dbg !5554
  store i32 %call7, i32* %S, align 4, !dbg !5555
  br label %if.end, !dbg !5556

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %side, metadata !5557, metadata !DIExpression()), !dbg !5559
  %28 = load i32, i32* %lvl.addr, align 4, !dbg !5560
  %sub8 = sub nsw i32 %28, 1, !dbg !5561
  %shl9 = shl i32 1, %sub8, !dbg !5562
  %add = add nsw i32 %shl9, 1, !dbg !5563
  store i32 %add, i32* %side, align 4, !dbg !5559
  call void @llvm.dbg.declare(metadata i32* %grid_index, metadata !5564, metadata !DIExpression()), !dbg !5565
  %29 = load i32*, i32** %index_mf_to_mpoly.addr, align 8, !dbg !5566
  %30 = load i32*, i32** %index_mp_to_orig.addr, align 8, !dbg !5567
  %31 = load i32, i32* %face_index.addr, align 4, !dbg !5568
  %call10 = call i32 @DM_origindex_mface_mpoly(i32* %29, i32* %30, i32 %31), !dbg !5569
  store i32 %call10, i32* %grid_index, align 4, !dbg !5565
  call void @llvm.dbg.declare(metadata i32* %loc_offs, metadata !5570, metadata !DIExpression()), !dbg !5571
  %32 = load i32, i32* %face_index.addr, align 4, !dbg !5572
  %33 = load i32, i32* %lvl.addr, align 4, !dbg !5573
  %mul11 = mul nsw i32 2, %33, !dbg !5574
  %shl12 = shl i32 1, %mul11, !dbg !5575
  %rem = srem i32 %32, %shl12, !dbg !5576
  store i32 %rem, i32* %loc_offs, align 4, !dbg !5571
  call void @llvm.dbg.declare(metadata i32* %cell_index, metadata !5577, metadata !DIExpression()), !dbg !5578
  %34 = load i32, i32* %loc_offs, align 4, !dbg !5579
  %35 = load i32, i32* %side, align 4, !dbg !5580
  %sub13 = sub nsw i32 %35, 1, !dbg !5581
  %36 = load i32, i32* %side, align 4, !dbg !5582
  %sub14 = sub nsw i32 %36, 1, !dbg !5583
  %mul15 = mul nsw i32 %sub13, %sub14, !dbg !5584
  %rem16 = srem i32 %34, %mul15, !dbg !5585
  store i32 %rem16, i32* %cell_index, align 4, !dbg !5578
  call void @llvm.dbg.declare(metadata i32* %cell_side, metadata !5586, metadata !DIExpression()), !dbg !5587
  %37 = load i32, i32* %grid_size, align 4, !dbg !5588
  %sub17 = sub nsw i32 %37, 1, !dbg !5589
  %38 = load i32, i32* %side, align 4, !dbg !5590
  %sub18 = sub nsw i32 %38, 1, !dbg !5591
  %div = sdiv i32 %sub17, %sub18, !dbg !5592
  store i32 %div, i32* %cell_side, align 4, !dbg !5587
  call void @llvm.dbg.declare(metadata i32* %row, metadata !5593, metadata !DIExpression()), !dbg !5594
  %39 = load i32, i32* %cell_index, align 4, !dbg !5595
  %40 = load i32, i32* %side, align 4, !dbg !5596
  %sub19 = sub nsw i32 %40, 1, !dbg !5597
  %div20 = sdiv i32 %39, %sub19, !dbg !5598
  store i32 %div20, i32* %row, align 4, !dbg !5594
  call void @llvm.dbg.declare(metadata i32* %col, metadata !5599, metadata !DIExpression()), !dbg !5600
  %41 = load i32, i32* %cell_index, align 4, !dbg !5601
  %42 = load i32, i32* %side, align 4, !dbg !5602
  %sub21 = sub nsw i32 %42, 1, !dbg !5603
  %rem22 = srem i32 %41, %sub21, !dbg !5604
  store i32 %rem22, i32* %col, align 4, !dbg !5600
  %43 = load i32, i32* %face_index.addr, align 4, !dbg !5605
  %44 = load i32, i32* %lvl.addr, align 4, !dbg !5606
  %sub23 = sub nsw i32 %44, 1, !dbg !5607
  %mul24 = mul nsw i32 2, %sub23, !dbg !5608
  %shl25 = shl i32 1, %mul24, !dbg !5609
  %div26 = sdiv i32 %43, %shl25, !dbg !5610
  %45 = load i32*, i32** %grid_offset, align 8, !dbg !5611
  %46 = load i32, i32* %grid_index, align 4, !dbg !5612
  %idxprom27 = sext i32 %46 to i64, !dbg !5611
  %arrayidx28 = getelementptr inbounds i32, i32* %45, i64 %idxprom27, !dbg !5611
  %47 = load i32, i32* %arrayidx28, align 4, !dbg !5611
  %sub29 = sub nsw i32 %div26, %47, !dbg !5613
  store i32 %sub29, i32* %S, align 4, !dbg !5614
  %48 = load i32*, i32** %grid_offset, align 8, !dbg !5615
  %49 = load i32, i32* %grid_index, align 4, !dbg !5616
  %idxprom30 = sext i32 %49 to i64, !dbg !5615
  %arrayidx31 = getelementptr inbounds i32, i32* %48, i64 %idxprom30, !dbg !5615
  %50 = load i32, i32* %arrayidx31, align 4, !dbg !5615
  store i32 %50, i32* %g_index, align 4, !dbg !5617
  %51 = load i32, i32* %row, align 4, !dbg !5618
  %52 = load i32, i32* %cell_side, align 4, !dbg !5619
  %mul32 = mul nsw i32 %51, %52, !dbg !5620
  %conv33 = sitofp i32 %mul32 to float, !dbg !5621
  %53 = load float, float* %u.addr, align 4, !dbg !5622
  %54 = load i32, i32* %cell_side, align 4, !dbg !5623
  %conv34 = sitofp i32 %54 to float, !dbg !5623
  %mul35 = fmul float %53, %conv34, !dbg !5624
  %add36 = fadd float %conv33, %mul35, !dbg !5625
  store float %add36, float* %crn_y, align 4, !dbg !5626
  %55 = load i32, i32* %col, align 4, !dbg !5627
  %56 = load i32, i32* %cell_side, align 4, !dbg !5628
  %mul37 = mul nsw i32 %55, %56, !dbg !5629
  %conv38 = sitofp i32 %mul37 to float, !dbg !5630
  %57 = load float, float* %v.addr, align 4, !dbg !5631
  %58 = load i32, i32* %cell_side, align 4, !dbg !5632
  %conv39 = sitofp i32 %58 to float, !dbg !5632
  %mul40 = fmul float %57, %conv39, !dbg !5633
  %add41 = fadd float %conv38, %mul40, !dbg !5634
  store float %add41, float* %crn_x, align 4, !dbg !5635
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %59 = load float, float* %crn_x, align 4, !dbg !5636
  %cmp42 = fcmp olt float %59, 0.000000e+00, !dbg !5636
  br i1 %cmp42, label %if.then44, label %if.else45, !dbg !5639

if.then44:                                        ; preds = %if.end
  store float 0.000000e+00, float* %crn_x, align 4, !dbg !5636
  br label %if.end52, !dbg !5636

if.else45:                                        ; preds = %if.end
  %60 = load float, float* %crn_x, align 4, !dbg !5640
  %61 = load i32, i32* %grid_size, align 4, !dbg !5640
  %conv46 = sitofp i32 %61 to float, !dbg !5640
  %cmp47 = fcmp ogt float %60, %conv46, !dbg !5640
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !5636

if.then49:                                        ; preds = %if.else45
  %62 = load i32, i32* %grid_size, align 4, !dbg !5640
  %conv50 = sitofp i32 %62 to float, !dbg !5640
  store float %conv50, float* %crn_x, align 4, !dbg !5640
  br label %if.end51, !dbg !5640

if.end51:                                         ; preds = %if.then49, %if.else45
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then44
  %63 = load float, float* %crn_y, align 4, !dbg !5642
  %cmp53 = fcmp olt float %63, 0.000000e+00, !dbg !5642
  br i1 %cmp53, label %if.then55, label %if.else56, !dbg !5645

if.then55:                                        ; preds = %if.end52
  store float 0.000000e+00, float* %crn_y, align 4, !dbg !5642
  br label %if.end63, !dbg !5642

if.else56:                                        ; preds = %if.end52
  %64 = load float, float* %crn_y, align 4, !dbg !5646
  %65 = load i32, i32* %grid_size, align 4, !dbg !5646
  %conv57 = sitofp i32 %65 to float, !dbg !5646
  %cmp58 = fcmp ogt float %64, %conv57, !dbg !5646
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !5642

if.then60:                                        ; preds = %if.else56
  %66 = load i32, i32* %grid_size, align 4, !dbg !5646
  %conv61 = sitofp i32 %66 to float, !dbg !5646
  store float %conv61, float* %crn_y, align 4, !dbg !5646
  br label %if.end62, !dbg !5646

if.end62:                                         ; preds = %if.then60, %if.else56
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then55
  %67 = load float*, float** %n.addr, align 8, !dbg !5648
  %cmp64 = icmp ne float* %67, null, !dbg !5650
  br i1 %cmp64, label %if.then66, label %if.end70, !dbg !5651

if.then66:                                        ; preds = %if.end63
  %68 = load %struct.CCGElem**, %struct.CCGElem*** %grid_data, align 8, !dbg !5652
  %69 = load i32, i32* %g_index, align 4, !dbg !5653
  %70 = load i32, i32* %S, align 4, !dbg !5654
  %add67 = add nsw i32 %69, %70, !dbg !5655
  %idxprom68 = sext i32 %add67 to i64, !dbg !5652
  %arrayidx69 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %68, i64 %idxprom68, !dbg !5652
  %71 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx69, align 8, !dbg !5652
  %72 = load float, float* %crn_x, align 4, !dbg !5656
  %73 = load float, float* %crn_y, align 4, !dbg !5657
  %74 = load float*, float** %n.addr, align 8, !dbg !5658
  call void @interp_bilinear_grid(%struct.CCGKey* %key, %struct.CCGElem* %71, float %72, float %73, i32 0, float* %74), !dbg !5659
  br label %if.end70, !dbg !5659

if.end70:                                         ; preds = %if.then66, %if.end63
  %75 = load float*, float** %co.addr, align 8, !dbg !5660
  %cmp71 = icmp ne float* %75, null, !dbg !5662
  br i1 %cmp71, label %if.then73, label %if.end77, !dbg !5663

if.then73:                                        ; preds = %if.end70
  %76 = load %struct.CCGElem**, %struct.CCGElem*** %grid_data, align 8, !dbg !5664
  %77 = load i32, i32* %g_index, align 4, !dbg !5665
  %78 = load i32, i32* %S, align 4, !dbg !5666
  %add74 = add nsw i32 %77, %78, !dbg !5667
  %idxprom75 = sext i32 %add74 to i64, !dbg !5664
  %arrayidx76 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %76, i64 %idxprom75, !dbg !5664
  %79 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx76, align 8, !dbg !5664
  %80 = load float, float* %crn_x, align 4, !dbg !5668
  %81 = load float, float* %crn_y, align 4, !dbg !5669
  %82 = load float*, float** %co.addr, align 8, !dbg !5670
  call void @interp_bilinear_grid(%struct.CCGKey* %key, %struct.CCGElem* %79, float %80, float %81, i32 1, float* %82), !dbg !5671
  br label %if.end77, !dbg !5671

if.end77:                                         ; preds = %if.then73, %if.end70
  ret void, !dbg !5672
}

declare dso_local void @mul_v3_m3v3(float*, [3 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !5673 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5674, metadata !DIExpression()), !dbg !5675
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5676, metadata !DIExpression()), !dbg !5677
  %0 = load float*, float** %a.addr, align 8, !dbg !5678
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5678
  %1 = load float, float* %arrayidx, align 4, !dbg !5678
  %2 = load float*, float** %r.addr, align 8, !dbg !5679
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5679
  %3 = load float, float* %arrayidx1, align 4, !dbg !5680
  %add = fadd float %3, %1, !dbg !5680
  store float %add, float* %arrayidx1, align 4, !dbg !5680
  %4 = load float*, float** %a.addr, align 8, !dbg !5681
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5681
  %5 = load float, float* %arrayidx2, align 4, !dbg !5681
  %6 = load float*, float** %r.addr, align 8, !dbg !5682
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5682
  %7 = load float, float* %arrayidx3, align 4, !dbg !5683
  %add4 = fadd float %7, %5, !dbg !5683
  store float %add4, float* %arrayidx3, align 4, !dbg !5683
  %8 = load float*, float** %a.addr, align 8, !dbg !5684
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5684
  %9 = load float, float* %arrayidx5, align 4, !dbg !5684
  %10 = load float*, float** %r.addr, align 8, !dbg !5685
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5685
  %11 = load float, float* %arrayidx6, align 4, !dbg !5686
  %add7 = fadd float %11, %9, !dbg !5686
  store float %add7, float* %arrayidx6, align 4, !dbg !5686
  ret void, !dbg !5687
}

declare dso_local void @rgb_float_to_uchar(i8*, float*) #2

declare dso_local i32 @mdisp_rot_face_to_crn(i32, i32, float, float, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @DM_origindex_mface_mpoly(i32* %index_mf_to_mpoly, i32* %index_mp_to_orig, i32 %i) #0 !dbg !5688 {
entry:
  %index_mf_to_mpoly.addr = alloca i32*, align 8
  %index_mp_to_orig.addr = alloca i32*, align 8
  %i.addr = alloca i32, align 4
  %j = alloca i32, align 4
  store i32* %index_mf_to_mpoly, i32** %index_mf_to_mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index_mf_to_mpoly.addr, metadata !5691, metadata !DIExpression()), !dbg !5692
  store i32* %index_mp_to_orig, i32** %index_mp_to_orig.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index_mp_to_orig.addr, metadata !5693, metadata !DIExpression()), !dbg !5694
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !5695, metadata !DIExpression()), !dbg !5696
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5697, metadata !DIExpression()), !dbg !5698
  %0 = load i32*, i32** %index_mf_to_mpoly.addr, align 8, !dbg !5699
  %1 = load i32, i32* %i.addr, align 4, !dbg !5700
  %idxprom = sext i32 %1 to i64, !dbg !5699
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !5699
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5699
  store i32 %2, i32* %j, align 4, !dbg !5698
  %3 = load i32, i32* %j, align 4, !dbg !5701
  %cmp = icmp ne i32 %3, -1, !dbg !5702
  br i1 %cmp, label %cond.true, label %cond.false4, !dbg !5703

cond.true:                                        ; preds = %entry
  %4 = load i32*, i32** %index_mp_to_orig.addr, align 8, !dbg !5704
  %tobool = icmp ne i32* %4, null, !dbg !5704
  br i1 %tobool, label %cond.true1, label %cond.false, !dbg !5704

cond.true1:                                       ; preds = %cond.true
  %5 = load i32*, i32** %index_mp_to_orig.addr, align 8, !dbg !5705
  %6 = load i32, i32* %j, align 4, !dbg !5706
  %idxprom2 = sext i32 %6 to i64, !dbg !5705
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 %idxprom2, !dbg !5705
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !5705
  br label %cond.end, !dbg !5704

cond.false:                                       ; preds = %cond.true
  %8 = load i32, i32* %j, align 4, !dbg !5707
  br label %cond.end, !dbg !5704

cond.end:                                         ; preds = %cond.false, %cond.true1
  %cond = phi i32 [ %7, %cond.true1 ], [ %8, %cond.false ], !dbg !5704
  br label %cond.end5, !dbg !5703

cond.false4:                                      ; preds = %entry
  br label %cond.end5, !dbg !5703

cond.end5:                                        ; preds = %cond.false4, %cond.end
  %cond6 = phi i32 [ %cond, %cond.end ], [ -1, %cond.false4 ], !dbg !5703
  ret i32 %cond6, !dbg !5708
}

; Function Attrs: noinline nounwind uwtable
define internal void @interp_bilinear_grid(%struct.CCGKey* %key, %struct.CCGElem* %grid, float %crn_x, float %crn_y, i32 %mode, float* %res) #0 !dbg !5709 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %grid.addr = alloca %struct.CCGElem*, align 8
  %crn_x.addr = alloca float, align 4
  %crn_y.addr = alloca float, align 4
  %mode.addr = alloca i32, align 4
  %res.addr = alloca float*, align 8
  %x0 = alloca i32, align 4
  %x1 = alloca i32, align 4
  %y0 = alloca i32, align 4
  %y1 = alloca i32, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  %data = alloca [4 x [3 x float]], align 16
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !5713, metadata !DIExpression()), !dbg !5714
  store %struct.CCGElem* %grid, %struct.CCGElem** %grid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %grid.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  store float %crn_x, float* %crn_x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %crn_x.addr, metadata !5717, metadata !DIExpression()), !dbg !5718
  store float %crn_y, float* %crn_y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %crn_y.addr, metadata !5719, metadata !DIExpression()), !dbg !5720
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5721, metadata !DIExpression()), !dbg !5722
  store float* %res, float** %res.addr, align 8
  call void @llvm.dbg.declare(metadata float** %res.addr, metadata !5723, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.declare(metadata i32* %x0, metadata !5725, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.declare(metadata i32* %x1, metadata !5727, metadata !DIExpression()), !dbg !5728
  call void @llvm.dbg.declare(metadata i32* %y0, metadata !5729, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.declare(metadata i32* %y1, metadata !5731, metadata !DIExpression()), !dbg !5732
  call void @llvm.dbg.declare(metadata float* %u, metadata !5733, metadata !DIExpression()), !dbg !5734
  call void @llvm.dbg.declare(metadata float* %v, metadata !5735, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %data, metadata !5737, metadata !DIExpression()), !dbg !5740
  %0 = load float, float* %crn_x.addr, align 4, !dbg !5741
  %conv = fptosi float %0 to i32, !dbg !5742
  store i32 %conv, i32* %x0, align 4, !dbg !5743
  %1 = load i32, i32* %x0, align 4, !dbg !5744
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5745
  %grid_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 2, !dbg !5746
  %3 = load i32, i32* %grid_size, align 4, !dbg !5746
  %sub = sub nsw i32 %3, 1, !dbg !5747
  %cmp = icmp sge i32 %1, %sub, !dbg !5748
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5744

cond.true:                                        ; preds = %entry
  %4 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5749
  %grid_size2 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %4, i32 0, i32 2, !dbg !5750
  %5 = load i32, i32* %grid_size2, align 4, !dbg !5750
  %sub3 = sub nsw i32 %5, 1, !dbg !5751
  br label %cond.end, !dbg !5744

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %x0, align 4, !dbg !5752
  %add = add nsw i32 %6, 1, !dbg !5753
  br label %cond.end, !dbg !5744

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub3, %cond.true ], [ %add, %cond.false ], !dbg !5744
  store i32 %cond, i32* %x1, align 4, !dbg !5754
  %7 = load float, float* %crn_y.addr, align 4, !dbg !5755
  %conv4 = fptosi float %7 to i32, !dbg !5756
  store i32 %conv4, i32* %y0, align 4, !dbg !5757
  %8 = load i32, i32* %y0, align 4, !dbg !5758
  %9 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5759
  %grid_size5 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %9, i32 0, i32 2, !dbg !5760
  %10 = load i32, i32* %grid_size5, align 4, !dbg !5760
  %sub6 = sub nsw i32 %10, 1, !dbg !5761
  %cmp7 = icmp sge i32 %8, %sub6, !dbg !5762
  br i1 %cmp7, label %cond.true9, label %cond.false12, !dbg !5758

cond.true9:                                       ; preds = %cond.end
  %11 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5763
  %grid_size10 = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %11, i32 0, i32 2, !dbg !5764
  %12 = load i32, i32* %grid_size10, align 4, !dbg !5764
  %sub11 = sub nsw i32 %12, 1, !dbg !5765
  br label %cond.end14, !dbg !5758

cond.false12:                                     ; preds = %cond.end
  %13 = load i32, i32* %y0, align 4, !dbg !5766
  %add13 = add nsw i32 %13, 1, !dbg !5767
  br label %cond.end14, !dbg !5758

cond.end14:                                       ; preds = %cond.false12, %cond.true9
  %cond15 = phi i32 [ %sub11, %cond.true9 ], [ %add13, %cond.false12 ], !dbg !5758
  store i32 %cond15, i32* %y1, align 4, !dbg !5768
  %14 = load float, float* %crn_x.addr, align 4, !dbg !5769
  %15 = load i32, i32* %x0, align 4, !dbg !5770
  %conv16 = sitofp i32 %15 to float, !dbg !5770
  %sub17 = fsub float %14, %conv16, !dbg !5771
  store float %sub17, float* %u, align 4, !dbg !5772
  %16 = load float, float* %crn_y.addr, align 4, !dbg !5773
  %17 = load i32, i32* %y0, align 4, !dbg !5774
  %conv18 = sitofp i32 %17 to float, !dbg !5774
  %sub19 = fsub float %16, %conv18, !dbg !5775
  store float %sub19, float* %v, align 4, !dbg !5776
  %18 = load i32, i32* %mode.addr, align 4, !dbg !5777
  %cmp20 = icmp eq i32 %18, 0, !dbg !5779
  br i1 %cmp20, label %if.then, label %if.else, !dbg !5780

if.then:                                          ; preds = %cond.end14
  %arrayidx = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 0, !dbg !5781
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5781
  %19 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5783
  %20 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !5784
  %21 = load i32, i32* %x0, align 4, !dbg !5785
  %22 = load i32, i32* %y0, align 4, !dbg !5786
  %call = call float* @CCG_grid_elem_no(%struct.CCGKey* %19, %struct.CCGElem* %20, i32 %21, i32 %22), !dbg !5787
  call void @copy_v3_v3(float* %arraydecay, float* %call), !dbg !5788
  %arrayidx22 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 1, !dbg !5789
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 0, !dbg !5789
  %23 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5790
  %24 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !5791
  %25 = load i32, i32* %x1, align 4, !dbg !5792
  %26 = load i32, i32* %y0, align 4, !dbg !5793
  %call24 = call float* @CCG_grid_elem_no(%struct.CCGKey* %23, %struct.CCGElem* %24, i32 %25, i32 %26), !dbg !5794
  call void @copy_v3_v3(float* %arraydecay23, float* %call24), !dbg !5795
  %arrayidx25 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 2, !dbg !5796
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx25, i64 0, i64 0, !dbg !5796
  %27 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5797
  %28 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !5798
  %29 = load i32, i32* %x1, align 4, !dbg !5799
  %30 = load i32, i32* %y1, align 4, !dbg !5800
  %call27 = call float* @CCG_grid_elem_no(%struct.CCGKey* %27, %struct.CCGElem* %28, i32 %29, i32 %30), !dbg !5801
  call void @copy_v3_v3(float* %arraydecay26, float* %call27), !dbg !5802
  %arrayidx28 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 3, !dbg !5803
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx28, i64 0, i64 0, !dbg !5803
  %31 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5804
  %32 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !5805
  %33 = load i32, i32* %x0, align 4, !dbg !5806
  %34 = load i32, i32* %y1, align 4, !dbg !5807
  %call30 = call float* @CCG_grid_elem_no(%struct.CCGKey* %31, %struct.CCGElem* %32, i32 %33, i32 %34), !dbg !5808
  call void @copy_v3_v3(float* %arraydecay29, float* %call30), !dbg !5809
  br label %if.end, !dbg !5810

if.else:                                          ; preds = %cond.end14
  %arrayidx31 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 0, !dbg !5811
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx31, i64 0, i64 0, !dbg !5811
  %35 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5813
  %36 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !5814
  %37 = load i32, i32* %x0, align 4, !dbg !5815
  %38 = load i32, i32* %y0, align 4, !dbg !5816
  %call33 = call float* @CCG_grid_elem_co(%struct.CCGKey* %35, %struct.CCGElem* %36, i32 %37, i32 %38), !dbg !5817
  call void @copy_v3_v3(float* %arraydecay32, float* %call33), !dbg !5818
  %arrayidx34 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 1, !dbg !5819
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx34, i64 0, i64 0, !dbg !5819
  %39 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5820
  %40 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !5821
  %41 = load i32, i32* %x1, align 4, !dbg !5822
  %42 = load i32, i32* %y0, align 4, !dbg !5823
  %call36 = call float* @CCG_grid_elem_co(%struct.CCGKey* %39, %struct.CCGElem* %40, i32 %41, i32 %42), !dbg !5824
  call void @copy_v3_v3(float* %arraydecay35, float* %call36), !dbg !5825
  %arrayidx37 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 2, !dbg !5826
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx37, i64 0, i64 0, !dbg !5826
  %43 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5827
  %44 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !5828
  %45 = load i32, i32* %x1, align 4, !dbg !5829
  %46 = load i32, i32* %y1, align 4, !dbg !5830
  %call39 = call float* @CCG_grid_elem_co(%struct.CCGKey* %43, %struct.CCGElem* %44, i32 %45, i32 %46), !dbg !5831
  call void @copy_v3_v3(float* %arraydecay38, float* %call39), !dbg !5832
  %arrayidx40 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 3, !dbg !5833
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx40, i64 0, i64 0, !dbg !5833
  %47 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5834
  %48 = load %struct.CCGElem*, %struct.CCGElem** %grid.addr, align 8, !dbg !5835
  %49 = load i32, i32* %x0, align 4, !dbg !5836
  %50 = load i32, i32* %y1, align 4, !dbg !5837
  %call42 = call float* @CCG_grid_elem_co(%struct.CCGKey* %47, %struct.CCGElem* %48, i32 %49, i32 %50), !dbg !5838
  call void @copy_v3_v3(float* %arraydecay41, float* %call42), !dbg !5839
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay43 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 0, !dbg !5840
  %51 = load float, float* %u, align 4, !dbg !5841
  %52 = load float, float* %v, align 4, !dbg !5842
  %53 = load float*, float** %res.addr, align 8, !dbg !5843
  call void @interp_bilinear_quad_v3([3 x float]* %arraydecay43, float %51, float %52, float* %53), !dbg !5844
  ret void, !dbg !5845
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_grid_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %x, i32 %y) #0 !dbg !5846 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !5851, metadata !DIExpression()), !dbg !5852
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !5853, metadata !DIExpression()), !dbg !5854
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5855, metadata !DIExpression()), !dbg !5856
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !5857, metadata !DIExpression()), !dbg !5858
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5859
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5860
  %2 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !5861
  %3 = load i32, i32* %x.addr, align 4, !dbg !5862
  %4 = load i32, i32* %y.addr, align 4, !dbg !5863
  %call = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %1, %struct.CCGElem* %2, i32 %3, i32 %4), !dbg !5864
  %call1 = call float* @CCG_elem_no(%struct.CCGKey* %0, %struct.CCGElem* %call), !dbg !5865
  ret float* %call1, !dbg !5866
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %x, i32 %y) #0 !dbg !5867 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !5868, metadata !DIExpression()), !dbg !5869
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !5870, metadata !DIExpression()), !dbg !5871
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5872, metadata !DIExpression()), !dbg !5873
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !5874, metadata !DIExpression()), !dbg !5875
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5876
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5877
  %2 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !5878
  %3 = load i32, i32* %x.addr, align 4, !dbg !5879
  %4 = load i32, i32* %y.addr, align 4, !dbg !5880
  %call = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %1, %struct.CCGElem* %2, i32 %3, i32 %4), !dbg !5881
  %call1 = call float* @CCG_elem_co(%struct.CCGKey* %0, %struct.CCGElem* %call), !dbg !5882
  ret float* %call1, !dbg !5883
}

declare dso_local void @interp_bilinear_quad_v3([3 x float]*, float, float, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %elem) #0 !dbg !5884 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !5889, metadata !DIExpression()), !dbg !5890
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !5891
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !5892
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5893
  %normal_offset = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 5, !dbg !5894
  %3 = load i32, i32* %normal_offset, align 4, !dbg !5894
  %idx.ext = sext i32 %3 to i64, !dbg !5895
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !5895
  %4 = bitcast i8* %add.ptr to float*, !dbg !5896
  ret float* %4, !dbg !5897
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %x, i32 %y) #0 !dbg !5898 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !5901, metadata !DIExpression()), !dbg !5902
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !5903, metadata !DIExpression()), !dbg !5904
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !5905, metadata !DIExpression()), !dbg !5906
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !5907, metadata !DIExpression()), !dbg !5908
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5909
  %1 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !5910
  %2 = load i32, i32* %y.addr, align 4, !dbg !5911
  %3 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5912
  %grid_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %3, i32 0, i32 2, !dbg !5913
  %4 = load i32, i32* %grid_size, align 4, !dbg !5913
  %mul = mul nsw i32 %2, %4, !dbg !5914
  %5 = load i32, i32* %x.addr, align 4, !dbg !5915
  %add = add nsw i32 %mul, %5, !dbg !5916
  %call = call %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %0, %struct.CCGElem* %1, i32 %add), !dbg !5917
  ret %struct.CCGElem* %call, !dbg !5918
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %offset) #0 !dbg !5919 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !5922, metadata !DIExpression()), !dbg !5923
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !5924, metadata !DIExpression()), !dbg !5925
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5926, metadata !DIExpression()), !dbg !5927
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !5928
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !5929
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !5930
  %elem_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 1, !dbg !5931
  %3 = load i32, i32* %elem_size, align 4, !dbg !5931
  %4 = load i32, i32* %offset.addr, align 4, !dbg !5932
  %mul = mul nsw i32 %3, %4, !dbg !5933
  %idx.ext = sext i32 %mul to i64, !dbg !5934
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !5934
  %5 = bitcast i8* %add.ptr to %struct.CCGElem*, !dbg !5935
  ret %struct.CCGElem* %5, !dbg !5936
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_co(%struct.CCGKey* %UNUSED_key, %struct.CCGElem* %elem) #0 !dbg !5937 {
entry:
  %UNUSED_key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %UNUSED_key, %struct.CCGKey** %UNUSED_key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %UNUSED_key.addr, metadata !5938, metadata !DIExpression()), !dbg !5939
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !5940, metadata !DIExpression()), !dbg !5941
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !5942
  %1 = bitcast %struct.CCGElem* %0 to float*, !dbg !5943
  ret float* %1, !dbg !5944
}

; Function Attrs: noinline nounwind uwtable
define internal void @interp_bilinear_mface(%struct.DerivedMesh* %dm, %struct.MFace* %mface, float %u, float %v, i32 %mode, float* %res) #0 !dbg !5945 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mface.addr = alloca %struct.MFace*, align 8
  %u.addr = alloca float, align 4
  %v.addr = alloca float, align 4
  %mode.addr = alloca i32, align 4
  %res.addr = alloca float*, align 8
  %data = alloca [4 x [3 x float]], align 16
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5948, metadata !DIExpression()), !dbg !5949
  store %struct.MFace* %mface, %struct.MFace** %mface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface.addr, metadata !5950, metadata !DIExpression()), !dbg !5951
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !5952, metadata !DIExpression()), !dbg !5953
  store float %v, float* %v.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v.addr, metadata !5954, metadata !DIExpression()), !dbg !5955
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5956, metadata !DIExpression()), !dbg !5957
  store float* %res, float** %res.addr, align 8
  call void @llvm.dbg.declare(metadata float** %res.addr, metadata !5958, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %data, metadata !5960, metadata !DIExpression()), !dbg !5961
  %0 = load i32, i32* %mode.addr, align 4, !dbg !5962
  %cmp = icmp eq i32 %0, 0, !dbg !5964
  br i1 %cmp, label %if.then, label %if.else, !dbg !5965

if.then:                                          ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5966
  %getVertNo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 78, !dbg !5968
  %2 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertNo, align 8, !dbg !5968
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5969
  %4 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5970
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %4, i32 0, i32 0, !dbg !5971
  %5 = load i32, i32* %v1, align 4, !dbg !5971
  %arrayidx = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 0, !dbg !5972
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5972
  call void %2(%struct.DerivedMesh* %3, i32 %5, float* %arraydecay), !dbg !5966
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5973
  %getVertNo1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 78, !dbg !5974
  %7 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertNo1, align 8, !dbg !5974
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5975
  %9 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5976
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %9, i32 0, i32 1, !dbg !5977
  %10 = load i32, i32* %v2, align 4, !dbg !5977
  %arrayidx2 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 1, !dbg !5978
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx2, i64 0, i64 0, !dbg !5978
  call void %7(%struct.DerivedMesh* %8, i32 %10, float* %arraydecay3), !dbg !5973
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5979
  %getVertNo4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 78, !dbg !5980
  %12 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertNo4, align 8, !dbg !5980
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5981
  %14 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5982
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %14, i32 0, i32 2, !dbg !5983
  %15 = load i32, i32* %v3, align 4, !dbg !5983
  %arrayidx5 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 2, !dbg !5984
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !5984
  call void %12(%struct.DerivedMesh* %13, i32 %15, float* %arraydecay6), !dbg !5979
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5985
  %getVertNo7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 78, !dbg !5986
  %17 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertNo7, align 8, !dbg !5986
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5987
  %19 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5988
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i32 0, i32 3, !dbg !5989
  %20 = load i32, i32* %v4, align 4, !dbg !5989
  %arrayidx8 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 3, !dbg !5990
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !5990
  call void %17(%struct.DerivedMesh* %18, i32 %20, float* %arraydecay9), !dbg !5985
  br label %if.end, !dbg !5991

if.else:                                          ; preds = %entry
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5992
  %getVertCo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 76, !dbg !5994
  %22 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo, align 8, !dbg !5994
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5995
  %24 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !5996
  %v110 = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i32 0, i32 0, !dbg !5997
  %25 = load i32, i32* %v110, align 4, !dbg !5997
  %arrayidx11 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 0, !dbg !5998
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !5998
  call void %22(%struct.DerivedMesh* %23, i32 %25, float* %arraydecay12), !dbg !5992
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5999
  %getVertCo13 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 76, !dbg !6000
  %27 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo13, align 8, !dbg !6000
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6001
  %29 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !6002
  %v214 = getelementptr inbounds %struct.MFace, %struct.MFace* %29, i32 0, i32 1, !dbg !6003
  %30 = load i32, i32* %v214, align 4, !dbg !6003
  %arrayidx15 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 1, !dbg !6004
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !6004
  call void %27(%struct.DerivedMesh* %28, i32 %30, float* %arraydecay16), !dbg !5999
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6005
  %getVertCo17 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %31, i32 0, i32 76, !dbg !6006
  %32 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo17, align 8, !dbg !6006
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6007
  %34 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !6008
  %v318 = getelementptr inbounds %struct.MFace, %struct.MFace* %34, i32 0, i32 2, !dbg !6009
  %35 = load i32, i32* %v318, align 4, !dbg !6009
  %arrayidx19 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 2, !dbg !6010
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 0, !dbg !6010
  call void %32(%struct.DerivedMesh* %33, i32 %35, float* %arraydecay20), !dbg !6005
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6011
  %getVertCo21 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %36, i32 0, i32 76, !dbg !6012
  %37 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo21, align 8, !dbg !6012
  %38 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6013
  %39 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !6014
  %v422 = getelementptr inbounds %struct.MFace, %struct.MFace* %39, i32 0, i32 3, !dbg !6015
  %40 = load i32, i32* %v422, align 4, !dbg !6015
  %arrayidx23 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 3, !dbg !6016
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx23, i64 0, i64 0, !dbg !6016
  call void %37(%struct.DerivedMesh* %38, i32 %40, float* %arraydecay24), !dbg !6011
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay25 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %data, i64 0, i64 0, !dbg !6017
  %41 = load float, float* %u.addr, align 4, !dbg !6018
  %42 = load float, float* %v.addr, align 4, !dbg !6019
  %43 = load float*, float** %res.addr, align 8, !dbg !6020
  call void @interp_bilinear_quad_v3([3 x float]* %arraydecay25, float %41, float %42, float* %43), !dbg !6021
  ret void, !dbg !6022
}

; Function Attrs: noinline nounwind uwtable
define internal void @interp_barycentric_mface(%struct.DerivedMesh* %dm, %struct.MFace* %mface, float %u, float %v, i32 %mode, float* %res) #0 !dbg !6023 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mface.addr = alloca %struct.MFace*, align 8
  %u.addr = alloca float, align 4
  %v.addr = alloca float, align 4
  %mode.addr = alloca i32, align 4
  %res.addr = alloca float*, align 8
  %data = alloca [3 x [3 x float]], align 16
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6024, metadata !DIExpression()), !dbg !6025
  store %struct.MFace* %mface, %struct.MFace** %mface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface.addr, metadata !6026, metadata !DIExpression()), !dbg !6027
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  store float %v, float* %v.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v.addr, metadata !6030, metadata !DIExpression()), !dbg !6031
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6032, metadata !DIExpression()), !dbg !6033
  store float* %res, float** %res.addr, align 8
  call void @llvm.dbg.declare(metadata float** %res.addr, metadata !6034, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %data, metadata !6036, metadata !DIExpression()), !dbg !6037
  %0 = load i32, i32* %mode.addr, align 4, !dbg !6038
  %cmp = icmp eq i32 %0, 0, !dbg !6040
  br i1 %cmp, label %if.then, label %if.else, !dbg !6041

if.then:                                          ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6042
  %getVertNo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 78, !dbg !6044
  %2 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertNo, align 8, !dbg !6044
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6045
  %4 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !6046
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %4, i32 0, i32 0, !dbg !6047
  %5 = load i32, i32* %v1, align 4, !dbg !6047
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %data, i64 0, i64 0, !dbg !6048
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6048
  call void %2(%struct.DerivedMesh* %3, i32 %5, float* %arraydecay), !dbg !6042
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6049
  %getVertNo1 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 78, !dbg !6050
  %7 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertNo1, align 8, !dbg !6050
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6051
  %9 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !6052
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %9, i32 0, i32 1, !dbg !6053
  %10 = load i32, i32* %v2, align 4, !dbg !6053
  %arrayidx2 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %data, i64 0, i64 1, !dbg !6054
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx2, i64 0, i64 0, !dbg !6054
  call void %7(%struct.DerivedMesh* %8, i32 %10, float* %arraydecay3), !dbg !6049
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6055
  %getVertNo4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 78, !dbg !6056
  %12 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertNo4, align 8, !dbg !6056
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6057
  %14 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !6058
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %14, i32 0, i32 2, !dbg !6059
  %15 = load i32, i32* %v3, align 4, !dbg !6059
  %arrayidx5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %data, i64 0, i64 2, !dbg !6060
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !6060
  call void %12(%struct.DerivedMesh* %13, i32 %15, float* %arraydecay6), !dbg !6055
  br label %if.end, !dbg !6061

if.else:                                          ; preds = %entry
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6062
  %getVertCo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 76, !dbg !6064
  %17 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo, align 8, !dbg !6064
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6065
  %19 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !6066
  %v17 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i32 0, i32 0, !dbg !6067
  %20 = load i32, i32* %v17, align 4, !dbg !6067
  %arrayidx8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %data, i64 0, i64 0, !dbg !6068
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !6068
  call void %17(%struct.DerivedMesh* %18, i32 %20, float* %arraydecay9), !dbg !6062
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6069
  %getVertCo10 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 76, !dbg !6070
  %22 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo10, align 8, !dbg !6070
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6071
  %24 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !6072
  %v211 = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i32 0, i32 1, !dbg !6073
  %25 = load i32, i32* %v211, align 4, !dbg !6073
  %arrayidx12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %data, i64 0, i64 1, !dbg !6074
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !6074
  call void %22(%struct.DerivedMesh* %23, i32 %25, float* %arraydecay13), !dbg !6069
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6075
  %getVertCo14 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 76, !dbg !6076
  %27 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo14, align 8, !dbg !6076
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6077
  %29 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !6078
  %v315 = getelementptr inbounds %struct.MFace, %struct.MFace* %29, i32 0, i32 2, !dbg !6079
  %30 = load i32, i32* %v315, align 4, !dbg !6079
  %arrayidx16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %data, i64 0, i64 2, !dbg !6080
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !6080
  call void %27(%struct.DerivedMesh* %28, i32 %30, float* %arraydecay17), !dbg !6075
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay18 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %data, i64 0, i64 0, !dbg !6081
  %31 = load float, float* %u.addr, align 4, !dbg !6082
  %32 = load float, float* %v.addr, align 4, !dbg !6083
  %33 = load float*, float** %res.addr, align 8, !dbg !6084
  call void @interp_barycentric_tri_v3([3 x float]* %arraydecay18, float %31, float %32, float* %33), !dbg !6085
  ret void, !dbg !6086
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !6087 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6088, metadata !DIExpression()), !dbg !6089
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6090, metadata !DIExpression()), !dbg !6091
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6092, metadata !DIExpression()), !dbg !6093
  %0 = load float*, float** %a.addr, align 8, !dbg !6094
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6094
  %1 = load float, float* %arrayidx, align 4, !dbg !6094
  %2 = load float*, float** %b.addr, align 8, !dbg !6095
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6095
  %3 = load float, float* %arrayidx1, align 4, !dbg !6095
  %sub = fsub float %1, %3, !dbg !6096
  %4 = load float*, float** %r.addr, align 8, !dbg !6097
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !6097
  store float %sub, float* %arrayidx2, align 4, !dbg !6098
  %5 = load float*, float** %a.addr, align 8, !dbg !6099
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6099
  %6 = load float, float* %arrayidx3, align 4, !dbg !6099
  %7 = load float*, float** %b.addr, align 8, !dbg !6100
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6100
  %8 = load float, float* %arrayidx4, align 4, !dbg !6100
  %sub5 = fsub float %6, %8, !dbg !6101
  %9 = load float*, float** %r.addr, align 8, !dbg !6102
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !6102
  store float %sub5, float* %arrayidx6, align 4, !dbg !6103
  %10 = load float*, float** %a.addr, align 8, !dbg !6104
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !6104
  %11 = load float, float* %arrayidx7, align 4, !dbg !6104
  %12 = load float*, float** %b.addr, align 8, !dbg !6105
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !6105
  %13 = load float, float* %arrayidx8, align 4, !dbg !6105
  %sub9 = fsub float %11, %13, !dbg !6106
  %14 = load float*, float** %r.addr, align 8, !dbg !6107
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !6107
  store float %sub9, float* %arrayidx10, align 4, !dbg !6108
  ret void, !dbg !6109
}

declare dso_local void @interp_barycentric_tri_v3([3 x float]*, float, float, float*) #2

declare dso_local %struct.DerivedMesh* @subsurf_make_derived_from_derived(%struct.DerivedMesh*, %struct.SubsurfModifierData*, [3 x float]*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @build_coordinate_frame(float* %axisX, float* %axisY, float* %axisZ) #0 !dbg !6110 {
entry:
  %axisX.addr = alloca float*, align 8
  %axisY.addr = alloca float*, align 8
  %axisZ.addr = alloca float*, align 8
  %faX = alloca float, align 4
  %faY = alloca float, align 4
  %faZ = alloca float, align 4
  %len = alloca float, align 4
  %len17 = alloca float, align 4
  %len35 = alloca float, align 4
  store float* %axisX, float** %axisX.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axisX.addr, metadata !6113, metadata !DIExpression()), !dbg !6114
  store float* %axisY, float** %axisY.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axisY.addr, metadata !6115, metadata !DIExpression()), !dbg !6116
  store float* %axisZ, float** %axisZ.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axisZ.addr, metadata !6117, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.declare(metadata float* %faX, metadata !6119, metadata !DIExpression()), !dbg !6120
  %0 = load float*, float** %axisZ.addr, align 8, !dbg !6121
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6121
  %1 = load float, float* %arrayidx, align 4, !dbg !6121
  %2 = call float @llvm.fabs.f32(float %1), !dbg !6122
  store float %2, float* %faX, align 4, !dbg !6120
  call void @llvm.dbg.declare(metadata float* %faY, metadata !6123, metadata !DIExpression()), !dbg !6124
  %3 = load float*, float** %axisZ.addr, align 8, !dbg !6125
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !6125
  %4 = load float, float* %arrayidx1, align 4, !dbg !6125
  %5 = call float @llvm.fabs.f32(float %4), !dbg !6126
  store float %5, float* %faY, align 4, !dbg !6124
  call void @llvm.dbg.declare(metadata float* %faZ, metadata !6127, metadata !DIExpression()), !dbg !6128
  %6 = load float*, float** %axisZ.addr, align 8, !dbg !6129
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 2, !dbg !6129
  %7 = load float, float* %arrayidx2, align 4, !dbg !6129
  %8 = call float @llvm.fabs.f32(float %7), !dbg !6130
  store float %8, float* %faZ, align 4, !dbg !6128
  %9 = load float, float* %faX, align 4, !dbg !6131
  %10 = load float, float* %faY, align 4, !dbg !6133
  %cmp = fcmp ole float %9, %10, !dbg !6134
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6135

land.lhs.true:                                    ; preds = %entry
  %11 = load float, float* %faX, align 4, !dbg !6136
  %12 = load float, float* %faZ, align 4, !dbg !6137
  %cmp3 = fcmp ole float %11, %12, !dbg !6138
  br i1 %cmp3, label %if.then, label %if.else, !dbg !6139

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %len, metadata !6140, metadata !DIExpression()), !dbg !6142
  %13 = load float*, float** %axisZ.addr, align 8, !dbg !6143
  %arrayidx4 = getelementptr inbounds float, float* %13, i64 1, !dbg !6143
  %14 = load float, float* %arrayidx4, align 4, !dbg !6143
  %15 = load float*, float** %axisZ.addr, align 8, !dbg !6144
  %arrayidx5 = getelementptr inbounds float, float* %15, i64 1, !dbg !6144
  %16 = load float, float* %arrayidx5, align 4, !dbg !6144
  %mul = fmul float %14, %16, !dbg !6145
  %17 = load float*, float** %axisZ.addr, align 8, !dbg !6146
  %arrayidx6 = getelementptr inbounds float, float* %17, i64 2, !dbg !6146
  %18 = load float, float* %arrayidx6, align 4, !dbg !6146
  %19 = load float*, float** %axisZ.addr, align 8, !dbg !6147
  %arrayidx7 = getelementptr inbounds float, float* %19, i64 2, !dbg !6147
  %20 = load float, float* %arrayidx7, align 4, !dbg !6147
  %mul8 = fmul float %18, %20, !dbg !6148
  %add = fadd float %mul, %mul8, !dbg !6149
  %call = call float @sqrtf(float %add) #5, !dbg !6150
  store float %call, float* %len, align 4, !dbg !6142
  %21 = load float*, float** %axisY.addr, align 8, !dbg !6151
  %arrayidx9 = getelementptr inbounds float, float* %21, i64 0, !dbg !6151
  store float 0.000000e+00, float* %arrayidx9, align 4, !dbg !6152
  %22 = load float*, float** %axisZ.addr, align 8, !dbg !6153
  %arrayidx10 = getelementptr inbounds float, float* %22, i64 2, !dbg !6153
  %23 = load float, float* %arrayidx10, align 4, !dbg !6153
  %24 = load float, float* %len, align 4, !dbg !6154
  %div = fdiv float %23, %24, !dbg !6155
  %25 = load float*, float** %axisY.addr, align 8, !dbg !6156
  %arrayidx11 = getelementptr inbounds float, float* %25, i64 1, !dbg !6156
  store float %div, float* %arrayidx11, align 4, !dbg !6157
  %26 = load float*, float** %axisZ.addr, align 8, !dbg !6158
  %arrayidx12 = getelementptr inbounds float, float* %26, i64 1, !dbg !6158
  %27 = load float, float* %arrayidx12, align 4, !dbg !6158
  %fneg = fneg float %27, !dbg !6159
  %28 = load float, float* %len, align 4, !dbg !6160
  %div13 = fdiv float %fneg, %28, !dbg !6161
  %29 = load float*, float** %axisY.addr, align 8, !dbg !6162
  %arrayidx14 = getelementptr inbounds float, float* %29, i64 2, !dbg !6162
  store float %div13, float* %arrayidx14, align 4, !dbg !6163
  %30 = load float*, float** %axisX.addr, align 8, !dbg !6164
  %31 = load float*, float** %axisY.addr, align 8, !dbg !6165
  %32 = load float*, float** %axisZ.addr, align 8, !dbg !6166
  call void @cross_v3_v3v3(float* %30, float* %31, float* %32), !dbg !6167
  br label %if.end52, !dbg !6168

if.else:                                          ; preds = %land.lhs.true, %entry
  %33 = load float, float* %faY, align 4, !dbg !6169
  %34 = load float, float* %faZ, align 4, !dbg !6171
  %cmp15 = fcmp ole float %33, %34, !dbg !6172
  br i1 %cmp15, label %if.then16, label %if.else34, !dbg !6173

if.then16:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %len17, metadata !6174, metadata !DIExpression()), !dbg !6176
  %35 = load float*, float** %axisZ.addr, align 8, !dbg !6177
  %arrayidx18 = getelementptr inbounds float, float* %35, i64 0, !dbg !6177
  %36 = load float, float* %arrayidx18, align 4, !dbg !6177
  %37 = load float*, float** %axisZ.addr, align 8, !dbg !6178
  %arrayidx19 = getelementptr inbounds float, float* %37, i64 0, !dbg !6178
  %38 = load float, float* %arrayidx19, align 4, !dbg !6178
  %mul20 = fmul float %36, %38, !dbg !6179
  %39 = load float*, float** %axisZ.addr, align 8, !dbg !6180
  %arrayidx21 = getelementptr inbounds float, float* %39, i64 2, !dbg !6180
  %40 = load float, float* %arrayidx21, align 4, !dbg !6180
  %41 = load float*, float** %axisZ.addr, align 8, !dbg !6181
  %arrayidx22 = getelementptr inbounds float, float* %41, i64 2, !dbg !6181
  %42 = load float, float* %arrayidx22, align 4, !dbg !6181
  %mul23 = fmul float %40, %42, !dbg !6182
  %add24 = fadd float %mul20, %mul23, !dbg !6183
  %call25 = call float @sqrtf(float %add24) #5, !dbg !6184
  store float %call25, float* %len17, align 4, !dbg !6176
  %43 = load float*, float** %axisZ.addr, align 8, !dbg !6185
  %arrayidx26 = getelementptr inbounds float, float* %43, i64 2, !dbg !6185
  %44 = load float, float* %arrayidx26, align 4, !dbg !6185
  %45 = load float, float* %len17, align 4, !dbg !6186
  %div27 = fdiv float %44, %45, !dbg !6187
  %46 = load float*, float** %axisX.addr, align 8, !dbg !6188
  %arrayidx28 = getelementptr inbounds float, float* %46, i64 0, !dbg !6188
  store float %div27, float* %arrayidx28, align 4, !dbg !6189
  %47 = load float*, float** %axisX.addr, align 8, !dbg !6190
  %arrayidx29 = getelementptr inbounds float, float* %47, i64 1, !dbg !6190
  store float 0.000000e+00, float* %arrayidx29, align 4, !dbg !6191
  %48 = load float*, float** %axisZ.addr, align 8, !dbg !6192
  %arrayidx30 = getelementptr inbounds float, float* %48, i64 0, !dbg !6192
  %49 = load float, float* %arrayidx30, align 4, !dbg !6192
  %fneg31 = fneg float %49, !dbg !6193
  %50 = load float, float* %len17, align 4, !dbg !6194
  %div32 = fdiv float %fneg31, %50, !dbg !6195
  %51 = load float*, float** %axisX.addr, align 8, !dbg !6196
  %arrayidx33 = getelementptr inbounds float, float* %51, i64 2, !dbg !6196
  store float %div32, float* %arrayidx33, align 4, !dbg !6197
  %52 = load float*, float** %axisY.addr, align 8, !dbg !6198
  %53 = load float*, float** %axisZ.addr, align 8, !dbg !6199
  %54 = load float*, float** %axisX.addr, align 8, !dbg !6200
  call void @cross_v3_v3v3(float* %52, float* %53, float* %54), !dbg !6201
  br label %if.end, !dbg !6202

if.else34:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %len35, metadata !6203, metadata !DIExpression()), !dbg !6205
  %55 = load float*, float** %axisZ.addr, align 8, !dbg !6206
  %arrayidx36 = getelementptr inbounds float, float* %55, i64 0, !dbg !6206
  %56 = load float, float* %arrayidx36, align 4, !dbg !6206
  %57 = load float*, float** %axisZ.addr, align 8, !dbg !6207
  %arrayidx37 = getelementptr inbounds float, float* %57, i64 0, !dbg !6207
  %58 = load float, float* %arrayidx37, align 4, !dbg !6207
  %mul38 = fmul float %56, %58, !dbg !6208
  %59 = load float*, float** %axisZ.addr, align 8, !dbg !6209
  %arrayidx39 = getelementptr inbounds float, float* %59, i64 1, !dbg !6209
  %60 = load float, float* %arrayidx39, align 4, !dbg !6209
  %61 = load float*, float** %axisZ.addr, align 8, !dbg !6210
  %arrayidx40 = getelementptr inbounds float, float* %61, i64 1, !dbg !6210
  %62 = load float, float* %arrayidx40, align 4, !dbg !6210
  %mul41 = fmul float %60, %62, !dbg !6211
  %add42 = fadd float %mul38, %mul41, !dbg !6212
  %call43 = call float @sqrtf(float %add42) #5, !dbg !6213
  store float %call43, float* %len35, align 4, !dbg !6205
  %63 = load float*, float** %axisZ.addr, align 8, !dbg !6214
  %arrayidx44 = getelementptr inbounds float, float* %63, i64 1, !dbg !6214
  %64 = load float, float* %arrayidx44, align 4, !dbg !6214
  %65 = load float, float* %len35, align 4, !dbg !6215
  %div45 = fdiv float %64, %65, !dbg !6216
  %66 = load float*, float** %axisX.addr, align 8, !dbg !6217
  %arrayidx46 = getelementptr inbounds float, float* %66, i64 0, !dbg !6217
  store float %div45, float* %arrayidx46, align 4, !dbg !6218
  %67 = load float*, float** %axisZ.addr, align 8, !dbg !6219
  %arrayidx47 = getelementptr inbounds float, float* %67, i64 0, !dbg !6219
  %68 = load float, float* %arrayidx47, align 4, !dbg !6219
  %fneg48 = fneg float %68, !dbg !6220
  %69 = load float, float* %len35, align 4, !dbg !6221
  %div49 = fdiv float %fneg48, %69, !dbg !6222
  %70 = load float*, float** %axisX.addr, align 8, !dbg !6223
  %arrayidx50 = getelementptr inbounds float, float* %70, i64 1, !dbg !6223
  store float %div49, float* %arrayidx50, align 4, !dbg !6224
  %71 = load float*, float** %axisX.addr, align 8, !dbg !6225
  %arrayidx51 = getelementptr inbounds float, float* %71, i64 2, !dbg !6225
  store float 0.000000e+00, float* %arrayidx51, align 4, !dbg !6226
  %72 = load float*, float** %axisY.addr, align 8, !dbg !6227
  %73 = load float*, float** %axisZ.addr, align 8, !dbg !6228
  %74 = load float*, float** %axisX.addr, align 8, !dbg !6229
  call void @cross_v3_v3v3(float* %72, float* %73, float* %74), !dbg !6230
  br label %if.end

if.end:                                           ; preds = %if.else34, %if.then16
  br label %if.end52

if.end52:                                         ; preds = %if.end, %if.then
  ret void, !dbg !6231
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @get_ao_random2(i32 %i) #0 !dbg !6232 {
entry:
  %i.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !6235, metadata !DIExpression()), !dbg !6236
  %0 = load i32, i32* %i.addr, align 4, !dbg !6237
  %and = and i32 %0, 1023, !dbg !6238
  %idxprom = sext i32 %and to i64, !dbg !6239
  %arrayidx = getelementptr inbounds [1024 x i16], [1024 x i16]* @ao_random_table_2, i64 0, i64 %idxprom, !dbg !6239
  %1 = load i16, i16* %arrayidx, align 2, !dbg !6239
  ret i16 %1, !dbg !6240
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @get_ao_random1(i32 %i) #0 !dbg !6241 {
entry:
  %i.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !6242, metadata !DIExpression()), !dbg !6243
  %0 = load i32, i32* %i.addr, align 4, !dbg !6244
  %and = and i32 %0, 1023, !dbg !6245
  %idxprom = sext i32 %and to i64, !dbg !6246
  %arrayidx = getelementptr inbounds [1024 x i16], [1024 x i16]* @ao_random_table_1, i64 0, i64 %idxprom, !dbg !6246
  %1 = load i16, i16* %arrayidx, align 2, !dbg !6246
  ret i16 %1, !dbg !6247
}

; Function Attrs: nounwind
declare dso_local float @cosf(float) #4

; Function Attrs: nounwind
declare dso_local float @sinf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @trace_ao_ray(%struct.MAOBakeData* %ao_data, float* %ray_start, float* %ray_direction) #0 !dbg !6248 {
entry:
  %ao_data.addr = alloca %struct.MAOBakeData*, align 8
  %ray_start.addr = alloca float*, align 8
  %ray_direction.addr = alloca float*, align 8
  %isect = alloca %struct.Isect, align 8
  store %struct.MAOBakeData* %ao_data, %struct.MAOBakeData** %ao_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MAOBakeData** %ao_data.addr, metadata !6251, metadata !DIExpression()), !dbg !6252
  store float* %ray_start, float** %ray_start.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ray_start.addr, metadata !6253, metadata !DIExpression()), !dbg !6254
  store float* %ray_direction, float** %ray_direction.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ray_direction.addr, metadata !6255, metadata !DIExpression()), !dbg !6256
  call void @llvm.dbg.declare(metadata %struct.Isect* %isect, metadata !6257, metadata !DIExpression()), !dbg !6259
  %0 = bitcast %struct.Isect* %isect to i8*, !dbg !6259
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 176, i1 false), !dbg !6259
  %dist = getelementptr inbounds %struct.Isect, %struct.Isect* %isect, i32 0, i32 2, !dbg !6260
  store float 0x430C6BF520000000, float* %dist, align 8, !dbg !6261
  %start = getelementptr inbounds %struct.Isect, %struct.Isect* %isect, i32 0, i32 0, !dbg !6262
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %start, i64 0, i64 0, !dbg !6263
  %1 = load float*, float** %ray_start.addr, align 8, !dbg !6264
  call void @copy_v3_v3(float* %arraydecay, float* %1), !dbg !6265
  %dir = getelementptr inbounds %struct.Isect, %struct.Isect* %isect, i32 0, i32 1, !dbg !6266
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !6267
  %2 = load float*, float** %ray_direction.addr, align 8, !dbg !6268
  call void @copy_v3_v3(float* %arraydecay1, float* %2), !dbg !6269
  %lay = getelementptr inbounds %struct.Isect, %struct.Isect* %isect, i32 0, i32 8, !dbg !6270
  store i32 -1, i32* %lay, align 4, !dbg !6271
  %dir2 = getelementptr inbounds %struct.Isect, %struct.Isect* %isect, i32 0, i32 1, !dbg !6272
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %dir2, i64 0, i64 0, !dbg !6273
  %call = call float @normalize_v3(float* %arraydecay3), !dbg !6274
  %3 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data.addr, align 8, !dbg !6275
  %raytree = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %3, i32 0, i32 4, !dbg !6276
  %4 = load %struct.RayObject*, %struct.RayObject** %raytree, align 8, !dbg !6276
  %call4 = call i32 @RE_rayobject_raycast(%struct.RayObject* %4, %struct.Isect* %isect), !dbg !6277
  ret i32 %call4, !dbg !6278
}

declare dso_local i32 @RE_rayobject_raycast(%struct.RayObject*, %struct.Isect*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_ao_random() #0 !dbg !6279 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6282, metadata !DIExpression()), !dbg !6283
  store i32 0, i32* %i, align 4, !dbg !6284
  br label %for.cond, !dbg !6286

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6287
  %cmp = icmp slt i32 %0, 1024, !dbg !6289
  br i1 %cmp, label %for.body, label %for.end, !dbg !6290

for.body:                                         ; preds = %for.cond
  %call = call i32 @rand() #5, !dbg !6291
  %and = and i32 %call, 65535, !dbg !6293
  %conv = trunc i32 %and to i16, !dbg !6291
  %1 = load i32, i32* %i, align 4, !dbg !6294
  %idxprom = sext i32 %1 to i64, !dbg !6295
  %arrayidx = getelementptr inbounds [1024 x i16], [1024 x i16]* @ao_random_table_1, i64 0, i64 %idxprom, !dbg !6295
  store i16 %conv, i16* %arrayidx, align 2, !dbg !6296
  %call1 = call i32 @rand() #5, !dbg !6297
  %and2 = and i32 %call1, 65535, !dbg !6298
  %conv3 = trunc i32 %and2 to i16, !dbg !6297
  %2 = load i32, i32* %i, align 4, !dbg !6299
  %idxprom4 = sext i32 %2 to i64, !dbg !6300
  %arrayidx5 = getelementptr inbounds [1024 x i16], [1024 x i16]* @ao_random_table_2, i64 0, i64 %idxprom4, !dbg !6300
  store i16 %conv3, i16* %arrayidx5, align 2, !dbg !6301
  br label %for.inc, !dbg !6302

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !6303
  %inc = add nsw i32 %3, 1, !dbg !6303
  store i32 %inc, i32* %i, align 4, !dbg !6303
  br label %for.cond, !dbg !6304, !llvm.loop !6305

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6307
}

; Function Attrs: noinline nounwind uwtable
define internal void @create_ao_raytree(%struct.MultiresBakeRender* %bkr, %struct.MAOBakeData* %ao_data) #0 !dbg !6308 {
entry:
  %bkr.addr = alloca %struct.MultiresBakeRender*, align 8
  %ao_data.addr = alloca %struct.MAOBakeData*, align 8
  %hidm = alloca %struct.DerivedMesh*, align 8
  %raytree = alloca %struct.RayObject*, align 8
  %face = alloca %struct.RayFace*, align 8
  %grid_data = alloca %struct.CCGElem**, align 8
  %key = alloca %struct.CCGKey, align 4
  %num_grids = alloca i32, align 4
  %grid_size = alloca i32, align 4
  %num_faces = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %co = alloca [4 x [3 x float]], align 16
  store %struct.MultiresBakeRender* %bkr, %struct.MultiresBakeRender** %bkr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MultiresBakeRender** %bkr.addr, metadata !6311, metadata !DIExpression()), !dbg !6312
  store %struct.MAOBakeData* %ao_data, %struct.MAOBakeData** %ao_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MAOBakeData** %ao_data.addr, metadata !6313, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %hidm, metadata !6315, metadata !DIExpression()), !dbg !6316
  %0 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !6317
  %hires_dm = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %0, i32 0, i32 1, !dbg !6318
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hires_dm, align 8, !dbg !6318
  store %struct.DerivedMesh* %1, %struct.DerivedMesh** %hidm, align 8, !dbg !6316
  call void @llvm.dbg.declare(metadata %struct.RayObject** %raytree, metadata !6319, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.declare(metadata %struct.RayFace** %face, metadata !6321, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %grid_data, metadata !6323, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !6325, metadata !DIExpression()), !dbg !6326
  call void @llvm.dbg.declare(metadata i32* %num_grids, metadata !6327, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.declare(metadata i32* %grid_size, metadata !6329, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.declare(metadata i32* %num_faces, metadata !6331, metadata !DIExpression()), !dbg !6332
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6333, metadata !DIExpression()), !dbg !6334
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm, align 8, !dbg !6335
  %getNumGrids = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 63, !dbg !6336
  %3 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumGrids, align 8, !dbg !6336
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm, align 8, !dbg !6337
  %call = call i32 %3(%struct.DerivedMesh* %4), !dbg !6335
  store i32 %call, i32* %num_grids, align 4, !dbg !6338
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm, align 8, !dbg !6339
  %getGridSize = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 64, !dbg !6340
  %6 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getGridSize, align 8, !dbg !6340
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm, align 8, !dbg !6341
  %call1 = call i32 %6(%struct.DerivedMesh* %7), !dbg !6339
  store i32 %call1, i32* %grid_size, align 4, !dbg !6342
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm, align 8, !dbg !6343
  %getGridData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 65, !dbg !6344
  %9 = load %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData, align 8, !dbg !6344
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm, align 8, !dbg !6345
  %call2 = call %struct.CCGElem** %9(%struct.DerivedMesh* %10), !dbg !6343
  store %struct.CCGElem** %call2, %struct.CCGElem*** %grid_data, align 8, !dbg !6346
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm, align 8, !dbg !6347
  %getGridKey = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 68, !dbg !6348
  %12 = load void (%struct.DerivedMesh*, %struct.CCGKey*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey, align 8, !dbg !6348
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hidm, align 8, !dbg !6349
  call void %12(%struct.DerivedMesh* %13, %struct.CCGKey* %key), !dbg !6347
  %14 = load i32, i32* %num_grids, align 4, !dbg !6350
  %15 = load i32, i32* %grid_size, align 4, !dbg !6351
  %sub = sub nsw i32 %15, 1, !dbg !6352
  %mul = mul nsw i32 %14, %sub, !dbg !6353
  %16 = load i32, i32* %grid_size, align 4, !dbg !6354
  %sub3 = sub nsw i32 %16, 1, !dbg !6355
  %mul4 = mul nsw i32 %mul, %sub3, !dbg !6356
  store i32 %mul4, i32* %num_faces, align 4, !dbg !6357
  %17 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !6358
  %raytrace_structure = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %17, i32 0, i32 15, !dbg !6359
  %18 = load i32, i32* %raytrace_structure, align 8, !dbg !6359
  %19 = load i32, i32* %num_faces, align 4, !dbg !6360
  %20 = load %struct.MultiresBakeRender*, %struct.MultiresBakeRender** %bkr.addr, align 8, !dbg !6361
  %octree_resolution = getelementptr inbounds %struct.MultiresBakeRender, %struct.MultiresBakeRender* %20, i32 0, i32 16, !dbg !6362
  %21 = load i32, i32* %octree_resolution, align 4, !dbg !6362
  %call5 = call %struct.RayObject* @RE_rayobject_create(i32 %18, i32 %19, i32 %21), !dbg !6363
  %22 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data.addr, align 8, !dbg !6364
  %raytree6 = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %22, i32 0, i32 4, !dbg !6365
  store %struct.RayObject* %call5, %struct.RayObject** %raytree6, align 8, !dbg !6366
  store %struct.RayObject* %call5, %struct.RayObject** %raytree, align 8, !dbg !6367
  %23 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6368
  %24 = load i32, i32* %num_faces, align 4, !dbg !6369
  %conv = sext i32 %24 to i64, !dbg !6369
  %mul7 = mul i64 %conv, 80, !dbg !6370
  %call8 = call i8* %23(i64 %mul7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0)), !dbg !6368
  %25 = bitcast i8* %call8 to %struct.RayFace*, !dbg !6371
  %26 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data.addr, align 8, !dbg !6372
  %rayfaces = getelementptr inbounds %struct.MAOBakeData, %struct.MAOBakeData* %26, i32 0, i32 5, !dbg !6373
  store %struct.RayFace* %25, %struct.RayFace** %rayfaces, align 8, !dbg !6374
  store %struct.RayFace* %25, %struct.RayFace** %face, align 8, !dbg !6375
  store i32 0, i32* %i, align 4, !dbg !6376
  br label %for.cond, !dbg !6378

for.cond:                                         ; preds = %for.inc52, %entry
  %27 = load i32, i32* %i, align 4, !dbg !6379
  %28 = load i32, i32* %num_grids, align 4, !dbg !6381
  %cmp = icmp slt i32 %27, %28, !dbg !6382
  br i1 %cmp, label %for.body, label %for.end54, !dbg !6383

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6384, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6387, metadata !DIExpression()), !dbg !6388
  store i32 0, i32* %x, align 4, !dbg !6389
  br label %for.cond10, !dbg !6391

for.cond10:                                       ; preds = %for.inc49, %for.body
  %29 = load i32, i32* %x, align 4, !dbg !6392
  %30 = load i32, i32* %grid_size, align 4, !dbg !6394
  %sub11 = sub nsw i32 %30, 1, !dbg !6395
  %cmp12 = icmp slt i32 %29, %sub11, !dbg !6396
  br i1 %cmp12, label %for.body14, label %for.end51, !dbg !6397

for.body14:                                       ; preds = %for.cond10
  store i32 0, i32* %y, align 4, !dbg !6398
  br label %for.cond15, !dbg !6401

for.cond15:                                       ; preds = %for.inc, %for.body14
  %31 = load i32, i32* %y, align 4, !dbg !6402
  %32 = load i32, i32* %grid_size, align 4, !dbg !6404
  %sub16 = sub nsw i32 %32, 1, !dbg !6405
  %cmp17 = icmp slt i32 %31, %sub16, !dbg !6406
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !6407

for.body19:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %co, metadata !6408, metadata !DIExpression()), !dbg !6410
  %arrayidx = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co, i64 0, i64 0, !dbg !6411
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6411
  %33 = load %struct.CCGElem**, %struct.CCGElem*** %grid_data, align 8, !dbg !6412
  %34 = load i32, i32* %i, align 4, !dbg !6413
  %idxprom = sext i32 %34 to i64, !dbg !6412
  %arrayidx20 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %33, i64 %idxprom, !dbg !6412
  %35 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx20, align 8, !dbg !6412
  %36 = load i32, i32* %x, align 4, !dbg !6414
  %37 = load i32, i32* %y, align 4, !dbg !6415
  %call21 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %35, i32 %36, i32 %37), !dbg !6416
  call void @copy_v3_v3(float* %arraydecay, float* %call21), !dbg !6417
  %arrayidx22 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co, i64 0, i64 1, !dbg !6418
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 0, !dbg !6418
  %38 = load %struct.CCGElem**, %struct.CCGElem*** %grid_data, align 8, !dbg !6419
  %39 = load i32, i32* %i, align 4, !dbg !6420
  %idxprom24 = sext i32 %39 to i64, !dbg !6419
  %arrayidx25 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %38, i64 %idxprom24, !dbg !6419
  %40 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx25, align 8, !dbg !6419
  %41 = load i32, i32* %x, align 4, !dbg !6421
  %42 = load i32, i32* %y, align 4, !dbg !6422
  %add = add nsw i32 %42, 1, !dbg !6423
  %call26 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %40, i32 %41, i32 %add), !dbg !6424
  call void @copy_v3_v3(float* %arraydecay23, float* %call26), !dbg !6425
  %arrayidx27 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co, i64 0, i64 2, !dbg !6426
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 0, !dbg !6426
  %43 = load %struct.CCGElem**, %struct.CCGElem*** %grid_data, align 8, !dbg !6427
  %44 = load i32, i32* %i, align 4, !dbg !6428
  %idxprom29 = sext i32 %44 to i64, !dbg !6427
  %arrayidx30 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %43, i64 %idxprom29, !dbg !6427
  %45 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx30, align 8, !dbg !6427
  %46 = load i32, i32* %x, align 4, !dbg !6429
  %add31 = add nsw i32 %46, 1, !dbg !6430
  %47 = load i32, i32* %y, align 4, !dbg !6431
  %add32 = add nsw i32 %47, 1, !dbg !6432
  %call33 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %45, i32 %add31, i32 %add32), !dbg !6433
  call void @copy_v3_v3(float* %arraydecay28, float* %call33), !dbg !6434
  %arrayidx34 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co, i64 0, i64 3, !dbg !6435
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx34, i64 0, i64 0, !dbg !6435
  %48 = load %struct.CCGElem**, %struct.CCGElem*** %grid_data, align 8, !dbg !6436
  %49 = load i32, i32* %i, align 4, !dbg !6437
  %idxprom36 = sext i32 %49 to i64, !dbg !6436
  %arrayidx37 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %48, i64 %idxprom36, !dbg !6436
  %50 = load %struct.CCGElem*, %struct.CCGElem** %arrayidx37, align 8, !dbg !6436
  %51 = load i32, i32* %x, align 4, !dbg !6438
  %add38 = add nsw i32 %51, 1, !dbg !6439
  %52 = load i32, i32* %y, align 4, !dbg !6440
  %call39 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %50, i32 %add38, i32 %52), !dbg !6441
  call void @copy_v3_v3(float* %arraydecay35, float* %call39), !dbg !6442
  %53 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !6443
  %54 = load %struct.MAOBakeData*, %struct.MAOBakeData** %ao_data.addr, align 8, !dbg !6444
  %55 = bitcast %struct.MAOBakeData* %54 to i8*, !dbg !6444
  %56 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !6445
  %57 = bitcast %struct.RayFace* %56 to i8*, !dbg !6445
  %arrayidx40 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co, i64 0, i64 0, !dbg !6446
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx40, i64 0, i64 0, !dbg !6446
  %arrayidx42 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co, i64 0, i64 1, !dbg !6447
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 0, !dbg !6447
  %arrayidx44 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co, i64 0, i64 2, !dbg !6448
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx44, i64 0, i64 0, !dbg !6448
  %arrayidx46 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %co, i64 0, i64 3, !dbg !6449
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx46, i64 0, i64 0, !dbg !6449
  %call48 = call %struct.RayObject* @RE_rayface_from_coords(%struct.RayFace* %53, i8* %55, i8* %57, float* %arraydecay41, float* %arraydecay43, float* %arraydecay45, float* %arraydecay47), !dbg !6450
  %58 = load %struct.RayObject*, %struct.RayObject** %raytree, align 8, !dbg !6451
  %59 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !6452
  %60 = ptrtoint %struct.RayFace* %59 to i64, !dbg !6452
  %or = or i64 %60, 1, !dbg !6452
  %61 = inttoptr i64 %or to %struct.RayObject*, !dbg !6452
  call void @RE_rayobject_add(%struct.RayObject* %58, %struct.RayObject* %61), !dbg !6453
  %62 = load %struct.RayFace*, %struct.RayFace** %face, align 8, !dbg !6454
  %incdec.ptr = getelementptr inbounds %struct.RayFace, %struct.RayFace* %62, i32 1, !dbg !6454
  store %struct.RayFace* %incdec.ptr, %struct.RayFace** %face, align 8, !dbg !6454
  br label %for.inc, !dbg !6455

for.inc:                                          ; preds = %for.body19
  %63 = load i32, i32* %y, align 4, !dbg !6456
  %inc = add nsw i32 %63, 1, !dbg !6456
  store i32 %inc, i32* %y, align 4, !dbg !6456
  br label %for.cond15, !dbg !6457, !llvm.loop !6458

for.end:                                          ; preds = %for.cond15
  br label %for.inc49, !dbg !6460

for.inc49:                                        ; preds = %for.end
  %64 = load i32, i32* %x, align 4, !dbg !6461
  %inc50 = add nsw i32 %64, 1, !dbg !6461
  store i32 %inc50, i32* %x, align 4, !dbg !6461
  br label %for.cond10, !dbg !6462, !llvm.loop !6463

for.end51:                                        ; preds = %for.cond10
  br label %for.inc52, !dbg !6465

for.inc52:                                        ; preds = %for.end51
  %65 = load i32, i32* %i, align 4, !dbg !6466
  %inc53 = add nsw i32 %65, 1, !dbg !6466
  store i32 %inc53, i32* %i, align 4, !dbg !6466
  br label %for.cond, !dbg !6467, !llvm.loop !6468

for.end54:                                        ; preds = %for.cond
  %66 = load %struct.RayObject*, %struct.RayObject** %raytree, align 8, !dbg !6470
  call void @RE_rayobject_done(%struct.RayObject* %66), !dbg !6471
  ret void, !dbg !6472
}

; Function Attrs: noinline nounwind uwtable
define internal void @build_permutation_table(i16* %permutation, i16* %temp_permutation, i32 %number_of_rays, i32 %is_first_perm_table) #0 !dbg !6473 {
entry:
  %permutation.addr = alloca i16*, align 8
  %temp_permutation.addr = alloca i16*, align 8
  %number_of_rays.addr = alloca i32, align 4
  %is_first_perm_table.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %nr_entries_left = alloca i32, align 4
  %rnd = alloca i16, align 2
  %entry11 = alloca i16, align 2
  store i16* %permutation, i16** %permutation.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %permutation.addr, metadata !6476, metadata !DIExpression()), !dbg !6477
  store i16* %temp_permutation, i16** %temp_permutation.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %temp_permutation.addr, metadata !6478, metadata !DIExpression()), !dbg !6479
  store i32 %number_of_rays, i32* %number_of_rays.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number_of_rays.addr, metadata !6480, metadata !DIExpression()), !dbg !6481
  store i32 %is_first_perm_table, i32* %is_first_perm_table.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_first_perm_table.addr, metadata !6482, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6484, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6486, metadata !DIExpression()), !dbg !6487
  store i32 0, i32* %i, align 4, !dbg !6488
  br label %for.cond, !dbg !6490

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6491
  %1 = load i32, i32* %number_of_rays.addr, align 4, !dbg !6493
  %cmp = icmp slt i32 %0, %1, !dbg !6494
  br i1 %cmp, label %for.body, label %for.end, !dbg !6495

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !6496
  %conv = trunc i32 %2 to i16, !dbg !6496
  %3 = load i16*, i16** %temp_permutation.addr, align 8, !dbg !6497
  %4 = load i32, i32* %i, align 4, !dbg !6498
  %idxprom = sext i32 %4 to i64, !dbg !6497
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom, !dbg !6497
  store i16 %conv, i16* %arrayidx, align 2, !dbg !6499
  br label %for.inc, !dbg !6497

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !6500
  %inc = add nsw i32 %5, 1, !dbg !6500
  store i32 %inc, i32* %i, align 4, !dbg !6500
  br label %for.cond, !dbg !6501, !llvm.loop !6502

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6504
  br label %for.cond1, !dbg !6506

for.cond1:                                        ; preds = %for.inc31, %for.end
  %6 = load i32, i32* %i, align 4, !dbg !6507
  %7 = load i32, i32* %number_of_rays.addr, align 4, !dbg !6509
  %cmp2 = icmp slt i32 %6, %7, !dbg !6510
  br i1 %cmp2, label %for.body4, label %for.end33, !dbg !6511

for.body4:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %nr_entries_left, metadata !6512, metadata !DIExpression()), !dbg !6515
  %8 = load i32, i32* %number_of_rays.addr, align 4, !dbg !6516
  %9 = load i32, i32* %i, align 4, !dbg !6517
  %sub = sub nsw i32 %8, %9, !dbg !6518
  store i32 %sub, i32* %nr_entries_left, align 4, !dbg !6515
  call void @llvm.dbg.declare(metadata i16* %rnd, metadata !6519, metadata !DIExpression()), !dbg !6520
  %10 = load i32, i32* %is_first_perm_table.addr, align 4, !dbg !6521
  %cmp5 = icmp ne i32 %10, 0, !dbg !6522
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !6521

cond.true:                                        ; preds = %for.body4
  %11 = load i32, i32* %i, align 4, !dbg !6523
  %call = call zeroext i16 @get_ao_random1(i32 %11), !dbg !6524
  %conv7 = zext i16 %call to i32, !dbg !6524
  br label %cond.end, !dbg !6521

cond.false:                                       ; preds = %for.body4
  %12 = load i32, i32* %i, align 4, !dbg !6525
  %call8 = call zeroext i16 @get_ao_random2(i32 %12), !dbg !6526
  %conv9 = zext i16 %call8 to i32, !dbg !6526
  br label %cond.end, !dbg !6521

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv7, %cond.true ], [ %conv9, %cond.false ], !dbg !6521
  %conv10 = trunc i32 %cond to i16, !dbg !6521
  store i16 %conv10, i16* %rnd, align 2, !dbg !6520
  call void @llvm.dbg.declare(metadata i16* %entry11, metadata !6527, metadata !DIExpression()), !dbg !6528
  %13 = load i16, i16* %rnd, align 2, !dbg !6529
  %conv12 = zext i16 %13 to i32, !dbg !6529
  %14 = load i32, i32* %nr_entries_left, align 4, !dbg !6530
  %rem = urem i32 %conv12, %14, !dbg !6531
  %conv13 = trunc i32 %rem to i16, !dbg !6529
  store i16 %conv13, i16* %entry11, align 2, !dbg !6528
  %15 = load i16*, i16** %temp_permutation.addr, align 8, !dbg !6532
  %16 = load i16, i16* %entry11, align 2, !dbg !6533
  %idxprom14 = zext i16 %16 to i64, !dbg !6532
  %arrayidx15 = getelementptr inbounds i16, i16* %15, i64 %idxprom14, !dbg !6532
  %17 = load i16, i16* %arrayidx15, align 2, !dbg !6532
  %18 = load i16*, i16** %permutation.addr, align 8, !dbg !6534
  %19 = load i32, i32* %i, align 4, !dbg !6535
  %idxprom16 = sext i32 %19 to i64, !dbg !6534
  %arrayidx17 = getelementptr inbounds i16, i16* %18, i64 %idxprom16, !dbg !6534
  store i16 %17, i16* %arrayidx17, align 2, !dbg !6536
  %20 = load i16, i16* %entry11, align 2, !dbg !6537
  %conv18 = zext i16 %20 to i32, !dbg !6537
  store i32 %conv18, i32* %k, align 4, !dbg !6539
  br label %for.cond19, !dbg !6540

for.cond19:                                       ; preds = %for.inc28, %cond.end
  %21 = load i32, i32* %k, align 4, !dbg !6541
  %22 = load i32, i32* %nr_entries_left, align 4, !dbg !6543
  %sub20 = sub i32 %22, 1, !dbg !6544
  %cmp21 = icmp ult i32 %21, %sub20, !dbg !6545
  br i1 %cmp21, label %for.body23, label %for.end30, !dbg !6546

for.body23:                                       ; preds = %for.cond19
  %23 = load i16*, i16** %temp_permutation.addr, align 8, !dbg !6547
  %24 = load i32, i32* %k, align 4, !dbg !6549
  %add = add nsw i32 %24, 1, !dbg !6550
  %idxprom24 = sext i32 %add to i64, !dbg !6547
  %arrayidx25 = getelementptr inbounds i16, i16* %23, i64 %idxprom24, !dbg !6547
  %25 = load i16, i16* %arrayidx25, align 2, !dbg !6547
  %26 = load i16*, i16** %temp_permutation.addr, align 8, !dbg !6551
  %27 = load i32, i32* %k, align 4, !dbg !6552
  %idxprom26 = sext i32 %27 to i64, !dbg !6551
  %arrayidx27 = getelementptr inbounds i16, i16* %26, i64 %idxprom26, !dbg !6551
  store i16 %25, i16* %arrayidx27, align 2, !dbg !6553
  br label %for.inc28, !dbg !6554

for.inc28:                                        ; preds = %for.body23
  %28 = load i32, i32* %k, align 4, !dbg !6555
  %inc29 = add nsw i32 %28, 1, !dbg !6555
  store i32 %inc29, i32* %k, align 4, !dbg !6555
  br label %for.cond19, !dbg !6556, !llvm.loop !6557

for.end30:                                        ; preds = %for.cond19
  br label %for.inc31, !dbg !6559

for.inc31:                                        ; preds = %for.end30
  %29 = load i32, i32* %i, align 4, !dbg !6560
  %inc32 = add nsw i32 %29, 1, !dbg !6560
  store i32 %inc32, i32* %i, align 4, !dbg !6560
  br label %for.cond1, !dbg !6561, !llvm.loop !6562

for.end33:                                        ; preds = %for.cond1
  ret void, !dbg !6564
}

; Function Attrs: nounwind
declare dso_local i32 @rand() #4

declare dso_local %struct.RayObject* @RE_rayobject_create(i32, i32, i32) #2

declare dso_local %struct.RayObject* @RE_rayface_from_coords(%struct.RayFace*, i8*, i8*, float*, float*, float*, float*) #2

declare dso_local void @RE_rayobject_add(%struct.RayObject*, %struct.RayObject*) #2

declare dso_local void @RE_rayobject_done(%struct.RayObject*) #2

declare dso_local void @RE_rayobject_free(%struct.RayObject*) #2

declare dso_local float @RE_bake_make_derivative(%struct.ImBuf*, float*, i8*, float, float, float) #2

declare dso_local void @RE_bake_ibuf_normalize_displacement(%struct.ImBuf*, float*, i8*, float, float) #2

declare dso_local void @RE_bake_ibuf_filter(%struct.ImBuf*, i8*, i32) #2

declare dso_local void @imb_freemipmapImBuf(%struct.ImBuf*) #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2327, !2328, !2329}
!llvm.ident = !{!2330}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "ao_random_table_2", scope: !2, file: !3, line: 908, type: !2326, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !89, globals: !2323, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/render/intern/source/multires_bake.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !17, !21, !27, !33, !77, !82}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !6, line: 128, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !6, line: 164, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !6, line: 159, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20}
!19 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !6, line: 134, baseType: !7, size: 32, elements: !22)
!22 = !{!23, !24, !25, !26}
!23 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !6, line: 152, baseType: !7, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 76, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76}
!36 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!37 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!38 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!39 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!40 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!42 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!43 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!44 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!45 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!46 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!47 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!48 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!49 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!50 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!51 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!52 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!53 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!54 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!55 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!56 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!57 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!58 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!59 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!60 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!61 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!62 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!63 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!64 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!65 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!66 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!67 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!68 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!69 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!70 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!71 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!72 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!73 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!74 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!75 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!76 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !78, line: 341, baseType: !7, size: 32, elements: !79)
!78 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!79 = !{!80, !81}
!80 = !DIEnumerator(name: "ME_SMOOTH", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "ME_FACE_SEL", value: 2, isUnsigned: true)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !83, line: 112, baseType: !7, size: 32, elements: !84)
!83 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!84 = !{!85, !86, !87, !88}
!85 = !DIEnumerator(name: "eSubsurfModifierFlag_Incremental", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "eSubsurfModifierFlag_DebugIncr", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "eSubsurfModifierFlag_ControlEdges", value: 4, isUnsigned: true)
!88 = !DIEnumerator(name: "eSubsurfModifierFlag_SubsurfUv", value: 8, isUnsigned: true)
!89 = !{!90, !91, !317, !192, !132, !2174, !2181, !1147, !191, !247, !2188, !2190, !117, !2199, !2307, !2209, !2320}
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !93, line: 127, baseType: !94)
!93 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!94 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !93, line: 77, size: 15424, elements: !95)
!95 = !{!96, !167, !168, !171, !174, !177, !248, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !268, !269, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !298, !299, !300, !306, !307, !311}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !94, file: !93, line: 78, baseType: !97, size: 960)
!97 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !98, line: 130, baseType: !99)
!98 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!99 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !98, line: 117, size: 960, elements: !100)
!100 = !{!101, !102, !103, !105, !125, !129, !131, !133, !134, !135}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !99, file: !98, line: 118, baseType: !90, size: 64)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !99, file: !98, line: 118, baseType: !90, size: 64, offset: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !99, file: !98, line: 119, baseType: !104, size: 64, offset: 128)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 64)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !99, file: !98, line: 120, baseType: !106, size: 64, offset: 192)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64)
!107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !98, line: 136, size: 17600, elements: !108)
!108 = !{!109, !110, !112, !115, !120, !121, !122}
!109 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !107, file: !98, line: 137, baseType: !97, size: 960)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !107, file: !98, line: 138, baseType: !111, size: 64, offset: 960)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !107, file: !98, line: 139, baseType: !113, size: 64, offset: 1024)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!114 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !98, line: 43, flags: DIFlagFwdDecl)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !107, file: !98, line: 140, baseType: !116, size: 8192, offset: 1088)
!116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 8192, elements: !118)
!117 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!118 = !{!119}
!119 = !DISubrange(count: 1024)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !107, file: !98, line: 141, baseType: !116, size: 8192, offset: 9280)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !107, file: !98, line: 148, baseType: !106, size: 64, offset: 17472)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !107, file: !98, line: 150, baseType: !123, size: 64, offset: 17536)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !98, line: 45, flags: DIFlagFwdDecl)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !99, file: !98, line: 121, baseType: !126, size: 528, offset: 256)
!126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 528, elements: !127)
!127 = !{!128}
!128 = !DISubrange(count: 66)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !99, file: !98, line: 126, baseType: !130, size: 16, offset: 784)
!130 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !99, file: !98, line: 127, baseType: !132, size: 32, offset: 800)
!132 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !99, file: !98, line: 128, baseType: !132, size: 32, offset: 832)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !99, file: !98, line: 128, baseType: !132, size: 32, offset: 864)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !99, file: !98, line: 129, baseType: !136, size: 64, offset: 896)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !98, line: 75, baseType: !138)
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !98, line: 62, size: 1024, elements: !139)
!139 = !{!140, !142, !143, !144, !145, !146, !150, !151, !165, !166}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !138, file: !98, line: 63, baseType: !141, size: 64)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !138, file: !98, line: 63, baseType: !141, size: 64, offset: 64)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !138, file: !98, line: 64, baseType: !117, size: 8, offset: 128)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !138, file: !98, line: 64, baseType: !117, size: 8, offset: 136)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !138, file: !98, line: 65, baseType: !130, size: 16, offset: 144)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !138, file: !98, line: 66, baseType: !147, size: 512, offset: 160)
!147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 512, elements: !148)
!148 = !{!149}
!149 = !DISubrange(count: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !138, file: !98, line: 67, baseType: !132, size: 32, offset: 672)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !138, file: !98, line: 69, baseType: !152, size: 256, offset: 704)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !98, line: 60, baseType: !153)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !98, line: 48, size: 256, elements: !154)
!154 = !{!155, !156, !163, !164}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !153, file: !98, line: 49, baseType: !90, size: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !153, file: !98, line: 58, baseType: !157, size: 128, offset: 64)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !158, line: 71, baseType: !159)
!158 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !158, line: 69, size: 128, elements: !160)
!160 = !{!161, !162}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !159, file: !158, line: 70, baseType: !90, size: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !159, file: !158, line: 70, baseType: !90, size: 64, offset: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !153, file: !98, line: 59, baseType: !132, size: 32, offset: 192)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !153, file: !98, line: 59, baseType: !132, size: 32, offset: 224)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !138, file: !98, line: 70, baseType: !132, size: 32, offset: 960)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !138, file: !98, line: 74, baseType: !132, size: 32, offset: 992)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !94, file: !93, line: 80, baseType: !116, size: 8192, offset: 960)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !94, file: !93, line: 82, baseType: !169, size: 64, offset: 9152)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !93, line: 43, flags: DIFlagFwdDecl)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !94, file: !93, line: 83, baseType: !172, size: 64, offset: 9216)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!173 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !98, line: 46, flags: DIFlagFwdDecl)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !94, file: !93, line: 86, baseType: !175, size: 64, offset: 9280)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !93, line: 41, flags: DIFlagFwdDecl)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !94, file: !93, line: 87, baseType: !178, size: 64, offset: 9344)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !180, line: 110, size: 1152, elements: !181)
!180 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!181 = !{!182, !183, !184, !185, !186, !187, !188, !190, !193, !194, !203, !204, !205, !206, !208, !243, !244, !245, !246}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !179, file: !180, line: 111, baseType: !178, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !179, file: !180, line: 111, baseType: !178, size: 64, offset: 64)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !179, file: !180, line: 114, baseType: !132, size: 32, offset: 128)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !179, file: !180, line: 114, baseType: !132, size: 32, offset: 160)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !179, file: !180, line: 115, baseType: !130, size: 16, offset: 192)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !179, file: !180, line: 115, baseType: !130, size: 16, offset: 208)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !179, file: !180, line: 118, baseType: !189, size: 64, offset: 256)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !179, file: !180, line: 120, baseType: !191, size: 64, offset: 320)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!192 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !179, file: !180, line: 122, baseType: !191, size: 64, offset: 384)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !179, file: !180, line: 125, baseType: !195, size: 128, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !196, line: 89, baseType: !197)
!196 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !196, line: 86, size: 128, elements: !198)
!198 = !{!199, !200, !201, !202}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !197, file: !196, line: 87, baseType: !132, size: 32)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !197, file: !196, line: 87, baseType: !132, size: 32, offset: 32)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !197, file: !196, line: 88, baseType: !132, size: 32, offset: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !197, file: !196, line: 88, baseType: !132, size: 32, offset: 96)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !179, file: !180, line: 127, baseType: !132, size: 32, offset: 576)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !179, file: !180, line: 127, baseType: !132, size: 32, offset: 608)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !179, file: !180, line: 130, baseType: !157, size: 128, offset: 640)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !179, file: !180, line: 133, baseType: !207, size: 128, offset: 768)
!207 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !179, file: !180, line: 134, baseType: !209, size: 64, offset: 896)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !211)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !180, line: 108, baseType: !212)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !180, line: 85, size: 1600, elements: !213)
!213 = !{!214, !216, !217, !221, !222, !223, !224, !225, !226, !227, !231, !235, !236, !237, !238, !239, !240, !241, !242}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !212, file: !180, line: 86, baseType: !215, size: 64)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !212, file: !180, line: 86, baseType: !215, size: 64, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !212, file: !180, line: 89, baseType: !218, size: 592, offset: 128)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 592, elements: !219)
!219 = !{!220}
!220 = !DISubrange(count: 74)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !212, file: !180, line: 90, baseType: !7, size: 32, offset: 736)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !212, file: !180, line: 90, baseType: !7, size: 32, offset: 768)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !212, file: !180, line: 90, baseType: !7, size: 32, offset: 800)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !212, file: !180, line: 91, baseType: !132, size: 32, offset: 832)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !212, file: !180, line: 91, baseType: !132, size: 32, offset: 864)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !212, file: !180, line: 91, baseType: !132, size: 32, offset: 896)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !212, file: !180, line: 93, baseType: !228, size: 64, offset: 960)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !230, line: 50, flags: DIFlagFwdDecl)
!230 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!231 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !212, file: !180, line: 94, baseType: !232, size: 64, offset: 1024)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !234, line: 46, flags: DIFlagFwdDecl)
!234 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!235 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !212, file: !180, line: 96, baseType: !191, size: 64, offset: 1088)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !212, file: !180, line: 97, baseType: !191, size: 64, offset: 1152)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !212, file: !180, line: 98, baseType: !191, size: 64, offset: 1216)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !212, file: !180, line: 99, baseType: !189, size: 64, offset: 1280)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !212, file: !180, line: 101, baseType: !132, size: 32, offset: 1344)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !212, file: !180, line: 101, baseType: !132, size: 32, offset: 1376)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !212, file: !180, line: 104, baseType: !90, size: 64, offset: 1408)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !212, file: !180, line: 106, baseType: !157, size: 128, offset: 1472)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !179, file: !180, line: 137, baseType: !132, size: 32, offset: 960)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !179, file: !180, line: 140, baseType: !132, size: 32, offset: 992)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !179, file: !180, line: 143, baseType: !132, size: 32, offset: 1024)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !179, file: !180, line: 146, baseType: !247, size: 64, offset: 1088)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !94, file: !93, line: 89, baseType: !249, size: 512, offset: 9408)
!249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 512, elements: !250)
!250 = !{!251}
!251 = !DISubrange(count: 8)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !94, file: !93, line: 90, baseType: !130, size: 16, offset: 9920)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !94, file: !93, line: 90, baseType: !130, size: 16, offset: 9936)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !94, file: !93, line: 92, baseType: !130, size: 16, offset: 9952)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !94, file: !93, line: 92, baseType: !130, size: 16, offset: 9968)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !94, file: !93, line: 93, baseType: !130, size: 16, offset: 9984)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !94, file: !93, line: 93, baseType: !130, size: 16, offset: 10000)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !94, file: !93, line: 94, baseType: !132, size: 32, offset: 10016)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !94, file: !93, line: 97, baseType: !130, size: 16, offset: 10048)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !94, file: !93, line: 97, baseType: !130, size: 16, offset: 10064)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !94, file: !93, line: 98, baseType: !130, size: 16, offset: 10080)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !94, file: !93, line: 98, baseType: !130, size: 16, offset: 10096)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !94, file: !93, line: 99, baseType: !130, size: 16, offset: 10112)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !94, file: !93, line: 99, baseType: !130, size: 16, offset: 10128)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !94, file: !93, line: 100, baseType: !7, size: 32, offset: 10144)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !94, file: !93, line: 101, baseType: !267, size: 64, offset: 10176)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !94, file: !93, line: 103, baseType: !123, size: 64, offset: 10240)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !94, file: !93, line: 104, baseType: !270, size: 64, offset: 10304)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !98, line: 159, size: 448, elements: !272)
!272 = !{!273, !277, !278, !280, !281, !283}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !271, file: !98, line: 161, baseType: !274, size: 64)
!274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !275)
!275 = !{!276}
!276 = !DISubrange(count: 2)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !271, file: !98, line: 162, baseType: !274, size: 64, offset: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !271, file: !98, line: 163, baseType: !279, size: 32, offset: 128)
!279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 32, elements: !275)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !271, file: !98, line: 164, baseType: !279, size: 32, offset: 160)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !271, file: !98, line: 165, baseType: !282, size: 128, offset: 192)
!282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 128, elements: !275)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !271, file: !98, line: 166, baseType: !284, size: 128, offset: 320)
!284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !172, size: 128, elements: !275)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !94, file: !93, line: 107, baseType: !192, size: 32, offset: 10368)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !94, file: !93, line: 108, baseType: !132, size: 32, offset: 10400)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !94, file: !93, line: 109, baseType: !130, size: 16, offset: 10432)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !94, file: !93, line: 110, baseType: !130, size: 16, offset: 10448)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !94, file: !93, line: 113, baseType: !132, size: 32, offset: 10464)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !94, file: !93, line: 113, baseType: !132, size: 32, offset: 10496)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !94, file: !93, line: 114, baseType: !117, size: 8, offset: 10528)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !94, file: !93, line: 114, baseType: !117, size: 8, offset: 10536)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !94, file: !93, line: 115, baseType: !130, size: 16, offset: 10544)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !94, file: !93, line: 116, baseType: !295, size: 128, offset: 10560)
!295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 128, elements: !296)
!296 = !{!297}
!297 = !DISubrange(count: 4)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !94, file: !93, line: 119, baseType: !192, size: 32, offset: 10688)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !94, file: !93, line: 119, baseType: !192, size: 32, offset: 10720)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !94, file: !93, line: 122, baseType: !301, size: 512, offset: 10752)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !302, line: 182, baseType: !303)
!302 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !302, line: 180, size: 512, elements: !304)
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !303, file: !302, line: 181, baseType: !147, size: 512)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !94, file: !93, line: 123, baseType: !117, size: 8, offset: 11264)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !94, file: !93, line: 125, baseType: !308, size: 56, offset: 11272)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 56, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: 7)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !94, file: !93, line: 126, baseType: !312, size: 4096, offset: 11328)
!312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 4096, elements: !250)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !93, line: 69, baseType: !314)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !93, line: 67, size: 512, elements: !315)
!315 = !{!316}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !314, file: !93, line: 68, baseType: !147, size: 512)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresBakeThread", file: !3, line: 365, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresBakeThread", file: !3, line: 352, size: 1600, elements: !320)
!320 = !{!321, !337, !2119, !2120, !2121, !2171, !2172, !2173}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !319, file: !3, line: 354, baseType: !322, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresBakeQueue", file: !3, line: 350, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresBakeQueue", file: !3, line: 346, size: 96, elements: !325)
!325 = !{!326, !327, !328}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "cur_face", scope: !324, file: !3, line: 347, baseType: !132, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "tot_face", scope: !324, file: !3, line: 348, baseType: !132, size: 32, offset: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "spin", scope: !324, file: !3, line: 349, baseType: !329, size: 32, offset: 64)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpinLock", file: !330, line: 127, baseType: !331)
!330 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_spinlock_t", file: !332, line: 9, baseType: !333)
!332 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !334, line: 26, baseType: !335)
!334 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !336, line: 42, baseType: !7)
!336 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!337 = !DIDerivedType(tag: DW_TAG_member, name: "bkr", scope: !319, file: !3, line: 355, baseType: !338, size: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresBakeRender", file: !340, line: 63, baseType: !341)
!340 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_multires_bake.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresBakeRender", file: !340, line: 38, size: 960, elements: !342)
!342 = !{!343, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2117, !2118}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "lores_dm", scope: !341, file: !340, line: 39, baseType: !344, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !6, line: 177, baseType: !346)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 178, size: 13504, elements: !347)
!347 = !{!348, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !399, !402, !404, !405, !407, !408, !410, !411, !415, !420, !421, !425, !426, !427, !428, !429, !444, !456, !470, !474, !478, !482, !491, !503, !507, !511, !515, !519, !523, !524, !525, !526, !527, !528, !532, !533, !534, !535, !539, !540, !541, !542, !543, !548, !549, !550, !551, !552, !556, !557, !558, !559, !560, !568, !579, !583, !600, !610, !615, !626, !633, !640, !644, !648, !652, !657, !658, !659, !2005, !2011, !2012, !2013, !2017, !2018, !2027, !2054, !2058, !2066, !2070, !2074, !2078, !2086, !2096}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !346, file: !6, line: 180, baseType: !349, size: 1600)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !34, line: 73, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !34, line: 64, size: 1600, elements: !351)
!351 = !{!352, !367, !371, !372, !373, !374, !377}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !350, file: !34, line: 65, baseType: !353, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !34, line: 53, baseType: !355)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !34, line: 42, size: 832, elements: !356)
!356 = !{!357, !358, !359, !360, !361, !362, !363, !364, !365, !366}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !355, file: !34, line: 43, baseType: !132, size: 32)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !355, file: !34, line: 44, baseType: !132, size: 32, offset: 32)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !355, file: !34, line: 45, baseType: !132, size: 32, offset: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !355, file: !34, line: 46, baseType: !132, size: 32, offset: 96)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !355, file: !34, line: 47, baseType: !132, size: 32, offset: 128)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !355, file: !34, line: 48, baseType: !132, size: 32, offset: 160)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !355, file: !34, line: 49, baseType: !132, size: 32, offset: 192)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !355, file: !34, line: 50, baseType: !132, size: 32, offset: 224)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !355, file: !34, line: 51, baseType: !147, size: 512, offset: 256)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !355, file: !34, line: 52, baseType: !90, size: 64, offset: 768)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !350, file: !34, line: 66, baseType: !368, size: 1312, offset: 64)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 1312, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 41)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !350, file: !34, line: 69, baseType: !132, size: 32, offset: 1376)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !350, file: !34, line: 69, baseType: !132, size: 32, offset: 1408)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !350, file: !34, line: 70, baseType: !132, size: 32, offset: 1440)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !350, file: !34, line: 71, baseType: !375, size: 64, offset: 1472)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !34, line: 71, flags: DIFlagFwdDecl)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !350, file: !34, line: 72, baseType: !378, size: 64, offset: 1536)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !34, line: 59, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !34, line: 57, size: 8192, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !380, file: !34, line: 58, baseType: !116, size: 8192)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !346, file: !6, line: 180, baseType: !349, size: 1600, offset: 1600)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !346, file: !6, line: 180, baseType: !349, size: 1600, offset: 3200)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !346, file: !6, line: 180, baseType: !349, size: 1600, offset: 4800)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !346, file: !6, line: 180, baseType: !349, size: 1600, offset: 6400)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !346, file: !6, line: 181, baseType: !132, size: 32, offset: 8000)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !346, file: !6, line: 181, baseType: !132, size: 32, offset: 8032)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !346, file: !6, line: 181, baseType: !132, size: 32, offset: 8064)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !346, file: !6, line: 181, baseType: !132, size: 32, offset: 8096)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !346, file: !6, line: 181, baseType: !132, size: 32, offset: 8128)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !346, file: !6, line: 182, baseType: !132, size: 32, offset: 8160)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !346, file: !6, line: 183, baseType: !132, size: 32, offset: 8192)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !346, file: !6, line: 184, baseType: !395, size: 64, offset: 8256)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !396, line: 124, baseType: !397)
!396 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!398 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !396, line: 124, flags: DIFlagFwdDecl)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !346, file: !6, line: 185, baseType: !400, size: 64, offset: 8320)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !6, line: 97, flags: DIFlagFwdDecl)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !346, file: !6, line: 186, baseType: !403, size: 32, offset: 8384)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !6, line: 132, baseType: !5)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !346, file: !6, line: 187, baseType: !192, size: 32, offset: 8416)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !346, file: !6, line: 188, baseType: !406, size: 32, offset: 8448)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !6, line: 175, baseType: !12)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !346, file: !6, line: 189, baseType: !132, size: 32, offset: 8480)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !346, file: !6, line: 190, baseType: !409, size: 64, offset: 8512)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !346, file: !6, line: 193, baseType: !117, size: 8, offset: 8576)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !346, file: !6, line: 196, baseType: !412, size: 64, offset: 8640)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DISubroutineType(types: !414)
!414 = !{null, !344}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !346, file: !6, line: 199, baseType: !416, size: 64, offset: 8704)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DISubroutineType(types: !418)
!418 = !{null, !344, !419}
!419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !192)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !346, file: !6, line: 202, baseType: !412, size: 64, offset: 8768)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !346, file: !6, line: 207, baseType: !422, size: 64, offset: 8832)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DISubroutineType(types: !424)
!424 = !{!132, !344}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !346, file: !6, line: 208, baseType: !422, size: 64, offset: 8896)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !346, file: !6, line: 209, baseType: !422, size: 64, offset: 8960)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !346, file: !6, line: 210, baseType: !422, size: 64, offset: 9024)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !346, file: !6, line: 211, baseType: !422, size: 64, offset: 9088)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !346, file: !6, line: 218, baseType: !430, size: 64, offset: 9152)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DISubroutineType(types: !432)
!432 = !{null, !344, !132, !433}
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !78, line: 65, size: 160, elements: !435)
!435 = !{!436, !440, !442, !443}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !434, file: !78, line: 66, baseType: !437, size: 96)
!437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 96, elements: !438)
!438 = !{!439}
!439 = !DISubrange(count: 3)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !434, file: !78, line: 67, baseType: !441, size: 48, offset: 96)
!441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 48, elements: !438)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !434, file: !78, line: 68, baseType: !117, size: 8, offset: 144)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !434, file: !78, line: 68, baseType: !117, size: 8, offset: 152)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !346, file: !6, line: 219, baseType: !445, size: 64, offset: 9216)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DISubroutineType(types: !447)
!447 = !{null, !344, !132, !448}
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !78, line: 48, size: 96, elements: !450)
!450 = !{!451, !452, !453, !454, !455}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !449, file: !78, line: 49, baseType: !7, size: 32)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !449, file: !78, line: 49, baseType: !7, size: 32, offset: 32)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !449, file: !78, line: 50, baseType: !117, size: 8, offset: 64)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !449, file: !78, line: 50, baseType: !117, size: 8, offset: 72)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !449, file: !78, line: 51, baseType: !130, size: 16, offset: 80)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !346, file: !6, line: 220, baseType: !457, size: 64, offset: 9280)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = !DISubroutineType(types: !459)
!459 = !{null, !344, !132, !460}
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !78, line: 42, size: 160, elements: !462)
!462 = !{!463, !464, !465, !466, !467, !468, !469}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !461, file: !78, line: 43, baseType: !7, size: 32)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !461, file: !78, line: 43, baseType: !7, size: 32, offset: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !461, file: !78, line: 43, baseType: !7, size: 32, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !461, file: !78, line: 43, baseType: !7, size: 32, offset: 96)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !461, file: !78, line: 44, baseType: !130, size: 16, offset: 128)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !461, file: !78, line: 45, baseType: !117, size: 8, offset: 144)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !461, file: !78, line: 45, baseType: !117, size: 8, offset: 152)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !346, file: !6, line: 227, baseType: !471, size: 64, offset: 9344)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DISubroutineType(types: !473)
!473 = !{!433, !344}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !346, file: !6, line: 228, baseType: !475, size: 64, offset: 9408)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DISubroutineType(types: !477)
!477 = !{!448, !344}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !346, file: !6, line: 229, baseType: !479, size: 64, offset: 9472)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DISubroutineType(types: !481)
!481 = !{!460, !344}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !346, file: !6, line: 230, baseType: !483, size: 64, offset: 9536)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DISubroutineType(types: !485)
!485 = !{!486, !344}
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !78, line: 88, size: 64, elements: !488)
!488 = !{!489, !490}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !487, file: !78, line: 89, baseType: !7, size: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !487, file: !78, line: 90, baseType: !7, size: 32, offset: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !346, file: !6, line: 231, baseType: !492, size: 64, offset: 9600)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{!495, !344}
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !78, line: 79, size: 96, elements: !497)
!497 = !{!498, !499, !500, !501, !502}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !496, file: !78, line: 81, baseType: !132, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !496, file: !78, line: 82, baseType: !132, size: 32, offset: 32)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !496, file: !78, line: 83, baseType: !130, size: 16, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !496, file: !78, line: 84, baseType: !117, size: 8, offset: 80)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !496, file: !78, line: 84, baseType: !117, size: 8, offset: 88)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !346, file: !6, line: 236, baseType: !504, size: 64, offset: 9664)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DISubroutineType(types: !506)
!506 = !{null, !344, !433}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !346, file: !6, line: 237, baseType: !508, size: 64, offset: 9728)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DISubroutineType(types: !510)
!510 = !{null, !344, !448}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !346, file: !6, line: 238, baseType: !512, size: 64, offset: 9792)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = !DISubroutineType(types: !514)
!514 = !{null, !344, !460}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !346, file: !6, line: 239, baseType: !516, size: 64, offset: 9856)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DISubroutineType(types: !518)
!518 = !{null, !344, !486}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !346, file: !6, line: 240, baseType: !520, size: 64, offset: 9920)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DISubroutineType(types: !522)
!522 = !{null, !344, !495}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !346, file: !6, line: 245, baseType: !471, size: 64, offset: 9984)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !346, file: !6, line: 246, baseType: !475, size: 64, offset: 10048)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !346, file: !6, line: 247, baseType: !479, size: 64, offset: 10112)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !346, file: !6, line: 248, baseType: !483, size: 64, offset: 10176)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !346, file: !6, line: 249, baseType: !492, size: 64, offset: 10240)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !346, file: !6, line: 255, baseType: !529, size: 64, offset: 10304)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!530 = !DISubroutineType(types: !531)
!531 = !{!90, !344, !132, !132}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !346, file: !6, line: 256, baseType: !529, size: 64, offset: 10368)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !346, file: !6, line: 257, baseType: !529, size: 64, offset: 10432)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !346, file: !6, line: 258, baseType: !529, size: 64, offset: 10496)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !346, file: !6, line: 264, baseType: !536, size: 64, offset: 10560)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DISubroutineType(types: !538)
!538 = !{!90, !344, !132}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !346, file: !6, line: 265, baseType: !536, size: 64, offset: 10624)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !346, file: !6, line: 266, baseType: !536, size: 64, offset: 10688)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !346, file: !6, line: 267, baseType: !536, size: 64, offset: 10752)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !346, file: !6, line: 268, baseType: !536, size: 64, offset: 10816)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !346, file: !6, line: 272, baseType: !544, size: 64, offset: 10880)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DISubroutineType(types: !546)
!546 = !{!547, !344}
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !346, file: !6, line: 273, baseType: !544, size: 64, offset: 10944)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !346, file: !6, line: 274, baseType: !544, size: 64, offset: 11008)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !346, file: !6, line: 275, baseType: !544, size: 64, offset: 11072)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !346, file: !6, line: 276, baseType: !544, size: 64, offset: 11136)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !346, file: !6, line: 279, baseType: !553, size: 64, offset: 11200)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DISubroutineType(types: !555)
!555 = !{null, !344, !132, !547, !132}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !346, file: !6, line: 280, baseType: !553, size: 64, offset: 11264)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !346, file: !6, line: 281, baseType: !553, size: 64, offset: 11328)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !346, file: !6, line: 284, baseType: !422, size: 64, offset: 11392)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !346, file: !6, line: 285, baseType: !422, size: 64, offset: 11456)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !346, file: !6, line: 286, baseType: !561, size: 64, offset: 11520)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DISubroutineType(types: !563)
!563 = !{!564, !344}
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !567, line: 51, flags: DIFlagFwdDecl)
!567 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_ccg.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!568 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !346, file: !6, line: 287, baseType: !569, size: 64, offset: 11584)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DISubroutineType(types: !571)
!571 = !{!572, !344}
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !6, line: 120, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !6, line: 117, size: 256, elements: !575)
!575 = !{!576, !578}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !574, file: !6, line: 118, baseType: !577, size: 128)
!577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 128, elements: !296)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !574, file: !6, line: 119, baseType: !577, size: 128, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !346, file: !6, line: 288, baseType: !580, size: 64, offset: 11648)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!189, !344}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !346, file: !6, line: 289, baseType: !584, size: 64, offset: 11712)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DISubroutineType(types: !586)
!586 = !{null, !344, !587}
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !567, line: 53, size: 320, elements: !589)
!589 = !{!590, !591, !592, !593, !594, !595, !596, !597, !598, !599}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !588, file: !567, line: 54, baseType: !132, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "elem_size", scope: !588, file: !567, line: 58, baseType: !132, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "grid_size", scope: !588, file: !567, line: 61, baseType: !132, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "grid_area", scope: !588, file: !567, line: 63, baseType: !132, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "grid_bytes", scope: !588, file: !567, line: 65, baseType: !132, size: 32, offset: 128)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "normal_offset", scope: !588, file: !567, line: 69, baseType: !132, size: 32, offset: 160)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "mask_offset", scope: !588, file: !567, line: 73, baseType: !132, size: 32, offset: 192)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "num_layers", scope: !588, file: !567, line: 75, baseType: !132, size: 32, offset: 224)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "has_normals", scope: !588, file: !567, line: 76, baseType: !132, size: 32, offset: 256)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "has_mask", scope: !588, file: !567, line: 77, baseType: !132, size: 32, offset: 288)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !346, file: !6, line: 290, baseType: !601, size: 64, offset: 11776)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DISubroutineType(types: !603)
!603 = !{!604, !344}
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !6, line: 126, baseType: !606)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !6, line: 123, size: 32, elements: !607)
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !606, file: !6, line: 124, baseType: !130, size: 16)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !606, file: !6, line: 125, baseType: !117, size: 8, offset: 16)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !346, file: !6, line: 291, baseType: !611, size: 64, offset: 11840)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DISubroutineType(types: !613)
!613 = !{!614, !344}
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !346, file: !6, line: 299, baseType: !616, size: 64, offset: 11904)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DISubroutineType(types: !618)
!618 = !{null, !344, !619, !90, !625}
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DISubroutineType(types: !621)
!621 = !{null, !90, !132, !622, !622, !623}
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !6, line: 162, baseType: !17)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !346, file: !6, line: 309, baseType: !627, size: 64, offset: 11968)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DISubroutineType(types: !629)
!629 = !{null, !344, !630, !90}
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DISubroutineType(types: !632)
!632 = !{null, !90, !132, !622, !622}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !346, file: !6, line: 317, baseType: !634, size: 64, offset: 12032)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DISubroutineType(types: !636)
!636 = !{null, !344, !637, !90, !625}
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DISubroutineType(types: !639)
!639 = !{null, !90, !132, !132, !622, !622}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !346, file: !6, line: 327, baseType: !641, size: 64, offset: 12096)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !344, !630, !90, !625}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !346, file: !6, line: 337, baseType: !645, size: 64, offset: 12160)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DISubroutineType(types: !647)
!647 = !{null, !344, !191, !191}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !346, file: !6, line: 344, baseType: !649, size: 64, offset: 12224)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DISubroutineType(types: !651)
!651 = !{null, !344, !132, !191}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !346, file: !6, line: 347, baseType: !653, size: 64, offset: 12288)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DISubroutineType(types: !655)
!655 = !{null, !344, !656}
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !346, file: !6, line: 350, baseType: !649, size: 64, offset: 12352)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !346, file: !6, line: 351, baseType: !649, size: 64, offset: 12416)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !346, file: !6, line: 355, baseType: !660, size: 64, offset: 12480)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DISubroutineType(types: !662)
!662 = !{!663, !666, !344}
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !665)
!665 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !6, line: 355, flags: DIFlagFwdDecl)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !230, line: 115, size: 11392, elements: !668)
!668 = !{!669, !670, !674, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !691, !700, !713, !714, !755, !756, !759, !760, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !860, !861, !862, !863, !864, !865, !866, !867, !868, !871, !874, !875, !876, !877, !878, !879, !882, !885, !887, !888, !892, !893, !894, !895, !896, !897, !899, !902, !905, !907, !1993, !1994}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !667, file: !230, line: 116, baseType: !97, size: 960)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !667, file: !230, line: 117, baseType: !671, size: 64, offset: 960)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !673, line: 45, flags: DIFlagFwdDecl)
!673 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!674 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !667, file: !230, line: 119, baseType: !675, size: 64, offset: 1024)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !230, line: 57, flags: DIFlagFwdDecl)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !667, file: !230, line: 121, baseType: !130, size: 16, offset: 1088)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !667, file: !230, line: 121, baseType: !130, size: 16, offset: 1104)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !667, file: !230, line: 122, baseType: !132, size: 32, offset: 1120)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !667, file: !230, line: 122, baseType: !132, size: 32, offset: 1152)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !667, file: !230, line: 122, baseType: !132, size: 32, offset: 1184)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !667, file: !230, line: 123, baseType: !147, size: 512, offset: 1216)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !667, file: !230, line: 124, baseType: !666, size: 64, offset: 1728)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !667, file: !230, line: 124, baseType: !666, size: 64, offset: 1792)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !667, file: !230, line: 127, baseType: !666, size: 64, offset: 1856)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !667, file: !230, line: 127, baseType: !666, size: 64, offset: 1920)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !667, file: !230, line: 127, baseType: !666, size: 64, offset: 1984)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !667, file: !230, line: 128, baseType: !689, size: 64, offset: 2048)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !673, line: 46, flags: DIFlagFwdDecl)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !667, file: !230, line: 130, baseType: !692, size: 64, offset: 2112)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !230, line: 97, size: 832, elements: !694)
!694 = !{!695, !698, !699}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !693, file: !230, line: 98, baseType: !696, size: 768)
!696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 768, elements: !697)
!697 = !{!251, !439}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !693, file: !230, line: 99, baseType: !132, size: 32, offset: 768)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !693, file: !230, line: 99, baseType: !132, size: 32, offset: 800)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !667, file: !230, line: 131, baseType: !701, size: 64, offset: 2176)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !234, line: 486, size: 1600, elements: !703)
!703 = !{!704, !705, !706, !707, !708, !709, !710, !711, !712}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !702, file: !234, line: 487, baseType: !97, size: 960)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !702, file: !234, line: 489, baseType: !157, size: 128, offset: 960)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !702, file: !234, line: 490, baseType: !157, size: 128, offset: 1088)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !702, file: !234, line: 491, baseType: !157, size: 128, offset: 1216)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !702, file: !234, line: 492, baseType: !157, size: 128, offset: 1344)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !702, file: !234, line: 494, baseType: !132, size: 32, offset: 1472)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !702, file: !234, line: 495, baseType: !132, size: 32, offset: 1504)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !702, file: !234, line: 497, baseType: !132, size: 32, offset: 1536)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !702, file: !234, line: 498, baseType: !132, size: 32, offset: 1568)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !667, file: !230, line: 132, baseType: !701, size: 64, offset: 2240)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !667, file: !230, line: 133, baseType: !715, size: 64, offset: 2304)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !234, line: 334, size: 1728, elements: !717)
!717 = !{!718, !719, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !754}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !716, file: !234, line: 335, baseType: !157, size: 128)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !716, file: !234, line: 336, baseType: !720, size: 64, offset: 128)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !234, line: 47, flags: DIFlagFwdDecl)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !716, file: !234, line: 338, baseType: !130, size: 16, offset: 192)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !716, file: !234, line: 338, baseType: !130, size: 16, offset: 208)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !716, file: !234, line: 339, baseType: !7, size: 32, offset: 224)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !716, file: !234, line: 340, baseType: !132, size: 32, offset: 256)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !716, file: !234, line: 342, baseType: !192, size: 32, offset: 288)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !716, file: !234, line: 343, baseType: !437, size: 96, offset: 320)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !716, file: !234, line: 344, baseType: !437, size: 96, offset: 416)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !716, file: !234, line: 347, baseType: !157, size: 128, offset: 512)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !716, file: !234, line: 349, baseType: !132, size: 32, offset: 640)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !716, file: !234, line: 350, baseType: !132, size: 32, offset: 672)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !716, file: !234, line: 351, baseType: !90, size: 64, offset: 704)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !716, file: !234, line: 352, baseType: !90, size: 64, offset: 768)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !716, file: !234, line: 354, baseType: !735, size: 384, offset: 832)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !234, line: 116, baseType: !736)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !234, line: 94, size: 384, elements: !737)
!737 = !{!738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !736, file: !234, line: 96, baseType: !132, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !736, file: !234, line: 96, baseType: !132, size: 32, offset: 32)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !736, file: !234, line: 97, baseType: !132, size: 32, offset: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !736, file: !234, line: 97, baseType: !132, size: 32, offset: 96)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !736, file: !234, line: 99, baseType: !130, size: 16, offset: 128)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !736, file: !234, line: 100, baseType: !130, size: 16, offset: 144)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !736, file: !234, line: 102, baseType: !130, size: 16, offset: 160)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !736, file: !234, line: 105, baseType: !130, size: 16, offset: 176)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !736, file: !234, line: 108, baseType: !130, size: 16, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !736, file: !234, line: 109, baseType: !130, size: 16, offset: 208)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !736, file: !234, line: 111, baseType: !130, size: 16, offset: 224)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !736, file: !234, line: 112, baseType: !130, size: 16, offset: 240)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !736, file: !234, line: 114, baseType: !132, size: 32, offset: 256)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !736, file: !234, line: 114, baseType: !132, size: 32, offset: 288)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !736, file: !234, line: 115, baseType: !132, size: 32, offset: 320)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !736, file: !234, line: 115, baseType: !132, size: 32, offset: 352)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !716, file: !234, line: 355, baseType: !147, size: 512, offset: 1216)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !667, file: !230, line: 134, baseType: !90, size: 64, offset: 2368)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !667, file: !230, line: 136, baseType: !757, size: 64, offset: 2432)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !230, line: 58, flags: DIFlagFwdDecl)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !667, file: !230, line: 138, baseType: !735, size: 384, offset: 2496)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !667, file: !230, line: 139, baseType: !761, size: 64, offset: 2880)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !234, line: 80, baseType: !763)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !234, line: 72, size: 192, elements: !764)
!764 = !{!765, !772, !773, !774, !775}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !763, file: !234, line: 73, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !234, line: 59, baseType: !768)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !234, line: 56, size: 128, elements: !769)
!769 = !{!770, !771}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !768, file: !234, line: 57, baseType: !437, size: 96)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !768, file: !234, line: 58, baseType: !132, size: 32, offset: 96)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !763, file: !234, line: 74, baseType: !132, size: 32, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !763, file: !234, line: 76, baseType: !132, size: 32, offset: 96)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !763, file: !234, line: 77, baseType: !132, size: 32, offset: 128)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !763, file: !234, line: 79, baseType: !132, size: 32, offset: 160)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !667, file: !230, line: 141, baseType: !157, size: 128, offset: 2944)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !667, file: !230, line: 142, baseType: !157, size: 128, offset: 3072)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !667, file: !230, line: 143, baseType: !157, size: 128, offset: 3200)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !667, file: !230, line: 144, baseType: !157, size: 128, offset: 3328)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !667, file: !230, line: 146, baseType: !132, size: 32, offset: 3456)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !667, file: !230, line: 147, baseType: !132, size: 32, offset: 3488)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !667, file: !230, line: 150, baseType: !409, size: 64, offset: 3520)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !667, file: !230, line: 151, baseType: !247, size: 64, offset: 3584)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !667, file: !230, line: 152, baseType: !132, size: 32, offset: 3648)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !667, file: !230, line: 153, baseType: !132, size: 32, offset: 3680)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !667, file: !230, line: 156, baseType: !437, size: 96, offset: 3712)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !667, file: !230, line: 156, baseType: !437, size: 96, offset: 3808)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !667, file: !230, line: 156, baseType: !437, size: 96, offset: 3904)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !667, file: !230, line: 157, baseType: !437, size: 96, offset: 4000)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !667, file: !230, line: 158, baseType: !437, size: 96, offset: 4096)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !667, file: !230, line: 159, baseType: !437, size: 96, offset: 4192)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !667, file: !230, line: 160, baseType: !437, size: 96, offset: 4288)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !667, file: !230, line: 160, baseType: !437, size: 96, offset: 4384)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !667, file: !230, line: 161, baseType: !295, size: 128, offset: 4480)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !667, file: !230, line: 161, baseType: !295, size: 128, offset: 4608)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !667, file: !230, line: 162, baseType: !437, size: 96, offset: 4736)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !667, file: !230, line: 162, baseType: !437, size: 96, offset: 4832)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !667, file: !230, line: 163, baseType: !192, size: 32, offset: 4928)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !667, file: !230, line: 163, baseType: !192, size: 32, offset: 4960)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !667, file: !230, line: 164, baseType: !801, size: 512, offset: 4992)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 512, elements: !802)
!802 = !{!297, !297}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !667, file: !230, line: 165, baseType: !801, size: 512, offset: 5504)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !667, file: !230, line: 166, baseType: !801, size: 512, offset: 6016)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !667, file: !230, line: 167, baseType: !801, size: 512, offset: 6528)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !667, file: !230, line: 176, baseType: !801, size: 512, offset: 7040)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !667, file: !230, line: 178, baseType: !7, size: 32, offset: 7552)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !667, file: !230, line: 180, baseType: !130, size: 16, offset: 7584)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !667, file: !230, line: 181, baseType: !130, size: 16, offset: 7600)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !667, file: !230, line: 183, baseType: !130, size: 16, offset: 7616)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !667, file: !230, line: 183, baseType: !130, size: 16, offset: 7632)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !667, file: !230, line: 184, baseType: !130, size: 16, offset: 7648)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !667, file: !230, line: 184, baseType: !130, size: 16, offset: 7664)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !667, file: !230, line: 185, baseType: !130, size: 16, offset: 7680)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !667, file: !230, line: 186, baseType: !130, size: 16, offset: 7696)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !667, file: !230, line: 187, baseType: !130, size: 16, offset: 7712)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !667, file: !230, line: 188, baseType: !117, size: 8, offset: 7728)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !667, file: !230, line: 189, baseType: !117, size: 8, offset: 7736)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !667, file: !230, line: 192, baseType: !132, size: 32, offset: 7744)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !667, file: !230, line: 192, baseType: !132, size: 32, offset: 7776)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !667, file: !230, line: 192, baseType: !132, size: 32, offset: 7808)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !667, file: !230, line: 192, baseType: !132, size: 32, offset: 7840)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !667, file: !230, line: 194, baseType: !132, size: 32, offset: 7872)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !667, file: !230, line: 202, baseType: !192, size: 32, offset: 7904)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !667, file: !230, line: 202, baseType: !192, size: 32, offset: 7936)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !667, file: !230, line: 202, baseType: !192, size: 32, offset: 7968)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !667, file: !230, line: 211, baseType: !192, size: 32, offset: 8000)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !667, file: !230, line: 212, baseType: !192, size: 32, offset: 8032)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !667, file: !230, line: 213, baseType: !192, size: 32, offset: 8064)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !667, file: !230, line: 214, baseType: !192, size: 32, offset: 8096)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !667, file: !230, line: 215, baseType: !192, size: 32, offset: 8128)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !667, file: !230, line: 216, baseType: !192, size: 32, offset: 8160)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !667, file: !230, line: 219, baseType: !192, size: 32, offset: 8192)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !667, file: !230, line: 220, baseType: !192, size: 32, offset: 8224)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !667, file: !230, line: 221, baseType: !192, size: 32, offset: 8256)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !667, file: !230, line: 224, baseType: !837, size: 16, offset: 8288)
!837 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !667, file: !230, line: 224, baseType: !837, size: 16, offset: 8304)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !667, file: !230, line: 226, baseType: !130, size: 16, offset: 8320)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !667, file: !230, line: 228, baseType: !117, size: 8, offset: 8336)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !667, file: !230, line: 229, baseType: !117, size: 8, offset: 8344)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !667, file: !230, line: 231, baseType: !130, size: 16, offset: 8352)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !667, file: !230, line: 232, baseType: !117, size: 8, offset: 8368)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !667, file: !230, line: 233, baseType: !117, size: 8, offset: 8376)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !667, file: !230, line: 234, baseType: !192, size: 32, offset: 8384)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !667, file: !230, line: 235, baseType: !192, size: 32, offset: 8416)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !667, file: !230, line: 237, baseType: !157, size: 128, offset: 8448)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !667, file: !230, line: 238, baseType: !157, size: 128, offset: 8576)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !667, file: !230, line: 239, baseType: !157, size: 128, offset: 8704)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !667, file: !230, line: 240, baseType: !157, size: 128, offset: 8832)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !667, file: !230, line: 242, baseType: !192, size: 32, offset: 8960)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !667, file: !230, line: 244, baseType: !130, size: 16, offset: 8992)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !667, file: !230, line: 245, baseType: !837, size: 16, offset: 9008)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !667, file: !230, line: 246, baseType: !295, size: 128, offset: 9024)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !667, file: !230, line: 248, baseType: !132, size: 32, offset: 9152)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !667, file: !230, line: 249, baseType: !132, size: 32, offset: 9184)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !667, file: !230, line: 251, baseType: !858, size: 64, offset: 9216)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !230, line: 251, flags: DIFlagFwdDecl)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !667, file: !230, line: 253, baseType: !117, size: 8, offset: 9280)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !667, file: !230, line: 254, baseType: !117, size: 8, offset: 9288)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !667, file: !230, line: 255, baseType: !130, size: 16, offset: 9296)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !667, file: !230, line: 256, baseType: !437, size: 96, offset: 9312)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !667, file: !230, line: 258, baseType: !157, size: 128, offset: 9408)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !667, file: !230, line: 259, baseType: !157, size: 128, offset: 9536)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !667, file: !230, line: 260, baseType: !157, size: 128, offset: 9664)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !667, file: !230, line: 261, baseType: !157, size: 128, offset: 9792)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !667, file: !230, line: 263, baseType: !869, size: 64, offset: 9920)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !230, line: 52, flags: DIFlagFwdDecl)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !667, file: !230, line: 264, baseType: !872, size: 64, offset: 9984)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !230, line: 53, flags: DIFlagFwdDecl)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !667, file: !230, line: 265, baseType: !232, size: 64, offset: 10048)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !667, file: !230, line: 267, baseType: !117, size: 8, offset: 10112)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !667, file: !230, line: 268, baseType: !117, size: 8, offset: 10120)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !667, file: !230, line: 269, baseType: !130, size: 16, offset: 10128)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !667, file: !230, line: 270, baseType: !192, size: 32, offset: 10144)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !667, file: !230, line: 272, baseType: !880, size: 64, offset: 10176)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !230, line: 54, flags: DIFlagFwdDecl)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !667, file: !230, line: 275, baseType: !883, size: 64, offset: 10240)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !230, line: 275, flags: DIFlagFwdDecl)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !667, file: !230, line: 277, baseType: !886, size: 64, offset: 10304)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !667, file: !230, line: 277, baseType: !886, size: 64, offset: 10368)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !667, file: !230, line: 278, baseType: !889, size: 64, offset: 10432)
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !334, line: 27, baseType: !890)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !336, line: 45, baseType: !891)
!891 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !667, file: !230, line: 279, baseType: !889, size: 64, offset: 10496)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !667, file: !230, line: 280, baseType: !7, size: 32, offset: 10560)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !667, file: !230, line: 281, baseType: !7, size: 32, offset: 10592)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !667, file: !230, line: 283, baseType: !157, size: 128, offset: 10624)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !667, file: !230, line: 284, baseType: !157, size: 128, offset: 10752)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !667, file: !230, line: 285, baseType: !898, size: 64, offset: 10880)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !667, file: !230, line: 287, baseType: !900, size: 64, offset: 10944)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !230, line: 59, flags: DIFlagFwdDecl)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !667, file: !230, line: 288, baseType: !903, size: 64, offset: 11008)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !230, line: 288, flags: DIFlagFwdDecl)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !667, file: !230, line: 290, baseType: !906, size: 64, offset: 11072)
!906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 64, elements: !275)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !667, file: !230, line: 291, baseType: !908, size: 64, offset: 11136)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !93, line: 65, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !93, line: 50, size: 320, elements: !911)
!911 = !{!912, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !910, file: !93, line: 51, baseType: !913, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !915, line: 1216, size: 39680, elements: !916)
!915 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!916 = !{!917, !918, !919, !920, !1357, !1358, !1359, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1386, !1607, !1610, !1853, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1876, !1877, !1878, !1879, !1880, !1888, !1954, !1961, !1962, !1969, !1972, !1973, !1974, !1975, !1976, !1977}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !914, file: !915, line: 1217, baseType: !97, size: 960)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !914, file: !915, line: 1218, baseType: !671, size: 64, offset: 960)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !914, file: !915, line: 1220, baseType: !666, size: 64, offset: 1024)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !914, file: !915, line: 1221, baseType: !921, size: 64, offset: 1088)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !923, line: 52, size: 4224, elements: !924)
!923 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!924 = !{!925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !1352, !1353, !1354, !1355, !1356}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !922, file: !923, line: 53, baseType: !97, size: 960)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !922, file: !923, line: 54, baseType: !671, size: 64, offset: 960)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !922, file: !923, line: 56, baseType: !130, size: 16, offset: 1024)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !922, file: !923, line: 56, baseType: !130, size: 16, offset: 1040)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !922, file: !923, line: 57, baseType: !130, size: 16, offset: 1056)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !922, file: !923, line: 57, baseType: !130, size: 16, offset: 1072)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !922, file: !923, line: 59, baseType: !192, size: 32, offset: 1088)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !922, file: !923, line: 59, baseType: !192, size: 32, offset: 1120)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !922, file: !923, line: 59, baseType: !192, size: 32, offset: 1152)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !922, file: !923, line: 60, baseType: !192, size: 32, offset: 1184)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !922, file: !923, line: 60, baseType: !192, size: 32, offset: 1216)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !922, file: !923, line: 60, baseType: !192, size: 32, offset: 1248)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !922, file: !923, line: 61, baseType: !192, size: 32, offset: 1280)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !922, file: !923, line: 61, baseType: !192, size: 32, offset: 1312)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !922, file: !923, line: 61, baseType: !192, size: 32, offset: 1344)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !922, file: !923, line: 68, baseType: !192, size: 32, offset: 1376)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !922, file: !923, line: 68, baseType: !192, size: 32, offset: 1408)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !922, file: !923, line: 68, baseType: !192, size: 32, offset: 1440)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !922, file: !923, line: 69, baseType: !192, size: 32, offset: 1472)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !922, file: !923, line: 69, baseType: !192, size: 32, offset: 1504)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !922, file: !923, line: 74, baseType: !192, size: 32, offset: 1536)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !922, file: !923, line: 79, baseType: !192, size: 32, offset: 1568)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !922, file: !923, line: 81, baseType: !130, size: 16, offset: 1600)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !922, file: !923, line: 91, baseType: !130, size: 16, offset: 1616)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !922, file: !923, line: 92, baseType: !130, size: 16, offset: 1632)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !922, file: !923, line: 93, baseType: !130, size: 16, offset: 1648)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !922, file: !923, line: 94, baseType: !130, size: 16, offset: 1664)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !922, file: !923, line: 94, baseType: !130, size: 16, offset: 1680)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !922, file: !923, line: 94, baseType: !130, size: 16, offset: 1696)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !922, file: !923, line: 94, baseType: !130, size: 16, offset: 1712)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !922, file: !923, line: 96, baseType: !192, size: 32, offset: 1728)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !922, file: !923, line: 96, baseType: !192, size: 32, offset: 1760)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !922, file: !923, line: 96, baseType: !192, size: 32, offset: 1792)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !922, file: !923, line: 96, baseType: !192, size: 32, offset: 1824)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !922, file: !923, line: 98, baseType: !192, size: 32, offset: 1856)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !922, file: !923, line: 98, baseType: !192, size: 32, offset: 1888)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !922, file: !923, line: 98, baseType: !192, size: 32, offset: 1920)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !922, file: !923, line: 98, baseType: !192, size: 32, offset: 1952)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !922, file: !923, line: 99, baseType: !192, size: 32, offset: 1984)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !922, file: !923, line: 99, baseType: !192, size: 32, offset: 2016)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !922, file: !923, line: 100, baseType: !192, size: 32, offset: 2048)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !922, file: !923, line: 100, baseType: !192, size: 32, offset: 2080)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !922, file: !923, line: 103, baseType: !130, size: 16, offset: 2112)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !922, file: !923, line: 103, baseType: !130, size: 16, offset: 2128)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !922, file: !923, line: 103, baseType: !130, size: 16, offset: 2144)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !922, file: !923, line: 103, baseType: !130, size: 16, offset: 2160)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !922, file: !923, line: 106, baseType: !192, size: 32, offset: 2176)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !922, file: !923, line: 106, baseType: !192, size: 32, offset: 2208)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !922, file: !923, line: 106, baseType: !192, size: 32, offset: 2240)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !922, file: !923, line: 106, baseType: !192, size: 32, offset: 2272)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !922, file: !923, line: 107, baseType: !130, size: 16, offset: 2304)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !922, file: !923, line: 107, baseType: !130, size: 16, offset: 2320)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !922, file: !923, line: 107, baseType: !130, size: 16, offset: 2336)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !922, file: !923, line: 107, baseType: !130, size: 16, offset: 2352)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !922, file: !923, line: 108, baseType: !192, size: 32, offset: 2368)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !922, file: !923, line: 108, baseType: !192, size: 32, offset: 2400)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !922, file: !923, line: 109, baseType: !192, size: 32, offset: 2432)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !922, file: !923, line: 109, baseType: !192, size: 32, offset: 2464)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !922, file: !923, line: 110, baseType: !192, size: 32, offset: 2496)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !922, file: !923, line: 110, baseType: !192, size: 32, offset: 2528)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !922, file: !923, line: 110, baseType: !192, size: 32, offset: 2560)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !922, file: !923, line: 111, baseType: !130, size: 16, offset: 2592)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !922, file: !923, line: 111, baseType: !130, size: 16, offset: 2608)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !922, file: !923, line: 112, baseType: !130, size: 16, offset: 2624)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !922, file: !923, line: 112, baseType: !130, size: 16, offset: 2640)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !922, file: !923, line: 112, baseType: !130, size: 16, offset: 2656)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !922, file: !923, line: 115, baseType: !130, size: 16, offset: 2672)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !922, file: !923, line: 118, baseType: !191, size: 64, offset: 2688)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !922, file: !923, line: 118, baseType: !191, size: 64, offset: 2752)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !922, file: !923, line: 121, baseType: !689, size: 64, offset: 2816)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !922, file: !923, line: 122, baseType: !996, size: 1152, offset: 2880)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !997, size: 1152, elements: !1350)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !673, line: 57, size: 2496, elements: !999)
!999 = !{!1000, !1001, !1002, !1003, !1004, !1005, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !998, file: !673, line: 59, baseType: !130, size: 16)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !998, file: !673, line: 59, baseType: !130, size: 16, offset: 16)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !998, file: !673, line: 59, baseType: !130, size: 16, offset: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !998, file: !673, line: 59, baseType: !130, size: 16, offset: 48)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !998, file: !673, line: 60, baseType: !666, size: 64, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !998, file: !673, line: 61, baseType: !1006, size: 64, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !673, line: 202, size: 3328, elements: !1008)
!1008 = !{!1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1064, !1065, !1067, !1093, !1185, !1186, !1260, !1281, !1289, !1290}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1007, file: !673, line: 203, baseType: !97, size: 960)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1007, file: !673, line: 204, baseType: !671, size: 64, offset: 960)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1007, file: !673, line: 206, baseType: !192, size: 32, offset: 1024)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1007, file: !673, line: 206, baseType: !192, size: 32, offset: 1056)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1007, file: !673, line: 207, baseType: !192, size: 32, offset: 1088)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1007, file: !673, line: 207, baseType: !192, size: 32, offset: 1120)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1007, file: !673, line: 207, baseType: !192, size: 32, offset: 1152)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1007, file: !673, line: 207, baseType: !192, size: 32, offset: 1184)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1007, file: !673, line: 207, baseType: !192, size: 32, offset: 1216)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1007, file: !673, line: 207, baseType: !192, size: 32, offset: 1248)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1007, file: !673, line: 208, baseType: !192, size: 32, offset: 1280)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1007, file: !673, line: 208, baseType: !192, size: 32, offset: 1312)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1007, file: !673, line: 211, baseType: !192, size: 32, offset: 1344)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1007, file: !673, line: 211, baseType: !192, size: 32, offset: 1376)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1007, file: !673, line: 211, baseType: !192, size: 32, offset: 1408)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1007, file: !673, line: 211, baseType: !192, size: 32, offset: 1440)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1007, file: !673, line: 211, baseType: !192, size: 32, offset: 1472)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1007, file: !673, line: 214, baseType: !192, size: 32, offset: 1504)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1007, file: !673, line: 214, baseType: !192, size: 32, offset: 1536)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1007, file: !673, line: 217, baseType: !192, size: 32, offset: 1568)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1007, file: !673, line: 218, baseType: !192, size: 32, offset: 1600)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1007, file: !673, line: 219, baseType: !192, size: 32, offset: 1632)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1007, file: !673, line: 220, baseType: !192, size: 32, offset: 1664)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1007, file: !673, line: 221, baseType: !192, size: 32, offset: 1696)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1007, file: !673, line: 222, baseType: !130, size: 16, offset: 1728)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1007, file: !673, line: 222, baseType: !130, size: 16, offset: 1744)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1007, file: !673, line: 224, baseType: !130, size: 16, offset: 1760)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1007, file: !673, line: 224, baseType: !130, size: 16, offset: 1776)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1007, file: !673, line: 227, baseType: !130, size: 16, offset: 1792)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1007, file: !673, line: 227, baseType: !130, size: 16, offset: 1808)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1007, file: !673, line: 229, baseType: !130, size: 16, offset: 1824)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1007, file: !673, line: 229, baseType: !130, size: 16, offset: 1840)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1007, file: !673, line: 230, baseType: !130, size: 16, offset: 1856)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1007, file: !673, line: 230, baseType: !130, size: 16, offset: 1872)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1007, file: !673, line: 232, baseType: !192, size: 32, offset: 1888)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1007, file: !673, line: 232, baseType: !192, size: 32, offset: 1920)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1007, file: !673, line: 232, baseType: !192, size: 32, offset: 1952)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1007, file: !673, line: 232, baseType: !192, size: 32, offset: 1984)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1007, file: !673, line: 233, baseType: !132, size: 32, offset: 2016)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1007, file: !673, line: 234, baseType: !132, size: 32, offset: 2048)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1007, file: !673, line: 235, baseType: !130, size: 16, offset: 2080)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1007, file: !673, line: 235, baseType: !130, size: 16, offset: 2096)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1007, file: !673, line: 236, baseType: !130, size: 16, offset: 2112)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1007, file: !673, line: 239, baseType: !130, size: 16, offset: 2128)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1007, file: !673, line: 240, baseType: !132, size: 32, offset: 2144)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1007, file: !673, line: 241, baseType: !132, size: 32, offset: 2176)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1007, file: !673, line: 241, baseType: !132, size: 32, offset: 2208)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1007, file: !673, line: 241, baseType: !132, size: 32, offset: 2240)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1007, file: !673, line: 243, baseType: !192, size: 32, offset: 2272)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1007, file: !673, line: 243, baseType: !192, size: 32, offset: 2304)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1007, file: !673, line: 244, baseType: !192, size: 32, offset: 2336)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1007, file: !673, line: 246, baseType: !910, size: 320, offset: 2368)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1007, file: !673, line: 248, baseType: !1062, size: 64, offset: 2688)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !673, line: 248, flags: DIFlagFwdDecl)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1007, file: !673, line: 249, baseType: !689, size: 64, offset: 2752)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1007, file: !673, line: 250, baseType: !1066, size: 64, offset: 2816)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1007, file: !673, line: 251, baseType: !1068, size: 64, offset: 2880)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !673, line: 113, size: 6208, elements: !1070)
!1070 = !{!1071, !1072, !1073, !1074, !1075, !1076, !1080}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1069, file: !673, line: 114, baseType: !130, size: 16)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1069, file: !673, line: 114, baseType: !130, size: 16, offset: 16)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1069, file: !673, line: 115, baseType: !117, size: 8, offset: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1069, file: !673, line: 115, baseType: !117, size: 8, offset: 40)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1069, file: !673, line: 116, baseType: !117, size: 8, offset: 48)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1069, file: !673, line: 117, baseType: !1077, size: 8, offset: 56)
!1077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 8, elements: !1078)
!1078 = !{!1079}
!1079 = !DISubrange(count: 1)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1069, file: !673, line: 119, baseType: !1081, size: 6144, offset: 64)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1082, size: 6144, elements: !1091)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !673, line: 109, baseType: !1083)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !673, line: 106, size: 192, elements: !1084)
!1084 = !{!1085, !1086, !1087, !1088, !1089, !1090}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1083, file: !673, line: 107, baseType: !192, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1083, file: !673, line: 107, baseType: !192, size: 32, offset: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1083, file: !673, line: 107, baseType: !192, size: 32, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1083, file: !673, line: 107, baseType: !192, size: 32, offset: 96)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1083, file: !673, line: 107, baseType: !192, size: 32, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1083, file: !673, line: 108, baseType: !132, size: 32, offset: 160)
!1091 = !{!1092}
!1092 = !DISubrange(count: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1007, file: !673, line: 252, baseType: !1094, size: 64, offset: 2944)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !673, line: 122, size: 1600, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1169, !1170, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1095, file: !673, line: 123, baseType: !666, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1095, file: !673, line: 124, baseType: !1066, size: 64, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1095, file: !673, line: 125, baseType: !1100, size: 384, offset: 128)
!1100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1101, size: 384, elements: !1167)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1103, line: 70, size: 19840, elements: !1104)
!1103 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1104 = !{!1105, !1106, !1107, !1108, !1109, !1111, !1112, !1113, !1114, !1115, !1116, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1131, !1132, !1133, !1134, !1135, !1138, !1139, !1140, !1141, !1142, !1145, !1146, !1148, !1149, !1150, !1153, !1154, !1155, !1158, !1159, !1160}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1102, file: !1103, line: 71, baseType: !1101, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1102, file: !1103, line: 71, baseType: !1101, size: 64, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1102, file: !1103, line: 74, baseType: !132, size: 32, offset: 128)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1102, file: !1103, line: 74, baseType: !132, size: 32, offset: 160)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1102, file: !1103, line: 79, baseType: !1110, size: 8, offset: 192)
!1110 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1102, file: !1103, line: 80, baseType: !132, size: 32, offset: 224)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1102, file: !1103, line: 83, baseType: !132, size: 32, offset: 256)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !1102, file: !1103, line: 84, baseType: !132, size: 32, offset: 288)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1102, file: !1103, line: 87, baseType: !267, size: 64, offset: 320)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !1102, file: !1103, line: 88, baseType: !191, size: 64, offset: 384)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !1102, file: !1103, line: 93, baseType: !1117, size: 128, offset: 448)
!1117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1118, size: 128, elements: !275)
!1118 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1102, file: !1103, line: 96, baseType: !132, size: 32, offset: 576)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1102, file: !1103, line: 96, baseType: !132, size: 32, offset: 608)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !1102, file: !1103, line: 97, baseType: !132, size: 32, offset: 640)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !1102, file: !1103, line: 97, baseType: !132, size: 32, offset: 672)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !1102, file: !1103, line: 98, baseType: !614, size: 64, offset: 704)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !1102, file: !1103, line: 101, baseType: !189, size: 64, offset: 768)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !1102, file: !1103, line: 102, baseType: !191, size: 64, offset: 832)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1102, file: !1103, line: 105, baseType: !192, size: 32, offset: 896)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !1102, file: !1103, line: 108, baseType: !1128, size: 1280, offset: 960)
!1128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1101, size: 1280, elements: !1129)
!1129 = !{!1130}
!1130 = !DISubrange(count: 20)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !1102, file: !1103, line: 109, baseType: !132, size: 32, offset: 2240)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !1102, file: !1103, line: 109, baseType: !132, size: 32, offset: 2272)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1102, file: !1103, line: 112, baseType: !132, size: 32, offset: 2304)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !1102, file: !1103, line: 113, baseType: !132, size: 32, offset: 2336)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1102, file: !1103, line: 114, baseType: !1136, size: 64, offset: 2368)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !1103, line: 50, flags: DIFlagFwdDecl)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1102, file: !1103, line: 115, baseType: !90, size: 64, offset: 2432)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !1102, file: !1103, line: 118, baseType: !132, size: 32, offset: 2496)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1102, file: !1103, line: 119, baseType: !116, size: 8192, offset: 2528)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !1102, file: !1103, line: 120, baseType: !116, size: 8192, offset: 10720)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !1102, file: !1103, line: 123, baseType: !1143, size: 64, offset: 18944)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !1103, line: 123, flags: DIFlagFwdDecl)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !1102, file: !1103, line: 124, baseType: !132, size: 32, offset: 19008)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !1102, file: !1103, line: 127, baseType: !1147, size: 64, offset: 19072)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !1102, file: !1103, line: 128, baseType: !7, size: 32, offset: 19136)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !1102, file: !1103, line: 129, baseType: !7, size: 32, offset: 19168)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !1102, file: !1103, line: 132, baseType: !1151, size: 64, offset: 19200)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1103, line: 132, flags: DIFlagFwdDecl)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !1102, file: !1103, line: 133, baseType: !1151, size: 64, offset: 19264)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !1102, file: !1103, line: 134, baseType: !267, size: 64, offset: 19328)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !1102, file: !1103, line: 135, baseType: !1156, size: 64, offset: 19392)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !1103, line: 135, flags: DIFlagFwdDecl)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !1102, file: !1103, line: 136, baseType: !132, size: 32, offset: 19456)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !1102, file: !1103, line: 137, baseType: !195, size: 128, offset: 19488)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !1102, file: !1103, line: 140, baseType: !1161, size: 192, offset: 19648)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !1103, line: 55, size: 192, elements: !1162)
!1162 = !{!1163, !1164, !1165, !1166}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !1161, file: !1103, line: 56, baseType: !7, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !1161, file: !1103, line: 57, baseType: !7, size: 32, offset: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1161, file: !1103, line: 58, baseType: !1147, size: 64, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1161, file: !1103, line: 59, baseType: !7, size: 32, offset: 128)
!1167 = !{!1168}
!1168 = !DISubrange(count: 6)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1095, file: !673, line: 126, baseType: !801, size: 512, offset: 512)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1095, file: !673, line: 127, baseType: !1171, size: 288, offset: 1024)
!1171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 288, elements: !1172)
!1172 = !{!439, !439}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1095, file: !673, line: 128, baseType: !130, size: 16, offset: 1312)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1095, file: !673, line: 128, baseType: !130, size: 16, offset: 1328)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1095, file: !673, line: 129, baseType: !192, size: 32, offset: 1344)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1095, file: !673, line: 129, baseType: !192, size: 32, offset: 1376)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1095, file: !673, line: 130, baseType: !192, size: 32, offset: 1408)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1095, file: !673, line: 131, baseType: !7, size: 32, offset: 1440)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1095, file: !673, line: 132, baseType: !130, size: 16, offset: 1472)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1095, file: !673, line: 132, baseType: !130, size: 16, offset: 1488)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1095, file: !673, line: 133, baseType: !132, size: 32, offset: 1504)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1095, file: !673, line: 133, baseType: !132, size: 32, offset: 1536)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1095, file: !673, line: 134, baseType: !130, size: 16, offset: 1568)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1095, file: !673, line: 134, baseType: !130, size: 16, offset: 1584)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1007, file: !673, line: 253, baseType: !270, size: 64, offset: 3008)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1007, file: !673, line: 254, baseType: !1187, size: 64, offset: 3072)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !673, line: 137, size: 832, elements: !1189)
!1189 = !{!1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1188, file: !673, line: 138, baseType: !130, size: 16)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1188, file: !673, line: 140, baseType: !130, size: 16, offset: 16)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1188, file: !673, line: 141, baseType: !192, size: 32, offset: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1188, file: !673, line: 142, baseType: !192, size: 32, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1188, file: !673, line: 143, baseType: !130, size: 16, offset: 96)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1188, file: !673, line: 144, baseType: !130, size: 16, offset: 112)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1188, file: !673, line: 145, baseType: !132, size: 32, offset: 128)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1188, file: !673, line: 147, baseType: !132, size: 32, offset: 160)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1188, file: !673, line: 149, baseType: !666, size: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1188, file: !673, line: 150, baseType: !132, size: 32, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1188, file: !673, line: 151, baseType: !130, size: 16, offset: 288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1188, file: !673, line: 152, baseType: !130, size: 16, offset: 304)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1188, file: !673, line: 154, baseType: !90, size: 64, offset: 320)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1188, file: !673, line: 155, baseType: !191, size: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1188, file: !673, line: 157, baseType: !192, size: 32, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1188, file: !673, line: 158, baseType: !130, size: 16, offset: 480)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1188, file: !673, line: 159, baseType: !130, size: 16, offset: 496)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1188, file: !673, line: 160, baseType: !130, size: 16, offset: 512)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1188, file: !673, line: 161, baseType: !441, size: 48, offset: 528)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1188, file: !673, line: 162, baseType: !192, size: 32, offset: 576)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1188, file: !673, line: 164, baseType: !192, size: 32, offset: 608)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1188, file: !673, line: 164, baseType: !192, size: 32, offset: 640)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1188, file: !673, line: 164, baseType: !192, size: 32, offset: 672)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1188, file: !673, line: 165, baseType: !1068, size: 64, offset: 704)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1188, file: !673, line: 167, baseType: !1215, size: 64, offset: 768)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !302, line: 72, size: 3072, elements: !1217)
!1217 = !{!1218, !1219, !1220, !1221, !1222, !1230, !1231, !1256, !1257, !1258, !1259}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1216, file: !302, line: 73, baseType: !132, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1216, file: !302, line: 73, baseType: !132, size: 32, offset: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1216, file: !302, line: 74, baseType: !132, size: 32, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1216, file: !302, line: 75, baseType: !132, size: 32, offset: 96)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1216, file: !302, line: 77, baseType: !1223, size: 128, offset: 128)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !196, line: 95, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !196, line: 92, size: 128, elements: !1225)
!1225 = !{!1226, !1227, !1228, !1229}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1224, file: !196, line: 93, baseType: !192, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1224, file: !196, line: 93, baseType: !192, size: 32, offset: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1224, file: !196, line: 94, baseType: !192, size: 32, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1224, file: !196, line: 94, baseType: !192, size: 32, offset: 96)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1216, file: !302, line: 77, baseType: !1223, size: 128, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1216, file: !302, line: 79, baseType: !1232, size: 2304, offset: 384)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1233, size: 2304, elements: !296)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !302, line: 67, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !302, line: 55, size: 576, elements: !1235)
!1235 = !{!1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1252, !1253, !1254, !1255}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1234, file: !302, line: 56, baseType: !130, size: 16)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1234, file: !302, line: 56, baseType: !130, size: 16, offset: 16)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1234, file: !302, line: 58, baseType: !192, size: 32, offset: 32)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1234, file: !302, line: 59, baseType: !192, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1234, file: !302, line: 59, baseType: !192, size: 32, offset: 96)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1234, file: !302, line: 60, baseType: !906, size: 64, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1234, file: !302, line: 60, baseType: !906, size: 64, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1234, file: !302, line: 61, baseType: !1244, size: 64, offset: 256)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !302, line: 47, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !302, line: 44, size: 96, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1251}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1246, file: !302, line: 45, baseType: !192, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1246, file: !302, line: 45, baseType: !192, size: 32, offset: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1246, file: !302, line: 46, baseType: !130, size: 16, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1246, file: !302, line: 46, baseType: !130, size: 16, offset: 80)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1234, file: !302, line: 62, baseType: !1244, size: 64, offset: 320)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1234, file: !302, line: 64, baseType: !1244, size: 64, offset: 384)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1234, file: !302, line: 65, baseType: !906, size: 64, offset: 448)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1234, file: !302, line: 66, baseType: !906, size: 64, offset: 512)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1216, file: !302, line: 80, baseType: !437, size: 96, offset: 2688)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1216, file: !302, line: 80, baseType: !437, size: 96, offset: 2784)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1216, file: !302, line: 81, baseType: !437, size: 96, offset: 2880)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1216, file: !302, line: 83, baseType: !437, size: 96, offset: 2976)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1007, file: !673, line: 255, baseType: !1261, size: 64, offset: 3136)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !673, line: 170, size: 8704, elements: !1263)
!1263 = !{!1264, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1262, file: !673, line: 171, baseType: !1265, size: 96)
!1265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 96, elements: !438)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1262, file: !673, line: 172, baseType: !132, size: 32, offset: 96)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1262, file: !673, line: 173, baseType: !130, size: 16, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1262, file: !673, line: 174, baseType: !130, size: 16, offset: 144)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1262, file: !673, line: 175, baseType: !130, size: 16, offset: 160)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1262, file: !673, line: 176, baseType: !130, size: 16, offset: 176)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1262, file: !673, line: 177, baseType: !130, size: 16, offset: 192)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1262, file: !673, line: 178, baseType: !130, size: 16, offset: 208)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1262, file: !673, line: 179, baseType: !132, size: 32, offset: 224)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1262, file: !673, line: 181, baseType: !666, size: 64, offset: 256)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1262, file: !673, line: 182, baseType: !192, size: 32, offset: 320)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1262, file: !673, line: 183, baseType: !132, size: 32, offset: 352)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1262, file: !673, line: 184, baseType: !116, size: 8192, offset: 384)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1262, file: !673, line: 187, baseType: !191, size: 64, offset: 8576)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1262, file: !673, line: 188, baseType: !132, size: 32, offset: 8640)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1262, file: !673, line: 189, baseType: !132, size: 32, offset: 8672)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1007, file: !673, line: 256, baseType: !1282, size: 64, offset: 3200)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !673, line: 193, size: 640, elements: !1284)
!1284 = !{!1285, !1286, !1287, !1288}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1283, file: !673, line: 194, baseType: !666, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1283, file: !673, line: 195, baseType: !147, size: 512, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1283, file: !673, line: 197, baseType: !132, size: 32, offset: 576)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1283, file: !673, line: 198, baseType: !132, size: 32, offset: 608)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1007, file: !673, line: 258, baseType: !117, size: 8, offset: 3264)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1007, file: !673, line: 259, baseType: !308, size: 56, offset: 3272)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !998, file: !673, line: 62, baseType: !147, size: 512, offset: 192)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !998, file: !673, line: 64, baseType: !117, size: 8, offset: 704)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !998, file: !673, line: 64, baseType: !117, size: 8, offset: 712)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !998, file: !673, line: 64, baseType: !117, size: 8, offset: 720)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !998, file: !673, line: 64, baseType: !117, size: 8, offset: 728)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !998, file: !673, line: 65, baseType: !437, size: 96, offset: 736)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !998, file: !673, line: 65, baseType: !437, size: 96, offset: 832)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !998, file: !673, line: 65, baseType: !192, size: 32, offset: 928)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !998, file: !673, line: 67, baseType: !130, size: 16, offset: 960)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !998, file: !673, line: 67, baseType: !130, size: 16, offset: 976)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !998, file: !673, line: 67, baseType: !130, size: 16, offset: 992)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !998, file: !673, line: 67, baseType: !130, size: 16, offset: 1008)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !998, file: !673, line: 68, baseType: !130, size: 16, offset: 1024)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !998, file: !673, line: 68, baseType: !130, size: 16, offset: 1040)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !998, file: !673, line: 69, baseType: !117, size: 8, offset: 1056)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !998, file: !673, line: 69, baseType: !308, size: 56, offset: 1064)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !998, file: !673, line: 70, baseType: !192, size: 32, offset: 1120)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !998, file: !673, line: 70, baseType: !192, size: 32, offset: 1152)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !998, file: !673, line: 70, baseType: !192, size: 32, offset: 1184)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !998, file: !673, line: 70, baseType: !192, size: 32, offset: 1216)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !998, file: !673, line: 71, baseType: !192, size: 32, offset: 1248)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !998, file: !673, line: 71, baseType: !192, size: 32, offset: 1280)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !998, file: !673, line: 74, baseType: !192, size: 32, offset: 1312)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !998, file: !673, line: 74, baseType: !192, size: 32, offset: 1344)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !998, file: !673, line: 77, baseType: !192, size: 32, offset: 1376)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !998, file: !673, line: 77, baseType: !192, size: 32, offset: 1408)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !998, file: !673, line: 77, baseType: !192, size: 32, offset: 1440)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !998, file: !673, line: 78, baseType: !192, size: 32, offset: 1472)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !998, file: !673, line: 78, baseType: !192, size: 32, offset: 1504)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !998, file: !673, line: 78, baseType: !192, size: 32, offset: 1536)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !998, file: !673, line: 79, baseType: !192, size: 32, offset: 1568)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !998, file: !673, line: 79, baseType: !192, size: 32, offset: 1600)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !998, file: !673, line: 79, baseType: !192, size: 32, offset: 1632)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !998, file: !673, line: 79, baseType: !192, size: 32, offset: 1664)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !998, file: !673, line: 80, baseType: !192, size: 32, offset: 1696)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !998, file: !673, line: 80, baseType: !192, size: 32, offset: 1728)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !998, file: !673, line: 80, baseType: !192, size: 32, offset: 1760)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !998, file: !673, line: 81, baseType: !192, size: 32, offset: 1792)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !998, file: !673, line: 81, baseType: !192, size: 32, offset: 1824)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !998, file: !673, line: 81, baseType: !192, size: 32, offset: 1856)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !998, file: !673, line: 82, baseType: !192, size: 32, offset: 1888)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !998, file: !673, line: 82, baseType: !192, size: 32, offset: 1920)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !998, file: !673, line: 82, baseType: !192, size: 32, offset: 1952)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !998, file: !673, line: 85, baseType: !192, size: 32, offset: 1984)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !998, file: !673, line: 85, baseType: !192, size: 32, offset: 2016)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !998, file: !673, line: 85, baseType: !192, size: 32, offset: 2048)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !998, file: !673, line: 85, baseType: !192, size: 32, offset: 2080)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !998, file: !673, line: 86, baseType: !192, size: 32, offset: 2112)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !998, file: !673, line: 86, baseType: !192, size: 32, offset: 2144)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !998, file: !673, line: 86, baseType: !192, size: 32, offset: 2176)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !998, file: !673, line: 86, baseType: !192, size: 32, offset: 2208)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !998, file: !673, line: 87, baseType: !192, size: 32, offset: 2240)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !998, file: !673, line: 87, baseType: !192, size: 32, offset: 2272)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !998, file: !673, line: 87, baseType: !192, size: 32, offset: 2304)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !998, file: !673, line: 87, baseType: !192, size: 32, offset: 2336)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !998, file: !673, line: 90, baseType: !192, size: 32, offset: 2368)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !998, file: !673, line: 93, baseType: !192, size: 32, offset: 2400)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !998, file: !673, line: 93, baseType: !192, size: 32, offset: 2432)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !998, file: !673, line: 93, baseType: !192, size: 32, offset: 2464)
!1350 = !{!1351}
!1351 = !DISubrange(count: 18)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !922, file: !923, line: 123, baseType: !130, size: 16, offset: 4032)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !922, file: !923, line: 123, baseType: !130, size: 16, offset: 4048)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !922, file: !923, line: 123, baseType: !279, size: 32, offset: 4064)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !922, file: !923, line: 126, baseType: !270, size: 64, offset: 4096)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !922, file: !923, line: 129, baseType: !1062, size: 64, offset: 4160)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !914, file: !915, line: 1223, baseType: !913, size: 64, offset: 1152)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !914, file: !915, line: 1225, baseType: !157, size: 128, offset: 1216)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !914, file: !915, line: 1226, baseType: !1360, size: 64, offset: 1344)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !915, line: 69, size: 320, elements: !1362)
!1362 = !{!1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1361, file: !915, line: 70, baseType: !1360, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1361, file: !915, line: 70, baseType: !1360, size: 64, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1361, file: !915, line: 71, baseType: !7, size: 32, offset: 128)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1361, file: !915, line: 71, baseType: !7, size: 32, offset: 160)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1361, file: !915, line: 72, baseType: !132, size: 32, offset: 192)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1361, file: !915, line: 73, baseType: !130, size: 16, offset: 224)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1361, file: !915, line: 73, baseType: !130, size: 16, offset: 240)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1361, file: !915, line: 74, baseType: !666, size: 64, offset: 256)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !914, file: !915, line: 1227, baseType: !666, size: 64, offset: 1408)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !914, file: !915, line: 1229, baseType: !437, size: 96, offset: 1472)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !914, file: !915, line: 1230, baseType: !437, size: 96, offset: 1568)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !914, file: !915, line: 1231, baseType: !437, size: 96, offset: 1664)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !914, file: !915, line: 1231, baseType: !437, size: 96, offset: 1760)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !914, file: !915, line: 1233, baseType: !7, size: 32, offset: 1856)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !914, file: !915, line: 1234, baseType: !132, size: 32, offset: 1888)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !914, file: !915, line: 1235, baseType: !7, size: 32, offset: 1920)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !914, file: !915, line: 1237, baseType: !130, size: 16, offset: 1952)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !914, file: !915, line: 1239, baseType: !117, size: 8, offset: 1968)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !914, file: !915, line: 1240, baseType: !1077, size: 8, offset: 1976)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !914, file: !915, line: 1242, baseType: !1062, size: 64, offset: 1984)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !914, file: !915, line: 1244, baseType: !1384, size: 64, offset: 2048)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !915, line: 59, flags: DIFlagFwdDecl)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !914, file: !915, line: 1246, baseType: !1387, size: 64, offset: 2112)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !915, line: 1067, size: 5184, elements: !1389)
!1389 = !{!1390, !1428, !1429, !1443, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1465, !1481, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1590}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1388, file: !915, line: 1068, baseType: !1391, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !915, line: 934, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !915, line: 925, size: 576, elements: !1394)
!1394 = !{!1395, !1411, !1412, !1413, !1414, !1415, !1427}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1393, file: !915, line: 926, baseType: !1396, size: 320)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !915, line: 830, baseType: !1397)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !915, line: 813, size: 320, elements: !1398)
!1398 = !{!1399, !1402, !1405, !1406, !1408, !1409, !1410}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1397, file: !915, line: 814, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !915, line: 51, flags: DIFlagFwdDecl)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1397, file: !915, line: 815, baseType: !1403, size: 64, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !915, line: 815, flags: DIFlagFwdDecl)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1397, file: !915, line: 818, baseType: !90, size: 64, offset: 128)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1397, file: !915, line: 819, baseType: !1407, size: 32, offset: 192)
!1407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1110, size: 32, elements: !296)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1397, file: !915, line: 822, baseType: !132, size: 32, offset: 224)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1397, file: !915, line: 826, baseType: !132, size: 32, offset: 256)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1397, file: !915, line: 829, baseType: !132, size: 32, offset: 288)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1393, file: !915, line: 928, baseType: !130, size: 16, offset: 320)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1393, file: !915, line: 928, baseType: !130, size: 16, offset: 336)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1393, file: !915, line: 929, baseType: !132, size: 32, offset: 352)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1393, file: !915, line: 930, baseType: !267, size: 64, offset: 384)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1393, file: !915, line: 931, baseType: !1416, size: 64, offset: 448)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !78, line: 59, size: 128, elements: !1418)
!1418 = !{!1419, !1425, !1426}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1417, file: !78, line: 60, baseType: !1420, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !78, line: 54, size: 64, elements: !1422)
!1422 = !{!1423, !1424}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1421, file: !78, line: 55, baseType: !132, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1421, file: !78, line: 56, baseType: !192, size: 32, offset: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1417, file: !78, line: 61, baseType: !132, size: 32, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1417, file: !78, line: 62, baseType: !132, size: 32, offset: 96)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1393, file: !915, line: 933, baseType: !90, size: 64, offset: 512)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1388, file: !915, line: 1069, baseType: !1391, size: 64, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1388, file: !915, line: 1070, baseType: !1430, size: 64, offset: 128)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !915, line: 916, baseType: !1432)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !915, line: 891, size: 704, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1432, file: !915, line: 892, baseType: !1396, size: 320)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1432, file: !915, line: 896, baseType: !132, size: 32, offset: 320)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1432, file: !915, line: 900, baseType: !1265, size: 96, offset: 352)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1432, file: !915, line: 903, baseType: !192, size: 32, offset: 448)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1432, file: !915, line: 906, baseType: !132, size: 32, offset: 480)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1432, file: !915, line: 909, baseType: !192, size: 32, offset: 512)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1432, file: !915, line: 912, baseType: !192, size: 32, offset: 544)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1432, file: !915, line: 914, baseType: !666, size: 64, offset: 576)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1432, file: !915, line: 915, baseType: !90, size: 64, offset: 640)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1388, file: !915, line: 1071, baseType: !1444, size: 64, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !915, line: 920, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !915, line: 918, size: 320, elements: !1447)
!1447 = !{!1448}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1446, file: !915, line: 919, baseType: !1396, size: 320)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1388, file: !915, line: 1075, baseType: !192, size: 32, offset: 256)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1388, file: !915, line: 1077, baseType: !192, size: 32, offset: 288)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1388, file: !915, line: 1078, baseType: !192, size: 32, offset: 320)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1388, file: !915, line: 1079, baseType: !130, size: 16, offset: 352)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1388, file: !915, line: 1082, baseType: !130, size: 16, offset: 368)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1388, file: !915, line: 1085, baseType: !117, size: 8, offset: 384)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1388, file: !915, line: 1086, baseType: !117, size: 8, offset: 392)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1388, file: !915, line: 1087, baseType: !117, size: 8, offset: 400)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1388, file: !915, line: 1088, baseType: !117, size: 8, offset: 408)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1388, file: !915, line: 1090, baseType: !192, size: 32, offset: 416)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1388, file: !915, line: 1093, baseType: !130, size: 16, offset: 448)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1388, file: !915, line: 1096, baseType: !117, size: 8, offset: 464)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1388, file: !915, line: 1098, baseType: !1462, size: 40, offset: 472)
!1462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 40, elements: !1463)
!1463 = !{!1464}
!1464 = !DISubrange(count: 5)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1388, file: !915, line: 1101, baseType: !1466, size: 832, offset: 512)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !915, line: 836, size: 832, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1466, file: !915, line: 837, baseType: !1396, size: 320)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1466, file: !915, line: 839, baseType: !130, size: 16, offset: 320)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1466, file: !915, line: 839, baseType: !130, size: 16, offset: 336)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1466, file: !915, line: 842, baseType: !130, size: 16, offset: 352)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1466, file: !915, line: 842, baseType: !130, size: 16, offset: 368)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1466, file: !915, line: 843, baseType: !279, size: 32, offset: 384)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1466, file: !915, line: 845, baseType: !132, size: 32, offset: 416)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1466, file: !915, line: 847, baseType: !90, size: 64, offset: 448)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1466, file: !915, line: 848, baseType: !1066, size: 64, offset: 512)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1466, file: !915, line: 849, baseType: !1066, size: 64, offset: 576)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1466, file: !915, line: 850, baseType: !1066, size: 64, offset: 640)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1466, file: !915, line: 851, baseType: !437, size: 96, offset: 704)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1466, file: !915, line: 852, baseType: !192, size: 32, offset: 800)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1388, file: !915, line: 1104, baseType: !1482, size: 1344, offset: 1344)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !915, line: 867, size: 1344, elements: !1483)
!1483 = !{!1484, !1485, !1486, !1487, !1488, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1482, file: !915, line: 868, baseType: !130, size: 16)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1482, file: !915, line: 869, baseType: !130, size: 16, offset: 16)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1482, file: !915, line: 870, baseType: !130, size: 16, offset: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1482, file: !915, line: 871, baseType: !130, size: 16, offset: 48)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1482, file: !915, line: 873, baseType: !1489, size: 896, offset: 64)
!1489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1490, size: 896, elements: !309)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !915, line: 864, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !915, line: 859, size: 128, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1491, file: !915, line: 860, baseType: !130, size: 16)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1491, file: !915, line: 861, baseType: !130, size: 16, offset: 16)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1491, file: !915, line: 861, baseType: !130, size: 16, offset: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1491, file: !915, line: 861, baseType: !130, size: 16, offset: 48)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1491, file: !915, line: 862, baseType: !132, size: 32, offset: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1491, file: !915, line: 863, baseType: !192, size: 32, offset: 96)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1482, file: !915, line: 874, baseType: !90, size: 64, offset: 960)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1482, file: !915, line: 876, baseType: !192, size: 32, offset: 1024)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1482, file: !915, line: 876, baseType: !192, size: 32, offset: 1056)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1482, file: !915, line: 878, baseType: !132, size: 32, offset: 1088)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1482, file: !915, line: 879, baseType: !132, size: 32, offset: 1120)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1482, file: !915, line: 881, baseType: !132, size: 32, offset: 1152)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1482, file: !915, line: 881, baseType: !132, size: 32, offset: 1184)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1482, file: !915, line: 883, baseType: !913, size: 64, offset: 1216)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1482, file: !915, line: 884, baseType: !666, size: 64, offset: 1280)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1388, file: !915, line: 1107, baseType: !192, size: 32, offset: 2688)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1388, file: !915, line: 1110, baseType: !192, size: 32, offset: 2720)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1388, file: !915, line: 1113, baseType: !130, size: 16, offset: 2752)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1388, file: !915, line: 1113, baseType: !130, size: 16, offset: 2768)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1388, file: !915, line: 1116, baseType: !117, size: 8, offset: 2784)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1388, file: !915, line: 1117, baseType: !1077, size: 8, offset: 2792)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1388, file: !915, line: 1120, baseType: !130, size: 16, offset: 2800)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1388, file: !915, line: 1121, baseType: !192, size: 32, offset: 2816)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1388, file: !915, line: 1122, baseType: !192, size: 32, offset: 2848)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1388, file: !915, line: 1123, baseType: !192, size: 32, offset: 2880)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1388, file: !915, line: 1124, baseType: !192, size: 32, offset: 2912)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1388, file: !915, line: 1125, baseType: !192, size: 32, offset: 2944)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1388, file: !915, line: 1126, baseType: !192, size: 32, offset: 2976)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1388, file: !915, line: 1127, baseType: !192, size: 32, offset: 3008)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1388, file: !915, line: 1128, baseType: !192, size: 32, offset: 3040)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1388, file: !915, line: 1129, baseType: !192, size: 32, offset: 3072)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1388, file: !915, line: 1130, baseType: !192, size: 32, offset: 3104)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1388, file: !915, line: 1131, baseType: !130, size: 16, offset: 3136)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1388, file: !915, line: 1132, baseType: !117, size: 8, offset: 3152)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1388, file: !915, line: 1133, baseType: !117, size: 8, offset: 3160)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1388, file: !915, line: 1134, baseType: !1529, size: 24, offset: 3168)
!1529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 24, elements: !438)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1388, file: !915, line: 1135, baseType: !117, size: 8, offset: 3192)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1388, file: !915, line: 1138, baseType: !666, size: 64, offset: 3200)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1388, file: !915, line: 1139, baseType: !117, size: 8, offset: 3264)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1388, file: !915, line: 1140, baseType: !117, size: 8, offset: 3272)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1388, file: !915, line: 1141, baseType: !117, size: 8, offset: 3280)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1388, file: !915, line: 1142, baseType: !117, size: 8, offset: 3288)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1388, file: !915, line: 1143, baseType: !117, size: 8, offset: 3296)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1388, file: !915, line: 1144, baseType: !1538, size: 64, offset: 3304)
!1538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 64, elements: !250)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1388, file: !915, line: 1145, baseType: !1538, size: 64, offset: 3368)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1388, file: !915, line: 1148, baseType: !117, size: 8, offset: 3432)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1388, file: !915, line: 1149, baseType: !117, size: 8, offset: 3440)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1388, file: !915, line: 1152, baseType: !117, size: 8, offset: 3448)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1388, file: !915, line: 1152, baseType: !117, size: 8, offset: 3456)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1388, file: !915, line: 1153, baseType: !117, size: 8, offset: 3464)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1388, file: !915, line: 1154, baseType: !130, size: 16, offset: 3472)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1388, file: !915, line: 1154, baseType: !130, size: 16, offset: 3488)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1388, file: !915, line: 1155, baseType: !130, size: 16, offset: 3504)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1388, file: !915, line: 1155, baseType: !130, size: 16, offset: 3520)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1388, file: !915, line: 1156, baseType: !117, size: 8, offset: 3536)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1388, file: !915, line: 1157, baseType: !117, size: 8, offset: 3544)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1388, file: !915, line: 1159, baseType: !117, size: 8, offset: 3552)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1388, file: !915, line: 1160, baseType: !117, size: 8, offset: 3560)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1388, file: !915, line: 1161, baseType: !117, size: 8, offset: 3568)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1388, file: !915, line: 1162, baseType: !117, size: 8, offset: 3576)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1388, file: !915, line: 1165, baseType: !132, size: 32, offset: 3584)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1388, file: !915, line: 1166, baseType: !132, size: 32, offset: 3616)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1388, file: !915, line: 1167, baseType: !132, size: 32, offset: 3648)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1388, file: !915, line: 1168, baseType: !132, size: 32, offset: 3680)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1388, file: !915, line: 1171, baseType: !130, size: 16, offset: 3712)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1388, file: !915, line: 1171, baseType: !130, size: 16, offset: 3728)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1388, file: !915, line: 1172, baseType: !132, size: 32, offset: 3744)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1388, file: !915, line: 1173, baseType: !192, size: 32, offset: 3776)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1388, file: !915, line: 1174, baseType: !192, size: 32, offset: 3808)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1388, file: !915, line: 1177, baseType: !1565, size: 1024, offset: 3840)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !915, line: 963, size: 1024, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1565, file: !915, line: 965, baseType: !132, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1565, file: !915, line: 968, baseType: !192, size: 32, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1565, file: !915, line: 971, baseType: !192, size: 32, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1565, file: !915, line: 974, baseType: !192, size: 32, offset: 96)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1565, file: !915, line: 977, baseType: !437, size: 96, offset: 128)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1565, file: !915, line: 979, baseType: !437, size: 96, offset: 224)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1565, file: !915, line: 982, baseType: !132, size: 32, offset: 320)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1565, file: !915, line: 987, baseType: !906, size: 64, offset: 352)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1565, file: !915, line: 989, baseType: !192, size: 32, offset: 416)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1565, file: !915, line: 994, baseType: !132, size: 32, offset: 448)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1565, file: !915, line: 995, baseType: !132, size: 32, offset: 480)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1565, file: !915, line: 997, baseType: !117, size: 8, offset: 512)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1565, file: !915, line: 998, baseType: !308, size: 56, offset: 520)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1565, file: !915, line: 1000, baseType: !192, size: 32, offset: 576)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1565, file: !915, line: 1003, baseType: !906, size: 64, offset: 608)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1565, file: !915, line: 1006, baseType: !132, size: 32, offset: 672)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1565, file: !915, line: 1009, baseType: !192, size: 32, offset: 704)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1565, file: !915, line: 1012, baseType: !906, size: 64, offset: 736)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1565, file: !915, line: 1015, baseType: !906, size: 64, offset: 800)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1565, file: !915, line: 1018, baseType: !132, size: 32, offset: 864)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1565, file: !915, line: 1019, baseType: !1151, size: 64, offset: 896)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1565, file: !915, line: 1023, baseType: !192, size: 32, offset: 960)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1565, file: !915, line: 1024, baseType: !132, size: 32, offset: 992)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1388, file: !915, line: 1179, baseType: !1591, size: 320, offset: 4864)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !915, line: 1043, size: 320, elements: !1592)
!1592 = !{!1593, !1594, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1591, file: !915, line: 1044, baseType: !117, size: 8)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1591, file: !915, line: 1045, baseType: !1595, size: 16, offset: 8)
!1595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 16, elements: !275)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1591, file: !915, line: 1048, baseType: !117, size: 8, offset: 24)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1591, file: !915, line: 1049, baseType: !192, size: 32, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1591, file: !915, line: 1049, baseType: !192, size: 32, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1591, file: !915, line: 1052, baseType: !192, size: 32, offset: 96)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1591, file: !915, line: 1052, baseType: !192, size: 32, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1591, file: !915, line: 1053, baseType: !117, size: 8, offset: 160)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1591, file: !915, line: 1054, baseType: !1529, size: 24, offset: 168)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1591, file: !915, line: 1057, baseType: !192, size: 32, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1591, file: !915, line: 1057, baseType: !192, size: 32, offset: 224)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1591, file: !915, line: 1060, baseType: !192, size: 32, offset: 256)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1591, file: !915, line: 1060, baseType: !192, size: 32, offset: 288)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !914, file: !915, line: 1247, baseType: !1608, size: 64, offset: 2176)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !915, line: 60, flags: DIFlagFwdDecl)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !914, file: !915, line: 1251, baseType: !1611, size: 31872, offset: 2240)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !915, line: 403, size: 31872, elements: !1612)
!1612 = !{!1613, !1648, !1668, !1677, !1697, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1831, !1832, !1833, !1835, !1851, !1852}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1611, file: !915, line: 404, baseType: !1614, size: 1984)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !915, line: 259, size: 1984, elements: !1615)
!1615 = !{!1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1631, !1643}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1614, file: !915, line: 260, baseType: !117, size: 8)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1614, file: !915, line: 263, baseType: !117, size: 8, offset: 8)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1614, file: !915, line: 266, baseType: !117, size: 8, offset: 16)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1614, file: !915, line: 267, baseType: !117, size: 8, offset: 24)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1614, file: !915, line: 269, baseType: !117, size: 8, offset: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1614, file: !915, line: 270, baseType: !117, size: 8, offset: 40)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1614, file: !915, line: 276, baseType: !117, size: 8, offset: 48)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1614, file: !915, line: 279, baseType: !117, size: 8, offset: 56)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1614, file: !915, line: 280, baseType: !130, size: 16, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1614, file: !915, line: 280, baseType: !130, size: 16, offset: 80)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1614, file: !915, line: 281, baseType: !192, size: 32, offset: 96)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1614, file: !915, line: 284, baseType: !117, size: 8, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1614, file: !915, line: 285, baseType: !117, size: 8, offset: 136)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1614, file: !915, line: 287, baseType: !1630, size: 48, offset: 144)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 48, elements: !1167)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1614, file: !915, line: 290, baseType: !1632, size: 1280, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !302, line: 174, baseType: !1633)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !302, line: 166, size: 1280, elements: !1634)
!1634 = !{!1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1633, file: !302, line: 167, baseType: !132, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1633, file: !302, line: 167, baseType: !132, size: 32, offset: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1633, file: !302, line: 168, baseType: !147, size: 512, offset: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1633, file: !302, line: 169, baseType: !147, size: 512, offset: 576)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1633, file: !302, line: 170, baseType: !192, size: 32, offset: 1088)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1633, file: !302, line: 171, baseType: !192, size: 32, offset: 1120)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1633, file: !302, line: 172, baseType: !1215, size: 64, offset: 1152)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1633, file: !302, line: 173, baseType: !90, size: 64, offset: 1216)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1614, file: !915, line: 291, baseType: !1644, size: 512, offset: 1472)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !302, line: 178, baseType: !1645)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !302, line: 176, size: 512, elements: !1646)
!1646 = !{!1647}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1645, file: !302, line: 177, baseType: !147, size: 512)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1611, file: !915, line: 406, baseType: !1649, size: 64, offset: 1984)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !915, line: 80, size: 1472, elements: !1651)
!1651 = !{!1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1650, file: !915, line: 81, baseType: !90, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1650, file: !915, line: 82, baseType: !90, size: 64, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1650, file: !915, line: 83, baseType: !7, size: 32, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1650, file: !915, line: 84, baseType: !7, size: 32, offset: 160)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1650, file: !915, line: 86, baseType: !7, size: 32, offset: 192)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1650, file: !915, line: 87, baseType: !7, size: 32, offset: 224)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1650, file: !915, line: 88, baseType: !7, size: 32, offset: 256)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1650, file: !915, line: 89, baseType: !7, size: 32, offset: 288)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1650, file: !915, line: 90, baseType: !7, size: 32, offset: 320)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1650, file: !915, line: 91, baseType: !7, size: 32, offset: 352)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1650, file: !915, line: 92, baseType: !7, size: 32, offset: 384)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1650, file: !915, line: 93, baseType: !7, size: 32, offset: 416)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1650, file: !915, line: 95, baseType: !1665, size: 1024, offset: 448)
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 1024, elements: !1666)
!1666 = !{!1667}
!1667 = !DISubrange(count: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1611, file: !915, line: 407, baseType: !1669, size: 64, offset: 2048)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !915, line: 98, size: 1216, elements: !1671)
!1671 = !{!1672, !1673, !1674, !1675, !1676}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1670, file: !915, line: 100, baseType: !90, size: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1670, file: !915, line: 101, baseType: !90, size: 64, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1670, file: !915, line: 103, baseType: !7, size: 32, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1670, file: !915, line: 104, baseType: !7, size: 32, offset: 160)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1670, file: !915, line: 106, baseType: !1665, size: 1024, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1611, file: !915, line: 408, baseType: !1678, size: 512, offset: 2112)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !915, line: 109, size: 512, elements: !1679)
!1679 = !{!1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1678, file: !915, line: 111, baseType: !132, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1678, file: !915, line: 112, baseType: !132, size: 32, offset: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1678, file: !915, line: 115, baseType: !132, size: 32, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1678, file: !915, line: 116, baseType: !132, size: 32, offset: 96)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1678, file: !915, line: 117, baseType: !132, size: 32, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1678, file: !915, line: 118, baseType: !132, size: 32, offset: 160)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1678, file: !915, line: 119, baseType: !132, size: 32, offset: 192)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1678, file: !915, line: 120, baseType: !132, size: 32, offset: 224)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1678, file: !915, line: 121, baseType: !132, size: 32, offset: 256)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1678, file: !915, line: 122, baseType: !132, size: 32, offset: 288)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1678, file: !915, line: 125, baseType: !132, size: 32, offset: 320)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1678, file: !915, line: 126, baseType: !132, size: 32, offset: 352)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1678, file: !915, line: 127, baseType: !130, size: 16, offset: 384)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1678, file: !915, line: 128, baseType: !130, size: 16, offset: 400)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1678, file: !915, line: 129, baseType: !132, size: 32, offset: 416)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1678, file: !915, line: 130, baseType: !132, size: 32, offset: 448)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1678, file: !915, line: 131, baseType: !132, size: 32, offset: 480)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1611, file: !915, line: 409, baseType: !1698, size: 576, offset: 2624)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !915, line: 134, size: 576, elements: !1699)
!1699 = !{!1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1698, file: !915, line: 135, baseType: !132, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1698, file: !915, line: 136, baseType: !132, size: 32, offset: 32)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1698, file: !915, line: 137, baseType: !132, size: 32, offset: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1698, file: !915, line: 138, baseType: !132, size: 32, offset: 96)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1698, file: !915, line: 139, baseType: !132, size: 32, offset: 128)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1698, file: !915, line: 140, baseType: !132, size: 32, offset: 160)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1698, file: !915, line: 141, baseType: !132, size: 32, offset: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1698, file: !915, line: 142, baseType: !132, size: 32, offset: 224)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1698, file: !915, line: 143, baseType: !192, size: 32, offset: 256)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1698, file: !915, line: 144, baseType: !132, size: 32, offset: 288)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1698, file: !915, line: 145, baseType: !132, size: 32, offset: 320)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1698, file: !915, line: 147, baseType: !132, size: 32, offset: 352)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1698, file: !915, line: 148, baseType: !132, size: 32, offset: 384)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1698, file: !915, line: 149, baseType: !132, size: 32, offset: 416)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1698, file: !915, line: 150, baseType: !132, size: 32, offset: 448)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1698, file: !915, line: 151, baseType: !132, size: 32, offset: 480)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1698, file: !915, line: 152, baseType: !136, size: 64, offset: 512)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1611, file: !915, line: 411, baseType: !132, size: 32, offset: 3200)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1611, file: !915, line: 411, baseType: !132, size: 32, offset: 3232)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1611, file: !915, line: 411, baseType: !132, size: 32, offset: 3264)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1611, file: !915, line: 412, baseType: !192, size: 32, offset: 3296)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1611, file: !915, line: 413, baseType: !132, size: 32, offset: 3328)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1611, file: !915, line: 413, baseType: !132, size: 32, offset: 3360)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1611, file: !915, line: 415, baseType: !132, size: 32, offset: 3392)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1611, file: !915, line: 415, baseType: !132, size: 32, offset: 3424)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1611, file: !915, line: 416, baseType: !130, size: 16, offset: 3456)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1611, file: !915, line: 416, baseType: !130, size: 16, offset: 3472)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1611, file: !915, line: 418, baseType: !192, size: 32, offset: 3488)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1611, file: !915, line: 418, baseType: !192, size: 32, offset: 3520)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1611, file: !915, line: 421, baseType: !192, size: 32, offset: 3552)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1611, file: !915, line: 421, baseType: !192, size: 32, offset: 3584)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1611, file: !915, line: 421, baseType: !192, size: 32, offset: 3616)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1611, file: !915, line: 425, baseType: !130, size: 16, offset: 3648)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1611, file: !915, line: 425, baseType: !130, size: 16, offset: 3664)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1611, file: !915, line: 425, baseType: !130, size: 16, offset: 3680)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1611, file: !915, line: 426, baseType: !130, size: 16, offset: 3696)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1611, file: !915, line: 428, baseType: !130, size: 16, offset: 3712)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1611, file: !915, line: 428, baseType: !130, size: 16, offset: 3728)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1611, file: !915, line: 431, baseType: !132, size: 32, offset: 3744)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1611, file: !915, line: 433, baseType: !130, size: 16, offset: 3776)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1611, file: !915, line: 435, baseType: !130, size: 16, offset: 3792)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1611, file: !915, line: 437, baseType: !130, size: 16, offset: 3808)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1611, file: !915, line: 439, baseType: !130, size: 16, offset: 3824)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1611, file: !915, line: 441, baseType: !130, size: 16, offset: 3840)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1611, file: !915, line: 443, baseType: !130, size: 16, offset: 3856)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1611, file: !915, line: 449, baseType: !132, size: 32, offset: 3872)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1611, file: !915, line: 453, baseType: !132, size: 32, offset: 3904)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1611, file: !915, line: 458, baseType: !130, size: 16, offset: 3936)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1611, file: !915, line: 462, baseType: !130, size: 16, offset: 3952)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1611, file: !915, line: 467, baseType: !132, size: 32, offset: 3968)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1611, file: !915, line: 467, baseType: !132, size: 32, offset: 4000)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1611, file: !915, line: 469, baseType: !130, size: 16, offset: 4032)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1611, file: !915, line: 469, baseType: !130, size: 16, offset: 4048)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1611, file: !915, line: 469, baseType: !130, size: 16, offset: 4064)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1611, file: !915, line: 469, baseType: !130, size: 16, offset: 4080)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1611, file: !915, line: 474, baseType: !130, size: 16, offset: 4096)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1611, file: !915, line: 475, baseType: !117, size: 8, offset: 4112)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1611, file: !915, line: 476, baseType: !117, size: 8, offset: 4120)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1611, file: !915, line: 481, baseType: !132, size: 32, offset: 4128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1611, file: !915, line: 486, baseType: !132, size: 32, offset: 4160)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1611, file: !915, line: 491, baseType: !132, size: 32, offset: 4192)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1611, file: !915, line: 496, baseType: !130, size: 16, offset: 4224)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1611, file: !915, line: 498, baseType: !130, size: 16, offset: 4240)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1611, file: !915, line: 501, baseType: !130, size: 16, offset: 4256)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1611, file: !915, line: 502, baseType: !130, size: 16, offset: 4272)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1611, file: !915, line: 508, baseType: !130, size: 16, offset: 4288)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1611, file: !915, line: 513, baseType: !130, size: 16, offset: 4304)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1611, file: !915, line: 515, baseType: !130, size: 16, offset: 4320)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1611, file: !915, line: 515, baseType: !130, size: 16, offset: 4336)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1611, file: !915, line: 519, baseType: !1223, size: 128, offset: 4352)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1611, file: !915, line: 519, baseType: !1223, size: 128, offset: 4480)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1611, file: !915, line: 520, baseType: !195, size: 128, offset: 4608)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1611, file: !915, line: 523, baseType: !157, size: 128, offset: 4736)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1611, file: !915, line: 524, baseType: !130, size: 16, offset: 4864)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1611, file: !915, line: 527, baseType: !130, size: 16, offset: 4880)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1611, file: !915, line: 532, baseType: !192, size: 32, offset: 4896)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1611, file: !915, line: 532, baseType: !192, size: 32, offset: 4928)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1611, file: !915, line: 534, baseType: !192, size: 32, offset: 4960)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1611, file: !915, line: 538, baseType: !192, size: 32, offset: 4992)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1611, file: !915, line: 542, baseType: !132, size: 32, offset: 5024)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1611, file: !915, line: 545, baseType: !192, size: 32, offset: 5056)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1611, file: !915, line: 545, baseType: !192, size: 32, offset: 5088)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1611, file: !915, line: 545, baseType: !192, size: 32, offset: 5120)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1611, file: !915, line: 548, baseType: !192, size: 32, offset: 5152)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1611, file: !915, line: 551, baseType: !130, size: 16, offset: 5184)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1611, file: !915, line: 551, baseType: !130, size: 16, offset: 5200)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1611, file: !915, line: 551, baseType: !130, size: 16, offset: 5216)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1611, file: !915, line: 551, baseType: !130, size: 16, offset: 5232)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1611, file: !915, line: 552, baseType: !130, size: 16, offset: 5248)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1611, file: !915, line: 552, baseType: !130, size: 16, offset: 5264)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1611, file: !915, line: 553, baseType: !192, size: 32, offset: 5280)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1611, file: !915, line: 553, baseType: !192, size: 32, offset: 5312)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1611, file: !915, line: 554, baseType: !130, size: 16, offset: 5344)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1611, file: !915, line: 554, baseType: !130, size: 16, offset: 5360)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1611, file: !915, line: 555, baseType: !192, size: 32, offset: 5376)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1611, file: !915, line: 555, baseType: !192, size: 32, offset: 5408)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1611, file: !915, line: 558, baseType: !116, size: 8192, offset: 5440)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1611, file: !915, line: 561, baseType: !132, size: 32, offset: 13632)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1611, file: !915, line: 562, baseType: !130, size: 16, offset: 13664)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1611, file: !915, line: 562, baseType: !130, size: 16, offset: 13680)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1611, file: !915, line: 565, baseType: !1801, size: 6144, offset: 13696)
!1801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 6144, elements: !1802)
!1802 = !{!1803}
!1803 = !DISubrange(count: 768)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1611, file: !915, line: 568, baseType: !295, size: 128, offset: 19840)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1611, file: !915, line: 569, baseType: !295, size: 128, offset: 19968)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1611, file: !915, line: 572, baseType: !117, size: 8, offset: 20096)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1611, file: !915, line: 573, baseType: !117, size: 8, offset: 20104)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1611, file: !915, line: 574, baseType: !117, size: 8, offset: 20112)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1611, file: !915, line: 575, baseType: !1462, size: 40, offset: 20120)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1611, file: !915, line: 578, baseType: !132, size: 32, offset: 20160)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1611, file: !915, line: 579, baseType: !130, size: 16, offset: 20192)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1611, file: !915, line: 580, baseType: !130, size: 16, offset: 20208)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1611, file: !915, line: 581, baseType: !192, size: 32, offset: 20224)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1611, file: !915, line: 582, baseType: !192, size: 32, offset: 20256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1611, file: !915, line: 585, baseType: !130, size: 16, offset: 20288)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1611, file: !915, line: 585, baseType: !130, size: 16, offset: 20304)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1611, file: !915, line: 586, baseType: !192, size: 32, offset: 20320)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1611, file: !915, line: 589, baseType: !130, size: 16, offset: 20352)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1611, file: !915, line: 589, baseType: !130, size: 16, offset: 20368)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1611, file: !915, line: 590, baseType: !132, size: 32, offset: 20384)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1611, file: !915, line: 593, baseType: !130, size: 16, offset: 20416)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1611, file: !915, line: 593, baseType: !130, size: 16, offset: 20432)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1611, file: !915, line: 594, baseType: !130, size: 16, offset: 20448)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1611, file: !915, line: 594, baseType: !130, size: 16, offset: 20464)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1611, file: !915, line: 595, baseType: !192, size: 32, offset: 20480)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1611, file: !915, line: 596, baseType: !192, size: 32, offset: 20512)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1611, file: !915, line: 597, baseType: !1828, size: 64, offset: 20544)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1830, line: 44, flags: DIFlagFwdDecl)
!1830 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1611, file: !915, line: 600, baseType: !132, size: 32, offset: 20608)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1611, file: !915, line: 601, baseType: !192, size: 32, offset: 20640)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1611, file: !915, line: 604, baseType: !1834, size: 256, offset: 20672)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 256, elements: !1091)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1611, file: !915, line: 607, baseType: !1836, size: 10880, offset: 20928)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !915, line: 364, size: 10880, elements: !1837)
!1837 = !{!1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1836, file: !915, line: 365, baseType: !1614, size: 1984)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1836, file: !915, line: 367, baseType: !116, size: 8192, offset: 1984)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1836, file: !915, line: 369, baseType: !130, size: 16, offset: 10176)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1836, file: !915, line: 369, baseType: !130, size: 16, offset: 10192)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1836, file: !915, line: 370, baseType: !130, size: 16, offset: 10208)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1836, file: !915, line: 370, baseType: !130, size: 16, offset: 10224)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1836, file: !915, line: 372, baseType: !192, size: 32, offset: 10240)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1836, file: !915, line: 373, baseType: !192, size: 32, offset: 10272)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1836, file: !915, line: 375, baseType: !1529, size: 24, offset: 10304)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1836, file: !915, line: 376, baseType: !117, size: 8, offset: 10328)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1836, file: !915, line: 378, baseType: !117, size: 8, offset: 10336)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1836, file: !915, line: 379, baseType: !1529, size: 24, offset: 10344)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1836, file: !915, line: 381, baseType: !147, size: 512, offset: 10368)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1611, file: !915, line: 609, baseType: !132, size: 32, offset: 31808)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1611, file: !915, line: 610, baseType: !132, size: 32, offset: 31840)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !914, file: !915, line: 1252, baseType: !1854, size: 256, offset: 34112)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !915, line: 158, size: 256, elements: !1855)
!1855 = !{!1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1854, file: !915, line: 159, baseType: !132, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1854, file: !915, line: 160, baseType: !192, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1854, file: !915, line: 161, baseType: !192, size: 32, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1854, file: !915, line: 162, baseType: !192, size: 32, offset: 96)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1854, file: !915, line: 163, baseType: !132, size: 32, offset: 128)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1854, file: !915, line: 164, baseType: !130, size: 16, offset: 160)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1854, file: !915, line: 165, baseType: !130, size: 16, offset: 176)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1854, file: !915, line: 166, baseType: !192, size: 32, offset: 192)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1854, file: !915, line: 167, baseType: !192, size: 32, offset: 224)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !914, file: !915, line: 1254, baseType: !157, size: 128, offset: 34368)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !914, file: !915, line: 1255, baseType: !157, size: 128, offset: 34496)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !914, file: !915, line: 1257, baseType: !90, size: 64, offset: 34624)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !914, file: !915, line: 1258, baseType: !90, size: 64, offset: 34688)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !914, file: !915, line: 1259, baseType: !90, size: 64, offset: 34752)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !914, file: !915, line: 1260, baseType: !90, size: 64, offset: 34816)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !914, file: !915, line: 1262, baseType: !90, size: 64, offset: 34880)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !914, file: !915, line: 1265, baseType: !1873, size: 64, offset: 34944)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1875, line: 37, flags: DIFlagFwdDecl)
!1875 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_modifier.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !914, file: !915, line: 1266, baseType: !130, size: 16, offset: 35008)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !914, file: !915, line: 1267, baseType: !130, size: 16, offset: 35024)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !914, file: !915, line: 1270, baseType: !132, size: 32, offset: 35040)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !914, file: !915, line: 1271, baseType: !157, size: 128, offset: 35072)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !914, file: !915, line: 1274, baseType: !1881, size: 128, offset: 35200)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !915, line: 650, size: 128, elements: !1882)
!1882 = !{!1883, !1884, !1885, !1886, !1887}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1881, file: !915, line: 651, baseType: !437, size: 96)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1881, file: !915, line: 652, baseType: !117, size: 8, offset: 96)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1881, file: !915, line: 652, baseType: !117, size: 8, offset: 104)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1881, file: !915, line: 652, baseType: !117, size: 8, offset: 112)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1881, file: !915, line: 652, baseType: !117, size: 8, offset: 120)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !914, file: !915, line: 1275, baseType: !1889, size: 1472, offset: 35328)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !915, line: 676, size: 1472, elements: !1890)
!1890 = !{!1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1912, !1913, !1914, !1915, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1889, file: !915, line: 679, baseType: !1881, size: 128)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1889, file: !915, line: 680, baseType: !130, size: 16, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1889, file: !915, line: 680, baseType: !130, size: 16, offset: 144)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1889, file: !915, line: 680, baseType: !130, size: 16, offset: 160)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1889, file: !915, line: 680, baseType: !130, size: 16, offset: 176)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1889, file: !915, line: 681, baseType: !130, size: 16, offset: 192)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1889, file: !915, line: 681, baseType: !130, size: 16, offset: 208)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1889, file: !915, line: 681, baseType: !130, size: 16, offset: 224)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1889, file: !915, line: 681, baseType: !130, size: 16, offset: 240)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1889, file: !915, line: 682, baseType: !130, size: 16, offset: 256)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1889, file: !915, line: 682, baseType: !441, size: 48, offset: 272)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1889, file: !915, line: 685, baseType: !1903, size: 192, offset: 320)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !915, line: 633, size: 192, elements: !1904)
!1904 = !{!1905, !1906, !1907, !1908, !1909, !1910, !1911}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1903, file: !915, line: 634, baseType: !130, size: 16)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1903, file: !915, line: 634, baseType: !130, size: 16, offset: 16)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1903, file: !915, line: 635, baseType: !130, size: 16, offset: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1903, file: !915, line: 635, baseType: !130, size: 16, offset: 48)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1903, file: !915, line: 636, baseType: !192, size: 32, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1903, file: !915, line: 636, baseType: !192, size: 32, offset: 96)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1903, file: !915, line: 637, baseType: !1828, size: 64, offset: 128)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1889, file: !915, line: 686, baseType: !130, size: 16, offset: 512)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1889, file: !915, line: 686, baseType: !130, size: 16, offset: 528)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1889, file: !915, line: 687, baseType: !192, size: 32, offset: 544)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1889, file: !915, line: 688, baseType: !1916, size: 448, offset: 576)
!1916 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !915, line: 674, baseType: !1917)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !915, line: 659, size: 448, elements: !1918)
!1918 = !{!1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1917, file: !915, line: 660, baseType: !192, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1917, file: !915, line: 661, baseType: !192, size: 32, offset: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1917, file: !915, line: 662, baseType: !192, size: 32, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1917, file: !915, line: 663, baseType: !192, size: 32, offset: 96)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1917, file: !915, line: 664, baseType: !192, size: 32, offset: 128)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1917, file: !915, line: 665, baseType: !192, size: 32, offset: 160)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1917, file: !915, line: 666, baseType: !192, size: 32, offset: 192)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1917, file: !915, line: 667, baseType: !192, size: 32, offset: 224)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1917, file: !915, line: 668, baseType: !192, size: 32, offset: 256)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1917, file: !915, line: 669, baseType: !192, size: 32, offset: 288)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1917, file: !915, line: 670, baseType: !132, size: 32, offset: 320)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1917, file: !915, line: 671, baseType: !192, size: 32, offset: 352)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1917, file: !915, line: 672, baseType: !192, size: 32, offset: 384)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1917, file: !915, line: 673, baseType: !130, size: 16, offset: 416)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1917, file: !915, line: 673, baseType: !130, size: 16, offset: 432)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1889, file: !915, line: 692, baseType: !192, size: 32, offset: 1024)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1889, file: !915, line: 697, baseType: !192, size: 32, offset: 1056)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1889, file: !915, line: 703, baseType: !132, size: 32, offset: 1088)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1889, file: !915, line: 704, baseType: !130, size: 16, offset: 1120)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1889, file: !915, line: 704, baseType: !130, size: 16, offset: 1136)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1889, file: !915, line: 705, baseType: !130, size: 16, offset: 1152)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1889, file: !915, line: 706, baseType: !130, size: 16, offset: 1168)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1889, file: !915, line: 707, baseType: !130, size: 16, offset: 1184)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1889, file: !915, line: 708, baseType: !130, size: 16, offset: 1200)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1889, file: !915, line: 709, baseType: !130, size: 16, offset: 1216)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1889, file: !915, line: 709, baseType: !130, size: 16, offset: 1232)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1889, file: !915, line: 709, baseType: !130, size: 16, offset: 1248)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1889, file: !915, line: 709, baseType: !130, size: 16, offset: 1264)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1889, file: !915, line: 710, baseType: !130, size: 16, offset: 1280)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1889, file: !915, line: 711, baseType: !130, size: 16, offset: 1296)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1889, file: !915, line: 712, baseType: !192, size: 32, offset: 1312)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1889, file: !915, line: 713, baseType: !192, size: 32, offset: 1344)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1889, file: !915, line: 713, baseType: !192, size: 32, offset: 1376)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1889, file: !915, line: 713, baseType: !192, size: 32, offset: 1408)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1889, file: !915, line: 713, baseType: !192, size: 32, offset: 1440)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !914, file: !915, line: 1278, baseType: !1955, size: 64, offset: 36800)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !915, line: 1197, size: 64, elements: !1956)
!1956 = !{!1957, !1958, !1959, !1960}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1955, file: !915, line: 1199, baseType: !192, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1955, file: !915, line: 1200, baseType: !117, size: 8, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1955, file: !915, line: 1201, baseType: !117, size: 8, offset: 40)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1955, file: !915, line: 1202, baseType: !130, size: 16, offset: 48)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !914, file: !915, line: 1281, baseType: !757, size: 64, offset: 36864)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !914, file: !915, line: 1284, baseType: !1963, size: 192, offset: 36928)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !915, line: 1208, size: 192, elements: !1964)
!1964 = !{!1965, !1966, !1967, !1968}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1963, file: !915, line: 1209, baseType: !437, size: 96)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1963, file: !915, line: 1210, baseType: !132, size: 32, offset: 96)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1963, file: !915, line: 1210, baseType: !132, size: 32, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1963, file: !915, line: 1210, baseType: !132, size: 32, offset: 160)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !914, file: !915, line: 1287, baseType: !1970, size: 64, offset: 37120)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !915, line: 62, flags: DIFlagFwdDecl)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !914, file: !915, line: 1289, baseType: !889, size: 64, offset: 37184)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !914, file: !915, line: 1290, baseType: !889, size: 64, offset: 37248)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !914, file: !915, line: 1293, baseType: !1632, size: 1280, offset: 37312)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !914, file: !915, line: 1294, baseType: !1644, size: 512, offset: 38592)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !914, file: !915, line: 1295, baseType: !301, size: 512, offset: 39104)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !914, file: !915, line: 1298, baseType: !1978, size: 64, offset: 39616)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !915, line: 1298, flags: DIFlagFwdDecl)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !910, file: !93, line: 53, baseType: !132, size: 32, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !910, file: !93, line: 54, baseType: !132, size: 32, offset: 96)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !910, file: !93, line: 55, baseType: !132, size: 32, offset: 128)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !910, file: !93, line: 55, baseType: !132, size: 32, offset: 160)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !910, file: !93, line: 56, baseType: !117, size: 8, offset: 192)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !910, file: !93, line: 56, baseType: !117, size: 8, offset: 200)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !910, file: !93, line: 57, baseType: !117, size: 8, offset: 208)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !910, file: !93, line: 57, baseType: !117, size: 8, offset: 216)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !910, file: !93, line: 59, baseType: !130, size: 16, offset: 224)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !910, file: !93, line: 59, baseType: !130, size: 16, offset: 240)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !910, file: !93, line: 59, baseType: !130, size: 16, offset: 256)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !910, file: !93, line: 61, baseType: !130, size: 16, offset: 272)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !910, file: !93, line: 63, baseType: !132, size: 32, offset: 288)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !667, file: !230, line: 293, baseType: !157, size: 128, offset: 11200)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !667, file: !230, line: 294, baseType: !1995, size: 64, offset: 11328)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !230, line: 113, baseType: !1997)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !230, line: 108, size: 256, elements: !1998)
!1998 = !{!1999, !2001, !2002, !2003, !2004}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1997, file: !230, line: 109, baseType: !2000, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1997, file: !230, line: 109, baseType: !2000, size: 64, offset: 64)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1997, file: !230, line: 110, baseType: !666, size: 64, offset: 128)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1997, file: !230, line: 111, baseType: !132, size: 32, offset: 192)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1997, file: !230, line: 112, baseType: !192, size: 32, offset: 224)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !346, file: !6, line: 359, baseType: !2006, size: 64, offset: 12544)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!2009, !666, !344}
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !6, line: 100, flags: DIFlagFwdDecl)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !346, file: !6, line: 364, baseType: !412, size: 64, offset: 12608)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !346, file: !6, line: 367, baseType: !412, size: 64, offset: 12672)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !346, file: !6, line: 373, baseType: !2014, size: 64, offset: 12736)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = !DISubroutineType(types: !2016)
!2016 = !{null, !344, !1110, !1110}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !346, file: !6, line: 376, baseType: !412, size: 64, offset: 12800)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !346, file: !6, line: 385, baseType: !2019, size: 64, offset: 12864)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{null, !344, !2022, !1110, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !6, line: 146, baseType: !2024)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DISubroutineType(types: !2026)
!2026 = !{!132, !132, !90}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !346, file: !6, line: 391, baseType: !2028, size: 64, offset: 12928)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = !DISubroutineType(types: !2030)
!2030 = !{null, !344, !2031, !2049, !90, !2053}
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !6, line: 150, baseType: !2032)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{!2035, !2036, !2048, !132}
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !6, line: 143, baseType: !21)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !78, line: 160, size: 384, elements: !2038)
!2038 = !{!2039, !2042, !2043, !2044, !2045, !2046, !2047}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2037, file: !78, line: 161, baseType: !2040, size: 256)
!2040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 256, elements: !2041)
!2041 = !{!297, !276}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2037, file: !78, line: 162, baseType: !1066, size: 64, offset: 256)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2037, file: !78, line: 163, baseType: !117, size: 8, offset: 320)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2037, file: !78, line: 163, baseType: !117, size: 8, offset: 328)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2037, file: !78, line: 164, baseType: !130, size: 16, offset: 336)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2037, file: !78, line: 164, baseType: !130, size: 16, offset: 352)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2037, file: !78, line: 164, baseType: !130, size: 16, offset: 368)
!2048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !6, line: 147, baseType: !2050)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{!132, !90, !132, !132}
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !6, line: 157, baseType: !27)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !346, file: !6, line: 400, baseType: !2055, size: 64, offset: 12992)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{null, !344, !2023}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !346, file: !6, line: 415, baseType: !2059, size: 64, offset: 13056)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{null, !344, !2062, !2023, !2049, !90, !2053}
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !6, line: 149, baseType: !2063)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2064 = !DISubroutineType(types: !2065)
!2065 = !{!2035, !90, !132}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !346, file: !6, line: 425, baseType: !2067, size: 64, offset: 13120)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{null, !344, !2062, !2049, !90, !2053}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !346, file: !6, line: 435, baseType: !2071, size: 64, offset: 13184)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{null, !344, !2023, !2062, !90}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !346, file: !6, line: 444, baseType: !2075, size: 64, offset: 13248)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DISubroutineType(types: !2077)
!2077 = !{null, !344, !2062, !90}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !346, file: !6, line: 455, baseType: !2079, size: 64, offset: 13312)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{null, !344, !2062, !2082, !90}
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !6, line: 148, baseType: !2083)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{null, !90, !132, !192}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !346, file: !6, line: 464, baseType: !2087, size: 64, offset: 13376)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{null, !344, !2090, !2093, !90}
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{null, !90, !132, !90}
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{!1110, !90, !132}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !346, file: !6, line: 470, baseType: !412, size: 64, offset: 13440)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "hires_dm", scope: !341, file: !340, line: 39, baseType: !344, size: 64, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "simple", scope: !341, file: !340, line: 40, baseType: !1110, size: 8, offset: 128)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !341, file: !340, line: 41, baseType: !132, size: 32, offset: 160)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "lvl", scope: !341, file: !340, line: 42, baseType: !132, size: 32, offset: 192)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "tot_lvl", scope: !341, file: !340, line: 42, baseType: !132, size: 32, offset: 224)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !341, file: !340, line: 43, baseType: !130, size: 16, offset: 256)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "use_lores_mesh", scope: !341, file: !340, line: 44, baseType: !1110, size: 8, offset: 272)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "number_of_rays", scope: !341, file: !340, line: 46, baseType: !132, size: 32, offset: 288)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !341, file: !340, line: 47, baseType: !192, size: 32, offset: 320)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "tot_obj", scope: !341, file: !340, line: 49, baseType: !132, size: 32, offset: 352)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "tot_image", scope: !341, file: !340, line: 49, baseType: !132, size: 32, offset: 384)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !341, file: !340, line: 50, baseType: !157, size: 128, offset: 448)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "baked_objects", scope: !341, file: !340, line: 52, baseType: !132, size: 32, offset: 576)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "baked_faces", scope: !341, file: !340, line: 52, baseType: !132, size: 32, offset: 608)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !341, file: !340, line: 54, baseType: !132, size: 32, offset: 640)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "octree_resolution", scope: !341, file: !340, line: 55, baseType: !132, size: 32, offset: 672)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !341, file: !340, line: 56, baseType: !132, size: 32, offset: 704)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "user_scale", scope: !341, file: !340, line: 58, baseType: !192, size: 32, offset: 736)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !341, file: !340, line: 60, baseType: !2116, size: 64, offset: 768)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "do_update", scope: !341, file: !340, line: 61, baseType: !2116, size: 64, offset: 832)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !341, file: !340, line: 62, baseType: !191, size: 64, offset: 896)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !319, file: !3, line: 356, baseType: !91, size: 64, offset: 128)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "bake_data", scope: !319, file: !3, line: 357, baseType: !90, size: 64, offset: 192)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "bake_rast", scope: !319, file: !3, line: 360, baseType: !2122, size: 320, offset: 256)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "MBakeRast", file: !3, line: 99, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 93, size: 320, elements: !2124)
!2124 = !{!2125, !2126, !2127, !2128, !2165, !2170}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2123, file: !3, line: 94, baseType: !132, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2123, file: !3, line: 94, baseType: !132, size: 32, offset: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "texels", scope: !2123, file: !3, line: 95, baseType: !247, size: 64, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2123, file: !3, line: 96, baseType: !2129, size: 64, offset: 128)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2131)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "MResolvePixelData", file: !3, line: 89, baseType: !2132)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 74, size: 960, elements: !2133)
!2133 = !{!2134, !2137, !2140, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2159}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !2132, file: !3, line: 75, baseType: !2135, size: 64)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !78, line: 69, baseType: !434)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !2132, file: !3, line: 76, baseType: !2138, size: 64, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !78, line: 46, baseType: !461)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2132, file: !3, line: 77, baseType: !2141, size: 64, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !78, line: 165, baseType: !2037)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "pvtangent", scope: !2132, file: !3, line: 78, baseType: !191, size: 64, offset: 192)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "precomputed_normals", scope: !2132, file: !3, line: 79, baseType: !622, size: 64, offset: 256)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2132, file: !3, line: 80, baseType: !132, size: 32, offset: 320)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2132, file: !3, line: 80, baseType: !132, size: 32, offset: 352)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "face_index", scope: !2132, file: !3, line: 81, baseType: !132, size: 32, offset: 384)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "i0", scope: !2132, file: !3, line: 82, baseType: !132, size: 32, offset: 416)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "i1", scope: !2132, file: !3, line: 82, baseType: !132, size: 32, offset: 448)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "i2", scope: !2132, file: !3, line: 82, baseType: !132, size: 32, offset: 480)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "lores_dm", scope: !2132, file: !3, line: 83, baseType: !344, size: 64, offset: 512)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "hires_dm", scope: !2132, file: !3, line: 83, baseType: !344, size: 64, offset: 576)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "lvl", scope: !2132, file: !3, line: 84, baseType: !132, size: 32, offset: 640)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "thread_data", scope: !2132, file: !3, line: 85, baseType: !90, size: 64, offset: 704)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "bake_data", scope: !2132, file: !3, line: 86, baseType: !90, size: 64, offset: 768)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "ibuf", scope: !2132, file: !3, line: 87, baseType: !2157, size: 64, offset: 832)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImBuf", file: !1103, line: 141, baseType: !1102)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "pass_data", scope: !2132, file: !3, line: 88, baseType: !2160, size: 64, offset: 896)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPassKnownData", file: !3, line: 63, baseType: !2161)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{null, !344, !344, !90, !90, !2157, !2164, !2164, !622, !656, !2164, !2164}
!2164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "flush_pixel", scope: !2123, file: !3, line: 97, baseType: !2166, size: 64, offset: 192)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFlushPixel", file: !3, line: 91, baseType: !2167)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{null, !2129, !2164, !2164}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "do_update", scope: !2123, file: !3, line: 98, baseType: !2116, size: 64, offset: 256)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !319, file: !3, line: 361, baseType: !2131, size: 960, offset: 576)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "height_min", scope: !319, file: !3, line: 364, baseType: !192, size: 32, offset: 1536)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "height_max", scope: !319, file: !3, line: 364, baseType: !192, size: 32, offset: 1568)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "BakeImBufuserData", file: !2176, line: 191, baseType: !2177)
!2176 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_shader_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeImBufuserData", file: !2176, line: 188, size: 128, elements: !2178)
!2178 = !{!2179, !2180}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "displacement_buffer", scope: !2177, file: !2176, line: 189, baseType: !191, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "mask_buffer", scope: !2177, file: !2176, line: 190, baseType: !247, size: 64, offset: 64)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_typedef, name: "MNormalBakeData", file: !3, line: 112, baseType: !2183)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 109, size: 128, elements: !2184)
!2184 = !{!2185, !2187}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "orig_index_mf_to_mpoly", scope: !2183, file: !3, line: 110, baseType: !2186, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "orig_index_mp_to_orig", scope: !2183, file: !3, line: 111, baseType: !2186, size: 64, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGElem", file: !567, line: 51, baseType: !566)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "MHeightBakeData", file: !3, line: 107, baseType: !2192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 101, size: 320, elements: !2193)
!2193 = !{!2194, !2195, !2196, !2197, !2198}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "heights", scope: !2192, file: !3, line: 102, baseType: !191, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2192, file: !3, line: 103, baseType: !91, size: 64, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "ssdm", scope: !2192, file: !3, line: 104, baseType: !344, size: 64, offset: 128)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "orig_index_mf_to_mpoly", scope: !2192, file: !3, line: 105, baseType: !2186, size: 64, offset: 192)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "orig_index_mp_to_orig", scope: !2192, file: !3, line: 106, baseType: !2186, size: 64, offset: 256)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "MAOBakeData", file: !3, line: 126, baseType: !2201)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 114, size: 448, elements: !2202)
!2202 = !{!2203, !2204, !2205, !2207, !2208, !2306, !2318, !2319}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "number_of_rays", scope: !2201, file: !3, line: 115, baseType: !132, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !2201, file: !3, line: 116, baseType: !192, size: 32, offset: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "permutation_table_1", scope: !2201, file: !3, line: 118, baseType: !2206, size: 64, offset: 64)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "permutation_table_2", scope: !2201, file: !3, line: 119, baseType: !2206, size: 64, offset: 128)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !2201, file: !3, line: 121, baseType: !2209, size: 64, offset: 192)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "RayObject", file: !2211, line: 50, baseType: !2212)
!2211 = !DIFile(filename: "blender/source/blender/render/intern/include/rayobject.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayObject", file: !2213, line: 118, size: 192, elements: !2214)
!2213 = !DIFile(filename: "blender/source/blender/render/intern/include/../raytrace/rayobject_internal.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2214 = !{!2215, !2297}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2212, file: !2213, line: 119, baseType: !2216, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayObjectAPI", file: !2213, line: 131, size: 448, elements: !2218)
!2218 = !{!2219, !2269, !2274, !2279, !2281, !2286, !2291}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "raycast", scope: !2217, file: !2213, line: 132, baseType: !2220, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_raycast_callback", file: !2213, line: 123, baseType: !2221)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{!132, !2209, !2224}
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Isect", file: !2226, line: 60, size: 1408, elements: !2227)
!2226 = !DIFile(filename: "blender/source/blender/render/intern/include/rayintersection.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2227 = !{!2228, !2229, !2230, !2231, !2232, !2233, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2249, !2250, !2252}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2225, file: !2226, line: 63, baseType: !437, size: 96)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2225, file: !2226, line: 64, baseType: !437, size: 96, offset: 96)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2225, file: !2226, line: 65, baseType: !192, size: 32, offset: 192)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "origstart", scope: !2225, file: !2226, line: 68, baseType: !437, size: 96, offset: 224)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "origdir", scope: !2225, file: !2226, line: 69, baseType: !437, size: 96, offset: 320)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "bv_index", scope: !2225, file: !2226, line: 72, baseType: !2234, size: 192, offset: 416)
!2234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 192, elements: !1167)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "idot_axis", scope: !2225, file: !2226, line: 73, baseType: !437, size: 96, offset: 608)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2225, file: !2226, line: 76, baseType: !132, size: 32, offset: 704)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2225, file: !2226, line: 77, baseType: !132, size: 32, offset: 736)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !2225, file: !2226, line: 78, baseType: !132, size: 32, offset: 768)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2225, file: !2226, line: 79, baseType: !132, size: 32, offset: 800)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2225, file: !2226, line: 80, baseType: !90, size: 64, offset: 832)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2225, file: !2226, line: 83, baseType: !192, size: 32, offset: 896)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2225, file: !2226, line: 83, baseType: !192, size: 32, offset: 928)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "isect", scope: !2225, file: !2226, line: 84, baseType: !132, size: 32, offset: 960)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "hit", scope: !2225, file: !2226, line: 89, baseType: !2245, size: 128, offset: 1024)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2225, file: !2226, line: 86, size: 128, elements: !2246)
!2246 = !{!2247, !2248}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2245, file: !2226, line: 87, baseType: !90, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2245, file: !2226, line: 88, baseType: !90, size: 64, offset: 64)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !2225, file: !2226, line: 89, baseType: !2245, size: 128, offset: 1152)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "last_hit", scope: !2225, file: !2226, line: 92, baseType: !2251, size: 64, offset: 1280)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "hint", scope: !2225, file: !2226, line: 98, baseType: !2253, size: 64, offset: 1344)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "RayHint", file: !2226, line: 56, baseType: !2255)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayHint", file: !2226, line: 54, size: 16448, elements: !2256)
!2256 = !{!2257}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2255, file: !2226, line: 55, baseType: !2258, size: 16448)
!2258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2255, file: !2226, line: 55, size: 16448, elements: !2259)
!2259 = !{!2260}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "lcts", scope: !2258, file: !2226, line: 55, baseType: !2261, size: 16448)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "LCTSHint", file: !2226, line: 52, baseType: !2262)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LCTSHint", file: !2226, line: 49, size: 16448, elements: !2263)
!2263 = !{!2264, !2265}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2262, file: !2226, line: 50, baseType: !132, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2262, file: !2226, line: 51, baseType: !2266, size: 16384, offset: 64)
!2266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2251, size: 16384, elements: !2267)
!2267 = !{!2268}
!2268 = !DISubrange(count: 256)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2217, file: !2213, line: 133, baseType: !2270, size: 64, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_add_callback", file: !2213, line: 124, baseType: !2271)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{null, !2209, !2209}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2217, file: !2213, line: 134, baseType: !2275, size: 64, offset: 128)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_done_callback", file: !2213, line: 125, baseType: !2276)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{null, !2209}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2217, file: !2213, line: 135, baseType: !2280, size: 64, offset: 192)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_free_callback", file: !2213, line: 126, baseType: !2276)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2217, file: !2213, line: 136, baseType: !2282, size: 64, offset: 256)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_merge_bb_callback", file: !2213, line: 127, baseType: !2283)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2284 = !DISubroutineType(types: !2285)
!2285 = !{null, !2209, !191, !191}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2217, file: !2213, line: 137, baseType: !2287, size: 64, offset: 320)
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_cost_callback", file: !2213, line: 128, baseType: !2288)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DISubroutineType(types: !2290)
!2290 = !{!192, !2209}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "hint_bb", scope: !2217, file: !2213, line: 138, baseType: !2292, size: 64, offset: 384)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobject_hint_bb_callback", file: !2213, line: 129, baseType: !2293)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 64)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{null, !2209, !2296, !191, !191}
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2212, file: !2213, line: 120, baseType: !2298, size: 128, offset: 64)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayObjectControl", file: !2213, line: 51, size: 128, elements: !2299)
!2299 = !{!2300, !2301}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2298, file: !2213, line: 52, baseType: !90, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !2298, file: !2213, line: 53, baseType: !2302, size: 64, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "RE_rayobjectcontrol_test_break_callback", file: !2213, line: 49, baseType: !2303)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = !DISubroutineType(types: !2305)
!2305 = !{!132, !90}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !2201, file: !3, line: 122, baseType: !2307, size: 64, offset: 256)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "RayFace", file: !2211, line: 83, baseType: !2309)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RayFace", file: !2211, line: 78, size: 640, elements: !2310)
!2310 = !{!2311, !2312, !2313, !2314, !2315, !2316, !2317}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2309, file: !2211, line: 79, baseType: !295, size: 128)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2309, file: !2211, line: 79, baseType: !295, size: 128, offset: 128)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2309, file: !2211, line: 79, baseType: !295, size: 128, offset: 256)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2309, file: !2211, line: 79, baseType: !437, size: 96, offset: 384)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "quad", scope: !2309, file: !2211, line: 80, baseType: !132, size: 32, offset: 480)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2309, file: !2211, line: 81, baseType: !90, size: 64, offset: 512)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2309, file: !2211, line: 82, baseType: !90, size: 64, offset: 576)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "orig_index_mf_to_mpoly", scope: !2201, file: !3, line: 124, baseType: !2186, size: 64, offset: 320)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "orig_index_mp_to_orig", scope: !2201, file: !3, line: 125, baseType: !2186, size: 64, offset: 384)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !2321, line: 87, baseType: !2322)
!2321 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2322 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2323 = !{!0, !2324}
!2324 = !DIGlobalVariableExpression(var: !2325, expr: !DIExpression())
!2325 = distinct !DIGlobalVariable(name: "ao_random_table_1", scope: !2, file: !3, line: 907, type: !2326, isLocal: true, isDefinition: true)
!2326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !837, size: 16384, elements: !118)
!2327 = !{i32 7, !"Dwarf Version", i32 4}
!2328 = !{i32 2, !"Debug Info Version", i32 3}
!2329 = !{i32 1, !"wchar_size", i32 4}
!2330 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2331 = distinct !DISubprogram(name: "RE_multires_bake_images", scope: !3, file: !3, line: 1305, type: !2332, scopeLine: 1306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{null, !338}
!2334 = !{}
!2335 = !DILocalVariable(name: "bkr", arg: 1, scope: !2331, file: !3, line: 1305, type: !338)
!2336 = !DILocation(line: 1305, column: 50, scope: !2331)
!2337 = !DILocalVariable(name: "result", scope: !2331, file: !3, line: 1307, type: !2338)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresBakeResult", file: !3, line: 72, baseType: !2339)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresBakeResult", file: !3, line: 70, size: 64, elements: !2340)
!2340 = !{!2341, !2342}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "height_min", scope: !2339, file: !3, line: 71, baseType: !192, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "height_max", scope: !2339, file: !3, line: 71, baseType: !192, size: 32, offset: 32)
!2343 = !DILocation(line: 1307, column: 21, scope: !2331)
!2344 = !DILocation(line: 1309, column: 15, scope: !2331)
!2345 = !DILocation(line: 1309, column: 2, scope: !2331)
!2346 = !DILocation(line: 1310, column: 14, scope: !2331)
!2347 = !DILocation(line: 1310, column: 2, scope: !2331)
!2348 = !DILocation(line: 1311, column: 16, scope: !2331)
!2349 = !DILocation(line: 1311, column: 2, scope: !2331)
!2350 = !DILocation(line: 1312, column: 1, scope: !2331)
!2351 = distinct !DISubprogram(name: "count_images", scope: !3, file: !3, line: 1194, type: !2332, scopeLine: 1195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!2352 = !DILocalVariable(name: "bkr", arg: 1, scope: !2351, file: !3, line: 1194, type: !338)
!2353 = !DILocation(line: 1194, column: 46, scope: !2351)
!2354 = !DILocalVariable(name: "a", scope: !2351, file: !3, line: 1196, type: !132)
!2355 = !DILocation(line: 1196, column: 6, scope: !2351)
!2356 = !DILocalVariable(name: "totface", scope: !2351, file: !3, line: 1196, type: !132)
!2357 = !DILocation(line: 1196, column: 9, scope: !2351)
!2358 = !DILocalVariable(name: "dm", scope: !2351, file: !3, line: 1197, type: !344)
!2359 = !DILocation(line: 1197, column: 15, scope: !2351)
!2360 = !DILocation(line: 1197, column: 20, scope: !2351)
!2361 = !DILocation(line: 1197, column: 25, scope: !2351)
!2362 = !DILocalVariable(name: "mtface", scope: !2351, file: !3, line: 1198, type: !2141)
!2363 = !DILocation(line: 1198, column: 10, scope: !2351)
!2364 = !DILocation(line: 1198, column: 41, scope: !2351)
!2365 = !DILocation(line: 1198, column: 45, scope: !2351)
!2366 = !DILocation(line: 1198, column: 19, scope: !2351)
!2367 = !DILocation(line: 1200, column: 22, scope: !2351)
!2368 = !DILocation(line: 1200, column: 27, scope: !2351)
!2369 = !DILocation(line: 1200, column: 2, scope: !2351)
!2370 = !DILocation(line: 1201, column: 2, scope: !2351)
!2371 = !DILocation(line: 1201, column: 7, scope: !2351)
!2372 = !DILocation(line: 1201, column: 17, scope: !2351)
!2373 = !DILocation(line: 1203, column: 12, scope: !2351)
!2374 = !DILocation(line: 1203, column: 16, scope: !2351)
!2375 = !DILocation(line: 1203, column: 32, scope: !2351)
!2376 = !DILocation(line: 1203, column: 10, scope: !2351)
!2377 = !DILocation(line: 1205, column: 9, scope: !2378)
!2378 = distinct !DILexicalBlock(scope: !2351, file: !3, line: 1205, column: 2)
!2379 = !DILocation(line: 1205, column: 7, scope: !2378)
!2380 = !DILocation(line: 1205, column: 14, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2378, file: !3, line: 1205, column: 2)
!2382 = !DILocation(line: 1205, column: 18, scope: !2381)
!2383 = !DILocation(line: 1205, column: 16, scope: !2381)
!2384 = !DILocation(line: 1205, column: 2, scope: !2378)
!2385 = !DILocation(line: 1206, column: 3, scope: !2381)
!2386 = !DILocation(line: 1206, column: 10, scope: !2381)
!2387 = !DILocation(line: 1206, column: 13, scope: !2381)
!2388 = !DILocation(line: 1206, column: 20, scope: !2381)
!2389 = !DILocation(line: 1206, column: 23, scope: !2381)
!2390 = !DILocation(line: 1206, column: 28, scope: !2381)
!2391 = !DILocation(line: 1205, column: 28, scope: !2381)
!2392 = !DILocation(line: 1205, column: 2, scope: !2381)
!2393 = distinct !{!2393, !2384, !2394}
!2394 = !DILocation(line: 1206, column: 32, scope: !2378)
!2395 = !DILocation(line: 1208, column: 9, scope: !2396)
!2396 = distinct !DILexicalBlock(scope: !2351, file: !3, line: 1208, column: 2)
!2397 = !DILocation(line: 1208, column: 7, scope: !2396)
!2398 = !DILocation(line: 1208, column: 14, scope: !2399)
!2399 = distinct !DILexicalBlock(scope: !2396, file: !3, line: 1208, column: 2)
!2400 = !DILocation(line: 1208, column: 18, scope: !2399)
!2401 = !DILocation(line: 1208, column: 16, scope: !2399)
!2402 = !DILocation(line: 1208, column: 2, scope: !2396)
!2403 = !DILocalVariable(name: "ima", scope: !2404, file: !3, line: 1209, type: !91)
!2404 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 1208, column: 32)
!2405 = !DILocation(line: 1209, column: 10, scope: !2404)
!2406 = !DILocation(line: 1209, column: 16, scope: !2404)
!2407 = !DILocation(line: 1209, column: 23, scope: !2404)
!2408 = !DILocation(line: 1209, column: 26, scope: !2404)
!2409 = !DILocation(line: 1210, column: 8, scope: !2410)
!2410 = distinct !DILexicalBlock(scope: !2404, file: !3, line: 1210, column: 7)
!2411 = !DILocation(line: 1210, column: 13, scope: !2410)
!2412 = !DILocation(line: 1210, column: 16, scope: !2410)
!2413 = !DILocation(line: 1210, column: 21, scope: !2410)
!2414 = !DILocation(line: 1210, column: 33, scope: !2410)
!2415 = !DILocation(line: 1210, column: 7, scope: !2404)
!2416 = !DILocalVariable(name: "data", scope: !2417, file: !3, line: 1211, type: !2418)
!2417 = distinct !DILexicalBlock(scope: !2410, file: !3, line: 1210, column: 39)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkData", file: !158, line: 66, baseType: !2420)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkData", file: !158, line: 63, size: 192, elements: !2421)
!2421 = !{!2422, !2424, !2425}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2420, file: !158, line: 64, baseType: !2423, size: 64)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2420, file: !158, line: 64, baseType: !2423, size: 64, offset: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2420, file: !158, line: 65, baseType: !90, size: 64, offset: 128)
!2426 = !DILocation(line: 1211, column: 14, scope: !2417)
!2427 = !DILocation(line: 1211, column: 38, scope: !2417)
!2428 = !DILocation(line: 1211, column: 21, scope: !2417)
!2429 = !DILocation(line: 1212, column: 17, scope: !2417)
!2430 = !DILocation(line: 1212, column: 22, scope: !2417)
!2431 = !DILocation(line: 1212, column: 29, scope: !2417)
!2432 = !DILocation(line: 1212, column: 4, scope: !2417)
!2433 = !DILocation(line: 1213, column: 4, scope: !2417)
!2434 = !DILocation(line: 1213, column: 9, scope: !2417)
!2435 = !DILocation(line: 1213, column: 18, scope: !2417)
!2436 = !DILocation(line: 1214, column: 4, scope: !2417)
!2437 = !DILocation(line: 1214, column: 9, scope: !2417)
!2438 = !DILocation(line: 1214, column: 12, scope: !2417)
!2439 = !DILocation(line: 1214, column: 17, scope: !2417)
!2440 = !DILocation(line: 1215, column: 3, scope: !2417)
!2441 = !DILocation(line: 1216, column: 2, scope: !2404)
!2442 = !DILocation(line: 1208, column: 28, scope: !2399)
!2443 = !DILocation(line: 1208, column: 2, scope: !2399)
!2444 = distinct !{!2444, !2402, !2445}
!2445 = !DILocation(line: 1216, column: 2, scope: !2396)
!2446 = !DILocation(line: 1218, column: 9, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2351, file: !3, line: 1218, column: 2)
!2448 = !DILocation(line: 1218, column: 7, scope: !2447)
!2449 = !DILocation(line: 1218, column: 14, scope: !2450)
!2450 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 1218, column: 2)
!2451 = !DILocation(line: 1218, column: 18, scope: !2450)
!2452 = !DILocation(line: 1218, column: 16, scope: !2450)
!2453 = !DILocation(line: 1218, column: 2, scope: !2447)
!2454 = !DILocation(line: 1219, column: 3, scope: !2450)
!2455 = !DILocation(line: 1219, column: 10, scope: !2450)
!2456 = !DILocation(line: 1219, column: 13, scope: !2450)
!2457 = !DILocation(line: 1219, column: 20, scope: !2450)
!2458 = !DILocation(line: 1219, column: 23, scope: !2450)
!2459 = !DILocation(line: 1219, column: 28, scope: !2450)
!2460 = !DILocation(line: 1218, column: 28, scope: !2450)
!2461 = !DILocation(line: 1218, column: 2, scope: !2450)
!2462 = distinct !{!2462, !2453, !2463}
!2463 = !DILocation(line: 1219, column: 32, scope: !2447)
!2464 = !DILocation(line: 1220, column: 1, scope: !2351)
!2465 = distinct !DISubprogram(name: "bake_images", scope: !3, file: !3, line: 1222, type: !2466, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!2466 = !DISubroutineType(types: !2467)
!2467 = !{null, !338, !2468}
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2469 = !DILocalVariable(name: "bkr", arg: 1, scope: !2465, file: !3, line: 1222, type: !338)
!2470 = !DILocation(line: 1222, column: 45, scope: !2465)
!2471 = !DILocalVariable(name: "result", arg: 2, scope: !2465, file: !3, line: 1222, type: !2468)
!2472 = !DILocation(line: 1222, column: 70, scope: !2465)
!2473 = !DILocalVariable(name: "link", scope: !2465, file: !3, line: 1224, type: !2418)
!2474 = !DILocation(line: 1224, column: 12, scope: !2465)
!2475 = !DILocation(line: 1226, column: 14, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 1226, column: 2)
!2477 = !DILocation(line: 1226, column: 19, scope: !2476)
!2478 = !DILocation(line: 1226, column: 25, scope: !2476)
!2479 = !DILocation(line: 1226, column: 12, scope: !2476)
!2480 = !DILocation(line: 1226, column: 7, scope: !2476)
!2481 = !DILocation(line: 1226, column: 32, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2476, file: !3, line: 1226, column: 2)
!2483 = !DILocation(line: 1226, column: 2, scope: !2476)
!2484 = !DILocalVariable(name: "ima", scope: !2485, file: !3, line: 1227, type: !91)
!2485 = distinct !DILexicalBlock(scope: !2482, file: !3, line: 1226, column: 57)
!2486 = !DILocation(line: 1227, column: 10, scope: !2485)
!2487 = !DILocation(line: 1227, column: 25, scope: !2485)
!2488 = !DILocation(line: 1227, column: 31, scope: !2485)
!2489 = !DILocation(line: 1227, column: 16, scope: !2485)
!2490 = !DILocalVariable(name: "ibuf", scope: !2485, file: !3, line: 1228, type: !2157)
!2491 = !DILocation(line: 1228, column: 10, scope: !2485)
!2492 = !DILocation(line: 1228, column: 40, scope: !2485)
!2493 = !DILocation(line: 1228, column: 17, scope: !2485)
!2494 = !DILocation(line: 1230, column: 7, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2485, file: !3, line: 1230, column: 7)
!2496 = !DILocation(line: 1230, column: 13, scope: !2495)
!2497 = !DILocation(line: 1230, column: 15, scope: !2495)
!2498 = !DILocation(line: 1230, column: 19, scope: !2495)
!2499 = !DILocation(line: 1230, column: 22, scope: !2495)
!2500 = !DILocation(line: 1230, column: 28, scope: !2495)
!2501 = !DILocation(line: 1230, column: 30, scope: !2495)
!2502 = !DILocation(line: 1230, column: 7, scope: !2485)
!2503 = !DILocalVariable(name: "userdata", scope: !2504, file: !3, line: 1231, type: !2174)
!2504 = distinct !DILexicalBlock(scope: !2495, file: !3, line: 1230, column: 35)
!2505 = !DILocation(line: 1231, column: 23, scope: !2504)
!2506 = !DILocation(line: 1231, column: 34, scope: !2504)
!2507 = !DILocation(line: 1232, column: 28, scope: !2504)
!2508 = !DILocation(line: 1232, column: 40, scope: !2504)
!2509 = !DILocation(line: 1232, column: 46, scope: !2504)
!2510 = !DILocation(line: 1232, column: 50, scope: !2504)
!2511 = !DILocation(line: 1232, column: 56, scope: !2504)
!2512 = !DILocation(line: 1232, column: 48, scope: !2504)
!2513 = !DILocation(line: 1232, column: 4, scope: !2504)
!2514 = !DILocation(line: 1232, column: 14, scope: !2504)
!2515 = !DILocation(line: 1232, column: 26, scope: !2504)
!2516 = !DILocation(line: 1233, column: 21, scope: !2504)
!2517 = !DILocation(line: 1233, column: 4, scope: !2504)
!2518 = !DILocation(line: 1233, column: 10, scope: !2504)
!2519 = !DILocation(line: 1233, column: 19, scope: !2504)
!2520 = !DILocation(line: 1235, column: 12, scope: !2504)
!2521 = !DILocation(line: 1235, column: 17, scope: !2504)
!2522 = !DILocation(line: 1235, column: 4, scope: !2504)
!2523 = !DILocation(line: 1237, column: 23, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 1235, column: 23)
!2525 = !DILocation(line: 1237, column: 28, scope: !2524)
!2526 = !DILocation(line: 1237, column: 99, scope: !2524)
!2527 = !DILocation(line: 1237, column: 6, scope: !2524)
!2528 = !DILocation(line: 1238, column: 6, scope: !2524)
!2529 = !DILocation(line: 1241, column: 23, scope: !2524)
!2530 = !DILocation(line: 1241, column: 28, scope: !2524)
!2531 = !DILocation(line: 1241, column: 102, scope: !2524)
!2532 = !DILocation(line: 1241, column: 6, scope: !2524)
!2533 = !DILocation(line: 1242, column: 6, scope: !2524)
!2534 = !DILocation(line: 1244, column: 23, scope: !2524)
!2535 = !DILocation(line: 1244, column: 28, scope: !2524)
!2536 = !DILocation(line: 1244, column: 87, scope: !2524)
!2537 = !DILocation(line: 1244, column: 6, scope: !2524)
!2538 = !DILocation(line: 1245, column: 6, scope: !2524)
!2539 = !DILocation(line: 1247, column: 3, scope: !2504)
!2540 = !DILocation(line: 1249, column: 26, scope: !2485)
!2541 = !DILocation(line: 1249, column: 31, scope: !2485)
!2542 = !DILocation(line: 1249, column: 3, scope: !2485)
!2543 = !DILocation(line: 1251, column: 3, scope: !2485)
!2544 = !DILocation(line: 1251, column: 8, scope: !2485)
!2545 = !DILocation(line: 1251, column: 11, scope: !2485)
!2546 = !DILocation(line: 1251, column: 16, scope: !2485)
!2547 = !DILocation(line: 1252, column: 2, scope: !2485)
!2548 = !DILocation(line: 1226, column: 45, scope: !2482)
!2549 = !DILocation(line: 1226, column: 51, scope: !2482)
!2550 = !DILocation(line: 1226, column: 43, scope: !2482)
!2551 = !DILocation(line: 1226, column: 2, scope: !2482)
!2552 = distinct !{!2552, !2483, !2553}
!2553 = !DILocation(line: 1252, column: 2, scope: !2476)
!2554 = !DILocation(line: 1253, column: 1, scope: !2465)
!2555 = distinct !DISubprogram(name: "finish_images", scope: !3, file: !3, line: 1255, type: !2466, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!2556 = !DILocalVariable(name: "bkr", arg: 1, scope: !2555, file: !3, line: 1255, type: !338)
!2557 = !DILocation(line: 1255, column: 47, scope: !2555)
!2558 = !DILocalVariable(name: "result", arg: 2, scope: !2555, file: !3, line: 1255, type: !2468)
!2559 = !DILocation(line: 1255, column: 72, scope: !2555)
!2560 = !DILocalVariable(name: "link", scope: !2555, file: !3, line: 1257, type: !2418)
!2561 = !DILocation(line: 1257, column: 12, scope: !2555)
!2562 = !DILocalVariable(name: "use_displacement_buffer", scope: !2555, file: !3, line: 1258, type: !1110)
!2563 = !DILocation(line: 1258, column: 7, scope: !2555)
!2564 = !DILocation(line: 1258, column: 33, scope: !2555)
!2565 = !DILocation(line: 1260, column: 14, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2555, file: !3, line: 1260, column: 2)
!2567 = !DILocation(line: 1260, column: 19, scope: !2566)
!2568 = !DILocation(line: 1260, column: 25, scope: !2566)
!2569 = !DILocation(line: 1260, column: 12, scope: !2566)
!2570 = !DILocation(line: 1260, column: 7, scope: !2566)
!2571 = !DILocation(line: 1260, column: 32, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 1260, column: 2)
!2573 = !DILocation(line: 1260, column: 2, scope: !2566)
!2574 = !DILocalVariable(name: "ima", scope: !2575, file: !3, line: 1261, type: !91)
!2575 = distinct !DILexicalBlock(scope: !2572, file: !3, line: 1260, column: 57)
!2576 = !DILocation(line: 1261, column: 10, scope: !2575)
!2577 = !DILocation(line: 1261, column: 25, scope: !2575)
!2578 = !DILocation(line: 1261, column: 31, scope: !2575)
!2579 = !DILocation(line: 1261, column: 16, scope: !2575)
!2580 = !DILocalVariable(name: "ibuf", scope: !2575, file: !3, line: 1262, type: !2157)
!2581 = !DILocation(line: 1262, column: 10, scope: !2575)
!2582 = !DILocation(line: 1262, column: 40, scope: !2575)
!2583 = !DILocation(line: 1262, column: 17, scope: !2575)
!2584 = !DILocalVariable(name: "userdata", scope: !2575, file: !3, line: 1263, type: !2174)
!2585 = !DILocation(line: 1263, column: 22, scope: !2575)
!2586 = !DILocation(line: 1263, column: 55, scope: !2575)
!2587 = !DILocation(line: 1263, column: 61, scope: !2575)
!2588 = !DILocation(line: 1263, column: 33, scope: !2575)
!2589 = !DILocation(line: 1265, column: 7, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2575, file: !3, line: 1265, column: 7)
!2591 = !DILocation(line: 1265, column: 13, scope: !2590)
!2592 = !DILocation(line: 1265, column: 15, scope: !2590)
!2593 = !DILocation(line: 1265, column: 20, scope: !2590)
!2594 = !DILocation(line: 1265, column: 23, scope: !2590)
!2595 = !DILocation(line: 1265, column: 29, scope: !2590)
!2596 = !DILocation(line: 1265, column: 31, scope: !2590)
!2597 = !DILocation(line: 1265, column: 7, scope: !2575)
!2598 = !DILocation(line: 1266, column: 4, scope: !2590)
!2599 = !DILocation(line: 1268, column: 7, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2575, file: !3, line: 1268, column: 7)
!2601 = !DILocation(line: 1268, column: 7, scope: !2575)
!2602 = !DILocation(line: 1269, column: 8, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2604, file: !3, line: 1269, column: 8)
!2604 = distinct !DILexicalBlock(scope: !2600, file: !3, line: 1268, column: 32)
!2605 = !DILocation(line: 1269, column: 13, scope: !2603)
!2606 = !DILocation(line: 1269, column: 18, scope: !2603)
!2607 = !DILocation(line: 1269, column: 8, scope: !2604)
!2608 = !DILocation(line: 1270, column: 29, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2603, file: !3, line: 1269, column: 41)
!2610 = !DILocation(line: 1270, column: 35, scope: !2609)
!2611 = !DILocation(line: 1270, column: 45, scope: !2609)
!2612 = !DILocation(line: 1270, column: 66, scope: !2609)
!2613 = !DILocation(line: 1270, column: 76, scope: !2609)
!2614 = !DILocation(line: 1271, column: 29, scope: !2609)
!2615 = !DILocation(line: 1271, column: 37, scope: !2609)
!2616 = !DILocation(line: 1271, column: 49, scope: !2609)
!2617 = !DILocation(line: 1271, column: 57, scope: !2609)
!2618 = !DILocation(line: 1271, column: 69, scope: !2609)
!2619 = !DILocation(line: 1271, column: 74, scope: !2609)
!2620 = !DILocation(line: 1270, column: 5, scope: !2609)
!2621 = !DILocation(line: 1272, column: 4, scope: !2609)
!2622 = !DILocation(line: 1274, column: 41, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2603, file: !3, line: 1273, column: 9)
!2624 = !DILocation(line: 1274, column: 47, scope: !2623)
!2625 = !DILocation(line: 1274, column: 57, scope: !2623)
!2626 = !DILocation(line: 1274, column: 78, scope: !2623)
!2627 = !DILocation(line: 1274, column: 88, scope: !2623)
!2628 = !DILocation(line: 1275, column: 41, scope: !2623)
!2629 = !DILocation(line: 1275, column: 49, scope: !2623)
!2630 = !DILocation(line: 1275, column: 61, scope: !2623)
!2631 = !DILocation(line: 1275, column: 69, scope: !2623)
!2632 = !DILocation(line: 1274, column: 5, scope: !2623)
!2633 = !DILocation(line: 1277, column: 3, scope: !2604)
!2634 = !DILocation(line: 1279, column: 23, scope: !2575)
!2635 = !DILocation(line: 1279, column: 29, scope: !2575)
!2636 = !DILocation(line: 1279, column: 39, scope: !2575)
!2637 = !DILocation(line: 1279, column: 52, scope: !2575)
!2638 = !DILocation(line: 1279, column: 57, scope: !2575)
!2639 = !DILocation(line: 1279, column: 3, scope: !2575)
!2640 = !DILocation(line: 1281, column: 3, scope: !2575)
!2641 = !DILocation(line: 1281, column: 9, scope: !2575)
!2642 = !DILocation(line: 1281, column: 19, scope: !2575)
!2643 = !DILocation(line: 1283, column: 7, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2575, file: !3, line: 1283, column: 7)
!2645 = !DILocation(line: 1283, column: 13, scope: !2644)
!2646 = !DILocation(line: 1283, column: 7, scope: !2575)
!2647 = !DILocation(line: 1284, column: 4, scope: !2644)
!2648 = !DILocation(line: 1284, column: 10, scope: !2644)
!2649 = !DILocation(line: 1284, column: 20, scope: !2644)
!2650 = !DILocation(line: 1286, column: 7, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2575, file: !3, line: 1286, column: 7)
!2652 = !DILocation(line: 1286, column: 13, scope: !2651)
!2653 = !DILocation(line: 1286, column: 7, scope: !2575)
!2654 = !DILocation(line: 1287, column: 4, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2651, file: !3, line: 1286, column: 24)
!2656 = !DILocation(line: 1287, column: 10, scope: !2655)
!2657 = !DILocation(line: 1287, column: 20, scope: !2655)
!2658 = !DILocation(line: 1288, column: 24, scope: !2655)
!2659 = !DILocation(line: 1288, column: 4, scope: !2655)
!2660 = !DILocation(line: 1289, column: 3, scope: !2655)
!2661 = !DILocation(line: 1291, column: 7, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2575, file: !3, line: 1291, column: 7)
!2663 = !DILocation(line: 1291, column: 13, scope: !2662)
!2664 = !DILocation(line: 1291, column: 7, scope: !2575)
!2665 = !DILocation(line: 1292, column: 8, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 1292, column: 8)
!2667 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 1291, column: 23)
!2668 = !DILocation(line: 1292, column: 18, scope: !2666)
!2669 = !DILocation(line: 1292, column: 8, scope: !2667)
!2670 = !DILocation(line: 1293, column: 5, scope: !2666)
!2671 = !DILocation(line: 1293, column: 15, scope: !2666)
!2672 = !DILocation(line: 1293, column: 25, scope: !2666)
!2673 = !DILocation(line: 1295, column: 4, scope: !2667)
!2674 = !DILocation(line: 1295, column: 14, scope: !2667)
!2675 = !DILocation(line: 1295, column: 24, scope: !2667)
!2676 = !DILocation(line: 1296, column: 4, scope: !2667)
!2677 = !DILocation(line: 1296, column: 14, scope: !2667)
!2678 = !DILocation(line: 1297, column: 4, scope: !2667)
!2679 = !DILocation(line: 1297, column: 10, scope: !2667)
!2680 = !DILocation(line: 1297, column: 19, scope: !2667)
!2681 = !DILocation(line: 1298, column: 3, scope: !2667)
!2682 = !DILocation(line: 1300, column: 26, scope: !2575)
!2683 = !DILocation(line: 1300, column: 31, scope: !2575)
!2684 = !DILocation(line: 1300, column: 3, scope: !2575)
!2685 = !DILocation(line: 1301, column: 22, scope: !2575)
!2686 = !DILocation(line: 1301, column: 27, scope: !2575)
!2687 = !DILocation(line: 1301, column: 3, scope: !2575)
!2688 = !DILocation(line: 1302, column: 2, scope: !2575)
!2689 = !DILocation(line: 1260, column: 45, scope: !2572)
!2690 = !DILocation(line: 1260, column: 51, scope: !2572)
!2691 = !DILocation(line: 1260, column: 43, scope: !2572)
!2692 = !DILocation(line: 1260, column: 2, scope: !2572)
!2693 = distinct !{!2693, !2573, !2694}
!2694 = !DILocation(line: 1302, column: 2, scope: !2566)
!2695 = !DILocation(line: 1303, column: 1, scope: !2555)
!2696 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !2697, file: !2697, line: 89, type: !2698, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!2697 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2698 = !DISubroutineType(types: !2699)
!2699 = !{null, !2700}
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!2701 = !DILocalVariable(name: "lb", arg: 1, scope: !2696, file: !2697, line: 89, type: !2700)
!2702 = !DILocation(line: 89, column: 53, scope: !2696)
!2703 = !DILocation(line: 89, column: 71, scope: !2696)
!2704 = !DILocation(line: 89, column: 75, scope: !2696)
!2705 = !DILocation(line: 89, column: 80, scope: !2696)
!2706 = !DILocation(line: 89, column: 59, scope: !2696)
!2707 = !DILocation(line: 89, column: 63, scope: !2696)
!2708 = !DILocation(line: 89, column: 69, scope: !2696)
!2709 = !DILocation(line: 89, column: 93, scope: !2696)
!2710 = distinct !DISubprogram(name: "do_multires_bake", scope: !3, file: !3, line: 466, type: !2711, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{null, !338, !91, !1110, !2160, !2713, !2717, !2468}
!2713 = !DIDerivedType(tag: DW_TAG_typedef, name: "MInitBakeData", file: !3, line: 67, baseType: !2714)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{!90, !338, !91}
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFreeBakeData", file: !3, line: 68, baseType: !2718)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{null, !90}
!2721 = !DILocalVariable(name: "bkr", arg: 1, scope: !2710, file: !3, line: 466, type: !338)
!2722 = !DILocation(line: 466, column: 50, scope: !2710)
!2723 = !DILocalVariable(name: "ima", arg: 2, scope: !2710, file: !3, line: 466, type: !91)
!2724 = !DILocation(line: 466, column: 62, scope: !2710)
!2725 = !DILocalVariable(name: "require_tangent", arg: 3, scope: !2710, file: !3, line: 466, type: !1110)
!2726 = !DILocation(line: 466, column: 72, scope: !2710)
!2727 = !DILocalVariable(name: "passKnownData", arg: 4, scope: !2710, file: !3, line: 466, type: !2160)
!2728 = !DILocation(line: 466, column: 104, scope: !2710)
!2729 = !DILocalVariable(name: "initBakeData", arg: 5, scope: !2710, file: !3, line: 467, type: !2713)
!2730 = !DILocation(line: 467, column: 44, scope: !2710)
!2731 = !DILocalVariable(name: "freeBakeData", arg: 6, scope: !2710, file: !3, line: 467, type: !2717)
!2732 = !DILocation(line: 467, column: 72, scope: !2710)
!2733 = !DILocalVariable(name: "result", arg: 7, scope: !2710, file: !3, line: 467, type: !2468)
!2734 = !DILocation(line: 467, column: 106, scope: !2710)
!2735 = !DILocalVariable(name: "dm", scope: !2710, file: !3, line: 469, type: !344)
!2736 = !DILocation(line: 469, column: 15, scope: !2710)
!2737 = !DILocation(line: 469, column: 20, scope: !2710)
!2738 = !DILocation(line: 469, column: 25, scope: !2710)
!2739 = !DILocalVariable(name: "lvl", scope: !2710, file: !3, line: 470, type: !2164)
!2740 = !DILocation(line: 470, column: 12, scope: !2710)
!2741 = !DILocation(line: 470, column: 18, scope: !2710)
!2742 = !DILocation(line: 470, column: 23, scope: !2710)
!2743 = !DILocalVariable(name: "tot_face", scope: !2710, file: !3, line: 471, type: !2164)
!2744 = !DILocation(line: 471, column: 12, scope: !2710)
!2745 = !DILocation(line: 471, column: 23, scope: !2710)
!2746 = !DILocation(line: 471, column: 27, scope: !2710)
!2747 = !DILocation(line: 471, column: 43, scope: !2710)
!2748 = !DILocation(line: 473, column: 6, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2710, file: !3, line: 473, column: 6)
!2750 = !DILocation(line: 473, column: 15, scope: !2749)
!2751 = !DILocation(line: 473, column: 6, scope: !2710)
!2752 = !DILocalVariable(name: "handles", scope: !2753, file: !3, line: 474, type: !317)
!2753 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 473, column: 20)
!2754 = !DILocation(line: 474, column: 23, scope: !2753)
!2755 = !DILocalVariable(name: "queue", scope: !2753, file: !3, line: 475, type: !323)
!2756 = !DILocation(line: 475, column: 21, scope: !2753)
!2757 = !DILocalVariable(name: "ibuf", scope: !2753, file: !3, line: 477, type: !2157)
!2758 = !DILocation(line: 477, column: 10, scope: !2753)
!2759 = !DILocation(line: 477, column: 40, scope: !2753)
!2760 = !DILocation(line: 477, column: 17, scope: !2753)
!2761 = !DILocalVariable(name: "mvert", scope: !2753, file: !3, line: 478, type: !2135)
!2762 = !DILocation(line: 478, column: 10, scope: !2753)
!2763 = !DILocation(line: 478, column: 18, scope: !2753)
!2764 = !DILocation(line: 478, column: 22, scope: !2753)
!2765 = !DILocation(line: 478, column: 35, scope: !2753)
!2766 = !DILocalVariable(name: "mface", scope: !2753, file: !3, line: 479, type: !2138)
!2767 = !DILocation(line: 479, column: 10, scope: !2753)
!2768 = !DILocation(line: 479, column: 18, scope: !2753)
!2769 = !DILocation(line: 479, column: 22, scope: !2753)
!2770 = !DILocation(line: 479, column: 39, scope: !2753)
!2771 = !DILocalVariable(name: "mtface", scope: !2753, file: !3, line: 480, type: !2141)
!2772 = !DILocation(line: 480, column: 11, scope: !2753)
!2773 = !DILocation(line: 480, column: 20, scope: !2753)
!2774 = !DILocation(line: 480, column: 24, scope: !2753)
!2775 = !DILocation(line: 480, column: 45, scope: !2753)
!2776 = !DILocalVariable(name: "precomputed_normals", scope: !2753, file: !3, line: 481, type: !622)
!2777 = !DILocation(line: 481, column: 16, scope: !2753)
!2778 = !DILocation(line: 481, column: 38, scope: !2753)
!2779 = !DILocation(line: 481, column: 42, scope: !2753)
!2780 = !DILocation(line: 481, column: 63, scope: !2753)
!2781 = !DILocalVariable(name: "pvtangent", scope: !2753, file: !3, line: 482, type: !191)
!2782 = !DILocation(line: 482, column: 10, scope: !2753)
!2783 = !DILocalVariable(name: "threads", scope: !2753, file: !3, line: 484, type: !157)
!2784 = !DILocation(line: 484, column: 12, scope: !2753)
!2785 = !DILocalVariable(name: "i", scope: !2753, file: !3, line: 485, type: !132)
!2786 = !DILocation(line: 485, column: 7, scope: !2753)
!2787 = !DILocalVariable(name: "tot_thread", scope: !2753, file: !3, line: 485, type: !132)
!2788 = !DILocation(line: 485, column: 10, scope: !2753)
!2789 = !DILocation(line: 485, column: 23, scope: !2753)
!2790 = !DILocation(line: 485, column: 28, scope: !2753)
!2791 = !DILocation(line: 485, column: 36, scope: !2753)
!2792 = !DILocation(line: 485, column: 42, scope: !2753)
!2793 = !DILocation(line: 485, column: 47, scope: !2753)
!2794 = !DILocation(line: 485, column: 57, scope: !2753)
!2795 = !DILocalVariable(name: "bake_data", scope: !2753, file: !3, line: 487, type: !90)
!2796 = !DILocation(line: 487, column: 9, scope: !2753)
!2797 = !DILocation(line: 489, column: 7, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 489, column: 7)
!2799 = !DILocation(line: 489, column: 7, scope: !2753)
!2800 = !DILocation(line: 490, column: 36, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 490, column: 8)
!2802 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 489, column: 24)
!2803 = !DILocation(line: 490, column: 40, scope: !2801)
!2804 = !DILocation(line: 490, column: 8, scope: !2801)
!2805 = !DILocation(line: 490, column: 62, scope: !2801)
!2806 = !DILocation(line: 490, column: 8, scope: !2802)
!2807 = !DILocation(line: 491, column: 26, scope: !2801)
!2808 = !DILocation(line: 491, column: 5, scope: !2801)
!2809 = !DILocation(line: 493, column: 43, scope: !2802)
!2810 = !DILocation(line: 493, column: 16, scope: !2802)
!2811 = !DILocation(line: 493, column: 14, scope: !2802)
!2812 = !DILocation(line: 494, column: 3, scope: !2802)
!2813 = !DILocation(line: 497, column: 7, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 497, column: 7)
!2815 = !DILocation(line: 497, column: 7, scope: !2753)
!2816 = !DILocation(line: 498, column: 16, scope: !2814)
!2817 = !DILocation(line: 498, column: 29, scope: !2814)
!2818 = !DILocation(line: 498, column: 34, scope: !2814)
!2819 = !DILocation(line: 498, column: 14, scope: !2814)
!2820 = !DILocation(line: 498, column: 4, scope: !2814)
!2821 = !DILocation(line: 500, column: 7, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 500, column: 7)
!2823 = !DILocation(line: 500, column: 18, scope: !2822)
!2824 = !DILocation(line: 500, column: 7, scope: !2753)
!2825 = !DILocation(line: 501, column: 56, scope: !2822)
!2826 = !DILocation(line: 501, column: 4, scope: !2822)
!2827 = !DILocation(line: 503, column: 13, scope: !2753)
!2828 = !DILocation(line: 503, column: 25, scope: !2753)
!2829 = !DILocation(line: 503, column: 36, scope: !2753)
!2830 = !DILocation(line: 503, column: 11, scope: !2753)
!2831 = !DILocation(line: 505, column: 21, scope: !2753)
!2832 = !DILocation(line: 505, column: 26, scope: !2753)
!2833 = !DILocation(line: 505, column: 3, scope: !2753)
!2834 = !DILocation(line: 508, column: 9, scope: !2753)
!2835 = !DILocation(line: 508, column: 18, scope: !2753)
!2836 = !DILocation(line: 509, column: 20, scope: !2753)
!2837 = !DILocation(line: 509, column: 9, scope: !2753)
!2838 = !DILocation(line: 509, column: 18, scope: !2753)
!2839 = !DILocation(line: 510, column: 24, scope: !2753)
!2840 = !DILocation(line: 510, column: 3, scope: !2753)
!2841 = !DILocation(line: 513, column: 10, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 513, column: 3)
!2843 = !DILocation(line: 513, column: 8, scope: !2842)
!2844 = !DILocation(line: 513, column: 15, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 513, column: 3)
!2846 = !DILocation(line: 513, column: 19, scope: !2845)
!2847 = !DILocation(line: 513, column: 17, scope: !2845)
!2848 = !DILocation(line: 513, column: 3, scope: !2842)
!2849 = !DILocalVariable(name: "handle", scope: !2850, file: !3, line: 514, type: !317)
!2850 = distinct !DILexicalBlock(scope: !2845, file: !3, line: 513, column: 36)
!2851 = !DILocation(line: 514, column: 24, scope: !2850)
!2852 = !DILocation(line: 514, column: 34, scope: !2850)
!2853 = !DILocation(line: 514, column: 42, scope: !2850)
!2854 = !DILocation(line: 516, column: 18, scope: !2850)
!2855 = !DILocation(line: 516, column: 4, scope: !2850)
!2856 = !DILocation(line: 516, column: 12, scope: !2850)
!2857 = !DILocation(line: 516, column: 16, scope: !2850)
!2858 = !DILocation(line: 517, column: 20, scope: !2850)
!2859 = !DILocation(line: 517, column: 4, scope: !2850)
!2860 = !DILocation(line: 517, column: 12, scope: !2850)
!2861 = !DILocation(line: 517, column: 18, scope: !2850)
!2862 = !DILocation(line: 518, column: 4, scope: !2850)
!2863 = !DILocation(line: 518, column: 12, scope: !2850)
!2864 = !DILocation(line: 518, column: 18, scope: !2850)
!2865 = !DILocation(line: 520, column: 25, scope: !2850)
!2866 = !DILocation(line: 520, column: 4, scope: !2850)
!2867 = !DILocation(line: 520, column: 12, scope: !2850)
!2868 = !DILocation(line: 520, column: 17, scope: !2850)
!2869 = !DILocation(line: 520, column: 23, scope: !2850)
!2870 = !DILocation(line: 521, column: 25, scope: !2850)
!2871 = !DILocation(line: 521, column: 4, scope: !2850)
!2872 = !DILocation(line: 521, column: 12, scope: !2850)
!2873 = !DILocation(line: 521, column: 17, scope: !2850)
!2874 = !DILocation(line: 521, column: 23, scope: !2850)
!2875 = !DILocation(line: 522, column: 26, scope: !2850)
!2876 = !DILocation(line: 522, column: 4, scope: !2850)
!2877 = !DILocation(line: 522, column: 12, scope: !2850)
!2878 = !DILocation(line: 522, column: 17, scope: !2850)
!2879 = !DILocation(line: 522, column: 24, scope: !2850)
!2880 = !DILocation(line: 523, column: 29, scope: !2850)
!2881 = !DILocation(line: 523, column: 4, scope: !2850)
!2882 = !DILocation(line: 523, column: 12, scope: !2850)
!2883 = !DILocation(line: 523, column: 17, scope: !2850)
!2884 = !DILocation(line: 523, column: 27, scope: !2850)
!2885 = !DILocation(line: 524, column: 39, scope: !2850)
!2886 = !DILocation(line: 524, column: 4, scope: !2850)
!2887 = !DILocation(line: 524, column: 12, scope: !2850)
!2888 = !DILocation(line: 524, column: 17, scope: !2850)
!2889 = !DILocation(line: 524, column: 37, scope: !2850)
!2890 = !DILocation(line: 525, column: 21, scope: !2850)
!2891 = !DILocation(line: 525, column: 27, scope: !2850)
!2892 = !DILocation(line: 525, column: 4, scope: !2850)
!2893 = !DILocation(line: 525, column: 12, scope: !2850)
!2894 = !DILocation(line: 525, column: 17, scope: !2850)
!2895 = !DILocation(line: 525, column: 19, scope: !2850)
!2896 = !DILocation(line: 526, column: 21, scope: !2850)
!2897 = !DILocation(line: 526, column: 27, scope: !2850)
!2898 = !DILocation(line: 526, column: 4, scope: !2850)
!2899 = !DILocation(line: 526, column: 12, scope: !2850)
!2900 = !DILocation(line: 526, column: 17, scope: !2850)
!2901 = !DILocation(line: 526, column: 19, scope: !2850)
!2902 = !DILocation(line: 527, column: 28, scope: !2850)
!2903 = !DILocation(line: 527, column: 4, scope: !2850)
!2904 = !DILocation(line: 527, column: 12, scope: !2850)
!2905 = !DILocation(line: 527, column: 17, scope: !2850)
!2906 = !DILocation(line: 527, column: 26, scope: !2850)
!2907 = !DILocation(line: 528, column: 28, scope: !2850)
!2908 = !DILocation(line: 528, column: 33, scope: !2850)
!2909 = !DILocation(line: 528, column: 4, scope: !2850)
!2910 = !DILocation(line: 528, column: 12, scope: !2850)
!2911 = !DILocation(line: 528, column: 17, scope: !2850)
!2912 = !DILocation(line: 528, column: 26, scope: !2850)
!2913 = !DILocation(line: 529, column: 23, scope: !2850)
!2914 = !DILocation(line: 529, column: 4, scope: !2850)
!2915 = !DILocation(line: 529, column: 12, scope: !2850)
!2916 = !DILocation(line: 529, column: 17, scope: !2850)
!2917 = !DILocation(line: 529, column: 21, scope: !2850)
!2918 = !DILocation(line: 530, column: 29, scope: !2850)
!2919 = !DILocation(line: 530, column: 4, scope: !2850)
!2920 = !DILocation(line: 530, column: 12, scope: !2850)
!2921 = !DILocation(line: 530, column: 17, scope: !2850)
!2922 = !DILocation(line: 530, column: 27, scope: !2850)
!2923 = !DILocation(line: 531, column: 31, scope: !2850)
!2924 = !DILocation(line: 531, column: 4, scope: !2850)
!2925 = !DILocation(line: 531, column: 12, scope: !2850)
!2926 = !DILocation(line: 531, column: 17, scope: !2850)
!2927 = !DILocation(line: 531, column: 29, scope: !2850)
!2928 = !DILocation(line: 532, column: 29, scope: !2850)
!2929 = !DILocation(line: 532, column: 4, scope: !2850)
!2930 = !DILocation(line: 532, column: 12, scope: !2850)
!2931 = !DILocation(line: 532, column: 17, scope: !2850)
!2932 = !DILocation(line: 532, column: 27, scope: !2850)
!2933 = !DILocation(line: 533, column: 24, scope: !2850)
!2934 = !DILocation(line: 533, column: 4, scope: !2850)
!2935 = !DILocation(line: 533, column: 12, scope: !2850)
!2936 = !DILocation(line: 533, column: 17, scope: !2850)
!2937 = !DILocation(line: 533, column: 22, scope: !2850)
!2938 = !DILocation(line: 535, column: 4, scope: !2850)
!2939 = !DILocation(line: 535, column: 12, scope: !2850)
!2940 = !DILocation(line: 535, column: 23, scope: !2850)
!2941 = !DILocation(line: 536, column: 4, scope: !2850)
!2942 = !DILocation(line: 536, column: 12, scope: !2850)
!2943 = !DILocation(line: 536, column: 23, scope: !2850)
!2944 = !DILocation(line: 538, column: 20, scope: !2850)
!2945 = !DILocation(line: 538, column: 28, scope: !2850)
!2946 = !DILocation(line: 538, column: 39, scope: !2850)
!2947 = !DILocation(line: 538, column: 46, scope: !2850)
!2948 = !DILocation(line: 538, column: 54, scope: !2850)
!2949 = !DILocation(line: 538, column: 73, scope: !2850)
!2950 = !DILocation(line: 538, column: 78, scope: !2850)
!2951 = !DILocation(line: 538, column: 4, scope: !2850)
!2952 = !DILocation(line: 540, column: 8, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 540, column: 8)
!2954 = !DILocation(line: 540, column: 19, scope: !2953)
!2955 = !DILocation(line: 540, column: 8, scope: !2850)
!2956 = !DILocation(line: 541, column: 33, scope: !2953)
!2957 = !DILocation(line: 541, column: 5, scope: !2953)
!2958 = !DILocation(line: 542, column: 3, scope: !2850)
!2959 = !DILocation(line: 513, column: 32, scope: !2845)
!2960 = !DILocation(line: 513, column: 3, scope: !2845)
!2961 = distinct !{!2961, !2848, !2962}
!2962 = !DILocation(line: 542, column: 3, scope: !2842)
!2963 = !DILocation(line: 545, column: 7, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 545, column: 7)
!2965 = !DILocation(line: 545, column: 18, scope: !2964)
!2966 = !DILocation(line: 545, column: 7, scope: !2753)
!2967 = !DILocation(line: 546, column: 4, scope: !2964)
!2968 = !DILocation(line: 548, column: 29, scope: !2964)
!2969 = !DILocation(line: 548, column: 28, scope: !2964)
!2970 = !DILocation(line: 548, column: 4, scope: !2964)
!2971 = !DILocation(line: 551, column: 24, scope: !2753)
!2972 = !DILocation(line: 551, column: 35, scope: !2753)
!2973 = !DILocation(line: 551, column: 3, scope: !2753)
!2974 = !DILocation(line: 551, column: 11, scope: !2753)
!2975 = !DILocation(line: 551, column: 22, scope: !2753)
!2976 = !DILocation(line: 552, column: 24, scope: !2753)
!2977 = !DILocation(line: 552, column: 35, scope: !2753)
!2978 = !DILocation(line: 552, column: 3, scope: !2753)
!2979 = !DILocation(line: 552, column: 11, scope: !2753)
!2980 = !DILocation(line: 552, column: 22, scope: !2753)
!2981 = !DILocation(line: 554, column: 10, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 554, column: 3)
!2983 = !DILocation(line: 554, column: 8, scope: !2982)
!2984 = !DILocation(line: 554, column: 15, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2982, file: !3, line: 554, column: 3)
!2986 = !DILocation(line: 554, column: 19, scope: !2985)
!2987 = !DILocation(line: 554, column: 17, scope: !2985)
!2988 = !DILocation(line: 554, column: 3, scope: !2982)
!2989 = !DILocation(line: 555, column: 32, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 554, column: 36)
!2991 = !DILocation(line: 555, column: 40, scope: !2990)
!2992 = !DILocation(line: 555, column: 52, scope: !2990)
!2993 = !DILocation(line: 555, column: 60, scope: !2990)
!2994 = !DILocation(line: 555, column: 63, scope: !2990)
!2995 = !DILocation(line: 555, column: 25, scope: !2990)
!2996 = !DILocation(line: 555, column: 4, scope: !2990)
!2997 = !DILocation(line: 555, column: 12, scope: !2990)
!2998 = !DILocation(line: 555, column: 23, scope: !2990)
!2999 = !DILocation(line: 556, column: 32, scope: !2990)
!3000 = !DILocation(line: 556, column: 40, scope: !2990)
!3001 = !DILocation(line: 556, column: 52, scope: !2990)
!3002 = !DILocation(line: 556, column: 60, scope: !2990)
!3003 = !DILocation(line: 556, column: 63, scope: !2990)
!3004 = !DILocation(line: 556, column: 25, scope: !2990)
!3005 = !DILocation(line: 556, column: 4, scope: !2990)
!3006 = !DILocation(line: 556, column: 12, scope: !2990)
!3007 = !DILocation(line: 556, column: 23, scope: !2990)
!3008 = !DILocation(line: 557, column: 3, scope: !2990)
!3009 = !DILocation(line: 554, column: 32, scope: !2985)
!3010 = !DILocation(line: 554, column: 3, scope: !2985)
!3011 = distinct !{!3011, !2988, !3012}
!3012 = !DILocation(line: 557, column: 3, scope: !2982)
!3013 = !DILocation(line: 559, column: 23, scope: !2753)
!3014 = !DILocation(line: 559, column: 3, scope: !2753)
!3015 = !DILocation(line: 562, column: 7, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 562, column: 7)
!3017 = !DILocation(line: 562, column: 7, scope: !2753)
!3018 = !DILocation(line: 563, column: 4, scope: !3016)
!3019 = !DILocation(line: 563, column: 17, scope: !3016)
!3020 = !DILocation(line: 565, column: 3, scope: !2753)
!3021 = !DILocation(line: 565, column: 13, scope: !2753)
!3022 = !DILocation(line: 567, column: 26, scope: !2753)
!3023 = !DILocation(line: 567, column: 31, scope: !2753)
!3024 = !DILocation(line: 567, column: 3, scope: !2753)
!3025 = !DILocation(line: 568, column: 2, scope: !2753)
!3026 = !DILocation(line: 569, column: 1, scope: !2710)
!3027 = distinct !DISubprogram(name: "apply_tangmat_callback", scope: !3, file: !3, line: 852, type: !2162, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!3028 = !DILocalVariable(name: "lores_dm", arg: 1, scope: !3027, file: !3, line: 852, type: !344)
!3029 = !DILocation(line: 852, column: 49, scope: !3027)
!3030 = !DILocalVariable(name: "hires_dm", arg: 2, scope: !3027, file: !3, line: 852, type: !344)
!3031 = !DILocation(line: 852, column: 72, scope: !3027)
!3032 = !DILocalVariable(name: "UNUSED_thread_data", arg: 3, scope: !3027, file: !3, line: 852, type: !90)
!3033 = !DILocation(line: 852, column: 88, scope: !3027)
!3034 = !DILocalVariable(name: "bake_data", arg: 4, scope: !3027, file: !3, line: 853, type: !90)
!3035 = !DILocation(line: 853, column: 42, scope: !3027)
!3036 = !DILocalVariable(name: "ibuf", arg: 5, scope: !3027, file: !3, line: 853, type: !2157)
!3037 = !DILocation(line: 853, column: 60, scope: !3027)
!3038 = !DILocalVariable(name: "face_index", arg: 6, scope: !3027, file: !3, line: 853, type: !2164)
!3039 = !DILocation(line: 853, column: 76, scope: !3027)
!3040 = !DILocalVariable(name: "lvl", arg: 7, scope: !3027, file: !3, line: 853, type: !2164)
!3041 = !DILocation(line: 853, column: 98, scope: !3027)
!3042 = !DILocalVariable(name: "st", arg: 8, scope: !3027, file: !3, line: 854, type: !622)
!3043 = !DILocation(line: 854, column: 48, scope: !3027)
!3044 = !DILocalVariable(name: "tangmat", arg: 9, scope: !3027, file: !3, line: 854, type: !656)
!3045 = !DILocation(line: 854, column: 61, scope: !3027)
!3046 = !DILocalVariable(name: "x", arg: 10, scope: !3027, file: !3, line: 854, type: !2164)
!3047 = !DILocation(line: 854, column: 86, scope: !3027)
!3048 = !DILocalVariable(name: "y", arg: 11, scope: !3027, file: !3, line: 854, type: !2164)
!3049 = !DILocation(line: 854, column: 99, scope: !3027)
!3050 = !DILocalVariable(name: "mtface", scope: !3027, file: !3, line: 856, type: !2141)
!3051 = !DILocation(line: 856, column: 10, scope: !3027)
!3052 = !DILocation(line: 856, column: 41, scope: !3027)
!3053 = !DILocation(line: 856, column: 51, scope: !3027)
!3054 = !DILocation(line: 856, column: 19, scope: !3027)
!3055 = !DILocalVariable(name: "mface", scope: !3027, file: !3, line: 857, type: !2139)
!3056 = !DILocation(line: 857, column: 8, scope: !3027)
!3057 = !DILocalVariable(name: "normal_data", scope: !3027, file: !3, line: 858, type: !2181)
!3058 = !DILocation(line: 858, column: 19, scope: !3027)
!3059 = !DILocation(line: 858, column: 52, scope: !3027)
!3060 = !DILocation(line: 858, column: 33, scope: !3027)
!3061 = !DILocalVariable(name: "uv", scope: !3027, file: !3, line: 859, type: !906)
!3062 = !DILocation(line: 859, column: 8, scope: !3027)
!3063 = !DILocalVariable(name: "st0", scope: !3027, file: !3, line: 859, type: !191)
!3064 = !DILocation(line: 859, column: 16, scope: !3027)
!3065 = !DILocalVariable(name: "st1", scope: !3027, file: !3, line: 859, type: !191)
!3066 = !DILocation(line: 859, column: 22, scope: !3027)
!3067 = !DILocalVariable(name: "st2", scope: !3027, file: !3, line: 859, type: !191)
!3068 = !DILocation(line: 859, column: 28, scope: !3027)
!3069 = !DILocalVariable(name: "st3", scope: !3027, file: !3, line: 859, type: !191)
!3070 = !DILocation(line: 859, column: 34, scope: !3027)
!3071 = !DILocalVariable(name: "pixel", scope: !3027, file: !3, line: 860, type: !132)
!3072 = !DILocation(line: 860, column: 6, scope: !3027)
!3073 = !DILocation(line: 860, column: 14, scope: !3027)
!3074 = !DILocation(line: 860, column: 20, scope: !3027)
!3075 = !DILocation(line: 860, column: 24, scope: !3027)
!3076 = !DILocation(line: 860, column: 22, scope: !3027)
!3077 = !DILocation(line: 860, column: 28, scope: !3027)
!3078 = !DILocation(line: 860, column: 26, scope: !3027)
!3079 = !DILocalVariable(name: "n", scope: !3027, file: !3, line: 861, type: !437)
!3080 = !DILocation(line: 861, column: 8, scope: !3027)
!3081 = !DILocalVariable(name: "vec", scope: !3027, file: !3, line: 861, type: !437)
!3082 = !DILocation(line: 861, column: 14, scope: !3027)
!3083 = !DILocalVariable(name: "tmp", scope: !3027, file: !3, line: 861, type: !437)
!3084 = !DILocation(line: 861, column: 22, scope: !3027)
!3085 = !DILocation(line: 863, column: 2, scope: !3027)
!3086 = !DILocation(line: 863, column: 12, scope: !3027)
!3087 = !DILocation(line: 863, column: 24, scope: !3027)
!3088 = !DILocation(line: 863, column: 34, scope: !3027)
!3089 = !DILocation(line: 865, column: 8, scope: !3027)
!3090 = !DILocation(line: 865, column: 15, scope: !3027)
!3091 = !DILocation(line: 865, column: 27, scope: !3027)
!3092 = !DILocation(line: 865, column: 6, scope: !3027)
!3093 = !DILocation(line: 866, column: 8, scope: !3027)
!3094 = !DILocation(line: 866, column: 15, scope: !3027)
!3095 = !DILocation(line: 866, column: 27, scope: !3027)
!3096 = !DILocation(line: 866, column: 6, scope: !3027)
!3097 = !DILocation(line: 867, column: 8, scope: !3027)
!3098 = !DILocation(line: 867, column: 15, scope: !3027)
!3099 = !DILocation(line: 867, column: 27, scope: !3027)
!3100 = !DILocation(line: 867, column: 6, scope: !3027)
!3101 = !DILocation(line: 869, column: 12, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 869, column: 6)
!3103 = !DILocation(line: 869, column: 6, scope: !3102)
!3104 = !DILocation(line: 869, column: 6, scope: !3027)
!3105 = !DILocation(line: 870, column: 9, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 869, column: 16)
!3107 = !DILocation(line: 870, column: 16, scope: !3106)
!3108 = !DILocation(line: 870, column: 28, scope: !3106)
!3109 = !DILocation(line: 870, column: 7, scope: !3106)
!3110 = !DILocation(line: 871, column: 22, scope: !3106)
!3111 = !DILocation(line: 871, column: 26, scope: !3106)
!3112 = !DILocation(line: 871, column: 30, scope: !3106)
!3113 = !DILocation(line: 871, column: 35, scope: !3106)
!3114 = !DILocation(line: 871, column: 40, scope: !3106)
!3115 = !DILocation(line: 871, column: 45, scope: !3106)
!3116 = !DILocation(line: 871, column: 3, scope: !3106)
!3117 = !DILocation(line: 872, column: 2, scope: !3106)
!3118 = !DILocation(line: 874, column: 21, scope: !3102)
!3119 = !DILocation(line: 874, column: 25, scope: !3102)
!3120 = !DILocation(line: 874, column: 29, scope: !3102)
!3121 = !DILocation(line: 874, column: 34, scope: !3102)
!3122 = !DILocation(line: 874, column: 39, scope: !3102)
!3123 = !DILocation(line: 874, column: 3, scope: !3102)
!3124 = !DILocation(line: 876, column: 2, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 876, column: 2)
!3126 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 876, column: 2)
!3127 = !DILocation(line: 876, column: 2, scope: !3126)
!3128 = !DILocation(line: 876, column: 2, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3125, file: !3, line: 876, column: 2)
!3130 = !DILocation(line: 877, column: 2, scope: !3131)
!3131 = distinct !DILexicalBlock(scope: !3132, file: !3, line: 877, column: 2)
!3132 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 877, column: 2)
!3133 = !DILocation(line: 877, column: 2, scope: !3132)
!3134 = !DILocation(line: 877, column: 2, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3131, file: !3, line: 877, column: 2)
!3136 = !DILocation(line: 879, column: 17, scope: !3027)
!3137 = !DILocation(line: 879, column: 27, scope: !3027)
!3138 = !DILocation(line: 880, column: 17, scope: !3027)
!3139 = !DILocation(line: 880, column: 30, scope: !3027)
!3140 = !DILocation(line: 880, column: 54, scope: !3027)
!3141 = !DILocation(line: 880, column: 67, scope: !3027)
!3142 = !DILocation(line: 881, column: 17, scope: !3027)
!3143 = !DILocation(line: 881, column: 22, scope: !3027)
!3144 = !DILocation(line: 881, column: 34, scope: !3027)
!3145 = !DILocation(line: 881, column: 41, scope: !3027)
!3146 = !DILocation(line: 881, column: 54, scope: !3027)
!3147 = !DILocation(line: 879, column: 2, scope: !3027)
!3148 = !DILocation(line: 883, column: 14, scope: !3027)
!3149 = !DILocation(line: 883, column: 19, scope: !3027)
!3150 = !DILocation(line: 883, column: 28, scope: !3027)
!3151 = !DILocation(line: 883, column: 2, scope: !3027)
!3152 = !DILocation(line: 884, column: 15, scope: !3027)
!3153 = !DILocation(line: 884, column: 2, scope: !3027)
!3154 = !DILocation(line: 885, column: 12, scope: !3027)
!3155 = !DILocation(line: 885, column: 2, scope: !3027)
!3156 = !DILocation(line: 886, column: 12, scope: !3027)
!3157 = !DILocation(line: 886, column: 17, scope: !3027)
!3158 = !DILocation(line: 886, column: 2, scope: !3027)
!3159 = !DILocation(line: 888, column: 6, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 888, column: 6)
!3161 = !DILocation(line: 888, column: 12, scope: !3160)
!3162 = !DILocation(line: 888, column: 6, scope: !3027)
!3163 = !DILocalVariable(name: "rrgbf", scope: !3164, file: !3, line: 889, type: !191)
!3164 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 888, column: 24)
!3165 = !DILocation(line: 889, column: 10, scope: !3164)
!3166 = !DILocation(line: 889, column: 18, scope: !3164)
!3167 = !DILocation(line: 889, column: 24, scope: !3164)
!3168 = !DILocation(line: 889, column: 37, scope: !3164)
!3169 = !DILocation(line: 889, column: 43, scope: !3164)
!3170 = !DILocation(line: 889, column: 35, scope: !3164)
!3171 = !DILocation(line: 890, column: 14, scope: !3164)
!3172 = !DILocation(line: 890, column: 3, scope: !3164)
!3173 = !DILocation(line: 890, column: 12, scope: !3164)
!3174 = !DILocation(line: 891, column: 14, scope: !3164)
!3175 = !DILocation(line: 891, column: 3, scope: !3164)
!3176 = !DILocation(line: 891, column: 12, scope: !3164)
!3177 = !DILocation(line: 892, column: 14, scope: !3164)
!3178 = !DILocation(line: 892, column: 3, scope: !3164)
!3179 = !DILocation(line: 892, column: 12, scope: !3164)
!3180 = !DILocation(line: 893, column: 3, scope: !3164)
!3181 = !DILocation(line: 893, column: 12, scope: !3164)
!3182 = !DILocation(line: 894, column: 2, scope: !3164)
!3183 = !DILocalVariable(name: "rrgb", scope: !3184, file: !3, line: 896, type: !1147)
!3184 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 895, column: 7)
!3185 = !DILocation(line: 896, column: 18, scope: !3184)
!3186 = !DILocation(line: 896, column: 42, scope: !3184)
!3187 = !DILocation(line: 896, column: 48, scope: !3184)
!3188 = !DILocation(line: 896, column: 25, scope: !3184)
!3189 = !DILocation(line: 896, column: 55, scope: !3184)
!3190 = !DILocation(line: 896, column: 61, scope: !3184)
!3191 = !DILocation(line: 896, column: 53, scope: !3184)
!3192 = !DILocation(line: 897, column: 22, scope: !3184)
!3193 = !DILocation(line: 897, column: 28, scope: !3184)
!3194 = !DILocation(line: 897, column: 3, scope: !3184)
!3195 = !DILocation(line: 898, column: 3, scope: !3184)
!3196 = !DILocation(line: 898, column: 11, scope: !3184)
!3197 = !DILocation(line: 900, column: 1, scope: !3027)
!3198 = distinct !DISubprogram(name: "init_normal_data", scope: !3, file: !3, line: 827, type: !2715, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!3199 = !DILocalVariable(name: "bkr", arg: 1, scope: !3198, file: !3, line: 827, type: !338)
!3200 = !DILocation(line: 827, column: 51, scope: !3198)
!3201 = !DILocalVariable(name: "UNUSED_ima", arg: 2, scope: !3198, file: !3, line: 827, type: !91)
!3202 = !DILocation(line: 827, column: 63, scope: !3198)
!3203 = !DILocalVariable(name: "normal_data", scope: !3198, file: !3, line: 829, type: !2181)
!3204 = !DILocation(line: 829, column: 19, scope: !3198)
!3205 = !DILocalVariable(name: "lodm", scope: !3198, file: !3, line: 830, type: !344)
!3206 = !DILocation(line: 830, column: 15, scope: !3198)
!3207 = !DILocation(line: 830, column: 22, scope: !3198)
!3208 = !DILocation(line: 830, column: 27, scope: !3198)
!3209 = !DILocation(line: 832, column: 16, scope: !3198)
!3210 = !DILocation(line: 832, column: 14, scope: !3198)
!3211 = !DILocation(line: 834, column: 40, scope: !3198)
!3212 = !DILocation(line: 834, column: 46, scope: !3198)
!3213 = !DILocation(line: 834, column: 67, scope: !3198)
!3214 = !DILocation(line: 834, column: 2, scope: !3198)
!3215 = !DILocation(line: 834, column: 15, scope: !3198)
!3216 = !DILocation(line: 834, column: 38, scope: !3198)
!3217 = !DILocation(line: 835, column: 39, scope: !3198)
!3218 = !DILocation(line: 835, column: 45, scope: !3198)
!3219 = !DILocation(line: 835, column: 62, scope: !3198)
!3220 = !DILocation(line: 835, column: 2, scope: !3198)
!3221 = !DILocation(line: 835, column: 15, scope: !3198)
!3222 = !DILocation(line: 835, column: 37, scope: !3198)
!3223 = !DILocation(line: 837, column: 17, scope: !3198)
!3224 = !DILocation(line: 837, column: 9, scope: !3198)
!3225 = !DILocation(line: 837, column: 2, scope: !3198)
!3226 = distinct !DISubprogram(name: "free_normal_data", scope: !3, file: !3, line: 840, type: !2719, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!3227 = !DILocalVariable(name: "bake_data", arg: 1, scope: !3226, file: !3, line: 840, type: !90)
!3228 = !DILocation(line: 840, column: 36, scope: !3226)
!3229 = !DILocalVariable(name: "normal_data", scope: !3226, file: !3, line: 842, type: !2181)
!3230 = !DILocation(line: 842, column: 19, scope: !3226)
!3231 = !DILocation(line: 842, column: 52, scope: !3226)
!3232 = !DILocation(line: 842, column: 33, scope: !3226)
!3233 = !DILocation(line: 844, column: 2, scope: !3226)
!3234 = !DILocation(line: 844, column: 12, scope: !3226)
!3235 = !DILocation(line: 845, column: 1, scope: !3226)
!3236 = distinct !DISubprogram(name: "apply_heights_callback", scope: !3, file: !3, line: 755, type: !2162, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!3237 = !DILocalVariable(name: "lores_dm", arg: 1, scope: !3236, file: !3, line: 755, type: !344)
!3238 = !DILocation(line: 755, column: 49, scope: !3236)
!3239 = !DILocalVariable(name: "hires_dm", arg: 2, scope: !3236, file: !3, line: 755, type: !344)
!3240 = !DILocation(line: 755, column: 72, scope: !3236)
!3241 = !DILocalVariable(name: "thread_data_v", arg: 3, scope: !3236, file: !3, line: 755, type: !90)
!3242 = !DILocation(line: 755, column: 88, scope: !3236)
!3243 = !DILocalVariable(name: "bake_data", arg: 4, scope: !3236, file: !3, line: 755, type: !90)
!3244 = !DILocation(line: 755, column: 109, scope: !3236)
!3245 = !DILocalVariable(name: "ibuf", arg: 5, scope: !3236, file: !3, line: 756, type: !2157)
!3246 = !DILocation(line: 756, column: 43, scope: !3236)
!3247 = !DILocalVariable(name: "face_index", arg: 6, scope: !3236, file: !3, line: 756, type: !2164)
!3248 = !DILocation(line: 756, column: 59, scope: !3236)
!3249 = !DILocalVariable(name: "lvl", arg: 7, scope: !3236, file: !3, line: 756, type: !2164)
!3250 = !DILocation(line: 756, column: 81, scope: !3236)
!3251 = !DILocalVariable(name: "st", arg: 8, scope: !3236, file: !3, line: 756, type: !622)
!3252 = !DILocation(line: 756, column: 98, scope: !3236)
!3253 = !DILocalVariable(name: "UNUSED_tangmat", arg: 9, scope: !3236, file: !3, line: 757, type: !656)
!3254 = !DILocation(line: 757, column: 42, scope: !3236)
!3255 = !DILocalVariable(name: "x", arg: 10, scope: !3236, file: !3, line: 757, type: !2164)
!3256 = !DILocation(line: 757, column: 75, scope: !3236)
!3257 = !DILocalVariable(name: "y", arg: 11, scope: !3236, file: !3, line: 757, type: !2164)
!3258 = !DILocation(line: 757, column: 88, scope: !3236)
!3259 = !DILocalVariable(name: "mtface", scope: !3236, file: !3, line: 759, type: !2141)
!3260 = !DILocation(line: 759, column: 10, scope: !3236)
!3261 = !DILocation(line: 759, column: 41, scope: !3236)
!3262 = !DILocation(line: 759, column: 51, scope: !3236)
!3263 = !DILocation(line: 759, column: 19, scope: !3236)
!3264 = !DILocalVariable(name: "mface", scope: !3236, file: !3, line: 760, type: !2139)
!3265 = !DILocation(line: 760, column: 8, scope: !3236)
!3266 = !DILocalVariable(name: "height_data", scope: !3236, file: !3, line: 761, type: !2190)
!3267 = !DILocation(line: 761, column: 19, scope: !3236)
!3268 = !DILocation(line: 761, column: 52, scope: !3236)
!3269 = !DILocation(line: 761, column: 33, scope: !3236)
!3270 = !DILocalVariable(name: "thread_data", scope: !3236, file: !3, line: 762, type: !317)
!3271 = !DILocation(line: 762, column: 22, scope: !3236)
!3272 = !DILocation(line: 762, column: 59, scope: !3236)
!3273 = !DILocation(line: 762, column: 36, scope: !3236)
!3274 = !DILocalVariable(name: "uv", scope: !3236, file: !3, line: 763, type: !906)
!3275 = !DILocation(line: 763, column: 8, scope: !3236)
!3276 = !DILocalVariable(name: "st0", scope: !3236, file: !3, line: 763, type: !191)
!3277 = !DILocation(line: 763, column: 16, scope: !3236)
!3278 = !DILocalVariable(name: "st1", scope: !3236, file: !3, line: 763, type: !191)
!3279 = !DILocation(line: 763, column: 22, scope: !3236)
!3280 = !DILocalVariable(name: "st2", scope: !3236, file: !3, line: 763, type: !191)
!3281 = !DILocation(line: 763, column: 28, scope: !3236)
!3282 = !DILocalVariable(name: "st3", scope: !3236, file: !3, line: 763, type: !191)
!3283 = !DILocation(line: 763, column: 34, scope: !3236)
!3284 = !DILocalVariable(name: "pixel", scope: !3236, file: !3, line: 764, type: !132)
!3285 = !DILocation(line: 764, column: 6, scope: !3236)
!3286 = !DILocation(line: 764, column: 14, scope: !3236)
!3287 = !DILocation(line: 764, column: 20, scope: !3236)
!3288 = !DILocation(line: 764, column: 24, scope: !3236)
!3289 = !DILocation(line: 764, column: 22, scope: !3236)
!3290 = !DILocation(line: 764, column: 28, scope: !3236)
!3291 = !DILocation(line: 764, column: 26, scope: !3236)
!3292 = !DILocalVariable(name: "vec", scope: !3236, file: !3, line: 765, type: !437)
!3293 = !DILocation(line: 765, column: 8, scope: !3236)
!3294 = !DILocalVariable(name: "p0", scope: !3236, file: !3, line: 765, type: !437)
!3295 = !DILocation(line: 765, column: 16, scope: !3236)
!3296 = !DILocalVariable(name: "p1", scope: !3236, file: !3, line: 765, type: !437)
!3297 = !DILocation(line: 765, column: 23, scope: !3236)
!3298 = !DILocalVariable(name: "n", scope: !3236, file: !3, line: 765, type: !437)
!3299 = !DILocation(line: 765, column: 30, scope: !3236)
!3300 = !DILocalVariable(name: "len", scope: !3236, file: !3, line: 765, type: !192)
!3301 = !DILocation(line: 765, column: 36, scope: !3236)
!3302 = !DILocation(line: 767, column: 2, scope: !3236)
!3303 = !DILocation(line: 767, column: 12, scope: !3236)
!3304 = !DILocation(line: 767, column: 24, scope: !3236)
!3305 = !DILocation(line: 767, column: 34, scope: !3236)
!3306 = !DILocation(line: 769, column: 8, scope: !3236)
!3307 = !DILocation(line: 769, column: 15, scope: !3236)
!3308 = !DILocation(line: 769, column: 27, scope: !3236)
!3309 = !DILocation(line: 769, column: 6, scope: !3236)
!3310 = !DILocation(line: 770, column: 8, scope: !3236)
!3311 = !DILocation(line: 770, column: 15, scope: !3236)
!3312 = !DILocation(line: 770, column: 27, scope: !3236)
!3313 = !DILocation(line: 770, column: 6, scope: !3236)
!3314 = !DILocation(line: 771, column: 8, scope: !3236)
!3315 = !DILocation(line: 771, column: 15, scope: !3236)
!3316 = !DILocation(line: 771, column: 27, scope: !3236)
!3317 = !DILocation(line: 771, column: 6, scope: !3236)
!3318 = !DILocation(line: 773, column: 12, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 773, column: 6)
!3320 = !DILocation(line: 773, column: 6, scope: !3319)
!3321 = !DILocation(line: 773, column: 6, scope: !3236)
!3322 = !DILocation(line: 774, column: 9, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3319, file: !3, line: 773, column: 16)
!3324 = !DILocation(line: 774, column: 16, scope: !3323)
!3325 = !DILocation(line: 774, column: 28, scope: !3323)
!3326 = !DILocation(line: 774, column: 7, scope: !3323)
!3327 = !DILocation(line: 775, column: 22, scope: !3323)
!3328 = !DILocation(line: 775, column: 26, scope: !3323)
!3329 = !DILocation(line: 775, column: 30, scope: !3323)
!3330 = !DILocation(line: 775, column: 35, scope: !3323)
!3331 = !DILocation(line: 775, column: 40, scope: !3323)
!3332 = !DILocation(line: 775, column: 45, scope: !3323)
!3333 = !DILocation(line: 775, column: 3, scope: !3323)
!3334 = !DILocation(line: 776, column: 2, scope: !3323)
!3335 = !DILocation(line: 778, column: 21, scope: !3319)
!3336 = !DILocation(line: 778, column: 25, scope: !3319)
!3337 = !DILocation(line: 778, column: 29, scope: !3319)
!3338 = !DILocation(line: 778, column: 34, scope: !3319)
!3339 = !DILocation(line: 778, column: 39, scope: !3319)
!3340 = !DILocation(line: 778, column: 3, scope: !3319)
!3341 = !DILocation(line: 780, column: 2, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 780, column: 2)
!3343 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 780, column: 2)
!3344 = !DILocation(line: 780, column: 2, scope: !3343)
!3345 = !DILocation(line: 780, column: 2, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 780, column: 2)
!3347 = !DILocation(line: 781, column: 2, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3349, file: !3, line: 781, column: 2)
!3349 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 781, column: 2)
!3350 = !DILocation(line: 781, column: 2, scope: !3349)
!3351 = !DILocation(line: 781, column: 2, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3348, file: !3, line: 781, column: 2)
!3353 = !DILocation(line: 783, column: 17, scope: !3236)
!3354 = !DILocation(line: 783, column: 27, scope: !3236)
!3355 = !DILocation(line: 784, column: 17, scope: !3236)
!3356 = !DILocation(line: 784, column: 30, scope: !3236)
!3357 = !DILocation(line: 784, column: 54, scope: !3236)
!3358 = !DILocation(line: 784, column: 67, scope: !3236)
!3359 = !DILocation(line: 785, column: 17, scope: !3236)
!3360 = !DILocation(line: 785, column: 22, scope: !3236)
!3361 = !DILocation(line: 785, column: 34, scope: !3236)
!3362 = !DILocation(line: 785, column: 41, scope: !3236)
!3363 = !DILocation(line: 785, column: 48, scope: !3236)
!3364 = !DILocation(line: 783, column: 2, scope: !3236)
!3365 = !DILocation(line: 787, column: 6, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 787, column: 6)
!3367 = !DILocation(line: 787, column: 19, scope: !3366)
!3368 = !DILocation(line: 787, column: 6, scope: !3236)
!3369 = !DILocation(line: 788, column: 18, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 787, column: 25)
!3371 = !DILocation(line: 788, column: 28, scope: !3370)
!3372 = !DILocation(line: 788, column: 41, scope: !3370)
!3373 = !DILocation(line: 789, column: 18, scope: !3370)
!3374 = !DILocation(line: 789, column: 31, scope: !3370)
!3375 = !DILocation(line: 789, column: 55, scope: !3370)
!3376 = !DILocation(line: 789, column: 68, scope: !3370)
!3377 = !DILocation(line: 790, column: 21, scope: !3370)
!3378 = !DILocation(line: 790, column: 33, scope: !3370)
!3379 = !DILocation(line: 790, column: 40, scope: !3370)
!3380 = !DILocation(line: 790, column: 47, scope: !3370)
!3381 = !DILocation(line: 790, column: 51, scope: !3370)
!3382 = !DILocation(line: 788, column: 3, scope: !3370)
!3383 = !DILocation(line: 791, column: 2, scope: !3370)
!3384 = !DILocation(line: 793, column: 3, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 792, column: 7)
!3386 = !DILocation(line: 793, column: 13, scope: !3385)
!3387 = !DILocation(line: 793, column: 25, scope: !3385)
!3388 = !DILocation(line: 793, column: 35, scope: !3385)
!3389 = !DILocation(line: 795, column: 13, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3385, file: !3, line: 795, column: 7)
!3391 = !DILocation(line: 795, column: 7, scope: !3390)
!3392 = !DILocation(line: 795, column: 7, scope: !3385)
!3393 = !DILocation(line: 796, column: 26, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 795, column: 17)
!3395 = !DILocation(line: 796, column: 44, scope: !3394)
!3396 = !DILocation(line: 796, column: 51, scope: !3394)
!3397 = !DILocation(line: 796, column: 61, scope: !3394)
!3398 = !DILocation(line: 796, column: 4, scope: !3394)
!3399 = !DILocation(line: 797, column: 26, scope: !3394)
!3400 = !DILocation(line: 797, column: 44, scope: !3394)
!3401 = !DILocation(line: 797, column: 51, scope: !3394)
!3402 = !DILocation(line: 797, column: 61, scope: !3394)
!3403 = !DILocation(line: 797, column: 4, scope: !3394)
!3404 = !DILocation(line: 798, column: 3, scope: !3394)
!3405 = !DILocation(line: 800, column: 29, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 799, column: 8)
!3407 = !DILocation(line: 800, column: 47, scope: !3406)
!3408 = !DILocation(line: 800, column: 54, scope: !3406)
!3409 = !DILocation(line: 800, column: 64, scope: !3406)
!3410 = !DILocation(line: 800, column: 4, scope: !3406)
!3411 = !DILocation(line: 801, column: 29, scope: !3406)
!3412 = !DILocation(line: 801, column: 47, scope: !3406)
!3413 = !DILocation(line: 801, column: 54, scope: !3406)
!3414 = !DILocation(line: 801, column: 64, scope: !3406)
!3415 = !DILocation(line: 801, column: 4, scope: !3406)
!3416 = !DILocation(line: 805, column: 14, scope: !3236)
!3417 = !DILocation(line: 805, column: 19, scope: !3236)
!3418 = !DILocation(line: 805, column: 23, scope: !3236)
!3419 = !DILocation(line: 805, column: 2, scope: !3236)
!3420 = !DILocation(line: 806, column: 17, scope: !3236)
!3421 = !DILocation(line: 806, column: 20, scope: !3236)
!3422 = !DILocation(line: 806, column: 8, scope: !3236)
!3423 = !DILocation(line: 806, column: 6, scope: !3236)
!3424 = !DILocation(line: 808, column: 32, scope: !3236)
!3425 = !DILocation(line: 808, column: 2, scope: !3236)
!3426 = !DILocation(line: 808, column: 15, scope: !3236)
!3427 = !DILocation(line: 808, column: 23, scope: !3236)
!3428 = !DILocation(line: 808, column: 30, scope: !3236)
!3429 = !DILocation(line: 810, column: 35, scope: !3236)
!3430 = !DILocation(line: 810, column: 48, scope: !3236)
!3431 = !DILocation(line: 810, column: 60, scope: !3236)
!3432 = !DILocation(line: 810, column: 28, scope: !3236)
!3433 = !DILocation(line: 810, column: 2, scope: !3236)
!3434 = !DILocation(line: 810, column: 15, scope: !3236)
!3435 = !DILocation(line: 810, column: 26, scope: !3236)
!3436 = !DILocation(line: 811, column: 35, scope: !3236)
!3437 = !DILocation(line: 811, column: 48, scope: !3236)
!3438 = !DILocation(line: 811, column: 60, scope: !3236)
!3439 = !DILocation(line: 811, column: 28, scope: !3236)
!3440 = !DILocation(line: 811, column: 2, scope: !3236)
!3441 = !DILocation(line: 811, column: 15, scope: !3236)
!3442 = !DILocation(line: 811, column: 26, scope: !3236)
!3443 = !DILocation(line: 813, column: 6, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3236, file: !3, line: 813, column: 6)
!3445 = !DILocation(line: 813, column: 12, scope: !3444)
!3446 = !DILocation(line: 813, column: 6, scope: !3236)
!3447 = !DILocalVariable(name: "rrgbf", scope: !3448, file: !3, line: 814, type: !191)
!3448 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 813, column: 24)
!3449 = !DILocation(line: 814, column: 10, scope: !3448)
!3450 = !DILocation(line: 814, column: 18, scope: !3448)
!3451 = !DILocation(line: 814, column: 24, scope: !3448)
!3452 = !DILocation(line: 814, column: 37, scope: !3448)
!3453 = !DILocation(line: 814, column: 43, scope: !3448)
!3454 = !DILocation(line: 814, column: 35, scope: !3448)
!3455 = !DILocation(line: 815, column: 36, scope: !3448)
!3456 = !DILocation(line: 815, column: 25, scope: !3448)
!3457 = !DILocation(line: 815, column: 34, scope: !3448)
!3458 = !DILocation(line: 815, column: 14, scope: !3448)
!3459 = !DILocation(line: 815, column: 23, scope: !3448)
!3460 = !DILocation(line: 815, column: 3, scope: !3448)
!3461 = !DILocation(line: 815, column: 12, scope: !3448)
!3462 = !DILocation(line: 816, column: 3, scope: !3448)
!3463 = !DILocation(line: 816, column: 12, scope: !3448)
!3464 = !DILocation(line: 817, column: 2, scope: !3448)
!3465 = !DILocalVariable(name: "rrgb", scope: !3466, file: !3, line: 819, type: !247)
!3466 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 818, column: 7)
!3467 = !DILocation(line: 819, column: 9, scope: !3466)
!3468 = !DILocation(line: 819, column: 24, scope: !3466)
!3469 = !DILocation(line: 819, column: 30, scope: !3466)
!3470 = !DILocation(line: 819, column: 16, scope: !3466)
!3471 = !DILocation(line: 819, column: 37, scope: !3466)
!3472 = !DILocation(line: 819, column: 43, scope: !3466)
!3473 = !DILocation(line: 819, column: 35, scope: !3466)
!3474 = !DILocation(line: 820, column: 33, scope: !3466)
!3475 = !DILocation(line: 820, column: 23, scope: !3466)
!3476 = !DILocation(line: 820, column: 31, scope: !3466)
!3477 = !DILocation(line: 820, column: 13, scope: !3466)
!3478 = !DILocation(line: 820, column: 21, scope: !3466)
!3479 = !DILocation(line: 820, column: 3, scope: !3466)
!3480 = !DILocation(line: 820, column: 11, scope: !3466)
!3481 = !DILocation(line: 821, column: 3, scope: !3466)
!3482 = !DILocation(line: 821, column: 11, scope: !3466)
!3483 = !DILocation(line: 823, column: 1, scope: !3236)
!3484 = distinct !DISubprogram(name: "init_heights_data", scope: !3, file: !3, line: 698, type: !2715, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!3485 = !DILocalVariable(name: "bkr", arg: 1, scope: !3484, file: !3, line: 698, type: !338)
!3486 = !DILocation(line: 698, column: 52, scope: !3484)
!3487 = !DILocalVariable(name: "ima", arg: 2, scope: !3484, file: !3, line: 698, type: !91)
!3488 = !DILocation(line: 698, column: 64, scope: !3484)
!3489 = !DILocalVariable(name: "height_data", scope: !3484, file: !3, line: 700, type: !2190)
!3490 = !DILocation(line: 700, column: 19, scope: !3484)
!3491 = !DILocalVariable(name: "ibuf", scope: !3484, file: !3, line: 701, type: !2157)
!3492 = !DILocation(line: 701, column: 9, scope: !3484)
!3493 = !DILocation(line: 701, column: 39, scope: !3484)
!3494 = !DILocation(line: 701, column: 16, scope: !3484)
!3495 = !DILocalVariable(name: "lodm", scope: !3484, file: !3, line: 702, type: !344)
!3496 = !DILocation(line: 702, column: 15, scope: !3484)
!3497 = !DILocation(line: 702, column: 22, scope: !3484)
!3498 = !DILocation(line: 702, column: 27, scope: !3484)
!3499 = !DILocalVariable(name: "userdata", scope: !3484, file: !3, line: 703, type: !2174)
!3500 = !DILocation(line: 703, column: 21, scope: !3484)
!3501 = !DILocation(line: 703, column: 32, scope: !3484)
!3502 = !DILocation(line: 703, column: 38, scope: !3484)
!3503 = !DILocation(line: 705, column: 6, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3484, file: !3, line: 705, column: 6)
!3505 = !DILocation(line: 705, column: 16, scope: !3504)
!3506 = !DILocation(line: 705, column: 36, scope: !3504)
!3507 = !DILocation(line: 705, column: 6, scope: !3484)
!3508 = !DILocation(line: 706, column: 35, scope: !3504)
!3509 = !DILocation(line: 706, column: 63, scope: !3504)
!3510 = !DILocation(line: 706, column: 69, scope: !3504)
!3511 = !DILocation(line: 706, column: 61, scope: !3504)
!3512 = !DILocation(line: 706, column: 73, scope: !3504)
!3513 = !DILocation(line: 706, column: 79, scope: !3504)
!3514 = !DILocation(line: 706, column: 71, scope: !3504)
!3515 = !DILocation(line: 706, column: 3, scope: !3504)
!3516 = !DILocation(line: 706, column: 13, scope: !3504)
!3517 = !DILocation(line: 706, column: 33, scope: !3504)
!3518 = !DILocation(line: 708, column: 16, scope: !3484)
!3519 = !DILocation(line: 708, column: 14, scope: !3484)
!3520 = !DILocation(line: 710, column: 21, scope: !3484)
!3521 = !DILocation(line: 710, column: 2, scope: !3484)
!3522 = !DILocation(line: 710, column: 15, scope: !3484)
!3523 = !DILocation(line: 710, column: 19, scope: !3484)
!3524 = !DILocation(line: 711, column: 25, scope: !3484)
!3525 = !DILocation(line: 711, column: 35, scope: !3484)
!3526 = !DILocation(line: 711, column: 2, scope: !3484)
!3527 = !DILocation(line: 711, column: 15, scope: !3484)
!3528 = !DILocation(line: 711, column: 23, scope: !3484)
!3529 = !DILocation(line: 713, column: 7, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3484, file: !3, line: 713, column: 6)
!3531 = !DILocation(line: 713, column: 12, scope: !3530)
!3532 = !DILocation(line: 713, column: 6, scope: !3484)
!3533 = !DILocalVariable(name: "smd", scope: !3534, file: !3, line: 714, type: !3535)
!3534 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 713, column: 28)
!3535 = !DIDerivedType(tag: DW_TAG_typedef, name: "SubsurfModifierData", file: !83, line: 136, baseType: !3536)
!3536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SubsurfModifierData", file: !83, line: 130, size: 1088, elements: !3537)
!3537 = !{!3538, !3552, !3553, !3554, !3555, !3556, !3557}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3536, file: !83, line: 131, baseType: !3539, size: 896)
!3539 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !83, line: 110, baseType: !3540)
!3540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !83, line: 99, size: 896, elements: !3541)
!3541 = !{!3542, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3540, file: !83, line: 100, baseType: !3543, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3540, file: !83, line: 100, baseType: !3543, size: 64, offset: 64)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3540, file: !83, line: 102, baseType: !132, size: 32, offset: 128)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3540, file: !83, line: 102, baseType: !132, size: 32, offset: 160)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !3540, file: !83, line: 103, baseType: !132, size: 32, offset: 192)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3540, file: !83, line: 103, baseType: !132, size: 32, offset: 224)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3540, file: !83, line: 104, baseType: !147, size: 512, offset: 256)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3540, file: !83, line: 107, baseType: !913, size: 64, offset: 768)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3540, file: !83, line: 109, baseType: !247, size: 64, offset: 832)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "subdivType", scope: !3536, file: !83, line: 133, baseType: !130, size: 16, offset: 896)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !3536, file: !83, line: 133, baseType: !130, size: 16, offset: 912)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "renderLevels", scope: !3536, file: !83, line: 133, baseType: !130, size: 16, offset: 928)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3536, file: !83, line: 133, baseType: !130, size: 16, offset: 944)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "emCache", scope: !3536, file: !83, line: 135, baseType: !90, size: 64, offset: 960)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "mCache", scope: !3536, file: !83, line: 135, baseType: !90, size: 64, offset: 1024)
!3558 = !DILocation(line: 714, column: 23, scope: !3534)
!3559 = !DILocalVariable(name: "ss_lvl", scope: !3534, file: !3, line: 715, type: !132)
!3560 = !DILocation(line: 715, column: 7, scope: !3534)
!3561 = !DILocation(line: 715, column: 16, scope: !3534)
!3562 = !DILocation(line: 715, column: 21, scope: !3534)
!3563 = !DILocation(line: 715, column: 31, scope: !3534)
!3564 = !DILocation(line: 715, column: 36, scope: !3534)
!3565 = !DILocation(line: 715, column: 29, scope: !3534)
!3566 = !DILocation(line: 717, column: 3, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 717, column: 3)
!3568 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 717, column: 3)
!3569 = !DILocation(line: 717, column: 3, scope: !3568)
!3570 = !DILocation(line: 717, column: 3, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3567, file: !3, line: 717, column: 3)
!3572 = !DILocation(line: 719, column: 7, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 719, column: 7)
!3574 = !DILocation(line: 719, column: 14, scope: !3573)
!3575 = !DILocation(line: 719, column: 7, scope: !3534)
!3576 = !DILocation(line: 720, column: 36, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 719, column: 19)
!3578 = !DILocation(line: 720, column: 21, scope: !3577)
!3579 = !DILocation(line: 720, column: 34, scope: !3577)
!3580 = !DILocation(line: 720, column: 8, scope: !3577)
!3581 = !DILocation(line: 720, column: 15, scope: !3577)
!3582 = !DILocation(line: 721, column: 8, scope: !3577)
!3583 = !DILocation(line: 721, column: 14, scope: !3577)
!3584 = !DILocation(line: 723, column: 8, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 723, column: 8)
!3586 = !DILocation(line: 723, column: 13, scope: !3585)
!3587 = !DILocation(line: 723, column: 8, scope: !3577)
!3588 = !DILocation(line: 724, column: 9, scope: !3585)
!3589 = !DILocation(line: 724, column: 20, scope: !3585)
!3590 = !DILocation(line: 724, column: 5, scope: !3585)
!3591 = !DILocation(line: 726, column: 58, scope: !3577)
!3592 = !DILocation(line: 726, column: 63, scope: !3577)
!3593 = !DILocation(line: 726, column: 24, scope: !3577)
!3594 = !DILocation(line: 726, column: 4, scope: !3577)
!3595 = !DILocation(line: 726, column: 17, scope: !3577)
!3596 = !DILocation(line: 726, column: 22, scope: !3577)
!3597 = !DILocation(line: 727, column: 22, scope: !3577)
!3598 = !DILocation(line: 727, column: 35, scope: !3577)
!3599 = !DILocation(line: 727, column: 4, scope: !3577)
!3600 = !DILocation(line: 728, column: 3, scope: !3577)
!3601 = !DILocation(line: 729, column: 2, scope: !3534)
!3602 = !DILocation(line: 731, column: 40, scope: !3484)
!3603 = !DILocation(line: 731, column: 46, scope: !3484)
!3604 = !DILocation(line: 731, column: 67, scope: !3484)
!3605 = !DILocation(line: 731, column: 2, scope: !3484)
!3606 = !DILocation(line: 731, column: 15, scope: !3484)
!3607 = !DILocation(line: 731, column: 38, scope: !3484)
!3608 = !DILocation(line: 732, column: 39, scope: !3484)
!3609 = !DILocation(line: 732, column: 45, scope: !3484)
!3610 = !DILocation(line: 732, column: 62, scope: !3484)
!3611 = !DILocation(line: 732, column: 2, scope: !3484)
!3612 = !DILocation(line: 732, column: 15, scope: !3484)
!3613 = !DILocation(line: 732, column: 37, scope: !3484)
!3614 = !DILocation(line: 734, column: 25, scope: !3484)
!3615 = !DILocation(line: 734, column: 30, scope: !3484)
!3616 = !DILocation(line: 734, column: 2, scope: !3484)
!3617 = !DILocation(line: 736, column: 17, scope: !3484)
!3618 = !DILocation(line: 736, column: 9, scope: !3484)
!3619 = !DILocation(line: 736, column: 2, scope: !3484)
!3620 = distinct !DISubprogram(name: "free_heights_data", scope: !3, file: !3, line: 739, type: !2719, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!3621 = !DILocalVariable(name: "bake_data", arg: 1, scope: !3620, file: !3, line: 739, type: !90)
!3622 = !DILocation(line: 739, column: 37, scope: !3620)
!3623 = !DILocalVariable(name: "height_data", scope: !3620, file: !3, line: 741, type: !2190)
!3624 = !DILocation(line: 741, column: 19, scope: !3620)
!3625 = !DILocation(line: 741, column: 52, scope: !3620)
!3626 = !DILocation(line: 741, column: 33, scope: !3620)
!3627 = !DILocation(line: 743, column: 6, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 743, column: 6)
!3629 = !DILocation(line: 743, column: 19, scope: !3628)
!3630 = !DILocation(line: 743, column: 6, scope: !3620)
!3631 = !DILocation(line: 744, column: 3, scope: !3628)
!3632 = !DILocation(line: 744, column: 16, scope: !3628)
!3633 = !DILocation(line: 744, column: 22, scope: !3628)
!3634 = !DILocation(line: 744, column: 30, scope: !3628)
!3635 = !DILocation(line: 744, column: 43, scope: !3628)
!3636 = !DILocation(line: 746, column: 2, scope: !3620)
!3637 = !DILocation(line: 746, column: 12, scope: !3620)
!3638 = !DILocation(line: 747, column: 1, scope: !3620)
!3639 = distinct !DISubprogram(name: "apply_ao_callback", scope: !3, file: !3, line: 1090, type: !2162, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!3640 = !DILocalVariable(name: "lores_dm", arg: 1, scope: !3639, file: !3, line: 1090, type: !344)
!3641 = !DILocation(line: 1090, column: 44, scope: !3639)
!3642 = !DILocalVariable(name: "hires_dm", arg: 2, scope: !3639, file: !3, line: 1090, type: !344)
!3643 = !DILocation(line: 1090, column: 67, scope: !3639)
!3644 = !DILocalVariable(name: "UNUSED_thread_data", arg: 3, scope: !3639, file: !3, line: 1090, type: !90)
!3645 = !DILocation(line: 1090, column: 83, scope: !3639)
!3646 = !DILocalVariable(name: "bake_data", arg: 4, scope: !3639, file: !3, line: 1091, type: !90)
!3647 = !DILocation(line: 1091, column: 37, scope: !3639)
!3648 = !DILocalVariable(name: "ibuf", arg: 5, scope: !3639, file: !3, line: 1091, type: !2157)
!3649 = !DILocation(line: 1091, column: 55, scope: !3639)
!3650 = !DILocalVariable(name: "face_index", arg: 6, scope: !3639, file: !3, line: 1091, type: !2164)
!3651 = !DILocation(line: 1091, column: 71, scope: !3639)
!3652 = !DILocalVariable(name: "lvl", arg: 7, scope: !3639, file: !3, line: 1091, type: !2164)
!3653 = !DILocation(line: 1091, column: 93, scope: !3639)
!3654 = !DILocalVariable(name: "st", arg: 8, scope: !3639, file: !3, line: 1092, type: !622)
!3655 = !DILocation(line: 1092, column: 43, scope: !3639)
!3656 = !DILocalVariable(name: "UNUSED_tangmat", arg: 9, scope: !3639, file: !3, line: 1092, type: !656)
!3657 = !DILocation(line: 1092, column: 56, scope: !3639)
!3658 = !DILocalVariable(name: "x", arg: 10, scope: !3639, file: !3, line: 1092, type: !2164)
!3659 = !DILocation(line: 1092, column: 89, scope: !3639)
!3660 = !DILocalVariable(name: "y", arg: 11, scope: !3639, file: !3, line: 1092, type: !2164)
!3661 = !DILocation(line: 1092, column: 102, scope: !3639)
!3662 = !DILocalVariable(name: "ao_data", scope: !3639, file: !3, line: 1094, type: !2199)
!3663 = !DILocation(line: 1094, column: 15, scope: !3639)
!3664 = !DILocation(line: 1094, column: 41, scope: !3639)
!3665 = !DILocation(line: 1094, column: 25, scope: !3639)
!3666 = !DILocalVariable(name: "mtface", scope: !3639, file: !3, line: 1095, type: !2141)
!3667 = !DILocation(line: 1095, column: 10, scope: !3639)
!3668 = !DILocation(line: 1095, column: 41, scope: !3639)
!3669 = !DILocation(line: 1095, column: 51, scope: !3639)
!3670 = !DILocation(line: 1095, column: 19, scope: !3639)
!3671 = !DILocalVariable(name: "mface", scope: !3639, file: !3, line: 1096, type: !2139)
!3672 = !DILocation(line: 1096, column: 8, scope: !3639)
!3673 = !DILocalVariable(name: "i", scope: !3639, file: !3, line: 1098, type: !132)
!3674 = !DILocation(line: 1098, column: 6, scope: !3639)
!3675 = !DILocalVariable(name: "k", scope: !3639, file: !3, line: 1098, type: !132)
!3676 = !DILocation(line: 1098, column: 9, scope: !3639)
!3677 = !DILocalVariable(name: "perm_offs", scope: !3639, file: !3, line: 1098, type: !132)
!3678 = !DILocation(line: 1098, column: 12, scope: !3639)
!3679 = !DILocalVariable(name: "pos", scope: !3639, file: !3, line: 1099, type: !437)
!3680 = !DILocation(line: 1099, column: 8, scope: !3639)
!3681 = !DILocalVariable(name: "nrm", scope: !3639, file: !3, line: 1099, type: !437)
!3682 = !DILocation(line: 1099, column: 16, scope: !3639)
!3683 = !DILocalVariable(name: "cen", scope: !3639, file: !3, line: 1100, type: !437)
!3684 = !DILocation(line: 1100, column: 8, scope: !3639)
!3685 = !DILocalVariable(name: "axisX", scope: !3639, file: !3, line: 1101, type: !437)
!3686 = !DILocation(line: 1101, column: 8, scope: !3639)
!3687 = !DILocalVariable(name: "axisY", scope: !3639, file: !3, line: 1101, type: !437)
!3688 = !DILocation(line: 1101, column: 18, scope: !3639)
!3689 = !DILocalVariable(name: "axisZ", scope: !3639, file: !3, line: 1101, type: !437)
!3690 = !DILocation(line: 1101, column: 28, scope: !3639)
!3691 = !DILocalVariable(name: "shadow", scope: !3639, file: !3, line: 1102, type: !192)
!3692 = !DILocation(line: 1102, column: 8, scope: !3639)
!3693 = !DILocalVariable(name: "value", scope: !3639, file: !3, line: 1103, type: !192)
!3694 = !DILocation(line: 1103, column: 8, scope: !3639)
!3695 = !DILocalVariable(name: "pixel", scope: !3639, file: !3, line: 1104, type: !132)
!3696 = !DILocation(line: 1104, column: 6, scope: !3639)
!3697 = !DILocation(line: 1104, column: 14, scope: !3639)
!3698 = !DILocation(line: 1104, column: 20, scope: !3639)
!3699 = !DILocation(line: 1104, column: 24, scope: !3639)
!3700 = !DILocation(line: 1104, column: 22, scope: !3639)
!3701 = !DILocation(line: 1104, column: 28, scope: !3639)
!3702 = !DILocation(line: 1104, column: 26, scope: !3639)
!3703 = !DILocalVariable(name: "uv", scope: !3639, file: !3, line: 1105, type: !906)
!3704 = !DILocation(line: 1105, column: 8, scope: !3639)
!3705 = !DILocalVariable(name: "st0", scope: !3639, file: !3, line: 1105, type: !191)
!3706 = !DILocation(line: 1105, column: 16, scope: !3639)
!3707 = !DILocalVariable(name: "st1", scope: !3639, file: !3, line: 1105, type: !191)
!3708 = !DILocation(line: 1105, column: 22, scope: !3639)
!3709 = !DILocalVariable(name: "st2", scope: !3639, file: !3, line: 1105, type: !191)
!3710 = !DILocation(line: 1105, column: 28, scope: !3639)
!3711 = !DILocalVariable(name: "st3", scope: !3639, file: !3, line: 1105, type: !191)
!3712 = !DILocation(line: 1105, column: 34, scope: !3639)
!3713 = !DILocation(line: 1107, column: 2, scope: !3639)
!3714 = !DILocation(line: 1107, column: 12, scope: !3639)
!3715 = !DILocation(line: 1107, column: 24, scope: !3639)
!3716 = !DILocation(line: 1107, column: 34, scope: !3639)
!3717 = !DILocation(line: 1109, column: 8, scope: !3639)
!3718 = !DILocation(line: 1109, column: 15, scope: !3639)
!3719 = !DILocation(line: 1109, column: 27, scope: !3639)
!3720 = !DILocation(line: 1109, column: 6, scope: !3639)
!3721 = !DILocation(line: 1110, column: 8, scope: !3639)
!3722 = !DILocation(line: 1110, column: 15, scope: !3639)
!3723 = !DILocation(line: 1110, column: 27, scope: !3639)
!3724 = !DILocation(line: 1110, column: 6, scope: !3639)
!3725 = !DILocation(line: 1111, column: 8, scope: !3639)
!3726 = !DILocation(line: 1111, column: 15, scope: !3639)
!3727 = !DILocation(line: 1111, column: 27, scope: !3639)
!3728 = !DILocation(line: 1111, column: 6, scope: !3639)
!3729 = !DILocation(line: 1113, column: 12, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 1113, column: 6)
!3731 = !DILocation(line: 1113, column: 6, scope: !3730)
!3732 = !DILocation(line: 1113, column: 6, scope: !3639)
!3733 = !DILocation(line: 1114, column: 9, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3730, file: !3, line: 1113, column: 16)
!3735 = !DILocation(line: 1114, column: 16, scope: !3734)
!3736 = !DILocation(line: 1114, column: 28, scope: !3734)
!3737 = !DILocation(line: 1114, column: 7, scope: !3734)
!3738 = !DILocation(line: 1115, column: 22, scope: !3734)
!3739 = !DILocation(line: 1115, column: 26, scope: !3734)
!3740 = !DILocation(line: 1115, column: 30, scope: !3734)
!3741 = !DILocation(line: 1115, column: 35, scope: !3734)
!3742 = !DILocation(line: 1115, column: 40, scope: !3734)
!3743 = !DILocation(line: 1115, column: 45, scope: !3734)
!3744 = !DILocation(line: 1115, column: 3, scope: !3734)
!3745 = !DILocation(line: 1116, column: 2, scope: !3734)
!3746 = !DILocation(line: 1118, column: 21, scope: !3730)
!3747 = !DILocation(line: 1118, column: 25, scope: !3730)
!3748 = !DILocation(line: 1118, column: 29, scope: !3730)
!3749 = !DILocation(line: 1118, column: 34, scope: !3730)
!3750 = !DILocation(line: 1118, column: 39, scope: !3730)
!3751 = !DILocation(line: 1118, column: 3, scope: !3730)
!3752 = !DILocation(line: 1120, column: 2, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 1120, column: 2)
!3754 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 1120, column: 2)
!3755 = !DILocation(line: 1120, column: 2, scope: !3754)
!3756 = !DILocation(line: 1120, column: 2, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3753, file: !3, line: 1120, column: 2)
!3758 = !DILocation(line: 1121, column: 2, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !3, line: 1121, column: 2)
!3760 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 1121, column: 2)
!3761 = !DILocation(line: 1121, column: 2, scope: !3760)
!3762 = !DILocation(line: 1121, column: 2, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 1121, column: 2)
!3764 = !DILocation(line: 1123, column: 17, scope: !3639)
!3765 = !DILocation(line: 1123, column: 27, scope: !3639)
!3766 = !DILocation(line: 1124, column: 17, scope: !3639)
!3767 = !DILocation(line: 1124, column: 26, scope: !3639)
!3768 = !DILocation(line: 1124, column: 50, scope: !3639)
!3769 = !DILocation(line: 1124, column: 59, scope: !3639)
!3770 = !DILocation(line: 1125, column: 17, scope: !3639)
!3771 = !DILocation(line: 1125, column: 22, scope: !3639)
!3772 = !DILocation(line: 1125, column: 34, scope: !3639)
!3773 = !DILocation(line: 1125, column: 41, scope: !3639)
!3774 = !DILocation(line: 1125, column: 48, scope: !3639)
!3775 = !DILocation(line: 1125, column: 53, scope: !3639)
!3776 = !DILocation(line: 1123, column: 2, scope: !3639)
!3777 = !DILocation(line: 1128, column: 9, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 1128, column: 2)
!3779 = !DILocation(line: 1128, column: 7, scope: !3778)
!3780 = !DILocation(line: 1128, column: 14, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3778, file: !3, line: 1128, column: 2)
!3782 = !DILocation(line: 1128, column: 16, scope: !3781)
!3783 = !DILocation(line: 1128, column: 2, scope: !3778)
!3784 = !DILocation(line: 1129, column: 16, scope: !3781)
!3785 = !DILocation(line: 1129, column: 12, scope: !3781)
!3786 = !DILocation(line: 1129, column: 21, scope: !3781)
!3787 = !DILocation(line: 1129, column: 30, scope: !3781)
!3788 = !DILocation(line: 1129, column: 41, scope: !3781)
!3789 = !DILocation(line: 1129, column: 37, scope: !3781)
!3790 = !DILocation(line: 1129, column: 35, scope: !3781)
!3791 = !DILocation(line: 1129, column: 19, scope: !3781)
!3792 = !DILocation(line: 1129, column: 7, scope: !3781)
!3793 = !DILocation(line: 1129, column: 3, scope: !3781)
!3794 = !DILocation(line: 1129, column: 10, scope: !3781)
!3795 = !DILocation(line: 1128, column: 22, scope: !3781)
!3796 = !DILocation(line: 1128, column: 2, scope: !3781)
!3797 = distinct !{!3797, !3783, !3798}
!3798 = !DILocation(line: 1129, column: 42, scope: !3778)
!3799 = !DILocation(line: 1132, column: 9, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 1132, column: 2)
!3801 = !DILocation(line: 1132, column: 7, scope: !3800)
!3802 = !DILocation(line: 1132, column: 14, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 1132, column: 2)
!3804 = !DILocation(line: 1132, column: 16, scope: !3803)
!3805 = !DILocation(line: 1132, column: 2, scope: !3800)
!3806 = !DILocation(line: 1133, column: 18, scope: !3803)
!3807 = !DILocation(line: 1133, column: 14, scope: !3803)
!3808 = !DILocation(line: 1133, column: 9, scope: !3803)
!3809 = !DILocation(line: 1133, column: 3, scope: !3803)
!3810 = !DILocation(line: 1133, column: 12, scope: !3803)
!3811 = !DILocation(line: 1132, column: 22, scope: !3803)
!3812 = !DILocation(line: 1132, column: 2, scope: !3803)
!3813 = distinct !{!3813, !3805, !3814}
!3814 = !DILocation(line: 1133, column: 19, scope: !3800)
!3815 = !DILocation(line: 1135, column: 25, scope: !3639)
!3816 = !DILocation(line: 1135, column: 32, scope: !3639)
!3817 = !DILocation(line: 1135, column: 39, scope: !3639)
!3818 = !DILocation(line: 1135, column: 2, scope: !3639)
!3819 = !DILocation(line: 1138, column: 45, scope: !3639)
!3820 = !DILocation(line: 1138, column: 30, scope: !3639)
!3821 = !DILocation(line: 1138, column: 50, scope: !3639)
!3822 = !DILocation(line: 1138, column: 48, scope: !3639)
!3823 = !DILocation(line: 1138, column: 15, scope: !3639)
!3824 = !DILocation(line: 1138, column: 14, scope: !3639)
!3825 = !DILocation(line: 1138, column: 54, scope: !3639)
!3826 = !DILocation(line: 1138, column: 12, scope: !3639)
!3827 = !DILocation(line: 1141, column: 9, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 1141, column: 2)
!3829 = !DILocation(line: 1141, column: 7, scope: !3828)
!3830 = !DILocation(line: 1141, column: 14, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 1141, column: 2)
!3832 = !DILocation(line: 1141, column: 18, scope: !3831)
!3833 = !DILocation(line: 1141, column: 27, scope: !3831)
!3834 = !DILocation(line: 1141, column: 16, scope: !3831)
!3835 = !DILocation(line: 1141, column: 2, scope: !3828)
!3836 = !DILocalVariable(name: "hit_something", scope: !3837, file: !3, line: 1142, type: !132)
!3837 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 1141, column: 48)
!3838 = !DILocation(line: 1142, column: 7, scope: !3837)
!3839 = !DILocalVariable(name: "I", scope: !3837, file: !3, line: 1147, type: !3840)
!3840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !837)
!3841 = !DILocation(line: 1147, column: 24, scope: !3837)
!3842 = !DILocation(line: 1147, column: 28, scope: !3837)
!3843 = !DILocation(line: 1147, column: 37, scope: !3837)
!3844 = !DILocation(line: 1147, column: 58, scope: !3837)
!3845 = !DILocation(line: 1147, column: 62, scope: !3837)
!3846 = !DILocation(line: 1147, column: 60, scope: !3837)
!3847 = !DILocation(line: 1147, column: 75, scope: !3837)
!3848 = !DILocation(line: 1147, column: 84, scope: !3837)
!3849 = !DILocation(line: 1147, column: 73, scope: !3837)
!3850 = !DILocalVariable(name: "J", scope: !3837, file: !3, line: 1148, type: !3840)
!3851 = !DILocation(line: 1148, column: 24, scope: !3837)
!3852 = !DILocation(line: 1148, column: 28, scope: !3837)
!3853 = !DILocation(line: 1148, column: 37, scope: !3837)
!3854 = !DILocation(line: 1148, column: 57, scope: !3837)
!3855 = !DILocalVariable(name: "JitPh", scope: !3837, file: !3, line: 1150, type: !419)
!3856 = !DILocation(line: 1150, column: 15, scope: !3837)
!3857 = !DILocation(line: 1150, column: 39, scope: !3837)
!3858 = !DILocation(line: 1150, column: 43, scope: !3837)
!3859 = !DILocation(line: 1150, column: 41, scope: !3837)
!3860 = !DILocation(line: 1150, column: 24, scope: !3837)
!3861 = !DILocation(line: 1150, column: 54, scope: !3837)
!3862 = !DILocation(line: 1150, column: 23, scope: !3837)
!3863 = !DILocation(line: 1150, column: 82, scope: !3837)
!3864 = !DILocalVariable(name: "JitTh", scope: !3837, file: !3, line: 1151, type: !419)
!3865 = !DILocation(line: 1151, column: 15, scope: !3837)
!3866 = !DILocation(line: 1151, column: 39, scope: !3837)
!3867 = !DILocation(line: 1151, column: 43, scope: !3837)
!3868 = !DILocation(line: 1151, column: 41, scope: !3837)
!3869 = !DILocation(line: 1151, column: 24, scope: !3837)
!3870 = !DILocation(line: 1151, column: 54, scope: !3837)
!3871 = !DILocation(line: 1151, column: 23, scope: !3837)
!3872 = !DILocation(line: 1151, column: 82, scope: !3837)
!3873 = !DILocalVariable(name: "SiSqPhi", scope: !3837, file: !3, line: 1152, type: !419)
!3874 = !DILocation(line: 1152, column: 15, scope: !3837)
!3875 = !DILocation(line: 1152, column: 26, scope: !3837)
!3876 = !DILocation(line: 1152, column: 30, scope: !3837)
!3877 = !DILocation(line: 1152, column: 28, scope: !3837)
!3878 = !DILocation(line: 1152, column: 39, scope: !3837)
!3879 = !DILocation(line: 1152, column: 48, scope: !3837)
!3880 = !DILocation(line: 1152, column: 37, scope: !3837)
!3881 = !DILocalVariable(name: "Theta", scope: !3837, file: !3, line: 1153, type: !419)
!3882 = !DILocation(line: 1153, column: 15, scope: !3837)
!3883 = !DILocation(line: 1153, column: 45, scope: !3837)
!3884 = !DILocation(line: 1153, column: 49, scope: !3837)
!3885 = !DILocation(line: 1153, column: 47, scope: !3837)
!3886 = !DILocation(line: 1153, column: 58, scope: !3837)
!3887 = !DILocation(line: 1153, column: 67, scope: !3837)
!3888 = !DILocation(line: 1153, column: 56, scope: !3837)
!3889 = !DILocation(line: 1153, column: 41, scope: !3837)
!3890 = !DILocalVariable(name: "SiPhi", scope: !3837, file: !3, line: 1158, type: !192)
!3891 = !DILocation(line: 1158, column: 9, scope: !3837)
!3892 = !DILocation(line: 1158, column: 23, scope: !3837)
!3893 = !DILocation(line: 1158, column: 17, scope: !3837)
!3894 = !DILocalVariable(name: "CoPhi", scope: !3837, file: !3, line: 1159, type: !192)
!3895 = !DILocation(line: 1159, column: 9, scope: !3837)
!3896 = !DILocation(line: 1159, column: 17, scope: !3837)
!3897 = !DILocation(line: 1159, column: 25, scope: !3837)
!3898 = !DILocation(line: 1159, column: 47, scope: !3837)
!3899 = !DILocation(line: 1159, column: 45, scope: !3837)
!3900 = !DILocation(line: 1159, column: 34, scope: !3837)
!3901 = !DILocalVariable(name: "CoThe", scope: !3837, file: !3, line: 1160, type: !192)
!3902 = !DILocation(line: 1160, column: 9, scope: !3837)
!3903 = !DILocation(line: 1160, column: 22, scope: !3837)
!3904 = !DILocation(line: 1160, column: 17, scope: !3837)
!3905 = !DILocalVariable(name: "SiThe", scope: !3837, file: !3, line: 1161, type: !192)
!3906 = !DILocation(line: 1161, column: 9, scope: !3837)
!3907 = !DILocation(line: 1161, column: 22, scope: !3837)
!3908 = !DILocation(line: 1161, column: 17, scope: !3837)
!3909 = !DILocalVariable(name: "dx", scope: !3837, file: !3, line: 1163, type: !419)
!3910 = !DILocation(line: 1163, column: 15, scope: !3837)
!3911 = !DILocation(line: 1163, column: 20, scope: !3837)
!3912 = !DILocation(line: 1163, column: 28, scope: !3837)
!3913 = !DILocation(line: 1163, column: 26, scope: !3837)
!3914 = !DILocalVariable(name: "dy", scope: !3837, file: !3, line: 1164, type: !419)
!3915 = !DILocation(line: 1164, column: 15, scope: !3837)
!3916 = !DILocation(line: 1164, column: 20, scope: !3837)
!3917 = !DILocation(line: 1164, column: 28, scope: !3837)
!3918 = !DILocation(line: 1164, column: 26, scope: !3837)
!3919 = !DILocalVariable(name: "dz", scope: !3837, file: !3, line: 1165, type: !419)
!3920 = !DILocation(line: 1165, column: 15, scope: !3837)
!3921 = !DILocation(line: 1165, column: 20, scope: !3837)
!3922 = !DILocalVariable(name: "dv", scope: !3837, file: !3, line: 1168, type: !437)
!3923 = !DILocation(line: 1168, column: 9, scope: !3837)
!3924 = !DILocation(line: 1169, column: 10, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 1169, column: 3)
!3926 = !DILocation(line: 1169, column: 8, scope: !3925)
!3927 = !DILocation(line: 1169, column: 15, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 1169, column: 3)
!3929 = !DILocation(line: 1169, column: 17, scope: !3928)
!3930 = !DILocation(line: 1169, column: 3, scope: !3925)
!3931 = !DILocation(line: 1170, column: 18, scope: !3928)
!3932 = !DILocation(line: 1170, column: 12, scope: !3928)
!3933 = !DILocation(line: 1170, column: 23, scope: !3928)
!3934 = !DILocation(line: 1170, column: 21, scope: !3928)
!3935 = !DILocation(line: 1170, column: 34, scope: !3928)
!3936 = !DILocation(line: 1170, column: 28, scope: !3928)
!3937 = !DILocation(line: 1170, column: 39, scope: !3928)
!3938 = !DILocation(line: 1170, column: 37, scope: !3928)
!3939 = !DILocation(line: 1170, column: 26, scope: !3928)
!3940 = !DILocation(line: 1170, column: 50, scope: !3928)
!3941 = !DILocation(line: 1170, column: 44, scope: !3928)
!3942 = !DILocation(line: 1170, column: 55, scope: !3928)
!3943 = !DILocation(line: 1170, column: 53, scope: !3928)
!3944 = !DILocation(line: 1170, column: 42, scope: !3928)
!3945 = !DILocation(line: 1170, column: 7, scope: !3928)
!3946 = !DILocation(line: 1170, column: 4, scope: !3928)
!3947 = !DILocation(line: 1170, column: 10, scope: !3928)
!3948 = !DILocation(line: 1169, column: 23, scope: !3928)
!3949 = !DILocation(line: 1169, column: 3, scope: !3928)
!3950 = distinct !{!3950, !3930, !3951}
!3951 = !DILocation(line: 1170, column: 55, scope: !3925)
!3952 = !DILocation(line: 1172, column: 32, scope: !3837)
!3953 = !DILocation(line: 1172, column: 41, scope: !3837)
!3954 = !DILocation(line: 1172, column: 46, scope: !3837)
!3955 = !DILocation(line: 1172, column: 19, scope: !3837)
!3956 = !DILocation(line: 1172, column: 17, scope: !3837)
!3957 = !DILocation(line: 1174, column: 7, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 1174, column: 7)
!3959 = !DILocation(line: 1174, column: 21, scope: !3958)
!3960 = !DILocation(line: 1174, column: 7, scope: !3837)
!3961 = !DILocation(line: 1175, column: 11, scope: !3958)
!3962 = !DILocation(line: 1175, column: 4, scope: !3958)
!3963 = !DILocation(line: 1176, column: 2, scope: !3837)
!3964 = !DILocation(line: 1141, column: 44, scope: !3831)
!3965 = !DILocation(line: 1141, column: 2, scope: !3831)
!3966 = distinct !{!3966, !3835, !3967}
!3967 = !DILocation(line: 1176, column: 2, scope: !3828)
!3968 = !DILocation(line: 1178, column: 18, scope: !3639)
!3969 = !DILocation(line: 1178, column: 27, scope: !3639)
!3970 = !DILocation(line: 1178, column: 36, scope: !3639)
!3971 = !DILocation(line: 1178, column: 25, scope: !3639)
!3972 = !DILocation(line: 1178, column: 15, scope: !3639)
!3973 = !DILocation(line: 1178, column: 8, scope: !3639)
!3974 = !DILocation(line: 1180, column: 6, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3639, file: !3, line: 1180, column: 6)
!3976 = !DILocation(line: 1180, column: 12, scope: !3975)
!3977 = !DILocation(line: 1180, column: 6, scope: !3639)
!3978 = !DILocalVariable(name: "rrgbf", scope: !3979, file: !3, line: 1181, type: !191)
!3979 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 1180, column: 24)
!3980 = !DILocation(line: 1181, column: 10, scope: !3979)
!3981 = !DILocation(line: 1181, column: 18, scope: !3979)
!3982 = !DILocation(line: 1181, column: 24, scope: !3979)
!3983 = !DILocation(line: 1181, column: 37, scope: !3979)
!3984 = !DILocation(line: 1181, column: 43, scope: !3979)
!3985 = !DILocation(line: 1181, column: 35, scope: !3979)
!3986 = !DILocation(line: 1182, column: 36, scope: !3979)
!3987 = !DILocation(line: 1182, column: 25, scope: !3979)
!3988 = !DILocation(line: 1182, column: 34, scope: !3979)
!3989 = !DILocation(line: 1182, column: 14, scope: !3979)
!3990 = !DILocation(line: 1182, column: 23, scope: !3979)
!3991 = !DILocation(line: 1182, column: 3, scope: !3979)
!3992 = !DILocation(line: 1182, column: 12, scope: !3979)
!3993 = !DILocation(line: 1183, column: 3, scope: !3979)
!3994 = !DILocation(line: 1183, column: 12, scope: !3979)
!3995 = !DILocation(line: 1184, column: 2, scope: !3979)
!3996 = !DILocalVariable(name: "rrgb", scope: !3997, file: !3, line: 1186, type: !1147)
!3997 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 1185, column: 7)
!3998 = !DILocation(line: 1186, column: 18, scope: !3997)
!3999 = !DILocation(line: 1186, column: 43, scope: !3997)
!4000 = !DILocation(line: 1186, column: 49, scope: !3997)
!4001 = !DILocation(line: 1186, column: 25, scope: !3997)
!4002 = !DILocation(line: 1186, column: 56, scope: !3997)
!4003 = !DILocation(line: 1186, column: 62, scope: !3997)
!4004 = !DILocation(line: 1186, column: 54, scope: !3997)
!4005 = !DILocation(line: 1187, column: 33, scope: !3997)
!4006 = !DILocation(line: 1187, column: 23, scope: !3997)
!4007 = !DILocation(line: 1187, column: 31, scope: !3997)
!4008 = !DILocation(line: 1187, column: 13, scope: !3997)
!4009 = !DILocation(line: 1187, column: 21, scope: !3997)
!4010 = !DILocation(line: 1187, column: 3, scope: !3997)
!4011 = !DILocation(line: 1187, column: 11, scope: !3997)
!4012 = !DILocation(line: 1188, column: 3, scope: !3997)
!4013 = !DILocation(line: 1188, column: 11, scope: !3997)
!4014 = !DILocation(line: 1190, column: 1, scope: !3639)
!4015 = distinct !DISubprogram(name: "init_ao_data", scope: !3, file: !3, line: 1005, type: !2715, scopeLine: 1006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!4016 = !DILocalVariable(name: "bkr", arg: 1, scope: !4015, file: !3, line: 1005, type: !338)
!4017 = !DILocation(line: 1005, column: 47, scope: !4015)
!4018 = !DILocalVariable(name: "UNUSED_ima", arg: 2, scope: !4015, file: !3, line: 1005, type: !91)
!4019 = !DILocation(line: 1005, column: 59, scope: !4015)
!4020 = !DILocalVariable(name: "ao_data", scope: !4015, file: !3, line: 1007, type: !2199)
!4021 = !DILocation(line: 1007, column: 15, scope: !4015)
!4022 = !DILocalVariable(name: "lodm", scope: !4015, file: !3, line: 1008, type: !344)
!4023 = !DILocation(line: 1008, column: 15, scope: !4015)
!4024 = !DILocation(line: 1008, column: 22, scope: !4015)
!4025 = !DILocation(line: 1008, column: 27, scope: !4015)
!4026 = !DILocalVariable(name: "temp_permutation_table", scope: !4015, file: !3, line: 1009, type: !2206)
!4027 = !DILocation(line: 1009, column: 18, scope: !4015)
!4028 = !DILocalVariable(name: "permutation_size", scope: !4015, file: !3, line: 1010, type: !4029)
!4029 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !4030, line: 46, baseType: !891)
!4030 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!4031 = !DILocation(line: 1010, column: 9, scope: !4015)
!4032 = !DILocation(line: 1012, column: 2, scope: !4015)
!4033 = !DILocation(line: 1014, column: 12, scope: !4015)
!4034 = !DILocation(line: 1014, column: 10, scope: !4015)
!4035 = !DILocation(line: 1016, column: 28, scope: !4015)
!4036 = !DILocation(line: 1016, column: 33, scope: !4015)
!4037 = !DILocation(line: 1016, column: 2, scope: !4015)
!4038 = !DILocation(line: 1016, column: 11, scope: !4015)
!4039 = !DILocation(line: 1016, column: 26, scope: !4015)
!4040 = !DILocation(line: 1017, column: 18, scope: !4015)
!4041 = !DILocation(line: 1017, column: 23, scope: !4015)
!4042 = !DILocation(line: 1017, column: 2, scope: !4015)
!4043 = !DILocation(line: 1017, column: 11, scope: !4015)
!4044 = !DILocation(line: 1017, column: 16, scope: !4015)
!4045 = !DILocation(line: 1019, column: 36, scope: !4015)
!4046 = !DILocation(line: 1019, column: 42, scope: !4015)
!4047 = !DILocation(line: 1019, column: 63, scope: !4015)
!4048 = !DILocation(line: 1019, column: 2, scope: !4015)
!4049 = !DILocation(line: 1019, column: 11, scope: !4015)
!4050 = !DILocation(line: 1019, column: 34, scope: !4015)
!4051 = !DILocation(line: 1020, column: 35, scope: !4015)
!4052 = !DILocation(line: 1020, column: 41, scope: !4015)
!4053 = !DILocation(line: 1020, column: 58, scope: !4015)
!4054 = !DILocation(line: 1020, column: 2, scope: !4015)
!4055 = !DILocation(line: 1020, column: 11, scope: !4015)
!4056 = !DILocation(line: 1020, column: 33, scope: !4015)
!4057 = !DILocation(line: 1022, column: 20, scope: !4015)
!4058 = !DILocation(line: 1022, column: 25, scope: !4015)
!4059 = !DILocation(line: 1022, column: 2, scope: !4015)
!4060 = !DILocation(line: 1025, column: 46, scope: !4015)
!4061 = !DILocation(line: 1025, column: 51, scope: !4015)
!4062 = !DILocation(line: 1025, column: 44, scope: !4015)
!4063 = !DILocation(line: 1025, column: 19, scope: !4015)
!4064 = !DILocation(line: 1026, column: 33, scope: !4015)
!4065 = !DILocation(line: 1026, column: 45, scope: !4015)
!4066 = !DILocation(line: 1026, column: 2, scope: !4015)
!4067 = !DILocation(line: 1026, column: 11, scope: !4015)
!4068 = !DILocation(line: 1026, column: 31, scope: !4015)
!4069 = !DILocation(line: 1027, column: 33, scope: !4015)
!4070 = !DILocation(line: 1027, column: 45, scope: !4015)
!4071 = !DILocation(line: 1027, column: 2, scope: !4015)
!4072 = !DILocation(line: 1027, column: 11, scope: !4015)
!4073 = !DILocation(line: 1027, column: 31, scope: !4015)
!4074 = !DILocation(line: 1028, column: 27, scope: !4015)
!4075 = !DILocation(line: 1028, column: 39, scope: !4015)
!4076 = !DILocation(line: 1028, column: 25, scope: !4015)
!4077 = !DILocation(line: 1030, column: 26, scope: !4015)
!4078 = !DILocation(line: 1030, column: 35, scope: !4015)
!4079 = !DILocation(line: 1030, column: 56, scope: !4015)
!4080 = !DILocation(line: 1030, column: 80, scope: !4015)
!4081 = !DILocation(line: 1030, column: 85, scope: !4015)
!4082 = !DILocation(line: 1030, column: 2, scope: !4015)
!4083 = !DILocation(line: 1031, column: 26, scope: !4015)
!4084 = !DILocation(line: 1031, column: 35, scope: !4015)
!4085 = !DILocation(line: 1031, column: 56, scope: !4015)
!4086 = !DILocation(line: 1031, column: 80, scope: !4015)
!4087 = !DILocation(line: 1031, column: 85, scope: !4015)
!4088 = !DILocation(line: 1031, column: 2, scope: !4015)
!4089 = !DILocation(line: 1033, column: 2, scope: !4015)
!4090 = !DILocation(line: 1033, column: 12, scope: !4015)
!4091 = !DILocation(line: 1035, column: 17, scope: !4015)
!4092 = !DILocation(line: 1035, column: 9, scope: !4015)
!4093 = !DILocation(line: 1035, column: 2, scope: !4015)
!4094 = distinct !DISubprogram(name: "free_ao_data", scope: !3, file: !3, line: 1038, type: !2719, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!4095 = !DILocalVariable(name: "bake_data", arg: 1, scope: !4094, file: !3, line: 1038, type: !90)
!4096 = !DILocation(line: 1038, column: 32, scope: !4094)
!4097 = !DILocalVariable(name: "ao_data", scope: !4094, file: !3, line: 1040, type: !2199)
!4098 = !DILocation(line: 1040, column: 15, scope: !4094)
!4099 = !DILocation(line: 1040, column: 41, scope: !4094)
!4100 = !DILocation(line: 1040, column: 25, scope: !4094)
!4101 = !DILocation(line: 1042, column: 20, scope: !4094)
!4102 = !DILocation(line: 1042, column: 29, scope: !4094)
!4103 = !DILocation(line: 1042, column: 2, scope: !4094)
!4104 = !DILocation(line: 1043, column: 2, scope: !4094)
!4105 = !DILocation(line: 1043, column: 12, scope: !4094)
!4106 = !DILocation(line: 1043, column: 21, scope: !4094)
!4107 = !DILocation(line: 1045, column: 2, scope: !4094)
!4108 = !DILocation(line: 1045, column: 12, scope: !4094)
!4109 = !DILocation(line: 1045, column: 21, scope: !4094)
!4110 = !DILocation(line: 1046, column: 2, scope: !4094)
!4111 = !DILocation(line: 1046, column: 12, scope: !4094)
!4112 = !DILocation(line: 1046, column: 21, scope: !4094)
!4113 = !DILocation(line: 1048, column: 2, scope: !4094)
!4114 = !DILocation(line: 1048, column: 12, scope: !4094)
!4115 = !DILocation(line: 1049, column: 1, scope: !4094)
!4116 = distinct !DISubprogram(name: "do_multires_bake_thread", scope: !3, file: !3, line: 385, type: !4117, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{!90, !90}
!4119 = !DILocalVariable(name: "data_v", arg: 1, scope: !4116, file: !3, line: 385, type: !90)
!4120 = !DILocation(line: 385, column: 44, scope: !4116)
!4121 = !DILocalVariable(name: "handle", scope: !4116, file: !3, line: 387, type: !317)
!4122 = !DILocation(line: 387, column: 22, scope: !4116)
!4123 = !DILocation(line: 387, column: 54, scope: !4116)
!4124 = !DILocation(line: 387, column: 31, scope: !4116)
!4125 = !DILocalVariable(name: "data", scope: !4116, file: !3, line: 388, type: !4126)
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!4127 = !DILocation(line: 388, column: 21, scope: !4116)
!4128 = !DILocation(line: 388, column: 29, scope: !4116)
!4129 = !DILocation(line: 388, column: 37, scope: !4116)
!4130 = !DILocalVariable(name: "bake_rast", scope: !4116, file: !3, line: 389, type: !4131)
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!4132 = !DILocation(line: 389, column: 13, scope: !4116)
!4133 = !DILocation(line: 389, column: 26, scope: !4116)
!4134 = !DILocation(line: 389, column: 34, scope: !4116)
!4135 = !DILocalVariable(name: "bkr", scope: !4116, file: !3, line: 390, type: !338)
!4136 = !DILocation(line: 390, column: 22, scope: !4116)
!4137 = !DILocation(line: 390, column: 28, scope: !4116)
!4138 = !DILocation(line: 390, column: 36, scope: !4116)
!4139 = !DILocalVariable(name: "f", scope: !4116, file: !3, line: 391, type: !132)
!4140 = !DILocation(line: 391, column: 6, scope: !4116)
!4141 = !DILocation(line: 393, column: 2, scope: !4116)
!4142 = !DILocation(line: 393, column: 44, scope: !4116)
!4143 = !DILocation(line: 393, column: 52, scope: !4116)
!4144 = !DILocation(line: 393, column: 14, scope: !4116)
!4145 = !DILocation(line: 393, column: 12, scope: !4116)
!4146 = !DILocation(line: 393, column: 60, scope: !4116)
!4147 = !DILocalVariable(name: "mtfate", scope: !4148, file: !3, line: 394, type: !2141)
!4148 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 393, column: 66)
!4149 = !DILocation(line: 394, column: 11, scope: !4148)
!4150 = !DILocation(line: 394, column: 21, scope: !4148)
!4151 = !DILocation(line: 394, column: 27, scope: !4148)
!4152 = !DILocation(line: 394, column: 34, scope: !4148)
!4153 = !DILocalVariable(name: "verts", scope: !4148, file: !3, line: 395, type: !4154)
!4154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 192, elements: !4155)
!4155 = !{!439, !276}
!4156 = !DILocation(line: 395, column: 7, scope: !4148)
!4157 = !DILocalVariable(name: "nr_tris", scope: !4148, file: !3, line: 395, type: !132)
!4158 = !DILocation(line: 395, column: 20, scope: !4148)
!4159 = !DILocalVariable(name: "t", scope: !4148, file: !3, line: 395, type: !132)
!4160 = !DILocation(line: 395, column: 29, scope: !4148)
!4161 = !DILocation(line: 397, column: 31, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 397, column: 7)
!4163 = !DILocation(line: 397, column: 7, scope: !4162)
!4164 = !DILocation(line: 397, column: 7, scope: !4148)
!4165 = !DILocation(line: 398, column: 4, scope: !4162)
!4166 = !DILocation(line: 400, column: 7, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 400, column: 7)
!4168 = !DILocation(line: 400, column: 15, scope: !4167)
!4169 = !DILocation(line: 400, column: 24, scope: !4167)
!4170 = !DILocation(line: 400, column: 32, scope: !4167)
!4171 = !DILocation(line: 400, column: 21, scope: !4167)
!4172 = !DILocation(line: 400, column: 7, scope: !4148)
!4173 = !DILocation(line: 401, column: 4, scope: !4167)
!4174 = distinct !{!4174, !4141, !4175}
!4175 = !DILocation(line: 440, column: 2, scope: !4116)
!4176 = !DILocation(line: 403, column: 22, scope: !4148)
!4177 = !DILocation(line: 403, column: 3, scope: !4148)
!4178 = !DILocation(line: 403, column: 9, scope: !4148)
!4179 = !DILocation(line: 403, column: 20, scope: !4148)
!4180 = !DILocation(line: 407, column: 3, scope: !4148)
!4181 = !DILocation(line: 407, column: 15, scope: !4148)
!4182 = !DILocation(line: 408, column: 3, scope: !4148)
!4183 = !DILocation(line: 408, column: 15, scope: !4148)
!4184 = !DILocation(line: 409, column: 3, scope: !4148)
!4185 = !DILocation(line: 409, column: 15, scope: !4148)
!4186 = !DILocation(line: 411, column: 3, scope: !4148)
!4187 = !DILocation(line: 411, column: 15, scope: !4148)
!4188 = !DILocation(line: 412, column: 3, scope: !4148)
!4189 = !DILocation(line: 412, column: 15, scope: !4148)
!4190 = !DILocation(line: 413, column: 3, scope: !4148)
!4191 = !DILocation(line: 413, column: 15, scope: !4148)
!4192 = !DILocation(line: 415, column: 13, scope: !4148)
!4193 = !DILocation(line: 415, column: 19, scope: !4148)
!4194 = !DILocation(line: 415, column: 25, scope: !4148)
!4195 = !DILocation(line: 415, column: 28, scope: !4148)
!4196 = !DILocation(line: 415, column: 31, scope: !4148)
!4197 = !DILocation(line: 415, column: 11, scope: !4148)
!4198 = !DILocation(line: 416, column: 10, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 416, column: 3)
!4200 = !DILocation(line: 416, column: 8, scope: !4199)
!4201 = !DILocation(line: 416, column: 15, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 416, column: 3)
!4203 = !DILocation(line: 416, column: 19, scope: !4202)
!4204 = !DILocation(line: 416, column: 17, scope: !4202)
!4205 = !DILocation(line: 416, column: 3, scope: !4199)
!4206 = !DILocation(line: 417, column: 15, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4202, file: !3, line: 416, column: 33)
!4208 = !DILocation(line: 417, column: 24, scope: !4207)
!4209 = !DILocation(line: 417, column: 4, scope: !4207)
!4210 = !DILocation(line: 417, column: 10, scope: !4207)
!4211 = !DILocation(line: 417, column: 13, scope: !4207)
!4212 = !DILocation(line: 418, column: 15, scope: !4207)
!4213 = !DILocation(line: 418, column: 24, scope: !4207)
!4214 = !DILocation(line: 418, column: 4, scope: !4207)
!4215 = !DILocation(line: 418, column: 10, scope: !4207)
!4216 = !DILocation(line: 418, column: 13, scope: !4207)
!4217 = !DILocation(line: 419, column: 15, scope: !4207)
!4218 = !DILocation(line: 419, column: 24, scope: !4207)
!4219 = !DILocation(line: 419, column: 4, scope: !4207)
!4220 = !DILocation(line: 419, column: 10, scope: !4207)
!4221 = !DILocation(line: 419, column: 13, scope: !4207)
!4222 = !DILocation(line: 421, column: 19, scope: !4207)
!4223 = !DILocation(line: 421, column: 30, scope: !4207)
!4224 = !DILocation(line: 421, column: 38, scope: !4207)
!4225 = !DILocation(line: 421, column: 41, scope: !4207)
!4226 = !DILocation(line: 421, column: 47, scope: !4207)
!4227 = !DILocation(line: 421, column: 52, scope: !4207)
!4228 = !DILocation(line: 421, column: 60, scope: !4207)
!4229 = !DILocation(line: 421, column: 63, scope: !4207)
!4230 = !DILocation(line: 421, column: 69, scope: !4207)
!4231 = !DILocation(line: 421, column: 74, scope: !4207)
!4232 = !DILocation(line: 421, column: 82, scope: !4207)
!4233 = !DILocation(line: 421, column: 85, scope: !4207)
!4234 = !DILocation(line: 421, column: 91, scope: !4207)
!4235 = !DILocation(line: 421, column: 4, scope: !4207)
!4236 = !DILocation(line: 424, column: 8, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4207, file: !3, line: 424, column: 8)
!4238 = !DILocation(line: 424, column: 14, scope: !4237)
!4239 = !DILocation(line: 424, column: 20, scope: !4237)
!4240 = !DILocation(line: 424, column: 8, scope: !4207)
!4241 = !DILocation(line: 425, column: 5, scope: !4237)
!4242 = !DILocation(line: 425, column: 11, scope: !4237)
!4243 = !DILocation(line: 425, column: 17, scope: !4237)
!4244 = !DILocation(line: 425, column: 27, scope: !4237)
!4245 = !DILocation(line: 427, column: 4, scope: !4207)
!4246 = !DILocation(line: 427, column: 10, scope: !4207)
!4247 = !DILocation(line: 427, column: 16, scope: !4207)
!4248 = !DILocation(line: 427, column: 26, scope: !4207)
!4249 = !DILocation(line: 428, column: 3, scope: !4207)
!4250 = !DILocation(line: 416, column: 29, scope: !4202)
!4251 = !DILocation(line: 416, column: 3, scope: !4202)
!4252 = distinct !{!4252, !4205, !4253}
!4253 = !DILocation(line: 428, column: 3, scope: !4199)
!4254 = !DILocation(line: 431, column: 18, scope: !4148)
!4255 = !DILocation(line: 431, column: 26, scope: !4148)
!4256 = !DILocation(line: 431, column: 33, scope: !4148)
!4257 = !DILocation(line: 431, column: 3, scope: !4148)
!4258 = !DILocation(line: 432, column: 3, scope: !4148)
!4259 = !DILocation(line: 432, column: 8, scope: !4148)
!4260 = !DILocation(line: 432, column: 19, scope: !4148)
!4261 = !DILocation(line: 434, column: 7, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 434, column: 7)
!4263 = !DILocation(line: 434, column: 12, scope: !4262)
!4264 = !DILocation(line: 434, column: 7, scope: !4148)
!4265 = !DILocation(line: 435, column: 5, scope: !4262)
!4266 = !DILocation(line: 435, column: 10, scope: !4262)
!4267 = !DILocation(line: 435, column: 20, scope: !4262)
!4268 = !DILocation(line: 435, column: 4, scope: !4262)
!4269 = !DILocation(line: 437, column: 7, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 437, column: 7)
!4271 = !DILocation(line: 437, column: 12, scope: !4270)
!4272 = !DILocation(line: 437, column: 7, scope: !4148)
!4273 = !DILocation(line: 438, column: 29, scope: !4270)
!4274 = !DILocation(line: 438, column: 34, scope: !4270)
!4275 = !DILocation(line: 438, column: 22, scope: !4270)
!4276 = !DILocation(line: 438, column: 57, scope: !4270)
!4277 = !DILocation(line: 438, column: 62, scope: !4270)
!4278 = !DILocation(line: 438, column: 50, scope: !4270)
!4279 = !DILocation(line: 438, column: 76, scope: !4270)
!4280 = !DILocation(line: 438, column: 84, scope: !4270)
!4281 = !DILocation(line: 438, column: 91, scope: !4270)
!4282 = !DILocation(line: 438, column: 74, scope: !4270)
!4283 = !DILocation(line: 438, column: 48, scope: !4270)
!4284 = !DILocation(line: 438, column: 103, scope: !4270)
!4285 = !DILocation(line: 438, column: 108, scope: !4270)
!4286 = !DILocation(line: 438, column: 101, scope: !4270)
!4287 = !DILocation(line: 438, column: 5, scope: !4270)
!4288 = !DILocation(line: 438, column: 10, scope: !4270)
!4289 = !DILocation(line: 438, column: 19, scope: !4270)
!4290 = !DILocation(line: 438, column: 4, scope: !4270)
!4291 = !DILocation(line: 439, column: 20, scope: !4148)
!4292 = !DILocation(line: 439, column: 28, scope: !4148)
!4293 = !DILocation(line: 439, column: 35, scope: !4148)
!4294 = !DILocation(line: 439, column: 3, scope: !4148)
!4295 = !DILocation(line: 442, column: 2, scope: !4116)
!4296 = distinct !DISubprogram(name: "init_ccgdm_arrays", scope: !3, file: !3, line: 449, type: !413, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!4297 = !DILocalVariable(name: "dm", arg: 1, scope: !4296, file: !3, line: 449, type: !344)
!4298 = !DILocation(line: 449, column: 44, scope: !4296)
!4299 = !DILocalVariable(name: "grid_data", scope: !4296, file: !3, line: 451, type: !4300)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!4301 = !DILocation(line: 451, column: 12, scope: !4296)
!4302 = !DILocalVariable(name: "key", scope: !4296, file: !3, line: 452, type: !4303)
!4303 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGKey", file: !567, line: 78, baseType: !588)
!4304 = !DILocation(line: 452, column: 9, scope: !4296)
!4305 = !DILocalVariable(name: "grid_size", scope: !4296, file: !3, line: 453, type: !132)
!4306 = !DILocation(line: 453, column: 6, scope: !4296)
!4307 = !DILocalVariable(name: "grid_offset", scope: !4296, file: !3, line: 454, type: !2186)
!4308 = !DILocation(line: 454, column: 13, scope: !4296)
!4309 = !DILocation(line: 456, column: 14, scope: !4296)
!4310 = !DILocation(line: 456, column: 18, scope: !4296)
!4311 = !DILocation(line: 456, column: 30, scope: !4296)
!4312 = !DILocation(line: 456, column: 12, scope: !4296)
!4313 = !DILocation(line: 457, column: 14, scope: !4296)
!4314 = !DILocation(line: 457, column: 18, scope: !4296)
!4315 = !DILocation(line: 457, column: 30, scope: !4296)
!4316 = !DILocation(line: 457, column: 12, scope: !4296)
!4317 = !DILocation(line: 458, column: 16, scope: !4296)
!4318 = !DILocation(line: 458, column: 20, scope: !4296)
!4319 = !DILocation(line: 458, column: 34, scope: !4296)
!4320 = !DILocation(line: 458, column: 14, scope: !4296)
!4321 = !DILocation(line: 459, column: 2, scope: !4296)
!4322 = !DILocation(line: 459, column: 6, scope: !4296)
!4323 = !DILocation(line: 459, column: 17, scope: !4296)
!4324 = !DILocation(line: 461, column: 9, scope: !4296)
!4325 = !DILocation(line: 462, column: 9, scope: !4296)
!4326 = !DILocation(line: 463, column: 9, scope: !4296)
!4327 = !DILocation(line: 464, column: 1, scope: !4296)
!4328 = distinct !DISubprogram(name: "init_bake_rast", scope: !3, file: !3, line: 166, type: !4329, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{null, !4131, !4331, !2129, !2166, !2116}
!4331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4332, size: 64)
!4332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2158)
!4333 = !DILocalVariable(name: "bake_rast", arg: 1, scope: !4328, file: !3, line: 166, type: !4131)
!4334 = !DILocation(line: 166, column: 39, scope: !4328)
!4335 = !DILocalVariable(name: "ibuf", arg: 2, scope: !4328, file: !3, line: 166, type: !4331)
!4336 = !DILocation(line: 166, column: 63, scope: !4328)
!4337 = !DILocalVariable(name: "data", arg: 3, scope: !4328, file: !3, line: 166, type: !2129)
!4338 = !DILocation(line: 166, column: 94, scope: !4328)
!4339 = !DILocalVariable(name: "flush_pixel", arg: 4, scope: !4328, file: !3, line: 167, type: !2166)
!4340 = !DILocation(line: 167, column: 40, scope: !4328)
!4341 = !DILocalVariable(name: "do_update", arg: 5, scope: !4328, file: !3, line: 167, type: !2116)
!4342 = !DILocation(line: 167, column: 60, scope: !4328)
!4343 = !DILocalVariable(name: "userdata", scope: !4328, file: !3, line: 169, type: !2174)
!4344 = !DILocation(line: 169, column: 21, scope: !4328)
!4345 = !DILocation(line: 169, column: 54, scope: !4328)
!4346 = !DILocation(line: 169, column: 60, scope: !4328)
!4347 = !DILocation(line: 169, column: 32, scope: !4328)
!4348 = !DILocation(line: 171, column: 9, scope: !4328)
!4349 = !DILocation(line: 171, column: 2, scope: !4328)
!4350 = !DILocation(line: 173, column: 22, scope: !4328)
!4351 = !DILocation(line: 173, column: 32, scope: !4328)
!4352 = !DILocation(line: 173, column: 2, scope: !4328)
!4353 = !DILocation(line: 173, column: 13, scope: !4328)
!4354 = !DILocation(line: 173, column: 20, scope: !4328)
!4355 = !DILocation(line: 174, column: 17, scope: !4328)
!4356 = !DILocation(line: 174, column: 23, scope: !4328)
!4357 = !DILocation(line: 174, column: 2, scope: !4328)
!4358 = !DILocation(line: 174, column: 13, scope: !4328)
!4359 = !DILocation(line: 174, column: 15, scope: !4328)
!4360 = !DILocation(line: 175, column: 17, scope: !4328)
!4361 = !DILocation(line: 175, column: 23, scope: !4328)
!4362 = !DILocation(line: 175, column: 2, scope: !4328)
!4363 = !DILocation(line: 175, column: 13, scope: !4328)
!4364 = !DILocation(line: 175, column: 15, scope: !4328)
!4365 = !DILocation(line: 176, column: 20, scope: !4328)
!4366 = !DILocation(line: 176, column: 2, scope: !4328)
!4367 = !DILocation(line: 176, column: 13, scope: !4328)
!4368 = !DILocation(line: 176, column: 18, scope: !4328)
!4369 = !DILocation(line: 177, column: 27, scope: !4328)
!4370 = !DILocation(line: 177, column: 2, scope: !4328)
!4371 = !DILocation(line: 177, column: 13, scope: !4328)
!4372 = !DILocation(line: 177, column: 25, scope: !4328)
!4373 = !DILocation(line: 178, column: 25, scope: !4328)
!4374 = !DILocation(line: 178, column: 2, scope: !4328)
!4375 = !DILocation(line: 178, column: 13, scope: !4328)
!4376 = !DILocation(line: 178, column: 23, scope: !4328)
!4377 = !DILocation(line: 179, column: 1, scope: !4328)
!4378 = distinct !DISubprogram(name: "flush_pixel", scope: !3, file: !3, line: 181, type: !2168, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!4379 = !DILocalVariable(name: "data", arg: 1, scope: !4378, file: !3, line: 181, type: !2129)
!4380 = !DILocation(line: 181, column: 50, scope: !4378)
!4381 = !DILocalVariable(name: "x", arg: 2, scope: !4378, file: !3, line: 181, type: !2164)
!4382 = !DILocation(line: 181, column: 66, scope: !4378)
!4383 = !DILocalVariable(name: "y", arg: 3, scope: !4378, file: !3, line: 181, type: !2164)
!4384 = !DILocation(line: 181, column: 79, scope: !4378)
!4385 = !DILocalVariable(name: "st", scope: !4378, file: !3, line: 183, type: !906)
!4386 = !DILocation(line: 183, column: 8, scope: !4378)
!4387 = !DILocation(line: 183, column: 16, scope: !4378)
!4388 = !DILocation(line: 183, column: 18, scope: !4378)
!4389 = !DILocation(line: 183, column: 20, scope: !4378)
!4390 = !DILocation(line: 183, column: 30, scope: !4378)
!4391 = !DILocation(line: 183, column: 36, scope: !4378)
!4392 = !DILocation(line: 183, column: 28, scope: !4378)
!4393 = !DILocation(line: 183, column: 40, scope: !4378)
!4394 = !DILocation(line: 183, column: 42, scope: !4378)
!4395 = !DILocation(line: 183, column: 52, scope: !4378)
!4396 = !DILocation(line: 183, column: 58, scope: !4378)
!4397 = !DILocation(line: 183, column: 50, scope: !4378)
!4398 = !DILocalVariable(name: "st0", scope: !4378, file: !3, line: 184, type: !622)
!4399 = !DILocation(line: 184, column: 15, scope: !4378)
!4400 = !DILocalVariable(name: "st1", scope: !4378, file: !3, line: 184, type: !622)
!4401 = !DILocation(line: 184, column: 21, scope: !4378)
!4402 = !DILocalVariable(name: "st2", scope: !4378, file: !3, line: 184, type: !622)
!4403 = !DILocation(line: 184, column: 27, scope: !4378)
!4404 = !DILocalVariable(name: "tang0", scope: !4378, file: !3, line: 185, type: !622)
!4405 = !DILocation(line: 185, column: 15, scope: !4378)
!4406 = !DILocalVariable(name: "tang1", scope: !4378, file: !3, line: 185, type: !622)
!4407 = !DILocation(line: 185, column: 23, scope: !4378)
!4408 = !DILocalVariable(name: "tang2", scope: !4378, file: !3, line: 185, type: !622)
!4409 = !DILocation(line: 185, column: 31, scope: !4378)
!4410 = !DILocalVariable(name: "no0", scope: !4378, file: !3, line: 186, type: !437)
!4411 = !DILocation(line: 186, column: 8, scope: !4378)
!4412 = !DILocalVariable(name: "no1", scope: !4378, file: !3, line: 186, type: !437)
!4413 = !DILocation(line: 186, column: 16, scope: !4378)
!4414 = !DILocalVariable(name: "no2", scope: !4378, file: !3, line: 186, type: !437)
!4415 = !DILocation(line: 186, column: 24, scope: !4378)
!4416 = !DILocalVariable(name: "fUV", scope: !4378, file: !3, line: 187, type: !906)
!4417 = !DILocation(line: 187, column: 8, scope: !4378)
!4418 = !DILocalVariable(name: "from_tang", scope: !4378, file: !3, line: 187, type: !1171)
!4419 = !DILocation(line: 187, column: 16, scope: !4378)
!4420 = !DILocalVariable(name: "to_tang", scope: !4378, file: !3, line: 187, type: !1171)
!4421 = !DILocation(line: 187, column: 33, scope: !4378)
!4422 = !DILocalVariable(name: "u", scope: !4378, file: !3, line: 188, type: !192)
!4423 = !DILocation(line: 188, column: 8, scope: !4378)
!4424 = !DILocalVariable(name: "v", scope: !4378, file: !3, line: 188, type: !192)
!4425 = !DILocation(line: 188, column: 11, scope: !4378)
!4426 = !DILocalVariable(name: "w", scope: !4378, file: !3, line: 188, type: !192)
!4427 = !DILocation(line: 188, column: 14, scope: !4378)
!4428 = !DILocalVariable(name: "sign", scope: !4378, file: !3, line: 188, type: !192)
!4429 = !DILocation(line: 188, column: 17, scope: !4378)
!4430 = !DILocalVariable(name: "r", scope: !4378, file: !3, line: 189, type: !132)
!4431 = !DILocation(line: 189, column: 6, scope: !4378)
!4432 = !DILocalVariable(name: "i0", scope: !4378, file: !3, line: 191, type: !2164)
!4433 = !DILocation(line: 191, column: 12, scope: !4378)
!4434 = !DILocation(line: 191, column: 17, scope: !4378)
!4435 = !DILocation(line: 191, column: 23, scope: !4378)
!4436 = !DILocalVariable(name: "i1", scope: !4378, file: !3, line: 192, type: !2164)
!4437 = !DILocation(line: 192, column: 12, scope: !4378)
!4438 = !DILocation(line: 192, column: 17, scope: !4378)
!4439 = !DILocation(line: 192, column: 23, scope: !4378)
!4440 = !DILocalVariable(name: "i2", scope: !4378, file: !3, line: 193, type: !2164)
!4441 = !DILocation(line: 193, column: 12, scope: !4378)
!4442 = !DILocation(line: 193, column: 17, scope: !4378)
!4443 = !DILocation(line: 193, column: 23, scope: !4378)
!4444 = !DILocation(line: 195, column: 8, scope: !4378)
!4445 = !DILocation(line: 195, column: 14, scope: !4378)
!4446 = !DILocation(line: 195, column: 21, scope: !4378)
!4447 = !DILocation(line: 195, column: 27, scope: !4378)
!4448 = !DILocation(line: 195, column: 39, scope: !4378)
!4449 = !DILocation(line: 195, column: 42, scope: !4378)
!4450 = !DILocation(line: 195, column: 6, scope: !4378)
!4451 = !DILocation(line: 196, column: 8, scope: !4378)
!4452 = !DILocation(line: 196, column: 14, scope: !4378)
!4453 = !DILocation(line: 196, column: 21, scope: !4378)
!4454 = !DILocation(line: 196, column: 27, scope: !4378)
!4455 = !DILocation(line: 196, column: 39, scope: !4378)
!4456 = !DILocation(line: 196, column: 42, scope: !4378)
!4457 = !DILocation(line: 196, column: 6, scope: !4378)
!4458 = !DILocation(line: 197, column: 8, scope: !4378)
!4459 = !DILocation(line: 197, column: 14, scope: !4378)
!4460 = !DILocation(line: 197, column: 21, scope: !4378)
!4461 = !DILocation(line: 197, column: 27, scope: !4378)
!4462 = !DILocation(line: 197, column: 39, scope: !4378)
!4463 = !DILocation(line: 197, column: 42, scope: !4378)
!4464 = !DILocation(line: 197, column: 6, scope: !4378)
!4465 = !DILocation(line: 199, column: 26, scope: !4378)
!4466 = !DILocation(line: 199, column: 32, scope: !4378)
!4467 = !DILocation(line: 199, column: 37, scope: !4378)
!4468 = !DILocation(line: 199, column: 43, scope: !4378)
!4469 = !DILocation(line: 199, column: 55, scope: !4378)
!4470 = !DILocation(line: 199, column: 2, scope: !4378)
!4471 = !DILocation(line: 200, column: 26, scope: !4378)
!4472 = !DILocation(line: 200, column: 32, scope: !4378)
!4473 = !DILocation(line: 200, column: 37, scope: !4378)
!4474 = !DILocation(line: 200, column: 43, scope: !4378)
!4475 = !DILocation(line: 200, column: 55, scope: !4378)
!4476 = !DILocation(line: 200, column: 2, scope: !4378)
!4477 = !DILocation(line: 201, column: 26, scope: !4378)
!4478 = !DILocation(line: 201, column: 32, scope: !4378)
!4479 = !DILocation(line: 201, column: 37, scope: !4378)
!4480 = !DILocation(line: 201, column: 43, scope: !4378)
!4481 = !DILocation(line: 201, column: 55, scope: !4378)
!4482 = !DILocation(line: 201, column: 2, scope: !4378)
!4483 = !DILocation(line: 203, column: 20, scope: !4378)
!4484 = !DILocation(line: 203, column: 25, scope: !4378)
!4485 = !DILocation(line: 203, column: 29, scope: !4378)
!4486 = !DILocation(line: 203, column: 34, scope: !4378)
!4487 = !DILocation(line: 203, column: 39, scope: !4378)
!4488 = !DILocation(line: 203, column: 2, scope: !4378)
!4489 = !DILocation(line: 205, column: 6, scope: !4378)
!4490 = !DILocation(line: 205, column: 4, scope: !4378)
!4491 = !DILocation(line: 206, column: 6, scope: !4378)
!4492 = !DILocation(line: 206, column: 4, scope: !4378)
!4493 = !DILocation(line: 207, column: 10, scope: !4378)
!4494 = !DILocation(line: 207, column: 8, scope: !4378)
!4495 = !DILocation(line: 207, column: 14, scope: !4378)
!4496 = !DILocation(line: 207, column: 12, scope: !4378)
!4497 = !DILocation(line: 207, column: 4, scope: !4378)
!4498 = !DILocation(line: 209, column: 6, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 209, column: 6)
!4500 = !DILocation(line: 209, column: 12, scope: !4499)
!4501 = !DILocation(line: 209, column: 6, scope: !4378)
!4502 = !DILocation(line: 210, column: 11, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 209, column: 23)
!4504 = !DILocation(line: 210, column: 17, scope: !4503)
!4505 = !DILocation(line: 210, column: 29, scope: !4503)
!4506 = !DILocation(line: 210, column: 35, scope: !4503)
!4507 = !DILocation(line: 210, column: 46, scope: !4503)
!4508 = !DILocation(line: 210, column: 27, scope: !4503)
!4509 = !DILocation(line: 210, column: 53, scope: !4503)
!4510 = !DILocation(line: 210, column: 56, scope: !4503)
!4511 = !DILocation(line: 210, column: 51, scope: !4503)
!4512 = !DILocation(line: 210, column: 9, scope: !4503)
!4513 = !DILocation(line: 211, column: 11, scope: !4503)
!4514 = !DILocation(line: 211, column: 17, scope: !4503)
!4515 = !DILocation(line: 211, column: 29, scope: !4503)
!4516 = !DILocation(line: 211, column: 35, scope: !4503)
!4517 = !DILocation(line: 211, column: 46, scope: !4503)
!4518 = !DILocation(line: 211, column: 27, scope: !4503)
!4519 = !DILocation(line: 211, column: 53, scope: !4503)
!4520 = !DILocation(line: 211, column: 56, scope: !4503)
!4521 = !DILocation(line: 211, column: 51, scope: !4503)
!4522 = !DILocation(line: 211, column: 9, scope: !4503)
!4523 = !DILocation(line: 212, column: 11, scope: !4503)
!4524 = !DILocation(line: 212, column: 17, scope: !4503)
!4525 = !DILocation(line: 212, column: 29, scope: !4503)
!4526 = !DILocation(line: 212, column: 35, scope: !4503)
!4527 = !DILocation(line: 212, column: 46, scope: !4503)
!4528 = !DILocation(line: 212, column: 27, scope: !4503)
!4529 = !DILocation(line: 212, column: 53, scope: !4503)
!4530 = !DILocation(line: 212, column: 56, scope: !4503)
!4531 = !DILocation(line: 212, column: 51, scope: !4503)
!4532 = !DILocation(line: 212, column: 9, scope: !4503)
!4533 = !DILocation(line: 216, column: 11, scope: !4503)
!4534 = !DILocation(line: 216, column: 22, scope: !4503)
!4535 = !DILocation(line: 216, column: 20, scope: !4503)
!4536 = !DILocation(line: 216, column: 26, scope: !4503)
!4537 = !DILocation(line: 216, column: 37, scope: !4503)
!4538 = !DILocation(line: 216, column: 35, scope: !4503)
!4539 = !DILocation(line: 216, column: 24, scope: !4503)
!4540 = !DILocation(line: 216, column: 41, scope: !4503)
!4541 = !DILocation(line: 216, column: 52, scope: !4503)
!4542 = !DILocation(line: 216, column: 50, scope: !4503)
!4543 = !DILocation(line: 216, column: 39, scope: !4503)
!4544 = !DILocation(line: 216, column: 55, scope: !4503)
!4545 = !DILocation(line: 216, column: 10, scope: !4503)
!4546 = !DILocation(line: 216, column: 8, scope: !4503)
!4547 = !DILocation(line: 220, column: 10, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4503, file: !3, line: 220, column: 3)
!4549 = !DILocation(line: 220, column: 8, scope: !4548)
!4550 = !DILocation(line: 220, column: 15, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 220, column: 3)
!4552 = !DILocation(line: 220, column: 17, scope: !4551)
!4553 = !DILocation(line: 220, column: 3, scope: !4548)
!4554 = !DILocation(line: 221, column: 22, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 220, column: 27)
!4556 = !DILocation(line: 221, column: 28, scope: !4555)
!4557 = !DILocation(line: 221, column: 33, scope: !4555)
!4558 = !DILocation(line: 221, column: 31, scope: !4555)
!4559 = !DILocation(line: 221, column: 37, scope: !4555)
!4560 = !DILocation(line: 221, column: 43, scope: !4555)
!4561 = !DILocation(line: 221, column: 48, scope: !4555)
!4562 = !DILocation(line: 221, column: 46, scope: !4555)
!4563 = !DILocation(line: 221, column: 35, scope: !4555)
!4564 = !DILocation(line: 221, column: 52, scope: !4555)
!4565 = !DILocation(line: 221, column: 58, scope: !4555)
!4566 = !DILocation(line: 221, column: 63, scope: !4555)
!4567 = !DILocation(line: 221, column: 61, scope: !4555)
!4568 = !DILocation(line: 221, column: 50, scope: !4555)
!4569 = !DILocation(line: 221, column: 4, scope: !4555)
!4570 = !DILocation(line: 221, column: 17, scope: !4555)
!4571 = !DILocation(line: 221, column: 20, scope: !4555)
!4572 = !DILocation(line: 222, column: 26, scope: !4555)
!4573 = !DILocation(line: 222, column: 22, scope: !4555)
!4574 = !DILocation(line: 222, column: 31, scope: !4555)
!4575 = !DILocation(line: 222, column: 29, scope: !4555)
!4576 = !DILocation(line: 222, column: 39, scope: !4555)
!4577 = !DILocation(line: 222, column: 35, scope: !4555)
!4578 = !DILocation(line: 222, column: 44, scope: !4555)
!4579 = !DILocation(line: 222, column: 42, scope: !4555)
!4580 = !DILocation(line: 222, column: 33, scope: !4555)
!4581 = !DILocation(line: 222, column: 52, scope: !4555)
!4582 = !DILocation(line: 222, column: 48, scope: !4555)
!4583 = !DILocation(line: 222, column: 57, scope: !4555)
!4584 = !DILocation(line: 222, column: 55, scope: !4555)
!4585 = !DILocation(line: 222, column: 46, scope: !4555)
!4586 = !DILocation(line: 222, column: 4, scope: !4555)
!4587 = !DILocation(line: 222, column: 17, scope: !4555)
!4588 = !DILocation(line: 222, column: 20, scope: !4555)
!4589 = !DILocation(line: 223, column: 3, scope: !4555)
!4590 = !DILocation(line: 220, column: 23, scope: !4551)
!4591 = !DILocation(line: 220, column: 3, scope: !4551)
!4592 = distinct !{!4592, !4553, !4593}
!4593 = !DILocation(line: 223, column: 3, scope: !4548)
!4594 = !DILocation(line: 225, column: 17, scope: !4503)
!4595 = !DILocation(line: 225, column: 31, scope: !4503)
!4596 = !DILocation(line: 225, column: 45, scope: !4503)
!4597 = !DILocation(line: 225, column: 3, scope: !4503)
!4598 = !DILocation(line: 226, column: 13, scope: !4503)
!4599 = !DILocation(line: 226, column: 27, scope: !4503)
!4600 = !DILocation(line: 226, column: 3, scope: !4503)
!4601 = !DILocation(line: 227, column: 16, scope: !4503)
!4602 = !DILocation(line: 227, column: 25, scope: !4503)
!4603 = !DILocation(line: 227, column: 3, scope: !4503)
!4604 = !DILocation(line: 228, column: 2, scope: !4503)
!4605 = !DILocation(line: 230, column: 11, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 229, column: 7)
!4607 = !DILocation(line: 230, column: 3, scope: !4606)
!4608 = !DILocation(line: 233, column: 2, scope: !4378)
!4609 = !DILocation(line: 233, column: 8, scope: !4378)
!4610 = !DILocation(line: 233, column: 18, scope: !4378)
!4611 = !DILocation(line: 233, column: 24, scope: !4378)
!4612 = !DILocation(line: 233, column: 34, scope: !4378)
!4613 = !DILocation(line: 233, column: 40, scope: !4378)
!4614 = !DILocation(line: 233, column: 50, scope: !4378)
!4615 = !DILocation(line: 233, column: 56, scope: !4378)
!4616 = !DILocation(line: 233, column: 69, scope: !4378)
!4617 = !DILocation(line: 233, column: 75, scope: !4378)
!4618 = !DILocation(line: 234, column: 18, scope: !4378)
!4619 = !DILocation(line: 234, column: 24, scope: !4378)
!4620 = !DILocation(line: 234, column: 30, scope: !4378)
!4621 = !DILocation(line: 234, column: 36, scope: !4378)
!4622 = !DILocation(line: 234, column: 48, scope: !4378)
!4623 = !DILocation(line: 234, column: 54, scope: !4378)
!4624 = !DILocation(line: 234, column: 59, scope: !4378)
!4625 = !DILocation(line: 234, column: 63, scope: !4378)
!4626 = !DILocation(line: 234, column: 72, scope: !4378)
!4627 = !DILocation(line: 234, column: 75, scope: !4378)
!4628 = !DILocation(line: 235, column: 1, scope: !4378)
!4629 = distinct !DISubprogram(name: "min_ff", scope: !4630, file: !4630, line: 202, type: !4631, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!4630 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4631 = !DISubroutineType(types: !4632)
!4632 = !{!192, !192, !192}
!4633 = !DILocalVariable(name: "a", arg: 1, scope: !4629, file: !4630, line: 202, type: !192)
!4634 = !DILocation(line: 202, column: 28, scope: !4629)
!4635 = !DILocalVariable(name: "b", arg: 2, scope: !4629, file: !4630, line: 202, type: !192)
!4636 = !DILocation(line: 202, column: 37, scope: !4629)
!4637 = !DILocation(line: 204, column: 10, scope: !4629)
!4638 = !DILocation(line: 204, column: 14, scope: !4629)
!4639 = !DILocation(line: 204, column: 12, scope: !4629)
!4640 = !DILocation(line: 204, column: 9, scope: !4629)
!4641 = !DILocation(line: 204, column: 19, scope: !4629)
!4642 = !DILocation(line: 204, column: 23, scope: !4629)
!4643 = !DILocation(line: 204, column: 2, scope: !4629)
!4644 = distinct !DISubprogram(name: "max_ff", scope: !4630, file: !4630, line: 206, type: !4631, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!4645 = !DILocalVariable(name: "a", arg: 1, scope: !4644, file: !4630, line: 206, type: !192)
!4646 = !DILocation(line: 206, column: 28, scope: !4644)
!4647 = !DILocalVariable(name: "b", arg: 2, scope: !4644, file: !4630, line: 206, type: !192)
!4648 = !DILocation(line: 206, column: 37, scope: !4644)
!4649 = !DILocation(line: 208, column: 10, scope: !4644)
!4650 = !DILocation(line: 208, column: 14, scope: !4644)
!4651 = !DILocation(line: 208, column: 12, scope: !4644)
!4652 = !DILocation(line: 208, column: 9, scope: !4644)
!4653 = !DILocation(line: 208, column: 19, scope: !4644)
!4654 = !DILocation(line: 208, column: 23, scope: !4644)
!4655 = !DILocation(line: 208, column: 2, scope: !4644)
!4656 = distinct !DISubprogram(name: "multires_bake_queue_next_face", scope: !3, file: !3, line: 367, type: !4657, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!4657 = !DISubroutineType(types: !4658)
!4658 = !{!132, !322}
!4659 = !DILocalVariable(name: "queue", arg: 1, scope: !4656, file: !3, line: 367, type: !322)
!4660 = !DILocation(line: 367, column: 61, scope: !4656)
!4661 = !DILocalVariable(name: "face", scope: !4656, file: !3, line: 369, type: !132)
!4662 = !DILocation(line: 369, column: 6, scope: !4656)
!4663 = !DILocation(line: 375, column: 17, scope: !4656)
!4664 = !DILocation(line: 375, column: 24, scope: !4656)
!4665 = !DILocation(line: 375, column: 2, scope: !4656)
!4666 = !DILocation(line: 376, column: 6, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 376, column: 6)
!4668 = !DILocation(line: 376, column: 13, scope: !4667)
!4669 = !DILocation(line: 376, column: 24, scope: !4667)
!4670 = !DILocation(line: 376, column: 31, scope: !4667)
!4671 = !DILocation(line: 376, column: 22, scope: !4667)
!4672 = !DILocation(line: 376, column: 6, scope: !4656)
!4673 = !DILocation(line: 377, column: 10, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 376, column: 41)
!4675 = !DILocation(line: 377, column: 17, scope: !4674)
!4676 = !DILocation(line: 377, column: 8, scope: !4674)
!4677 = !DILocation(line: 378, column: 3, scope: !4674)
!4678 = !DILocation(line: 378, column: 10, scope: !4674)
!4679 = !DILocation(line: 378, column: 18, scope: !4674)
!4680 = !DILocation(line: 379, column: 2, scope: !4674)
!4681 = !DILocation(line: 380, column: 19, scope: !4656)
!4682 = !DILocation(line: 380, column: 26, scope: !4656)
!4683 = !DILocation(line: 380, column: 2, scope: !4656)
!4684 = !DILocation(line: 382, column: 9, scope: !4656)
!4685 = !DILocation(line: 382, column: 2, scope: !4656)
!4686 = distinct !DISubprogram(name: "multiresbake_test_break", scope: !3, file: !3, line: 334, type: !4687, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{!132, !338}
!4689 = !DILocalVariable(name: "bkr", arg: 1, scope: !4686, file: !3, line: 334, type: !338)
!4690 = !DILocation(line: 334, column: 56, scope: !4686)
!4691 = !DILocation(line: 336, column: 7, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 336, column: 6)
!4693 = !DILocation(line: 336, column: 12, scope: !4692)
!4694 = !DILocation(line: 336, column: 6, scope: !4686)
!4695 = !DILocation(line: 338, column: 3, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 336, column: 18)
!4697 = !DILocation(line: 341, column: 10, scope: !4686)
!4698 = !DILocation(line: 341, column: 15, scope: !4686)
!4699 = !DILocation(line: 341, column: 9, scope: !4686)
!4700 = !DILocation(line: 341, column: 20, scope: !4686)
!4701 = !DILocation(line: 341, column: 25, scope: !4686)
!4702 = !DILocation(line: 341, column: 23, scope: !4686)
!4703 = !DILocation(line: 341, column: 2, scope: !4686)
!4704 = !DILocation(line: 342, column: 1, scope: !4686)
!4705 = distinct !DISubprogram(name: "bake_rasterize", scope: !3, file: !3, line: 292, type: !4706, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!4706 = !DISubroutineType(types: !4707)
!4707 = !{null, !4708, !622, !622, !622}
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 64)
!4709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2122)
!4710 = !DILocalVariable(name: "bake_rast", arg: 1, scope: !4705, file: !3, line: 292, type: !4708)
!4711 = !DILocation(line: 292, column: 45, scope: !4705)
!4712 = !DILocalVariable(name: "st0_in", arg: 2, scope: !4705, file: !3, line: 292, type: !622)
!4713 = !DILocation(line: 292, column: 68, scope: !4705)
!4714 = !DILocalVariable(name: "st1_in", arg: 3, scope: !4705, file: !3, line: 292, type: !622)
!4715 = !DILocation(line: 292, column: 91, scope: !4705)
!4716 = !DILocalVariable(name: "st2_in", arg: 4, scope: !4705, file: !3, line: 292, type: !622)
!4717 = !DILocation(line: 292, column: 114, scope: !4705)
!4718 = !DILocalVariable(name: "w", scope: !4705, file: !3, line: 294, type: !2164)
!4719 = !DILocation(line: 294, column: 12, scope: !4705)
!4720 = !DILocation(line: 294, column: 16, scope: !4705)
!4721 = !DILocation(line: 294, column: 27, scope: !4705)
!4722 = !DILocalVariable(name: "h", scope: !4705, file: !3, line: 295, type: !2164)
!4723 = !DILocation(line: 295, column: 12, scope: !4705)
!4724 = !DILocation(line: 295, column: 16, scope: !4705)
!4725 = !DILocation(line: 295, column: 27, scope: !4705)
!4726 = !DILocalVariable(name: "slo", scope: !4705, file: !3, line: 296, type: !192)
!4727 = !DILocation(line: 296, column: 8, scope: !4705)
!4728 = !DILocation(line: 296, column: 14, scope: !4705)
!4729 = !DILocation(line: 296, column: 26, scope: !4705)
!4730 = !DILocation(line: 296, column: 24, scope: !4705)
!4731 = !DILocation(line: 296, column: 28, scope: !4705)
!4732 = !DILocalVariable(name: "tlo", scope: !4705, file: !3, line: 297, type: !192)
!4733 = !DILocation(line: 297, column: 8, scope: !4705)
!4734 = !DILocation(line: 297, column: 14, scope: !4705)
!4735 = !DILocation(line: 297, column: 26, scope: !4705)
!4736 = !DILocation(line: 297, column: 24, scope: !4705)
!4737 = !DILocation(line: 297, column: 28, scope: !4705)
!4738 = !DILocalVariable(name: "smi", scope: !4705, file: !3, line: 298, type: !192)
!4739 = !DILocation(line: 298, column: 8, scope: !4705)
!4740 = !DILocation(line: 298, column: 14, scope: !4705)
!4741 = !DILocation(line: 298, column: 26, scope: !4705)
!4742 = !DILocation(line: 298, column: 24, scope: !4705)
!4743 = !DILocation(line: 298, column: 28, scope: !4705)
!4744 = !DILocalVariable(name: "tmi", scope: !4705, file: !3, line: 299, type: !192)
!4745 = !DILocation(line: 299, column: 8, scope: !4705)
!4746 = !DILocation(line: 299, column: 14, scope: !4705)
!4747 = !DILocation(line: 299, column: 26, scope: !4705)
!4748 = !DILocation(line: 299, column: 24, scope: !4705)
!4749 = !DILocation(line: 299, column: 28, scope: !4705)
!4750 = !DILocalVariable(name: "shi", scope: !4705, file: !3, line: 300, type: !192)
!4751 = !DILocation(line: 300, column: 8, scope: !4705)
!4752 = !DILocation(line: 300, column: 14, scope: !4705)
!4753 = !DILocation(line: 300, column: 26, scope: !4705)
!4754 = !DILocation(line: 300, column: 24, scope: !4705)
!4755 = !DILocation(line: 300, column: 28, scope: !4705)
!4756 = !DILocalVariable(name: "thi", scope: !4705, file: !3, line: 301, type: !192)
!4757 = !DILocation(line: 301, column: 8, scope: !4705)
!4758 = !DILocation(line: 301, column: 14, scope: !4705)
!4759 = !DILocation(line: 301, column: 26, scope: !4705)
!4760 = !DILocation(line: 301, column: 24, scope: !4705)
!4761 = !DILocation(line: 301, column: 28, scope: !4705)
!4762 = !DILocalVariable(name: "is_mid_right", scope: !4705, file: !3, line: 302, type: !132)
!4763 = !DILocation(line: 302, column: 6, scope: !4705)
!4764 = !DILocalVariable(name: "ylo", scope: !4705, file: !3, line: 302, type: !132)
!4765 = !DILocation(line: 302, column: 24, scope: !4705)
!4766 = !DILocalVariable(name: "yhi", scope: !4705, file: !3, line: 302, type: !132)
!4767 = !DILocation(line: 302, column: 29, scope: !4705)
!4768 = !DILocalVariable(name: "yhi_beg", scope: !4705, file: !3, line: 302, type: !132)
!4769 = !DILocation(line: 302, column: 34, scope: !4705)
!4770 = !DILocation(line: 305, column: 7, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 305, column: 6)
!4772 = !DILocation(line: 305, column: 14, scope: !4771)
!4773 = !DILocation(line: 305, column: 11, scope: !4771)
!4774 = !DILocation(line: 305, column: 18, scope: !4771)
!4775 = !DILocation(line: 305, column: 21, scope: !4771)
!4776 = !DILocation(line: 305, column: 28, scope: !4771)
!4777 = !DILocation(line: 305, column: 25, scope: !4771)
!4778 = !DILocation(line: 305, column: 33, scope: !4771)
!4779 = !DILocation(line: 305, column: 37, scope: !4771)
!4780 = !DILocation(line: 305, column: 44, scope: !4771)
!4781 = !DILocation(line: 305, column: 41, scope: !4771)
!4782 = !DILocation(line: 305, column: 48, scope: !4771)
!4783 = !DILocation(line: 305, column: 51, scope: !4771)
!4784 = !DILocation(line: 305, column: 58, scope: !4771)
!4785 = !DILocation(line: 305, column: 55, scope: !4771)
!4786 = !DILocation(line: 305, column: 63, scope: !4771)
!4787 = !DILocation(line: 305, column: 67, scope: !4771)
!4788 = !DILocation(line: 305, column: 74, scope: !4771)
!4789 = !DILocation(line: 305, column: 71, scope: !4771)
!4790 = !DILocation(line: 305, column: 78, scope: !4771)
!4791 = !DILocation(line: 305, column: 81, scope: !4771)
!4792 = !DILocation(line: 305, column: 88, scope: !4771)
!4793 = !DILocation(line: 305, column: 85, scope: !4771)
!4794 = !DILocation(line: 305, column: 6, scope: !4705)
!4795 = !DILocation(line: 306, column: 3, scope: !4771)
!4796 = !DILocation(line: 309, column: 6, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 309, column: 6)
!4798 = !DILocation(line: 309, column: 12, scope: !4797)
!4799 = !DILocation(line: 309, column: 10, scope: !4797)
!4800 = !DILocation(line: 309, column: 16, scope: !4797)
!4801 = !DILocation(line: 309, column: 19, scope: !4797)
!4802 = !DILocation(line: 309, column: 25, scope: !4797)
!4803 = !DILocation(line: 309, column: 23, scope: !4797)
!4804 = !DILocation(line: 309, column: 6, scope: !4705)
!4805 = !DILocalVariable(name: "sw_ap", scope: !4806, file: !3, line: 310, type: !192)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 310, column: 3)
!4807 = distinct !DILexicalBlock(scope: !4797, file: !3, line: 309, column: 30)
!4808 = !DILocation(line: 310, column: 3, scope: !4806)
!4809 = !DILocalVariable(name: "sw_ap", scope: !4810, file: !3, line: 311, type: !192)
!4810 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 311, column: 3)
!4811 = !DILocation(line: 311, column: 3, scope: !4810)
!4812 = !DILocation(line: 312, column: 2, scope: !4807)
!4813 = !DILocation(line: 313, column: 11, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4797, file: !3, line: 313, column: 11)
!4815 = !DILocation(line: 313, column: 17, scope: !4814)
!4816 = !DILocation(line: 313, column: 15, scope: !4814)
!4817 = !DILocation(line: 313, column: 11, scope: !4797)
!4818 = !DILocalVariable(name: "sw_ap", scope: !4819, file: !3, line: 314, type: !192)
!4819 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 314, column: 3)
!4820 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 313, column: 22)
!4821 = !DILocation(line: 314, column: 3, scope: !4819)
!4822 = !DILocalVariable(name: "sw_ap", scope: !4823, file: !3, line: 315, type: !192)
!4823 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 315, column: 3)
!4824 = !DILocation(line: 315, column: 3, scope: !4823)
!4825 = !DILocation(line: 316, column: 2, scope: !4820)
!4826 = !DILocation(line: 318, column: 6, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 318, column: 6)
!4828 = !DILocation(line: 318, column: 12, scope: !4827)
!4829 = !DILocation(line: 318, column: 10, scope: !4827)
!4830 = !DILocation(line: 318, column: 6, scope: !4705)
!4831 = !DILocalVariable(name: "sw_ap", scope: !4832, file: !3, line: 319, type: !192)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 319, column: 3)
!4833 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 318, column: 17)
!4834 = !DILocation(line: 319, column: 3, scope: !4832)
!4835 = !DILocalVariable(name: "sw_ap", scope: !4836, file: !3, line: 320, type: !192)
!4836 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 320, column: 3)
!4837 = !DILocation(line: 320, column: 3, scope: !4836)
!4838 = !DILocation(line: 321, column: 2, scope: !4833)
!4839 = !DILocation(line: 324, column: 20, scope: !4705)
!4840 = !DILocation(line: 324, column: 26, scope: !4705)
!4841 = !DILocation(line: 324, column: 24, scope: !4705)
!4842 = !DILocation(line: 324, column: 18, scope: !4705)
!4843 = !DILocation(line: 324, column: 34, scope: !4705)
!4844 = !DILocation(line: 324, column: 40, scope: !4705)
!4845 = !DILocation(line: 324, column: 38, scope: !4705)
!4846 = !DILocation(line: 324, column: 31, scope: !4705)
!4847 = !DILocation(line: 324, column: 48, scope: !4705)
!4848 = !DILocation(line: 324, column: 54, scope: !4705)
!4849 = !DILocation(line: 324, column: 52, scope: !4705)
!4850 = !DILocation(line: 324, column: 62, scope: !4705)
!4851 = !DILocation(line: 324, column: 68, scope: !4705)
!4852 = !DILocation(line: 324, column: 66, scope: !4705)
!4853 = !DILocation(line: 324, column: 59, scope: !4705)
!4854 = !DILocation(line: 324, column: 45, scope: !4705)
!4855 = !DILocation(line: 324, column: 74, scope: !4705)
!4856 = !DILocation(line: 324, column: 17, scope: !4705)
!4857 = !DILocation(line: 324, column: 15, scope: !4705)
!4858 = !DILocation(line: 325, column: 20, scope: !4705)
!4859 = !DILocation(line: 325, column: 14, scope: !4705)
!4860 = !DILocation(line: 325, column: 8, scope: !4705)
!4861 = !DILocation(line: 325, column: 6, scope: !4705)
!4862 = !DILocation(line: 326, column: 24, scope: !4705)
!4863 = !DILocation(line: 326, column: 18, scope: !4705)
!4864 = !DILocation(line: 326, column: 12, scope: !4705)
!4865 = !DILocation(line: 326, column: 10, scope: !4705)
!4866 = !DILocation(line: 327, column: 20, scope: !4705)
!4867 = !DILocation(line: 327, column: 14, scope: !4705)
!4868 = !DILocation(line: 327, column: 8, scope: !4705)
!4869 = !DILocation(line: 327, column: 6, scope: !4705)
!4870 = !DILocation(line: 330, column: 17, scope: !4705)
!4871 = !DILocation(line: 330, column: 28, scope: !4705)
!4872 = !DILocation(line: 330, column: 33, scope: !4705)
!4873 = !DILocation(line: 330, column: 38, scope: !4705)
!4874 = !DILocation(line: 330, column: 43, scope: !4705)
!4875 = !DILocation(line: 330, column: 48, scope: !4705)
!4876 = !DILocation(line: 330, column: 53, scope: !4705)
!4877 = !DILocation(line: 330, column: 58, scope: !4705)
!4878 = !DILocation(line: 330, column: 63, scope: !4705)
!4879 = !DILocation(line: 330, column: 68, scope: !4705)
!4880 = !DILocation(line: 330, column: 73, scope: !4705)
!4881 = !DILocation(line: 330, column: 82, scope: !4705)
!4882 = !DILocation(line: 330, column: 2, scope: !4705)
!4883 = !DILocation(line: 331, column: 17, scope: !4705)
!4884 = !DILocation(line: 331, column: 28, scope: !4705)
!4885 = !DILocation(line: 331, column: 33, scope: !4705)
!4886 = !DILocation(line: 331, column: 38, scope: !4705)
!4887 = !DILocation(line: 331, column: 43, scope: !4705)
!4888 = !DILocation(line: 331, column: 48, scope: !4705)
!4889 = !DILocation(line: 331, column: 53, scope: !4705)
!4890 = !DILocation(line: 331, column: 58, scope: !4705)
!4891 = !DILocation(line: 331, column: 63, scope: !4705)
!4892 = !DILocation(line: 331, column: 68, scope: !4705)
!4893 = !DILocation(line: 331, column: 77, scope: !4705)
!4894 = !DILocation(line: 331, column: 82, scope: !4705)
!4895 = !DILocation(line: 331, column: 2, scope: !4705)
!4896 = !DILocation(line: 332, column: 1, scope: !4705)
!4897 = distinct !DISubprogram(name: "rasterize_half", scope: !3, file: !3, line: 253, type: !4898, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{null, !4708, !419, !419, !419, !419, !419, !419, !419, !419, !2164, !2164, !2164}
!4900 = !DILocalVariable(name: "bake_rast", arg: 1, scope: !4897, file: !3, line: 253, type: !4708)
!4901 = !DILocation(line: 253, column: 45, scope: !4897)
!4902 = !DILocalVariable(name: "s0_s", arg: 2, scope: !4897, file: !3, line: 254, type: !419)
!4903 = !DILocation(line: 254, column: 40, scope: !4897)
!4904 = !DILocalVariable(name: "t0_s", arg: 3, scope: !4897, file: !3, line: 254, type: !419)
!4905 = !DILocation(line: 254, column: 58, scope: !4897)
!4906 = !DILocalVariable(name: "s1_s", arg: 4, scope: !4897, file: !3, line: 254, type: !419)
!4907 = !DILocation(line: 254, column: 76, scope: !4897)
!4908 = !DILocalVariable(name: "t1_s", arg: 5, scope: !4897, file: !3, line: 254, type: !419)
!4909 = !DILocation(line: 254, column: 94, scope: !4897)
!4910 = !DILocalVariable(name: "s0_l", arg: 6, scope: !4897, file: !3, line: 255, type: !419)
!4911 = !DILocation(line: 255, column: 40, scope: !4897)
!4912 = !DILocalVariable(name: "t0_l", arg: 7, scope: !4897, file: !3, line: 255, type: !419)
!4913 = !DILocation(line: 255, column: 58, scope: !4897)
!4914 = !DILocalVariable(name: "s1_l", arg: 8, scope: !4897, file: !3, line: 255, type: !419)
!4915 = !DILocation(line: 255, column: 76, scope: !4897)
!4916 = !DILocalVariable(name: "t1_l", arg: 9, scope: !4897, file: !3, line: 255, type: !419)
!4917 = !DILocation(line: 255, column: 94, scope: !4897)
!4918 = !DILocalVariable(name: "y0_in", arg: 10, scope: !4897, file: !3, line: 256, type: !2164)
!4919 = !DILocation(line: 256, column: 38, scope: !4897)
!4920 = !DILocalVariable(name: "y1_in", arg: 11, scope: !4897, file: !3, line: 256, type: !2164)
!4921 = !DILocation(line: 256, column: 55, scope: !4897)
!4922 = !DILocalVariable(name: "is_mid_right", arg: 12, scope: !4897, file: !3, line: 256, type: !2164)
!4923 = !DILocation(line: 256, column: 72, scope: !4897)
!4924 = !DILocalVariable(name: "s_stable", scope: !4897, file: !3, line: 258, type: !2164)
!4925 = !DILocation(line: 258, column: 12, scope: !4897)
!4926 = !DILocation(line: 258, column: 29, scope: !4897)
!4927 = !DILocation(line: 258, column: 36, scope: !4897)
!4928 = !DILocation(line: 258, column: 34, scope: !4897)
!4929 = !DILocation(line: 258, column: 23, scope: !4897)
!4930 = !DILocation(line: 258, column: 42, scope: !4897)
!4931 = !DILocalVariable(name: "l_stable", scope: !4897, file: !3, line: 259, type: !2164)
!4932 = !DILocation(line: 259, column: 12, scope: !4897)
!4933 = !DILocation(line: 259, column: 29, scope: !4897)
!4934 = !DILocation(line: 259, column: 36, scope: !4897)
!4935 = !DILocation(line: 259, column: 34, scope: !4897)
!4936 = !DILocation(line: 259, column: 23, scope: !4897)
!4937 = !DILocation(line: 259, column: 42, scope: !4897)
!4938 = !DILocalVariable(name: "w", scope: !4897, file: !3, line: 260, type: !2164)
!4939 = !DILocation(line: 260, column: 12, scope: !4897)
!4940 = !DILocation(line: 260, column: 16, scope: !4897)
!4941 = !DILocation(line: 260, column: 27, scope: !4897)
!4942 = !DILocalVariable(name: "h", scope: !4897, file: !3, line: 261, type: !2164)
!4943 = !DILocation(line: 261, column: 12, scope: !4897)
!4944 = !DILocation(line: 261, column: 16, scope: !4897)
!4945 = !DILocation(line: 261, column: 27, scope: !4897)
!4946 = !DILocalVariable(name: "y", scope: !4897, file: !3, line: 262, type: !132)
!4947 = !DILocation(line: 262, column: 6, scope: !4897)
!4948 = !DILocalVariable(name: "y0", scope: !4897, file: !3, line: 262, type: !132)
!4949 = !DILocation(line: 262, column: 9, scope: !4897)
!4950 = !DILocalVariable(name: "y1", scope: !4897, file: !3, line: 262, type: !132)
!4951 = !DILocation(line: 262, column: 13, scope: !4897)
!4952 = !DILocation(line: 264, column: 6, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 264, column: 6)
!4954 = !DILocation(line: 264, column: 12, scope: !4953)
!4955 = !DILocation(line: 264, column: 17, scope: !4953)
!4956 = !DILocation(line: 264, column: 20, scope: !4953)
!4957 = !DILocation(line: 264, column: 29, scope: !4953)
!4958 = !DILocation(line: 264, column: 26, scope: !4953)
!4959 = !DILocation(line: 264, column: 6, scope: !4897)
!4960 = !DILocation(line: 265, column: 3, scope: !4953)
!4961 = !DILocation(line: 267, column: 7, scope: !4897)
!4962 = !DILocation(line: 267, column: 13, scope: !4897)
!4963 = !DILocation(line: 267, column: 23, scope: !4897)
!4964 = !DILocation(line: 267, column: 5, scope: !4897)
!4965 = !DILocation(line: 268, column: 7, scope: !4897)
!4966 = !DILocation(line: 268, column: 16, scope: !4897)
!4967 = !DILocation(line: 268, column: 13, scope: !4897)
!4968 = !DILocation(line: 268, column: 20, scope: !4897)
!4969 = !DILocation(line: 268, column: 24, scope: !4897)
!4970 = !DILocation(line: 268, column: 5, scope: !4897)
!4971 = !DILocation(line: 270, column: 11, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 270, column: 2)
!4973 = !DILocation(line: 270, column: 9, scope: !4972)
!4974 = !DILocation(line: 270, column: 7, scope: !4972)
!4975 = !DILocation(line: 270, column: 15, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 270, column: 2)
!4977 = !DILocation(line: 270, column: 19, scope: !4976)
!4978 = !DILocation(line: 270, column: 17, scope: !4976)
!4979 = !DILocation(line: 270, column: 2, scope: !4972)
!4980 = !DILocalVariable(name: "iXl", scope: !4981, file: !3, line: 272, type: !132)
!4981 = distinct !DILexicalBlock(scope: !4976, file: !3, line: 270, column: 28)
!4982 = !DILocation(line: 272, column: 7, scope: !4981)
!4983 = !DILocalVariable(name: "iXr", scope: !4981, file: !3, line: 272, type: !132)
!4984 = !DILocation(line: 272, column: 12, scope: !4981)
!4985 = !DILocalVariable(name: "x", scope: !4981, file: !3, line: 272, type: !132)
!4986 = !DILocation(line: 272, column: 17, scope: !4981)
!4987 = !DILocalVariable(name: "x_l", scope: !4981, file: !3, line: 273, type: !192)
!4988 = !DILocation(line: 273, column: 9, scope: !4981)
!4989 = !DILocation(line: 273, column: 15, scope: !4981)
!4990 = !DILocation(line: 273, column: 24, scope: !4981)
!4991 = !DILocation(line: 273, column: 32, scope: !4981)
!4992 = !DILocation(line: 273, column: 42, scope: !4981)
!4993 = !DILocation(line: 273, column: 49, scope: !4981)
!4994 = !DILocation(line: 273, column: 47, scope: !4981)
!4995 = !DILocation(line: 273, column: 58, scope: !4981)
!4996 = !DILocation(line: 273, column: 62, scope: !4981)
!4997 = !DILocation(line: 273, column: 60, scope: !4981)
!4998 = !DILocation(line: 273, column: 55, scope: !4981)
!4999 = !DILocation(line: 273, column: 72, scope: !4981)
!5000 = !DILocation(line: 273, column: 79, scope: !4981)
!5001 = !DILocation(line: 273, column: 77, scope: !4981)
!5002 = !DILocation(line: 273, column: 69, scope: !4981)
!5003 = !DILocation(line: 273, column: 37, scope: !4981)
!5004 = !DILocation(line: 273, column: 89, scope: !4981)
!5005 = !DILocalVariable(name: "x_r", scope: !4981, file: !3, line: 274, type: !192)
!5006 = !DILocation(line: 274, column: 9, scope: !4981)
!5007 = !DILocation(line: 274, column: 15, scope: !4981)
!5008 = !DILocation(line: 274, column: 24, scope: !4981)
!5009 = !DILocation(line: 274, column: 32, scope: !4981)
!5010 = !DILocation(line: 274, column: 42, scope: !4981)
!5011 = !DILocation(line: 274, column: 49, scope: !4981)
!5012 = !DILocation(line: 274, column: 47, scope: !4981)
!5013 = !DILocation(line: 274, column: 58, scope: !4981)
!5014 = !DILocation(line: 274, column: 62, scope: !4981)
!5015 = !DILocation(line: 274, column: 60, scope: !4981)
!5016 = !DILocation(line: 274, column: 55, scope: !4981)
!5017 = !DILocation(line: 274, column: 72, scope: !4981)
!5018 = !DILocation(line: 274, column: 79, scope: !4981)
!5019 = !DILocation(line: 274, column: 77, scope: !4981)
!5020 = !DILocation(line: 274, column: 69, scope: !4981)
!5021 = !DILocation(line: 274, column: 37, scope: !4981)
!5022 = !DILocation(line: 274, column: 89, scope: !4981)
!5023 = !DILocation(line: 276, column: 7, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 276, column: 7)
!5025 = !DILocation(line: 276, column: 20, scope: !5024)
!5026 = !DILocation(line: 276, column: 7, scope: !4981)
!5027 = !DILocalVariable(name: "sw_ap", scope: !5028, file: !3, line: 277, type: !192)
!5028 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 277, column: 4)
!5029 = !DILocation(line: 277, column: 4, scope: !5028)
!5030 = !DILocation(line: 279, column: 20, scope: !4981)
!5031 = !DILocation(line: 279, column: 14, scope: !4981)
!5032 = !DILocation(line: 279, column: 9, scope: !4981)
!5033 = !DILocation(line: 279, column: 7, scope: !4981)
!5034 = !DILocation(line: 280, column: 20, scope: !4981)
!5035 = !DILocation(line: 280, column: 14, scope: !4981)
!5036 = !DILocation(line: 280, column: 9, scope: !4981)
!5037 = !DILocation(line: 280, column: 7, scope: !4981)
!5038 = !DILocation(line: 282, column: 7, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 282, column: 7)
!5040 = !DILocation(line: 282, column: 11, scope: !5039)
!5041 = !DILocation(line: 282, column: 15, scope: !5039)
!5042 = !DILocation(line: 282, column: 18, scope: !5039)
!5043 = !DILocation(line: 282, column: 24, scope: !5039)
!5044 = !DILocation(line: 282, column: 22, scope: !5039)
!5045 = !DILocation(line: 282, column: 7, scope: !4981)
!5046 = !DILocation(line: 283, column: 10, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5039, file: !3, line: 282, column: 27)
!5048 = !DILocation(line: 283, column: 14, scope: !5047)
!5049 = !DILocation(line: 283, column: 24, scope: !5047)
!5050 = !DILocation(line: 283, column: 8, scope: !5047)
!5051 = !DILocation(line: 284, column: 10, scope: !5047)
!5052 = !DILocation(line: 284, column: 17, scope: !5047)
!5053 = !DILocation(line: 284, column: 14, scope: !5047)
!5054 = !DILocation(line: 284, column: 21, scope: !5047)
!5055 = !DILocation(line: 284, column: 25, scope: !5047)
!5056 = !DILocation(line: 284, column: 8, scope: !5047)
!5057 = !DILocation(line: 286, column: 13, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5047, file: !3, line: 286, column: 4)
!5059 = !DILocation(line: 286, column: 11, scope: !5058)
!5060 = !DILocation(line: 286, column: 9, scope: !5058)
!5061 = !DILocation(line: 286, column: 18, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 286, column: 4)
!5063 = !DILocation(line: 286, column: 22, scope: !5062)
!5064 = !DILocation(line: 286, column: 20, scope: !5062)
!5065 = !DILocation(line: 286, column: 4, scope: !5058)
!5066 = !DILocation(line: 287, column: 23, scope: !5062)
!5067 = !DILocation(line: 287, column: 34, scope: !5062)
!5068 = !DILocation(line: 287, column: 37, scope: !5062)
!5069 = !DILocation(line: 287, column: 5, scope: !5062)
!5070 = !DILocation(line: 286, column: 28, scope: !5062)
!5071 = !DILocation(line: 286, column: 4, scope: !5062)
!5072 = distinct !{!5072, !5065, !5073}
!5073 = !DILocation(line: 287, column: 38, scope: !5058)
!5074 = !DILocation(line: 288, column: 3, scope: !5047)
!5075 = !DILocation(line: 289, column: 2, scope: !4981)
!5076 = !DILocation(line: 270, column: 24, scope: !4976)
!5077 = !DILocation(line: 270, column: 2, scope: !4976)
!5078 = distinct !{!5078, !4979, !5079}
!5079 = !DILocation(line: 289, column: 2, scope: !4972)
!5080 = !DILocation(line: 290, column: 1, scope: !4897)
!5081 = distinct !DISubprogram(name: "set_rast_triangle", scope: !3, file: !3, line: 237, type: !5082, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5082 = !DISubroutineType(types: !5083)
!5083 = !{null, !4708, !2164, !2164}
!5084 = !DILocalVariable(name: "bake_rast", arg: 1, scope: !5081, file: !3, line: 237, type: !4708)
!5085 = !DILocation(line: 237, column: 48, scope: !5081)
!5086 = !DILocalVariable(name: "x", arg: 2, scope: !5081, file: !3, line: 237, type: !2164)
!5087 = !DILocation(line: 237, column: 69, scope: !5081)
!5088 = !DILocalVariable(name: "y", arg: 3, scope: !5081, file: !3, line: 237, type: !2164)
!5089 = !DILocation(line: 237, column: 82, scope: !5081)
!5090 = !DILocalVariable(name: "w", scope: !5081, file: !3, line: 239, type: !2164)
!5091 = !DILocation(line: 239, column: 12, scope: !5081)
!5092 = !DILocation(line: 239, column: 16, scope: !5081)
!5093 = !DILocation(line: 239, column: 27, scope: !5081)
!5094 = !DILocalVariable(name: "h", scope: !5081, file: !3, line: 240, type: !2164)
!5095 = !DILocation(line: 240, column: 12, scope: !5081)
!5096 = !DILocation(line: 240, column: 16, scope: !5081)
!5097 = !DILocation(line: 240, column: 27, scope: !5081)
!5098 = !DILocation(line: 242, column: 6, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 242, column: 6)
!5100 = !DILocation(line: 242, column: 8, scope: !5099)
!5101 = !DILocation(line: 242, column: 13, scope: !5099)
!5102 = !DILocation(line: 242, column: 16, scope: !5099)
!5103 = !DILocation(line: 242, column: 20, scope: !5099)
!5104 = !DILocation(line: 242, column: 18, scope: !5099)
!5105 = !DILocation(line: 242, column: 22, scope: !5099)
!5106 = !DILocation(line: 242, column: 25, scope: !5099)
!5107 = !DILocation(line: 242, column: 27, scope: !5099)
!5108 = !DILocation(line: 242, column: 32, scope: !5099)
!5109 = !DILocation(line: 242, column: 35, scope: !5099)
!5110 = !DILocation(line: 242, column: 39, scope: !5099)
!5111 = !DILocation(line: 242, column: 37, scope: !5099)
!5112 = !DILocation(line: 242, column: 6, scope: !5081)
!5113 = !DILocation(line: 243, column: 8, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5115, file: !3, line: 243, column: 7)
!5115 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 242, column: 42)
!5116 = !DILocation(line: 243, column: 19, scope: !5114)
!5117 = !DILocation(line: 243, column: 26, scope: !5114)
!5118 = !DILocation(line: 243, column: 30, scope: !5114)
!5119 = !DILocation(line: 243, column: 28, scope: !5114)
!5120 = !DILocation(line: 243, column: 34, scope: !5114)
!5121 = !DILocation(line: 243, column: 32, scope: !5114)
!5122 = !DILocation(line: 243, column: 7, scope: !5114)
!5123 = !DILocation(line: 243, column: 38, scope: !5114)
!5124 = !DILocation(line: 243, column: 7, scope: !5115)
!5125 = !DILocation(line: 244, column: 4, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 243, column: 44)
!5127 = !DILocation(line: 244, column: 15, scope: !5126)
!5128 = !DILocation(line: 244, column: 22, scope: !5126)
!5129 = !DILocation(line: 244, column: 26, scope: !5126)
!5130 = !DILocation(line: 244, column: 24, scope: !5126)
!5131 = !DILocation(line: 244, column: 30, scope: !5126)
!5132 = !DILocation(line: 244, column: 28, scope: !5126)
!5133 = !DILocation(line: 244, column: 33, scope: !5126)
!5134 = !DILocation(line: 245, column: 16, scope: !5126)
!5135 = !DILocation(line: 245, column: 27, scope: !5126)
!5136 = !DILocation(line: 245, column: 33, scope: !5126)
!5137 = !DILocation(line: 245, column: 36, scope: !5126)
!5138 = !DILocation(line: 245, column: 4, scope: !5126)
!5139 = !DILocation(line: 246, column: 8, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 246, column: 8)
!5141 = !DILocation(line: 246, column: 19, scope: !5140)
!5142 = !DILocation(line: 246, column: 8, scope: !5126)
!5143 = !DILocation(line: 247, column: 6, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 246, column: 30)
!5145 = !DILocation(line: 247, column: 17, scope: !5144)
!5146 = !DILocation(line: 247, column: 27, scope: !5144)
!5147 = !DILocation(line: 248, column: 4, scope: !5144)
!5148 = !DILocation(line: 249, column: 3, scope: !5126)
!5149 = !DILocation(line: 250, column: 2, scope: !5115)
!5150 = !DILocation(line: 251, column: 1, scope: !5081)
!5151 = distinct !DISubprogram(name: "multiresbake_get_normal", scope: !3, file: !3, line: 128, type: !5152, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{null, !2129, !191, !2164, !2164}
!5154 = !DILocalVariable(name: "data", arg: 1, scope: !5151, file: !3, line: 128, type: !2129)
!5155 = !DILocation(line: 128, column: 62, scope: !5151)
!5156 = !DILocalVariable(name: "norm", arg: 2, scope: !5151, file: !3, line: 128, type: !191)
!5157 = !DILocation(line: 128, column: 74, scope: !5151)
!5158 = !DILocalVariable(name: "face_num", arg: 3, scope: !5151, file: !3, line: 128, type: !2164)
!5159 = !DILocation(line: 128, column: 91, scope: !5151)
!5160 = !DILocalVariable(name: "vert_index", arg: 4, scope: !5151, file: !3, line: 128, type: !2164)
!5161 = !DILocation(line: 128, column: 111, scope: !5151)
!5162 = !DILocalVariable(name: "indices", scope: !5151, file: !3, line: 130, type: !5163)
!5163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !296)
!5164 = !DILocation(line: 130, column: 15, scope: !5151)
!5165 = !DILocation(line: 130, column: 27, scope: !5151)
!5166 = !DILocation(line: 130, column: 28, scope: !5151)
!5167 = !DILocation(line: 130, column: 34, scope: !5151)
!5168 = !DILocation(line: 130, column: 40, scope: !5151)
!5169 = !DILocation(line: 130, column: 50, scope: !5151)
!5170 = !DILocation(line: 130, column: 54, scope: !5151)
!5171 = !DILocation(line: 130, column: 60, scope: !5151)
!5172 = !DILocation(line: 130, column: 66, scope: !5151)
!5173 = !DILocation(line: 130, column: 76, scope: !5151)
!5174 = !DILocation(line: 131, column: 28, scope: !5151)
!5175 = !DILocation(line: 131, column: 34, scope: !5151)
!5176 = !DILocation(line: 131, column: 40, scope: !5151)
!5177 = !DILocation(line: 131, column: 50, scope: !5151)
!5178 = !DILocation(line: 131, column: 54, scope: !5151)
!5179 = !DILocation(line: 131, column: 60, scope: !5151)
!5180 = !DILocation(line: 131, column: 66, scope: !5151)
!5181 = !DILocation(line: 131, column: 76, scope: !5151)
!5182 = !DILocalVariable(name: "smoothnormal", scope: !5151, file: !3, line: 132, type: !2164)
!5183 = !DILocation(line: 132, column: 12, scope: !5151)
!5184 = !DILocation(line: 132, column: 28, scope: !5151)
!5185 = !DILocation(line: 132, column: 34, scope: !5151)
!5186 = !DILocation(line: 132, column: 40, scope: !5151)
!5187 = !DILocation(line: 132, column: 50, scope: !5151)
!5188 = !DILocation(line: 132, column: 55, scope: !5151)
!5189 = !DILocation(line: 134, column: 7, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5151, file: !3, line: 134, column: 6)
!5191 = !DILocation(line: 134, column: 6, scope: !5151)
!5192 = !DILocation(line: 135, column: 7, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 135, column: 7)
!5194 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 134, column: 21)
!5195 = !DILocation(line: 135, column: 13, scope: !5193)
!5196 = !DILocation(line: 135, column: 7, scope: !5194)
!5197 = !DILocation(line: 136, column: 15, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 135, column: 34)
!5199 = !DILocation(line: 136, column: 22, scope: !5198)
!5200 = !DILocation(line: 136, column: 28, scope: !5198)
!5201 = !DILocation(line: 136, column: 52, scope: !5198)
!5202 = !DILocation(line: 136, column: 50, scope: !5198)
!5203 = !DILocation(line: 136, column: 4, scope: !5198)
!5204 = !DILocation(line: 137, column: 3, scope: !5198)
!5205 = !DILocalVariable(name: "nor", scope: !5206, file: !3, line: 139, type: !437)
!5206 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 138, column: 8)
!5207 = !DILocation(line: 139, column: 10, scope: !5206)
!5208 = !DILocalVariable(name: "p0", scope: !5206, file: !3, line: 140, type: !622)
!5209 = !DILocation(line: 140, column: 17, scope: !5206)
!5210 = !DILocalVariable(name: "p1", scope: !5206, file: !3, line: 140, type: !622)
!5211 = !DILocation(line: 140, column: 22, scope: !5206)
!5212 = !DILocalVariable(name: "p2", scope: !5206, file: !3, line: 140, type: !622)
!5213 = !DILocation(line: 140, column: 27, scope: !5206)
!5214 = !DILocalVariable(name: "iGetNrVerts", scope: !5206, file: !3, line: 141, type: !2164)
!5215 = !DILocation(line: 141, column: 14, scope: !5206)
!5216 = !DILocation(line: 141, column: 28, scope: !5206)
!5217 = !DILocation(line: 141, column: 34, scope: !5206)
!5218 = !DILocation(line: 141, column: 40, scope: !5206)
!5219 = !DILocation(line: 141, column: 50, scope: !5206)
!5220 = !DILocation(line: 141, column: 53, scope: !5206)
!5221 = !DILocation(line: 143, column: 9, scope: !5206)
!5222 = !DILocation(line: 143, column: 15, scope: !5206)
!5223 = !DILocation(line: 143, column: 21, scope: !5206)
!5224 = !DILocation(line: 143, column: 33, scope: !5206)
!5225 = !DILocation(line: 143, column: 7, scope: !5206)
!5226 = !DILocation(line: 144, column: 9, scope: !5206)
!5227 = !DILocation(line: 144, column: 15, scope: !5206)
!5228 = !DILocation(line: 144, column: 21, scope: !5206)
!5229 = !DILocation(line: 144, column: 33, scope: !5206)
!5230 = !DILocation(line: 144, column: 7, scope: !5206)
!5231 = !DILocation(line: 145, column: 9, scope: !5206)
!5232 = !DILocation(line: 145, column: 15, scope: !5206)
!5233 = !DILocation(line: 145, column: 21, scope: !5206)
!5234 = !DILocation(line: 145, column: 33, scope: !5206)
!5235 = !DILocation(line: 145, column: 7, scope: !5206)
!5236 = !DILocation(line: 147, column: 8, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 147, column: 8)
!5238 = !DILocation(line: 147, column: 20, scope: !5237)
!5239 = !DILocation(line: 147, column: 8, scope: !5206)
!5240 = !DILocalVariable(name: "p3", scope: !5241, file: !3, line: 148, type: !622)
!5241 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 147, column: 26)
!5242 = !DILocation(line: 148, column: 18, scope: !5241)
!5243 = !DILocation(line: 148, column: 23, scope: !5241)
!5244 = !DILocation(line: 148, column: 29, scope: !5241)
!5245 = !DILocation(line: 148, column: 35, scope: !5241)
!5246 = !DILocation(line: 148, column: 47, scope: !5241)
!5247 = !DILocation(line: 149, column: 20, scope: !5241)
!5248 = !DILocation(line: 149, column: 25, scope: !5241)
!5249 = !DILocation(line: 149, column: 29, scope: !5241)
!5250 = !DILocation(line: 149, column: 33, scope: !5241)
!5251 = !DILocation(line: 149, column: 37, scope: !5241)
!5252 = !DILocation(line: 149, column: 5, scope: !5241)
!5253 = !DILocation(line: 150, column: 4, scope: !5241)
!5254 = !DILocation(line: 152, column: 19, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 151, column: 9)
!5256 = !DILocation(line: 152, column: 24, scope: !5255)
!5257 = !DILocation(line: 152, column: 28, scope: !5255)
!5258 = !DILocation(line: 152, column: 32, scope: !5255)
!5259 = !DILocation(line: 152, column: 5, scope: !5255)
!5260 = !DILocation(line: 155, column: 15, scope: !5206)
!5261 = !DILocation(line: 155, column: 21, scope: !5206)
!5262 = !DILocation(line: 155, column: 4, scope: !5206)
!5263 = !DILocation(line: 157, column: 2, scope: !5194)
!5264 = !DILocalVariable(name: "no", scope: !5265, file: !3, line: 159, type: !623)
!5265 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 158, column: 7)
!5266 = !DILocation(line: 159, column: 16, scope: !5265)
!5267 = !DILocation(line: 159, column: 21, scope: !5265)
!5268 = !DILocation(line: 159, column: 27, scope: !5265)
!5269 = !DILocation(line: 159, column: 41, scope: !5265)
!5270 = !DILocation(line: 159, column: 33, scope: !5265)
!5271 = !DILocation(line: 159, column: 54, scope: !5265)
!5272 = !DILocation(line: 161, column: 28, scope: !5265)
!5273 = !DILocation(line: 161, column: 34, scope: !5265)
!5274 = !DILocation(line: 161, column: 3, scope: !5265)
!5275 = !DILocation(line: 162, column: 16, scope: !5265)
!5276 = !DILocation(line: 162, column: 3, scope: !5265)
!5277 = !DILocation(line: 164, column: 1, scope: !5151)
!5278 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !5279, file: !5279, line: 634, type: !5280, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5279 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5280 = !DISubroutineType(types: !5281)
!5281 = !{null, !191, !622, !622}
!5282 = !DILocalVariable(name: "r", arg: 1, scope: !5278, file: !5279, line: 634, type: !191)
!5283 = !DILocation(line: 634, column: 34, scope: !5278)
!5284 = !DILocalVariable(name: "a", arg: 2, scope: !5278, file: !5279, line: 634, type: !622)
!5285 = !DILocation(line: 634, column: 52, scope: !5278)
!5286 = !DILocalVariable(name: "b", arg: 3, scope: !5278, file: !5279, line: 634, type: !622)
!5287 = !DILocation(line: 634, column: 70, scope: !5278)
!5288 = !DILocation(line: 637, column: 9, scope: !5278)
!5289 = !DILocation(line: 637, column: 16, scope: !5278)
!5290 = !DILocation(line: 637, column: 14, scope: !5278)
!5291 = !DILocation(line: 637, column: 23, scope: !5278)
!5292 = !DILocation(line: 637, column: 30, scope: !5278)
!5293 = !DILocation(line: 637, column: 28, scope: !5278)
!5294 = !DILocation(line: 637, column: 21, scope: !5278)
!5295 = !DILocation(line: 637, column: 2, scope: !5278)
!5296 = !DILocation(line: 637, column: 7, scope: !5278)
!5297 = !DILocation(line: 638, column: 9, scope: !5278)
!5298 = !DILocation(line: 638, column: 16, scope: !5278)
!5299 = !DILocation(line: 638, column: 14, scope: !5278)
!5300 = !DILocation(line: 638, column: 23, scope: !5278)
!5301 = !DILocation(line: 638, column: 30, scope: !5278)
!5302 = !DILocation(line: 638, column: 28, scope: !5278)
!5303 = !DILocation(line: 638, column: 21, scope: !5278)
!5304 = !DILocation(line: 638, column: 2, scope: !5278)
!5305 = !DILocation(line: 638, column: 7, scope: !5278)
!5306 = !DILocation(line: 639, column: 9, scope: !5278)
!5307 = !DILocation(line: 639, column: 16, scope: !5278)
!5308 = !DILocation(line: 639, column: 14, scope: !5278)
!5309 = !DILocation(line: 639, column: 23, scope: !5278)
!5310 = !DILocation(line: 639, column: 30, scope: !5278)
!5311 = !DILocation(line: 639, column: 28, scope: !5278)
!5312 = !DILocation(line: 639, column: 21, scope: !5278)
!5313 = !DILocation(line: 639, column: 2, scope: !5278)
!5314 = !DILocation(line: 639, column: 7, scope: !5278)
!5315 = !DILocation(line: 640, column: 1, scope: !5278)
!5316 = distinct !DISubprogram(name: "mul_v3_fl", scope: !5279, file: !5279, line: 392, type: !5317, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5317 = !DISubroutineType(types: !5318)
!5318 = !{null, !191, !192}
!5319 = !DILocalVariable(name: "r", arg: 1, scope: !5316, file: !5279, line: 392, type: !191)
!5320 = !DILocation(line: 392, column: 30, scope: !5316)
!5321 = !DILocalVariable(name: "f", arg: 2, scope: !5316, file: !5279, line: 392, type: !192)
!5322 = !DILocation(line: 392, column: 42, scope: !5316)
!5323 = !DILocation(line: 394, column: 10, scope: !5316)
!5324 = !DILocation(line: 394, column: 2, scope: !5316)
!5325 = !DILocation(line: 394, column: 7, scope: !5316)
!5326 = !DILocation(line: 395, column: 10, scope: !5316)
!5327 = !DILocation(line: 395, column: 2, scope: !5316)
!5328 = !DILocation(line: 395, column: 7, scope: !5316)
!5329 = !DILocation(line: 396, column: 10, scope: !5316)
!5330 = !DILocation(line: 396, column: 2, scope: !5316)
!5331 = !DILocation(line: 396, column: 7, scope: !5316)
!5332 = !DILocation(line: 397, column: 1, scope: !5316)
!5333 = distinct !DISubprogram(name: "copy_v3_v3", scope: !5279, file: !5279, line: 64, type: !5334, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5334 = !DISubroutineType(types: !5335)
!5335 = !{null, !191, !622}
!5336 = !DILocalVariable(name: "r", arg: 1, scope: !5333, file: !5279, line: 64, type: !191)
!5337 = !DILocation(line: 64, column: 31, scope: !5333)
!5338 = !DILocalVariable(name: "a", arg: 2, scope: !5333, file: !5279, line: 64, type: !622)
!5339 = !DILocation(line: 64, column: 49, scope: !5333)
!5340 = !DILocation(line: 66, column: 9, scope: !5333)
!5341 = !DILocation(line: 66, column: 2, scope: !5333)
!5342 = !DILocation(line: 66, column: 7, scope: !5333)
!5343 = !DILocation(line: 67, column: 9, scope: !5333)
!5344 = !DILocation(line: 67, column: 2, scope: !5333)
!5345 = !DILocation(line: 67, column: 7, scope: !5333)
!5346 = !DILocation(line: 68, column: 9, scope: !5333)
!5347 = !DILocation(line: 68, column: 2, scope: !5333)
!5348 = !DILocation(line: 68, column: 7, scope: !5333)
!5349 = !DILocation(line: 69, column: 1, scope: !5333)
!5350 = distinct !DISubprogram(name: "normal_short_to_float_v3", scope: !5279, file: !5279, line: 835, type: !5351, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5351 = !DISubroutineType(types: !5352)
!5352 = !{null, !191, !623}
!5353 = !DILocalVariable(name: "out", arg: 1, scope: !5350, file: !5279, line: 835, type: !191)
!5354 = !DILocation(line: 835, column: 45, scope: !5350)
!5355 = !DILocalVariable(name: "in", arg: 2, scope: !5350, file: !5279, line: 835, type: !623)
!5356 = !DILocation(line: 835, column: 65, scope: !5350)
!5357 = !DILocation(line: 837, column: 11, scope: !5350)
!5358 = !DILocation(line: 837, column: 17, scope: !5350)
!5359 = !DILocation(line: 837, column: 2, scope: !5350)
!5360 = !DILocation(line: 837, column: 9, scope: !5350)
!5361 = !DILocation(line: 838, column: 11, scope: !5350)
!5362 = !DILocation(line: 838, column: 17, scope: !5350)
!5363 = !DILocation(line: 838, column: 2, scope: !5350)
!5364 = !DILocation(line: 838, column: 9, scope: !5350)
!5365 = !DILocation(line: 839, column: 11, scope: !5350)
!5366 = !DILocation(line: 839, column: 17, scope: !5350)
!5367 = !DILocation(line: 839, column: 2, scope: !5350)
!5368 = !DILocation(line: 839, column: 9, scope: !5350)
!5369 = !DILocation(line: 840, column: 1, scope: !5350)
!5370 = distinct !DISubprogram(name: "normalize_v3", scope: !5279, file: !5279, line: 830, type: !5371, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5371 = !DISubroutineType(types: !5372)
!5372 = !{!192, !191}
!5373 = !DILocalVariable(name: "n", arg: 1, scope: !5370, file: !5279, line: 830, type: !191)
!5374 = !DILocation(line: 830, column: 34, scope: !5370)
!5375 = !DILocation(line: 832, column: 25, scope: !5370)
!5376 = !DILocation(line: 832, column: 28, scope: !5370)
!5377 = !DILocation(line: 832, column: 9, scope: !5370)
!5378 = !DILocation(line: 832, column: 2, scope: !5370)
!5379 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !5279, file: !5279, line: 788, type: !5380, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5380 = !DISubroutineType(types: !5381)
!5381 = !{!192, !191, !622}
!5382 = !DILocalVariable(name: "r", arg: 1, scope: !5379, file: !5279, line: 788, type: !191)
!5383 = !DILocation(line: 788, column: 37, scope: !5379)
!5384 = !DILocalVariable(name: "a", arg: 2, scope: !5379, file: !5279, line: 788, type: !622)
!5385 = !DILocation(line: 788, column: 55, scope: !5379)
!5386 = !DILocalVariable(name: "d", scope: !5379, file: !5279, line: 790, type: !192)
!5387 = !DILocation(line: 790, column: 8, scope: !5379)
!5388 = !DILocation(line: 790, column: 21, scope: !5379)
!5389 = !DILocation(line: 790, column: 24, scope: !5379)
!5390 = !DILocation(line: 790, column: 12, scope: !5379)
!5391 = !DILocation(line: 794, column: 6, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5379, file: !5279, line: 794, column: 6)
!5393 = !DILocation(line: 794, column: 8, scope: !5392)
!5394 = !DILocation(line: 794, column: 6, scope: !5379)
!5395 = !DILocation(line: 795, column: 13, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5392, file: !5279, line: 794, column: 20)
!5397 = !DILocation(line: 795, column: 7, scope: !5396)
!5398 = !DILocation(line: 795, column: 5, scope: !5396)
!5399 = !DILocation(line: 796, column: 15, scope: !5396)
!5400 = !DILocation(line: 796, column: 18, scope: !5396)
!5401 = !DILocation(line: 796, column: 28, scope: !5396)
!5402 = !DILocation(line: 796, column: 26, scope: !5396)
!5403 = !DILocation(line: 796, column: 3, scope: !5396)
!5404 = !DILocation(line: 797, column: 2, scope: !5396)
!5405 = !DILocation(line: 799, column: 11, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5392, file: !5279, line: 798, column: 7)
!5407 = !DILocation(line: 799, column: 3, scope: !5406)
!5408 = !DILocation(line: 800, column: 5, scope: !5406)
!5409 = !DILocation(line: 803, column: 9, scope: !5379)
!5410 = !DILocation(line: 803, column: 2, scope: !5379)
!5411 = distinct !DISubprogram(name: "dot_v3v3", scope: !5279, file: !5279, line: 619, type: !5412, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5412 = !DISubroutineType(types: !5413)
!5413 = !{!192, !622, !622}
!5414 = !DILocalVariable(name: "a", arg: 1, scope: !5411, file: !5279, line: 619, type: !622)
!5415 = !DILocation(line: 619, column: 36, scope: !5411)
!5416 = !DILocalVariable(name: "b", arg: 2, scope: !5411, file: !5279, line: 619, type: !622)
!5417 = !DILocation(line: 619, column: 54, scope: !5411)
!5418 = !DILocation(line: 621, column: 9, scope: !5411)
!5419 = !DILocation(line: 621, column: 16, scope: !5411)
!5420 = !DILocation(line: 621, column: 14, scope: !5411)
!5421 = !DILocation(line: 621, column: 23, scope: !5411)
!5422 = !DILocation(line: 621, column: 30, scope: !5411)
!5423 = !DILocation(line: 621, column: 28, scope: !5411)
!5424 = !DILocation(line: 621, column: 21, scope: !5411)
!5425 = !DILocation(line: 621, column: 37, scope: !5411)
!5426 = !DILocation(line: 621, column: 44, scope: !5411)
!5427 = !DILocation(line: 621, column: 42, scope: !5411)
!5428 = !DILocation(line: 621, column: 35, scope: !5411)
!5429 = !DILocation(line: 621, column: 2, scope: !5411)
!5430 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !5279, file: !5279, line: 399, type: !5431, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5431 = !DISubroutineType(types: !5432)
!5432 = !{null, !191, !622, !192}
!5433 = !DILocalVariable(name: "r", arg: 1, scope: !5430, file: !5279, line: 399, type: !191)
!5434 = !DILocation(line: 399, column: 32, scope: !5430)
!5435 = !DILocalVariable(name: "a", arg: 2, scope: !5430, file: !5279, line: 399, type: !622)
!5436 = !DILocation(line: 399, column: 50, scope: !5430)
!5437 = !DILocalVariable(name: "f", arg: 3, scope: !5430, file: !5279, line: 399, type: !192)
!5438 = !DILocation(line: 399, column: 62, scope: !5430)
!5439 = !DILocation(line: 401, column: 9, scope: !5430)
!5440 = !DILocation(line: 401, column: 16, scope: !5430)
!5441 = !DILocation(line: 401, column: 14, scope: !5430)
!5442 = !DILocation(line: 401, column: 2, scope: !5430)
!5443 = !DILocation(line: 401, column: 7, scope: !5430)
!5444 = !DILocation(line: 402, column: 9, scope: !5430)
!5445 = !DILocation(line: 402, column: 16, scope: !5430)
!5446 = !DILocation(line: 402, column: 14, scope: !5430)
!5447 = !DILocation(line: 402, column: 2, scope: !5430)
!5448 = !DILocation(line: 402, column: 7, scope: !5430)
!5449 = !DILocation(line: 403, column: 9, scope: !5430)
!5450 = !DILocation(line: 403, column: 16, scope: !5430)
!5451 = !DILocation(line: 403, column: 14, scope: !5430)
!5452 = !DILocation(line: 403, column: 2, scope: !5430)
!5453 = !DILocation(line: 403, column: 7, scope: !5430)
!5454 = !DILocation(line: 404, column: 1, scope: !5430)
!5455 = distinct !DISubprogram(name: "zero_v3", scope: !5279, file: !5279, line: 43, type: !5456, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5456 = !DISubroutineType(types: !5457)
!5457 = !{null, !191}
!5458 = !DILocalVariable(name: "r", arg: 1, scope: !5455, file: !5279, line: 43, type: !191)
!5459 = !DILocation(line: 43, column: 28, scope: !5455)
!5460 = !DILocation(line: 45, column: 2, scope: !5455)
!5461 = !DILocation(line: 45, column: 7, scope: !5455)
!5462 = !DILocation(line: 46, column: 2, scope: !5455)
!5463 = !DILocation(line: 46, column: 7, scope: !5455)
!5464 = !DILocation(line: 47, column: 2, scope: !5455)
!5465 = !DILocation(line: 47, column: 7, scope: !5455)
!5466 = !DILocation(line: 48, column: 1, scope: !5455)
!5467 = distinct !DISubprogram(name: "get_ccgdm_data", scope: !3, file: !3, line: 604, type: !5468, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5468 = !DISubroutineType(types: !5469)
!5469 = !{null, !344, !344, !2186, !2186, !2164, !2164, !419, !419, !191, !191}
!5470 = !DILocalVariable(name: "lodm", arg: 1, scope: !5467, file: !3, line: 604, type: !344)
!5471 = !DILocation(line: 604, column: 41, scope: !5467)
!5472 = !DILocalVariable(name: "hidm", arg: 2, scope: !5467, file: !3, line: 604, type: !344)
!5473 = !DILocation(line: 604, column: 60, scope: !5467)
!5474 = !DILocalVariable(name: "index_mf_to_mpoly", arg: 3, scope: !5467, file: !3, line: 605, type: !2186)
!5475 = !DILocation(line: 605, column: 39, scope: !5467)
!5476 = !DILocalVariable(name: "index_mp_to_orig", arg: 4, scope: !5467, file: !3, line: 605, type: !2186)
!5477 = !DILocation(line: 605, column: 69, scope: !5467)
!5478 = !DILocalVariable(name: "lvl", arg: 5, scope: !5467, file: !3, line: 606, type: !2164)
!5479 = !DILocation(line: 606, column: 38, scope: !5467)
!5480 = !DILocalVariable(name: "face_index", arg: 6, scope: !5467, file: !3, line: 606, type: !2164)
!5481 = !DILocation(line: 606, column: 53, scope: !5467)
!5482 = !DILocalVariable(name: "u", arg: 7, scope: !5467, file: !3, line: 606, type: !419)
!5483 = !DILocation(line: 606, column: 77, scope: !5467)
!5484 = !DILocalVariable(name: "v", arg: 8, scope: !5467, file: !3, line: 606, type: !419)
!5485 = !DILocation(line: 606, column: 92, scope: !5467)
!5486 = !DILocalVariable(name: "co", arg: 9, scope: !5467, file: !3, line: 606, type: !191)
!5487 = !DILocation(line: 606, column: 101, scope: !5467)
!5488 = !DILocalVariable(name: "n", arg: 10, scope: !5467, file: !3, line: 606, type: !191)
!5489 = !DILocation(line: 606, column: 114, scope: !5467)
!5490 = !DILocalVariable(name: "mface", scope: !5467, file: !3, line: 608, type: !2139)
!5491 = !DILocation(line: 608, column: 8, scope: !5467)
!5492 = !DILocalVariable(name: "grid_data", scope: !5467, file: !3, line: 609, type: !4300)
!5493 = !DILocation(line: 609, column: 12, scope: !5467)
!5494 = !DILocalVariable(name: "key", scope: !5467, file: !3, line: 610, type: !4303)
!5495 = !DILocation(line: 610, column: 9, scope: !5467)
!5496 = !DILocalVariable(name: "crn_x", scope: !5467, file: !3, line: 611, type: !192)
!5497 = !DILocation(line: 611, column: 8, scope: !5467)
!5498 = !DILocalVariable(name: "crn_y", scope: !5467, file: !3, line: 611, type: !192)
!5499 = !DILocation(line: 611, column: 15, scope: !5467)
!5500 = !DILocalVariable(name: "grid_size", scope: !5467, file: !3, line: 612, type: !132)
!5501 = !DILocation(line: 612, column: 6, scope: !5467)
!5502 = !DILocalVariable(name: "S", scope: !5467, file: !3, line: 612, type: !132)
!5503 = !DILocation(line: 612, column: 17, scope: !5467)
!5504 = !DILocalVariable(name: "face_side", scope: !5467, file: !3, line: 612, type: !132)
!5505 = !DILocation(line: 612, column: 20, scope: !5467)
!5506 = !DILocalVariable(name: "grid_offset", scope: !5467, file: !3, line: 613, type: !189)
!5507 = !DILocation(line: 613, column: 7, scope: !5467)
!5508 = !DILocalVariable(name: "g_index", scope: !5467, file: !3, line: 613, type: !132)
!5509 = !DILocation(line: 613, column: 20, scope: !5467)
!5510 = !DILocation(line: 615, column: 2, scope: !5467)
!5511 = !DILocation(line: 615, column: 8, scope: !5467)
!5512 = !DILocation(line: 615, column: 20, scope: !5467)
!5513 = !DILocation(line: 615, column: 26, scope: !5467)
!5514 = !DILocation(line: 617, column: 14, scope: !5467)
!5515 = !DILocation(line: 617, column: 20, scope: !5467)
!5516 = !DILocation(line: 617, column: 32, scope: !5467)
!5517 = !DILocation(line: 617, column: 12, scope: !5467)
!5518 = !DILocation(line: 618, column: 14, scope: !5467)
!5519 = !DILocation(line: 618, column: 20, scope: !5467)
!5520 = !DILocation(line: 618, column: 32, scope: !5467)
!5521 = !DILocation(line: 618, column: 12, scope: !5467)
!5522 = !DILocation(line: 619, column: 16, scope: !5467)
!5523 = !DILocation(line: 619, column: 22, scope: !5467)
!5524 = !DILocation(line: 619, column: 36, scope: !5467)
!5525 = !DILocation(line: 619, column: 14, scope: !5467)
!5526 = !DILocation(line: 620, column: 2, scope: !5467)
!5527 = !DILocation(line: 620, column: 8, scope: !5467)
!5528 = !DILocation(line: 620, column: 19, scope: !5467)
!5529 = !DILocation(line: 622, column: 15, scope: !5467)
!5530 = !DILocation(line: 622, column: 25, scope: !5467)
!5531 = !DILocation(line: 622, column: 31, scope: !5467)
!5532 = !DILocation(line: 622, column: 12, scope: !5467)
!5533 = !DILocation(line: 624, column: 6, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 624, column: 6)
!5535 = !DILocation(line: 624, column: 10, scope: !5534)
!5536 = !DILocation(line: 624, column: 6, scope: !5467)
!5537 = !DILocation(line: 625, column: 13, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 624, column: 16)
!5539 = !DILocation(line: 625, column: 25, scope: !5538)
!5540 = !DILocation(line: 625, column: 11, scope: !5538)
!5541 = !DILocation(line: 626, column: 35, scope: !5538)
!5542 = !DILocation(line: 626, column: 29, scope: !5538)
!5543 = !DILocation(line: 626, column: 47, scope: !5538)
!5544 = !DILocation(line: 626, column: 58, scope: !5538)
!5545 = !DILocation(line: 626, column: 63, scope: !5538)
!5546 = !DILocation(line: 626, column: 73, scope: !5538)
!5547 = !DILocation(line: 626, column: 62, scope: !5538)
!5548 = !DILocation(line: 626, column: 60, scope: !5538)
!5549 = !DILocation(line: 626, column: 79, scope: !5538)
!5550 = !DILocation(line: 626, column: 84, scope: !5538)
!5551 = !DILocation(line: 626, column: 94, scope: !5538)
!5552 = !DILocation(line: 626, column: 83, scope: !5538)
!5553 = !DILocation(line: 626, column: 81, scope: !5538)
!5554 = !DILocation(line: 626, column: 7, scope: !5538)
!5555 = !DILocation(line: 626, column: 5, scope: !5538)
!5556 = !DILocation(line: 627, column: 2, scope: !5538)
!5557 = !DILocalVariable(name: "side", scope: !5558, file: !3, line: 629, type: !132)
!5558 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 628, column: 7)
!5559 = !DILocation(line: 629, column: 7, scope: !5558)
!5560 = !DILocation(line: 629, column: 21, scope: !5558)
!5561 = !DILocation(line: 629, column: 25, scope: !5558)
!5562 = !DILocation(line: 629, column: 17, scope: !5558)
!5563 = !DILocation(line: 629, column: 31, scope: !5558)
!5564 = !DILocalVariable(name: "grid_index", scope: !5558, file: !3, line: 630, type: !132)
!5565 = !DILocation(line: 630, column: 7, scope: !5558)
!5566 = !DILocation(line: 630, column: 45, scope: !5558)
!5567 = !DILocation(line: 630, column: 64, scope: !5558)
!5568 = !DILocation(line: 630, column: 82, scope: !5558)
!5569 = !DILocation(line: 630, column: 20, scope: !5558)
!5570 = !DILocalVariable(name: "loc_offs", scope: !5558, file: !3, line: 631, type: !132)
!5571 = !DILocation(line: 631, column: 7, scope: !5558)
!5572 = !DILocation(line: 631, column: 18, scope: !5558)
!5573 = !DILocation(line: 631, column: 42, scope: !5558)
!5574 = !DILocation(line: 631, column: 40, scope: !5558)
!5575 = !DILocation(line: 631, column: 34, scope: !5558)
!5576 = !DILocation(line: 631, column: 29, scope: !5558)
!5577 = !DILocalVariable(name: "cell_index", scope: !5558, file: !3, line: 632, type: !132)
!5578 = !DILocation(line: 632, column: 7, scope: !5558)
!5579 = !DILocation(line: 632, column: 20, scope: !5558)
!5580 = !DILocation(line: 632, column: 33, scope: !5558)
!5581 = !DILocation(line: 632, column: 38, scope: !5558)
!5582 = !DILocation(line: 632, column: 46, scope: !5558)
!5583 = !DILocation(line: 632, column: 51, scope: !5558)
!5584 = !DILocation(line: 632, column: 43, scope: !5558)
!5585 = !DILocation(line: 632, column: 29, scope: !5558)
!5586 = !DILocalVariable(name: "cell_side", scope: !5558, file: !3, line: 633, type: !132)
!5587 = !DILocation(line: 633, column: 7, scope: !5558)
!5588 = !DILocation(line: 633, column: 20, scope: !5558)
!5589 = !DILocation(line: 633, column: 30, scope: !5558)
!5590 = !DILocation(line: 633, column: 38, scope: !5558)
!5591 = !DILocation(line: 633, column: 43, scope: !5558)
!5592 = !DILocation(line: 633, column: 35, scope: !5558)
!5593 = !DILocalVariable(name: "row", scope: !5558, file: !3, line: 634, type: !132)
!5594 = !DILocation(line: 634, column: 7, scope: !5558)
!5595 = !DILocation(line: 634, column: 13, scope: !5558)
!5596 = !DILocation(line: 634, column: 27, scope: !5558)
!5597 = !DILocation(line: 634, column: 32, scope: !5558)
!5598 = !DILocation(line: 634, column: 24, scope: !5558)
!5599 = !DILocalVariable(name: "col", scope: !5558, file: !3, line: 635, type: !132)
!5600 = !DILocation(line: 635, column: 7, scope: !5558)
!5601 = !DILocation(line: 635, column: 13, scope: !5558)
!5602 = !DILocation(line: 635, column: 27, scope: !5558)
!5603 = !DILocation(line: 635, column: 32, scope: !5558)
!5604 = !DILocation(line: 635, column: 24, scope: !5558)
!5605 = !DILocation(line: 637, column: 7, scope: !5558)
!5606 = !DILocation(line: 637, column: 32, scope: !5558)
!5607 = !DILocation(line: 637, column: 36, scope: !5558)
!5608 = !DILocation(line: 637, column: 29, scope: !5558)
!5609 = !DILocation(line: 637, column: 23, scope: !5558)
!5610 = !DILocation(line: 637, column: 18, scope: !5558)
!5611 = !DILocation(line: 637, column: 45, scope: !5558)
!5612 = !DILocation(line: 637, column: 57, scope: !5558)
!5613 = !DILocation(line: 637, column: 43, scope: !5558)
!5614 = !DILocation(line: 637, column: 5, scope: !5558)
!5615 = !DILocation(line: 638, column: 13, scope: !5558)
!5616 = !DILocation(line: 638, column: 25, scope: !5558)
!5617 = !DILocation(line: 638, column: 11, scope: !5558)
!5618 = !DILocation(line: 640, column: 12, scope: !5558)
!5619 = !DILocation(line: 640, column: 18, scope: !5558)
!5620 = !DILocation(line: 640, column: 16, scope: !5558)
!5621 = !DILocation(line: 640, column: 11, scope: !5558)
!5622 = !DILocation(line: 640, column: 31, scope: !5558)
!5623 = !DILocation(line: 640, column: 35, scope: !5558)
!5624 = !DILocation(line: 640, column: 33, scope: !5558)
!5625 = !DILocation(line: 640, column: 29, scope: !5558)
!5626 = !DILocation(line: 640, column: 9, scope: !5558)
!5627 = !DILocation(line: 641, column: 12, scope: !5558)
!5628 = !DILocation(line: 641, column: 18, scope: !5558)
!5629 = !DILocation(line: 641, column: 16, scope: !5558)
!5630 = !DILocation(line: 641, column: 11, scope: !5558)
!5631 = !DILocation(line: 641, column: 31, scope: !5558)
!5632 = !DILocation(line: 641, column: 35, scope: !5558)
!5633 = !DILocation(line: 641, column: 33, scope: !5558)
!5634 = !DILocation(line: 641, column: 29, scope: !5558)
!5635 = !DILocation(line: 641, column: 9, scope: !5558)
!5636 = !DILocation(line: 644, column: 2, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 644, column: 2)
!5638 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 644, column: 2)
!5639 = !DILocation(line: 644, column: 2, scope: !5638)
!5640 = !DILocation(line: 644, column: 2, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 644, column: 2)
!5642 = !DILocation(line: 645, column: 2, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5644, file: !3, line: 645, column: 2)
!5644 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 645, column: 2)
!5645 = !DILocation(line: 645, column: 2, scope: !5644)
!5646 = !DILocation(line: 645, column: 2, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 645, column: 2)
!5648 = !DILocation(line: 647, column: 6, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 647, column: 6)
!5650 = !DILocation(line: 647, column: 8, scope: !5649)
!5651 = !DILocation(line: 647, column: 6, scope: !5467)
!5652 = !DILocation(line: 648, column: 30, scope: !5649)
!5653 = !DILocation(line: 648, column: 40, scope: !5649)
!5654 = !DILocation(line: 648, column: 50, scope: !5649)
!5655 = !DILocation(line: 648, column: 48, scope: !5649)
!5656 = !DILocation(line: 648, column: 54, scope: !5649)
!5657 = !DILocation(line: 648, column: 61, scope: !5649)
!5658 = !DILocation(line: 648, column: 71, scope: !5649)
!5659 = !DILocation(line: 648, column: 3, scope: !5649)
!5660 = !DILocation(line: 650, column: 6, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 650, column: 6)
!5662 = !DILocation(line: 650, column: 9, scope: !5661)
!5663 = !DILocation(line: 650, column: 6, scope: !5467)
!5664 = !DILocation(line: 651, column: 30, scope: !5661)
!5665 = !DILocation(line: 651, column: 40, scope: !5661)
!5666 = !DILocation(line: 651, column: 50, scope: !5661)
!5667 = !DILocation(line: 651, column: 48, scope: !5661)
!5668 = !DILocation(line: 651, column: 54, scope: !5661)
!5669 = !DILocation(line: 651, column: 61, scope: !5661)
!5670 = !DILocation(line: 651, column: 71, scope: !5661)
!5671 = !DILocation(line: 651, column: 3, scope: !5661)
!5672 = !DILocation(line: 652, column: 1, scope: !5467)
!5673 = distinct !DISubprogram(name: "add_v3_v3", scope: !5279, file: !5279, line: 302, type: !5334, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5674 = !DILocalVariable(name: "r", arg: 1, scope: !5673, file: !5279, line: 302, type: !191)
!5675 = !DILocation(line: 302, column: 30, scope: !5673)
!5676 = !DILocalVariable(name: "a", arg: 2, scope: !5673, file: !5279, line: 302, type: !622)
!5677 = !DILocation(line: 302, column: 48, scope: !5673)
!5678 = !DILocation(line: 304, column: 10, scope: !5673)
!5679 = !DILocation(line: 304, column: 2, scope: !5673)
!5680 = !DILocation(line: 304, column: 7, scope: !5673)
!5681 = !DILocation(line: 305, column: 10, scope: !5673)
!5682 = !DILocation(line: 305, column: 2, scope: !5673)
!5683 = !DILocation(line: 305, column: 7, scope: !5673)
!5684 = !DILocation(line: 306, column: 10, scope: !5673)
!5685 = !DILocation(line: 306, column: 2, scope: !5673)
!5686 = !DILocation(line: 306, column: 7, scope: !5673)
!5687 = !DILocation(line: 307, column: 1, scope: !5673)
!5688 = distinct !DISubprogram(name: "DM_origindex_mface_mpoly", scope: !6, file: !6, line: 767, type: !5689, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{!132, !2186, !2186, !2164}
!5691 = !DILocalVariable(name: "index_mf_to_mpoly", arg: 1, scope: !5688, file: !6, line: 767, type: !2186)
!5692 = !DILocation(line: 767, column: 52, scope: !5688)
!5693 = !DILocalVariable(name: "index_mp_to_orig", arg: 2, scope: !5688, file: !6, line: 767, type: !2186)
!5694 = !DILocation(line: 767, column: 82, scope: !5688)
!5695 = !DILocalVariable(name: "i", arg: 3, scope: !5688, file: !6, line: 767, type: !2164)
!5696 = !DILocation(line: 767, column: 110, scope: !5688)
!5697 = !DILocalVariable(name: "j", scope: !5688, file: !6, line: 769, type: !2164)
!5698 = !DILocation(line: 769, column: 12, scope: !5688)
!5699 = !DILocation(line: 769, column: 16, scope: !5688)
!5700 = !DILocation(line: 769, column: 34, scope: !5688)
!5701 = !DILocation(line: 770, column: 10, scope: !5688)
!5702 = !DILocation(line: 770, column: 12, scope: !5688)
!5703 = !DILocation(line: 770, column: 9, scope: !5688)
!5704 = !DILocation(line: 770, column: 34, scope: !5688)
!5705 = !DILocation(line: 770, column: 53, scope: !5688)
!5706 = !DILocation(line: 770, column: 70, scope: !5688)
!5707 = !DILocation(line: 770, column: 75, scope: !5688)
!5708 = !DILocation(line: 770, column: 2, scope: !5688)
!5709 = distinct !DISubprogram(name: "interp_bilinear_grid", scope: !3, file: !3, line: 573, type: !5710, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5710 = !DISubroutineType(types: !5711)
!5711 = !{null, !5712, !2188, !192, !192, !132, !191}
!5712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4303, size: 64)
!5713 = !DILocalVariable(name: "key", arg: 1, scope: !5709, file: !3, line: 573, type: !5712)
!5714 = !DILocation(line: 573, column: 42, scope: !5709)
!5715 = !DILocalVariable(name: "grid", arg: 2, scope: !5709, file: !3, line: 573, type: !2188)
!5716 = !DILocation(line: 573, column: 56, scope: !5709)
!5717 = !DILocalVariable(name: "crn_x", arg: 3, scope: !5709, file: !3, line: 573, type: !192)
!5718 = !DILocation(line: 573, column: 68, scope: !5709)
!5719 = !DILocalVariable(name: "crn_y", arg: 4, scope: !5709, file: !3, line: 573, type: !192)
!5720 = !DILocation(line: 573, column: 81, scope: !5709)
!5721 = !DILocalVariable(name: "mode", arg: 5, scope: !5709, file: !3, line: 573, type: !132)
!5722 = !DILocation(line: 573, column: 92, scope: !5709)
!5723 = !DILocalVariable(name: "res", arg: 6, scope: !5709, file: !3, line: 573, type: !191)
!5724 = !DILocation(line: 573, column: 104, scope: !5709)
!5725 = !DILocalVariable(name: "x0", scope: !5709, file: !3, line: 575, type: !132)
!5726 = !DILocation(line: 575, column: 6, scope: !5709)
!5727 = !DILocalVariable(name: "x1", scope: !5709, file: !3, line: 575, type: !132)
!5728 = !DILocation(line: 575, column: 10, scope: !5709)
!5729 = !DILocalVariable(name: "y0", scope: !5709, file: !3, line: 575, type: !132)
!5730 = !DILocation(line: 575, column: 14, scope: !5709)
!5731 = !DILocalVariable(name: "y1", scope: !5709, file: !3, line: 575, type: !132)
!5732 = !DILocation(line: 575, column: 18, scope: !5709)
!5733 = !DILocalVariable(name: "u", scope: !5709, file: !3, line: 576, type: !192)
!5734 = !DILocation(line: 576, column: 8, scope: !5709)
!5735 = !DILocalVariable(name: "v", scope: !5709, file: !3, line: 576, type: !192)
!5736 = !DILocation(line: 576, column: 11, scope: !5709)
!5737 = !DILocalVariable(name: "data", scope: !5709, file: !3, line: 577, type: !5738)
!5738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 384, elements: !5739)
!5739 = !{!297, !439}
!5740 = !DILocation(line: 577, column: 8, scope: !5709)
!5741 = !DILocation(line: 579, column: 13, scope: !5709)
!5742 = !DILocation(line: 579, column: 7, scope: !5709)
!5743 = !DILocation(line: 579, column: 5, scope: !5709)
!5744 = !DILocation(line: 580, column: 7, scope: !5709)
!5745 = !DILocation(line: 580, column: 14, scope: !5709)
!5746 = !DILocation(line: 580, column: 19, scope: !5709)
!5747 = !DILocation(line: 580, column: 29, scope: !5709)
!5748 = !DILocation(line: 580, column: 10, scope: !5709)
!5749 = !DILocation(line: 580, column: 37, scope: !5709)
!5750 = !DILocation(line: 580, column: 42, scope: !5709)
!5751 = !DILocation(line: 580, column: 52, scope: !5709)
!5752 = !DILocation(line: 580, column: 60, scope: !5709)
!5753 = !DILocation(line: 580, column: 63, scope: !5709)
!5754 = !DILocation(line: 580, column: 5, scope: !5709)
!5755 = !DILocation(line: 582, column: 13, scope: !5709)
!5756 = !DILocation(line: 582, column: 7, scope: !5709)
!5757 = !DILocation(line: 582, column: 5, scope: !5709)
!5758 = !DILocation(line: 583, column: 7, scope: !5709)
!5759 = !DILocation(line: 583, column: 14, scope: !5709)
!5760 = !DILocation(line: 583, column: 19, scope: !5709)
!5761 = !DILocation(line: 583, column: 29, scope: !5709)
!5762 = !DILocation(line: 583, column: 10, scope: !5709)
!5763 = !DILocation(line: 583, column: 37, scope: !5709)
!5764 = !DILocation(line: 583, column: 42, scope: !5709)
!5765 = !DILocation(line: 583, column: 52, scope: !5709)
!5766 = !DILocation(line: 583, column: 60, scope: !5709)
!5767 = !DILocation(line: 583, column: 63, scope: !5709)
!5768 = !DILocation(line: 583, column: 5, scope: !5709)
!5769 = !DILocation(line: 585, column: 6, scope: !5709)
!5770 = !DILocation(line: 585, column: 14, scope: !5709)
!5771 = !DILocation(line: 585, column: 12, scope: !5709)
!5772 = !DILocation(line: 585, column: 4, scope: !5709)
!5773 = !DILocation(line: 586, column: 6, scope: !5709)
!5774 = !DILocation(line: 586, column: 14, scope: !5709)
!5775 = !DILocation(line: 586, column: 12, scope: !5709)
!5776 = !DILocation(line: 586, column: 4, scope: !5709)
!5777 = !DILocation(line: 588, column: 6, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 588, column: 6)
!5779 = !DILocation(line: 588, column: 11, scope: !5778)
!5780 = !DILocation(line: 588, column: 6, scope: !5709)
!5781 = !DILocation(line: 589, column: 14, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 588, column: 17)
!5783 = !DILocation(line: 589, column: 40, scope: !5782)
!5784 = !DILocation(line: 589, column: 45, scope: !5782)
!5785 = !DILocation(line: 589, column: 51, scope: !5782)
!5786 = !DILocation(line: 589, column: 55, scope: !5782)
!5787 = !DILocation(line: 589, column: 23, scope: !5782)
!5788 = !DILocation(line: 589, column: 3, scope: !5782)
!5789 = !DILocation(line: 590, column: 14, scope: !5782)
!5790 = !DILocation(line: 590, column: 40, scope: !5782)
!5791 = !DILocation(line: 590, column: 45, scope: !5782)
!5792 = !DILocation(line: 590, column: 51, scope: !5782)
!5793 = !DILocation(line: 590, column: 55, scope: !5782)
!5794 = !DILocation(line: 590, column: 23, scope: !5782)
!5795 = !DILocation(line: 590, column: 3, scope: !5782)
!5796 = !DILocation(line: 591, column: 14, scope: !5782)
!5797 = !DILocation(line: 591, column: 40, scope: !5782)
!5798 = !DILocation(line: 591, column: 45, scope: !5782)
!5799 = !DILocation(line: 591, column: 51, scope: !5782)
!5800 = !DILocation(line: 591, column: 55, scope: !5782)
!5801 = !DILocation(line: 591, column: 23, scope: !5782)
!5802 = !DILocation(line: 591, column: 3, scope: !5782)
!5803 = !DILocation(line: 592, column: 14, scope: !5782)
!5804 = !DILocation(line: 592, column: 40, scope: !5782)
!5805 = !DILocation(line: 592, column: 45, scope: !5782)
!5806 = !DILocation(line: 592, column: 51, scope: !5782)
!5807 = !DILocation(line: 592, column: 55, scope: !5782)
!5808 = !DILocation(line: 592, column: 23, scope: !5782)
!5809 = !DILocation(line: 592, column: 3, scope: !5782)
!5810 = !DILocation(line: 593, column: 2, scope: !5782)
!5811 = !DILocation(line: 595, column: 14, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 594, column: 7)
!5813 = !DILocation(line: 595, column: 40, scope: !5812)
!5814 = !DILocation(line: 595, column: 45, scope: !5812)
!5815 = !DILocation(line: 595, column: 51, scope: !5812)
!5816 = !DILocation(line: 595, column: 55, scope: !5812)
!5817 = !DILocation(line: 595, column: 23, scope: !5812)
!5818 = !DILocation(line: 595, column: 3, scope: !5812)
!5819 = !DILocation(line: 596, column: 14, scope: !5812)
!5820 = !DILocation(line: 596, column: 40, scope: !5812)
!5821 = !DILocation(line: 596, column: 45, scope: !5812)
!5822 = !DILocation(line: 596, column: 51, scope: !5812)
!5823 = !DILocation(line: 596, column: 55, scope: !5812)
!5824 = !DILocation(line: 596, column: 23, scope: !5812)
!5825 = !DILocation(line: 596, column: 3, scope: !5812)
!5826 = !DILocation(line: 597, column: 14, scope: !5812)
!5827 = !DILocation(line: 597, column: 40, scope: !5812)
!5828 = !DILocation(line: 597, column: 45, scope: !5812)
!5829 = !DILocation(line: 597, column: 51, scope: !5812)
!5830 = !DILocation(line: 597, column: 55, scope: !5812)
!5831 = !DILocation(line: 597, column: 23, scope: !5812)
!5832 = !DILocation(line: 597, column: 3, scope: !5812)
!5833 = !DILocation(line: 598, column: 14, scope: !5812)
!5834 = !DILocation(line: 598, column: 40, scope: !5812)
!5835 = !DILocation(line: 598, column: 45, scope: !5812)
!5836 = !DILocation(line: 598, column: 51, scope: !5812)
!5837 = !DILocation(line: 598, column: 55, scope: !5812)
!5838 = !DILocation(line: 598, column: 23, scope: !5812)
!5839 = !DILocation(line: 598, column: 3, scope: !5812)
!5840 = !DILocation(line: 601, column: 26, scope: !5709)
!5841 = !DILocation(line: 601, column: 32, scope: !5709)
!5842 = !DILocation(line: 601, column: 35, scope: !5709)
!5843 = !DILocation(line: 601, column: 38, scope: !5709)
!5844 = !DILocation(line: 601, column: 2, scope: !5709)
!5845 = !DILocation(line: 602, column: 1, scope: !5709)
!5846 = distinct !DISubprogram(name: "CCG_grid_elem_no", scope: !567, file: !567, line: 142, type: !5847, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5847 = !DISubroutineType(types: !5848)
!5848 = !{!191, !5849, !2188, !132, !132}
!5849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5850, size: 64)
!5850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4303)
!5851 = !DILocalVariable(name: "key", arg: 1, scope: !5846, file: !567, line: 142, type: !5849)
!5852 = !DILocation(line: 142, column: 50, scope: !5846)
!5853 = !DILocalVariable(name: "elem", arg: 2, scope: !5846, file: !567, line: 142, type: !2188)
!5854 = !DILocation(line: 142, column: 64, scope: !5846)
!5855 = !DILocalVariable(name: "x", arg: 3, scope: !5846, file: !567, line: 142, type: !132)
!5856 = !DILocation(line: 142, column: 74, scope: !5846)
!5857 = !DILocalVariable(name: "y", arg: 4, scope: !5846, file: !567, line: 142, type: !132)
!5858 = !DILocation(line: 142, column: 81, scope: !5846)
!5859 = !DILocation(line: 144, column: 21, scope: !5846)
!5860 = !DILocation(line: 144, column: 40, scope: !5846)
!5861 = !DILocation(line: 144, column: 45, scope: !5846)
!5862 = !DILocation(line: 144, column: 51, scope: !5846)
!5863 = !DILocation(line: 144, column: 54, scope: !5846)
!5864 = !DILocation(line: 144, column: 26, scope: !5846)
!5865 = !DILocation(line: 144, column: 9, scope: !5846)
!5866 = !DILocation(line: 144, column: 2, scope: !5846)
!5867 = distinct !DISubprogram(name: "CCG_grid_elem_co", scope: !567, file: !567, line: 137, type: !5847, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5868 = !DILocalVariable(name: "key", arg: 1, scope: !5867, file: !567, line: 137, type: !5849)
!5869 = !DILocation(line: 137, column: 50, scope: !5867)
!5870 = !DILocalVariable(name: "elem", arg: 2, scope: !5867, file: !567, line: 137, type: !2188)
!5871 = !DILocation(line: 137, column: 64, scope: !5867)
!5872 = !DILocalVariable(name: "x", arg: 3, scope: !5867, file: !567, line: 137, type: !132)
!5873 = !DILocation(line: 137, column: 74, scope: !5867)
!5874 = !DILocalVariable(name: "y", arg: 4, scope: !5867, file: !567, line: 137, type: !132)
!5875 = !DILocation(line: 137, column: 81, scope: !5867)
!5876 = !DILocation(line: 139, column: 21, scope: !5867)
!5877 = !DILocation(line: 139, column: 40, scope: !5867)
!5878 = !DILocation(line: 139, column: 45, scope: !5867)
!5879 = !DILocation(line: 139, column: 51, scope: !5867)
!5880 = !DILocation(line: 139, column: 54, scope: !5867)
!5881 = !DILocation(line: 139, column: 26, scope: !5867)
!5882 = !DILocation(line: 139, column: 9, scope: !5867)
!5883 = !DILocation(line: 139, column: 2, scope: !5867)
!5884 = distinct !DISubprogram(name: "CCG_elem_no", scope: !567, file: !567, line: 114, type: !5885, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!191, !5849, !2188}
!5887 = !DILocalVariable(name: "key", arg: 1, scope: !5884, file: !567, line: 114, type: !5849)
!5888 = !DILocation(line: 114, column: 45, scope: !5884)
!5889 = !DILocalVariable(name: "elem", arg: 2, scope: !5884, file: !567, line: 114, type: !2188)
!5890 = !DILocation(line: 114, column: 59, scope: !5884)
!5891 = !DILocation(line: 117, column: 27, scope: !5884)
!5892 = !DILocation(line: 117, column: 19, scope: !5884)
!5893 = !DILocation(line: 117, column: 34, scope: !5884)
!5894 = !DILocation(line: 117, column: 39, scope: !5884)
!5895 = !DILocation(line: 117, column: 32, scope: !5884)
!5896 = !DILocation(line: 117, column: 9, scope: !5884)
!5897 = !DILocation(line: 117, column: 2, scope: !5884)
!5898 = distinct !DISubprogram(name: "CCG_grid_elem", scope: !567, file: !567, line: 131, type: !5899, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5899 = !DISubroutineType(types: !5900)
!5900 = !{!2188, !5849, !2188, !132, !132}
!5901 = !DILocalVariable(name: "key", arg: 1, scope: !5898, file: !567, line: 131, type: !5849)
!5902 = !DILocation(line: 131, column: 49, scope: !5898)
!5903 = !DILocalVariable(name: "elem", arg: 2, scope: !5898, file: !567, line: 131, type: !2188)
!5904 = !DILocation(line: 131, column: 63, scope: !5898)
!5905 = !DILocalVariable(name: "x", arg: 3, scope: !5898, file: !567, line: 131, type: !132)
!5906 = !DILocation(line: 131, column: 73, scope: !5898)
!5907 = !DILocalVariable(name: "y", arg: 4, scope: !5898, file: !567, line: 131, type: !132)
!5908 = !DILocation(line: 131, column: 80, scope: !5898)
!5909 = !DILocation(line: 134, column: 25, scope: !5898)
!5910 = !DILocation(line: 134, column: 30, scope: !5898)
!5911 = !DILocation(line: 134, column: 37, scope: !5898)
!5912 = !DILocation(line: 134, column: 41, scope: !5898)
!5913 = !DILocation(line: 134, column: 46, scope: !5898)
!5914 = !DILocation(line: 134, column: 39, scope: !5898)
!5915 = !DILocation(line: 134, column: 58, scope: !5898)
!5916 = !DILocation(line: 134, column: 56, scope: !5898)
!5917 = !DILocation(line: 134, column: 9, scope: !5898)
!5918 = !DILocation(line: 134, column: 2, scope: !5898)
!5919 = distinct !DISubprogram(name: "CCG_elem_offset", scope: !567, file: !567, line: 126, type: !5920, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5920 = !DISubroutineType(types: !5921)
!5921 = !{!2188, !5849, !2188, !132}
!5922 = !DILocalVariable(name: "key", arg: 1, scope: !5919, file: !567, line: 126, type: !5849)
!5923 = !DILocation(line: 126, column: 51, scope: !5919)
!5924 = !DILocalVariable(name: "elem", arg: 2, scope: !5919, file: !567, line: 126, type: !2188)
!5925 = !DILocation(line: 126, column: 65, scope: !5919)
!5926 = !DILocalVariable(name: "offset", arg: 3, scope: !5919, file: !567, line: 126, type: !132)
!5927 = !DILocation(line: 126, column: 75, scope: !5919)
!5928 = !DILocation(line: 128, column: 30, scope: !5919)
!5929 = !DILocation(line: 128, column: 22, scope: !5919)
!5930 = !DILocation(line: 128, column: 38, scope: !5919)
!5931 = !DILocation(line: 128, column: 43, scope: !5919)
!5932 = !DILocation(line: 128, column: 55, scope: !5919)
!5933 = !DILocation(line: 128, column: 53, scope: !5919)
!5934 = !DILocation(line: 128, column: 36, scope: !5919)
!5935 = !DILocation(line: 128, column: 9, scope: !5919)
!5936 = !DILocation(line: 128, column: 2, scope: !5919)
!5937 = distinct !DISubprogram(name: "CCG_elem_co", scope: !567, file: !567, line: 109, type: !5885, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5938 = !DILocalVariable(name: "UNUSED_key", arg: 1, scope: !5937, file: !567, line: 109, type: !5849)
!5939 = !DILocation(line: 109, column: 45, scope: !5937)
!5940 = !DILocalVariable(name: "elem", arg: 2, scope: !5937, file: !567, line: 109, type: !2188)
!5941 = !DILocation(line: 109, column: 67, scope: !5937)
!5942 = !DILocation(line: 111, column: 18, scope: !5937)
!5943 = !DILocation(line: 111, column: 9, scope: !5937)
!5944 = !DILocation(line: 111, column: 2, scope: !5937)
!5945 = distinct !DISubprogram(name: "interp_bilinear_mface", scope: !3, file: !3, line: 656, type: !5946, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!5946 = !DISubroutineType(types: !5947)
!5947 = !{null, !344, !2138, !419, !419, !2164, !191}
!5948 = !DILocalVariable(name: "dm", arg: 1, scope: !5945, file: !3, line: 656, type: !344)
!5949 = !DILocation(line: 656, column: 48, scope: !5945)
!5950 = !DILocalVariable(name: "mface", arg: 2, scope: !5945, file: !3, line: 656, type: !2138)
!5951 = !DILocation(line: 656, column: 59, scope: !5945)
!5952 = !DILocalVariable(name: "u", arg: 3, scope: !5945, file: !3, line: 656, type: !419)
!5953 = !DILocation(line: 656, column: 78, scope: !5945)
!5954 = !DILocalVariable(name: "v", arg: 4, scope: !5945, file: !3, line: 656, type: !419)
!5955 = !DILocation(line: 656, column: 93, scope: !5945)
!5956 = !DILocalVariable(name: "mode", arg: 5, scope: !5945, file: !3, line: 656, type: !2164)
!5957 = !DILocation(line: 656, column: 106, scope: !5945)
!5958 = !DILocalVariable(name: "res", arg: 6, scope: !5945, file: !3, line: 656, type: !191)
!5959 = !DILocation(line: 656, column: 118, scope: !5945)
!5960 = !DILocalVariable(name: "data", scope: !5945, file: !3, line: 658, type: !5738)
!5961 = !DILocation(line: 658, column: 8, scope: !5945)
!5962 = !DILocation(line: 660, column: 6, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 660, column: 6)
!5964 = !DILocation(line: 660, column: 11, scope: !5963)
!5965 = !DILocation(line: 660, column: 6, scope: !5945)
!5966 = !DILocation(line: 661, column: 3, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 660, column: 17)
!5968 = !DILocation(line: 661, column: 7, scope: !5967)
!5969 = !DILocation(line: 661, column: 17, scope: !5967)
!5970 = !DILocation(line: 661, column: 21, scope: !5967)
!5971 = !DILocation(line: 661, column: 28, scope: !5967)
!5972 = !DILocation(line: 661, column: 32, scope: !5967)
!5973 = !DILocation(line: 662, column: 3, scope: !5967)
!5974 = !DILocation(line: 662, column: 7, scope: !5967)
!5975 = !DILocation(line: 662, column: 17, scope: !5967)
!5976 = !DILocation(line: 662, column: 21, scope: !5967)
!5977 = !DILocation(line: 662, column: 28, scope: !5967)
!5978 = !DILocation(line: 662, column: 32, scope: !5967)
!5979 = !DILocation(line: 663, column: 3, scope: !5967)
!5980 = !DILocation(line: 663, column: 7, scope: !5967)
!5981 = !DILocation(line: 663, column: 17, scope: !5967)
!5982 = !DILocation(line: 663, column: 21, scope: !5967)
!5983 = !DILocation(line: 663, column: 28, scope: !5967)
!5984 = !DILocation(line: 663, column: 32, scope: !5967)
!5985 = !DILocation(line: 664, column: 3, scope: !5967)
!5986 = !DILocation(line: 664, column: 7, scope: !5967)
!5987 = !DILocation(line: 664, column: 17, scope: !5967)
!5988 = !DILocation(line: 664, column: 21, scope: !5967)
!5989 = !DILocation(line: 664, column: 28, scope: !5967)
!5990 = !DILocation(line: 664, column: 32, scope: !5967)
!5991 = !DILocation(line: 665, column: 2, scope: !5967)
!5992 = !DILocation(line: 667, column: 3, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 666, column: 7)
!5994 = !DILocation(line: 667, column: 7, scope: !5993)
!5995 = !DILocation(line: 667, column: 17, scope: !5993)
!5996 = !DILocation(line: 667, column: 21, scope: !5993)
!5997 = !DILocation(line: 667, column: 28, scope: !5993)
!5998 = !DILocation(line: 667, column: 32, scope: !5993)
!5999 = !DILocation(line: 668, column: 3, scope: !5993)
!6000 = !DILocation(line: 668, column: 7, scope: !5993)
!6001 = !DILocation(line: 668, column: 17, scope: !5993)
!6002 = !DILocation(line: 668, column: 21, scope: !5993)
!6003 = !DILocation(line: 668, column: 28, scope: !5993)
!6004 = !DILocation(line: 668, column: 32, scope: !5993)
!6005 = !DILocation(line: 669, column: 3, scope: !5993)
!6006 = !DILocation(line: 669, column: 7, scope: !5993)
!6007 = !DILocation(line: 669, column: 17, scope: !5993)
!6008 = !DILocation(line: 669, column: 21, scope: !5993)
!6009 = !DILocation(line: 669, column: 28, scope: !5993)
!6010 = !DILocation(line: 669, column: 32, scope: !5993)
!6011 = !DILocation(line: 670, column: 3, scope: !5993)
!6012 = !DILocation(line: 670, column: 7, scope: !5993)
!6013 = !DILocation(line: 670, column: 17, scope: !5993)
!6014 = !DILocation(line: 670, column: 21, scope: !5993)
!6015 = !DILocation(line: 670, column: 28, scope: !5993)
!6016 = !DILocation(line: 670, column: 32, scope: !5993)
!6017 = !DILocation(line: 673, column: 26, scope: !5945)
!6018 = !DILocation(line: 673, column: 32, scope: !5945)
!6019 = !DILocation(line: 673, column: 35, scope: !5945)
!6020 = !DILocation(line: 673, column: 38, scope: !5945)
!6021 = !DILocation(line: 673, column: 2, scope: !5945)
!6022 = !DILocation(line: 674, column: 1, scope: !5945)
!6023 = distinct !DISubprogram(name: "interp_barycentric_mface", scope: !3, file: !3, line: 678, type: !5946, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!6024 = !DILocalVariable(name: "dm", arg: 1, scope: !6023, file: !3, line: 678, type: !344)
!6025 = !DILocation(line: 678, column: 51, scope: !6023)
!6026 = !DILocalVariable(name: "mface", arg: 2, scope: !6023, file: !3, line: 678, type: !2138)
!6027 = !DILocation(line: 678, column: 62, scope: !6023)
!6028 = !DILocalVariable(name: "u", arg: 3, scope: !6023, file: !3, line: 678, type: !419)
!6029 = !DILocation(line: 678, column: 81, scope: !6023)
!6030 = !DILocalVariable(name: "v", arg: 4, scope: !6023, file: !3, line: 678, type: !419)
!6031 = !DILocation(line: 678, column: 96, scope: !6023)
!6032 = !DILocalVariable(name: "mode", arg: 5, scope: !6023, file: !3, line: 678, type: !2164)
!6033 = !DILocation(line: 678, column: 109, scope: !6023)
!6034 = !DILocalVariable(name: "res", arg: 6, scope: !6023, file: !3, line: 678, type: !191)
!6035 = !DILocation(line: 678, column: 121, scope: !6023)
!6036 = !DILocalVariable(name: "data", scope: !6023, file: !3, line: 680, type: !1171)
!6037 = !DILocation(line: 680, column: 8, scope: !6023)
!6038 = !DILocation(line: 682, column: 6, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 682, column: 6)
!6040 = !DILocation(line: 682, column: 11, scope: !6039)
!6041 = !DILocation(line: 682, column: 6, scope: !6023)
!6042 = !DILocation(line: 683, column: 3, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 682, column: 17)
!6044 = !DILocation(line: 683, column: 7, scope: !6043)
!6045 = !DILocation(line: 683, column: 17, scope: !6043)
!6046 = !DILocation(line: 683, column: 21, scope: !6043)
!6047 = !DILocation(line: 683, column: 28, scope: !6043)
!6048 = !DILocation(line: 683, column: 32, scope: !6043)
!6049 = !DILocation(line: 684, column: 3, scope: !6043)
!6050 = !DILocation(line: 684, column: 7, scope: !6043)
!6051 = !DILocation(line: 684, column: 17, scope: !6043)
!6052 = !DILocation(line: 684, column: 21, scope: !6043)
!6053 = !DILocation(line: 684, column: 28, scope: !6043)
!6054 = !DILocation(line: 684, column: 32, scope: !6043)
!6055 = !DILocation(line: 685, column: 3, scope: !6043)
!6056 = !DILocation(line: 685, column: 7, scope: !6043)
!6057 = !DILocation(line: 685, column: 17, scope: !6043)
!6058 = !DILocation(line: 685, column: 21, scope: !6043)
!6059 = !DILocation(line: 685, column: 28, scope: !6043)
!6060 = !DILocation(line: 685, column: 32, scope: !6043)
!6061 = !DILocation(line: 686, column: 2, scope: !6043)
!6062 = !DILocation(line: 688, column: 3, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 687, column: 7)
!6064 = !DILocation(line: 688, column: 7, scope: !6063)
!6065 = !DILocation(line: 688, column: 17, scope: !6063)
!6066 = !DILocation(line: 688, column: 21, scope: !6063)
!6067 = !DILocation(line: 688, column: 28, scope: !6063)
!6068 = !DILocation(line: 688, column: 32, scope: !6063)
!6069 = !DILocation(line: 689, column: 3, scope: !6063)
!6070 = !DILocation(line: 689, column: 7, scope: !6063)
!6071 = !DILocation(line: 689, column: 17, scope: !6063)
!6072 = !DILocation(line: 689, column: 21, scope: !6063)
!6073 = !DILocation(line: 689, column: 28, scope: !6063)
!6074 = !DILocation(line: 689, column: 32, scope: !6063)
!6075 = !DILocation(line: 690, column: 3, scope: !6063)
!6076 = !DILocation(line: 690, column: 7, scope: !6063)
!6077 = !DILocation(line: 690, column: 17, scope: !6063)
!6078 = !DILocation(line: 690, column: 21, scope: !6063)
!6079 = !DILocation(line: 690, column: 28, scope: !6063)
!6080 = !DILocation(line: 690, column: 32, scope: !6063)
!6081 = !DILocation(line: 693, column: 28, scope: !6023)
!6082 = !DILocation(line: 693, column: 34, scope: !6023)
!6083 = !DILocation(line: 693, column: 37, scope: !6023)
!6084 = !DILocation(line: 693, column: 40, scope: !6023)
!6085 = !DILocation(line: 693, column: 2, scope: !6023)
!6086 = !DILocation(line: 694, column: 1, scope: !6023)
!6087 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !5279, file: !5279, line: 357, type: !5280, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!6088 = !DILocalVariable(name: "r", arg: 1, scope: !6087, file: !5279, line: 357, type: !191)
!6089 = !DILocation(line: 357, column: 32, scope: !6087)
!6090 = !DILocalVariable(name: "a", arg: 2, scope: !6087, file: !5279, line: 357, type: !622)
!6091 = !DILocation(line: 357, column: 50, scope: !6087)
!6092 = !DILocalVariable(name: "b", arg: 3, scope: !6087, file: !5279, line: 357, type: !622)
!6093 = !DILocation(line: 357, column: 68, scope: !6087)
!6094 = !DILocation(line: 359, column: 9, scope: !6087)
!6095 = !DILocation(line: 359, column: 16, scope: !6087)
!6096 = !DILocation(line: 359, column: 14, scope: !6087)
!6097 = !DILocation(line: 359, column: 2, scope: !6087)
!6098 = !DILocation(line: 359, column: 7, scope: !6087)
!6099 = !DILocation(line: 360, column: 9, scope: !6087)
!6100 = !DILocation(line: 360, column: 16, scope: !6087)
!6101 = !DILocation(line: 360, column: 14, scope: !6087)
!6102 = !DILocation(line: 360, column: 2, scope: !6087)
!6103 = !DILocation(line: 360, column: 7, scope: !6087)
!6104 = !DILocation(line: 361, column: 9, scope: !6087)
!6105 = !DILocation(line: 361, column: 16, scope: !6087)
!6106 = !DILocation(line: 361, column: 14, scope: !6087)
!6107 = !DILocation(line: 361, column: 2, scope: !6087)
!6108 = !DILocation(line: 361, column: 7, scope: !6087)
!6109 = !DILocation(line: 362, column: 1, scope: !6087)
!6110 = distinct !DISubprogram(name: "build_coordinate_frame", scope: !3, file: !3, line: 1052, type: !6111, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!6111 = !DISubroutineType(types: !6112)
!6112 = !{null, !191, !191, !622}
!6113 = !DILocalVariable(name: "axisX", arg: 1, scope: !6110, file: !3, line: 1052, type: !191)
!6114 = !DILocation(line: 1052, column: 42, scope: !6110)
!6115 = !DILocalVariable(name: "axisY", arg: 2, scope: !6110, file: !3, line: 1052, type: !191)
!6116 = !DILocation(line: 1052, column: 58, scope: !6110)
!6117 = !DILocalVariable(name: "axisZ", arg: 3, scope: !6110, file: !3, line: 1052, type: !622)
!6118 = !DILocation(line: 1052, column: 80, scope: !6110)
!6119 = !DILocalVariable(name: "faX", scope: !6110, file: !3, line: 1054, type: !419)
!6120 = !DILocation(line: 1054, column: 14, scope: !6110)
!6121 = !DILocation(line: 1054, column: 26, scope: !6110)
!6122 = !DILocation(line: 1054, column: 20, scope: !6110)
!6123 = !DILocalVariable(name: "faY", scope: !6110, file: !3, line: 1055, type: !419)
!6124 = !DILocation(line: 1055, column: 14, scope: !6110)
!6125 = !DILocation(line: 1055, column: 26, scope: !6110)
!6126 = !DILocation(line: 1055, column: 20, scope: !6110)
!6127 = !DILocalVariable(name: "faZ", scope: !6110, file: !3, line: 1056, type: !419)
!6128 = !DILocation(line: 1056, column: 14, scope: !6110)
!6129 = !DILocation(line: 1056, column: 26, scope: !6110)
!6130 = !DILocation(line: 1056, column: 20, scope: !6110)
!6131 = !DILocation(line: 1058, column: 6, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 1058, column: 6)
!6133 = !DILocation(line: 1058, column: 13, scope: !6132)
!6134 = !DILocation(line: 1058, column: 10, scope: !6132)
!6135 = !DILocation(line: 1058, column: 17, scope: !6132)
!6136 = !DILocation(line: 1058, column: 20, scope: !6132)
!6137 = !DILocation(line: 1058, column: 27, scope: !6132)
!6138 = !DILocation(line: 1058, column: 24, scope: !6132)
!6139 = !DILocation(line: 1058, column: 6, scope: !6110)
!6140 = !DILocalVariable(name: "len", scope: !6141, file: !3, line: 1059, type: !419)
!6141 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 1058, column: 32)
!6142 = !DILocation(line: 1059, column: 15, scope: !6141)
!6143 = !DILocation(line: 1059, column: 27, scope: !6141)
!6144 = !DILocation(line: 1059, column: 38, scope: !6141)
!6145 = !DILocation(line: 1059, column: 36, scope: !6141)
!6146 = !DILocation(line: 1059, column: 49, scope: !6141)
!6147 = !DILocation(line: 1059, column: 60, scope: !6141)
!6148 = !DILocation(line: 1059, column: 58, scope: !6141)
!6149 = !DILocation(line: 1059, column: 47, scope: !6141)
!6150 = !DILocation(line: 1059, column: 21, scope: !6141)
!6151 = !DILocation(line: 1060, column: 3, scope: !6141)
!6152 = !DILocation(line: 1060, column: 12, scope: !6141)
!6153 = !DILocation(line: 1060, column: 28, scope: !6141)
!6154 = !DILocation(line: 1060, column: 39, scope: !6141)
!6155 = !DILocation(line: 1060, column: 37, scope: !6141)
!6156 = !DILocation(line: 1060, column: 17, scope: !6141)
!6157 = !DILocation(line: 1060, column: 26, scope: !6141)
!6158 = !DILocation(line: 1060, column: 56, scope: !6141)
!6159 = !DILocation(line: 1060, column: 55, scope: !6141)
!6160 = !DILocation(line: 1060, column: 67, scope: !6141)
!6161 = !DILocation(line: 1060, column: 65, scope: !6141)
!6162 = !DILocation(line: 1060, column: 44, scope: !6141)
!6163 = !DILocation(line: 1060, column: 53, scope: !6141)
!6164 = !DILocation(line: 1061, column: 17, scope: !6141)
!6165 = !DILocation(line: 1061, column: 24, scope: !6141)
!6166 = !DILocation(line: 1061, column: 31, scope: !6141)
!6167 = !DILocation(line: 1061, column: 3, scope: !6141)
!6168 = !DILocation(line: 1062, column: 2, scope: !6141)
!6169 = !DILocation(line: 1063, column: 11, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 1063, column: 11)
!6171 = !DILocation(line: 1063, column: 18, scope: !6170)
!6172 = !DILocation(line: 1063, column: 15, scope: !6170)
!6173 = !DILocation(line: 1063, column: 11, scope: !6132)
!6174 = !DILocalVariable(name: "len", scope: !6175, file: !3, line: 1064, type: !419)
!6175 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 1063, column: 23)
!6176 = !DILocation(line: 1064, column: 15, scope: !6175)
!6177 = !DILocation(line: 1064, column: 27, scope: !6175)
!6178 = !DILocation(line: 1064, column: 38, scope: !6175)
!6179 = !DILocation(line: 1064, column: 36, scope: !6175)
!6180 = !DILocation(line: 1064, column: 49, scope: !6175)
!6181 = !DILocation(line: 1064, column: 60, scope: !6175)
!6182 = !DILocation(line: 1064, column: 58, scope: !6175)
!6183 = !DILocation(line: 1064, column: 47, scope: !6175)
!6184 = !DILocation(line: 1064, column: 21, scope: !6175)
!6185 = !DILocation(line: 1065, column: 14, scope: !6175)
!6186 = !DILocation(line: 1065, column: 25, scope: !6175)
!6187 = !DILocation(line: 1065, column: 23, scope: !6175)
!6188 = !DILocation(line: 1065, column: 3, scope: !6175)
!6189 = !DILocation(line: 1065, column: 12, scope: !6175)
!6190 = !DILocation(line: 1065, column: 30, scope: !6175)
!6191 = !DILocation(line: 1065, column: 39, scope: !6175)
!6192 = !DILocation(line: 1065, column: 56, scope: !6175)
!6193 = !DILocation(line: 1065, column: 55, scope: !6175)
!6194 = !DILocation(line: 1065, column: 67, scope: !6175)
!6195 = !DILocation(line: 1065, column: 65, scope: !6175)
!6196 = !DILocation(line: 1065, column: 44, scope: !6175)
!6197 = !DILocation(line: 1065, column: 53, scope: !6175)
!6198 = !DILocation(line: 1066, column: 17, scope: !6175)
!6199 = !DILocation(line: 1066, column: 24, scope: !6175)
!6200 = !DILocation(line: 1066, column: 31, scope: !6175)
!6201 = !DILocation(line: 1066, column: 3, scope: !6175)
!6202 = !DILocation(line: 1067, column: 2, scope: !6175)
!6203 = !DILocalVariable(name: "len", scope: !6204, file: !3, line: 1069, type: !419)
!6204 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 1068, column: 7)
!6205 = !DILocation(line: 1069, column: 15, scope: !6204)
!6206 = !DILocation(line: 1069, column: 27, scope: !6204)
!6207 = !DILocation(line: 1069, column: 38, scope: !6204)
!6208 = !DILocation(line: 1069, column: 36, scope: !6204)
!6209 = !DILocation(line: 1069, column: 49, scope: !6204)
!6210 = !DILocation(line: 1069, column: 60, scope: !6204)
!6211 = !DILocation(line: 1069, column: 58, scope: !6204)
!6212 = !DILocation(line: 1069, column: 47, scope: !6204)
!6213 = !DILocation(line: 1069, column: 21, scope: !6204)
!6214 = !DILocation(line: 1070, column: 14, scope: !6204)
!6215 = !DILocation(line: 1070, column: 25, scope: !6204)
!6216 = !DILocation(line: 1070, column: 23, scope: !6204)
!6217 = !DILocation(line: 1070, column: 3, scope: !6204)
!6218 = !DILocation(line: 1070, column: 12, scope: !6204)
!6219 = !DILocation(line: 1070, column: 42, scope: !6204)
!6220 = !DILocation(line: 1070, column: 41, scope: !6204)
!6221 = !DILocation(line: 1070, column: 53, scope: !6204)
!6222 = !DILocation(line: 1070, column: 51, scope: !6204)
!6223 = !DILocation(line: 1070, column: 30, scope: !6204)
!6224 = !DILocation(line: 1070, column: 39, scope: !6204)
!6225 = !DILocation(line: 1070, column: 58, scope: !6204)
!6226 = !DILocation(line: 1070, column: 67, scope: !6204)
!6227 = !DILocation(line: 1071, column: 17, scope: !6204)
!6228 = !DILocation(line: 1071, column: 24, scope: !6204)
!6229 = !DILocation(line: 1071, column: 31, scope: !6204)
!6230 = !DILocation(line: 1071, column: 3, scope: !6204)
!6231 = !DILocation(line: 1073, column: 1, scope: !6110)
!6232 = distinct !DISubprogram(name: "get_ao_random2", scope: !3, file: !3, line: 925, type: !6233, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!6233 = !DISubroutineType(types: !6234)
!6234 = !{!837, !2164}
!6235 = !DILocalVariable(name: "i", arg: 1, scope: !6232, file: !3, line: 925, type: !2164)
!6236 = !DILocation(line: 925, column: 48, scope: !6232)
!6237 = !DILocation(line: 927, column: 27, scope: !6232)
!6238 = !DILocation(line: 927, column: 29, scope: !6232)
!6239 = !DILocation(line: 927, column: 9, scope: !6232)
!6240 = !DILocation(line: 927, column: 2, scope: !6232)
!6241 = distinct !DISubprogram(name: "get_ao_random1", scope: !3, file: !3, line: 920, type: !6233, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!6242 = !DILocalVariable(name: "i", arg: 1, scope: !6241, file: !3, line: 920, type: !2164)
!6243 = !DILocation(line: 920, column: 48, scope: !6241)
!6244 = !DILocation(line: 922, column: 27, scope: !6241)
!6245 = !DILocation(line: 922, column: 29, scope: !6241)
!6246 = !DILocation(line: 922, column: 9, scope: !6241)
!6247 = !DILocation(line: 922, column: 2, scope: !6241)
!6248 = distinct !DISubprogram(name: "trace_ao_ray", scope: !3, file: !3, line: 1076, type: !6249, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!6249 = !DISubroutineType(types: !6250)
!6250 = !{!132, !2199, !191, !191}
!6251 = !DILocalVariable(name: "ao_data", arg: 1, scope: !6248, file: !3, line: 1076, type: !2199)
!6252 = !DILocation(line: 1076, column: 38, scope: !6248)
!6253 = !DILocalVariable(name: "ray_start", arg: 2, scope: !6248, file: !3, line: 1076, type: !191)
!6254 = !DILocation(line: 1076, column: 53, scope: !6248)
!6255 = !DILocalVariable(name: "ray_direction", arg: 3, scope: !6248, file: !3, line: 1076, type: !191)
!6256 = !DILocation(line: 1076, column: 73, scope: !6248)
!6257 = !DILocalVariable(name: "isect", scope: !6248, file: !3, line: 1078, type: !6258)
!6258 = !DIDerivedType(tag: DW_TAG_typedef, name: "Isect", file: !2226, line: 104, baseType: !2225)
!6259 = !DILocation(line: 1078, column: 8, scope: !6248)
!6260 = !DILocation(line: 1080, column: 8, scope: !6248)
!6261 = !DILocation(line: 1080, column: 13, scope: !6248)
!6262 = !DILocation(line: 1081, column: 19, scope: !6248)
!6263 = !DILocation(line: 1081, column: 13, scope: !6248)
!6264 = !DILocation(line: 1081, column: 26, scope: !6248)
!6265 = !DILocation(line: 1081, column: 2, scope: !6248)
!6266 = !DILocation(line: 1082, column: 19, scope: !6248)
!6267 = !DILocation(line: 1082, column: 13, scope: !6248)
!6268 = !DILocation(line: 1082, column: 24, scope: !6248)
!6269 = !DILocation(line: 1082, column: 2, scope: !6248)
!6270 = !DILocation(line: 1083, column: 8, scope: !6248)
!6271 = !DILocation(line: 1083, column: 12, scope: !6248)
!6272 = !DILocation(line: 1085, column: 21, scope: !6248)
!6273 = !DILocation(line: 1085, column: 15, scope: !6248)
!6274 = !DILocation(line: 1085, column: 2, scope: !6248)
!6275 = !DILocation(line: 1087, column: 30, scope: !6248)
!6276 = !DILocation(line: 1087, column: 39, scope: !6248)
!6277 = !DILocation(line: 1087, column: 9, scope: !6248)
!6278 = !DILocation(line: 1087, column: 2, scope: !6248)
!6279 = distinct !DISubprogram(name: "init_ao_random", scope: !3, file: !3, line: 910, type: !6280, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!6280 = !DISubroutineType(types: !6281)
!6281 = !{null}
!6282 = !DILocalVariable(name: "i", scope: !6279, file: !3, line: 912, type: !132)
!6283 = !DILocation(line: 912, column: 6, scope: !6279)
!6284 = !DILocation(line: 914, column: 9, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 914, column: 2)
!6286 = !DILocation(line: 914, column: 7, scope: !6285)
!6287 = !DILocation(line: 914, column: 14, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 914, column: 2)
!6289 = !DILocation(line: 914, column: 16, scope: !6288)
!6290 = !DILocation(line: 914, column: 2, scope: !6285)
!6291 = !DILocation(line: 915, column: 26, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 914, column: 46)
!6293 = !DILocation(line: 915, column: 33, scope: !6292)
!6294 = !DILocation(line: 915, column: 21, scope: !6292)
!6295 = !DILocation(line: 915, column: 3, scope: !6292)
!6296 = !DILocation(line: 915, column: 24, scope: !6292)
!6297 = !DILocation(line: 916, column: 26, scope: !6292)
!6298 = !DILocation(line: 916, column: 33, scope: !6292)
!6299 = !DILocation(line: 916, column: 21, scope: !6292)
!6300 = !DILocation(line: 916, column: 3, scope: !6292)
!6301 = !DILocation(line: 916, column: 24, scope: !6292)
!6302 = !DILocation(line: 917, column: 2, scope: !6292)
!6303 = !DILocation(line: 914, column: 42, scope: !6288)
!6304 = !DILocation(line: 914, column: 2, scope: !6288)
!6305 = distinct !{!6305, !6290, !6306}
!6306 = !DILocation(line: 917, column: 2, scope: !6285)
!6307 = !DILocation(line: 918, column: 1, scope: !6279)
!6308 = distinct !DISubprogram(name: "create_ao_raytree", scope: !3, file: !3, line: 962, type: !6309, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{null, !338, !2199}
!6311 = !DILocalVariable(name: "bkr", arg: 1, scope: !6308, file: !3, line: 962, type: !338)
!6312 = !DILocation(line: 962, column: 51, scope: !6308)
!6313 = !DILocalVariable(name: "ao_data", arg: 2, scope: !6308, file: !3, line: 962, type: !2199)
!6314 = !DILocation(line: 962, column: 69, scope: !6308)
!6315 = !DILocalVariable(name: "hidm", scope: !6308, file: !3, line: 964, type: !344)
!6316 = !DILocation(line: 964, column: 15, scope: !6308)
!6317 = !DILocation(line: 964, column: 22, scope: !6308)
!6318 = !DILocation(line: 964, column: 27, scope: !6308)
!6319 = !DILocalVariable(name: "raytree", scope: !6308, file: !3, line: 965, type: !2209)
!6320 = !DILocation(line: 965, column: 13, scope: !6308)
!6321 = !DILocalVariable(name: "face", scope: !6308, file: !3, line: 966, type: !2307)
!6322 = !DILocation(line: 966, column: 11, scope: !6308)
!6323 = !DILocalVariable(name: "grid_data", scope: !6308, file: !3, line: 967, type: !4300)
!6324 = !DILocation(line: 967, column: 12, scope: !6308)
!6325 = !DILocalVariable(name: "key", scope: !6308, file: !3, line: 968, type: !4303)
!6326 = !DILocation(line: 968, column: 9, scope: !6308)
!6327 = !DILocalVariable(name: "num_grids", scope: !6308, file: !3, line: 969, type: !132)
!6328 = !DILocation(line: 969, column: 6, scope: !6308)
!6329 = !DILocalVariable(name: "grid_size", scope: !6308, file: !3, line: 969, type: !132)
!6330 = !DILocation(line: 969, column: 17, scope: !6308)
!6331 = !DILocalVariable(name: "num_faces", scope: !6308, file: !3, line: 969, type: !132)
!6332 = !DILocation(line: 969, column: 45, scope: !6308)
!6333 = !DILocalVariable(name: "i", scope: !6308, file: !3, line: 970, type: !132)
!6334 = !DILocation(line: 970, column: 6, scope: !6308)
!6335 = !DILocation(line: 972, column: 14, scope: !6308)
!6336 = !DILocation(line: 972, column: 20, scope: !6308)
!6337 = !DILocation(line: 972, column: 32, scope: !6308)
!6338 = !DILocation(line: 972, column: 12, scope: !6308)
!6339 = !DILocation(line: 973, column: 14, scope: !6308)
!6340 = !DILocation(line: 973, column: 20, scope: !6308)
!6341 = !DILocation(line: 973, column: 32, scope: !6308)
!6342 = !DILocation(line: 973, column: 12, scope: !6308)
!6343 = !DILocation(line: 974, column: 14, scope: !6308)
!6344 = !DILocation(line: 974, column: 20, scope: !6308)
!6345 = !DILocation(line: 974, column: 32, scope: !6308)
!6346 = !DILocation(line: 974, column: 12, scope: !6308)
!6347 = !DILocation(line: 975, column: 2, scope: !6308)
!6348 = !DILocation(line: 975, column: 8, scope: !6308)
!6349 = !DILocation(line: 975, column: 19, scope: !6308)
!6350 = !DILocation(line: 978, column: 14, scope: !6308)
!6351 = !DILocation(line: 978, column: 27, scope: !6308)
!6352 = !DILocation(line: 978, column: 37, scope: !6308)
!6353 = !DILocation(line: 978, column: 24, scope: !6308)
!6354 = !DILocation(line: 978, column: 45, scope: !6308)
!6355 = !DILocation(line: 978, column: 55, scope: !6308)
!6356 = !DILocation(line: 978, column: 42, scope: !6308)
!6357 = !DILocation(line: 978, column: 12, scope: !6308)
!6358 = !DILocation(line: 980, column: 51, scope: !6308)
!6359 = !DILocation(line: 980, column: 56, scope: !6308)
!6360 = !DILocation(line: 980, column: 76, scope: !6308)
!6361 = !DILocation(line: 980, column: 87, scope: !6308)
!6362 = !DILocation(line: 980, column: 92, scope: !6308)
!6363 = !DILocation(line: 980, column: 31, scope: !6308)
!6364 = !DILocation(line: 980, column: 12, scope: !6308)
!6365 = !DILocation(line: 980, column: 21, scope: !6308)
!6366 = !DILocation(line: 980, column: 29, scope: !6308)
!6367 = !DILocation(line: 980, column: 10, scope: !6308)
!6368 = !DILocation(line: 981, column: 41, scope: !6308)
!6369 = !DILocation(line: 981, column: 53, scope: !6308)
!6370 = !DILocation(line: 981, column: 63, scope: !6308)
!6371 = !DILocation(line: 981, column: 29, scope: !6308)
!6372 = !DILocation(line: 981, column: 9, scope: !6308)
!6373 = !DILocation(line: 981, column: 18, scope: !6308)
!6374 = !DILocation(line: 981, column: 27, scope: !6308)
!6375 = !DILocation(line: 981, column: 7, scope: !6308)
!6376 = !DILocation(line: 983, column: 9, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6308, file: !3, line: 983, column: 2)
!6378 = !DILocation(line: 983, column: 7, scope: !6377)
!6379 = !DILocation(line: 983, column: 14, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 983, column: 2)
!6381 = !DILocation(line: 983, column: 18, scope: !6380)
!6382 = !DILocation(line: 983, column: 16, scope: !6380)
!6383 = !DILocation(line: 983, column: 2, scope: !6377)
!6384 = !DILocalVariable(name: "x", scope: !6385, file: !3, line: 984, type: !132)
!6385 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 983, column: 34)
!6386 = !DILocation(line: 984, column: 7, scope: !6385)
!6387 = !DILocalVariable(name: "y", scope: !6385, file: !3, line: 984, type: !132)
!6388 = !DILocation(line: 984, column: 10, scope: !6385)
!6389 = !DILocation(line: 985, column: 10, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 985, column: 3)
!6391 = !DILocation(line: 985, column: 8, scope: !6390)
!6392 = !DILocation(line: 985, column: 15, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 985, column: 3)
!6394 = !DILocation(line: 985, column: 19, scope: !6393)
!6395 = !DILocation(line: 985, column: 29, scope: !6393)
!6396 = !DILocation(line: 985, column: 17, scope: !6393)
!6397 = !DILocation(line: 985, column: 3, scope: !6390)
!6398 = !DILocation(line: 986, column: 11, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 986, column: 4)
!6400 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 985, column: 39)
!6401 = !DILocation(line: 986, column: 9, scope: !6399)
!6402 = !DILocation(line: 986, column: 16, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 986, column: 4)
!6404 = !DILocation(line: 986, column: 20, scope: !6403)
!6405 = !DILocation(line: 986, column: 30, scope: !6403)
!6406 = !DILocation(line: 986, column: 18, scope: !6403)
!6407 = !DILocation(line: 986, column: 4, scope: !6399)
!6408 = !DILocalVariable(name: "co", scope: !6409, file: !3, line: 987, type: !5738)
!6409 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 986, column: 40)
!6410 = !DILocation(line: 987, column: 11, scope: !6409)
!6411 = !DILocation(line: 989, column: 16, scope: !6409)
!6412 = !DILocation(line: 989, column: 46, scope: !6409)
!6413 = !DILocation(line: 989, column: 56, scope: !6409)
!6414 = !DILocation(line: 989, column: 60, scope: !6409)
!6415 = !DILocation(line: 989, column: 63, scope: !6409)
!6416 = !DILocation(line: 989, column: 23, scope: !6409)
!6417 = !DILocation(line: 989, column: 5, scope: !6409)
!6418 = !DILocation(line: 990, column: 16, scope: !6409)
!6419 = !DILocation(line: 990, column: 46, scope: !6409)
!6420 = !DILocation(line: 990, column: 56, scope: !6409)
!6421 = !DILocation(line: 990, column: 60, scope: !6409)
!6422 = !DILocation(line: 990, column: 63, scope: !6409)
!6423 = !DILocation(line: 990, column: 65, scope: !6409)
!6424 = !DILocation(line: 990, column: 23, scope: !6409)
!6425 = !DILocation(line: 990, column: 5, scope: !6409)
!6426 = !DILocation(line: 991, column: 16, scope: !6409)
!6427 = !DILocation(line: 991, column: 46, scope: !6409)
!6428 = !DILocation(line: 991, column: 56, scope: !6409)
!6429 = !DILocation(line: 991, column: 60, scope: !6409)
!6430 = !DILocation(line: 991, column: 62, scope: !6409)
!6431 = !DILocation(line: 991, column: 67, scope: !6409)
!6432 = !DILocation(line: 991, column: 69, scope: !6409)
!6433 = !DILocation(line: 991, column: 23, scope: !6409)
!6434 = !DILocation(line: 991, column: 5, scope: !6409)
!6435 = !DILocation(line: 992, column: 16, scope: !6409)
!6436 = !DILocation(line: 992, column: 46, scope: !6409)
!6437 = !DILocation(line: 992, column: 56, scope: !6409)
!6438 = !DILocation(line: 992, column: 60, scope: !6409)
!6439 = !DILocation(line: 992, column: 62, scope: !6409)
!6440 = !DILocation(line: 992, column: 67, scope: !6409)
!6441 = !DILocation(line: 992, column: 23, scope: !6409)
!6442 = !DILocation(line: 992, column: 5, scope: !6409)
!6443 = !DILocation(line: 994, column: 28, scope: !6409)
!6444 = !DILocation(line: 994, column: 34, scope: !6409)
!6445 = !DILocation(line: 994, column: 43, scope: !6409)
!6446 = !DILocation(line: 994, column: 49, scope: !6409)
!6447 = !DILocation(line: 994, column: 56, scope: !6409)
!6448 = !DILocation(line: 994, column: 63, scope: !6409)
!6449 = !DILocation(line: 994, column: 70, scope: !6409)
!6450 = !DILocation(line: 994, column: 5, scope: !6409)
!6451 = !DILocation(line: 995, column: 22, scope: !6409)
!6452 = !DILocation(line: 995, column: 31, scope: !6409)
!6453 = !DILocation(line: 995, column: 5, scope: !6409)
!6454 = !DILocation(line: 997, column: 9, scope: !6409)
!6455 = !DILocation(line: 998, column: 4, scope: !6409)
!6456 = !DILocation(line: 986, column: 36, scope: !6403)
!6457 = !DILocation(line: 986, column: 4, scope: !6403)
!6458 = distinct !{!6458, !6407, !6459}
!6459 = !DILocation(line: 998, column: 4, scope: !6399)
!6460 = !DILocation(line: 999, column: 3, scope: !6400)
!6461 = !DILocation(line: 985, column: 35, scope: !6393)
!6462 = !DILocation(line: 985, column: 3, scope: !6393)
!6463 = distinct !{!6463, !6397, !6464}
!6464 = !DILocation(line: 999, column: 3, scope: !6390)
!6465 = !DILocation(line: 1000, column: 2, scope: !6385)
!6466 = !DILocation(line: 983, column: 30, scope: !6380)
!6467 = !DILocation(line: 983, column: 2, scope: !6380)
!6468 = distinct !{!6468, !6383, !6469}
!6469 = !DILocation(line: 1000, column: 2, scope: !6377)
!6470 = !DILocation(line: 1002, column: 20, scope: !6308)
!6471 = !DILocation(line: 1002, column: 2, scope: !6308)
!6472 = !DILocation(line: 1003, column: 1, scope: !6308)
!6473 = distinct !DISubprogram(name: "build_permutation_table", scope: !3, file: !3, line: 930, type: !6474, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2334)
!6474 = !DISubroutineType(types: !6475)
!6475 = !{null, !2206, !2206, !2164, !2164}
!6476 = !DILocalVariable(name: "permutation", arg: 1, scope: !6473, file: !3, line: 930, type: !2206)
!6477 = !DILocation(line: 930, column: 52, scope: !6473)
!6478 = !DILocalVariable(name: "temp_permutation", arg: 2, scope: !6473, file: !3, line: 930, type: !2206)
!6479 = !DILocation(line: 930, column: 82, scope: !6473)
!6480 = !DILocalVariable(name: "number_of_rays", arg: 3, scope: !6473, file: !3, line: 931, type: !2164)
!6481 = !DILocation(line: 931, column: 47, scope: !6473)
!6482 = !DILocalVariable(name: "is_first_perm_table", arg: 4, scope: !6473, file: !3, line: 931, type: !2164)
!6483 = !DILocation(line: 931, column: 73, scope: !6473)
!6484 = !DILocalVariable(name: "i", scope: !6473, file: !3, line: 933, type: !132)
!6485 = !DILocation(line: 933, column: 6, scope: !6473)
!6486 = !DILocalVariable(name: "k", scope: !6473, file: !3, line: 933, type: !132)
!6487 = !DILocation(line: 933, column: 9, scope: !6473)
!6488 = !DILocation(line: 935, column: 9, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 935, column: 2)
!6490 = !DILocation(line: 935, column: 7, scope: !6489)
!6491 = !DILocation(line: 935, column: 14, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 935, column: 2)
!6493 = !DILocation(line: 935, column: 18, scope: !6492)
!6494 = !DILocation(line: 935, column: 16, scope: !6492)
!6495 = !DILocation(line: 935, column: 2, scope: !6489)
!6496 = !DILocation(line: 936, column: 25, scope: !6492)
!6497 = !DILocation(line: 936, column: 3, scope: !6492)
!6498 = !DILocation(line: 936, column: 20, scope: !6492)
!6499 = !DILocation(line: 936, column: 23, scope: !6492)
!6500 = !DILocation(line: 935, column: 35, scope: !6492)
!6501 = !DILocation(line: 935, column: 2, scope: !6492)
!6502 = distinct !{!6502, !6495, !6503}
!6503 = !DILocation(line: 936, column: 25, scope: !6489)
!6504 = !DILocation(line: 938, column: 9, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 938, column: 2)
!6506 = !DILocation(line: 938, column: 7, scope: !6505)
!6507 = !DILocation(line: 938, column: 14, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 938, column: 2)
!6509 = !DILocation(line: 938, column: 18, scope: !6508)
!6510 = !DILocation(line: 938, column: 16, scope: !6508)
!6511 = !DILocation(line: 938, column: 2, scope: !6505)
!6512 = !DILocalVariable(name: "nr_entries_left", scope: !6513, file: !3, line: 939, type: !6514)
!6513 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 938, column: 39)
!6514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!6515 = !DILocation(line: 939, column: 22, scope: !6513)
!6516 = !DILocation(line: 939, column: 40, scope: !6513)
!6517 = !DILocation(line: 939, column: 57, scope: !6513)
!6518 = !DILocation(line: 939, column: 55, scope: !6513)
!6519 = !DILocalVariable(name: "rnd", scope: !6513, file: !3, line: 940, type: !837)
!6520 = !DILocation(line: 940, column: 18, scope: !6513)
!6521 = !DILocation(line: 940, column: 24, scope: !6513)
!6522 = !DILocation(line: 940, column: 44, scope: !6513)
!6523 = !DILocation(line: 940, column: 70, scope: !6513)
!6524 = !DILocation(line: 940, column: 55, scope: !6513)
!6525 = !DILocation(line: 940, column: 90, scope: !6513)
!6526 = !DILocation(line: 940, column: 75, scope: !6513)
!6527 = !DILocalVariable(name: "entry", scope: !6513, file: !3, line: 941, type: !3840)
!6528 = !DILocation(line: 941, column: 24, scope: !6513)
!6529 = !DILocation(line: 941, column: 32, scope: !6513)
!6530 = !DILocation(line: 941, column: 38, scope: !6513)
!6531 = !DILocation(line: 941, column: 36, scope: !6513)
!6532 = !DILocation(line: 944, column: 20, scope: !6513)
!6533 = !DILocation(line: 944, column: 37, scope: !6513)
!6534 = !DILocation(line: 944, column: 3, scope: !6513)
!6535 = !DILocation(line: 944, column: 15, scope: !6513)
!6536 = !DILocation(line: 944, column: 18, scope: !6513)
!6537 = !DILocation(line: 947, column: 12, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 947, column: 3)
!6539 = !DILocation(line: 947, column: 10, scope: !6538)
!6540 = !DILocation(line: 947, column: 8, scope: !6538)
!6541 = !DILocation(line: 947, column: 19, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 947, column: 3)
!6543 = !DILocation(line: 947, column: 23, scope: !6542)
!6544 = !DILocation(line: 947, column: 39, scope: !6542)
!6545 = !DILocation(line: 947, column: 21, scope: !6542)
!6546 = !DILocation(line: 947, column: 3, scope: !6538)
!6547 = !DILocation(line: 948, column: 26, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 947, column: 49)
!6549 = !DILocation(line: 948, column: 43, scope: !6548)
!6550 = !DILocation(line: 948, column: 45, scope: !6548)
!6551 = !DILocation(line: 948, column: 4, scope: !6548)
!6552 = !DILocation(line: 948, column: 21, scope: !6548)
!6553 = !DILocation(line: 948, column: 24, scope: !6548)
!6554 = !DILocation(line: 949, column: 3, scope: !6548)
!6555 = !DILocation(line: 947, column: 45, scope: !6542)
!6556 = !DILocation(line: 947, column: 3, scope: !6542)
!6557 = distinct !{!6557, !6546, !6558}
!6558 = !DILocation(line: 949, column: 3, scope: !6538)
!6559 = !DILocation(line: 950, column: 2, scope: !6513)
!6560 = !DILocation(line: 938, column: 35, scope: !6508)
!6561 = !DILocation(line: 938, column: 2, scope: !6508)
!6562 = distinct !{!6562, !6511, !6563}
!6563 = !DILocation(line: 950, column: 2, scope: !6505)
!6564 = !DILocation(line: 960, column: 1, scope: !6473)
